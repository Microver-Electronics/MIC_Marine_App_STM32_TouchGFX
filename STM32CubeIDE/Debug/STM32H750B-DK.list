
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002c8c4  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00004750  9002cb68  9002cb68  0004cb68  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000030  900312b8  900312b8  000512b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  900312e8  900312e8  0020f5c8  2**0
                  CONTENTS
  6 .ARM          00000008  900312e8  900312e8  000512e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  900312f0  900312f0  0020f5c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   0000001c  900312f0  900312f0  000512f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9003130c  9003130c  0005130c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000148  24000000  90031314  00060000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 CCMRAM        00005a00  24000148  9003145c  00060148  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00023590  24005b48  90036e5c  00065b48  2**3
                  ALLOC
 13 ._user_heap_stack 00002000  240290d8  90036e5c  000690d8  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  0020f5c8  2**0
                  CONTENTS, READONLY
 15 FontFlashSection 00000be8  90200000  90200000  00070000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 00000088  90200be8  90200be8  00070be8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 ExtFlashSection 0019e958  90200c70  90200c70  00070c70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00210000  2**2
                  ALLOC
 19 Video_RGB_Buffer 00043800  d00bf400  d00bf400  00210000  2**2
                  ALLOC
 20 .debug_line   00090bb0  00000000  00000000  0020f5f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_info   0012ec1c  00000000  00000000  002a01a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_abbrev 0001c45b  00000000  00000000  003cedc2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_aranges 00003c98  00000000  00000000  003eb220  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    001b659b  00000000  00000000  003eeeb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_ranges 000111e8  00000000  00000000  005a5458  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0004e23d  00000000  00000000  005b6640  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000cf  00000000  00000000  0060487d  2**0
                  CONTENTS, READONLY
 28 .debug_frame  0000c2dc  00000000  00000000  0060494c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_loc    0006cafb  00000000  00000000  00610c28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005b48 	.word	0x24005b48
900002bc:	00000000 	.word	0x00000000
900002c0:	9002cb4c 	.word	0x9002cb4c

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005b4c 	.word	0x24005b4c
900002dc:	9002cb4c 	.word	0x9002cb4c

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	; 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	; 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	; 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	; 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	; 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	; 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_uldivmod>:
900006f8:	b953      	cbnz	r3, 90000710 <__aeabi_uldivmod+0x18>
900006fa:	b94a      	cbnz	r2, 90000710 <__aeabi_uldivmod+0x18>
900006fc:	2900      	cmp	r1, #0
900006fe:	bf08      	it	eq
90000700:	2800      	cmpeq	r0, #0
90000702:	bf1c      	itt	ne
90000704:	f04f 31ff 	movne.w	r1, #4294967295
90000708:	f04f 30ff 	movne.w	r0, #4294967295
9000070c:	f000 b974 	b.w	900009f8 <__aeabi_idiv0>
90000710:	f1ad 0c08 	sub.w	ip, sp, #8
90000714:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000718:	f000 f806 	bl	90000728 <__udivmoddi4>
9000071c:	f8dd e004 	ldr.w	lr, [sp, #4]
90000720:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000724:	b004      	add	sp, #16
90000726:	4770      	bx	lr

90000728 <__udivmoddi4>:
90000728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000072c:	9d08      	ldr	r5, [sp, #32]
9000072e:	4604      	mov	r4, r0
90000730:	468e      	mov	lr, r1
90000732:	2b00      	cmp	r3, #0
90000734:	d14d      	bne.n	900007d2 <__udivmoddi4+0xaa>
90000736:	428a      	cmp	r2, r1
90000738:	4694      	mov	ip, r2
9000073a:	d969      	bls.n	90000810 <__udivmoddi4+0xe8>
9000073c:	fab2 f282 	clz	r2, r2
90000740:	b152      	cbz	r2, 90000758 <__udivmoddi4+0x30>
90000742:	fa01 f302 	lsl.w	r3, r1, r2
90000746:	f1c2 0120 	rsb	r1, r2, #32
9000074a:	fa20 f101 	lsr.w	r1, r0, r1
9000074e:	fa0c fc02 	lsl.w	ip, ip, r2
90000752:	ea41 0e03 	orr.w	lr, r1, r3
90000756:	4094      	lsls	r4, r2
90000758:	ea4f 481c 	mov.w	r8, ip, lsr #16
9000075c:	0c21      	lsrs	r1, r4, #16
9000075e:	fbbe f6f8 	udiv	r6, lr, r8
90000762:	fa1f f78c 	uxth.w	r7, ip
90000766:	fb08 e316 	mls	r3, r8, r6, lr
9000076a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
9000076e:	fb06 f107 	mul.w	r1, r6, r7
90000772:	4299      	cmp	r1, r3
90000774:	d90a      	bls.n	9000078c <__udivmoddi4+0x64>
90000776:	eb1c 0303 	adds.w	r3, ip, r3
9000077a:	f106 30ff 	add.w	r0, r6, #4294967295
9000077e:	f080 811f 	bcs.w	900009c0 <__udivmoddi4+0x298>
90000782:	4299      	cmp	r1, r3
90000784:	f240 811c 	bls.w	900009c0 <__udivmoddi4+0x298>
90000788:	3e02      	subs	r6, #2
9000078a:	4463      	add	r3, ip
9000078c:	1a5b      	subs	r3, r3, r1
9000078e:	b2a4      	uxth	r4, r4
90000790:	fbb3 f0f8 	udiv	r0, r3, r8
90000794:	fb08 3310 	mls	r3, r8, r0, r3
90000798:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
9000079c:	fb00 f707 	mul.w	r7, r0, r7
900007a0:	42a7      	cmp	r7, r4
900007a2:	d90a      	bls.n	900007ba <__udivmoddi4+0x92>
900007a4:	eb1c 0404 	adds.w	r4, ip, r4
900007a8:	f100 33ff 	add.w	r3, r0, #4294967295
900007ac:	f080 810a 	bcs.w	900009c4 <__udivmoddi4+0x29c>
900007b0:	42a7      	cmp	r7, r4
900007b2:	f240 8107 	bls.w	900009c4 <__udivmoddi4+0x29c>
900007b6:	4464      	add	r4, ip
900007b8:	3802      	subs	r0, #2
900007ba:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
900007be:	1be4      	subs	r4, r4, r7
900007c0:	2600      	movs	r6, #0
900007c2:	b11d      	cbz	r5, 900007cc <__udivmoddi4+0xa4>
900007c4:	40d4      	lsrs	r4, r2
900007c6:	2300      	movs	r3, #0
900007c8:	e9c5 4300 	strd	r4, r3, [r5]
900007cc:	4631      	mov	r1, r6
900007ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900007d2:	428b      	cmp	r3, r1
900007d4:	d909      	bls.n	900007ea <__udivmoddi4+0xc2>
900007d6:	2d00      	cmp	r5, #0
900007d8:	f000 80ef 	beq.w	900009ba <__udivmoddi4+0x292>
900007dc:	2600      	movs	r6, #0
900007de:	e9c5 0100 	strd	r0, r1, [r5]
900007e2:	4630      	mov	r0, r6
900007e4:	4631      	mov	r1, r6
900007e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900007ea:	fab3 f683 	clz	r6, r3
900007ee:	2e00      	cmp	r6, #0
900007f0:	d14a      	bne.n	90000888 <__udivmoddi4+0x160>
900007f2:	428b      	cmp	r3, r1
900007f4:	d302      	bcc.n	900007fc <__udivmoddi4+0xd4>
900007f6:	4282      	cmp	r2, r0
900007f8:	f200 80f9 	bhi.w	900009ee <__udivmoddi4+0x2c6>
900007fc:	1a84      	subs	r4, r0, r2
900007fe:	eb61 0303 	sbc.w	r3, r1, r3
90000802:	2001      	movs	r0, #1
90000804:	469e      	mov	lr, r3
90000806:	2d00      	cmp	r5, #0
90000808:	d0e0      	beq.n	900007cc <__udivmoddi4+0xa4>
9000080a:	e9c5 4e00 	strd	r4, lr, [r5]
9000080e:	e7dd      	b.n	900007cc <__udivmoddi4+0xa4>
90000810:	b902      	cbnz	r2, 90000814 <__udivmoddi4+0xec>
90000812:	deff      	udf	#255	; 0xff
90000814:	fab2 f282 	clz	r2, r2
90000818:	2a00      	cmp	r2, #0
9000081a:	f040 8092 	bne.w	90000942 <__udivmoddi4+0x21a>
9000081e:	eba1 010c 	sub.w	r1, r1, ip
90000822:	ea4f 471c 	mov.w	r7, ip, lsr #16
90000826:	fa1f fe8c 	uxth.w	lr, ip
9000082a:	2601      	movs	r6, #1
9000082c:	0c20      	lsrs	r0, r4, #16
9000082e:	fbb1 f3f7 	udiv	r3, r1, r7
90000832:	fb07 1113 	mls	r1, r7, r3, r1
90000836:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
9000083a:	fb0e f003 	mul.w	r0, lr, r3
9000083e:	4288      	cmp	r0, r1
90000840:	d908      	bls.n	90000854 <__udivmoddi4+0x12c>
90000842:	eb1c 0101 	adds.w	r1, ip, r1
90000846:	f103 38ff 	add.w	r8, r3, #4294967295
9000084a:	d202      	bcs.n	90000852 <__udivmoddi4+0x12a>
9000084c:	4288      	cmp	r0, r1
9000084e:	f200 80cb 	bhi.w	900009e8 <__udivmoddi4+0x2c0>
90000852:	4643      	mov	r3, r8
90000854:	1a09      	subs	r1, r1, r0
90000856:	b2a4      	uxth	r4, r4
90000858:	fbb1 f0f7 	udiv	r0, r1, r7
9000085c:	fb07 1110 	mls	r1, r7, r0, r1
90000860:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
90000864:	fb0e fe00 	mul.w	lr, lr, r0
90000868:	45a6      	cmp	lr, r4
9000086a:	d908      	bls.n	9000087e <__udivmoddi4+0x156>
9000086c:	eb1c 0404 	adds.w	r4, ip, r4
90000870:	f100 31ff 	add.w	r1, r0, #4294967295
90000874:	d202      	bcs.n	9000087c <__udivmoddi4+0x154>
90000876:	45a6      	cmp	lr, r4
90000878:	f200 80bb 	bhi.w	900009f2 <__udivmoddi4+0x2ca>
9000087c:	4608      	mov	r0, r1
9000087e:	eba4 040e 	sub.w	r4, r4, lr
90000882:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
90000886:	e79c      	b.n	900007c2 <__udivmoddi4+0x9a>
90000888:	f1c6 0720 	rsb	r7, r6, #32
9000088c:	40b3      	lsls	r3, r6
9000088e:	fa22 fc07 	lsr.w	ip, r2, r7
90000892:	ea4c 0c03 	orr.w	ip, ip, r3
90000896:	fa20 f407 	lsr.w	r4, r0, r7
9000089a:	fa01 f306 	lsl.w	r3, r1, r6
9000089e:	431c      	orrs	r4, r3
900008a0:	40f9      	lsrs	r1, r7
900008a2:	ea4f 491c 	mov.w	r9, ip, lsr #16
900008a6:	fa00 f306 	lsl.w	r3, r0, r6
900008aa:	fbb1 f8f9 	udiv	r8, r1, r9
900008ae:	0c20      	lsrs	r0, r4, #16
900008b0:	fa1f fe8c 	uxth.w	lr, ip
900008b4:	fb09 1118 	mls	r1, r9, r8, r1
900008b8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
900008bc:	fb08 f00e 	mul.w	r0, r8, lr
900008c0:	4288      	cmp	r0, r1
900008c2:	fa02 f206 	lsl.w	r2, r2, r6
900008c6:	d90b      	bls.n	900008e0 <__udivmoddi4+0x1b8>
900008c8:	eb1c 0101 	adds.w	r1, ip, r1
900008cc:	f108 3aff 	add.w	sl, r8, #4294967295
900008d0:	f080 8088 	bcs.w	900009e4 <__udivmoddi4+0x2bc>
900008d4:	4288      	cmp	r0, r1
900008d6:	f240 8085 	bls.w	900009e4 <__udivmoddi4+0x2bc>
900008da:	f1a8 0802 	sub.w	r8, r8, #2
900008de:	4461      	add	r1, ip
900008e0:	1a09      	subs	r1, r1, r0
900008e2:	b2a4      	uxth	r4, r4
900008e4:	fbb1 f0f9 	udiv	r0, r1, r9
900008e8:	fb09 1110 	mls	r1, r9, r0, r1
900008ec:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
900008f0:	fb00 fe0e 	mul.w	lr, r0, lr
900008f4:	458e      	cmp	lr, r1
900008f6:	d908      	bls.n	9000090a <__udivmoddi4+0x1e2>
900008f8:	eb1c 0101 	adds.w	r1, ip, r1
900008fc:	f100 34ff 	add.w	r4, r0, #4294967295
90000900:	d26c      	bcs.n	900009dc <__udivmoddi4+0x2b4>
90000902:	458e      	cmp	lr, r1
90000904:	d96a      	bls.n	900009dc <__udivmoddi4+0x2b4>
90000906:	3802      	subs	r0, #2
90000908:	4461      	add	r1, ip
9000090a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
9000090e:	fba0 9402 	umull	r9, r4, r0, r2
90000912:	eba1 010e 	sub.w	r1, r1, lr
90000916:	42a1      	cmp	r1, r4
90000918:	46c8      	mov	r8, r9
9000091a:	46a6      	mov	lr, r4
9000091c:	d356      	bcc.n	900009cc <__udivmoddi4+0x2a4>
9000091e:	d053      	beq.n	900009c8 <__udivmoddi4+0x2a0>
90000920:	b15d      	cbz	r5, 9000093a <__udivmoddi4+0x212>
90000922:	ebb3 0208 	subs.w	r2, r3, r8
90000926:	eb61 010e 	sbc.w	r1, r1, lr
9000092a:	fa01 f707 	lsl.w	r7, r1, r7
9000092e:	fa22 f306 	lsr.w	r3, r2, r6
90000932:	40f1      	lsrs	r1, r6
90000934:	431f      	orrs	r7, r3
90000936:	e9c5 7100 	strd	r7, r1, [r5]
9000093a:	2600      	movs	r6, #0
9000093c:	4631      	mov	r1, r6
9000093e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000942:	f1c2 0320 	rsb	r3, r2, #32
90000946:	40d8      	lsrs	r0, r3
90000948:	fa0c fc02 	lsl.w	ip, ip, r2
9000094c:	fa21 f303 	lsr.w	r3, r1, r3
90000950:	4091      	lsls	r1, r2
90000952:	4301      	orrs	r1, r0
90000954:	ea4f 471c 	mov.w	r7, ip, lsr #16
90000958:	fa1f fe8c 	uxth.w	lr, ip
9000095c:	fbb3 f0f7 	udiv	r0, r3, r7
90000960:	fb07 3610 	mls	r6, r7, r0, r3
90000964:	0c0b      	lsrs	r3, r1, #16
90000966:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000096a:	fb00 f60e 	mul.w	r6, r0, lr
9000096e:	429e      	cmp	r6, r3
90000970:	fa04 f402 	lsl.w	r4, r4, r2
90000974:	d908      	bls.n	90000988 <__udivmoddi4+0x260>
90000976:	eb1c 0303 	adds.w	r3, ip, r3
9000097a:	f100 38ff 	add.w	r8, r0, #4294967295
9000097e:	d22f      	bcs.n	900009e0 <__udivmoddi4+0x2b8>
90000980:	429e      	cmp	r6, r3
90000982:	d92d      	bls.n	900009e0 <__udivmoddi4+0x2b8>
90000984:	3802      	subs	r0, #2
90000986:	4463      	add	r3, ip
90000988:	1b9b      	subs	r3, r3, r6
9000098a:	b289      	uxth	r1, r1
9000098c:	fbb3 f6f7 	udiv	r6, r3, r7
90000990:	fb07 3316 	mls	r3, r7, r6, r3
90000994:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
90000998:	fb06 f30e 	mul.w	r3, r6, lr
9000099c:	428b      	cmp	r3, r1
9000099e:	d908      	bls.n	900009b2 <__udivmoddi4+0x28a>
900009a0:	eb1c 0101 	adds.w	r1, ip, r1
900009a4:	f106 38ff 	add.w	r8, r6, #4294967295
900009a8:	d216      	bcs.n	900009d8 <__udivmoddi4+0x2b0>
900009aa:	428b      	cmp	r3, r1
900009ac:	d914      	bls.n	900009d8 <__udivmoddi4+0x2b0>
900009ae:	3e02      	subs	r6, #2
900009b0:	4461      	add	r1, ip
900009b2:	1ac9      	subs	r1, r1, r3
900009b4:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
900009b8:	e738      	b.n	9000082c <__udivmoddi4+0x104>
900009ba:	462e      	mov	r6, r5
900009bc:	4628      	mov	r0, r5
900009be:	e705      	b.n	900007cc <__udivmoddi4+0xa4>
900009c0:	4606      	mov	r6, r0
900009c2:	e6e3      	b.n	9000078c <__udivmoddi4+0x64>
900009c4:	4618      	mov	r0, r3
900009c6:	e6f8      	b.n	900007ba <__udivmoddi4+0x92>
900009c8:	454b      	cmp	r3, r9
900009ca:	d2a9      	bcs.n	90000920 <__udivmoddi4+0x1f8>
900009cc:	ebb9 0802 	subs.w	r8, r9, r2
900009d0:	eb64 0e0c 	sbc.w	lr, r4, ip
900009d4:	3801      	subs	r0, #1
900009d6:	e7a3      	b.n	90000920 <__udivmoddi4+0x1f8>
900009d8:	4646      	mov	r6, r8
900009da:	e7ea      	b.n	900009b2 <__udivmoddi4+0x28a>
900009dc:	4620      	mov	r0, r4
900009de:	e794      	b.n	9000090a <__udivmoddi4+0x1e2>
900009e0:	4640      	mov	r0, r8
900009e2:	e7d1      	b.n	90000988 <__udivmoddi4+0x260>
900009e4:	46d0      	mov	r8, sl
900009e6:	e77b      	b.n	900008e0 <__udivmoddi4+0x1b8>
900009e8:	3b02      	subs	r3, #2
900009ea:	4461      	add	r1, ip
900009ec:	e732      	b.n	90000854 <__udivmoddi4+0x12c>
900009ee:	4630      	mov	r0, r6
900009f0:	e709      	b.n	90000806 <__udivmoddi4+0xde>
900009f2:	4464      	add	r4, ip
900009f4:	3802      	subs	r0, #2
900009f6:	e742      	b.n	9000087e <__udivmoddi4+0x156>

900009f8 <__aeabi_idiv0>:
900009f8:	4770      	bx	lr
900009fa:	bf00      	nop

900009fc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
900009fc:	f8df d034 	ldr.w	sp, [pc, #52]	; 90000a34 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000a00:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000a02:	e003      	b.n	90000a0c <LoopCopyDataInit>

90000a04 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000a04:	4b0c      	ldr	r3, [pc, #48]	; (90000a38 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000a06:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000a08:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000a0a:	3104      	adds	r1, #4

90000a0c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000a0c:	480b      	ldr	r0, [pc, #44]	; (90000a3c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000a0e:	4b0c      	ldr	r3, [pc, #48]	; (90000a40 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000a10:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000a12:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000a14:	d3f6      	bcc.n	90000a04 <CopyDataInit>
  ldr  r2, =_sbss
90000a16:	4a0b      	ldr	r2, [pc, #44]	; (90000a44 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000a18:	e002      	b.n	90000a20 <LoopFillZerobss>

90000a1a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000a1a:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000a1c:	f842 3b04 	str.w	r3, [r2], #4

90000a20 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000a20:	4b09      	ldr	r3, [pc, #36]	; (90000a48 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000a22:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000a24:	d3f9      	bcc.n	90000a1a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000a26:	f009 fa4f 	bl	90009ec8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000a2a:	f02b f811 	bl	9002ba50 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000a2e:	f003 fef7 	bl	90004820 <main>
  bx  lr    
90000a32:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000a34:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000a38:	90031314 	.word	0x90031314
  ldr  r0, =_sdata
90000a3c:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000a40:	24000148 	.word	0x24000148
  ldr  r2, =_sbss
90000a44:	24005b48 	.word	0x24005b48
  ldr  r3, = _ebss
90000a48:	240290d8 	.word	0x240290d8

90000a4c <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000a4c:	e7fe      	b.n	90000a4c <ADC3_IRQHandler>
	...

90000a50 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000a50:	4770      	bx	lr
90000a52:	bf00      	nop

90000a54 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000a54:	4770      	bx	lr
90000a56:	bf00      	nop

90000a58 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000a58:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
90000a5a:	f001 ff4d 	bl	900028f8 <touchgfx_components_init>
  touchgfx_init();
}
90000a5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
90000a62:	f001 becd 	b.w	90002800 <touchgfx_init>
90000a66:	bf00      	nop

90000a68 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
90000a68:	f001 bf48 	b.w	900028fc <touchgfx_taskEntry>

90000a6c <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000a6c:	6840      	ldr	r0, [r0, #4]
    }
90000a6e:	4770      	bx	lr

90000a70 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000a70:	6041      	str	r1, [r0, #4]
    }
90000a72:	4770      	bx	lr

90000a74 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000a74:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000a78:	4b08      	ldr	r3, [pc, #32]	; (90000a9c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000a7a:	4a09      	ldr	r2, [pc, #36]	; (90000aa0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000a7c:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000a80:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000a84:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000a88:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000a8c:	430a      	orrs	r2, r1
90000a8e:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000a92:	681a      	ldr	r2, [r3, #0]
90000a94:	f042 0201 	orr.w	r2, r2, #1
90000a98:	601a      	str	r2, [r3, #0]
}
90000a9a:	4770      	bx	lr
90000a9c:	e0001000 	.word	0xe0001000
90000aa0:	c5acce55 	.word	0xc5acce55

90000aa4 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000aa4:	1a51      	subs	r1, r2, r1
90000aa6:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
90000aaa:	fbb1 f0f3 	udiv	r0, r1, r3
90000aae:	4770      	bx	lr

90000ab0 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000ab0:	4b01      	ldr	r3, [pc, #4]	; (90000ab8 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000ab2:	6858      	ldr	r0, [r3, #4]
}
90000ab4:	4770      	bx	lr
90000ab6:	bf00      	nop
90000ab8:	e0001000 	.word	0xe0001000

90000abc <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000abc:	4770      	bx	lr
90000abe:	bf00      	nop

90000ac0 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000ac0:	b510      	push	{r4, lr}
90000ac2:	4604      	mov	r4, r0
90000ac4:	210c      	movs	r1, #12
90000ac6:	f02a fca6 	bl	9002b416 <_ZdlPvj>
90000aca:	4620      	mov	r0, r4
90000acc:	bd10      	pop	{r4, pc}
90000ace:	bf00      	nop

90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000ad0:	6803      	ldr	r3, [r0, #0]
90000ad2:	4a0c      	ldr	r2, [pc, #48]	; (90000b04 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000ad4:	691b      	ldr	r3, [r3, #16]
{
90000ad6:	b510      	push	{r4, lr}
90000ad8:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000ada:	b149      	cbz	r1, 90000af0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000adc:	4293      	cmp	r3, r2
90000ade:	d10d      	bne.n	90000afc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000ae0:	4b09      	ldr	r3, [pc, #36]	; (90000b08 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000ae2:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000ae4:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000ae6:	6863      	ldr	r3, [r4, #4]
90000ae8:	1a9b      	subs	r3, r3, r2
90000aea:	4418      	add	r0, r3
90000aec:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000aee:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000af0:	4293      	cmp	r3, r2
90000af2:	d105      	bne.n	90000b00 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000af4:	4b04      	ldr	r3, [pc, #16]	; (90000b08 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000af6:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000af8:	60a0      	str	r0, [r4, #8]
}
90000afa:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000afc:	4798      	blx	r3
90000afe:	e7f1      	b.n	90000ae4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000b00:	4798      	blx	r3
90000b02:	e7f9      	b.n	90000af8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000b04:	90000ab1 	.word	0x90000ab1
90000b08:	e0001000 	.word	0xe0001000

90000b0c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000b0c:	4770      	bx	lr
90000b0e:	bf00      	nop

90000b10 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000b10:	b500      	push	{lr}
90000b12:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000b14:	2208      	movs	r2, #8
90000b16:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000b18:	2000      	movs	r0, #0
90000b1a:	4669      	mov	r1, sp
    hTS.Width = 480;
90000b1c:	ed9f 7b06 	vldr	d7, [pc, #24]	; 90000b38 <_ZN20STM32TouchController4initEv+0x28>
90000b20:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000b24:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000b28:	f009 f8de 	bl	90009ce8 <BSP_TS_Init>
}
90000b2c:	b005      	add	sp, #20
90000b2e:	f85d fb04 	ldr.w	pc, [sp], #4
90000b32:	bf00      	nop
90000b34:	f3af 8000 	nop.w
90000b38:	000001e0 	.word	0x000001e0
90000b3c:	00000110 	.word	0x00000110

90000b40 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000b40:	b530      	push	{r4, r5, lr}
90000b42:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000b44:	2000      	movs	r0, #0
{
90000b46:	460d      	mov	r5, r1
90000b48:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000b4a:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000b4c:	9001      	str	r0, [sp, #4]
90000b4e:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000b52:	f009 f957 	bl	90009e04 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000b56:	9801      	ldr	r0, [sp, #4]
90000b58:	b120      	cbz	r0, 90000b64 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000b5a:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000b5c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000b60:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000b62:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000b64:	b005      	add	sp, #20
90000b66:	bd30      	pop	{r4, r5, pc}

90000b68 <_ZN20STM32TouchControllerD0Ev>:
90000b68:	b510      	push	{r4, lr}
90000b6a:	4604      	mov	r4, r0
90000b6c:	2104      	movs	r1, #4
90000b6e:	f02a fc52 	bl	9002b416 <_ZdlPvj>
90000b72:	4620      	mov	r0, r4
90000b74:	bd10      	pop	{r4, pc}
90000b76:	bf00      	nop

90000b78 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000b78:	2108      	movs	r1, #8
90000b7a:	4810      	ldr	r0, [pc, #64]	; (90000bbc <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000b7c:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000b7e:	f00a fc5d 	bl	9000b43c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000b82:	2801      	cmp	r0, #1
90000b84:	d101      	bne.n	90000b8a <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
90000b86:	4b0e      	ldr	r3, [pc, #56]	; (90000bc0 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000b88:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000b8a:	2180      	movs	r1, #128	; 0x80
90000b8c:	480d      	ldr	r0, [pc, #52]	; (90000bc4 <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000b8e:	f00a fc55 	bl	9000b43c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000b92:	2801      	cmp	r0, #1
90000b94:	d101      	bne.n	90000b9a <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
90000b96:	4b0a      	ldr	r3, [pc, #40]	; (90000bc0 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000b98:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000b9a:	2140      	movs	r1, #64	; 0x40
90000b9c:	4809      	ldr	r0, [pc, #36]	; (90000bc4 <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000b9e:	f00a fc4d 	bl	9000b43c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000ba2:	2801      	cmp	r0, #1
90000ba4:	d101      	bne.n	90000baa <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
90000ba6:	4b06      	ldr	r3, [pc, #24]	; (90000bc0 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000ba8:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000baa:	2140      	movs	r1, #64	; 0x40
90000bac:	4806      	ldr	r0, [pc, #24]	; (90000bc8 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000bae:	f00a fc45 	bl	9000b43c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000bb2:	2801      	cmp	r0, #1
90000bb4:	d101      	bne.n	90000bba <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
90000bb6:	4b02      	ldr	r3, [pc, #8]	; (90000bc0 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000bb8:	60d8      	str	r0, [r3, #12]
}
90000bba:	bd08      	pop	{r3, pc}
90000bbc:	58021800 	.word	0x58021800
90000bc0:	24005b64 	.word	0x24005b64
90000bc4:	58020400 	.word	0x58020400
90000bc8:	58020000 	.word	0x58020000

90000bcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000bcc:	2803      	cmp	r0, #3
90000bce:	d827      	bhi.n	90000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000bd0:	e8df f000 	tbb	[pc, r0]
90000bd4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000bd8:	4b12      	ldr	r3, [pc, #72]	; (90000c24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000bda:	2140      	movs	r1, #64	; 0x40
90000bdc:	4812      	ldr	r0, [pc, #72]	; (90000c28 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000bde:	68da      	ldr	r2, [r3, #12]
90000be0:	fab2 f282 	clz	r2, r2
90000be4:	0952      	lsrs	r2, r2, #5
90000be6:	f00a bc2f 	b.w	9000b448 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000bea:	4b0e      	ldr	r3, [pc, #56]	; (90000c24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000bec:	2140      	movs	r1, #64	; 0x40
90000bee:	480f      	ldr	r0, [pc, #60]	; (90000c2c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000bf0:	689a      	ldr	r2, [r3, #8]
90000bf2:	fab2 f282 	clz	r2, r2
90000bf6:	0952      	lsrs	r2, r2, #5
90000bf8:	f00a bc26 	b.w	9000b448 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000bfc:	4b09      	ldr	r3, [pc, #36]	; (90000c24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000bfe:	2180      	movs	r1, #128	; 0x80
90000c00:	480a      	ldr	r0, [pc, #40]	; (90000c2c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c02:	685a      	ldr	r2, [r3, #4]
90000c04:	fab2 f282 	clz	r2, r2
90000c08:	0952      	lsrs	r2, r2, #5
90000c0a:	f00a bc1d 	b.w	9000b448 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000c0e:	4b05      	ldr	r3, [pc, #20]	; (90000c24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c10:	2108      	movs	r1, #8
90000c12:	4807      	ldr	r0, [pc, #28]	; (90000c30 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000c14:	681a      	ldr	r2, [r3, #0]
90000c16:	fab2 f282 	clz	r2, r2
90000c1a:	0952      	lsrs	r2, r2, #5
90000c1c:	f00a bc14 	b.w	9000b448 <HAL_GPIO_WritePin>
}
90000c20:	4770      	bx	lr
90000c22:	bf00      	nop
90000c24:	24005b64 	.word	0x24005b64
90000c28:	58020000 	.word	0x58020000
90000c2c:	58020400 	.word	0x58020400
90000c30:	58021800 	.word	0x58021800

90000c34 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000c34:	2803      	cmp	r0, #3
90000c36:	d827      	bhi.n	90000c88 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000c38:	e8df f000 	tbb	[pc, r0]
90000c3c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000c40:	4b12      	ldr	r3, [pc, #72]	; (90000c8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000c42:	2140      	movs	r1, #64	; 0x40
90000c44:	4812      	ldr	r0, [pc, #72]	; (90000c90 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000c46:	68da      	ldr	r2, [r3, #12]
90000c48:	3a00      	subs	r2, #0
90000c4a:	bf18      	it	ne
90000c4c:	2201      	movne	r2, #1
90000c4e:	f00a bbfb 	b.w	9000b448 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000c52:	4b0e      	ldr	r3, [pc, #56]	; (90000c8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000c54:	2140      	movs	r1, #64	; 0x40
90000c56:	480f      	ldr	r0, [pc, #60]	; (90000c94 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000c58:	689a      	ldr	r2, [r3, #8]
90000c5a:	3a00      	subs	r2, #0
90000c5c:	bf18      	it	ne
90000c5e:	2201      	movne	r2, #1
90000c60:	f00a bbf2 	b.w	9000b448 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000c64:	4b09      	ldr	r3, [pc, #36]	; (90000c8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000c66:	2180      	movs	r1, #128	; 0x80
90000c68:	480a      	ldr	r0, [pc, #40]	; (90000c94 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000c6a:	685a      	ldr	r2, [r3, #4]
90000c6c:	3a00      	subs	r2, #0
90000c6e:	bf18      	it	ne
90000c70:	2201      	movne	r2, #1
90000c72:	f00a bbe9 	b.w	9000b448 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000c76:	4b05      	ldr	r3, [pc, #20]	; (90000c8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000c78:	2108      	movs	r1, #8
90000c7a:	4807      	ldr	r0, [pc, #28]	; (90000c98 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000c7c:	681a      	ldr	r2, [r3, #0]
90000c7e:	3a00      	subs	r2, #0
90000c80:	bf18      	it	ne
90000c82:	2201      	movne	r2, #1
90000c84:	f00a bbe0 	b.w	9000b448 <HAL_GPIO_WritePin>
}
90000c88:	4770      	bx	lr
90000c8a:	bf00      	nop
90000c8c:	24005b64 	.word	0x24005b64
90000c90:	58020000 	.word	0x58020000
90000c94:	58020400 	.word	0x58020400
90000c98:	58021800 	.word	0x58021800

90000c9c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000c9c:	2803      	cmp	r0, #3
90000c9e:	d813      	bhi.n	90000cc8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000ca0:	e8df f000 	tbb	[pc, r0]
90000ca4:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000ca8:	2140      	movs	r1, #64	; 0x40
90000caa:	4808      	ldr	r0, [pc, #32]	; (90000ccc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000cac:	f00a bbd0 	b.w	9000b450 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000cb0:	2140      	movs	r1, #64	; 0x40
90000cb2:	4807      	ldr	r0, [pc, #28]	; (90000cd0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000cb4:	f00a bbcc 	b.w	9000b450 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000cb8:	2180      	movs	r1, #128	; 0x80
90000cba:	4805      	ldr	r0, [pc, #20]	; (90000cd0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000cbc:	f00a bbc8 	b.w	9000b450 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000cc0:	2108      	movs	r1, #8
90000cc2:	4804      	ldr	r0, [pc, #16]	; (90000cd4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000cc4:	f00a bbc4 	b.w	9000b450 <HAL_GPIO_TogglePin>
}
90000cc8:	4770      	bx	lr
90000cca:	bf00      	nop
90000ccc:	58020000 	.word	0x58020000
90000cd0:	58020400 	.word	0x58020400
90000cd4:	58021800 	.word	0x58021800

90000cd8 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000cd8:	2000      	movs	r0, #0
90000cda:	4770      	bx	lr

90000cdc <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000cdc:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000cde:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
90000ce2:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
90000ce6:	4770      	bx	lr

90000ce8 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000ce8:	2000      	movs	r0, #0
90000cea:	4770      	bx	lr

90000cec <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000cec:	1e0a      	subs	r2, r1, #0
90000cee:	4b03      	ldr	r3, [pc, #12]	; (90000cfc <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000cf0:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000cf2:	bf18      	it	ne
90000cf4:	2201      	movne	r2, #1
90000cf6:	701a      	strb	r2, [r3, #0]
    }
90000cf8:	4770      	bx	lr
90000cfa:	bf00      	nop
90000cfc:	24028e2b 	.word	0x24028e2b

90000d00 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d00:	2000      	movs	r0, #0
90000d02:	4770      	bx	lr

90000d04 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d04:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
90000d06:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d08:	b103      	cbz	r3, 90000d0c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d0a:	4718      	bx	r3
        }
    }
90000d0c:	4770      	bx	lr
90000d0e:	bf00      	nop

90000d10 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000d10:	f64f 70ff 	movw	r0, #65535	; 0xffff
90000d14:	4770      	bx	lr
90000d16:	bf00      	nop

90000d18 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000d18:	4770      	bx	lr
90000d1a:	bf00      	nop

90000d1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000d1c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000d1e:	4b09      	ldr	r3, [pc, #36]	; (90000d44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000d20:	881b      	ldrh	r3, [r3, #0]
90000d22:	428b      	cmp	r3, r1
90000d24:	d808      	bhi.n	90000d38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000d26:	4b08      	ldr	r3, [pc, #32]	; (90000d48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000d28:	881b      	ldrh	r3, [r3, #0]
90000d2a:	4293      	cmp	r3, r2
90000d2c:	d804      	bhi.n	90000d38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000d2e:	4807      	ldr	r0, [pc, #28]	; (90000d4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000d30:	4b07      	ldr	r3, [pc, #28]	; (90000d50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000d32:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000d34:	801a      	strh	r2, [r3, #0]
    }
90000d36:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000d38:	4b06      	ldr	r3, [pc, #24]	; (90000d54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000d3a:	219e      	movs	r1, #158	; 0x9e
90000d3c:	4a06      	ldr	r2, [pc, #24]	; (90000d58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000d3e:	4807      	ldr	r0, [pc, #28]	; (90000d5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000d40:	f02a fd46 	bl	9002b7d0 <__assert_func>
90000d44:	24028e20 	.word	0x24028e20
90000d48:	24028e22 	.word	0x24028e22
90000d4c:	24028e26 	.word	0x24028e26
90000d50:	24028e28 	.word	0x24028e28
90000d54:	9002cc34 	.word	0x9002cc34
90000d58:	9002cc98 	.word	0x9002cc98
90000d5c:	9002ccdc 	.word	0x9002ccdc

90000d60 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000d60:	b510      	push	{r4, lr}
90000d62:	4604      	mov	r4, r0
        swapFrameBuffers();
90000d64:	f015 fd3c 	bl	900167e0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000d68:	6823      	ldr	r3, [r4, #0]
90000d6a:	4620      	mov	r0, r4
90000d6c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
90000d70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000d74:	4718      	bx	r3
90000d76:	bf00      	nop

90000d78 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000d78:	f001 beb8 	b.w	90002aec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000d7c <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000d7c:	f001 bebc 	b.w	90002af8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000d80 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000d80:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000d82:	f001 ff7b 	bl	90002c7c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000d86:	4812      	ldr	r0, [pc, #72]	; (90000dd0 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000d88:	2300      	movs	r3, #0
90000d8a:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000d8e:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000d92:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000d96:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000d9a:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000d9e:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000da2:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000da6:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000daa:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dac:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000db0:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000db2:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90000db6:	1c5a      	adds	r2, r3, #1
90000db8:	d1f8      	bne.n	90000dac <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000dba:	f1ac 0c20 	sub.w	ip, ip, #32
90000dbe:	f11c 0f20 	cmn.w	ip, #32
90000dc2:	d1f0      	bne.n	90000da6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000dc4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000dc8:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000dcc:	bd10      	pop	{r4, pc}
90000dce:	bf00      	nop
90000dd0:	e000ed00 	.word	0xe000ed00

90000dd4 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000dd4:	f001 be66 	b.w	90002aa4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000dd8 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000dd8:	f002 b876 	b.w	90002ec8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000ddc <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000ddc:	f002 b860 	b.w	90002ea0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000de0 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000de0:	f001 be6a 	b.w	90002ab8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000de4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
90000de4:	f014 bf61 	b.w	90015caa <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000de8 <_ZN11TouchGFXHALD0Ev>:
90000de8:	b510      	push	{r4, lr}
90000dea:	4604      	mov	r4, r0
90000dec:	2188      	movs	r1, #136	; 0x88
90000dee:	f02a fb12 	bl	9002b416 <_ZdlPvj>
90000df2:	4620      	mov	r0, r4
90000df4:	bd10      	pop	{r4, pc}
90000df6:	bf00      	nop

90000df8 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000df8:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
90000dfc:	b11b      	cbz	r3, 90000e06 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
90000dfe:	6840      	ldr	r0, [r0, #4]
90000e00:	6803      	ldr	r3, [r0, #0]
90000e02:	681b      	ldr	r3, [r3, #0]
90000e04:	4718      	bx	r3
    }
90000e06:	4618      	mov	r0, r3
90000e08:	4770      	bx	lr
90000e0a:	bf00      	nop

90000e0c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
90000e0c:	f890 2074 	ldrb.w	r2, [r0, #116]	; 0x74
90000e10:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
90000e14:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
90000e16:	4b0b      	ldr	r3, [pc, #44]	; (90000e44 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
90000e18:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e1a:	d00b      	beq.n	90000e34 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000e1c:	b94a      	cbnz	r2, 90000e32 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
90000e1e:	4a0a      	ldr	r2, [pc, #40]	; (90000e48 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
90000e20:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e24:	4909      	ldr	r1, [pc, #36]	; (90000e4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e26:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
90000e28:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e2c:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000e2e:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e30:	8013      	strh	r3, [r2, #0]
        }
    }
90000e32:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000e34:	2a00      	cmp	r2, #0
90000e36:	d0fc      	beq.n	90000e32 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e38:	4a03      	ldr	r2, [pc, #12]	; (90000e48 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000e3a:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e3e:	4903      	ldr	r1, [pc, #12]	; (90000e4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000e40:	e7f1      	b.n	90000e26 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000e42:	bf00      	nop
90000e44:	24028e24 	.word	0x24028e24
90000e48:	24028e22 	.word	0x24028e22
90000e4c:	24028e20 	.word	0x24028e20

90000e50 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000e50:	6840      	ldr	r0, [r0, #4]
90000e52:	4a04      	ldr	r2, [pc, #16]	; (90000e64 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000e54:	6803      	ldr	r3, [r0, #0]
90000e56:	699b      	ldr	r3, [r3, #24]
90000e58:	4293      	cmp	r3, r2
90000e5a:	d101      	bne.n	90000e60 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000e5c:	2000      	movs	r0, #0
90000e5e:	4770      	bx	lr
        return dma.getDMAType();
90000e60:	4718      	bx	r3
90000e62:	bf00      	nop
90000e64:	90000cd9 	.word	0x90000cd9

90000e68 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000e68:	b1a9      	cbz	r1, 90000e96 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000e6a:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000e6c:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000e6e:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000e70:	bf18      	it	ne
90000e72:	2201      	movne	r2, #1
90000e74:	490c      	ldr	r1, [pc, #48]	; (90000ea8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000e76:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000e78:	6802      	ldr	r2, [r0, #0]
90000e7a:	490c      	ldr	r1, [pc, #48]	; (90000eac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000e7c:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
90000e80:	428a      	cmp	r2, r1
90000e82:	d106      	bne.n	90000e92 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000e84:	1e19      	subs	r1, r3, #0
90000e86:	4a0a      	ldr	r2, [pc, #40]	; (90000eb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000e88:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000e8a:	bf18      	it	ne
90000e8c:	2101      	movne	r1, #1
90000e8e:	7011      	strb	r1, [r2, #0]
90000e90:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000e92:	4619      	mov	r1, r3
90000e94:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000e96:	4b07      	ldr	r3, [pc, #28]	; (90000eb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000e98:	f240 21d2 	movw	r1, #722	; 0x2d2
90000e9c:	4a06      	ldr	r2, [pc, #24]	; (90000eb8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000e9e:	4807      	ldr	r0, [pc, #28]	; (90000ebc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000ea0:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000ea2:	f02a fc95 	bl	9002b7d0 <__assert_func>
90000ea6:	bf00      	nop
90000ea8:	24028e2a 	.word	0x24028e2a
90000eac:	90000ced 	.word	0x90000ced
90000eb0:	24028e2b 	.word	0x24028e2b
90000eb4:	9002cd24 	.word	0x9002cd24
90000eb8:	9002cd5c 	.word	0x9002cd5c
90000ebc:	9002ccdc 	.word	0x9002ccdc

90000ec0 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000ec0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000ec2:	6803      	ldr	r3, [r0, #0]
{
90000ec4:	4604      	mov	r4, r0
90000ec6:	4d17      	ldr	r5, [pc, #92]	; (90000f24 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000ec8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000ecc:	4798      	blx	r3
    enableInterrupts();
90000ece:	6823      	ldr	r3, [r4, #0]
90000ed0:	4620      	mov	r0, r4
90000ed2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000ed4:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000ed6:	f001 f8c7 	bl	90002068 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000eda:	6823      	ldr	r3, [r4, #0]
90000edc:	4620      	mov	r0, r4
90000ede:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90000ee0:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
90000ee2:	2201      	movs	r2, #1
90000ee4:	2104      	movs	r1, #4
90000ee6:	4810      	ldr	r0, [pc, #64]	; (90000f28 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000ee8:	f00a faae 	bl	9000b448 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000eec:	2201      	movs	r2, #1
90000eee:	2180      	movs	r1, #128	; 0x80
90000ef0:	480e      	ldr	r0, [pc, #56]	; (90000f2c <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
90000ef2:	f00a faa9 	bl	9000b448 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000ef6:	2201      	movs	r2, #1
90000ef8:	480d      	ldr	r0, [pc, #52]	; (90000f30 <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000efa:	4611      	mov	r1, r2
90000efc:	f00a faa4 	bl	9000b448 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000f00:	f001 f8b2 	bl	90002068 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000f04:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000f06:	4620      	mov	r0, r4
90000f08:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90000f0a:	42ab      	cmp	r3, r5
90000f0c:	d107      	bne.n	90000f1e <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
90000f0e:	f015 fc67 	bl	900167e0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000f12:	6823      	ldr	r3, [r4, #0]
90000f14:	4620      	mov	r0, r4
90000f16:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
90000f1a:	4798      	blx	r3
    }
90000f1c:	e7f0      	b.n	90000f00 <_ZN11TouchGFXHAL9taskEntryEv+0x40>
90000f1e:	4798      	blx	r3
90000f20:	e7ee      	b.n	90000f00 <_ZN11TouchGFXHAL9taskEntryEv+0x40>
90000f22:	bf00      	nop
90000f24:	90000d61 	.word	0x90000d61
90000f28:	58020000 	.word	0x58020000
90000f2c:	58020c00 	.word	0x58020c00
90000f30:	58022800 	.word	0x58022800

90000f34 <_ZN11TouchGFXHAL10initializeEv>:
{
90000f34:	b538      	push	{r3, r4, r5, lr}
90000f36:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000f38:	f001 ffd0 	bl	90002edc <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
90000f3c:	4817      	ldr	r0, [pc, #92]	; (90000f9c <_ZN11TouchGFXHAL10initializeEv+0x68>)
90000f3e:	6823      	ldr	r3, [r4, #0]
90000f40:	6be1      	ldr	r1, [r4, #60]	; 0x3c
90000f42:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
90000f46:	6c22      	ldr	r2, [r4, #64]	; 0x40
90000f48:	4285      	cmp	r5, r0
90000f4a:	d119      	bne.n	90000f80 <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f4c:	b1f9      	cbz	r1, 90000f8e <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f4e:	3a00      	subs	r2, #0
90000f50:	4913      	ldr	r1, [pc, #76]	; (90000fa0 <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
90000f52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f56:	bf18      	it	ne
90000f58:	2201      	movne	r2, #1
90000f5a:	4812      	ldr	r0, [pc, #72]	; (90000fa4 <_ZN11TouchGFXHAL10initializeEv+0x70>)
90000f5c:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f5e:	4912      	ldr	r1, [pc, #72]	; (90000fa8 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f60:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
90000f62:	d111      	bne.n	90000f88 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f64:	4b11      	ldr	r3, [pc, #68]	; (90000fac <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000f66:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f68:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f6a:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f6c:	f104 057c 	add.w	r5, r4, #124	; 0x7c
90000f70:	4628      	mov	r0, r5
90000f72:	f7ff fd7f 	bl	90000a74 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f76:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f78:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f7a:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
}
90000f7e:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
90000f80:	4b09      	ldr	r3, [pc, #36]	; (90000fa8 <_ZN11TouchGFXHAL10initializeEv+0x74>)
90000f82:	4620      	mov	r0, r4
90000f84:	47a8      	blx	r5
90000f86:	e7f1      	b.n	90000f6c <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000f88:	4620      	mov	r0, r4
90000f8a:	4798      	blx	r3
90000f8c:	e7ee      	b.n	90000f6c <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f8e:	4b08      	ldr	r3, [pc, #32]	; (90000fb0 <_ZN11TouchGFXHAL10initializeEv+0x7c>)
90000f90:	f240 21d2 	movw	r1, #722	; 0x2d2
90000f94:	4a07      	ldr	r2, [pc, #28]	; (90000fb4 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000f96:	4808      	ldr	r0, [pc, #32]	; (90000fb8 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000f98:	f02a fc1a 	bl	9002b7d0 <__assert_func>
90000f9c:	90000e69 	.word	0x90000e69
90000fa0:	90000ced 	.word	0x90000ced
90000fa4:	24028e2a 	.word	0x24028e2a
90000fa8:	d0000000 	.word	0xd0000000
90000fac:	24028e2b 	.word	0x24028e2b
90000fb0:	9002cd24 	.word	0x9002cd24
90000fb4:	9002cd5c 	.word	0x9002cd5c
90000fb8:	9002ccdc 	.word	0x9002ccdc

90000fbc <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000fbc:	b508      	push	{r3, lr}
        return instance;
90000fbe:	4b07      	ldr	r3, [pc, #28]	; (90000fdc <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
90000fc0:	b128      	cbz	r0, 90000fce <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90000fc2:	6818      	ldr	r0, [r3, #0]
90000fc4:	2101      	movs	r1, #1
90000fc6:	f015 fc25 	bl	90016814 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000fca:	2001      	movs	r0, #1
90000fcc:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90000fce:	4601      	mov	r1, r0
90000fd0:	6818      	ldr	r0, [r3, #0]
90000fd2:	f015 fc1f 	bl	90016814 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000fd6:	2001      	movs	r0, #1
90000fd8:	bd08      	pop	{r3, pc}
90000fda:	bf00      	nop
90000fdc:	24028e2c 	.word	0x24028e2c

90000fe0 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool gotoNextFrame();
    //Decode part of the current frame
    virtual bool decodeFrame(const touchgfx::Rect& area, uint8_t* frameBuffer, uint32_t framebuffer_width);
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const { return frameNumber; }
90000fe0:	6940      	ldr	r0, [r0, #20]
90000fe2:	4770      	bx	lr

90000fe4 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    virtual void setRepeatVideo(bool repeat);
    virtual void getVideoInfo(touchgfx::VideoInformation* data);

    void setAVIFileBuffer(uint8_t* buffer, uint32_t size) { aviBuffer = buffer, aviBufferLength = size; }

    virtual AVIErrors getLastError() { return lastError; }
90000fe4:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000fe8:	4770      	bx	lr
90000fea:	bf00      	nop

90000fec <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000fec:	6b03      	ldr	r3, [r0, #48]	; 0x30
90000fee:	b10b      	cbz	r3, 90000ff4 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
90000ff0:	2001      	movs	r0, #1
}
90000ff2:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000ff4:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000ff6:	3800      	subs	r0, #0
90000ff8:	bf18      	it	ne
90000ffa:	2001      	movne	r0, #1
90000ffc:	4770      	bx	lr
90000ffe:	bf00      	nop

90001000 <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
90001000:	6880      	ldr	r0, [r0, #8]
90001002:	4770      	bx	lr

90001004 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001004:	4770      	bx	lr
90001006:	bf00      	nop

90001008 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001008:	3004      	adds	r0, #4
{
9000100a:	468c      	mov	ip, r1
    *data = videoInfo;
9000100c:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000100e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
90001012:	4770      	bx	lr

90001014 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001014:	4770      	bx	lr
90001016:	bf00      	nop

90001018 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001018:	b508      	push	{r3, lr}
    assert(0);
9000101a:	4a03      	ldr	r2, [pc, #12]	; (90001028 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
9000101c:	f240 11cf 	movw	r1, #463	; 0x1cf
90001020:	4b02      	ldr	r3, [pc, #8]	; (9000102c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
90001022:	4803      	ldr	r0, [pc, #12]	; (90001030 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001024:	f02a fbd4 	bl	9002b7d0 <__assert_func>
90001028:	9002ce88 	.word	0x9002ce88
9000102c:	9002ce84 	.word	0x9002ce84
90001030:	9002cee4 	.word	0x9002cee4

90001034 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001034:	b510      	push	{r4, lr}
90001036:	4604      	mov	r4, r0
90001038:	2148      	movs	r1, #72	; 0x48
9000103a:	f02a f9ec 	bl	9002b416 <_ZdlPvj>
9000103e:	4620      	mov	r0, r4
90001040:	bd10      	pop	{r4, pc}
90001042:	bf00      	nop

90001044 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90001044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90001048:	b085      	sub	sp, #20
      JPEG_ConvertorParams.bytes_pr_pixel = 2;
9000104a:	f8df b1d0 	ldr.w	fp, [pc, #464]	; 9000121c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1d8>
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
9000104e:	4604      	mov	r4, r0
  * @retval None
  */
uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef *hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
{
    FrameBufferAddress = output;
    Output_Is_Paused = 0;
90001050:	4e65      	ldr	r6, [pc, #404]	; (900011e8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1a4>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90001052:	9003      	str	r0, [sp, #12]
      JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001054:	2002      	movs	r0, #2
    DMA2D_output_Is_Paused = 1;

    //Init buffers
    for(uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
    {
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001056:	4d65      	ldr	r5, [pc, #404]	; (900011ec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1a8>)
      JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001058:	f8cb 0010 	str.w	r0, [fp, #16]
      JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
9000105c:	68e0      	ldr	r0, [r4, #12]
    JPEG_OUT_Read_BufferIndex = 0;
9000105e:	4f64      	ldr	r7, [pc, #400]	; (900011f0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1ac>)
      if((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001060:	0704      	lsls	r4, r0, #28
      JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001062:	f44f 7470 	mov.w	r4, #960	; 0x3c0
    DMA2D_output_Is_Paused = 1;
90001066:	f8df a1b8 	ldr.w	sl, [pc, #440]	; 90001220 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1dc>
          JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
9000106a:	bf18      	it	ne
9000106c:	f020 000f 	bicne.w	r0, r0, #15
      JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001070:	f8cb 4004 	str.w	r4, [fp, #4]
    FrameBufferAddress = output;
90001074:	4c5f      	ldr	r4, [pc, #380]	; (900011f4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1b0>)
          JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001076:	bf18      	it	ne
90001078:	3010      	addne	r0, #16
9000107a:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 90001224 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1e0>
9000107e:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 90001228 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1e4>
90001082:	f8cb 0000 	str.w	r0, [fp]
      JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001086:	0900      	lsrs	r0, r0, #4
90001088:	f8cb 000c 	str.w	r0, [fp, #12]
      Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
    }

    //Do not return from this function until done with decoding all chunks.
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000108c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90001090:	01c0      	lsls	r0, r0, #7
90001092:	9000      	str	r0, [sp, #0]
      JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001094:	9803      	ldr	r0, [sp, #12]
    FrameBufferAddress = output;
90001096:	6023      	str	r3, [r4, #0]
      JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001098:	6900      	ldr	r0, [r0, #16]
    JPEG_OUT_Write_BufferIndex = 0;
9000109a:	4b57      	ldr	r3, [pc, #348]	; (900011f8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1b4>)
      JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
9000109c:	f000 000f 	and.w	r0, r0, #15
900010a0:	4c56      	ldr	r4, [pc, #344]	; (900011fc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1b8>)
900010a2:	f1c0 0010 	rsb	r0, r0, #16
900010a6:	f8cb 0008 	str.w	r0, [fp, #8]
    Output_Is_Paused = 0;
900010aa:	2000      	movs	r0, #0
    JPEG_OUT_Write_BufferIndex = 0;
900010ac:	6018      	str	r0, [r3, #0]
    JPEG_InputImageIndex = 0;
900010ae:	4b54      	ldr	r3, [pc, #336]	; (90001200 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1bc>)
    Output_Is_Paused = 0;
900010b0:	6030      	str	r0, [r6, #0]
    JPEG_InputImageIndex = 0;
900010b2:	6018      	str	r0, [r3, #0]
    JPEG_InputImageAddress = (uint32_t)input;
900010b4:	4b53      	ldr	r3, [pc, #332]	; (90001204 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c0>)
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900010b6:	7028      	strb	r0, [r5, #0]
    JPEG_InputImageAddress = (uint32_t)input;
900010b8:	6019      	str	r1, [r3, #0]
    JPEG_InputImageSize_Bytes = chunkSizeIn;
900010ba:	4b53      	ldr	r3, [pc, #332]	; (90001208 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c4>)
      Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
900010bc:	60a8      	str	r0, [r5, #8]
    JPEG_InputImageSize_Bytes = chunkSizeIn;
900010be:	601a      	str	r2, [r3, #0]
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900010c0:	f44f 3280 	mov.w	r2, #65536	; 0x10000
    MCU_BlockIndex = 0;
900010c4:	4b51      	ldr	r3, [pc, #324]	; (9000120c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c8>)
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900010c6:	7328      	strb	r0, [r5, #12]
    MCU_BlockIndex = 0;
900010c8:	6018      	str	r0, [r3, #0]
    DMA2D_output_Is_Paused = 1;
900010ca:	2301      	movs	r3, #1
      Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
900010cc:	6168      	str	r0, [r5, #20]
    JPEG_OUT_Read_BufferIndex = 0;
900010ce:	6038      	str	r0, [r7, #0]
    DMA2D_output_Is_Paused = 1;
900010d0:	f8ca 3000 	str.w	r3, [sl]
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900010d4:	484e      	ldr	r0, [pc, #312]	; (90001210 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1cc>)
900010d6:	686b      	ldr	r3, [r5, #4]
900010d8:	f00b facc 	bl	9000c674 <HAL_JPEG_Decode_DMA>
  * @param dma: DMA2D reference
  * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
  */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef *hjpeg, touchgfx::DMA_Interface& dma)
{
  if(Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd) // decode completed
900010dc:	f8d8 3000 	ldr.w	r3, [r8]
900010e0:	b11b      	cbz	r3, 900010ea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa6>
900010e2:	4b4c      	ldr	r3, [pc, #304]	; (90001214 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1d0>)
900010e4:	681b      	ldr	r3, [r3, #0]
900010e6:	2b00      	cmp	r3, #0
900010e8:	d17c      	bne.n	900011e4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1a0>
  {
      return 1;
  }

  // Add job to DMA2D if ready and JPEG buffer is full
  if((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_output_Is_Paused == 1))
900010ea:	683b      	ldr	r3, [r7, #0]
900010ec:	eb03 0243 	add.w	r2, r3, r3, lsl #1
900010f0:	f815 1022 	ldrb.w	r1, [r5, r2, lsl #2]
900010f4:	eb05 0282 	add.w	r2, r5, r2, lsl #2
900010f8:	2901      	cmp	r1, #1
900010fa:	d040      	beq.n	9000117e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13a>
      // Try to start DMA2D
      dma.start();
  }

  // Start JPEG IP if paused and next buffer is empty
  if((Output_Is_Paused == 1) && \
900010fc:	6833      	ldr	r3, [r6, #0]
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
900010fe:	2b01      	cmp	r3, #1
90001100:	d028      	beq.n	90001154 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>
  {
      Output_Is_Paused = 0;
      HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
  }

  if ((Output_Is_Paused == 0) && (DMA2D_output_Is_Paused == 0))
90001102:	6833      	ldr	r3, [r6, #0]
90001104:	b9bb      	cbnz	r3, 90001136 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
90001106:	f8da 2000 	ldr.w	r2, [sl]
  {
      return 2;
9000110a:	2a00      	cmp	r2, #0
9000110c:	bf08      	it	eq
9000110e:	2302      	moveq	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
90001110:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001112:	6823      	ldr	r3, [r4, #0]
90001114:	2b02      	cmp	r3, #2
90001116:	d013      	beq.n	90001140 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xfc>
      while(JpegProcessing_End != 1);
90001118:	6823      	ldr	r3, [r4, #0]
9000111a:	2b01      	cmp	r3, #1
9000111c:	d1de      	bne.n	900010dc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x98>
  {
      return count_ == max_size_;
  }
  void reset()
  {
      head_ = tail_ = count_ = 0;
9000111e:	2300      	movs	r3, #0
      DMA2D_CopyBufferEnd = 0;
90001120:	4a3c      	ldr	r2, [pc, #240]	; (90001214 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1d0>)
90001122:	e9c9 3302 	strd	r3, r3, [r9, #8]
90001126:	f8c9 3004 	str.w	r3, [r9, #4]
      Jpeg_HWDecodingEnd = 0;
9000112a:	f8c8 3000 	str.w	r3, [r8]
      DMA2D_CopyBufferEnd = 0;
9000112e:	6013      	str	r3, [r2, #0]
}
90001130:	b005      	add	sp, #20
90001132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  }

  return 0;
90001136:	2300      	movs	r3, #0
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
90001138:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
9000113a:	6823      	ldr	r3, [r4, #0]
9000113c:	2b02      	cmp	r3, #2
9000113e:	d1eb      	bne.n	90001118 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
          SEM_WAIT(semDecodingDone);
90001140:	4b35      	ldr	r3, [pc, #212]	; (90001218 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1d4>)
90001142:	f04f 31ff 	mov.w	r1, #4294967295
90001146:	6818      	ldr	r0, [r3, #0]
90001148:	f00f ff28 	bl	90010f9c <osSemaphoreAcquire>
      while(JpegProcessing_End != 1);
9000114c:	6823      	ldr	r3, [r4, #0]
9000114e:	2b01      	cmp	r3, #1
90001150:	d1c4      	bne.n	900010dc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x98>
90001152:	e7e4      	b.n	9000111e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xda>
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
90001154:	4b28      	ldr	r3, [pc, #160]	; (900011f8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1b4>)
90001156:	681b      	ldr	r3, [r3, #0]
90001158:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  if((Output_Is_Paused == 1) && \
9000115c:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90001160:	2b00      	cmp	r3, #0
90001162:	d1ce      	bne.n	90001102 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xbe>
          (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_EMPTY))
90001164:	683b      	ldr	r3, [r7, #0]
90001166:	eb03 0343 	add.w	r3, r3, r3, lsl #1
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
9000116a:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
9000116e:	2b00      	cmp	r3, #0
90001170:	d1c7      	bne.n	90001102 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xbe>
      HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001172:	2102      	movs	r1, #2
90001174:	4826      	ldr	r0, [pc, #152]	; (90001210 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1cc>)
      Output_Is_Paused = 0;
90001176:	6033      	str	r3, [r6, #0]
      HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001178:	f00b fbc6 	bl	9000c908 <HAL_JPEG_Resume>
9000117c:	e7c1      	b.n	90001102 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xbe>
  if((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_output_Is_Paused == 1))
9000117e:	f8da 1000 	ldr.w	r1, [sl]
90001182:	2901      	cmp	r1, #1
90001184:	d1ba      	bne.n	900010fc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb8>
      buffer_[tail_] = job;
90001186:	f8d9 1008 	ldr.w	r1, [r9, #8]
      JPEG_OUT_Read_BufferIndex++;
9000118a:	3301      	adds	r3, #1
      };
9000118c:	481f      	ldr	r0, [pc, #124]	; (9000120c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c8>)
      tail_ = (tail_ + 1) % max_size_;
9000118e:	f8d9 c000 	ldr.w	ip, [r9]
      if(JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90001192:	2b01      	cmp	r3, #1
      };
90001194:	f8d0 e000 	ldr.w	lr, [r0]
90001198:	f101 0001 	add.w	r0, r1, #1
      buffer_[tail_] = job;
9000119c:	f101 0102 	add.w	r1, r1, #2
        JPEG_OUT_Read_BufferIndex = 0;
900011a0:	bf88      	it	hi
900011a2:	2300      	movhi	r3, #0
900011a4:	f849 e031 	str.w	lr, [r9, r1, lsl #3]
900011a8:	eb09 01c1 	add.w	r1, r9, r1, lsl #3
900011ac:	603b      	str	r3, [r7, #0]
      DMA2D_output_Is_Paused = 0;
900011ae:	2300      	movs	r3, #0
900011b0:	604a      	str	r2, [r1, #4]
      count_++;
900011b2:	f8d9 100c 	ldr.w	r1, [r9, #12]
      tail_ = (tail_ + 1) % max_size_;
900011b6:	fbb0 f2fc 	udiv	r2, r0, ip
900011ba:	fb0c 0012 	mls	r0, ip, r2, r0
      count_++;
900011be:	3101      	adds	r1, #1
      tail_ = (tail_ + 1) % max_size_;
900011c0:	f8c9 0008 	str.w	r0, [r9, #8]
      MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900011c4:	4811      	ldr	r0, [pc, #68]	; (9000120c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c8>)
      count_++;
900011c6:	f8c9 100c 	str.w	r1, [r9, #12]
900011ca:	6802      	ldr	r2, [r0, #0]
900011cc:	f8db 100c 	ldr.w	r1, [fp, #12]
900011d0:	440a      	add	r2, r1
900011d2:	6002      	str	r2, [r0, #0]
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
900011d4:	9a03      	ldr	r2, [sp, #12]
      DMA2D_output_Is_Paused = 0;
900011d6:	f8ca 3000 	str.w	r3, [sl]
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
900011da:	6c50      	ldr	r0, [r2, #68]	; 0x44
      dma.start();
900011dc:	6803      	ldr	r3, [r0, #0]
900011de:	691b      	ldr	r3, [r3, #16]
900011e0:	4798      	blx	r3
900011e2:	e78b      	b.n	900010fc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb8>
      return 1;
900011e4:	2301      	movs	r3, #1
900011e6:	e793      	b.n	90001110 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xcc>
900011e8:	24005ba4 	.word	0x24005ba4
900011ec:	24000004 	.word	0x24000004
900011f0:	24005b8c 	.word	0x24005b8c
900011f4:	24005b7c 	.word	0x24005b7c
900011f8:	24005b90 	.word	0x24005b90
900011fc:	24005b94 	.word	0x24005b94
90001200:	24005b84 	.word	0x24005b84
90001204:	24005b80 	.word	0x24005b80
90001208:	24005b88 	.word	0x24005b88
9000120c:	24005b9c 	.word	0x24005b9c
90001210:	2400d8cc 	.word	0x2400d8cc
90001214:	24005b74 	.word	0x24005b74
90001218:	24005be0 	.word	0x24005be0
9000121c:	24005ba8 	.word	0x24005ba8
90001220:	24005b78 	.word	0x24005b78
90001224:	24005b98 	.word	0x24005b98
90001228:	24005bbc 	.word	0x24005bbc

9000122c <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
9000122c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
9000122e:	6803      	ldr	r3, [r0, #0]
90001230:	2901      	cmp	r1, #1
90001232:	4e29      	ldr	r6, [pc, #164]	; (900012d8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>)
{
90001234:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90001236:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90001238:	bf38      	it	cc
9000123a:	2101      	movcc	r1, #1
9000123c:	42b3      	cmp	r3, r6
9000123e:	460d      	mov	r5, r1
90001240:	d13a      	bne.n	900012b8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x8c>
    return videoInfo.number_of_frames;
90001242:	6880      	ldr	r0, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90001244:	42a8      	cmp	r0, r5
90001246:	d204      	bcs.n	90001252 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x26>
        frameNumber = getNumberOfFrames();
90001248:	6823      	ldr	r3, [r4, #0]
9000124a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000124c:	42b3      	cmp	r3, r6
9000124e:	d135      	bne.n	900012bc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x90>
    return videoInfo.number_of_frames;
90001250:	68a5      	ldr	r5, [r4, #8]
    uint32_t offset = indexOffset + 8 + (frameNumber-1)*16;
90001252:	1e6b      	subs	r3, r5, #1
90001254:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90001256:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber-1)*16;
90001258:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
9000125c:	b338      	cbz	r0, 900012ae <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x82>
        if (length > aviBufferLength)
9000125e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90001260:	2b0f      	cmp	r3, #15
90001262:	d92f      	bls.n	900012c4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x98>
        reader->seek(offset);
90001264:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber-1)*16;
90001266:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
9000126a:	68db      	ldr	r3, [r3, #12]
9000126c:	4631      	mov	r1, r6
9000126e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001270:	6b20      	ldr	r0, [r4, #48]	; 0x30
90001272:	2210      	movs	r2, #16
90001274:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001276:	6803      	ldr	r3, [r0, #0]
90001278:	691b      	ldr	r3, [r3, #16]
9000127a:	4798      	blx	r3
9000127c:	b198      	cbz	r0, 900012a6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7a>
    if (reader != 0)
9000127e:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90001280:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90001282:	b1a3      	cbz	r3, 900012ae <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x82>
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001284:	6b62      	ldr	r2, [r4, #52]	; 0x34
90001286:	7a93      	ldrb	r3, [r2, #10]
90001288:	7a51      	ldrb	r1, [r2, #9]
9000128a:	041b      	lsls	r3, r3, #16
9000128c:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90001290:	7a11      	ldrb	r1, [r2, #8]
90001292:	7ad2      	ldrb	r2, [r2, #11]
90001294:	430b      	orrs	r3, r1
90001296:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
9000129a:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
9000129c:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
9000129e:	3a04      	subs	r2, #4
900012a0:	4413      	add	r3, r2
900012a2:	61a3      	str	r3, [r4, #24]
}
900012a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012a6:	230d      	movs	r3, #13
900012a8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
900012ac:	e7e7      	b.n	9000127e <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x52>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900012ae:	f107 0310 	add.w	r3, r7, #16
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
900012b2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900012b4:	58d3      	ldr	r3, [r2, r3]
900012b6:	e7f0      	b.n	9000129a <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x6e>
    if (frameNumber > getNumberOfFrames())
900012b8:	4798      	blx	r3
900012ba:	e7c3      	b.n	90001244 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x18>
        frameNumber = getNumberOfFrames();
900012bc:	4620      	mov	r0, r4
900012be:	4798      	blx	r3
900012c0:	4605      	mov	r5, r0
900012c2:	e7c6      	b.n	90001252 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x26>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012c4:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012c6:	4b05      	ldr	r3, [pc, #20]	; (900012dc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>)
900012c8:	4a05      	ldr	r2, [pc, #20]	; (900012e0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb4>)
900012ca:	21a6      	movs	r1, #166	; 0xa6
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012cc:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
900012d0:	4804      	ldr	r0, [pc, #16]	; (900012e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb8>)
900012d2:	f02a fa7d 	bl	9002b7d0 <__assert_func>
900012d6:	bf00      	nop
900012d8:	90001001 	.word	0x90001001
900012dc:	9002cf4c 	.word	0x9002cf4c
900012e0:	9002cf60 	.word	0x9002cf60
900012e4:	9002cee4 	.word	0x9002cee4

900012e8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
900012e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900012ec:	4604      	mov	r4, r0
    if (reader != 0)
900012ee:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
900012f0:	b083      	sub	sp, #12
900012f2:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
900012f4:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
900012f6:	2800      	cmp	r0, #0
900012f8:	f000 80e3 	beq.w	900014c2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1da>
        if (length > aviBufferLength)
900012fc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
900012fe:	2b07      	cmp	r3, #7
90001300:	f240 80e6 	bls.w	900014d0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e8>
        reader->seek(offset);
90001304:	6803      	ldr	r3, [r0, #0]
90001306:	4631      	mov	r1, r6
90001308:	68db      	ldr	r3, [r3, #12]
9000130a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000130c:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000130e:	2208      	movs	r2, #8
90001310:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001312:	6803      	ldr	r3, [r0, #0]
90001314:	691b      	ldr	r3, [r3, #16]
90001316:	4798      	blx	r3
90001318:	2800      	cmp	r0, #0
9000131a:	f000 80ce 	beq.w	900014ba <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d2>
    const uint32_t length = getU32(currentMovieOffset + 4);
9000131e:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90001320:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001322:	1d3b      	adds	r3, r7, #4
        aviBufferStartOffset = offset;
90001324:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90001326:	2800      	cmp	r0, #0
90001328:	f000 80db 	beq.w	900014e2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fa>
        const uint32_t index = offset - aviBufferStartOffset;
9000132c:	1b9e      	subs	r6, r3, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
9000132e:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90001330:	e9d4 230d 	ldrd	r2, r3, [r4, #52]	; 0x34
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001334:	1991      	adds	r1, r2, r6
90001336:	5d92      	ldrb	r2, [r2, r6]
90001338:	788e      	ldrb	r6, [r1, #2]
9000133a:	f891 c001 	ldrb.w	ip, [r1, #1]
9000133e:	0436      	lsls	r6, r6, #16
90001340:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90001344:	4316      	orrs	r6, r2
90001346:	78ca      	ldrb	r2, [r1, #3]
90001348:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
        if (length > aviBufferLength)
9000134c:	42b3      	cmp	r3, r6
9000134e:	f0c0 80bf 	bcc.w	900014d0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e8>
        reader->seek(offset);
90001352:	6803      	ldr	r3, [r0, #0]
90001354:	4639      	mov	r1, r7
90001356:	68db      	ldr	r3, [r3, #12]
90001358:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000135a:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000135c:	4632      	mov	r2, r6
9000135e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001360:	6803      	ldr	r3, [r0, #0]
90001362:	691b      	ldr	r3, [r3, #16]
90001364:	4798      	blx	r3
90001366:	b910      	cbnz	r0, 9000136e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90001368:	230d      	movs	r3, #13
9000136a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
9000136e:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001370:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) //only decode if buffers are assigned.
90001372:	2d00      	cmp	r5, #0
90001374:	d052      	beq.n	9000141c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x134>
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001376:	4a5c      	ldr	r2, [pc, #368]	; (900014e8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x200>)
    FrameBufferAddress = output;
90001378:	4b5c      	ldr	r3, [pc, #368]	; (900014ec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x204>)
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000137a:	68d2      	ldr	r2, [r2, #12]
    FrameBufferAddress = output;
9000137c:	601d      	str	r5, [r3, #0]
    Output_Is_Paused = 0;
9000137e:	2300      	movs	r3, #0
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001380:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001384:	4d5a      	ldr	r5, [pc, #360]	; (900014f0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x208>)
    Output_Is_Paused = 0;
90001386:	4f5b      	ldr	r7, [pc, #364]	; (900014f4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20c>)
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001388:	01d2      	lsls	r2, r2, #7
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000138a:	702b      	strb	r3, [r5, #0]
    Output_Is_Paused = 0;
9000138c:	603b      	str	r3, [r7, #0]
      Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
9000138e:	60ab      	str	r3, [r5, #8]
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001390:	732b      	strb	r3, [r5, #12]
      Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90001392:	616b      	str	r3, [r5, #20]
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001394:	9200      	str	r2, [sp, #0]
    JPEG_OUT_Write_BufferIndex = 0;
90001396:	4a58      	ldr	r2, [pc, #352]	; (900014f8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x210>)
    JPEG_OUT_Read_BufferIndex = 0;
90001398:	f8df 8188 	ldr.w	r8, [pc, #392]	; 90001524 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x23c>
    JPEG_OUT_Write_BufferIndex = 0;
9000139c:	6013      	str	r3, [r2, #0]
    JPEG_InputImageIndex = 0;
9000139e:	4a57      	ldr	r2, [pc, #348]	; (900014fc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x214>)
    DMA2D_output_Is_Paused = 1;
900013a0:	f8df a184 	ldr.w	sl, [pc, #388]	; 90001528 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x240>
    JPEG_InputImageIndex = 0;
900013a4:	6013      	str	r3, [r2, #0]
    JPEG_InputImageAddress = (uint32_t)input;
900013a6:	4a56      	ldr	r2, [pc, #344]	; (90001500 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x218>)
    JPEG_OUT_Read_BufferIndex = 0;
900013a8:	f8c8 3000 	str.w	r3, [r8]
    JPEG_InputImageAddress = (uint32_t)input;
900013ac:	6011      	str	r1, [r2, #0]
    JPEG_InputImageSize_Bytes = chunkSizeIn;
900013ae:	4a55      	ldr	r2, [pc, #340]	; (90001504 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x21c>)
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900013b0:	4855      	ldr	r0, [pc, #340]	; (90001508 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x220>)
    JPEG_InputImageSize_Bytes = chunkSizeIn;
900013b2:	6016      	str	r6, [r2, #0]
    MCU_BlockIndex = 0;
900013b4:	4a55      	ldr	r2, [pc, #340]	; (9000150c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x224>)
900013b6:	f8df 9174 	ldr.w	r9, [pc, #372]	; 9000152c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x244>
900013ba:	6013      	str	r3, [r2, #0]
    DMA2D_output_Is_Paused = 1;
900013bc:	2301      	movs	r3, #1
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900013be:	f44f 3280 	mov.w	r2, #65536	; 0x10000
900013c2:	4e53      	ldr	r6, [pc, #332]	; (90001510 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x228>)
    DMA2D_output_Is_Paused = 1;
900013c4:	f8ca 3000 	str.w	r3, [sl]
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900013c8:	686b      	ldr	r3, [r5, #4]
      buffer_[tail_] = job;
900013ca:	f8df b164 	ldr.w	fp, [pc, #356]	; 90001530 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x248>
900013ce:	f00b f951 	bl	9000c674 <HAL_JPEG_Decode_DMA>
    return 0;
900013d2:	e007      	b.n	900013e4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xfc>
  if ((Output_Is_Paused == 0) && (DMA2D_output_Is_Paused == 0))
900013d4:	f8da 2000 	ldr.w	r2, [sl]
      return 2;
900013d8:	2a00      	cmp	r2, #0
900013da:	bf08      	it	eq
900013dc:	2302      	moveq	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
900013de:	6033      	str	r3, [r6, #0]
      while(JpegProcessing_End == 0);
900013e0:	6833      	ldr	r3, [r6, #0]
900013e2:	b9db      	cbnz	r3, 9000141c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x134>
  if(Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd) // decode completed
900013e4:	f8d9 3000 	ldr.w	r3, [r9]
900013e8:	b11b      	cbz	r3, 900013f2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10a>
900013ea:	4b4a      	ldr	r3, [pc, #296]	; (90001514 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>)
900013ec:	681b      	ldr	r3, [r3, #0]
900013ee:	2b00      	cmp	r3, #0
900013f0:	d161      	bne.n	900014b6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ce>
  if((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_output_Is_Paused == 1))
900013f2:	f8d8 3000 	ldr.w	r3, [r8]
900013f6:	eb03 0243 	add.w	r2, r3, r3, lsl #1
900013fa:	f815 1022 	ldrb.w	r1, [r5, r2, lsl #2]
900013fe:	eb05 0282 	add.w	r2, r5, r2, lsl #2
90001402:	2901      	cmp	r1, #1
90001404:	d024      	beq.n	90001450 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
  if((Output_Is_Paused == 1) && \
90001406:	683b      	ldr	r3, [r7, #0]
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
90001408:	2b01      	cmp	r3, #1
9000140a:	d00b      	beq.n	90001424 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x13c>
  if ((Output_Is_Paused == 0) && (DMA2D_output_Is_Paused == 0))
9000140c:	683b      	ldr	r3, [r7, #0]
9000140e:	2b00      	cmp	r3, #0
90001410:	d0e0      	beq.n	900013d4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xec>
  return 0;
90001412:	2300      	movs	r3, #0
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
90001414:	6033      	str	r3, [r6, #0]
      while(JpegProcessing_End == 0);
90001416:	6833      	ldr	r3, [r6, #0]
90001418:	2b00      	cmp	r3, #0
9000141a:	d0e3      	beq.n	900013e4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xfc>
}
9000141c:	2001      	movs	r0, #1
9000141e:	b003      	add	sp, #12
90001420:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
90001424:	4b34      	ldr	r3, [pc, #208]	; (900014f8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x210>)
90001426:	681b      	ldr	r3, [r3, #0]
90001428:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  if((Output_Is_Paused == 1) && \
9000142c:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90001430:	2b00      	cmp	r3, #0
90001432:	d1eb      	bne.n	9000140c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x124>
          (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_EMPTY))
90001434:	f8d8 3000 	ldr.w	r3, [r8]
90001438:	eb03 0343 	add.w	r3, r3, r3, lsl #1
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
9000143c:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90001440:	2b00      	cmp	r3, #0
90001442:	d1e3      	bne.n	9000140c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x124>
      HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001444:	2102      	movs	r1, #2
90001446:	4830      	ldr	r0, [pc, #192]	; (90001508 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x220>)
      Output_Is_Paused = 0;
90001448:	603b      	str	r3, [r7, #0]
      HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
9000144a:	f00b fa5d 	bl	9000c908 <HAL_JPEG_Resume>
9000144e:	e7dd      	b.n	9000140c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x124>
  if((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_output_Is_Paused == 1))
90001450:	f8da 1000 	ldr.w	r1, [sl]
90001454:	2901      	cmp	r1, #1
90001456:	d1d6      	bne.n	90001406 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x11e>
90001458:	f8db 1008 	ldr.w	r1, [fp, #8]
      JPEG_OUT_Read_BufferIndex++;
9000145c:	3301      	adds	r3, #1
      };
9000145e:	482b      	ldr	r0, [pc, #172]	; (9000150c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x224>)
      tail_ = (tail_ + 1) % max_size_;
90001460:	f8db c000 	ldr.w	ip, [fp]
      if(JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90001464:	2b01      	cmp	r3, #1
      };
90001466:	f8d0 e000 	ldr.w	lr, [r0]
9000146a:	f101 0001 	add.w	r0, r1, #1
      buffer_[tail_] = job;
9000146e:	f101 0102 	add.w	r1, r1, #2
        JPEG_OUT_Read_BufferIndex = 0;
90001472:	bf88      	it	hi
90001474:	2300      	movhi	r3, #0
90001476:	f84b e031 	str.w	lr, [fp, r1, lsl #3]
9000147a:	eb0b 01c1 	add.w	r1, fp, r1, lsl #3
9000147e:	f8c8 3000 	str.w	r3, [r8]
      DMA2D_output_Is_Paused = 0;
90001482:	2300      	movs	r3, #0
90001484:	604a      	str	r2, [r1, #4]
      count_++;
90001486:	f8db 100c 	ldr.w	r1, [fp, #12]
      tail_ = (tail_ + 1) % max_size_;
9000148a:	fbb0 f2fc 	udiv	r2, r0, ip
      count_++;
9000148e:	3101      	adds	r1, #1
      tail_ = (tail_ + 1) % max_size_;
90001490:	fb0c 0012 	mls	r0, ip, r2, r0
      count_++;
90001494:	f8cb 100c 	str.w	r1, [fp, #12]
      tail_ = (tail_ + 1) % max_size_;
90001498:	f8cb 0008 	str.w	r0, [fp, #8]
      MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
9000149c:	4912      	ldr	r1, [pc, #72]	; (900014e8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x200>)
9000149e:	481b      	ldr	r0, [pc, #108]	; (9000150c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x224>)
900014a0:	68c9      	ldr	r1, [r1, #12]
900014a2:	6802      	ldr	r2, [r0, #0]
900014a4:	440a      	add	r2, r1
900014a6:	6002      	str	r2, [r0, #0]
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
900014a8:	6c60      	ldr	r0, [r4, #68]	; 0x44
      DMA2D_output_Is_Paused = 0;
900014aa:	f8ca 3000 	str.w	r3, [sl]
      dma.start();
900014ae:	6803      	ldr	r3, [r0, #0]
900014b0:	691b      	ldr	r3, [r3, #16]
900014b2:	4798      	blx	r3
900014b4:	e7a7      	b.n	90001406 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x11e>
      return 1;
900014b6:	2301      	movs	r3, #1
900014b8:	e791      	b.n	900013de <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf6>
            lastError = AVI_ERROR_EOF_REACHED;
900014ba:	230d      	movs	r3, #13
900014bc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
900014c0:	e72d      	b.n	9000131e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
    const uint32_t length = getU32(currentMovieOffset + 4);
900014c2:	1d33      	adds	r3, r6, #4
    if (reader != 0)
900014c4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
900014c6:	f106 0208 	add.w	r2, r6, #8
900014ca:	58ce      	ldr	r6, [r1, r3]
    return movieData + offset;
900014cc:	4411      	add	r1, r2
900014ce:	e750      	b.n	90001372 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900014d0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900014d2:	4b11      	ldr	r3, [pc, #68]	; (90001518 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x230>)
900014d4:	4a11      	ldr	r2, [pc, #68]	; (9000151c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>)
900014d6:	21a6      	movs	r1, #166	; 0xa6
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900014d8:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
900014dc:	4810      	ldr	r0, [pc, #64]	; (90001520 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x238>)
900014de:	f02a f977 	bl	9002b7d0 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
900014e2:	463e      	mov	r6, r7
900014e4:	e7ee      	b.n	900014c4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>
900014e6:	bf00      	nop
900014e8:	24005ba8 	.word	0x24005ba8
900014ec:	24005b7c 	.word	0x24005b7c
900014f0:	24000004 	.word	0x24000004
900014f4:	24005ba4 	.word	0x24005ba4
900014f8:	24005b90 	.word	0x24005b90
900014fc:	24005b84 	.word	0x24005b84
90001500:	24005b80 	.word	0x24005b80
90001504:	24005b88 	.word	0x24005b88
90001508:	2400d8cc 	.word	0x2400d8cc
9000150c:	24005b9c 	.word	0x24005b9c
90001510:	24005b94 	.word	0x24005b94
90001514:	24005b74 	.word	0x24005b74
90001518:	9002cf4c 	.word	0x9002cf4c
9000151c:	9002cf60 	.word	0x9002cf60
90001520:	9002cee4 	.word	0x9002cee4
90001524:	24005b8c 	.word	0x24005b8c
90001528:	24005b78 	.word	0x24005b78
9000152c:	24005b98 	.word	0x24005b98
90001530:	24005bbc 	.word	0x24005bbc

90001534 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001534:	6943      	ldr	r3, [r0, #20]
{
90001536:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000153a:	2b00      	cmp	r3, #0
9000153c:	f000 8098 	beq.w	90001670 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x13c>
    readData(currentMovieOffset, 8);
90001540:	4605      	mov	r5, r0
    if (reader != 0)
90001542:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90001544:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90001546:	2800      	cmp	r0, #0
90001548:	f000 8082 	beq.w	90001650 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x11c>
        if (length > aviBufferLength)
9000154c:	6bab      	ldr	r3, [r5, #56]	; 0x38
9000154e:	2b07      	cmp	r3, #7
90001550:	f240 8083 	bls.w	9000165a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90001554:	6803      	ldr	r3, [r0, #0]
90001556:	4621      	mov	r1, r4
90001558:	68db      	ldr	r3, [r3, #12]
9000155a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000155c:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000155e:	2208      	movs	r2, #8
90001560:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001562:	6803      	ldr	r3, [r0, #0]
90001564:	691b      	ldr	r3, [r3, #16]
90001566:	4798      	blx	r3
90001568:	2800      	cmp	r0, #0
9000156a:	d06d      	beq.n	90001648 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x114>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
9000156c:	69aa      	ldr	r2, [r5, #24]
    if (reader != 0)
9000156e:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001570:	1d13      	adds	r3, r2, #4
        aviBufferStartOffset = offset;
90001572:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90001574:	2800      	cmp	r0, #0
90001576:	d06d      	beq.n	90001654 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x120>
        const uint32_t index = offset - aviBufferStartOffset;
90001578:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
9000157a:	6b6c      	ldr	r4, [r5, #52]	; 0x34
9000157c:	18e1      	adds	r1, r4, r3
9000157e:	5ce4      	ldrb	r4, [r4, r3]
90001580:	788b      	ldrb	r3, [r1, #2]
90001582:	784e      	ldrb	r6, [r1, #1]
90001584:	041b      	lsls	r3, r3, #16
90001586:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
9000158a:	4323      	orrs	r3, r4
9000158c:	78cc      	ldrb	r4, [r1, #3]
9000158e:	ea43 6404 	orr.w	r4, r3, r4, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90001592:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001594:	f243 0630 	movw	r6, #12336	; 0x3030
90001598:	e039      	b.n	9000160e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xda>
        if (length > aviBufferLength)
9000159a:	6bab      	ldr	r3, [r5, #56]	; 0x38
9000159c:	2b07      	cmp	r3, #7
9000159e:	d95c      	bls.n	9000165a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
900015a0:	6803      	ldr	r3, [r0, #0]
900015a2:	4621      	mov	r1, r4
900015a4:	68db      	ldr	r3, [r3, #12]
900015a6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015a8:	6b28      	ldr	r0, [r5, #48]	; 0x30
900015aa:	2208      	movs	r2, #8
900015ac:	6b69      	ldr	r1, [r5, #52]	; 0x34
900015ae:	6803      	ldr	r3, [r0, #0]
900015b0:	691b      	ldr	r3, [r3, #16]
900015b2:	4798      	blx	r3
900015b4:	b908      	cbnz	r0, 900015ba <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
900015b6:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
900015ba:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900015bc:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900015be:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900015c0:	2800      	cmp	r0, #0
900015c2:	d053      	beq.n	9000166c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x138>
        const uint32_t index = offset - aviBufferStartOffset;
900015c4:	1b1c      	subs	r4, r3, r4
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900015c6:	6b6a      	ldr	r2, [r5, #52]	; 0x34
900015c8:	1913      	adds	r3, r2, r4
900015ca:	5d11      	ldrb	r1, [r2, r4]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900015cc:	799c      	ldrb	r4, [r3, #6]
900015ce:	f893 a005 	ldrb.w	sl, [r3, #5]
900015d2:	0424      	lsls	r4, r4, #16
900015d4:	f893 e004 	ldrb.w	lr, [r3, #4]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900015d8:	f893 9001 	ldrb.w	r9, [r3, #1]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900015dc:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
900015e0:	f893 c007 	ldrb.w	ip, [r3, #7]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900015e4:	f893 8003 	ldrb.w	r8, [r3, #3]
900015e8:	ea41 2109 	orr.w	r1, r1, r9, lsl #8
900015ec:	789a      	ldrb	r2, [r3, #2]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900015ee:	ea44 040e 	orr.w	r4, r4, lr
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900015f2:	ea42 2308 	orr.w	r3, r2, r8, lsl #8
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900015f6:	ea44 640c 	orr.w	r4, r4, ip, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900015fa:	f246 3264 	movw	r2, #25444	; 0x6364
900015fe:	42b1      	cmp	r1, r6
90001600:	bf08      	it	eq
90001602:	4293      	cmpeq	r3, r2
90001604:	bf0c      	ite	eq
90001606:	2301      	moveq	r3, #1
90001608:	2300      	movne	r3, #0
9000160a:	d01a      	beq.n	90001642 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x10e>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
9000160c:	69aa      	ldr	r2, [r5, #24]
9000160e:	4414      	add	r4, r2
90001610:	6aab      	ldr	r3, [r5, #40]	; 0x28
90001612:	f104 0208 	add.w	r2, r4, #8
90001616:	429a      	cmp	r2, r3
90001618:	d20e      	bcs.n	90001638 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x104>
        frameNumber++;
9000161a:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; //pad to next word
9000161c:	3409      	adds	r4, #9
        frameNumber++;
9000161e:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; //pad to next word
90001620:	f024 0401 	bic.w	r4, r4, #1
90001624:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001628:	2800      	cmp	r0, #0
9000162a:	d1b6      	bne.n	9000159a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x66>
        const uint8_t* const d = movieData + offset;
9000162c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        return d[0] | (d[1] << 8);
9000162e:	191a      	adds	r2, r3, r4
90001630:	5b19      	ldrh	r1, [r3, r4]
90001632:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001634:	6854      	ldr	r4, [r2, #4]
90001636:	e7e0      	b.n	900015fa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xc6>
    frameNumber = 1;
90001638:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; //start over
9000163a:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000163c:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; //start over
9000163e:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
90001642:	4618      	mov	r0, r3
90001644:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001648:	230d      	movs	r3, #13
9000164a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
9000164e:	e78d      	b.n	9000156c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x38>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001650:	1d23      	adds	r3, r4, #4
90001652:	4622      	mov	r2, r4
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001654:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
90001656:	58cc      	ldr	r4, [r1, r3]
90001658:	e79b      	b.n	90001592 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x5e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000165a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
9000165c:	4b07      	ldr	r3, [pc, #28]	; (9000167c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x148>)
9000165e:	4a08      	ldr	r2, [pc, #32]	; (90001680 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>)
90001660:	21a6      	movs	r1, #166	; 0xa6
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001662:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90001666:	4807      	ldr	r0, [pc, #28]	; (90001684 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90001668:	f02a f8b2 	bl	9002b7d0 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
9000166c:	461c      	mov	r4, r3
9000166e:	e7dd      	b.n	9000162c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xf8>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001670:	4b05      	ldr	r3, [pc, #20]	; (90001688 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x154>)
90001672:	21ec      	movs	r1, #236	; 0xec
90001674:	4a05      	ldr	r2, [pc, #20]	; (9000168c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>)
90001676:	4803      	ldr	r0, [pc, #12]	; (90001684 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90001678:	f02a f8aa 	bl	9002b7d0 <__assert_func>
9000167c:	9002cf4c 	.word	0x9002cf4c
90001680:	9002cf60 	.word	0x9002cf60
90001684:	9002cee4 	.word	0x9002cee4
90001688:	9002cfa4 	.word	0x9002cfa4
9000168c:	9002cff0 	.word	0x9002cff0

90001690 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001690:	6943      	ldr	r3, [r0, #20]
{
90001692:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001696:	2b00      	cmp	r3, #0
90001698:	f000 8097 	beq.w	900017ca <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x13a>
    readData(currentMovieOffset, 8);
9000169c:	4604      	mov	r4, r0
    if (reader != 0)
9000169e:	6b00      	ldr	r0, [r0, #48]	; 0x30
900016a0:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
900016a2:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
900016a4:	2800      	cmp	r0, #0
900016a6:	d05d      	beq.n	90001764 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd4>
        if (length > aviBufferLength)
900016a8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
900016aa:	2b07      	cmp	r3, #7
900016ac:	f240 8093 	bls.w	900017d6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x146>
        reader->seek(offset);
900016b0:	6803      	ldr	r3, [r0, #0]
900016b2:	4629      	mov	r1, r5
900016b4:	68db      	ldr	r3, [r3, #12]
900016b6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900016b8:	6b20      	ldr	r0, [r4, #48]	; 0x30
900016ba:	2208      	movs	r2, #8
900016bc:	6b61      	ldr	r1, [r4, #52]	; 0x34
900016be:	6803      	ldr	r3, [r0, #0]
900016c0:	691b      	ldr	r3, [r3, #16]
900016c2:	4798      	blx	r3
900016c4:	2800      	cmp	r0, #0
900016c6:	d048      	beq.n	9000175a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xca>
    if (reader != 0)
900016c8:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
900016ca:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
900016cc:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
900016ce:	2800      	cmp	r0, #0
900016d0:	d047      	beq.n	90001762 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd2>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900016d2:	1d0a      	adds	r2, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
900016d4:	f101 0c02 	add.w	ip, r1, #2
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900016d8:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900016da:	1b52      	subs	r2, r2, r5
        const uint32_t index = offset - aviBufferStartOffset;
900016dc:	ebac 0c05 	sub.w	ip, ip, r5
900016e0:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900016e2:	189f      	adds	r7, r3, r2
900016e4:	5c9a      	ldrb	r2, [r3, r2]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900016e6:	eb03 0805 	add.w	r8, r3, r5
900016ea:	f813 e005 	ldrb.w	lr, [r3, r5]
900016ee:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900016f2:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900016f6:	ea4e 2e05 	orr.w	lr, lr, r5, lsl #8
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900016fa:	78bd      	ldrb	r5, [r7, #2]
900016fc:	042d      	lsls	r5, r5, #16
900016fe:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001702:	4315      	orrs	r5, r2
90001704:	78fa      	ldrb	r2, [r7, #3]
90001706:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
9000170a:	eb03 020c 	add.w	r2, r3, ip
9000170e:	f813 300c 	ldrb.w	r3, [r3, ip]
90001712:	7852      	ldrb	r2, [r2, #1]
90001714:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001718:	194a      	adds	r2, r1, r5
9000171a:	6aa7      	ldr	r7, [r4, #40]	; 0x28
9000171c:	f102 0c08 	add.w	ip, r2, #8
90001720:	45bc      	cmp	ip, r7
90001722:	d213      	bcs.n	9000174c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xbc>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001724:	f243 0730 	movw	r7, #12336	; 0x3030
90001728:	45be      	cmp	lr, r7
9000172a:	d124      	bne.n	90001776 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xe6>
9000172c:	f246 3764 	movw	r7, #25444	; 0x6364
90001730:	42bb      	cmp	r3, r7
90001732:	d120      	bne.n	90001776 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xe6>
90001734:	bb1d      	cbnz	r5, 9000177e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
          currentMovieOffset += 8;
90001736:	4662      	mov	r2, ip
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; //pad to next word
90001738:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000173a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; //pad to next word
9000173c:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001740:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; //pad to next word
90001742:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001744:	d002      	beq.n	9000174c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xbc>
90001746:	2001      	movs	r0, #1
}
90001748:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
9000174c:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; //start over
9000174e:	6a23      	ldr	r3, [r4, #32]
90001750:	2000      	movs	r0, #0
90001752:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001756:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
9000175a:	230d      	movs	r3, #13
9000175c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90001760:	e7b2      	b.n	900016c8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001762:	460d      	mov	r5, r1
        const uint8_t* const d = movieData + offset;
90001764:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        const uint8_t* const d = movieData + offset;
90001766:	4629      	mov	r1, r5
90001768:	2000      	movs	r0, #0
        return d[0] | (d[1] << 8);
9000176a:	f832 e005 	ldrh.w	lr, [r2, r5]
9000176e:	442a      	add	r2, r5
90001770:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001772:	6855      	ldr	r5, [r2, #4]
90001774:	e7d0      	b.n	90001718 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x88>
        currentMovieOffset += chunkSize;
90001776:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) // Empty frame - Skip
90001778:	2d00      	cmp	r5, #0
9000177a:	d1dd      	bne.n	90001738 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xa8>
9000177c:	e7db      	b.n	90001736 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xa6>
            currentMovieOffset += 8;
9000177e:	f101 0708 	add.w	r7, r1, #8
90001782:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001784:	b1f0      	cbz	r0, 900017c4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x134>
        if (length > aviBufferLength)
90001786:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90001788:	429d      	cmp	r5, r3
9000178a:	d824      	bhi.n	900017d6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x146>
        reader->seek(offset);
9000178c:	6803      	ldr	r3, [r0, #0]
9000178e:	4639      	mov	r1, r7
90001790:	68db      	ldr	r3, [r3, #12]
90001792:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001794:	6b20      	ldr	r0, [r4, #48]	; 0x30
90001796:	462a      	mov	r2, r5
90001798:	6b61      	ldr	r1, [r4, #52]	; 0x34
9000179a:	6803      	ldr	r3, [r0, #0]
9000179c:	691b      	ldr	r3, [r3, #16]
9000179e:	4798      	blx	r3
900017a0:	b910      	cbnz	r0, 900017a8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x118>
            lastError = AVI_ERROR_EOF_REACHED;
900017a2:	230d      	movs	r3, #13
900017a4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
900017a8:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
900017aa:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) //only decode if buffers are assigned.
900017ac:	b126      	cbz	r6, 900017b8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x128>
900017ae:	4633      	mov	r3, r6
900017b0:	462a      	mov	r2, r5
900017b2:	4620      	mov	r0, r4
900017b4:	f7ff fc46 	bl	90001044 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
900017b8:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
900017bc:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
900017be:	442a      	add	r2, r5
            frameNumber++;
900017c0:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) // Empty frame - Skip
900017c2:	e7b9      	b.n	90001738 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xa8>
    return movieData + offset;
900017c4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900017c6:	4439      	add	r1, r7
900017c8:	e7f0      	b.n	900017ac <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11c>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900017ca:	4b07      	ldr	r3, [pc, #28]	; (900017e8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x158>)
900017cc:	21b8      	movs	r1, #184	; 0xb8
900017ce:	4a07      	ldr	r2, [pc, #28]	; (900017ec <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x15c>)
900017d0:	4807      	ldr	r0, [pc, #28]	; (900017f0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>)
900017d2:	f029 fffd 	bl	9002b7d0 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900017d6:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900017d8:	4b06      	ldr	r3, [pc, #24]	; (900017f4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x164>)
900017da:	4a07      	ldr	r2, [pc, #28]	; (900017f8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
900017dc:	21a6      	movs	r1, #166	; 0xa6
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900017de:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
900017e2:	4803      	ldr	r0, [pc, #12]	; (900017f0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>)
900017e4:	f029 fff4 	bl	9002b7d0 <__assert_func>
900017e8:	9002cfa4 	.word	0x9002cfa4
900017ec:	9002d024 	.word	0x9002d024
900017f0:	9002cee4 	.word	0x9002cee4
900017f4:	9002cf4c 	.word	0x9002cf4c
900017f8:	9002cf60 	.word	0x9002cf60

900017fc <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900017fc:	b538      	push	{r3, r4, r5, lr}
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900017fe:	2500      	movs	r5, #0
90001800:	4b0f      	ldr	r3, [pc, #60]	; (90001840 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001802:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001804:	6003      	str	r3, [r0, #0]
90001806:	63c5      	str	r5, [r0, #60]	; 0x3c
90001808:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
9000180c:	e9c0 5505 	strd	r5, r5, [r0, #20]
90001810:	e9c0 5507 	strd	r5, r5, [r0, #28]
90001814:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
90001818:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
9000181c:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
    videoInfo.frame_width = 0;
90001820:	e9c0 5503 	strd	r5, r5, [r0, #12]
    videoInfo.number_of_frames = 0;
90001824:	e9c0 5501 	strd	r5, r5, [r0, #4]
    TGFX_JPEG_InitColorTables();
90001828:	f002 fab2 	bl	90003d90 <TGFX_JPEG_InitColorTables>
    semDecodingDone = SEM_CREATE();
9000182c:	462a      	mov	r2, r5
9000182e:	4629      	mov	r1, r5
90001830:	2001      	movs	r0, #1
90001832:	f00f fb63 	bl	90010efc <osSemaphoreNew>
90001836:	4b03      	ldr	r3, [pc, #12]	; (90001844 <_ZN20HardwareMJPEGDecoderC1Ev+0x48>)
90001838:	4602      	mov	r2, r0
}
9000183a:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
9000183c:	601a      	str	r2, [r3, #0]
}
9000183e:	bd38      	pop	{r3, r4, r5, pc}
90001840:	9002d1a4 	.word	0x9002d1a4
90001844:	24005be0 	.word	0x24005be0

90001848 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
9000184c:	2100      	movs	r1, #0
    if (reader != 0)
9000184e:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
90001850:	b083      	sub	sp, #12
90001852:	4605      	mov	r5, r0
    currentMovieOffset = 0;
90001854:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
90001856:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
9000185a:	2e00      	cmp	r6, #0
9000185c:	f000 81ba 	beq.w	90001bd4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38c>
        if (length > aviBufferLength)
90001860:	6b83      	ldr	r3, [r0, #56]	; 0x38
90001862:	2b47      	cmp	r3, #71	; 0x47
90001864:	f240 8212 	bls.w	90001c8c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x444>
        reader->seek(offset);
90001868:	6833      	ldr	r3, [r6, #0]
9000186a:	4630      	mov	r0, r6
9000186c:	68db      	ldr	r3, [r3, #12]
9000186e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001870:	6b28      	ldr	r0, [r5, #48]	; 0x30
90001872:	2248      	movs	r2, #72	; 0x48
90001874:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001876:	6803      	ldr	r3, [r0, #0]
90001878:	691b      	ldr	r3, [r3, #16]
9000187a:	4798      	blx	r3
9000187c:	2800      	cmp	r0, #0
9000187e:	f000 80bd 	beq.w	900019fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        aviBufferStartOffset = offset;
90001882:	2300      	movs	r3, #0
    if (reader != 0)
90001884:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
90001886:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
90001888:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
9000188a:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
9000188c:	2e00      	cmp	r6, #0
9000188e:	f000 81a2 	beq.w	90001bd6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001892:	f8d5 8034 	ldr.w	r8, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90001896:	2204      	movs	r2, #4
90001898:	49c6      	ldr	r1, [pc, #792]	; (90001bb4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000189a:	eb08 0b07 	add.w	fp, r8, r7
    return strncmp(src, str, num);
9000189e:	4658      	mov	r0, fp
900018a0:	f02a fe81 	bl	9002c5a6 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900018a4:	2800      	cmp	r0, #0
900018a6:	f040 8201 	bne.w	90001cac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x464>
    currentMovieOffset += 8;
900018aa:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900018ae:	2204      	movs	r2, #4
900018b0:	49c1      	ldr	r1, [pc, #772]	; (90001bb8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
    currentMovieOffset += 8;
900018b2:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900018b4:	4440      	add	r0, r8
900018b6:	f02a fe76 	bl	9002c5a6 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900018ba:	2800      	cmp	r0, #0
900018bc:	f040 820a 	bne.w	90001cd4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x48c>
    currentMovieOffset += 4;
900018c0:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
900018c4:	2204      	movs	r2, #4
900018c6:	49bd      	ldr	r1, [pc, #756]	; (90001bbc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>)
900018c8:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
900018cc:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
900018d0:	f02a fe69 	bl	9002c5a6 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900018d4:	9001      	str	r0, [sp, #4]
900018d6:	2800      	cmp	r0, #0
900018d8:	f040 81f2 	bne.w	90001cc0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x478>
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900018dc:	f89b 4012 	ldrb.w	r4, [fp, #18]
900018e0:	f89b 2011 	ldrb.w	r2, [fp, #17]
900018e4:	0424      	lsls	r4, r4, #16
900018e6:	f89b 3013 	ldrb.w	r3, [fp, #19]
900018ea:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
900018ee:	f89b 2010 	ldrb.w	r2, [fp, #16]
900018f2:	4314      	orrs	r4, r2
    assert(aviListSize);
900018f4:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
900018f8:	f000 81d1 	beq.w	90001c9e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x456>
    uint32_t offset =  currentMovieOffset + 8;
900018fc:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001900:	2204      	movs	r2, #4
90001902:	49af      	ldr	r1, [pc, #700]	; (90001bc0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>)
90001904:	4440      	add	r0, r8
90001906:	f02a fe4e 	bl	9002c5a6 <strncmp>
    if (compare(offset, "hdrl", 4))
9000190a:	2800      	cmp	r0, #0
9000190c:	d07a      	beq.n	90001a04 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1bc>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000190e:	2306      	movs	r3, #6
        foundFrame = false;
90001910:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
90001914:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001918:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000191c:	4440      	add	r0, r8
    return strncmp(src, str, num);
9000191e:	2204      	movs	r2, #4
90001920:	49a8      	ldr	r1, [pc, #672]	; (90001bc4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>)
90001922:	f02a fe40 	bl	9002c5a6 <strncmp>
    if (compare(offset, "avih", 4))
90001926:	2800      	cmp	r0, #0
90001928:	f000 8088 	beq.w	90001a3c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1f4>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000192c:	2307      	movs	r3, #7
9000192e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001932:	4454      	add	r4, sl
90001934:	3408      	adds	r4, #8
    if (reader != 0)
90001936:	f1b9 0f00 	cmp.w	r9, #0
9000193a:	f000 80dd 	beq.w	90001af8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b0>
        if (length > aviBufferLength)
9000193e:	6bab      	ldr	r3, [r5, #56]	; 0x38
90001940:	2b0b      	cmp	r3, #11
90001942:	f240 81a3 	bls.w	90001c8c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x444>
        reader->seek(offset);
90001946:	f8d9 3000 	ldr.w	r3, [r9]
9000194a:	4621      	mov	r1, r4
9000194c:	4648      	mov	r0, r9
9000194e:	68db      	ldr	r3, [r3, #12]
90001950:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001952:	6b28      	ldr	r0, [r5, #48]	; 0x30
90001954:	220c      	movs	r2, #12
90001956:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001958:	6803      	ldr	r3, [r0, #0]
9000195a:	691b      	ldr	r3, [r3, #16]
9000195c:	4798      	blx	r3
9000195e:	2800      	cmp	r0, #0
90001960:	f000 8122 	beq.w	90001ba8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001964:	f895 a040 	ldrb.w	sl, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
90001968:	6b2e      	ldr	r6, [r5, #48]	; 0x30
9000196a:	63ec      	str	r4, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
9000196c:	f8df 825c 	ldr.w	r8, [pc, #604]	; 90001bcc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x384>
            lastError = AVI_ERROR_EOF_REACHED;
90001970:	f04f 090d 	mov.w	r9, #13
90001974:	e003      	b.n	9000197e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x136>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001976:	f895 a040 	ldrb.w	sl, [r5, #64]	; 0x40
    if (reader != 0)
9000197a:	6b2e      	ldr	r6, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
9000197c:	63ec      	str	r4, [r5, #60]	; 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000197e:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
90001982:	2e00      	cmp	r6, #0
90001984:	d048      	beq.n	90001a18 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d0>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001986:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
90001988:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000198a:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000198c:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000198e:	1afb      	subs	r3, r7, r3
90001990:	4418      	add	r0, r3
    return strncmp(src, str, num);
90001992:	f02a fe08 	bl	9002c5a6 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001996:	2800      	cmp	r0, #0
90001998:	d047      	beq.n	90001a2a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e2>
9000199a:	f1ba 0f00 	cmp.w	sl, #0
9000199e:	d147      	bne.n	90001a30 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
900019a0:	6aab      	ldr	r3, [r5, #40]	; 0x28
900019a2:	42a3      	cmp	r3, r4
900019a4:	f240 80ab 	bls.w	90001afe <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900019a8:	3404      	adds	r4, #4
    if (reader != 0)
900019aa:	b386      	cbz	r6, 90001a0e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c6>
        const uint32_t index = offset - aviBufferStartOffset;
900019ac:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
900019ae:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900019b2:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900019b4:	2b0b      	cmp	r3, #11
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900019b6:	eb01 0204 	add.w	r2, r1, r4
900019ba:	5d09      	ldrb	r1, [r1, r4]
900019bc:	7894      	ldrb	r4, [r2, #2]
900019be:	7850      	ldrb	r0, [r2, #1]
900019c0:	ea4f 4404 	mov.w	r4, r4, lsl #16
900019c4:	78d2      	ldrb	r2, [r2, #3]
900019c6:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900019ca:	ea44 0401 	orr.w	r4, r4, r1
900019ce:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900019d2:	443c      	add	r4, r7
        if (length > aviBufferLength)
900019d4:	f240 815a 	bls.w	90001c8c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x444>
        reader->seek(offset);
900019d8:	6833      	ldr	r3, [r6, #0]
900019da:	4621      	mov	r1, r4
900019dc:	4630      	mov	r0, r6
900019de:	68db      	ldr	r3, [r3, #12]
900019e0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900019e2:	6b28      	ldr	r0, [r5, #48]	; 0x30
900019e4:	220c      	movs	r2, #12
900019e6:	6b69      	ldr	r1, [r5, #52]	; 0x34
900019e8:	6803      	ldr	r3, [r0, #0]
900019ea:	691b      	ldr	r3, [r3, #16]
900019ec:	4798      	blx	r3
900019ee:	2800      	cmp	r0, #0
900019f0:	d1c1      	bne.n	90001976 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x12e>
            lastError = AVI_ERROR_EOF_REACHED;
900019f2:	f04f 0a0d 	mov.w	sl, #13
900019f6:	f885 9040 	strb.w	r9, [r5, #64]	; 0x40
900019fa:	e7be      	b.n	9000197a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x132>
900019fc:	230d      	movs	r3, #13
900019fe:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90001a02:	e73e      	b.n	90001882 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
90001a04:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001a08:	f04f 0b01 	mov.w	fp, #1
90001a0c:	e786      	b.n	9000191c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd4>
        listOffset += listSize;
90001a0e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90001a10:	591c      	ldr	r4, [r3, r4]
90001a12:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001a14:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90001a18:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001a1a:	2204      	movs	r2, #4
90001a1c:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
90001a1e:	2600      	movs	r6, #0
90001a20:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001a22:	f02a fdc0 	bl	9002c5a6 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001a26:	2800      	cmp	r0, #0
90001a28:	d1b7      	bne.n	9000199a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x152>
    if (lastError != AVI_NO_ERROR)
90001a2a:	f1ba 0f00 	cmp.w	sl, #0
90001a2e:	d066      	beq.n	90001afe <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
90001a30:	230a      	movs	r3, #10
90001a32:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
90001a36:	b003      	add	sp, #12
90001a38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
90001a3c:	f1bb 0f00 	cmp.w	fp, #0
90001a40:	f43f af77 	beq.w	90001932 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xea>
        offset += 8; //skip fourcc and cb in AVIMAINHEADER
90001a44:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
90001a48:	f1b9 0f00 	cmp.w	r9, #0
90001a4c:	f000 8102 	beq.w	90001c54 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40c>
        const uint32_t index = offset - aviBufferStartOffset;
90001a50:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001a52:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001a54:	1ac9      	subs	r1, r1, r3
90001a56:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset)/1000;
90001a5a:	f8df c174 	ldr.w	ip, [pc, #372]	; 90001bd0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x388>
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001a5e:	f812 8001 	ldrb.w	r8, [r2, r1]
90001a62:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001a66:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
90001a6a:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
90001a6e:	4438      	add	r0, r7
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001a70:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
90001a74:	4439      	add	r1, r7
90001a76:	441f      	add	r7, r3
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001a78:	f89e 3002 	ldrb.w	r3, [lr, #2]
90001a7c:	f89e e003 	ldrb.w	lr, [lr, #3]
90001a80:	041b      	lsls	r3, r3, #16
90001a82:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
90001a86:	ea43 0308 	orr.w	r3, r3, r8
90001a8a:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset)/1000;
90001a8e:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001a92:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset)/1000;
90001a96:	099b      	lsrs	r3, r3, #6
90001a98:	606b      	str	r3, [r5, #4]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001a9a:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001a9e:	f89c 8001 	ldrb.w	r8, [ip, #1]
90001aa2:	041b      	lsls	r3, r3, #16
90001aa4:	f812 e000 	ldrb.w	lr, [r2, r0]
90001aa8:	f89c c003 	ldrb.w	ip, [ip, #3]
90001aac:	1850      	adds	r0, r2, r1
90001aae:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001ab2:	ea43 030e 	orr.w	r3, r3, lr
90001ab6:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
90001aba:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001abc:	7883      	ldrb	r3, [r0, #2]
90001abe:	f890 c001 	ldrb.w	ip, [r0, #1]
90001ac2:	041b      	lsls	r3, r3, #16
90001ac4:	5c51      	ldrb	r1, [r2, r1]
90001ac6:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90001aca:	430b      	orrs	r3, r1
90001acc:	78c1      	ldrb	r1, [r0, #3]
90001ace:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001ad2:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001ad4:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001ad6:	788b      	ldrb	r3, [r1, #2]
90001ad8:	7848      	ldrb	r0, [r1, #1]
90001ada:	041b      	lsls	r3, r3, #16
90001adc:	5dd2      	ldrb	r2, [r2, r7]
90001ade:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001ae2:	4313      	orrs	r3, r2
90001ae4:	78ca      	ldrb	r2, [r1, #3]
90001ae6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001aea:	4454      	add	r4, sl
        videoInfo.frame_height = getU32(offset + 36);
90001aec:	612b      	str	r3, [r5, #16]
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001aee:	3408      	adds	r4, #8
    if (reader != 0)
90001af0:	f1b9 0f00 	cmp.w	r9, #0
90001af4:	f47f af23 	bne.w	9000193e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xf6>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001af8:	f895 a040 	ldrb.w	sl, [r5, #64]	; 0x40
90001afc:	e736      	b.n	9000196c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
    currentMovieOffset = listOffset + 8 + 4; //skip LIST and 'movi'
90001afe:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001b02:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; //skip LIST and 'movi'
90001b04:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001b06:	2e00      	cmp	r6, #0
90001b08:	f000 80b8 	beq.w	90001c7c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x434>
        const uint32_t index = offset - aviBufferStartOffset;
90001b0c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
90001b0e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001b10:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001b14:	f104 0e02 	add.w	lr, r4, #2
90001b18:	f104 0c01 	add.w	ip, r4, #1
90001b1c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001b20:	1ce0      	adds	r0, r4, #3
90001b22:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001b26:	2a03      	cmp	r2, #3
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001b28:	f811 900c 	ldrb.w	r9, [r1, ip]
90001b2c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001b30:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001b34:	ea43 0308 	orr.w	r3, r3, r8
90001b38:	f811 8000 	ldrb.w	r8, [r1, r0]
90001b3c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001b40:	443b      	add	r3, r7
90001b42:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90001b44:	f811 300e 	ldrb.w	r3, [r1, lr]
90001b48:	f811 c00c 	ldrb.w	ip, [r1, ip]
90001b4c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001b50:	5d0c      	ldrb	r4, [r1, r4]
90001b52:	5c09      	ldrb	r1, [r1, r0]
90001b54:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90001b58:	ea43 0304 	orr.w	r3, r3, r4
90001b5c:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    listOffset += listSize;
90001b60:	441f      	add	r7, r3
        if (length > aviBufferLength)
90001b62:	f240 8093 	bls.w	90001c8c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x444>
        reader->seek(offset);
90001b66:	6833      	ldr	r3, [r6, #0]
90001b68:	4639      	mov	r1, r7
90001b6a:	4630      	mov	r0, r6
90001b6c:	68db      	ldr	r3, [r3, #12]
90001b6e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b70:	6b28      	ldr	r0, [r5, #48]	; 0x30
90001b72:	2204      	movs	r2, #4
90001b74:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001b76:	6803      	ldr	r3, [r0, #0]
90001b78:	691b      	ldr	r3, [r3, #16]
90001b7a:	4798      	blx	r3
90001b7c:	2800      	cmp	r0, #0
90001b7e:	d05f      	beq.n	90001c40 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3f8>
    if (reader != 0)
90001b80:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
90001b82:	63ef      	str	r7, [r5, #60]	; 0x3c
    if (reader != 0)
90001b84:	2b00      	cmp	r3, #0
90001b86:	f000 80af 	beq.w	90001ce8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a0>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001b8a:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90001b8c:	2204      	movs	r2, #4
90001b8e:	490e      	ldr	r1, [pc, #56]	; (90001bc8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x380>)
90001b90:	f02a fd09 	bl	9002c5a6 <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001b94:	2800      	cmp	r0, #0
90001b96:	d16b      	bne.n	90001c70 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x428>
    frameNumber = 1; //next frame number is 1
90001b98:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
90001b9a:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
90001b9c:	61ef      	str	r7, [r5, #28]
    frameNumber = 1; //next frame number is 1
90001b9e:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001ba0:	622b      	str	r3, [r5, #32]
}
90001ba2:	b003      	add	sp, #12
90001ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001ba8:	230d      	movs	r3, #13
90001baa:	469a      	mov	sl, r3
90001bac:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90001bb0:	e6da      	b.n	90001968 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
90001bb2:	bf00      	nop
90001bb4:	9002d080 	.word	0x9002d080
90001bb8:	9002d138 	.word	0x9002d138
90001bbc:	9002d130 	.word	0x9002d130
90001bc0:	9002d128 	.word	0x9002d128
90001bc4:	9002d110 	.word	0x9002d110
90001bc8:	9002d120 	.word	0x9002d120
90001bcc:	9002d118 	.word	0x9002d118
90001bd0:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
90001bd4:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
90001bd6:	f8d5 802c 	ldr.w	r8, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001bda:	2204      	movs	r2, #4
90001bdc:	4944      	ldr	r1, [pc, #272]	; (90001cf0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
        src = (const char*)movieData + offset;
90001bde:	eb08 0407 	add.w	r4, r8, r7
    return strncmp(src, str, num);
90001be2:	4620      	mov	r0, r4
90001be4:	f02a fcdf 	bl	9002c5a6 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001be8:	2800      	cmp	r0, #0
90001bea:	d15f      	bne.n	90001cac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x464>
    currentMovieOffset += 8;
90001bec:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001bf0:	2204      	movs	r2, #4
90001bf2:	4940      	ldr	r1, [pc, #256]	; (90001cf4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
    currentMovieOffset += 8;
90001bf4:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001bf6:	4440      	add	r0, r8
90001bf8:	f02a fcd5 	bl	9002c5a6 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001bfc:	2800      	cmp	r0, #0
90001bfe:	d169      	bne.n	90001cd4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x48c>
    currentMovieOffset += 4;
90001c00:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
90001c04:	2204      	movs	r2, #4
90001c06:	493c      	ldr	r1, [pc, #240]	; (90001cf8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
90001c08:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
90001c0c:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
90001c10:	f02a fcc9 	bl	9002c5a6 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001c14:	4683      	mov	fp, r0
90001c16:	2800      	cmp	r0, #0
90001c18:	d152      	bne.n	90001cc0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x478>
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001c1a:	6924      	ldr	r4, [r4, #16]
    assert(aviListSize);
90001c1c:	2c00      	cmp	r4, #0
90001c1e:	d03e      	beq.n	90001c9e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x456>
    uint32_t offset =  currentMovieOffset + 8;
90001c20:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001c24:	2204      	movs	r2, #4
90001c26:	4935      	ldr	r1, [pc, #212]	; (90001cfc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b4>)
90001c28:	4440      	add	r0, r8
90001c2a:	f02a fcbc 	bl	9002c5a6 <strncmp>
    if (compare(offset, "hdrl", 4))
90001c2e:	b958      	cbnz	r0, 90001c48 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
    offset += 4;
90001c30:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001c34:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
90001c38:	4440      	add	r0, r8
90001c3a:	f04f 0900 	mov.w	r9, #0
90001c3e:	e66e      	b.n	9000191e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
            lastError = AVI_ERROR_EOF_REACHED;
90001c40:	230d      	movs	r3, #13
90001c42:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90001c46:	e79b      	b.n	90001b80 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x338>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001c48:	2306      	movs	r3, #6
    offset += 4;
90001c4a:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001c4e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
90001c52:	e7f1      	b.n	90001c38 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3f0>
90001c54:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        videoInfo.ms_between_frames = getU32(offset)/1000;
90001c56:	585a      	ldr	r2, [r3, r1]
90001c58:	441f      	add	r7, r3
90001c5a:	4b29      	ldr	r3, [pc, #164]	; (90001d00 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b8>)
90001c5c:	fba3 2302 	umull	r2, r3, r3, r2
90001c60:	099b      	lsrs	r3, r3, #6
90001c62:	606b      	str	r3, [r5, #4]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001c64:	6b3b      	ldr	r3, [r7, #48]	; 0x30
        videoInfo.number_of_frames = getU32(offset + 16);
90001c66:	60ab      	str	r3, [r5, #8]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001c68:	6c3b      	ldr	r3, [r7, #64]	; 0x40
        videoInfo.frame_width = getU32(offset + 32);
90001c6a:	60eb      	str	r3, [r5, #12]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001c6c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
90001c6e:	e73c      	b.n	90001aea <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001c70:	230b      	movs	r3, #11
90001c72:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
90001c76:	b003      	add	sp, #12
90001c78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90001c7c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001c7e:	5903      	ldr	r3, [r0, r4]
90001c80:	443b      	add	r3, r7
90001c82:	626b      	str	r3, [r5, #36]	; 0x24
    listOffset += listSize;
90001c84:	5903      	ldr	r3, [r0, r4]
90001c86:	441f      	add	r7, r3
        src = (const char*)movieData + offset;
90001c88:	4438      	add	r0, r7
90001c8a:	e77f      	b.n	90001b8c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x344>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c8c:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c8e:	4b1d      	ldr	r3, [pc, #116]	; (90001d04 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4bc>)
90001c90:	4a1d      	ldr	r2, [pc, #116]	; (90001d08 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4c0>)
90001c92:	21a6      	movs	r1, #166	; 0xa6
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c94:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90001c98:	481c      	ldr	r0, [pc, #112]	; (90001d0c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4c4>)
90001c9a:	f029 fd99 	bl	9002b7d0 <__assert_func>
    assert(aviListSize);
90001c9e:	4b1c      	ldr	r3, [pc, #112]	; (90001d10 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4c8>)
90001ca0:	f240 1149 	movw	r1, #329	; 0x149
90001ca4:	4a1b      	ldr	r2, [pc, #108]	; (90001d14 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4cc>)
90001ca6:	4819      	ldr	r0, [pc, #100]	; (90001d0c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4c4>)
90001ca8:	f029 fd92 	bl	9002b7d0 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90001cac:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001cae:	4b1a      	ldr	r3, [pc, #104]	; (90001d18 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4d0>)
90001cb0:	4a18      	ldr	r2, [pc, #96]	; (90001d14 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4cc>)
90001cb2:	f44f 719a 	mov.w	r1, #308	; 0x134
        lastError = AVI_ERROR_NOT_RIFF;
90001cb6:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
90001cba:	4814      	ldr	r0, [pc, #80]	; (90001d0c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4c4>)
90001cbc:	f029 fd88 	bl	9002b7d0 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001cc0:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001cc2:	4b16      	ldr	r3, [pc, #88]	; (90001d1c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4d4>)
90001cc4:	4a13      	ldr	r2, [pc, #76]	; (90001d14 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4cc>)
90001cc6:	f240 1143 	movw	r1, #323	; 0x143
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001cca:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
90001cce:	480f      	ldr	r0, [pc, #60]	; (90001d0c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4c4>)
90001cd0:	f029 fd7e 	bl	9002b7d0 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001cd4:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90001cd6:	4b12      	ldr	r3, [pc, #72]	; (90001d20 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4d8>)
90001cd8:	4a0e      	ldr	r2, [pc, #56]	; (90001d14 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4cc>)
90001cda:	f44f 719e 	mov.w	r1, #316	; 0x13c
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001cde:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
90001ce2:	480a      	ldr	r0, [pc, #40]	; (90001d0c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4c4>)
90001ce4:	f029 fd74 	bl	9002b7d0 <__assert_func>
        src = (const char*)movieData + offset;
90001ce8:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90001cea:	4438      	add	r0, r7
90001cec:	e74e      	b.n	90001b8c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x344>
90001cee:	bf00      	nop
90001cf0:	9002d080 	.word	0x9002d080
90001cf4:	9002d138 	.word	0x9002d138
90001cf8:	9002d130 	.word	0x9002d130
90001cfc:	9002d128 	.word	0x9002d128
90001d00:	10624dd3 	.word	0x10624dd3
90001d04:	9002cf4c 	.word	0x9002cf4c
90001d08:	9002cf60 	.word	0x9002cf60
90001d0c:	9002cee4 	.word	0x9002cee4
90001d10:	9002d104 	.word	0x9002d104
90001d14:	9002d0a4 	.word	0x9002d0a4
90001d18:	9002d088 	.word	0x9002d088
90001d1c:	9002d0ec 	.word	0x9002d0ec
90001d20:	9002d0d4 	.word	0x9002d0d4

90001d24 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
90001d24:	b410      	push	{r4}
    reader = 0; //not using reader
90001d26:	2400      	movs	r4, #0
    movieLength = length;
90001d28:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; //not using reader
90001d2c:	6304      	str	r4, [r0, #48]	; 0x30
}
90001d2e:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
90001d32:	f7ff bd89 	b.w	90001848 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
90001d36:	bf00      	nop

90001d38 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90001d38:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
90001d3a:	680b      	ldr	r3, [r1, #0]
{
90001d3c:	4604      	mov	r4, r0
    movieData = 0;
90001d3e:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001d40:	4608      	mov	r0, r1
90001d42:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
90001d44:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
90001d48:	4798      	blx	r3
90001d4a:	4603      	mov	r3, r0
    readVideoHeader();
90001d4c:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90001d4e:	62a3      	str	r3, [r4, #40]	; 0x28
}
90001d50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001d54:	f7ff bd78 	b.w	90001848 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001d58 <HAL_JPEG_InfoReadyCallback>:
{
90001d58:	b508      	push	{r3, lr}
  if(pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001d5a:	684b      	ldr	r3, [r1, #4]
{
90001d5c:	4608      	mov	r0, r1
  if(pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001d5e:	2b01      	cmp	r3, #1
90001d60:	d01a      	beq.n	90001d98 <HAL_JPEG_InfoReadyCallback+0x40>
    if(pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001d62:	2b02      	cmp	r3, #2
90001d64:	d010      	beq.n	90001d88 <HAL_JPEG_InfoReadyCallback+0x30>
    if(pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001d66:	b94b      	cbnz	r3, 90001d7c <HAL_JPEG_InfoReadyCallback+0x24>
      if((pInfo->ImageWidth % 8) != 0)
90001d68:	68cb      	ldr	r3, [r1, #12]
90001d6a:	0759      	lsls	r1, r3, #29
90001d6c:	d12f      	bne.n	90001dce <HAL_JPEG_InfoReadyCallback+0x76>
      if((pInfo->ImageHeight % 8) != 0)
90001d6e:	6883      	ldr	r3, [r0, #8]
90001d70:	075a      	lsls	r2, r3, #29
90001d72:	d003      	beq.n	90001d7c <HAL_JPEG_InfoReadyCallback+0x24>
        pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001d74:	f023 0307 	bic.w	r3, r3, #7
90001d78:	3308      	adds	r3, #8
90001d7a:	6083      	str	r3, [r0, #8]
    HAL_StatusTypeDef status = JPEG_GetDecodeColorConvertFunc(pInfo, &pConvert_Function, &MCU_TotalNb);
90001d7c:	4a1a      	ldr	r2, [pc, #104]	; (90001de8 <HAL_JPEG_InfoReadyCallback+0x90>)
90001d7e:	491b      	ldr	r1, [pc, #108]	; (90001dec <HAL_JPEG_InfoReadyCallback+0x94>)
90001d80:	f012 fd06 	bl	90014790 <JPEG_GetDecodeColorConvertFunc>
    if(status != HAL_OK)
90001d84:	bb40      	cbnz	r0, 90001dd8 <HAL_JPEG_InfoReadyCallback+0x80>
}
90001d86:	bd08      	pop	{r3, pc}
      if((pInfo->ImageWidth % 16) != 0)
90001d88:	68cb      	ldr	r3, [r1, #12]
90001d8a:	071a      	lsls	r2, r3, #28
90001d8c:	d0ef      	beq.n	90001d6e <HAL_JPEG_InfoReadyCallback+0x16>
        pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001d8e:	f023 030f 	bic.w	r3, r3, #15
90001d92:	3310      	adds	r3, #16
90001d94:	60cb      	str	r3, [r1, #12]
90001d96:	e7ea      	b.n	90001d6e <HAL_JPEG_InfoReadyCallback+0x16>
    if((pInfo->ImageWidth % 16) != 0)
90001d98:	68cb      	ldr	r3, [r1, #12]
90001d9a:	071a      	lsls	r2, r3, #28
90001d9c:	d003      	beq.n	90001da6 <HAL_JPEG_InfoReadyCallback+0x4e>
      pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001d9e:	f023 030f 	bic.w	r3, r3, #15
90001da2:	3310      	adds	r3, #16
90001da4:	60cb      	str	r3, [r1, #12]
    if((pInfo->ImageHeight % 16) != 0)
90001da6:	6883      	ldr	r3, [r0, #8]
90001da8:	0719      	lsls	r1, r3, #28
90001daa:	d003      	beq.n	90001db4 <HAL_JPEG_InfoReadyCallback+0x5c>
      pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001dac:	f023 030f 	bic.w	r3, r3, #15
90001db0:	3310      	adds	r3, #16
90001db2:	6083      	str	r3, [r0, #8]
    HAL_StatusTypeDef status = TGFX_JPEG_GetDecodeColorConvertFunc(pInfo, &pConvert_Function, &MCU_TotalNb);
90001db4:	4a0c      	ldr	r2, [pc, #48]	; (90001de8 <HAL_JPEG_InfoReadyCallback+0x90>)
90001db6:	490d      	ldr	r1, [pc, #52]	; (90001dec <HAL_JPEG_InfoReadyCallback+0x94>)
90001db8:	f001 ff74 	bl	90003ca4 <TGFX_JPEG_GetDecodeColorConvertFunc>
    if(status != HAL_OK)
90001dbc:	2800      	cmp	r0, #0
90001dbe:	d0e2      	beq.n	90001d86 <HAL_JPEG_InfoReadyCallback+0x2e>
      assert(status == HAL_OK);
90001dc0:	4b0b      	ldr	r3, [pc, #44]	; (90001df0 <HAL_JPEG_InfoReadyCallback+0x98>)
90001dc2:	f240 212e 	movw	r1, #558	; 0x22e
90001dc6:	4a0b      	ldr	r2, [pc, #44]	; (90001df4 <HAL_JPEG_InfoReadyCallback+0x9c>)
90001dc8:	480b      	ldr	r0, [pc, #44]	; (90001df8 <HAL_JPEG_InfoReadyCallback+0xa0>)
90001dca:	f029 fd01 	bl	9002b7d0 <__assert_func>
        pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001dce:	f023 0307 	bic.w	r3, r3, #7
90001dd2:	3308      	adds	r3, #8
90001dd4:	60c3      	str	r3, [r0, #12]
90001dd6:	e7ca      	b.n	90001d6e <HAL_JPEG_InfoReadyCallback+0x16>
      assert(status == HAL_OK);
90001dd8:	4b05      	ldr	r3, [pc, #20]	; (90001df0 <HAL_JPEG_InfoReadyCallback+0x98>)
90001dda:	f44f 7112 	mov.w	r1, #584	; 0x248
90001dde:	4a05      	ldr	r2, [pc, #20]	; (90001df4 <HAL_JPEG_InfoReadyCallback+0x9c>)
90001de0:	4805      	ldr	r0, [pc, #20]	; (90001df8 <HAL_JPEG_InfoReadyCallback+0xa0>)
90001de2:	f029 fcf5 	bl	9002b7d0 <__assert_func>
90001de6:	bf00      	nop
90001de8:	24005ba0 	.word	0x24005ba0
90001dec:	24005bdc 	.word	0x24005bdc
90001df0:	9002d140 	.word	0x9002d140
90001df4:	9002d154 	.word	0x9002d154
90001df8:	9002cee4 	.word	0x9002cee4

90001dfc <HAL_JPEG_GetDataCallback>:
  JPEG_InputImageIndex += NbDecodedData;
90001dfc:	4b0c      	ldr	r3, [pc, #48]	; (90001e30 <HAL_JPEG_GetDataCallback+0x34>)
{
90001dfe:	b410      	push	{r4}
  JPEG_InputImageIndex += NbDecodedData;
90001e00:	681a      	ldr	r2, [r3, #0]
  if(JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001e02:	4c0c      	ldr	r4, [pc, #48]	; (90001e34 <HAL_JPEG_GetDataCallback+0x38>)
  JPEG_InputImageIndex += NbDecodedData;
90001e04:	440a      	add	r2, r1
  if(JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001e06:	6824      	ldr	r4, [r4, #0]
  JPEG_InputImageIndex += NbDecodedData;
90001e08:	601a      	str	r2, [r3, #0]
  if(JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001e0a:	42a2      	cmp	r2, r4
90001e0c:	d302      	bcc.n	90001e14 <HAL_JPEG_GetDataCallback+0x18>
}
90001e0e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001e12:	4770      	bx	lr
    JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001e14:	4b08      	ldr	r3, [pc, #32]	; (90001e38 <HAL_JPEG_GetDataCallback+0x3c>)
    uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001e16:	1aa2      	subs	r2, r4, r2
    JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001e18:	681c      	ldr	r4, [r3, #0]
    HAL_JPEG_ConfigInputBuffer(hjpeg,(uint8_t *)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001e1a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
    JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001e1e:	4421      	add	r1, r4
    HAL_JPEG_ConfigInputBuffer(hjpeg,(uint8_t *)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001e20:	bf28      	it	cs
90001e22:	f44f 3280 	movcs.w	r2, #65536	; 0x10000
}
90001e26:	f85d 4b04 	ldr.w	r4, [sp], #4
    JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001e2a:	6019      	str	r1, [r3, #0]
    HAL_JPEG_ConfigInputBuffer(hjpeg,(uint8_t *)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001e2c:	f00a bc9c 	b.w	9000c768 <HAL_JPEG_ConfigInputBuffer>
90001e30:	24005b84 	.word	0x24005b84
90001e34:	24005b88 	.word	0x24005b88
90001e38:	24005b80 	.word	0x24005b80

90001e3c <HAL_JPEG_DataReadyCallback>:
{
90001e3c:	b570      	push	{r4, r5, r6, lr}
    Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001e3e:	4e1e      	ldr	r6, [pc, #120]	; (90001eb8 <HAL_JPEG_DataReadyCallback+0x7c>)
{
90001e40:	4605      	mov	r5, r0
    Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001e42:	2001      	movs	r0, #1
90001e44:	4c1d      	ldr	r4, [pc, #116]	; (90001ebc <HAL_JPEG_DataReadyCallback+0x80>)
90001e46:	6833      	ldr	r3, [r6, #0]
90001e48:	eb03 0143 	add.w	r1, r3, r3, lsl #1
    JPEG_OUT_Write_BufferIndex++;
90001e4c:	4403      	add	r3, r0
    Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001e4e:	f804 0021 	strb.w	r0, [r4, r1, lsl #2]
    if(JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90001e52:	4283      	cmp	r3, r0
    Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001e54:	eb04 0181 	add.w	r1, r4, r1, lsl #2
    Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001e58:	608a      	str	r2, [r1, #8]
    if(JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90001e5a:	d91a      	bls.n	90001e92 <HAL_JPEG_DataReadyCallback+0x56>
      JPEG_OUT_Write_BufferIndex = 0;
90001e5c:	2200      	movs	r2, #0
90001e5e:	4613      	mov	r3, r2
90001e60:	6032      	str	r2, [r6, #0]
    if(Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
90001e62:	eb03 0143 	add.w	r1, r3, r3, lsl #1
90001e66:	005a      	lsls	r2, r3, #1
90001e68:	f814 1021 	ldrb.w	r1, [r4, r1, lsl #2]
90001e6c:	b9c9      	cbnz	r1, 90001ea2 <HAL_JPEG_DataReadyCallback+0x66>
    HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001e6e:	4914      	ldr	r1, [pc, #80]	; (90001ec0 <HAL_JPEG_DataReadyCallback+0x84>)
90001e70:	4413      	add	r3, r2
90001e72:	4628      	mov	r0, r5
90001e74:	68ca      	ldr	r2, [r1, #12]
90001e76:	eb04 0483 	add.w	r4, r4, r3, lsl #2
90001e7a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90001e7e:	6861      	ldr	r1, [r4, #4]
90001e80:	01d2      	lsls	r2, r2, #7
90001e82:	f00a fc75 	bl	9000c770 <HAL_JPEG_ConfigOutputBuffer>
    SEM_POST(semDecodingDone);
90001e86:	4b0f      	ldr	r3, [pc, #60]	; (90001ec4 <HAL_JPEG_DataReadyCallback+0x88>)
}
90001e88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    SEM_POST(semDecodingDone);
90001e8c:	6818      	ldr	r0, [r3, #0]
90001e8e:	f00f b8b9 	b.w	90011004 <osSemaphoreRelease>
    if(Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
90001e92:	eb03 0143 	add.w	r1, r3, r3, lsl #1
    JPEG_OUT_Write_BufferIndex++;
90001e96:	6033      	str	r3, [r6, #0]
    if(Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
90001e98:	005a      	lsls	r2, r3, #1
90001e9a:	f814 1021 	ldrb.w	r1, [r4, r1, lsl #2]
90001e9e:	2900      	cmp	r1, #0
90001ea0:	d0e5      	beq.n	90001e6e <HAL_JPEG_DataReadyCallback+0x32>
      HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001ea2:	2102      	movs	r1, #2
90001ea4:	4628      	mov	r0, r5
90001ea6:	f00a fc27 	bl	9000c6f8 <HAL_JPEG_Pause>
      Output_Is_Paused = 1;
90001eaa:	4a07      	ldr	r2, [pc, #28]	; (90001ec8 <HAL_JPEG_DataReadyCallback+0x8c>)
90001eac:	2101      	movs	r1, #1
    HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001eae:	6833      	ldr	r3, [r6, #0]
      Output_Is_Paused = 1;
90001eb0:	6011      	str	r1, [r2, #0]
90001eb2:	fa03 f201 	lsl.w	r2, r3, r1
90001eb6:	e7da      	b.n	90001e6e <HAL_JPEG_DataReadyCallback+0x32>
90001eb8:	24005b90 	.word	0x24005b90
90001ebc:	24000004 	.word	0x24000004
90001ec0:	24005ba8 	.word	0x24005ba8
90001ec4:	24005be0 	.word	0x24005be0
90001ec8:	24005ba4 	.word	0x24005ba4

90001ecc <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90001ecc:	b672      	cpsid	i
  while (1)
90001ece:	e7fe      	b.n	90001ece <HAL_JPEG_ErrorCallback+0x2>

90001ed0 <HAL_JPEG_DecodeCpltCallback>:
  Jpeg_HWDecodingEnd = 1;
90001ed0:	4b01      	ldr	r3, [pc, #4]	; (90001ed8 <HAL_JPEG_DecodeCpltCallback+0x8>)
90001ed2:	2201      	movs	r2, #1
90001ed4:	601a      	str	r2, [r3, #0]
}
90001ed6:	4770      	bx	lr
90001ed8:	24005b98 	.word	0x24005b98

90001edc <DMA2D_CopyBuffer>:
  * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
  * @param job: External job reference
  * @retval None
  */
void DMA2D_CopyBuffer(External_DMA2D_JobTypeDef& job)
{
90001edc:	b5f0      	push	{r4, r5, r6, r7, lr}
  yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

  refline = (JPEG_ConvertorParams.ScaledWidth) * xRef + (JPEG_ConvertorParams.bytes_pr_pixel * yRef);

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001ede:	2302      	movs	r3, #2
  xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001ee0:	4c1a      	ldr	r4, [pc, #104]	; (90001f4c <DMA2D_CopyBuffer+0x70>)
90001ee2:	6806      	ldr	r6, [r0, #0]
  WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001ee4:	4d1a      	ldr	r5, [pc, #104]	; (90001f50 <DMA2D_CopyBuffer+0x74>)
  xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001ee6:	6822      	ldr	r2, [r4, #0]
90001ee8:	0131      	lsls	r1, r6, #4
  WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001eea:	636b      	str	r3, [r5, #52]	; 0x34

  /* Configure DMA2D data size */
  if(job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  // Last line of frame
90001eec:	4b19      	ldr	r3, [pc, #100]	; (90001f54 <DMA2D_CopyBuffer+0x78>)
90001eee:	681f      	ldr	r7, [r3, #0]
  xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001ef0:	fbb1 f3f2 	udiv	r3, r1, r2
  yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
90001ef4:	fb02 1113 	mls	r1, r2, r3, r1
  refline = (JPEG_ConvertorParams.ScaledWidth) * xRef + (JPEG_ConvertorParams.bytes_pr_pixel * yRef);
90001ef8:	6862      	ldr	r2, [r4, #4]
90001efa:	fb02 f303 	mul.w	r3, r2, r3
90001efe:	6922      	ldr	r2, [r4, #16]
90001f00:	ea4f 1c03 	mov.w	ip, r3, lsl #4
  if(job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  // Last line of frame
90001f04:	68e3      	ldr	r3, [r4, #12]
  refline = (JPEG_ConvertorParams.ScaledWidth) * xRef + (JPEG_ConvertorParams.bytes_pr_pixel * yRef);
90001f06:	fb01 f202 	mul.w	r2, r1, r2
  if(job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  // Last line of frame
90001f0a:	eba7 0e03 	sub.w	lr, r7, r3
90001f0e:	4576      	cmp	r6, lr
90001f10:	d317      	bcc.n	90001f42 <DMA2D_CopyBuffer+0x66>
  {
      WRITE_REG(DMA2D->NLR, (JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
90001f12:	68a1      	ldr	r1, [r4, #8]
90001f14:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
90001f18:	6469      	str	r1, [r5, #68]	; 0x44
  {
      WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
  }

  /* Configure DMA2D destination address */
  WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001f1a:	490f      	ldr	r1, [pc, #60]	; (90001f58 <DMA2D_CopyBuffer+0x7c>)

  /* DMA2D OOR register configuration ------------------------------------------*/
  WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001f1c:	f1c3 031e 	rsb	r3, r3, #30

  /* DMA2D FGPFCCR register configuration -------------------------------------*/
  WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

  /* Configure DMA2D source address */
  WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.jpeg_buffer->DataBuffer));
90001f20:	6840      	ldr	r0, [r0, #4]
  WRITE_REG(DMA2D->FGOR, 0);
90001f22:	2400      	movs	r4, #0
  WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001f24:	6809      	ldr	r1, [r1, #0]
  WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001f26:	011b      	lsls	r3, r3, #4
  WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.jpeg_buffer->DataBuffer));
90001f28:	6840      	ldr	r0, [r0, #4]
  WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001f2a:	4411      	add	r1, r2
90001f2c:	4a08      	ldr	r2, [pc, #32]	; (90001f50 <DMA2D_CopyBuffer+0x74>)
90001f2e:	4461      	add	r1, ip
90001f30:	63d1      	str	r1, [r2, #60]	; 0x3c
  WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001f32:	6413      	str	r3, [r2, #64]	; 0x40
  WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90001f34:	4909      	ldr	r1, [pc, #36]	; (90001f5c <DMA2D_CopyBuffer+0x80>)

  /* Configure DMA2D contol register */
  WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001f36:	4b0a      	ldr	r3, [pc, #40]	; (90001f60 <DMA2D_CopyBuffer+0x84>)
  WRITE_REG(DMA2D->FGOR, 0);
90001f38:	6114      	str	r4, [r2, #16]
  WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90001f3a:	61d1      	str	r1, [r2, #28]
  WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.jpeg_buffer->DataBuffer));
90001f3c:	60d0      	str	r0, [r2, #12]
  WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001f3e:	6013      	str	r3, [r2, #0]
}
90001f40:	bdf0      	pop	{r4, r5, r6, r7, pc}
      WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
90001f42:	0519      	lsls	r1, r3, #20
90001f44:	f041 0110 	orr.w	r1, r1, #16
90001f48:	6469      	str	r1, [r5, #68]	; 0x44
90001f4a:	e7e6      	b.n	90001f1a <DMA2D_CopyBuffer+0x3e>
90001f4c:	24005ba8 	.word	0x24005ba8
90001f50:	52001000 	.word	0x52001000
90001f54:	24005ba0 	.word	0x24005ba0
90001f58:	24005b7c 	.word	0x24005b7c
90001f5c:	ff09000b 	.word	0xff09000b
90001f60:	00010201 	.word	0x00010201

90001f64 <DMA2D_ExternalJobCompleted>:
  * @retval None
  */
void DMA2D_ExternalJobCompleted(External_DMA2D_JobTypeDef& job)
{
  // Mark ycbcr empty
  job.jpeg_buffer->State = JPEG_BUFFER_EMPTY;
90001f64:	2200      	movs	r2, #0
90001f66:	6843      	ldr	r3, [r0, #4]
      return count_ == 0;
90001f68:	490b      	ldr	r1, [pc, #44]	; (90001f98 <DMA2D_ExternalJobCompleted+0x34>)
90001f6a:	701a      	strb	r2, [r3, #0]
  job.jpeg_buffer->DataBufferSize = 0;

  // Mark dma paused if queue is empty
  if(external_queue.is_empty())
90001f6c:	68c9      	ldr	r1, [r1, #12]
  job.jpeg_buffer->DataBufferSize = 0;
90001f6e:	609a      	str	r2, [r3, #8]
  if(external_queue.is_empty())
90001f70:	b911      	cbnz	r1, 90001f78 <DMA2D_ExternalJobCompleted+0x14>
  {
      DMA2D_output_Is_Paused = 1;
90001f72:	4b0a      	ldr	r3, [pc, #40]	; (90001f9c <DMA2D_ExternalJobCompleted+0x38>)
90001f74:	2201      	movs	r2, #1
90001f76:	601a      	str	r2, [r3, #0]
  }

  // Check if last line
  if(job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001f78:	4b09      	ldr	r3, [pc, #36]	; (90001fa0 <DMA2D_ExternalJobCompleted+0x3c>)
90001f7a:	490a      	ldr	r1, [pc, #40]	; (90001fa4 <DMA2D_ExternalJobCompleted+0x40>)
90001f7c:	681b      	ldr	r3, [r3, #0]
90001f7e:	68c9      	ldr	r1, [r1, #12]
90001f80:	6802      	ldr	r2, [r0, #0]
90001f82:	1a5b      	subs	r3, r3, r1
90001f84:	429a      	cmp	r2, r3
90001f86:	d302      	bcc.n	90001f8e <DMA2D_ExternalJobCompleted+0x2a>
  {
      DMA2D_CopyBufferEnd = 1;
90001f88:	4b07      	ldr	r3, [pc, #28]	; (90001fa8 <DMA2D_ExternalJobCompleted+0x44>)
90001f8a:	2201      	movs	r2, #1
90001f8c:	601a      	str	r2, [r3, #0]
  }

  // Signal Hardware Decoding to wake up
  SEM_POST(semDecodingDone);
90001f8e:	4b07      	ldr	r3, [pc, #28]	; (90001fac <DMA2D_ExternalJobCompleted+0x48>)
90001f90:	6818      	ldr	r0, [r3, #0]
90001f92:	f00f b837 	b.w	90011004 <osSemaphoreRelease>
90001f96:	bf00      	nop
90001f98:	24005bbc 	.word	0x24005bbc
90001f9c:	24005b78 	.word	0x24005b78
90001fa0:	24005ba0 	.word	0x24005ba0
90001fa4:	24005ba8 	.word	0x24005ba8
90001fa8:	24005b74 	.word	0x24005b74
90001fac:	24005be0 	.word	0x24005be0

90001fb0 <_GLOBAL__sub_I_FrameBufferAddress>:
      : max_size_(Size), head_(0), tail_(0), count_(0)
90001fb0:	4b03      	ldr	r3, [pc, #12]	; (90001fc0 <_GLOBAL__sub_I_FrameBufferAddress+0x10>)
90001fb2:	2200      	movs	r2, #0
90001fb4:	2102      	movs	r1, #2
90001fb6:	60da      	str	r2, [r3, #12]
90001fb8:	6019      	str	r1, [r3, #0]
90001fba:	e9c3 2201 	strd	r2, r2, [r3, #4]
}
90001fbe:	4770      	bx	lr
90001fc0:	24005bbc 	.word	0x24005bbc

90001fc4 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001fc4:	2101      	movs	r1, #1
90001fc6:	2200      	movs	r2, #0
{
90001fc8:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001fca:	4608      	mov	r0, r1
90001fcc:	f00e ff96 	bl	90010efc <osSemaphoreNew>
90001fd0:	4b0b      	ldr	r3, [pc, #44]	; (90002000 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90001fd2:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001fd4:	b140      	cbz	r0, 90001fe8 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90001fd6:	2200      	movs	r2, #0
90001fd8:	2104      	movs	r1, #4
90001fda:	2001      	movs	r0, #1
90001fdc:	f00f f83e 	bl	9001105c <osMessageQueueNew>
90001fe0:	4b08      	ldr	r3, [pc, #32]	; (90002004 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90001fe2:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001fe4:	b130      	cbz	r0, 90001ff4 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90001fe6:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001fe8:	4b07      	ldr	r3, [pc, #28]	; (90002008 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
90001fea:	2128      	movs	r1, #40	; 0x28
90001fec:	4a07      	ldr	r2, [pc, #28]	; (9000200c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90001fee:	4808      	ldr	r0, [pc, #32]	; (90002010 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90001ff0:	f029 fbee 	bl	9002b7d0 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001ff4:	4b07      	ldr	r3, [pc, #28]	; (90002014 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90001ff6:	212c      	movs	r1, #44	; 0x2c
90001ff8:	4a04      	ldr	r2, [pc, #16]	; (9000200c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90001ffa:	4805      	ldr	r0, [pc, #20]	; (90002010 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90001ffc:	f029 fbe8 	bl	9002b7d0 <__assert_func>
90002000:	24005be8 	.word	0x24005be8
90002004:	24005be4 	.word	0x24005be4
90002008:	9002d1e0 	.word	0x9002d1e0
9000200c:	9002d22c 	.word	0x9002d22c
90002010:	9002d25c 	.word	0x9002d25c
90002014:	9002d2b8 	.word	0x9002d2b8

90002018 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90002018:	4b02      	ldr	r3, [pc, #8]	; (90002024 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000201a:	f04f 31ff 	mov.w	r1, #4294967295
9000201e:	6818      	ldr	r0, [r3, #0]
90002020:	f00e bfbc 	b.w	90010f9c <osSemaphoreAcquire>
90002024:	24005be8 	.word	0x24005be8

90002028 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90002028:	4b01      	ldr	r3, [pc, #4]	; (90002030 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000202a:	6818      	ldr	r0, [r3, #0]
9000202c:	f00e bfea 	b.w	90011004 <osSemaphoreRelease>
90002030:	24005be8 	.word	0x24005be8

90002034 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002034:	4b02      	ldr	r3, [pc, #8]	; (90002040 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90002036:	2100      	movs	r1, #0
90002038:	6818      	ldr	r0, [r3, #0]
9000203a:	f00e bfaf 	b.w	90010f9c <osSemaphoreAcquire>
9000203e:	bf00      	nop
90002040:	24005be8 	.word	0x24005be8

90002044 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
90002044:	4b01      	ldr	r3, [pc, #4]	; (9000204c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90002046:	6818      	ldr	r0, [r3, #0]
90002048:	f00e bfdc 	b.w	90011004 <osSemaphoreRelease>
9000204c:	24005be8 	.word	0x24005be8

90002050 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002050:	4803      	ldr	r0, [pc, #12]	; (90002060 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002052:	2300      	movs	r3, #0
90002054:	4903      	ldr	r1, [pc, #12]	; (90002064 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90002056:	461a      	mov	r2, r3
90002058:	6800      	ldr	r0, [r0, #0]
9000205a:	f00f b839 	b.w	900110d0 <osMessageQueuePut>
9000205e:	bf00      	nop
90002060:	24005be4 	.word	0x24005be4
90002064:	2400001c 	.word	0x2400001c

90002068 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90002068:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000206a:	2300      	movs	r3, #0
{
9000206c:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000206e:	4c07      	ldr	r4, [pc, #28]	; (9000208c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90002070:	461a      	mov	r2, r3
90002072:	a901      	add	r1, sp, #4
90002074:	6820      	ldr	r0, [r4, #0]
90002076:	f00f f86d 	bl	90011154 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
9000207a:	f04f 33ff 	mov.w	r3, #4294967295
9000207e:	2200      	movs	r2, #0
90002080:	a901      	add	r1, sp, #4
90002082:	6820      	ldr	r0, [r4, #0]
90002084:	f00f f866 	bl	90011154 <osMessageQueueGet>
}
90002088:	b002      	add	sp, #8
9000208a:	bd10      	pop	{r4, pc}
9000208c:	24005be4 	.word	0x24005be4

90002090 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90002090:	6803      	ldr	r3, [r0, #0]
90002092:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90002094:	4718      	bx	r3
90002096:	bf00      	nop

90002098 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90002098:	2001      	movs	r0, #1
9000209a:	4770      	bx	lr

9000209c <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
9000209c:	4905      	ldr	r1, [pc, #20]	; (900020b4 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000209e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900020a2:	4b05      	ldr	r3, [pc, #20]	; (900020b8 <_ZN8STM32DMAD1Ev+0x1c>)
900020a4:	6001      	str	r1, [r0, #0]
900020a6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900020aa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900020ae:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900020b2:	4770      	bx	lr
900020b4:	9002d470 	.word	0x9002d470
900020b8:	e000e100 	.word	0xe000e100

900020bc <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900020bc:	4b0f      	ldr	r3, [pc, #60]	; (900020fc <_ZN8STM32DMA10initializeEv+0x40>)
{
900020be:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900020c0:	490f      	ldr	r1, [pc, #60]	; (90002100 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900020c2:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900020c6:	480f      	ldr	r0, [pc, #60]	; (90002104 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900020c8:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900020cc:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
900020ce:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900020d2:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900020d6:	f002 0210 	and.w	r2, r2, #16
900020da:	9201      	str	r2, [sp, #4]
900020dc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
900020de:	6fda      	ldr	r2, [r3, #124]	; 0x7c
900020e0:	f042 0210 	orr.w	r2, r2, #16
900020e4:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
900020e6:	6fda      	ldr	r2, [r3, #124]	; 0x7c
900020e8:	f022 0210 	bic.w	r2, r2, #16
900020ec:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900020ee:	4b06      	ldr	r3, [pc, #24]	; (90002108 <_ZN8STM32DMA10initializeEv+0x4c>)
900020f0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900020f4:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
900020f6:	b002      	add	sp, #8
900020f8:	4770      	bx	lr
900020fa:	bf00      	nop
900020fc:	58024400 	.word	0x58024400
90002100:	2400d7c4 	.word	0x2400d7c4
90002104:	900024b5 	.word	0x900024b5
90002108:	e000e100 	.word	0xe000e100

9000210c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
9000210c:	f240 30ef 	movw	r0, #1007	; 0x3ef
90002110:	4770      	bx	lr
90002112:	bf00      	nop

90002114 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002114:	4909      	ldr	r1, [pc, #36]	; (9000213c <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002116:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000211a:	4b09      	ldr	r3, [pc, #36]	; (90002140 <_ZN8STM32DMAD0Ev+0x2c>)
9000211c:	b510      	push	{r4, lr}
9000211e:	6001      	str	r1, [r0, #0]
90002120:	4604      	mov	r4, r0
90002122:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002126:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000212a:	f3bf 8f6f 	isb	sy
}
9000212e:	f640 51a8 	movw	r1, #3496	; 0xda8
90002132:	f029 f970 	bl	9002b416 <_ZdlPvj>
90002136:	4620      	mov	r0, r4
90002138:	bd10      	pop	{r4, pc}
9000213a:	bf00      	nop
9000213c:	9002d470 	.word	0x9002d470
90002140:	e000e100 	.word	0xe000e100

90002144 <_ZN8STM32DMA5startEv>:
                externalJobExecute();
            }
        }
    }

    virtual void start()
90002144:	b510      	push	{r4, lr}
90002146:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
90002148:	f04f 31ff 	mov.w	r1, #4294967295
9000214c:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
90002150:	f00e fe8e 	bl	90010e70 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
90002154:	6860      	ldr	r0, [r4, #4]
90002156:	6803      	ldr	r3, [r0, #0]
90002158:	681b      	ldr	r3, [r3, #0]
9000215a:	4798      	blx	r3
9000215c:	b978      	cbnz	r0, 9000217e <_ZN8STM32DMA5startEv+0x3a>
9000215e:	7a63      	ldrb	r3, [r4, #9]
90002160:	b16b      	cbz	r3, 9000217e <_ZN8STM32DMA5startEv+0x3a>
90002162:	7a23      	ldrb	r3, [r4, #8]
90002164:	b92b      	cbnz	r3, 90002172 <_ZN8STM32DMA5startEv+0x2e>
        {
            started_by_external_job = false;
            execute();
90002166:	6822      	ldr	r2, [r4, #0]
90002168:	4620      	mov	r0, r4
            started_by_external_job = false;
9000216a:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
9000216e:	6a53      	ldr	r3, [r2, #36]	; 0x24
90002170:	4798      	blx	r3
        else if(!external_queue.is_empty() && !isRunning)
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
90002172:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90002176:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
9000217a:	f00e be9d 	b.w	90010eb8 <osMutexRelease>
      return count_ == 0;
9000217e:	4b0b      	ldr	r3, [pc, #44]	; (900021ac <_ZN8STM32DMA5startEv+0x68>)
        else if(!external_queue.is_empty() && !isRunning)
90002180:	68da      	ldr	r2, [r3, #12]
90002182:	2a00      	cmp	r2, #0
90002184:	d0f5      	beq.n	90002172 <_ZN8STM32DMA5startEv+0x2e>
90002186:	7a22      	ldrb	r2, [r4, #8]
90002188:	2a00      	cmp	r2, #0
9000218a:	d1f2      	bne.n	90002172 <_ZN8STM32DMA5startEv+0x2e>
      return buffer_[head_];
9000218c:	6858      	ldr	r0, [r3, #4]
            started_by_external_job = true;
9000218e:	2201      	movs	r2, #1
      return buffer_[head_];
90002190:	3002      	adds	r0, #2
            started_by_external_job = true;
90002192:	f884 2da0 	strb.w	r2, [r4, #3488]	; 0xda0
     *
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
90002196:	7222      	strb	r2, [r4, #8]
        External_DMA2D_JobTypeDef& job = external_queue.front();
        DMA2D_CopyBuffer(job);
90002198:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
9000219c:	f7ff fe9e 	bl	90001edc <DMA2D_CopyBuffer>
        MUTEX_UNLOCK(mutexIsRunning);
900021a0:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
900021a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
900021a8:	f00e be86 	b.w	90010eb8 <osMutexRelease>
900021ac:	24005bbc 	.word	0x24005bbc

900021b0 <_ZN8STM32DMA18signalDMAInterruptEv>:
    virtual void signalDMAInterrupt()
900021b0:	b538      	push	{r3, r4, r5, lr}
        if(started_by_external_job)
900021b2:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
900021b6:	4604      	mov	r4, r0
        if(started_by_external_job)
900021b8:	b943      	cbnz	r3, 900021cc <_ZN8STM32DMA18signalDMAInterruptEv+0x1c>
            executeCompleted();
900021ba:	6803      	ldr	r3, [r0, #0]
900021bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900021be:	4798      	blx	r3
      return count_ == 0;
900021c0:	4b15      	ldr	r3, [pc, #84]	; (90002218 <_ZN8STM32DMA18signalDMAInterruptEv+0x68>)
            if(!external_queue.is_empty() && !isRunning)
900021c2:	68da      	ldr	r2, [r3, #12]
900021c4:	b10a      	cbz	r2, 900021ca <_ZN8STM32DMA18signalDMAInterruptEv+0x1a>
900021c6:	7a22      	ldrb	r2, [r4, #8]
900021c8:	b1d2      	cbz	r2, 90002200 <_ZN8STM32DMA18signalDMAInterruptEv+0x50>
    }
900021ca:	bd38      	pop	{r3, r4, r5, pc}
      return count_ == 0;
900021cc:	4b12      	ldr	r3, [pc, #72]	; (90002218 <_ZN8STM32DMA18signalDMAInterruptEv+0x68>)
900021ce:	68da      	ldr	r2, [r3, #12]
        if(!external_queue.is_empty() && isRunning)
900021d0:	2a00      	cmp	r2, #0
900021d2:	d0fa      	beq.n	900021ca <_ZN8STM32DMA18signalDMAInterruptEv+0x1a>
900021d4:	7a01      	ldrb	r1, [r0, #8]
900021d6:	2900      	cmp	r1, #0
900021d8:	d0f7      	beq.n	900021ca <_ZN8STM32DMA18signalDMAInterruptEv+0x1a>
            isRunning = false;
900021da:	2100      	movs	r1, #0
      count_--;
900021dc:	3a01      	subs	r2, #1
      head_ = (head_ + 1) % max_size_;
900021de:	e9d3 5000 	ldrd	r5, r0, [r3]
            isRunning = false;
900021e2:	7221      	strb	r1, [r4, #8]
      head_ = (head_ + 1) % max_size_;
900021e4:	1c41      	adds	r1, r0, #1
      count_--;
900021e6:	60da      	str	r2, [r3, #12]
      return buffer_[head_];
900021e8:	3002      	adds	r0, #2
      head_ = (head_ + 1) % max_size_;
900021ea:	fbb1 f2f5 	udiv	r2, r1, r5
900021ee:	fb05 1112 	mls	r1, r5, r2, r1
            DMA2D_ExternalJobCompleted(completed_job);
900021f2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
      head_ = (head_ + 1) % max_size_;
900021f6:	6059      	str	r1, [r3, #4]
    }
900021f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            DMA2D_ExternalJobCompleted(completed_job);
900021fc:	f7ff beb2 	b.w	90001f64 <DMA2D_ExternalJobCompleted>
      return buffer_[head_];
90002200:	6858      	ldr	r0, [r3, #4]
                started_by_external_job = true;
90002202:	2201      	movs	r2, #1
      return buffer_[head_];
90002204:	3002      	adds	r0, #2
                started_by_external_job = true;
90002206:	f884 2da0 	strb.w	r2, [r4, #3488]	; 0xda0
        isRunning = true;
9000220a:	7222      	strb	r2, [r4, #8]
        DMA2D_CopyBuffer(job);
9000220c:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
    }
90002210:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        DMA2D_CopyBuffer(job);
90002214:	f7ff be62 	b.w	90001edc <DMA2D_CopyBuffer>
90002218:	24005bbc 	.word	0x24005bbc

9000221c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
9000221c:	b538      	push	{r3, r4, r5, lr}
    switch (format)
9000221e:	7f8b      	ldrb	r3, [r1, #30]
90002220:	2b0a      	cmp	r3, #10
90002222:	d83e      	bhi.n	900022a2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90002224:	e8df f003 	tbb	[pc, r3]
90002228:	3d2a063b 	.word	0x3d2a063b
9000222c:	063d3d3d 	.word	0x063d3d3d
90002230:	0606      	.short	0x0606
90002232:	06          	.byte	0x06
90002233:	00          	.byte	0x00
90002234:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002236:	f8b1 c014 	ldrh.w	ip, [r1, #20]
9000223a:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000223c:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000223e:	4b1c      	ldr	r3, [pc, #112]	; (900022b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002240:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002244:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002248:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000224a:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000224c:	6908      	ldr	r0, [r1, #16]
9000224e:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002250:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90002252:	680d      	ldr	r5, [r1, #0]
90002254:	2d08      	cmp	r5, #8
90002256:	d013      	beq.n	90002280 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90002258:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000225a:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
9000225c:	4c15      	ldr	r4, [pc, #84]	; (900022b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
9000225e:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90002260:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002262:	0a0a      	lsrs	r2, r1, #8
90002264:	0948      	lsrs	r0, r1, #5
90002266:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9000226a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
9000226e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90002272:	4302      	orrs	r2, r0
90002274:	430a      	orrs	r2, r1
90002276:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90002278:	601c      	str	r4, [r3, #0]
    }
}
9000227a:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
9000227c:	2400      	movs	r4, #0
9000227e:	e7da      	b.n	90002236 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002280:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002282:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002284:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002286:	4a0c      	ldr	r2, [pc, #48]	; (900022b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90002288:	7f0c      	ldrb	r4, [r1, #28]
9000228a:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
9000228e:	4c0b      	ldr	r4, [pc, #44]	; (900022bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002290:	61da      	str	r2, [r3, #28]
90002292:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90002294:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002296:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002298:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
9000229a:	601c      	str	r4, [r3, #0]
}
9000229c:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
9000229e:	2402      	movs	r4, #2
900022a0:	e7c9      	b.n	90002236 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
900022a2:	4b07      	ldr	r3, [pc, #28]	; (900022c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900022a4:	2188      	movs	r1, #136	; 0x88
900022a6:	4a07      	ldr	r2, [pc, #28]	; (900022c4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900022a8:	4807      	ldr	r0, [pc, #28]	; (900022c8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
900022aa:	f029 fa91 	bl	9002b7d0 <__assert_func>
900022ae:	bf00      	nop
900022b0:	52001000 	.word	0x52001000
900022b4:	00030201 	.word	0x00030201
900022b8:	00010009 	.word	0x00010009
900022bc:	00020201 	.word	0x00020201
900022c0:	9002d2fc 	.word	0x9002d2fc
900022c4:	9002d318 	.word	0x9002d318
900022c8:	9002d364 	.word	0x9002d364

900022cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900022cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900022ce:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900022d2:	f1be 0f0b 	cmp.w	lr, #11
900022d6:	f200 80c1 	bhi.w	9000245c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
900022da:	e8df f01e 	tbh	[pc, lr, lsl #1]
900022de:	0063      	.short	0x0063
900022e0:	004c0065 	.word	0x004c0065
900022e4:	00bf00bf 	.word	0x00bf00bf
900022e8:	00bf00bf 	.word	0x00bf00bf
900022ec:	000c000c 	.word	0x000c000c
900022f0:	000c000c 	.word	0x000c000c
900022f4:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
900022f6:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900022f8:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900022fc:	f1bc 0f0b 	cmp.w	ip, #11
90002300:	f200 80ac 	bhi.w	9000245c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90002304:	e8df f00c 	tbb	[pc, ip]
90002308:	aa0e4b52 	.word	0xaa0e4b52
9000230c:	06aaaaaa 	.word	0x06aaaaaa
90002310:	06060606 	.word	0x06060606
    switch (format)
90002314:	f1ac 0307 	sub.w	r3, ip, #7
90002318:	2b03      	cmp	r3, #3
9000231a:	f200 80a5 	bhi.w	90002468 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
9000231e:	2605      	movs	r6, #5
90002320:	2701      	movs	r7, #1
90002322:	e001      	b.n	90002328 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002324:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002326:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002328:	8a8b      	ldrh	r3, [r1, #20]
9000232a:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000232c:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000232e:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002330:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002332:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002334:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002338:	4b52      	ldr	r3, [pc, #328]	; (90002484 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000233a:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000233c:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000233e:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002340:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002342:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002344:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002346:	6908      	ldr	r0, [r1, #16]
90002348:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000234a:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
9000234c:	680a      	ldr	r2, [r1, #0]
9000234e:	2a80      	cmp	r2, #128	; 0x80
90002350:	d03b      	beq.n	900023ca <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90002352:	d812      	bhi.n	9000237a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90002354:	2a20      	cmp	r2, #32
90002356:	d02c      	beq.n	900023b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90002358:	2a40      	cmp	r2, #64	; 0x40
9000235a:	d02a      	beq.n	900023b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
9000235c:	2a04      	cmp	r2, #4
9000235e:	d169      	bne.n	90002434 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002360:	7f0a      	ldrb	r2, [r1, #28]
90002362:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90002366:	4a48      	ldr	r2, [pc, #288]	; (90002488 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002368:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
9000236c:	61dd      	str	r5, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000236e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002370:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90002372:	601a      	str	r2, [r3, #0]
}
90002374:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002376:	2500      	movs	r5, #0
90002378:	e7be      	b.n	900022f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
9000237a:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9000237e:	d067      	beq.n	90002450 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90002380:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90002384:	d156      	bne.n	90002434 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002386:	7f0c      	ldrb	r4, [r1, #28]
90002388:	4a40      	ldr	r2, [pc, #256]	; (9000248c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
9000238a:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
9000238e:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90002390:	4a3d      	ldr	r2, [pc, #244]	; (90002488 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90002392:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90002394:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002396:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002398:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
9000239a:	601a      	str	r2, [r3, #0]
}
9000239c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
9000239e:	2601      	movs	r6, #1
900023a0:	4637      	mov	r7, r6
900023a2:	e7c1      	b.n	90002328 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
900023a4:	2502      	movs	r5, #2
900023a6:	e7a7      	b.n	900022f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
900023a8:	2501      	movs	r5, #1
900023aa:	e7a5      	b.n	900022f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
900023ac:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900023ae:	4637      	mov	r7, r6
900023b0:	e7ba      	b.n	90002328 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900023b2:	7f0b      	ldrb	r3, [r1, #28]
900023b4:	4a33      	ldr	r2, [pc, #204]	; (90002484 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
900023b6:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
900023ba:	4b33      	ldr	r3, [pc, #204]	; (90002488 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900023bc:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
900023c0:	61d5      	str	r5, [r2, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900023c2:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900023c4:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
900023c6:	6013      	str	r3, [r2, #0]
}
900023c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900023ca:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900023cc:	1d14      	adds	r4, r2, #4
900023ce:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900023d0:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
900023d2:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900023d4:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
900023d8:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
900023dc:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900023de:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900023e0:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900023e2:	b9b1      	cbnz	r1, 90002412 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900023e4:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
900023e6:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900023e8:	69d8      	ldr	r0, [r3, #28]
900023ea:	4a29      	ldr	r2, [pc, #164]	; (90002490 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
900023ec:	3901      	subs	r1, #1
900023ee:	4002      	ands	r2, r0
900023f0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900023f4:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900023f6:	4a23      	ldr	r2, [pc, #140]	; (90002484 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
900023f8:	69d3      	ldr	r3, [r2, #28]
900023fa:	f043 0320 	orr.w	r3, r3, #32
900023fe:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90002400:	69d3      	ldr	r3, [r2, #28]
90002402:	069b      	lsls	r3, r3, #26
90002404:	d4fc      	bmi.n	90002400 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90002406:	2310      	movs	r3, #16
90002408:	6093      	str	r3, [r2, #8]
            if(blend)
9000240a:	b324      	cbz	r4, 90002456 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
9000240c:	4b1e      	ldr	r3, [pc, #120]	; (90002488 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
9000240e:	6013      	str	r3, [r2, #0]
}
90002410:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90002412:	2901      	cmp	r1, #1
90002414:	d12e      	bne.n	90002474 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002416:	8851      	ldrh	r1, [r2, #2]
                if(blitOp.alpha == 255)
90002418:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
9000241a:	69d8      	ldr	r0, [r3, #28]
9000241c:	4a1c      	ldr	r2, [pc, #112]	; (90002490 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
9000241e:	f101 31ff 	add.w	r1, r1, #4294967295
                if(blitOp.alpha == 255)
90002422:	bf18      	it	ne
90002424:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002426:	4002      	ands	r2, r0
90002428:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000242c:	f042 0210 	orr.w	r2, r2, #16
90002430:	61da      	str	r2, [r3, #28]
                break;
90002432:	e7e0      	b.n	900023f6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002434:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90002436:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002438:	4b12      	ldr	r3, [pc, #72]	; (90002484 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000243a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
9000243e:	bf14      	ite	ne
90002440:	4a14      	ldrne	r2, [pc, #80]	; (90002494 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90002442:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002446:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
9000244a:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
9000244c:	601a      	str	r2, [r3, #0]
}
9000244e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002450:	7f0c      	ldrb	r4, [r1, #28]
90002452:	4a11      	ldr	r2, [pc, #68]	; (90002498 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90002454:	e799      	b.n	9000238a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002456:	4b0f      	ldr	r3, [pc, #60]	; (90002494 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90002458:	6013      	str	r3, [r2, #0]
}
9000245a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000245c:	4b0f      	ldr	r3, [pc, #60]	; (9000249c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
9000245e:	2167      	movs	r1, #103	; 0x67
90002460:	4a0f      	ldr	r2, [pc, #60]	; (900024a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90002462:	4810      	ldr	r0, [pc, #64]	; (900024a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90002464:	f029 f9b4 	bl	9002b7d0 <__assert_func>
        assert(0 && "Unsupported Format!");
90002468:	4b0c      	ldr	r3, [pc, #48]	; (9000249c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
9000246a:	2188      	movs	r1, #136	; 0x88
9000246c:	4a0e      	ldr	r2, [pc, #56]	; (900024a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
9000246e:	480d      	ldr	r0, [pc, #52]	; (900024a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90002470:	f029 f9ae 	bl	9002b7d0 <__assert_func>
                assert(0 && "Unsupported format");
90002474:	4b0d      	ldr	r3, [pc, #52]	; (900024ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90002476:	f44f 7189 	mov.w	r1, #274	; 0x112
9000247a:	4a0d      	ldr	r2, [pc, #52]	; (900024b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
9000247c:	4809      	ldr	r0, [pc, #36]	; (900024a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
9000247e:	f029 f9a7 	bl	9002b7d0 <__assert_func>
90002482:	bf00      	nop
90002484:	52001000 	.word	0x52001000
90002488:	00020201 	.word	0x00020201
9000248c:	00020009 	.word	0x00020009
90002490:	ffff00ef 	.word	0xffff00ef
90002494:	00010201 	.word	0x00010201
90002498:	0002000a 	.word	0x0002000a
9000249c:	9002d2fc 	.word	0x9002d2fc
900024a0:	9002d3c0 	.word	0x9002d3c0
900024a4:	9002d364 	.word	0x9002d364
900024a8:	9002d318 	.word	0x9002d318
900024ac:	9002d40c 	.word	0x9002d40c
900024b0:	9002d428 	.word	0x9002d428

900024b4 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
900024b4:	4b1f      	ldr	r3, [pc, #124]	; (90002534 <DMA2D_XferCpltCallback+0x80>)
900024b6:	4920      	ldr	r1, [pc, #128]	; (90002538 <DMA2D_XferCpltCallback+0x84>)
900024b8:	681b      	ldr	r3, [r3, #0]
    {
900024ba:	b570      	push	{r4, r5, r6, lr}
900024bc:	685c      	ldr	r4, [r3, #4]
900024be:	6823      	ldr	r3, [r4, #0]
900024c0:	695a      	ldr	r2, [r3, #20]
900024c2:	428a      	cmp	r2, r1
900024c4:	d125      	bne.n	90002512 <DMA2D_XferCpltCallback+0x5e>
        if(started_by_external_job)
900024c6:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
900024ca:	b942      	cbnz	r2, 900024de <DMA2D_XferCpltCallback+0x2a>
            executeCompleted();
900024cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900024ce:	4620      	mov	r0, r4
900024d0:	4798      	blx	r3
      return count_ == 0;
900024d2:	4b1a      	ldr	r3, [pc, #104]	; (9000253c <DMA2D_XferCpltCallback+0x88>)
            if(!external_queue.is_empty() && !isRunning)
900024d4:	68da      	ldr	r2, [r3, #12]
900024d6:	b10a      	cbz	r2, 900024dc <DMA2D_XferCpltCallback+0x28>
900024d8:	7a22      	ldrb	r2, [r4, #8]
900024da:	b1f2      	cbz	r2, 9000251a <DMA2D_XferCpltCallback+0x66>
    }
900024dc:	bd70      	pop	{r4, r5, r6, pc}
      return count_ == 0;
900024de:	4b17      	ldr	r3, [pc, #92]	; (9000253c <DMA2D_XferCpltCallback+0x88>)
900024e0:	68da      	ldr	r2, [r3, #12]
        if(!external_queue.is_empty() && isRunning)
900024e2:	2a00      	cmp	r2, #0
900024e4:	d0fa      	beq.n	900024dc <DMA2D_XferCpltCallback+0x28>
900024e6:	7a21      	ldrb	r1, [r4, #8]
900024e8:	2900      	cmp	r1, #0
900024ea:	d0f7      	beq.n	900024dc <DMA2D_XferCpltCallback+0x28>
            isRunning = false;
900024ec:	2100      	movs	r1, #0
      count_--;
900024ee:	3a01      	subs	r2, #1
      head_ = (head_ + 1) % max_size_;
900024f0:	e9d3 5000 	ldrd	r5, r0, [r3]
            isRunning = false;
900024f4:	7221      	strb	r1, [r4, #8]
      head_ = (head_ + 1) % max_size_;
900024f6:	1c41      	adds	r1, r0, #1
      count_--;
900024f8:	60da      	str	r2, [r3, #12]
      return buffer_[head_];
900024fa:	3002      	adds	r0, #2
      head_ = (head_ + 1) % max_size_;
900024fc:	fbb1 f2f5 	udiv	r2, r1, r5
90002500:	fb05 1112 	mls	r1, r5, r2, r1
            DMA2D_ExternalJobCompleted(completed_job);
90002504:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
90002508:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      head_ = (head_ + 1) % max_size_;
9000250c:	6059      	str	r1, [r3, #4]
            DMA2D_ExternalJobCompleted(completed_job);
9000250e:	f7ff bd29 	b.w	90001f64 <DMA2D_ExternalJobCompleted>
90002512:	4620      	mov	r0, r4
90002514:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90002518:	4710      	bx	r2
      return buffer_[head_];
9000251a:	6858      	ldr	r0, [r3, #4]
                started_by_external_job = true;
9000251c:	2201      	movs	r2, #1
      return buffer_[head_];
9000251e:	3002      	adds	r0, #2
                started_by_external_job = true;
90002520:	f884 2da0 	strb.w	r2, [r4, #3488]	; 0xda0
        isRunning = true;
90002524:	7222      	strb	r2, [r4, #8]
        DMA2D_CopyBuffer(job);
90002526:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
9000252a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000252e:	f7ff bcd5 	b.w	90001edc <DMA2D_CopyBuffer>
90002532:	bf00      	nop
90002534:	24028e2c 	.word	0x24028e2c
90002538:	900021b1 	.word	0x900021b1
9000253c:	24005bbc 	.word	0x24005bbc

90002540 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90002540:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90002542:	4b10      	ldr	r3, [pc, #64]	; (90002584 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90002544:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90002546:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90002548:	2500      	movs	r5, #0
9000254a:	300c      	adds	r0, #12
9000254c:	2260      	movs	r2, #96	; 0x60
9000254e:	7235      	strb	r5, [r6, #8]
90002550:	7275      	strb	r5, [r6, #9]
90002552:	6070      	str	r0, [r6, #4]
90002554:	f844 3b20 	str.w	r3, [r4], #32
90002558:	4621      	mov	r1, r4
9000255a:	f014 fa9d 	bl	90016a98 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
9000255e:	4621      	mov	r1, r4
90002560:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90002564:	60cd      	str	r5, [r1, #12]
90002566:	3124      	adds	r1, #36	; 0x24
90002568:	428b      	cmp	r3, r1
9000256a:	d1fb      	bne.n	90002564 <_ZN8STM32DMAC1Ev+0x24>
9000256c:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90002570:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90002572:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90002576:	f00e fc41 	bl	90010dfc <osMutexNew>
9000257a:	4603      	mov	r3, r0
}
9000257c:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
9000257e:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90002582:	bd70      	pop	{r4, r5, r6, pc}
90002584:	9002d470 	.word	0x9002d470

90002588 <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002588:	4a03      	ldr	r2, [pc, #12]	; (90002598 <_ZN8touchgfx5paint8tearDownEv+0x10>)
9000258a:	6813      	ldr	r3, [r2, #0]
9000258c:	07db      	lsls	r3, r3, #31
9000258e:	d4fc      	bmi.n	9000258a <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002590:	2323      	movs	r3, #35	; 0x23
90002592:	6093      	str	r3, [r2, #8]
}
90002594:	4770      	bx	lr
90002596:	bf00      	nop
90002598:	52001000 	.word	0x52001000

9000259c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
9000259c:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000259e:	4c10      	ldr	r4, [pc, #64]	; (900025e0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900025a0:	6825      	ldr	r5, [r4, #0]
900025a2:	07ed      	lsls	r5, r5, #31
900025a4:	d4fc      	bmi.n	900025a0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900025a6:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900025a8:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
900025aa:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900025ac:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900025ae:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900025b2:	f04f 0502 	mov.w	r5, #2
900025b6:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900025b8:	6462      	str	r2, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900025ba:	63e0      	str	r0, [r4, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900025bc:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900025be:	d009      	beq.n	900025d4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
900025c0:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900025c2:	4a08      	ldr	r2, [pc, #32]	; (900025e4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
900025c4:	f043 1302 	orr.w	r3, r3, #131074	; 0x20002
900025c8:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900025ca:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900025cc:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900025ce:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
900025d0:	bc30      	pop	{r4, r5}
900025d2:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
900025d4:	4a04      	ldr	r2, [pc, #16]	; (900025e8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900025d6:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
900025d8:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900025da:	6023      	str	r3, [r4, #0]
}
900025dc:	bc30      	pop	{r4, r5}
900025de:	4770      	bx	lr
900025e0:	52001000 	.word	0x52001000
900025e4:	00020001 	.word	0x00020001
900025e8:	ff020002 	.word	0xff020002

900025ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
900025ec:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900025ee:	4c0c      	ldr	r4, [pc, #48]	; (90002620 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
900025f0:	6825      	ldr	r5, [r4, #0]
900025f2:	07ed      	lsls	r5, r5, #31
900025f4:	d4fc      	bmi.n	900025f0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900025f6:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900025f8:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << 24));
900025fa:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900025fc:	2623      	movs	r6, #35	; 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900025fe:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << 24));
90002602:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002606:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002608:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000260a:	6462      	str	r2, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
9000260c:	63e0      	str	r0, [r4, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
9000260e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << 24));
90002610:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002612:	4b04      	ldr	r3, [pc, #16]	; (90002624 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002614:	6265      	str	r5, [r4, #36]	; 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002616:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002618:	6023      	str	r3, [r4, #0]
}
9000261a:	bc70      	pop	{r4, r5, r6}
9000261c:	4770      	bx	lr
9000261e:	bf00      	nop
90002620:	52001000 	.word	0x52001000
90002624:	00020001 	.word	0x00020001

90002628 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002628:	2001      	movs	r0, #1
9000262a:	4770      	bx	lr

9000262c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
9000262c:	2040      	movs	r0, #64	; 0x40
9000262e:	4770      	bx	lr

90002630 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002630:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90002634:	3008      	adds	r0, #8
90002636:	4770      	bx	lr

90002638 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002638:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
9000263c:	3008      	adds	r0, #8
9000263e:	4770      	bx	lr

90002640 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002640:	2001      	movs	r0, #1
90002642:	4770      	bx	lr

90002644 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002644:	f642 10e8 	movw	r0, #10728	; 0x29e8
90002648:	4770      	bx	lr
9000264a:	bf00      	nop

9000264c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
9000264c:	f642 13e8 	movw	r3, #10728	; 0x29e8
90002650:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002654:	3008      	adds	r0, #8
90002656:	4770      	bx	lr

90002658 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002658:	f642 13e8 	movw	r3, #10728	; 0x29e8
9000265c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002660:	3008      	adds	r0, #8
90002662:	4770      	bx	lr

90002664 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI26CalibrationScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002664:	2001      	movs	r0, #1
90002666:	4770      	bx	lr

90002668 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26CalibrationScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002668:	2010      	movs	r0, #16
9000266a:	4770      	bx	lr

9000266c <_ZN8touchgfx9PartitionINS_4meta8TypeListI26CalibrationScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
9000266c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002670:	3008      	adds	r0, #8
90002672:	4770      	bx	lr

90002674 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI26CalibrationScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002674:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002678:	3008      	adds	r0, #8
9000267a:	4770      	bx	lr

9000267c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoHomePageScreenScreenNoTransition();
9000267c:	4608      	mov	r0, r1
9000267e:	f004 b967 	b.w	90006950 <_ZN23FrontendApplicationBase36gotoHomePageScreenScreenNoTransitionEv>
90002682:	bf00      	nop

90002684 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002684:	4b03      	ldr	r3, [pc, #12]	; (90002694 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90002686:	b510      	push	{r4, lr}
90002688:	4604      	mov	r4, r0
9000268a:	6003      	str	r3, [r0, #0]
9000268c:	f012 f919 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002690:	4620      	mov	r0, r4
90002692:	bd10      	pop	{r4, pc}
90002694:	9002d528 	.word	0x9002d528

90002698 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90002698:	4b05      	ldr	r3, [pc, #20]	; (900026b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
9000269a:	b510      	push	{r4, lr}
9000269c:	4604      	mov	r4, r0
9000269e:	6003      	str	r3, [r0, #0]
900026a0:	f012 f90f 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
900026a4:	2148      	movs	r1, #72	; 0x48
900026a6:	4620      	mov	r0, r4
900026a8:	f028 feb5 	bl	9002b416 <_ZdlPvj>
900026ac:	4620      	mov	r0, r4
900026ae:	bd10      	pop	{r4, pc}
900026b0:	9002d528 	.word	0x9002d528

900026b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900026b4:	4b03      	ldr	r3, [pc, #12]	; (900026c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900026b6:	b510      	push	{r4, lr}
900026b8:	4604      	mov	r4, r0
900026ba:	6003      	str	r3, [r0, #0]
900026bc:	f012 f901 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
900026c0:	4620      	mov	r0, r4
900026c2:	bd10      	pop	{r4, pc}
900026c4:	9002d4f4 	.word	0x9002d4f4

900026c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900026c8:	4b06      	ldr	r3, [pc, #24]	; (900026e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
900026ca:	b510      	push	{r4, lr}
900026cc:	4604      	mov	r4, r0
900026ce:	6003      	str	r3, [r0, #0]
900026d0:	f012 f8f7 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
900026d4:	f642 11f0 	movw	r1, #10736	; 0x29f0
900026d8:	4620      	mov	r0, r4
900026da:	f028 fe9c 	bl	9002b416 <_ZdlPvj>
900026de:	4620      	mov	r0, r4
900026e0:	bd10      	pop	{r4, pc}
900026e2:	bf00      	nop
900026e4:	9002d4f4 	.word	0x9002d4f4

900026e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26CalibrationScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900026e8:	4b03      	ldr	r3, [pc, #12]	; (900026f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26CalibrationScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900026ea:	b510      	push	{r4, lr}
900026ec:	4604      	mov	r4, r0
900026ee:	6003      	str	r3, [r0, #0]
900026f0:	f012 f8e7 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
900026f4:	4620      	mov	r0, r4
900026f6:	bd10      	pop	{r4, pc}
900026f8:	9002d4c0 	.word	0x9002d4c0

900026fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI26CalibrationScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900026fc:	4b05      	ldr	r3, [pc, #20]	; (90002714 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26CalibrationScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
900026fe:	b510      	push	{r4, lr}
90002700:	4604      	mov	r4, r0
90002702:	6003      	str	r3, [r0, #0]
90002704:	f012 f8dd 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002708:	2118      	movs	r1, #24
9000270a:	4620      	mov	r0, r4
9000270c:	f028 fe83 	bl	9002b416 <_ZdlPvj>
90002710:	4620      	mov	r0, r4
90002712:	bd10      	pop	{r4, pc}
90002714:	9002d4c0 	.word	0x9002d4c0

90002718 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002718:	b510      	push	{r4, lr}
9000271a:	4604      	mov	r4, r0
9000271c:	490c      	ldr	r1, [pc, #48]	; (90002750 <_ZN12FrontendHeapD1Ev+0x38>)
9000271e:	4a0d      	ldr	r2, [pc, #52]	; (90002754 <_ZN12FrontendHeapD1Ev+0x3c>)
90002720:	f642 201c 	movw	r0, #10780	; 0x2a1c
90002724:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002728:	6021      	str	r1, [r4, #0]
9000272a:	4420      	add	r0, r4
9000272c:	f8c3 2a1c 	str.w	r2, [r3, #2588]	; 0xa1c
90002730:	f012 f8c7 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002734:	4620      	mov	r0, r4
90002736:	4b08      	ldr	r3, [pc, #32]	; (90002758 <_ZN12FrontendHeapD1Ev+0x40>)
90002738:	f840 3f2c 	str.w	r3, [r0, #44]!
9000273c:	f012 f8c1 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002740:	4620      	mov	r0, r4
90002742:	4b06      	ldr	r3, [pc, #24]	; (9000275c <_ZN12FrontendHeapD1Ev+0x44>)
90002744:	f840 3f14 	str.w	r3, [r0, #20]!
90002748:	f012 f8bb 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000274c:	4620      	mov	r0, r4
9000274e:	bd10      	pop	{r4, pc}
90002750:	9002d55c 	.word	0x9002d55c
90002754:	9002d528 	.word	0x9002d528
90002758:	9002d4f4 	.word	0x9002d4f4
9000275c:	9002d4c0 	.word	0x9002d4c0

90002760 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002760:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002762:	4c0c      	ldr	r4, [pc, #48]	; (90002794 <__tcf_0+0x34>)
90002764:	4a0c      	ldr	r2, [pc, #48]	; (90002798 <__tcf_0+0x38>)
90002766:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
9000276a:	490c      	ldr	r1, [pc, #48]	; (9000279c <__tcf_0+0x3c>)
9000276c:	480c      	ldr	r0, [pc, #48]	; (900027a0 <__tcf_0+0x40>)
9000276e:	f8c3 2a1c 	str.w	r2, [r3, #2588]	; 0xa1c
90002772:	6021      	str	r1, [r4, #0]
90002774:	f012 f8a5 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002778:	4620      	mov	r0, r4
9000277a:	4b0a      	ldr	r3, [pc, #40]	; (900027a4 <__tcf_0+0x44>)
9000277c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002780:	f012 f89f 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002784:	4620      	mov	r0, r4
90002786:	4b08      	ldr	r3, [pc, #32]	; (900027a8 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000278c:	f840 3f14 	str.w	r3, [r0, #20]!
90002790:	f012 b897 	b.w	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002794:	24005bf0 	.word	0x24005bf0
90002798:	9002d528 	.word	0x9002d528
9000279c:	9002d55c 	.word	0x9002d55c
900027a0:	2400860c 	.word	0x2400860c
900027a4:	9002d4f4 	.word	0x9002d4f4
900027a8:	9002d4c0 	.word	0x9002d4c0

900027ac <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
900027ac:	b510      	push	{r4, lr}
900027ae:	4604      	mov	r4, r0
900027b0:	4a0f      	ldr	r2, [pc, #60]	; (900027f0 <_ZN12FrontendHeapD0Ev+0x44>)
900027b2:	4910      	ldr	r1, [pc, #64]	; (900027f4 <_ZN12FrontendHeapD0Ev+0x48>)
900027b4:	f642 201c 	movw	r0, #10780	; 0x2a1c
900027b8:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
900027bc:	6021      	str	r1, [r4, #0]
900027be:	4420      	add	r0, r4
900027c0:	f8c3 2a1c 	str.w	r2, [r3, #2588]	; 0xa1c
900027c4:	f012 f87d 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
900027c8:	4620      	mov	r0, r4
900027ca:	4b0b      	ldr	r3, [pc, #44]	; (900027f8 <_ZN12FrontendHeapD0Ev+0x4c>)
900027cc:	f840 3f2c 	str.w	r3, [r0, #44]!
900027d0:	f012 f877 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
900027d4:	4b09      	ldr	r3, [pc, #36]	; (900027fc <_ZN12FrontendHeapD0Ev+0x50>)
900027d6:	4620      	mov	r0, r4
900027d8:	f840 3f14 	str.w	r3, [r0, #20]!
900027dc:	f012 f871 	bl	900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>
900027e0:	4620      	mov	r0, r4
900027e2:	f642 31c4 	movw	r1, #11204	; 0x2bc4
900027e6:	f028 fe16 	bl	9002b416 <_ZdlPvj>
900027ea:	4620      	mov	r0, r4
900027ec:	bd10      	pop	{r4, pc}
900027ee:	bf00      	nop
900027f0:	9002d528 	.word	0x9002d528
900027f4:	9002d55c 	.word	0x9002d55c
900027f8:	9002d4f4 	.word	0x9002d4f4
900027fc:	9002d4c0 	.word	0x9002d4c0

90002800 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002804:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002806:	2400      	movs	r4, #0
90002808:	f002 fee0 	bl	900055cc <_ZN14BitmapDatabase11getInstanceEv>
9000280c:	4605      	mov	r5, r0
9000280e:	f002 fee1 	bl	900055d4 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002812:	4623      	mov	r3, r4
90002814:	4601      	mov	r1, r0
90002816:	4622      	mov	r2, r4
90002818:	4628      	mov	r0, r5
9000281a:	9400      	str	r4, [sp, #0]
9000281c:	f01b f944 	bl	9001daa8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002820:	4b29      	ldr	r3, [pc, #164]	; (900028c8 <touchgfx_init+0xc8>)
90002822:	4a2a      	ldr	r2, [pc, #168]	; (900028cc <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002824:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002826:	4c2a      	ldr	r4, [pc, #168]	; (900028d0 <touchgfx_init+0xd0>)
90002828:	601a      	str	r2, [r3, #0]
9000282a:	f006 f8b3 	bl	90008994 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
9000282e:	4829      	ldr	r0, [pc, #164]	; (900028d4 <touchgfx_init+0xd4>)
90002830:	f01b f8a2 	bl	9001d978 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002834:	7823      	ldrb	r3, [r4, #0]
90002836:	f3bf 8f5b 	dmb	ish
9000283a:	07db      	lsls	r3, r3, #31
9000283c:	d505      	bpl.n	9000284a <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
9000283e:	4826      	ldr	r0, [pc, #152]	; (900028d8 <touchgfx_init+0xd8>)
}
90002840:	b002      	add	sp, #8
90002842:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002846:	f7fe bb75 	b.w	90000f34 <_ZN11TouchGFXHAL10initializeEv>
9000284a:	4620      	mov	r0, r4
9000284c:	f028 fde5 	bl	9002b41a <__cxa_guard_acquire>
90002850:	2800      	cmp	r0, #0
90002852:	d0f4      	beq.n	9000283e <touchgfx_init+0x3e>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002854:	4d21      	ldr	r5, [pc, #132]	; (900028dc <touchgfx_init+0xdc>)
90002856:	4f22      	ldr	r7, [pc, #136]	; (900028e0 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002858:	4b22      	ldr	r3, [pc, #136]	; (900028e4 <touchgfx_init+0xe4>)
9000285a:	f105 0014 	add.w	r0, r5, #20
9000285e:	f107 064c 	add.w	r6, r7, #76	; 0x4c
90002862:	f105 082c 	add.w	r8, r5, #44	; 0x2c
90002866:	602b      	str	r3, [r5, #0]
90002868:	60ef      	str	r7, [r5, #12]
9000286a:	6068      	str	r0, [r5, #4]
9000286c:	612e      	str	r6, [r5, #16]
9000286e:	f8c5 8008 	str.w	r8, [r5, #8]
90002872:	f012 f827 	bl	900148c4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002876:	4b1c      	ldr	r3, [pc, #112]	; (900028e8 <touchgfx_init+0xe8>)
90002878:	4640      	mov	r0, r8
9000287a:	616b      	str	r3, [r5, #20]
9000287c:	f012 f822 	bl	900148c4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002880:	4b1a      	ldr	r3, [pc, #104]	; (900028ec <touchgfx_init+0xec>)
90002882:	4638      	mov	r0, r7
90002884:	62eb      	str	r3, [r5, #44]	; 0x2c
90002886:	f012 f81d 	bl	900148c4 <_ZN8touchgfx17AbstractPartitionC1Ev>
9000288a:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
9000288e:	4a18      	ldr	r2, [pc, #96]	; (900028f0 <touchgfx_init+0xf0>)
90002890:	f603 2064 	addw	r0, r3, #2660	; 0xa64
90002894:	f8c3 2a1c 	str.w	r2, [r3, #2588]	; 0xa1c
90002898:	f006 fa1a 	bl	90008cd0 <_ZN5ModelC1Ev>
9000289c:	462a      	mov	r2, r5
9000289e:	f107 0148 	add.w	r1, r7, #72	; 0x48
900028a2:	4630      	mov	r0, r6
900028a4:	f006 f948 	bl	90008b38 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
900028a8:	4630      	mov	r0, r6
900028aa:	f004 f851 	bl	90006950 <_ZN23FrontendApplicationBase36gotoHomePageScreenScreenNoTransitionEv>
        static FrontendHeap instance;
900028ae:	4811      	ldr	r0, [pc, #68]	; (900028f4 <touchgfx_init+0xf4>)
900028b0:	f028 ffac 	bl	9002b80c <atexit>
900028b4:	4620      	mov	r0, r4
900028b6:	f028 fdbc 	bl	9002b432 <__cxa_guard_release>
900028ba:	4807      	ldr	r0, [pc, #28]	; (900028d8 <touchgfx_init+0xd8>)
}
900028bc:	b002      	add	sp, #8
900028be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900028c2:	f7fe bb37 	b.w	90000f34 <_ZN11TouchGFXHAL10initializeEv>
900028c6:	bf00      	nop
900028c8:	24028e90 	.word	0x24028e90
900028cc:	240095e8 	.word	0x240095e8
900028d0:	24005bec 	.word	0x24005bec
900028d4:	24000020 	.word	0x24000020
900028d8:	24009560 	.word	0x24009560
900028dc:	24005bf0 	.word	0x24005bf0
900028e0:	2400860c 	.word	0x2400860c
900028e4:	9002d55c 	.word	0x9002d55c
900028e8:	9002d4c0 	.word	0x9002d4c0
900028ec:	9002d4f4 	.word	0x9002d4f4
900028f0:	9002d528 	.word	0x9002d528
900028f4:	90002761 	.word	0x90002761

900028f8 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
900028f8:	4770      	bx	lr
900028fa:	bf00      	nop

900028fc <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
900028fc:	4801      	ldr	r0, [pc, #4]	; (90002904 <touchgfx_taskEntry+0x8>)
900028fe:	f7fe badf 	b.w	90000ec0 <_ZN11TouchGFXHAL9taskEntryEv>
90002902:	bf00      	nop
90002904:	24009560 	.word	0x24009560

90002908 <_GLOBAL__sub_I_touchgfx_init>:
}
90002908:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
9000290a:	4b26      	ldr	r3, [pc, #152]	; (900029a4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
9000290c:	4c26      	ldr	r4, [pc, #152]	; (900029a8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static STM32DMA dma;
9000290e:	4e27      	ldr	r6, [pc, #156]	; (900029ac <_GLOBAL__sub_I_touchgfx_init+0xa4>)
static LCD16bpp display;
90002910:	4d27      	ldr	r5, [pc, #156]	; (900029b0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90002912:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002914:	4630      	mov	r0, r6
90002916:	f7ff fe13 	bl	90002540 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
9000291a:	4628      	mov	r0, r5
9000291c:	f01e f9ce 	bl	90020cbc <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
90002920:	4b24      	ldr	r3, [pc, #144]	; (900029b4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002922:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002924:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002928:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
9000292c:	62da      	str	r2, [r3, #44]	; 0x2c
9000292e:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
90002930:	669a      	str	r2, [r3, #104]	; 0x68
90002932:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
90002936:	671a      	str	r2, [r3, #112]	; 0x70
90002938:	e9c3 4203 	strd	r4, r2, [r3, #12]
9000293c:	4c1e      	ldr	r4, [pc, #120]	; (900029b8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
9000293e:	665c      	str	r4, [r3, #100]	; 0x64
90002940:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
90002944:	675c      	str	r4, [r3, #116]	; 0x74
90002946:	2401      	movs	r4, #1
90002948:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
        instance = this;
9000294c:	4c1b      	ldr	r4, [pc, #108]	; (900029bc <_GLOBAL__sub_I_touchgfx_init+0xb4>)
9000294e:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002950:	4c1b      	ldr	r4, [pc, #108]	; (900029c0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002952:	8020      	strh	r0, [r4, #0]
90002954:	4c1b      	ldr	r4, [pc, #108]	; (900029c4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          lastRenderMethod(HARDWARE)
90002956:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
9000295a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
9000295c:	f44f 7580 	mov.w	r5, #256	; 0x100
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002960:	4c19      	ldr	r4, [pc, #100]	; (900029c8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002962:	481a      	ldr	r0, [pc, #104]	; (900029cc <_GLOBAL__sub_I_touchgfx_init+0xc4>)
          lastRenderMethod(HARDWARE)
90002964:	649d      	str	r5, [r3, #72]	; 0x48
90002966:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000296a:	e9c3 2207 	strd	r2, r2, [r3, #28]
9000296e:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
90002972:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
90002976:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
9000297a:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
9000297e:	e9c3 2215 	strd	r2, r2, [r3, #84]	; 0x54
90002982:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002986:	8021      	strh	r1, [r4, #0]
90002988:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
9000298a:	4c11      	ldr	r4, [pc, #68]	; (900029d0 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
9000298c:	4811      	ldr	r0, [pc, #68]	; (900029d4 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
9000298e:	4912      	ldr	r1, [pc, #72]	; (900029d8 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
          cc_in(0)
90002990:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
90002994:	7022      	strb	r2, [r4, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002996:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
9000299a:	6018      	str	r0, [r3, #0]
9000299c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
900029a0:	67d9      	str	r1, [r3, #124]	; 0x7c
}
900029a2:	bd70      	pop	{r4, r5, r6, pc}
900029a4:	9002cc24 	.word	0x9002cc24
900029a8:	240087b4 	.word	0x240087b4
900029ac:	240087b8 	.word	0x240087b8
900029b0:	240095ec 	.word	0x240095ec
900029b4:	24009560 	.word	0x24009560
900029b8:	01000001 	.word	0x01000001
900029bc:	24028e2c 	.word	0x24028e2c
900029c0:	24028e20 	.word	0x24028e20
900029c4:	24028e26 	.word	0x24028e26
900029c8:	24028e22 	.word	0x24028e22
900029cc:	24028e28 	.word	0x24028e28
900029d0:	24028e24 	.word	0x24028e24
900029d4:	9002cdb4 	.word	0x9002cdb4
900029d8:	9002cbfc 	.word	0x9002cbfc

900029dc <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
900029dc:	4801      	ldr	r0, [pc, #4]	; (900029e4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
900029de:	f7ff bb5d 	b.w	9000209c <_ZN8STM32DMAD1Ev>
900029e2:	bf00      	nop
900029e4:	240087b8 	.word	0x240087b8

900029e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
900029e8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900029ec:	b112      	cbz	r2, 900029f4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
900029ee:	6803      	ldr	r3, [r0, #0]
900029f0:	695b      	ldr	r3, [r3, #20]
900029f2:	4718      	bx	r3
        }
    }
900029f4:	4770      	bx	lr
900029f6:	bf00      	nop

900029f8 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
900029f8:	2000      	movs	r0, #0
900029fa:	4770      	bx	lr

900029fc <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
900029fc:	8081      	strh	r1, [r0, #4]
    }
900029fe:	4770      	bx	lr

90002a00 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002a00:	80c1      	strh	r1, [r0, #6]
    }
90002a02:	4770      	bx	lr

90002a04 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002a04:	8101      	strh	r1, [r0, #8]
    }
90002a06:	4770      	bx	lr

90002a08 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002a08:	8141      	strh	r1, [r0, #10]
    }
90002a0a:	4770      	bx	lr

90002a0c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002a0c:	4770      	bx	lr
90002a0e:	bf00      	nop

90002a10 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002a10:	4770      	bx	lr
90002a12:	bf00      	nop

90002a14 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002a14:	4770      	bx	lr
90002a16:	bf00      	nop

90002a18 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002a18:	4770      	bx	lr
90002a1a:	bf00      	nop

90002a1c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002a1c:	4770      	bx	lr
90002a1e:	bf00      	nop

90002a20 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002a20:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002a24:	6803      	ldr	r3, [r0, #0]
90002a26:	eba2 020c 	sub.w	r2, r2, ip
90002a2a:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002a2e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90002a30:	eba1 010c 	sub.w	r1, r1, ip
90002a34:	b212      	sxth	r2, r2
90002a36:	b209      	sxth	r1, r1
90002a38:	4718      	bx	r3
90002a3a:	bf00      	nop

90002a3c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002a3c:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002a3e:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002a42:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002a46:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002a4a:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002a4e:	6010      	str	r0, [r2, #0]
    }
90002a50:	4770      	bx	lr
90002a52:	bf00      	nop

90002a54 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002a54:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90002a58:	b11a      	cbz	r2, 90002a62 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002a5a:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
90002a5e:	b102      	cbz	r2, 90002a62 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002a60:	6018      	str	r0, [r3, #0]
        }
    }
90002a62:	4770      	bx	lr

90002a64 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002a64:	2000      	movs	r0, #0
90002a66:	4770      	bx	lr

90002a68 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002a68:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002a6a:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002a6c:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002a6e:	809a      	strh	r2, [r3, #4]
    }
90002a70:	4770      	bx	lr
90002a72:	bf00      	nop

90002a74 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002a74:	4770      	bx	lr
90002a76:	bf00      	nop

90002a78 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002a78:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
90002a7c:	4770      	bx	lr
90002a7e:	bf00      	nop

90002a80 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002a80:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
90002a84:	4770      	bx	lr
90002a86:	bf00      	nop

90002a88 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002a88:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002a8c:	688a      	ldr	r2, [r1, #8]
90002a8e:	f8c0 c000 	str.w	ip, [r0]
90002a92:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002a94:	4770      	bx	lr
90002a96:	bf00      	nop

90002a98 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002a98:	2200      	movs	r2, #0
90002a9a:	6002      	str	r2, [r0, #0]
90002a9c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002a9e:	4770      	bx	lr

90002aa0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002aa0:	2000      	movs	r0, #0
90002aa2:	4770      	bx	lr

90002aa4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002aa4:	4b03      	ldr	r3, [pc, #12]	; (90002ab4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002aa6:	2290      	movs	r2, #144	; 0x90
90002aa8:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
90002aac:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002ab0:	4770      	bx	lr
90002ab2:	bf00      	nop
90002ab4:	e000e100 	.word	0xe000e100

90002ab8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002ab8:	4a09      	ldr	r2, [pc, #36]	; (90002ae0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002aba:	490a      	ldr	r1, [pc, #40]	; (90002ae4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002abc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002abe:	480a      	ldr	r0, [pc, #40]	; (90002ae8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002ac0:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002ac4:	3b01      	subs	r3, #1
90002ac6:	b29b      	uxth	r3, r3
90002ac8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002aca:	6911      	ldr	r1, [r2, #16]
90002acc:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002ad0:	3901      	subs	r1, #1
90002ad2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002ad4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002ad6:	6b53      	ldr	r3, [r2, #52]	; 0x34
90002ad8:	f043 0301 	orr.w	r3, r3, #1
90002adc:	6353      	str	r3, [r2, #52]	; 0x34
}
90002ade:	4770      	bx	lr
90002ae0:	50001000 	.word	0x50001000
90002ae4:	24009668 	.word	0x24009668
90002ae8:	24009666 	.word	0x24009666

90002aec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    videoController.endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002aec:	4b01      	ldr	r3, [pc, #4]	; (90002af4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002aee:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
90002af2:	4770      	bx	lr
90002af4:	50001000 	.word	0x50001000

90002af8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002af8:	4b02      	ldr	r3, [pc, #8]	; (90002b04 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002afa:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002afc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002b00:	625a      	str	r2, [r3, #36]	; 0x24
}
90002b02:	4770      	bx	lr
90002b04:	50001000 	.word	0x50001000

90002b08 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90002b08:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
90002b0c:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
90002b0e:	4770      	bx	lr

90002b10 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
90002b10:	4770      	bx	lr
90002b12:	bf00      	nop

90002b14 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
90002b14:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002b18:	4611      	mov	r1, r2
90002b1a:	6840      	ldr	r0, [r0, #4]
90002b1c:	6803      	ldr	r3, [r0, #0]
90002b1e:	68db      	ldr	r3, [r3, #12]
90002b20:	4718      	bx	r3
90002b22:	bf00      	nop

90002b24 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
90002b24:	b510      	push	{r4, lr}
90002b26:	4604      	mov	r4, r0
90002b28:	2148      	movs	r1, #72	; 0x48
90002b2a:	f028 fc74 	bl	9002b416 <_ZdlPvj>
90002b2e:	4620      	mov	r0, r4
90002b30:	bd10      	pop	{r4, pc}
90002b32:	bf00      	nop

90002b34 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        mjpegDecoders[handle]->getVideoInfo(data);
    }

    virtual bool getIsPlaying(const Handle handle)
    {
        assert(handle < no_streams);
90002b34:	b911      	cbnz	r1, 90002b3c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
        Stream& stream = streams[handle];
        return stream.isPlaying;
    }
90002b36:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
90002b3a:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002b3c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002b3e:	4a03      	ldr	r2, [pc, #12]	; (90002b4c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002b40:	f44f 71b8 	mov.w	r1, #368	; 0x170
90002b44:	4b02      	ldr	r3, [pc, #8]	; (90002b50 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002b46:	4803      	ldr	r0, [pc, #12]	; (90002b54 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002b48:	f028 fe42 	bl	9002b7d0 <__assert_func>
90002b4c:	9002d57c 	.word	0x9002d57c
90002b50:	9002d568 	.word	0x9002d568
90002b54:	9002d708 	.word	0x9002d708

90002b58 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002b58:	b921      	cbnz	r1, 90002b64 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002b5a:	6840      	ldr	r0, [r0, #4]
90002b5c:	4611      	mov	r1, r2
90002b5e:	6803      	ldr	r3, [r0, #0]
90002b60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90002b62:	4718      	bx	r3
        assert(handle < no_streams);
90002b64:	4b03      	ldr	r3, [pc, #12]	; (90002b74 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002b66:	f44f 71b5 	mov.w	r1, #362	; 0x16a
90002b6a:	4a03      	ldr	r2, [pc, #12]	; (90002b78 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002b6c:	4803      	ldr	r0, [pc, #12]	; (90002b7c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002b6e:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002b70:	f028 fe2e 	bl	9002b7d0 <__assert_func>
90002b74:	9002d568 	.word	0x9002d568
90002b78:	9002d74c 	.word	0x9002d74c
90002b7c:	9002d708 	.word	0x9002d708

90002b80 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002b80:	b909      	cbnz	r1, 90002b86 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002b82:	68c0      	ldr	r0, [r0, #12]
90002b84:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002b86:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002b88:	4a02      	ldr	r2, [pc, #8]	; (90002b94 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
90002b8a:	2179      	movs	r1, #121	; 0x79
90002b8c:	4b02      	ldr	r3, [pc, #8]	; (90002b98 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002b8e:	4803      	ldr	r0, [pc, #12]	; (90002b9c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002b90:	f028 fe1e 	bl	9002b7d0 <__assert_func>
90002b94:	9002d8fc 	.word	0x9002d8fc
90002b98:	9002d568 	.word	0x9002d568
90002b9c:	9002d708 	.word	0x9002d708

90002ba0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90002ba0:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002ba2:	460c      	mov	r4, r1
90002ba4:	b949      	cbnz	r1, 90002bba <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
90002ba6:	4611      	mov	r1, r2
90002ba8:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
90002baa:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
90002bac:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
90002bae:	681c      	ldr	r4, [r3, #0]
90002bb0:	4618      	mov	r0, r3
90002bb2:	68a3      	ldr	r3, [r4, #8]
    }
90002bb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
90002bb8:	4718      	bx	r3
        assert(handle < no_streams);
90002bba:	4b03      	ldr	r3, [pc, #12]	; (90002bc8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
90002bbc:	2190      	movs	r1, #144	; 0x90
90002bbe:	4a03      	ldr	r2, [pc, #12]	; (90002bcc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
90002bc0:	4803      	ldr	r0, [pc, #12]	; (90002bd0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
90002bc2:	f028 fe05 	bl	9002b7d0 <__assert_func>
90002bc6:	bf00      	nop
90002bc8:	9002d568 	.word	0x9002d568
90002bcc:	9002dab0 	.word	0x9002dab0
90002bd0:	9002d708 	.word	0x9002d708

90002bd4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90002bd4:	b921      	cbnz	r1, 90002be0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
90002bd6:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90002bda:	e9c0 3206 	strd	r3, r2, [r0, #24]
90002bde:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90002be0:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002be2:	4a03      	ldr	r2, [pc, #12]	; (90002bf0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90002be4:	2182      	movs	r1, #130	; 0x82
90002be6:	4b03      	ldr	r3, [pc, #12]	; (90002bf4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90002be8:	4803      	ldr	r0, [pc, #12]	; (90002bf8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90002bea:	f028 fdf1 	bl	9002b7d0 <__assert_func>
90002bee:	bf00      	nop
90002bf0:	9002dc8c 	.word	0x9002dc8c
90002bf4:	9002d568 	.word	0x9002d568
90002bf8:	9002d708 	.word	0x9002d708

90002bfc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90002bfc:	f013 b892 	b.w	90015d24 <_ZN8touchgfx3HAL10beginFrameEv>

90002c00 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
90002c00:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
{
90002c04:	b510      	push	{r4, lr}
    if (frameBufferUpdatedThisFrame)
90002c06:	b113      	cbz	r3, 90002c0e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xe>
        refreshRequested = true;
90002c08:	4b1a      	ldr	r3, [pc, #104]	; (90002c74 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
90002c0a:	2201      	movs	r2, #1
90002c0c:	701a      	strb	r2, [r3, #0]
            if (stream.isPlaying || stream.isShowingOneFrame)
90002c0e:	4c1a      	ldr	r4, [pc, #104]	; (90002c78 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x78>)
    HAL::endFrame();
90002c10:	f013 f894 	bl	90015d3c <_ZN8touchgfx3HAL8endFrameEv>
90002c14:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
90002c18:	b963      	cbnz	r3, 90002c34 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
90002c1a:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
90002c1e:	b94b      	cbnz	r3, 90002c34 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
90002c20:	2301      	movs	r3, #1
        SEM_POST(semDecode);
90002c22:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
90002c24:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
90002c28:	f00e f9ec 	bl	90011004 <osSemaphoreRelease>
        if (uiHasMutex)
90002c2c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
90002c30:	b9cb      	cbnz	r3, 90002c66 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
}
90002c32:	bd10      	pop	{r4, pc}
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
90002c34:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002c38:	69e1      	ldr	r1, [r4, #28]
90002c3a:	6922      	ldr	r2, [r4, #16]
90002c3c:	fb00 f303 	mul.w	r3, r0, r3
90002c40:	fb01 f202 	mul.w	r2, r1, r2
90002c44:	4293      	cmp	r3, r2
90002c46:	d3eb      	bcc.n	90002c20 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x20>
        {
            if (allowSkipFrames)
90002c48:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
90002c4c:	b138      	cbz	r0, 90002c5e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90002c4e:	1a9b      	subs	r3, r3, r2
90002c50:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90002c54:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
90002c56:	bf98      	it	ls
90002c58:	f102 32ff 	addls.w	r2, r2, #4294967295
90002c5c:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
90002c5e:	2301      	movs	r3, #1
90002c60:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
90002c64:	e7dc      	b.n	90002c20 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x20>
            MUTEX_UNLOCK(mutexBuffers);
90002c66:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002c68:	f00e f926 	bl	90010eb8 <osMutexRelease>
            uiHasMutex = false;
90002c6c:	2300      	movs	r3, #0
90002c6e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
90002c72:	bd10      	pop	{r4, pc}
90002c74:	24009664 	.word	0x24009664
90002c78:	240096b4 	.word	0x240096b4

90002c7c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90002c7c:	f013 b81b 	b.w	90015cb6 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90002c80 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90002c80:	f013 b977 	b.w	90015f72 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90002c84 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002c84:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
90002c88:	b903      	cbnz	r3, 90002c8c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
90002c8a:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90002c8c:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
90002c8e:	f04f 31ff 	mov.w	r1, #4294967295
90002c92:	4604      	mov	r4, r0
90002c94:	6c40      	ldr	r0, [r0, #68]	; 0x44
90002c96:	f00e f8eb 	bl	90010e70 <osMutexAcquire>
            firstDrawThisFrame = false;
90002c9a:	f44f 7380 	mov.w	r3, #256	; 0x100
90002c9e:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
90002ca2:	bd10      	pop	{r4, pc}

90002ca4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
90002ca4:	b538      	push	{r3, r4, r5, lr}
90002ca6:	460c      	mov	r4, r1
90002ca8:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
90002caa:	f04f 31ff 	mov.w	r1, #4294967295
90002cae:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
90002cb0:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
90002cb4:	f00e f8dc 	bl	90010e70 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
90002cb8:	6c68      	ldr	r0, [r5, #68]	; 0x44
90002cba:	f00e f8fd 	bl	90010eb8 <osMutexRelease>
        streams[handle].isActive = false;
90002cbe:	2300      	movs	r3, #0
90002cc0:	eb05 0484 	add.w	r4, r5, r4, lsl #2
90002cc4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
90002cc8:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
90002ccc:	b90b      	cbnz	r3, 90002cd2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
90002cce:	6b2b      	ldr	r3, [r5, #48]	; 0x30
90002cd0:	63ab      	str	r3, [r5, #56]	; 0x38
    }
90002cd2:	bd38      	pop	{r3, r4, r5, pc}

90002cd4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002cd4:	4814      	ldr	r0, [pc, #80]	; (90002d28 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
90002cd6:	6943      	ldr	r3, [r0, #20]
90002cd8:	03d9      	lsls	r1, r3, #15
90002cda:	d523      	bpl.n	90002d24 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002cdc:	2300      	movs	r3, #0
{
90002cde:	b510      	push	{r4, lr}
90002ce0:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002ce4:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002ce8:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002cec:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002cf0:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002cf4:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90002cf8:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002cfc:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002d00:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002d02:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002d06:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002d08:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90002d0c:	1c5a      	adds	r2, r3, #1
90002d0e:	d1f8      	bne.n	90002d02 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90002d10:	f1ac 0c20 	sub.w	ip, ip, #32
90002d14:	f11c 0f20 	cmn.w	ip, #32
90002d18:	d1f0      	bne.n	90002cfc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
90002d1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d1e:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90002d22:	bd10      	pop	{r4, pc}
90002d24:	4770      	bx	lr
90002d26:	bf00      	nop
90002d28:	e000ed00 	.word	0xe000ed00

90002d2c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90002d2c:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002d2e:	2900      	cmp	r1, #0
90002d30:	d133      	bne.n	90002d9a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
90002d32:	4604      	mov	r4, r0
        switch (cmd)
90002d34:	2a05      	cmp	r2, #5
90002d36:	d809      	bhi.n	90002d4c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
90002d38:	e8df f002 	tbb	[pc, r2]
90002d3c:	211c1809 	.word	0x211c1809
90002d40:	0329      	.short	0x0329
            stream.repeat = (param > 0);
90002d42:	3b00      	subs	r3, #0
90002d44:	bf18      	it	ne
90002d46:	2301      	movne	r3, #1
90002d48:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
90002d4c:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
90002d4e:	6840      	ldr	r0, [r0, #4]
90002d50:	6803      	ldr	r3, [r0, #0]
90002d52:	691b      	ldr	r3, [r3, #16]
90002d54:	4798      	blx	r3
90002d56:	2800      	cmp	r0, #0
90002d58:	d0f8      	beq.n	90002d4c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
90002d5a:	2201      	movs	r2, #1
                stream.frameCount = 0;
90002d5c:	2300      	movs	r3, #0
                stream.isPlaying = true;
90002d5e:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
90002d62:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
90002d66:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
90002d6a:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
90002d6c:	2300      	movs	r3, #0
90002d6e:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
90002d72:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002d74:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90002d76:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002d78:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002d7c:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002d7e:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002d80:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
90002d82:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
90002d84:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002d88:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002d8c:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
90002d8e:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
90002d90:	2301      	movs	r3, #1
            stream.isPlaying = false;
90002d92:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
90002d96:	6203      	str	r3, [r0, #32]
    }
90002d98:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002d9a:	4b03      	ldr	r3, [pc, #12]	; (90002da8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
90002d9c:	21a2      	movs	r1, #162	; 0xa2
90002d9e:	4a03      	ldr	r2, [pc, #12]	; (90002dac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
90002da0:	4803      	ldr	r0, [pc, #12]	; (90002db0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
90002da2:	f028 fd15 	bl	9002b7d0 <__assert_func>
90002da6:	bf00      	nop
90002da8:	9002d568 	.word	0x9002d568
90002dac:	9002de48 	.word	0x9002de48
90002db0:	9002d708 	.word	0x9002d708

90002db4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90002db4:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002db6:	bb39      	cbnz	r1, 90002e08 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
90002db8:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
90002dbc:	4604      	mov	r4, r0
90002dbe:	b923      	cbnz	r3, 90002dca <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
90002dc0:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002dc4:	b963      	cbnz	r3, 90002de0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
90002dc6:	2001      	movs	r0, #1
    }
90002dc8:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
90002dca:	4912      	ldr	r1, [pc, #72]	; (90002e14 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount+=HAL::getInstance()->getLCDRefreshCount();
90002dcc:	6943      	ldr	r3, [r0, #20]
90002dce:	6809      	ldr	r1, [r1, #0]
90002dd0:	f891 1067 	ldrb.w	r1, [r1, #103]	; 0x67
90002dd4:	440b      	add	r3, r1
90002dd6:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
90002dd8:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002ddc:	2b00      	cmp	r3, #0
90002dde:	d0f2      	beq.n	90002dc6 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
90002de0:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
90002de2:	4610      	mov	r0, r2
90002de4:	6813      	ldr	r3, [r2, #0]
90002de6:	695b      	ldr	r3, [r3, #20]
90002de8:	6311      	str	r1, [r2, #48]	; 0x30
90002dea:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
90002dec:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
90002dee:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
90002df2:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
90002df6:	2800      	cmp	r0, #0
90002df8:	d1e5      	bne.n	90002dc6 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
90002dfa:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
90002dfe:	2b00      	cmp	r3, #0
90002e00:	d1e2      	bne.n	90002dc8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
90002e02:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
90002e06:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002e08:	4b03      	ldr	r3, [pc, #12]	; (90002e18 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
90002e0a:	21d0      	movs	r1, #208	; 0xd0
90002e0c:	4a03      	ldr	r2, [pc, #12]	; (90002e1c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
90002e0e:	4804      	ldr	r0, [pc, #16]	; (90002e20 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
90002e10:	f028 fcde 	bl	9002b7d0 <__assert_func>
90002e14:	24028e2c 	.word	0x24028e2c
90002e18:	9002d568 	.word	0x9002d568
90002e1c:	9002e01c 	.word	0x9002e01c
90002e20:	9002d708 	.word	0x9002d708

90002e24 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90002e24:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90002e28:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
90002e2a:	b9fb      	cbnz	r3, 90002e6c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
        streams[handle].isActive = true;
90002e2c:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90002e2e:	6b85      	ldr	r5, [r0, #56]	; 0x38
            {
                // Reset stream parameters
                streams[i] = Stream();
90002e30:	60c3      	str	r3, [r0, #12]
        streams[handle].isActive = true;
90002e32:	6282      	str	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
90002e34:	f44f 7280 	mov.w	r2, #256	; 0x100
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90002e38:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
                streams[i] = Stream();
90002e3c:	6103      	str	r3, [r0, #16]
90002e3e:	8582      	strh	r2, [r0, #44]	; 0x2c
90002e40:	6143      	str	r3, [r0, #20]
90002e42:	6183      	str	r3, [r0, #24]
90002e44:	61c3      	str	r3, [r0, #28]
90002e46:	6203      	str	r3, [r0, #32]
90002e48:	6243      	str	r3, [r0, #36]	; 0x24
90002e4a:	f880 302e 	strb.w	r3, [r0, #46]	; 0x2e
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90002e4e:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
90002e52:	4432      	add	r2, r6
90002e54:	4294      	cmp	r4, r2
90002e56:	d810      	bhi.n	90002e7a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
90002e58:	4a0b      	ldr	r2, [pc, #44]	; (90002e88 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
90002e5a:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
90002e5c:	6384      	str	r4, [r0, #56]	; 0x38
    }
90002e5e:	4618      	mov	r0, r3
        format = bufferFormat;
90002e60:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
90002e64:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
90002e68:	630b      	str	r3, [r1, #48]	; 0x30
90002e6a:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90002e6c:	4b07      	ldr	r3, [pc, #28]	; (90002e8c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
90002e6e:	f240 11c5 	movw	r1, #453	; 0x1c5
90002e72:	4a07      	ldr	r2, [pc, #28]	; (90002e90 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002e74:	4807      	ldr	r0, [pc, #28]	; (90002e94 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002e76:	f028 fcab 	bl	9002b7d0 <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
90002e7a:	4b07      	ldr	r3, [pc, #28]	; (90002e98 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002e7c:	2152      	movs	r1, #82	; 0x52
90002e7e:	4a07      	ldr	r2, [pc, #28]	; (90002e9c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
90002e80:	4804      	ldr	r0, [pc, #16]	; (90002e94 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002e82:	f028 fca5 	bl	9002b7d0 <__assert_func>
90002e86:	bf00      	nop
90002e88:	012001e0 	.word	0x012001e0
90002e8c:	9002e1bc 	.word	0x9002e1bc
90002e90:	9002e1ec 	.word	0x9002e1ec
90002e94:	9002d708 	.word	0x9002d708
90002e98:	9002e374 	.word	0x9002e374
90002e9c:	9002e3b0 	.word	0x9002e3b0

90002ea0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002ea0:	4b08      	ldr	r3, [pc, #32]	; (90002ec4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90002ea2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90002ea6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002eaa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002eae:	f3bf 8f6f 	isb	sy
90002eb2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002eb6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002eba:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002ebe:	f3bf 8f6f 	isb	sy
}
90002ec2:	4770      	bx	lr
90002ec4:	e000e100 	.word	0xe000e100

90002ec8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002ec8:	4b03      	ldr	r3, [pc, #12]	; (90002ed8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
90002eca:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90002ece:	609a      	str	r2, [r3, #8]
90002ed0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002ed4:	609a      	str	r2, [r3, #8]
}
90002ed6:	4770      	bx	lr
90002ed8:	e000e100 	.word	0xe000e100

90002edc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90002edc:	b538      	push	{r3, r4, r5, lr}
90002ede:	4604      	mov	r4, r0
    HAL::initialize();
90002ee0:	f012 ff39 	bl	90015d56 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90002ee4:	6823      	ldr	r3, [r4, #0]
90002ee6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
90002ee8:	f017 ff6c 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90002eec:	4601      	mov	r1, r0
90002eee:	4620      	mov	r0, r4
90002ef0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90002ef2:	6823      	ldr	r3, [r4, #0]
90002ef4:	4a16      	ldr	r2, [pc, #88]	; (90002f50 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
90002ef6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
90002efa:	4295      	cmp	r5, r2
90002efc:	d11c      	bne.n	90002f38 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002efe:	4a15      	ldr	r2, [pc, #84]	; (90002f54 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002f00:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90002f02:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90002f06:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002f0a:	4813      	ldr	r0, [pc, #76]	; (90002f58 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002f0c:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
90002f10:	4a12      	ldr	r2, [pc, #72]	; (90002f5c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002f12:	7005      	strb	r5, [r0, #0]
90002f14:	4293      	cmp	r3, r2
90002f16:	d116      	bne.n	90002f46 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90002f18:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
90002f1a:	4a11      	ldr	r2, [pc, #68]	; (90002f60 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90002f1c:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90002f1e:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma) { pDma = &dma; }
90002f20:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
90002f22:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
90002f26:	4b0f      	ldr	r3, [pc, #60]	; (90002f64 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
90002f28:	490f      	ldr	r1, [pc, #60]	; (90002f68 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
90002f2a:	4a10      	ldr	r2, [pc, #64]	; (90002f6c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
90002f2c:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
90002f2e:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
90002f30:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
90002f32:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
90002f36:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90002f38:	4a0d      	ldr	r2, [pc, #52]	; (90002f70 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
90002f3a:	2300      	movs	r3, #0
90002f3c:	4620      	mov	r0, r4
90002f3e:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
90002f42:	47a8      	blx	r5
90002f44:	e7ec      	b.n	90002f20 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90002f46:	2100      	movs	r1, #0
90002f48:	4620      	mov	r0, r4
90002f4a:	4798      	blx	r3
90002f4c:	e7e8      	b.n	90002f20 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
90002f4e:	bf00      	nop
90002f50:	90000e69 	.word	0x90000e69
90002f54:	d003fc00 	.word	0xd003fc00
90002f58:	24028e2a 	.word	0x24028e2a
90002f5c:	90000ced 	.word	0x90000ced
90002f60:	24028e2b 	.word	0x24028e2b
90002f64:	240096b4 	.word	0x240096b4
90002f68:	2400966c 	.word	0x2400966c
90002f6c:	d00bf400 	.word	0xd00bf400
90002f70:	d007f800 	.word	0xd007f800

90002f74 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002f74:	b510      	push	{r4, lr}
        return instance;
90002f76:	4c14      	ldr	r4, [pc, #80]	; (90002fc8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90002f78:	6823      	ldr	r3, [r4, #0]
90002f7a:	b323      	cbz	r3, 90002fc6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002f7c:	4b13      	ldr	r3, [pc, #76]	; (90002fcc <HAL_LTDC_LineEventCallback+0x58>)
90002f7e:	4a14      	ldr	r2, [pc, #80]	; (90002fd0 <HAL_LTDC_LineEventCallback+0x5c>)
90002f80:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90002f82:	8811      	ldrh	r1, [r2, #0]
90002f84:	428b      	cmp	r3, r1
90002f86:	d00a      	beq.n	90002f9e <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90002f88:	f00a fc30 	bl	9000d7ec <HAL_LTDC_ProgramLineEvent>
90002f8c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90002f8e:	6803      	ldr	r3, [r0, #0]
90002f90:	6a1b      	ldr	r3, [r3, #32]
90002f92:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002f94:	2000      	movs	r0, #0
        }
    }
90002f96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
90002f9a:	f7fd be4b 	b.w	90000c34 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90002f9e:	4b0d      	ldr	r3, [pc, #52]	; (90002fd4 <HAL_LTDC_LineEventCallback+0x60>)
90002fa0:	8819      	ldrh	r1, [r3, #0]
90002fa2:	f00a fc23 	bl	9000d7ec <HAL_LTDC_ProgramLineEvent>
        return instance;
90002fa6:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
90002fa8:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
90002fac:	3301      	adds	r3, #1
90002fae:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            OSWrappers::signalVSync();
90002fb2:	f7ff f84d 	bl	90002050 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90002fb6:	6820      	ldr	r0, [r4, #0]
90002fb8:	f013 fc12 	bl	900167e0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90002fbc:	2000      	movs	r0, #0
    }
90002fbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
90002fc2:	f7fd be03 	b.w	90000bcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
90002fc6:	bd10      	pop	{r4, pc}
90002fc8:	24028e2c 	.word	0x24028e2c
90002fcc:	50001000 	.word	0x50001000
90002fd0:	24009668 	.word	0x24009668
90002fd4:	24009666 	.word	0x24009666

90002fd8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
90002fd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90002fdc:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 90003098 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
90002fe0:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
90002fe2:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002fe4:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
90002fe8:	4604      	mov	r4, r0
90002fea:	e024      	b.n	90003036 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
90002fec:	682b      	ldr	r3, [r5, #0]
90002fee:	4628      	mov	r0, r5
90002ff0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90002ff2:	4798      	blx	r3
                        stream.seek_to_frame = 0;
90002ff4:	2300      	movs	r3, #0
90002ff6:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002ff8:	6829      	ldr	r1, [r5, #0]
90002ffa:	f44f 7390 	mov.w	r3, #288	; 0x120
90002ffe:	9700      	str	r7, [sp, #0]
90003000:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90003004:	f8d1 9014 	ldr.w	r9, [r1, #20]
90003008:	4628      	mov	r0, r5
9000300a:	68a1      	ldr	r1, [r4, #8]
9000300c:	47c8      	blx	r9
                    stream.frameCount++;
9000300e:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90003010:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
90003014:	3301      	adds	r3, #1
90003016:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
90003018:	2800      	cmp	r0, #0
9000301a:	d033      	beq.n	90003084 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
9000301c:	682b      	ldr	r3, [r5, #0]
9000301e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90003020:	4543      	cmp	r3, r8
90003022:	d131      	bne.n	90003088 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
    virtual uint32_t getCurrentFrameNumber() const { return frameNumber; }
90003024:	6968      	ldr	r0, [r5, #20]
90003026:	3801      	subs	r0, #1
90003028:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
9000302a:	2300      	movs	r3, #0
9000302c:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
90003030:	6c60      	ldr	r0, [r4, #68]	; 0x44
90003032:	f00d ff41 	bl	90010eb8 <osMutexRelease>
            SEM_WAIT(semDecode);
90003036:	f04f 31ff 	mov.w	r1, #4294967295
9000303a:	6c20      	ldr	r0, [r4, #64]	; 0x40
9000303c:	f00d ffae 	bl	90010f9c <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
90003040:	f04f 31ff 	mov.w	r1, #4294967295
90003044:	6c60      	ldr	r0, [r4, #68]	; 0x44
90003046:	f00d ff13 	bl	90010e70 <osMutexAcquire>
                if (stream.doDecode)
9000304a:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
9000304e:	2b00      	cmp	r3, #0
90003050:	d0ee      	beq.n	90003030 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
90003052:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
90003054:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
90003056:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
9000305a:	2900      	cmp	r1, #0
9000305c:	d1c6      	bne.n	90002fec <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
9000305e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90003060:	2b00      	cmp	r3, #0
90003062:	d0c9      	beq.n	90002ff8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90003064:	682a      	ldr	r2, [r5, #0]
90003066:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
9000306a:	4541      	cmp	r1, r8
9000306c:	d10f      	bne.n	9000308e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
9000306e:	6968      	ldr	r0, [r5, #20]
90003070:	18c1      	adds	r1, r0, r3
90003072:	4628      	mov	r0, r5
90003074:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
90003076:	6923      	ldr	r3, [r4, #16]
90003078:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
9000307a:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
9000307c:	440b      	add	r3, r1
                            stream.skip_frames = 0;
9000307e:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
90003080:	6123      	str	r3, [r4, #16]
90003082:	e7b9      	b.n	90002ff8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                        stream.frameNumber = 1;
90003084:	60e6      	str	r6, [r4, #12]
90003086:	e7d0      	b.n	9000302a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x52>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90003088:	4628      	mov	r0, r5
9000308a:	4798      	blx	r3
9000308c:	e7cb      	b.n	90003026 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
9000308e:	4628      	mov	r0, r5
90003090:	4788      	blx	r1
90003092:	6a63      	ldr	r3, [r4, #36]	; 0x24
90003094:	e7ec      	b.n	90003070 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
90003096:	bf00      	nop
90003098:	90000fe1 	.word	0x90000fe1

9000309c <videoTaskFunc>:
    videoController.decoderTaskEntry();
9000309c:	4801      	ldr	r0, [pc, #4]	; (900030a4 <videoTaskFunc+0x8>)
{
9000309e:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
900030a0:	f7ff ff9a 	bl	90002fd8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
900030a4:	240096b4 	.word	0x240096b4

900030a8 <_GLOBAL__sub_I_mjpegdecoder1>:
}
900030a8:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900030aa:	4815      	ldr	r0, [pc, #84]	; (90003100 <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
900030ac:	2500      	movs	r5, #0
900030ae:	f7fe fba5 	bl	900017fc <_ZN20HardwareMJPEGDecoderC1Ev>
900030b2:	4c14      	ldr	r4, [pc, #80]	; (90003104 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
900030b4:	4914      	ldr	r1, [pc, #80]	; (90003108 <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
900030b6:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
900030ba:	462a      	mov	r2, r5
900030bc:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
900030be:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
900030c0:	4629      	mov	r1, r5
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
900030c2:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
900030c4:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
900030c6:	6325      	str	r5, [r4, #48]	; 0x30
900030c8:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
                   doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
900030cc:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
900030d0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
900030d4:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
900030d8:	e9c4 5501 	strd	r5, r5, [r4, #4]
                   doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
900030dc:	e9c4 5503 	strd	r5, r5, [r4, #12]
900030e0:	e9c4 5505 	strd	r5, r5, [r4, #20]
900030e4:	e9c4 5507 	strd	r5, r5, [r4, #28]
900030e8:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
        semDecode = SEM_CREATE(); // Binary semaphore
900030ec:	f00d ff06 	bl	90010efc <osSemaphoreNew>
900030f0:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
900030f2:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
900030f4:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
900030f6:	f00d fe81 	bl	90010dfc <osMutexNew>
900030fa:	6460      	str	r0, [r4, #68]	; 0x44
}
900030fc:	bd38      	pop	{r3, r4, r5, pc}
900030fe:	bf00      	nop
90003100:	2400966c 	.word	0x2400966c
90003104:	240096b4 	.word	0x240096b4
90003108:	9002e57c 	.word	0x9002e57c

9000310c <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks>:
static uint32_t TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks(uint8_t *pInBuffer,
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
9000310c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int32_t c_red, c_blue, c_green;

  uint8_t *pOutAddr, *pOutAddr2;
  uint8_t *pChrom, *pLum;

  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90003110:	4c7e      	ldr	r4, [pc, #504]	; (9000330c <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x200>)
{
90003112:	b08d      	sub	sp, #52	; 0x34
90003114:	9006      	str	r0, [sp, #24]
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90003116:	fba4 0303 	umull	r0, r3, r4, r3
{
9000311a:	9109      	str	r1, [sp, #36]	; 0x24
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
9000311c:	0a19      	lsrs	r1, r3, #8
{
9000311e:	9208      	str	r2, [sp, #32]
  currentMCU = BlockIndex;

  while(currentMCU < (numberMCU + BlockIndex))
90003120:	eb02 2313 	add.w	r3, r2, r3, lsr #8
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90003124:	ee07 1a90 	vmov	s15, r1
  while(currentMCU < (numberMCU + BlockIndex))
90003128:	4293      	cmp	r3, r2
9000312a:	930b      	str	r3, [sp, #44]	; 0x2c
9000312c:	f240 80e9 	bls.w	90003302 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1f6>
  {
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90003130:	4b77      	ldr	r3, [pc, #476]	; (90003310 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x204>)
90003132:	f8df 81ec 	ldr.w	r8, [pc, #492]	; 90003320 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x214>
90003136:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003138:	f8df 91e8 	ldr.w	r9, [pc, #488]	; 90003324 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x218>
9000313c:	930a      	str	r3, [sp, #40]	; 0x28
9000313e:	9a06      	ldr	r2, [sp, #24]
    //tgfx: Set stride to the full width of the RGB Buffer, and not the video itself.
    JPEG_ConvertorParams.ScaledWidth = 480 * 2;

    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);

    currentMCU++;
90003140:	f04f 0e02 	mov.w	lr, #2
90003144:	9908      	ldr	r1, [sp, #32]
90003146:	f502 7080 	add.w	r0, r2, #256	; 0x100
9000314a:	010b      	lsls	r3, r1, #4
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
9000314c:	3101      	adds	r1, #1
    currentMCU++;
9000314e:	e9cd 2003 	strd	r2, r0, [sp, #12]
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90003152:	980a      	ldr	r0, [sp, #40]	; 0x28
90003154:	9108      	str	r1, [sp, #32]
90003156:	fbb3 f2f0 	udiv	r2, r3, r0
    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);
9000315a:	fb00 3312 	mls	r3, r0, r2, r3
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9000315e:	ebc2 1202 	rsb	r2, r2, r2, lsl #4
90003162:	005b      	lsls	r3, r3, #1
90003164:	eb03 2382 	add.w	r3, r3, r2, lsl #10
90003168:	9301      	str	r3, [sp, #4]

    pChrom = pInBuffer + 256; /* pChroma = pInBuffer + 4*64 */

    pLum = pInBuffer;

    for(i= 0; i <  16; i+=2)
9000316a:	e009      	b.n	90003180 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x74>
      if(i == 8)
      {
        pLum = pInBuffer + 128;
      }

      if(refline < JPEG_ConvertorParams.ScaledWidth * 288)
9000316c:	9b01      	ldr	r3, [sp, #4]
9000316e:	f5b3 2f87 	cmp.w	r3, #276480	; 0x43800
90003172:	d30f      	bcc.n	90003194 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x88>
    for(i= 0; i <  16; i+=2)
90003174:	f1be 0f10 	cmp.w	lr, #16
90003178:	f000 80b6 	beq.w	900032e8 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1dc>
9000317c:	f10e 0e02 	add.w	lr, lr, #2
      if(i == 8)
90003180:	f1be 0f0a 	cmp.w	lr, #10
90003184:	d1f2      	bne.n	9000316c <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x60>
        pLum = pInBuffer + 128;
90003186:	9b06      	ldr	r3, [sp, #24]
90003188:	3380      	adds	r3, #128	; 0x80
9000318a:	9303      	str	r3, [sp, #12]
      if(refline < JPEG_ConvertorParams.ScaledWidth * 288)
9000318c:	9b01      	ldr	r3, [sp, #4]
9000318e:	f5b3 2f87 	cmp.w	r3, #276480	; 0x43800
90003192:	d2f3      	bcs.n	9000317c <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x70>
      {
        pOutAddr = pOutBuffer + refline;
90003194:	9a01      	ldr	r2, [sp, #4]
90003196:	9b09      	ldr	r3, [sp, #36]	; 0x24
90003198:	f8cd e01c 	str.w	lr, [sp, #28]
9000319c:	4413      	add	r3, r2
9000319e:	e9dd 2103 	ldrd	r2, r1, [sp, #12]
900031a2:	f103 0c10 	add.w	ip, r3, #16
900031a6:	3330      	adds	r3, #48	; 0x30
900031a8:	4696      	mov	lr, r2
900031aa:	9102      	str	r1, [sp, #8]
900031ac:	9305      	str	r3, [sp, #20]
900031ae:	9b02      	ldr	r3, [sp, #8]
900031b0:	f50c 766c 	add.w	r6, ip, #944	; 0x3b0
900031b4:	f1ac 0510 	sub.w	r5, ip, #16
        pOutAddr2 = pOutAddr + JPEG_ConvertorParams.ScaledWidth;

        for(k= 0; k<2; k++)
        {
          for(j=0; j < 8; j+=2)
900031b8:	4674      	mov	r4, lr
900031ba:	1e5f      	subs	r7, r3, #1
          {
            cbcomp = (int32_t)(*(pChrom));
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900031bc:	f817 1f01 	ldrb.w	r1, [r7, #1]!
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
#endif /* JPEG_RGB_FORMAT */

            pOutAddr += JPEG_BYTES_PER_PIXEL * 2;
900031c0:	3504      	adds	r5, #4
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900031c2:	4b54      	ldr	r3, [pc, #336]	; (90003314 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x208>)
          for(j=0; j < 8; j+=2)
900031c4:	3402      	adds	r4, #2
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900031c6:	f897 2040 	ldrb.w	r2, [r7, #64]	; 0x40
            pOutAddr2 += JPEG_BYTES_PER_PIXEL * 2;
900031ca:	3604      	adds	r6, #4
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900031cc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
          for(j=0; j < 8; j+=2)
900031d0:	4565      	cmp	r5, ip
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900031d2:	4b51      	ldr	r3, [pc, #324]	; (90003318 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x20c>)
            ycomp = (int32_t)(*(pLum +j));
900031d4:	f814 ac02 	ldrb.w	sl, [r4, #-2]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900031d8:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900031dc:	f858 3022 	ldr.w	r3, [r8, r2, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900031e0:	4449      	add	r1, r9
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900031e2:	4403      	add	r3, r0
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900031e4:	484d      	ldr	r0, [pc, #308]	; (9000331c <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x210>)
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900031e6:	eb09 4323 	add.w	r3, r9, r3, asr #16
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900031ea:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900031ee:	eb01 020a 	add.w	r2, r1, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900031f2:	4448      	add	r0, r9
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900031f4:	f892 b100 	ldrb.w	fp, [r2, #256]	; 0x100
900031f8:	eb03 020a 	add.w	r2, r3, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900031fc:	4482      	add	sl, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900031fe:	f892 2100 	ldrb.w	r2, [r2, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003202:	f89a a100 	ldrb.w	sl, [sl, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003206:	ea4f 0292 	mov.w	r2, r2, lsr #2
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000320a:	ea4f 0ada 	mov.w	sl, sl, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000320e:	ea4f 1242 	mov.w	r2, r2, lsl #5
90003212:	ea42 22ca 	orr.w	r2, r2, sl, lsl #11
90003216:	ea42 02db 	orr.w	r2, r2, fp, lsr #3
            *(__IO uint16_t *)pOutAddr =
9000321a:	f825 2c04 	strh.w	r2, [r5, #-4]
            ycomp = (int32_t)(*(pLum +j +1));
9000321e:	f814 ac01 	ldrb.w	sl, [r4, #-1]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003222:	eb03 020a 	add.w	r2, r3, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003226:	eb00 0b0a 	add.w	fp, r0, sl
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000322a:	448a      	add	sl, r1
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000322c:	f892 2100 	ldrb.w	r2, [r2, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003230:	f89b b100 	ldrb.w	fp, [fp, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003234:	ea4f 0292 	mov.w	r2, r2, lsr #2
90003238:	f89a a100 	ldrb.w	sl, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000323c:	ea4f 0bdb 	mov.w	fp, fp, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003240:	ea4f 1242 	mov.w	r2, r2, lsl #5
90003244:	ea42 22cb 	orr.w	r2, r2, fp, lsl #11
90003248:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
            *((__IO uint16_t *)(pOutAddr + 2)) =
9000324c:	f825 2c02 	strh.w	r2, [r5, #-2]
            ycomp = (int32_t)(*(pLum +j +8));
90003250:	f894 a006 	ldrb.w	sl, [r4, #6]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003254:	eb03 020a 	add.w	r2, r3, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003258:	eb00 0b0a 	add.w	fp, r0, sl
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000325c:	448a      	add	sl, r1
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000325e:	f892 2100 	ldrb.w	r2, [r2, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003262:	f89b b100 	ldrb.w	fp, [fp, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003266:	ea4f 0292 	mov.w	r2, r2, lsr #2
9000326a:	f89a a100 	ldrb.w	sl, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000326e:	ea4f 0bdb 	mov.w	fp, fp, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003272:	ea4f 1242 	mov.w	r2, r2, lsl #5
90003276:	ea42 22cb 	orr.w	r2, r2, fp, lsl #11
9000327a:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
            *(__IO uint16_t *)pOutAddr2 =
9000327e:	f826 2c04 	strh.w	r2, [r6, #-4]
            ycomp = (int32_t)(*(pLum +j +8 +1));
90003282:	79e2      	ldrb	r2, [r4, #7]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003284:	4413      	add	r3, r2
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003286:	4410      	add	r0, r2
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003288:	4411      	add	r1, r2
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000328a:	f893 3100 	ldrb.w	r3, [r3, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000328e:	f890 2100 	ldrb.w	r2, [r0, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003292:	ea4f 0393 	mov.w	r3, r3, lsr #2
90003296:	f891 1100 	ldrb.w	r1, [r1, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000329a:	ea4f 02d2 	mov.w	r2, r2, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000329e:	ea4f 1343 	mov.w	r3, r3, lsl #5
900032a2:	ea43 23c2 	orr.w	r3, r3, r2, lsl #11
900032a6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
            *((__IO uint16_t *)(pOutAddr2 +2)) =
900032aa:	f826 3c02 	strh.w	r3, [r6, #-2]
          for(j=0; j < 8; j+=2)
900032ae:	d185      	bne.n	900031bc <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0xb0>

            pChrom++;
900032b0:	9b02      	ldr	r3, [sp, #8]
        for(k= 0; k<2; k++)
900032b2:	f105 0c10 	add.w	ip, r5, #16
          }
          pLum += 64;
900032b6:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
            pChrom++;
900032ba:	3304      	adds	r3, #4
900032bc:	9302      	str	r3, [sp, #8]
        for(k= 0; k<2; k++)
900032be:	9b05      	ldr	r3, [sp, #20]
900032c0:	4563      	cmp	r3, ip
900032c2:	f47f af74 	bne.w	900031ae <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0xa2>
            pChrom++;
900032c6:	9b04      	ldr	r3, [sp, #16]
900032c8:	f8dd e01c 	ldr.w	lr, [sp, #28]
900032cc:	3308      	adds	r3, #8
    for(i= 0; i <  16; i+=2)
900032ce:	f1be 0f10 	cmp.w	lr, #16
            pChrom++;
900032d2:	9304      	str	r3, [sp, #16]
        }

        pLum = pLum - 128 + 16;
900032d4:	9b03      	ldr	r3, [sp, #12]
900032d6:	f103 0310 	add.w	r3, r3, #16
900032da:	9303      	str	r3, [sp, #12]

        refline += 2*JPEG_ConvertorParams.ScaledWidth;
900032dc:	9b01      	ldr	r3, [sp, #4]
900032de:	f503 63f0 	add.w	r3, r3, #1920	; 0x780
900032e2:	9301      	str	r3, [sp, #4]
    for(i= 0; i <  16; i+=2)
900032e4:	f47f af4a 	bne.w	9000317c <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x70>
      }
    }

    pInBuffer +=  YCBCR_420_BLOCK_SIZE;
900032e8:	9b06      	ldr	r3, [sp, #24]
  while(currentMCU < (numberMCU + BlockIndex))
900032ea:	9a08      	ldr	r2, [sp, #32]
    pInBuffer +=  YCBCR_420_BLOCK_SIZE;
900032ec:	f503 73c0 	add.w	r3, r3, #384	; 0x180
900032f0:	9306      	str	r3, [sp, #24]
  while(currentMCU < (numberMCU + BlockIndex))
900032f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900032f4:	4293      	cmp	r3, r2
900032f6:	f47f af22 	bne.w	9000313e <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x32>
900032fa:	f44f 7370 	mov.w	r3, #960	; 0x3c0
900032fe:	4a04      	ldr	r2, [pc, #16]	; (90003310 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x204>)
90003300:	6293      	str	r3, [r2, #40]	; 0x28
  }
  return numberMCU;
}
90003302:	ee17 0a90 	vmov	r0, s15
90003306:	b00d      	add	sp, #52	; 0x34
90003308:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000330c:	aaaaaaab 	.word	0xaaaaaaab
90003310:	2400c37c 	.word	0x2400c37c
90003314:	2400a6fc 	.word	0x2400a6fc
90003318:	2400a2fc 	.word	0x2400a2fc
9000331c:	2400aefc 	.word	0x2400aefc
90003320:	2400aafc 	.word	0x2400aafc
90003324:	9002e5b4 	.word	0x9002e5b4

90003328 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCbCr422_ARGB_ConvertBlocks(uint8_t *pInBuffer,
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
90003328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int32_t c_red, c_blue, c_green;

  uint8_t *pOutAddr;
  uint8_t *pChrom, *pLum;

  numberMCU = DataCount / YCBCR_422_BLOCK_SIZE;
9000332c:	0a1c      	lsrs	r4, r3, #8
{
9000332e:	b08d      	sub	sp, #52	; 0x34
  currentMCU = BlockIndex;

  while(currentMCU < (numberMCU + BlockIndex))
90003330:	eb02 2313 	add.w	r3, r2, r3, lsr #8
  numberMCU = DataCount / YCBCR_422_BLOCK_SIZE;
90003334:	ee07 4a90 	vmov	s15, r4
{
90003338:	9208      	str	r2, [sp, #32]
  while(currentMCU < (numberMCU + BlockIndex))
9000333a:	429a      	cmp	r2, r3
{
9000333c:	9007      	str	r0, [sp, #28]
9000333e:	9109      	str	r1, [sp, #36]	; 0x24
  while(currentMCU < (numberMCU + BlockIndex))
90003340:	930b      	str	r3, [sp, #44]	; 0x2c
90003342:	f080 814a 	bcs.w	900035da <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2b2>
  {
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
90003346:	4ba7      	ldr	r3, [pc, #668]	; (900035e4 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2bc>)
90003348:	4da7      	ldr	r5, [pc, #668]	; (900035e8 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2c0>)
9000334a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000334c:	f8df 929c 	ldr.w	r9, [pc, #668]	; 900035ec <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2c4>
90003350:	920a      	str	r2, [sp, #40]	; 0x28

    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);

    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90003352:	6a9a      	ldr	r2, [r3, #40]	; 0x28

    pLum = pInBuffer;

    for(i= 0; i <  8; i++)
    {
       if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90003354:	691b      	ldr	r3, [r3, #16]
90003356:	f8df a298 	ldr.w	sl, [pc, #664]	; 900035f0 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2c8>
9000335a:	f8df b298 	ldr.w	fp, [pc, #664]	; 900035f4 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2cc>
9000335e:	f8df 8298 	ldr.w	r8, [pc, #664]	; 900035f8 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2d0>
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90003362:	9206      	str	r2, [sp, #24]
       if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90003364:	9301      	str	r3, [sp, #4]
90003366:	e008      	b.n	9000337a <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x52>

        refline += JPEG_ConvertorParams.ScaledWidth;
      }
    }

    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
90003368:	9b07      	ldr	r3, [sp, #28]
  while(currentMCU < (numberMCU + BlockIndex))
9000336a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
9000336c:	f503 7380 	add.w	r3, r3, #256	; 0x100
90003370:	9307      	str	r3, [sp, #28]
  while(currentMCU < (numberMCU + BlockIndex))
90003372:	9b08      	ldr	r3, [sp, #32]
90003374:	4293      	cmp	r3, r2
90003376:	f000 8130 	beq.w	900035da <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2b2>
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
9000337a:	9a07      	ldr	r2, [sp, #28]
9000337c:	9908      	ldr	r1, [sp, #32]
9000337e:	f102 0080 	add.w	r0, r2, #128	; 0x80
90003382:	010b      	lsls	r3, r1, #4
90003384:	3101      	adds	r1, #1
    currentMCU++;
90003386:	e9cd 0202 	strd	r0, r2, [sp, #8]
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
9000338a:	980a      	ldr	r0, [sp, #40]	; 0x28
9000338c:	9108      	str	r1, [sp, #32]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9000338e:	9906      	ldr	r1, [sp, #24]
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
90003390:	fbb3 f2f0 	udiv	r2, r3, r0
    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);
90003394:	fb00 3312 	mls	r3, r0, r2, r3
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90003398:	fb01 f202 	mul.w	r2, r1, r2
9000339c:	005b      	lsls	r3, r3, #1
9000339e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
900033a2:	9300      	str	r3, [sp, #0]
    currentMCU++;
900033a4:	2308      	movs	r3, #8
900033a6:	9305      	str	r3, [sp, #20]
       if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
900033a8:	e9dd 2300 	ldrd	r2, r3, [sp]
900033ac:	4293      	cmp	r3, r2
900033ae:	d9db      	bls.n	90003368 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x40>
        pOutAddr = pOutBuffer + refline;
900033b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900033b2:	4413      	add	r3, r2
        for(k= 0; k<2; k++)
900033b4:	9a03      	ldr	r2, [sp, #12]
900033b6:	f102 0140 	add.w	r1, r2, #64	; 0x40
900033ba:	9a02      	ldr	r2, [sp, #8]
900033bc:	f103 0020 	add.w	r0, r3, #32
900033c0:	3204      	adds	r2, #4
900033c2:	9004      	str	r0, [sp, #16]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900033c4:	f892 003c 	ldrb.w	r0, [r2, #60]	; 0x3c
900033c8:	3310      	adds	r3, #16
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900033ca:	f812 4c04 	ldrb.w	r4, [r2, #-4]
        for(k= 0; k<2; k++)
900033ce:	3140      	adds	r1, #64	; 0x40
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900033d0:	f859 7020 	ldr.w	r7, [r9, r0, lsl #2]
        for(k= 0; k<2; k++)
900033d4:	3204      	adds	r2, #4
            ycomp = (int32_t)(*(pLum +j));
900033d6:	f811 cc80 	ldrb.w	ip, [r1, #-128]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900033da:	f855 6024 	ldr.w	r6, [r5, r4, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900033de:	4447      	add	r7, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900033e0:	f85b 4024 	ldr.w	r4, [fp, r4, lsl #2]
900033e4:	f85a 0020 	ldr.w	r0, [sl, r0, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900033e8:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900033ea:	4420      	add	r0, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900033ec:	eb07 040c 	add.w	r4, r7, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900033f0:	eb08 4020 	add.w	r0, r8, r0, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900033f4:	f894 e100 	ldrb.w	lr, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900033f8:	eb06 040c 	add.w	r4, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900033fc:	4484      	add	ip, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900033fe:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003402:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
90003406:	f89c c100 	ldrb.w	ip, [ip, #256]	; 0x100
9000340a:	08e4      	lsrs	r4, r4, #3
9000340c:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90003410:	ea44 24ce 	orr.w	r4, r4, lr, lsl #11
90003414:	ea44 144c 	orr.w	r4, r4, ip, lsl #5
            *(__IO uint16_t *)pOutAddr =
90003418:	f823 4c10 	strh.w	r4, [r3, #-16]
            ycomp = (int32_t)(*(pLum +j +1));
9000341c:	f811 4c7f 	ldrb.w	r4, [r1, #-127]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003420:	4426      	add	r6, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003422:	4427      	add	r7, r4
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003424:	4404      	add	r4, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003426:	f897 7100 	ldrb.w	r7, [r7, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000342a:	f896 0100 	ldrb.w	r0, [r6, #256]	; 0x100
9000342e:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003432:	08fe      	lsrs	r6, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003434:	08c0      	lsrs	r0, r0, #3
90003436:	08a4      	lsrs	r4, r4, #2
90003438:	ea40 20c6 	orr.w	r0, r0, r6, lsl #11
9000343c:	ea40 1044 	orr.w	r0, r0, r4, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) =
90003440:	f823 0c0e 	strh.w	r0, [r3, #-14]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90003444:	f892 0039 	ldrb.w	r0, [r2, #57]	; 0x39
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003448:	f812 4c07 	ldrb.w	r4, [r2, #-7]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
9000344c:	f859 7020 	ldr.w	r7, [r9, r0, lsl #2]
            ycomp = (int32_t)(*(pLum +j));
90003450:	f811 cc7e 	ldrb.w	ip, [r1, #-126]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003454:	f855 6024 	ldr.w	r6, [r5, r4, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003458:	4447      	add	r7, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000345a:	f85b 4024 	ldr.w	r4, [fp, r4, lsl #2]
9000345e:	f85a 0020 	ldr.w	r0, [sl, r0, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003462:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003464:	4420      	add	r0, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003466:	eb07 040c 	add.w	r4, r7, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000346a:	eb08 4020 	add.w	r0, r8, r0, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000346e:	f894 e100 	ldrb.w	lr, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003472:	eb06 040c 	add.w	r4, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003476:	4484      	add	ip, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003478:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000347c:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
90003480:	f89c c100 	ldrb.w	ip, [ip, #256]	; 0x100
90003484:	08e4      	lsrs	r4, r4, #3
90003486:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
9000348a:	ea44 24ce 	orr.w	r4, r4, lr, lsl #11
9000348e:	ea44 144c 	orr.w	r4, r4, ip, lsl #5
            *(__IO uint16_t *)pOutAddr =
90003492:	f823 4c0c 	strh.w	r4, [r3, #-12]
            ycomp = (int32_t)(*(pLum +j +1));
90003496:	f811 4c7d 	ldrb.w	r4, [r1, #-125]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000349a:	4426      	add	r6, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000349c:	4427      	add	r7, r4
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000349e:	4404      	add	r4, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900034a0:	f897 7100 	ldrb.w	r7, [r7, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900034a4:	f896 0100 	ldrb.w	r0, [r6, #256]	; 0x100
900034a8:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900034ac:	08fe      	lsrs	r6, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900034ae:	08c0      	lsrs	r0, r0, #3
900034b0:	08a4      	lsrs	r4, r4, #2
900034b2:	ea40 20c6 	orr.w	r0, r0, r6, lsl #11
900034b6:	ea40 1044 	orr.w	r0, r0, r4, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) =
900034ba:	f823 0c0a 	strh.w	r0, [r3, #-10]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900034be:	f812 4c06 	ldrb.w	r4, [r2, #-6]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900034c2:	f892 003a 	ldrb.w	r0, [r2, #58]	; 0x3a
            ycomp = (int32_t)(*(pLum +j));
900034c6:	f811 cc7c 	ldrb.w	ip, [r1, #-124]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900034ca:	f859 7020 	ldr.w	r7, [r9, r0, lsl #2]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900034ce:	f855 6024 	ldr.w	r6, [r5, r4, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900034d2:	f85a 0020 	ldr.w	r0, [sl, r0, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900034d6:	4447      	add	r7, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900034d8:	f85b 4024 	ldr.w	r4, [fp, r4, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900034dc:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900034de:	4420      	add	r0, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900034e0:	eb07 040c 	add.w	r4, r7, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900034e4:	eb08 4020 	add.w	r0, r8, r0, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900034e8:	f894 e100 	ldrb.w	lr, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900034ec:	eb06 040c 	add.w	r4, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900034f0:	4484      	add	ip, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900034f2:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900034f6:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
900034fa:	f89c c100 	ldrb.w	ip, [ip, #256]	; 0x100
900034fe:	08e4      	lsrs	r4, r4, #3
90003500:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90003504:	ea44 24ce 	orr.w	r4, r4, lr, lsl #11
90003508:	ea44 144c 	orr.w	r4, r4, ip, lsl #5
            *(__IO uint16_t *)pOutAddr =
9000350c:	f823 4c08 	strh.w	r4, [r3, #-8]
            ycomp = (int32_t)(*(pLum +j +1));
90003510:	f811 4c7b 	ldrb.w	r4, [r1, #-123]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003514:	4426      	add	r6, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003516:	4427      	add	r7, r4
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003518:	4404      	add	r4, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000351a:	f897 7100 	ldrb.w	r7, [r7, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000351e:	f896 0100 	ldrb.w	r0, [r6, #256]	; 0x100
90003522:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003526:	08fe      	lsrs	r6, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003528:	08c0      	lsrs	r0, r0, #3
9000352a:	08a4      	lsrs	r4, r4, #2
9000352c:	ea40 20c6 	orr.w	r0, r0, r6, lsl #11
90003530:	ea40 1044 	orr.w	r0, r0, r4, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) =
90003534:	f823 0c06 	strh.w	r0, [r3, #-6]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003538:	f812 0c05 	ldrb.w	r0, [r2, #-5]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
9000353c:	f892 403b 	ldrb.w	r4, [r2, #59]	; 0x3b
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003540:	f85b c020 	ldr.w	ip, [fp, r0, lsl #2]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003544:	f855 6020 	ldr.w	r6, [r5, r0, lsl #2]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90003548:	f859 7024 	ldr.w	r7, [r9, r4, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000354c:	f85a 0024 	ldr.w	r0, [sl, r4, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003550:	4446      	add	r6, r8
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003552:	4447      	add	r7, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003554:	4460      	add	r0, ip
            ycomp = (int32_t)(*(pLum +j));
90003556:	f811 cc7a 	ldrb.w	ip, [r1, #-122]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000355a:	eb07 040c 	add.w	r4, r7, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000355e:	eb08 4020 	add.w	r0, r8, r0, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003562:	f894 e100 	ldrb.w	lr, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003566:	eb06 040c 	add.w	r4, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000356a:	4484      	add	ip, r0
9000356c:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003570:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003574:	f89c c100 	ldrb.w	ip, [ip, #256]	; 0x100
90003578:	08e4      	lsrs	r4, r4, #3
9000357a:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
9000357e:	ea44 24ce 	orr.w	r4, r4, lr, lsl #11
90003582:	ea44 144c 	orr.w	r4, r4, ip, lsl #5
            *(__IO uint16_t *)pOutAddr =
90003586:	f823 4c04 	strh.w	r4, [r3, #-4]
            ycomp = (int32_t)(*(pLum +j +1));
9000358a:	f811 4c79 	ldrb.w	r4, [r1, #-121]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000358e:	4426      	add	r6, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003590:	4427      	add	r7, r4
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003592:	4404      	add	r4, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003594:	f897 7100 	ldrb.w	r7, [r7, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003598:	f896 0100 	ldrb.w	r0, [r6, #256]	; 0x100
9000359c:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900035a0:	08fe      	lsrs	r6, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900035a2:	08c0      	lsrs	r0, r0, #3
900035a4:	08a4      	lsrs	r4, r4, #2
900035a6:	ea40 20c6 	orr.w	r0, r0, r6, lsl #11
900035aa:	ea40 1044 	orr.w	r0, r0, r4, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) =
900035ae:	f823 0c02 	strh.w	r0, [r3, #-2]
        for(k= 0; k<2; k++)
900035b2:	9804      	ldr	r0, [sp, #16]
900035b4:	4283      	cmp	r3, r0
900035b6:	f47f af05 	bne.w	900033c4 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x9c>
            pChrom++;
900035ba:	9b02      	ldr	r3, [sp, #8]
        refline += JPEG_ConvertorParams.ScaledWidth;
900035bc:	9a06      	ldr	r2, [sp, #24]
            pChrom++;
900035be:	3308      	adds	r3, #8
900035c0:	9302      	str	r3, [sp, #8]
        pLum = pLum - 128 + 8;
900035c2:	9b03      	ldr	r3, [sp, #12]
900035c4:	3308      	adds	r3, #8
900035c6:	9303      	str	r3, [sp, #12]
        refline += JPEG_ConvertorParams.ScaledWidth;
900035c8:	9b00      	ldr	r3, [sp, #0]
900035ca:	4413      	add	r3, r2
900035cc:	9300      	str	r3, [sp, #0]
    for(i= 0; i <  8; i++)
900035ce:	9b05      	ldr	r3, [sp, #20]
900035d0:	3b01      	subs	r3, #1
900035d2:	9305      	str	r3, [sp, #20]
900035d4:	f47f aee8 	bne.w	900033a8 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x80>
900035d8:	e6c6      	b.n	90003368 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x40>
  }
  return numberMCU;
}
900035da:	ee17 0a90 	vmov	r0, s15
900035de:	b00d      	add	sp, #52	; 0x34
900035e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900035e4:	2400c37c 	.word	0x2400c37c
900035e8:	2400a2fc 	.word	0x2400a2fc
900035ec:	2400aefc 	.word	0x2400aefc
900035f0:	2400aafc 	.word	0x2400aafc
900035f4:	2400a6fc 	.word	0x2400a6fc
900035f8:	9002e5b4 	.word	0x9002e5b4

900035fc <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCbCr444_ARGB_ConvertBlocks(uint8_t *pInBuffer,
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
900035fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int32_t c_red, c_blue, c_green;

  uint8_t *pOutAddr;
  uint8_t *pChrom, *pLum;

  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
90003600:	4cb6      	ldr	r4, [pc, #728]	; (900038dc <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2e0>)
{
90003602:	b089      	sub	sp, #36	; 0x24
90003604:	e9cd 0204 	strd	r0, r2, [sp, #16]
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
90003608:	fba4 0303 	umull	r0, r3, r4, r3
{
9000360c:	9102      	str	r1, [sp, #8]
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
9000360e:	09d9      	lsrs	r1, r3, #7
  currentMCU = BlockIndex;

  while(currentMCU < (numberMCU + BlockIndex))
90003610:	eb02 13d3 	add.w	r3, r2, r3, lsr #7
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
90003614:	ee07 1a90 	vmov	s15, r1
  while(currentMCU < (numberMCU + BlockIndex))
90003618:	429a      	cmp	r2, r3
9000361a:	9306      	str	r3, [sp, #24]
9000361c:	f080 8158 	bcs.w	900038d0 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2d4>
  {

    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90003620:	4baf      	ldr	r3, [pc, #700]	; (900038e0 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2e4>)
#elif (JPEG_RGB_FORMAT == JPEG_RGB565)

            ycomp = (int32_t)(*(pLum +j));

            *(__IO uint16_t *)pOutAddr =
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003622:	4cb0      	ldr	r4, [pc, #704]	; (900038e4 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2e8>)
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90003624:	6a5a      	ldr	r2, [r3, #36]	; 0x24
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90003626:	f8df e2c4 	ldr.w	lr, [pc, #708]	; 900038ec <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2f0>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9000362a:	9207      	str	r2, [sp, #28]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9000362c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
9000362e:	691b      	ldr	r3, [r3, #16]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003630:	f8df c2bc 	ldr.w	ip, [pc, #700]	; 900038f0 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2f4>
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003634:	48ac      	ldr	r0, [pc, #688]	; (900038e8 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2ec>)
90003636:	f8df 82bc 	ldr.w	r8, [pc, #700]	; 900038f4 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2f8>
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9000363a:	9203      	str	r2, [sp, #12]
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
9000363c:	9300      	str	r3, [sp, #0]
9000363e:	e007      	b.n	90003650 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x54>

        refline += JPEG_ConvertorParams.ScaledWidth;
      }
    }

    pInBuffer +=  YCBCR_444_BLOCK_SIZE;
90003640:	9b04      	ldr	r3, [sp, #16]
90003642:	33c0      	adds	r3, #192	; 0xc0
90003644:	9304      	str	r3, [sp, #16]
  while(currentMCU < (numberMCU + BlockIndex))
90003646:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
9000364a:	4293      	cmp	r3, r2
9000364c:	f000 8140 	beq.w	900038d0 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2d4>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90003650:	9e05      	ldr	r6, [sp, #20]
90003652:	9f07      	ldr	r7, [sp, #28]
90003654:	00f5      	lsls	r5, r6, #3
90003656:	3601      	adds	r6, #1
90003658:	9904      	ldr	r1, [sp, #16]
9000365a:	9605      	str	r6, [sp, #20]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9000365c:	9e03      	ldr	r6, [sp, #12]
9000365e:	f101 0340 	add.w	r3, r1, #64	; 0x40
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90003662:	fbb5 f2f7 	udiv	r2, r5, r7
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
90003666:	fb07 5512 	mls	r5, r7, r2, r5
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9000366a:	fb06 f202 	mul.w	r2, r6, r2
9000366e:	006d      	lsls	r5, r5, #1
90003670:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
    currentMCU++;
90003674:	2508      	movs	r5, #8
90003676:	9501      	str	r5, [sp, #4]
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90003678:	9d00      	ldr	r5, [sp, #0]
9000367a:	4295      	cmp	r5, r2
9000367c:	d9e0      	bls.n	90003640 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x44>
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
9000367e:	f893 7040 	ldrb.w	r7, [r3, #64]	; 0x40
          pLum += 8;
90003682:	3108      	adds	r1, #8
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003684:	f893 9000 	ldrb.w	r9, [r3]
            pChrom++;
90003688:	3308      	adds	r3, #8
            ycomp = (int32_t)(*(pLum +j));
9000368a:	f811 5c08 	ldrb.w	r5, [r1, #-8]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000368e:	f850 a027 	ldr.w	sl, [r0, r7, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003692:	f85e 6027 	ldr.w	r6, [lr, r7, lsl #2]
90003696:	4425      	add	r5, r4
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003698:	f85c 7029 	ldr.w	r7, [ip, r9, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000369c:	f858 9029 	ldr.w	r9, [r8, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900036a0:	442e      	add	r6, r5
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900036a2:	442f      	add	r7, r5
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900036a4:	44d1      	add	r9, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900036a6:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900036aa:	eb05 4929 	add.w	r9, r5, r9, asr #16
900036ae:	f897 5100 	ldrb.w	r5, [r7, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900036b2:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900036b4:	f899 7100 	ldrb.w	r7, [r9, #256]	; 0x100
900036b8:	08ed      	lsrs	r5, r5, #3
900036ba:	08bf      	lsrs	r7, r7, #2
900036bc:	ea45 26c6 	orr.w	r6, r5, r6, lsl #11
            *(__IO uint16_t *)pOutAddr =
900036c0:	9d02      	ldr	r5, [sp, #8]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900036c2:	ea46 1647 	orr.w	r6, r6, r7, lsl #5
            *(__IO uint16_t *)pOutAddr =
900036c6:	52ae      	strh	r6, [r5, r2]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900036c8:	f893 7039 	ldrb.w	r7, [r3, #57]	; 0x39
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900036cc:	f813 9c07 	ldrb.w	r9, [r3, #-7]
            ycomp = (int32_t)(*(pLum +j));
900036d0:	f811 5c07 	ldrb.w	r5, [r1, #-7]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900036d4:	f850 a027 	ldr.w	sl, [r0, r7, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900036d8:	4425      	add	r5, r4
900036da:	f85e 6027 	ldr.w	r6, [lr, r7, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900036de:	f85c 7029 	ldr.w	r7, [ip, r9, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900036e2:	f858 9029 	ldr.w	r9, [r8, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900036e6:	442e      	add	r6, r5
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900036e8:	442f      	add	r7, r5
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900036ea:	44d1      	add	r9, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900036ec:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900036f0:	eb05 4929 	add.w	r9, r5, r9, asr #16
900036f4:	f897 5100 	ldrb.w	r5, [r7, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900036f8:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900036fa:	f899 7100 	ldrb.w	r7, [r9, #256]	; 0x100
900036fe:	08ed      	lsrs	r5, r5, #3
90003700:	08bf      	lsrs	r7, r7, #2
90003702:	ea45 26c6 	orr.w	r6, r5, r6, lsl #11
        pOutAddr = pOutBuffer+ refline;
90003706:	9d02      	ldr	r5, [sp, #8]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003708:	ea46 1647 	orr.w	r6, r6, r7, lsl #5
        pOutAddr = pOutBuffer+ refline;
9000370c:	4415      	add	r5, r2
            *(__IO uint16_t *)pOutAddr =
9000370e:	806e      	strh	r6, [r5, #2]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90003710:	f893 a03a 	ldrb.w	sl, [r3, #58]	; 0x3a
            ycomp = (int32_t)(*(pLum +j));
90003714:	f811 7c06 	ldrb.w	r7, [r1, #-6]
        refline += JPEG_ConvertorParams.ScaledWidth;
90003718:	9e03      	ldr	r6, [sp, #12]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000371a:	4427      	add	r7, r4
9000371c:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
        refline += JPEG_ConvertorParams.ScaledWidth;
90003720:	4432      	add	r2, r6
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003722:	f813 6c06 	ldrb.w	r6, [r3, #-6]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003726:	44b9      	add	r9, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003728:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000372c:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003730:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003734:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003738:	44ba      	add	sl, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000373a:	ea4f 09d9 	mov.w	r9, r9, lsr #3
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000373e:	445e      	add	r6, fp
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003740:	eb07 4626 	add.w	r6, r7, r6, asr #16
90003744:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
90003748:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
9000374c:	08ff      	lsrs	r7, r7, #3
9000374e:	08b6      	lsrs	r6, r6, #2
90003750:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
90003754:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr =
90003758:	f8a5 9004 	strh.w	r9, [r5, #4]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
9000375c:	f893 a03b 	ldrb.w	sl, [r3, #59]	; 0x3b
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003760:	f813 6c05 	ldrb.w	r6, [r3, #-5]
            ycomp = (int32_t)(*(pLum +j));
90003764:	f811 7c05 	ldrb.w	r7, [r1, #-5]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003768:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000376c:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
90003770:	4427      	add	r7, r4
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003772:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003776:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000377a:	44b9      	add	r9, r7
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000377c:	44ba      	add	sl, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000377e:	445e      	add	r6, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003780:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003784:	eb07 4626 	add.w	r6, r7, r6, asr #16
90003788:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000378c:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003790:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
90003794:	08ff      	lsrs	r7, r7, #3
90003796:	08b6      	lsrs	r6, r6, #2
90003798:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
9000379c:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr =
900037a0:	f8a5 9006 	strh.w	r9, [r5, #6]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900037a4:	f893 a03c 	ldrb.w	sl, [r3, #60]	; 0x3c
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900037a8:	f813 6c04 	ldrb.w	r6, [r3, #-4]
            ycomp = (int32_t)(*(pLum +j));
900037ac:	f811 7c04 	ldrb.w	r7, [r1, #-4]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900037b0:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900037b4:	4427      	add	r7, r4
900037b6:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900037ba:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900037be:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900037c2:	44b9      	add	r9, r7
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900037c4:	44ba      	add	sl, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900037c6:	445e      	add	r6, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900037c8:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900037cc:	eb07 4626 	add.w	r6, r7, r6, asr #16
900037d0:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900037d4:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900037d8:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
900037dc:	08ff      	lsrs	r7, r7, #3
900037de:	08b6      	lsrs	r6, r6, #2
900037e0:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
900037e4:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr =
900037e8:	f8a5 9008 	strh.w	r9, [r5, #8]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900037ec:	f893 a03d 	ldrb.w	sl, [r3, #61]	; 0x3d
            ycomp = (int32_t)(*(pLum +j));
900037f0:	f811 7c03 	ldrb.w	r7, [r1, #-3]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900037f4:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
900037f8:	4427      	add	r7, r4
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900037fa:	f813 6c03 	ldrb.w	r6, [r3, #-3]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900037fe:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003802:	44b9      	add	r9, r7
90003804:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003808:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000380c:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003810:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003814:	44ba      	add	sl, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003816:	445e      	add	r6, fp
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003818:	eb07 4626 	add.w	r6, r7, r6, asr #16
9000381c:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
90003820:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
90003824:	08ff      	lsrs	r7, r7, #3
90003826:	08b6      	lsrs	r6, r6, #2
90003828:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
9000382c:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr =
90003830:	f8a5 900a 	strh.w	r9, [r5, #10]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90003834:	f893 a03e 	ldrb.w	sl, [r3, #62]	; 0x3e
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003838:	f813 6c02 	ldrb.w	r6, [r3, #-2]
            ycomp = (int32_t)(*(pLum +j));
9000383c:	f811 7c02 	ldrb.w	r7, [r1, #-2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003840:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003844:	4427      	add	r7, r4
90003846:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000384a:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000384e:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003852:	44b9      	add	r9, r7
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003854:	44ba      	add	sl, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003856:	445e      	add	r6, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003858:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000385c:	eb07 4626 	add.w	r6, r7, r6, asr #16
90003860:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003864:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003868:	08ff      	lsrs	r7, r7, #3
9000386a:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
9000386e:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
90003872:	08b6      	lsrs	r6, r6, #2
90003874:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr =
90003878:	f8a5 900c 	strh.w	r9, [r5, #12]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
9000387c:	f893 a03f 	ldrb.w	sl, [r3, #63]	; 0x3f
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003880:	f813 6c01 	ldrb.w	r6, [r3, #-1]
            ycomp = (int32_t)(*(pLum +j));
90003884:	f811 7c01 	ldrb.w	r7, [r1, #-1]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003888:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
9000388c:	4427      	add	r7, r4
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000388e:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003892:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003896:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000389a:	44b9      	add	r9, r7
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000389c:	44ba      	add	sl, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000389e:	445e      	add	r6, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900038a0:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900038a4:	eb07 4626 	add.w	r6, r7, r6, asr #16
900038a8:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900038ac:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900038b0:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
900038b4:	08ff      	lsrs	r7, r7, #3
900038b6:	08b6      	lsrs	r6, r6, #2
900038b8:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
900038bc:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr =
900038c0:	f8a5 900e 	strh.w	r9, [r5, #14]
    for(i= 0; i <  8; i++)
900038c4:	9d01      	ldr	r5, [sp, #4]
900038c6:	3d01      	subs	r5, #1
900038c8:	9501      	str	r5, [sp, #4]
900038ca:	f47f aed5 	bne.w	90003678 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x7c>
900038ce:	e6b7      	b.n	90003640 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x44>
  }
  return numberMCU;
}
900038d0:	ee17 0a90 	vmov	r0, s15
900038d4:	b009      	add	sp, #36	; 0x24
900038d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900038da:	bf00      	nop
900038dc:	aaaaaaab 	.word	0xaaaaaaab
900038e0:	2400c37c 	.word	0x2400c37c
900038e4:	9002e5b4 	.word	0x9002e5b4
900038e8:	2400aafc 	.word	0x2400aafc
900038ec:	2400aefc 	.word	0x2400aefc
900038f0:	2400a2fc 	.word	0x2400a2fc
900038f4:	2400a6fc 	.word	0x2400a6fc

900038f8 <JPEG_MCU_Gray_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_Gray_ARGB_ConvertBlocks(uint8_t *pInBuffer,
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
900038f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint8_t *pOutAddr,  *pLum;

  numberMCU = DataCount / GRAY_444_BLOCK_SIZE;
  currentMCU = BlockIndex;

  while(currentMCU < (numberMCU + BlockIndex))
900038fc:	eb02 1a93 	add.w	sl, r2, r3, lsr #6
  numberMCU = DataCount / GRAY_444_BLOCK_SIZE;
90003900:	099c      	lsrs	r4, r3, #6
  while(currentMCU < (numberMCU + BlockIndex))
90003902:	4552      	cmp	r2, sl
  numberMCU = DataCount / GRAY_444_BLOCK_SIZE;
90003904:	ee07 4a90 	vmov	s15, r4
  while(currentMCU < (numberMCU + BlockIndex))
90003908:	f080 8088 	bcs.w	90003a1c <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x124>
  {
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9000390c:	4b45      	ldr	r3, [pc, #276]	; (90003a24 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x12c>)

    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);

    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9000390e:	e9d3 9809 	ldrd	r9, r8, [r3, #36]	; 0x24
    pLum = pInBuffer;

    for(i= 0; i <  8; i++)
    {
      pOutAddr = pOutBuffer + refline;
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90003912:	691e      	ldr	r6, [r3, #16]
90003914:	e003      	b.n	9000391e <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x26>
  while(currentMCU < (numberMCU + BlockIndex))
90003916:	4552      	cmp	r2, sl

        refline += JPEG_ConvertorParams.ScaledWidth;
      }
    }

    pInBuffer +=  GRAY_444_BLOCK_SIZE;
90003918:	f100 0040 	add.w	r0, r0, #64	; 0x40
  while(currentMCU < (numberMCU + BlockIndex))
9000391c:	d07e      	beq.n	90003a1c <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x124>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9000391e:	00d5      	lsls	r5, r2, #3
    currentMCU++;
90003920:	4604      	mov	r4, r0
90003922:	f04f 0e08 	mov.w	lr, #8
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90003926:	3201      	adds	r2, #1
90003928:	fbb5 f7f9 	udiv	r7, r5, r9
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
9000392c:	fb09 5317 	mls	r3, r9, r7, r5
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90003930:	fb08 f707 	mul.w	r7, r8, r7
90003934:	005b      	lsls	r3, r3, #1
90003936:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
9000393a:	429e      	cmp	r6, r3
9000393c:	d9eb      	bls.n	90003916 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x1e>
          ySample =   (uint32_t)(*pLum);
9000393e:	f894 c000 	ldrb.w	ip, [r4]
      pOutAddr = pOutBuffer + refline;
90003942:	18cd      	adds	r5, r1, r3
          pLum++;
90003944:	3408      	adds	r4, #8
    for(i= 0; i <  8; i++)
90003946:	f1be 0e01 	subs.w	lr, lr, #1
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
9000394a:	ea4f 07dc 	mov.w	r7, ip, lsr #3
9000394e:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90003952:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
90003956:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
9000395a:	ea47 070c 	orr.w	r7, r7, ip
9000395e:	52cf      	strh	r7, [r1, r3]
        refline += JPEG_ConvertorParams.ScaledWidth;
90003960:	4443      	add	r3, r8
          ySample =   (uint32_t)(*pLum);
90003962:	f814 cc07 	ldrb.w	ip, [r4, #-7]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
90003966:	ea4f 07dc 	mov.w	r7, ip, lsr #3
9000396a:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
9000396e:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
90003972:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
90003976:	ea47 070c 	orr.w	r7, r7, ip
9000397a:	806f      	strh	r7, [r5, #2]
          ySample =   (uint32_t)(*pLum);
9000397c:	f814 cc06 	ldrb.w	ip, [r4, #-6]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
90003980:	ea4f 07dc 	mov.w	r7, ip, lsr #3
90003984:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90003988:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
9000398c:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
90003990:	ea47 070c 	orr.w	r7, r7, ip
90003994:	80af      	strh	r7, [r5, #4]
          ySample =   (uint32_t)(*pLum);
90003996:	f814 cc05 	ldrb.w	ip, [r4, #-5]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
9000399a:	ea4f 07dc 	mov.w	r7, ip, lsr #3
9000399e:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900039a2:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
900039a6:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
900039aa:	ea47 070c 	orr.w	r7, r7, ip
900039ae:	80ef      	strh	r7, [r5, #6]
          ySample =   (uint32_t)(*pLum);
900039b0:	f814 cc04 	ldrb.w	ip, [r4, #-4]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
900039b4:	ea4f 07dc 	mov.w	r7, ip, lsr #3
900039b8:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900039bc:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
900039c0:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
900039c4:	ea47 070c 	orr.w	r7, r7, ip
900039c8:	812f      	strh	r7, [r5, #8]
          ySample =   (uint32_t)(*pLum);
900039ca:	f814 cc03 	ldrb.w	ip, [r4, #-3]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
900039ce:	ea4f 07dc 	mov.w	r7, ip, lsr #3
900039d2:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900039d6:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
900039da:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
900039de:	ea47 070c 	orr.w	r7, r7, ip
900039e2:	816f      	strh	r7, [r5, #10]
          ySample =   (uint32_t)(*pLum);
900039e4:	f814 cc02 	ldrb.w	ip, [r4, #-2]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
900039e8:	ea4f 07dc 	mov.w	r7, ip, lsr #3
900039ec:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900039f0:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
900039f4:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
900039f8:	ea47 070c 	orr.w	r7, r7, ip
900039fc:	81af      	strh	r7, [r5, #12]
          ySample =   (uint32_t)(*pLum);
900039fe:	f814 cc01 	ldrb.w	ip, [r4, #-1]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
90003a02:	ea4f 07dc 	mov.w	r7, ip, lsr #3
90003a06:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90003a0a:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
90003a0e:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
90003a12:	ea47 070c 	orr.w	r7, r7, ip
90003a16:	81ef      	strh	r7, [r5, #14]
    for(i= 0; i <  8; i++)
90003a18:	d18f      	bne.n	9000393a <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x42>
90003a1a:	e77c      	b.n	90003916 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x1e>
  }
  return numberMCU;
}
90003a1c:	ee17 0a90 	vmov	r0, s15
90003a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90003a24:	2400c37c 	.word	0x2400c37c

90003a28 <JPEG_MCU_YCCK_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCCK_ARGB_ConvertBlocks(uint8_t *pInBuffer,
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
90003a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  int32_t c_red, c_blue, c_green;

  uint8_t *pOutAddr, *pChrom;

  numberMCU = DataCount / CMYK_444_BLOCK_SIZE;
90003a2c:	0a1c      	lsrs	r4, r3, #8
{
90003a2e:	b083      	sub	sp, #12
  currentMCU = BlockIndex;

  while(currentMCU < (numberMCU + BlockIndex))
90003a30:	eb02 2313 	add.w	r3, r2, r3, lsr #8
  numberMCU = DataCount / CMYK_444_BLOCK_SIZE;
90003a34:	ee07 4a90 	vmov	s15, r4
  while(currentMCU < (numberMCU + BlockIndex))
90003a38:	429a      	cmp	r2, r3
90003a3a:	9301      	str	r3, [sp, #4]
90003a3c:	f080 8128 	bcs.w	90003c90 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x268>
  {

    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90003a40:	4b96      	ldr	r3, [pc, #600]	; (90003c9c <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x274>)
        pOutAddr = pOutBuffer+ refline;

          for(j=0; j < 8; j++)
          {
            color_k = (int32_t)(*(pChrom + 192));
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003a42:	f8df c25c 	ldr.w	ip, [pc, #604]	; 90003ca0 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x278>
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90003a46:	691f      	ldr	r7, [r3, #16]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90003a48:	e9d3 a909 	ldrd	sl, r9, [r3, #36]	; 0x24
90003a4c:	e006      	b.n	90003a5c <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x34>

        refline += JPEG_ConvertorParams.ScaledWidth;
      }
    }

    pInBuffer +=  CMYK_444_BLOCK_SIZE;
90003a4e:	9a00      	ldr	r2, [sp, #0]
90003a50:	f500 7080 	add.w	r0, r0, #256	; 0x100
  while(currentMCU < (numberMCU + BlockIndex))
90003a54:	9b01      	ldr	r3, [sp, #4]
90003a56:	429a      	cmp	r2, r3
90003a58:	f000 811a 	beq.w	90003c90 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x268>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90003a5c:	00d3      	lsls	r3, r2, #3
    currentMCU++;
90003a5e:	f04f 0808 	mov.w	r8, #8
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90003a62:	3201      	adds	r2, #1
90003a64:	fbb3 f4fa 	udiv	r4, r3, sl
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
90003a68:	fb0a 3514 	mls	r5, sl, r4, r3
    currentMCU++;
90003a6c:	4603      	mov	r3, r0
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90003a6e:	fb09 f404 	mul.w	r4, r9, r4
90003a72:	006d      	lsls	r5, r5, #1
    currentMCU++;
90003a74:	9200      	str	r2, [sp, #0]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90003a76:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90003a7a:	42af      	cmp	r7, r5
90003a7c:	d9e7      	bls.n	90003a4e <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x26>
            color_k = (int32_t)(*(pChrom + 192));
90003a7e:	f893 b0c0 	ldrb.w	fp, [r3, #192]	; 0xc0
        pOutAddr = pOutBuffer+ refline;
90003a82:	194e      	adds	r6, r1, r5
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003a84:	f893 e040 	ldrb.w	lr, [r3, #64]	; 0x40
    for(i= 0; i <  8; i++)
90003a88:	f1b8 0801 	subs.w	r8, r8, #1
            pChrom++;
90003a8c:	f103 0308 	add.w	r3, r3, #8
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003a90:	fb1e fe0b 	smulbb	lr, lr, fp
90003a94:	fbac 4e0e 	umull	r4, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003a98:	f813 4c08 	ldrb.w	r4, [r3, #-8]
90003a9c:	fb14 f40b 	smulbb	r4, r4, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003aa0:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003aa4:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003aa8:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003aac:	ea4f 2494 	mov.w	r4, r4, lsr #10
90003ab0:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90003ab4:	f893 e078 	ldrb.w	lr, [r3, #120]	; 0x78
90003ab8:	fb1e fb0b 	smulbb	fp, lr, fp
90003abc:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003ac0:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90003ac4:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr =
90003ac6:	534c      	strh	r4, [r1, r5]
        refline += JPEG_ConvertorParams.ScaledWidth;
90003ac8:	444d      	add	r5, r9
            color_k = (int32_t)(*(pChrom + 192));
90003aca:	f893 b0b9 	ldrb.w	fp, [r3, #185]	; 0xb9
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003ace:	f893 e039 	ldrb.w	lr, [r3, #57]	; 0x39
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003ad2:	f813 4c07 	ldrb.w	r4, [r3, #-7]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003ad6:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003ada:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003ade:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003ae2:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003ae6:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003aea:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003aee:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003af2:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90003af6:	f893 e079 	ldrb.w	lr, [r3, #121]	; 0x79
90003afa:	fb1e fb0b 	smulbb	fp, lr, fp
90003afe:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003b02:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90003b06:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr =
90003b08:	8074      	strh	r4, [r6, #2]
            color_k = (int32_t)(*(pChrom + 192));
90003b0a:	f893 b0ba 	ldrb.w	fp, [r3, #186]	; 0xba
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003b0e:	f893 e03a 	ldrb.w	lr, [r3, #58]	; 0x3a
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003b12:	f813 4c06 	ldrb.w	r4, [r3, #-6]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003b16:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003b1a:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003b1e:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003b22:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003b26:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003b2a:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003b2e:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003b32:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90003b36:	f893 e07a 	ldrb.w	lr, [r3, #122]	; 0x7a
90003b3a:	fb1e fb0b 	smulbb	fp, lr, fp
90003b3e:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003b42:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90003b46:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr =
90003b48:	80b4      	strh	r4, [r6, #4]
            color_k = (int32_t)(*(pChrom + 192));
90003b4a:	f893 b0bb 	ldrb.w	fp, [r3, #187]	; 0xbb
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003b4e:	f893 e03b 	ldrb.w	lr, [r3, #59]	; 0x3b
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003b52:	f813 4c05 	ldrb.w	r4, [r3, #-5]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003b56:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003b5a:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003b5e:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003b62:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003b66:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003b6a:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003b6e:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003b72:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90003b76:	f893 e07b 	ldrb.w	lr, [r3, #123]	; 0x7b
90003b7a:	fb1e fb0b 	smulbb	fp, lr, fp
90003b7e:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003b82:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90003b86:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr =
90003b88:	80f4      	strh	r4, [r6, #6]
            color_k = (int32_t)(*(pChrom + 192));
90003b8a:	f893 b0bc 	ldrb.w	fp, [r3, #188]	; 0xbc
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003b8e:	f893 e03c 	ldrb.w	lr, [r3, #60]	; 0x3c
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003b92:	f813 4c04 	ldrb.w	r4, [r3, #-4]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003b96:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003b9a:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003b9e:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003ba2:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003ba6:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003baa:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003bae:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003bb2:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90003bb6:	f893 e07c 	ldrb.w	lr, [r3, #124]	; 0x7c
90003bba:	fb1e fb0b 	smulbb	fp, lr, fp
90003bbe:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003bc2:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90003bc6:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr =
90003bc8:	8134      	strh	r4, [r6, #8]
            color_k = (int32_t)(*(pChrom + 192));
90003bca:	f893 b0bd 	ldrb.w	fp, [r3, #189]	; 0xbd
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003bce:	f893 e03d 	ldrb.w	lr, [r3, #61]	; 0x3d
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003bd2:	f813 4c03 	ldrb.w	r4, [r3, #-3]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003bd6:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003bda:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003bde:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003be2:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003be6:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003bea:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003bee:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003bf2:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90003bf6:	f893 e07d 	ldrb.w	lr, [r3, #125]	; 0x7d
90003bfa:	fb1e fb0b 	smulbb	fp, lr, fp
90003bfe:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003c02:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90003c06:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr =
90003c08:	8174      	strh	r4, [r6, #10]
            color_k = (int32_t)(*(pChrom + 192));
90003c0a:	f893 b0be 	ldrb.w	fp, [r3, #190]	; 0xbe
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003c0e:	f813 ec02 	ldrb.w	lr, [r3, #-2]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003c12:	f893 403e 	ldrb.w	r4, [r3, #62]	; 0x3e
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003c16:	fb1e fe0b 	smulbb	lr, lr, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003c1a:	fb14 f40b 	smulbb	r4, r4, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003c1e:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003c22:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003c26:	ea4f 2e9e 	mov.w	lr, lr, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003c2a:	ea4f 2454 	mov.w	r4, r4, lsr #9
90003c2e:	ea4f 1444 	mov.w	r4, r4, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003c32:	ea44 24ce 	orr.w	r4, r4, lr, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90003c36:	f893 e07e 	ldrb.w	lr, [r3, #126]	; 0x7e
90003c3a:	fb1e fb0b 	smulbb	fp, lr, fp
90003c3e:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003c42:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90003c46:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr =
90003c48:	81b4      	strh	r4, [r6, #12]
            color_k = (int32_t)(*(pChrom + 192));
90003c4a:	f893 b0bf 	ldrb.w	fp, [r3, #191]	; 0xbf
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003c4e:	f893 e03f 	ldrb.w	lr, [r3, #63]	; 0x3f
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003c52:	f813 4c01 	ldrb.w	r4, [r3, #-1]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003c56:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003c5a:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90003c5e:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90003c62:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003c66:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003c6a:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003c6e:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90003c72:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90003c76:	f893 e07f 	ldrb.w	lr, [r3, #127]	; 0x7f
90003c7a:	fb1e fb0b 	smulbb	fp, lr, fp
90003c7e:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90003c82:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90003c86:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr =
90003c88:	81f4      	strh	r4, [r6, #14]
    for(i= 0; i <  8; i++)
90003c8a:	f47f aef6 	bne.w	90003a7a <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x52>
90003c8e:	e6de      	b.n	90003a4e <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x26>
  }
  return numberMCU;
}
90003c90:	ee17 0a90 	vmov	r0, s15
90003c94:	b003      	add	sp, #12
90003c96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90003c9a:	bf00      	nop
90003c9c:	2400c37c 	.word	0x2400c37c
90003ca0:	80808081 	.word	0x80808081

90003ca4 <TGFX_JPEG_GetDecodeColorConvertFunc>:
  *                      depending of the jpeg image color space and chroma sampling info.
  * @param ImageNbMCUs : pointer to uint32_t, used to retrive the total number of MCU blocks in the jpeg image.
  * @retval HAL status : HAL_OK or HAL_ERROR.
  */
HAL_StatusTypeDef TGFX_JPEG_GetDecodeColorConvertFunc(JPEG_ConfTypeDef *pJpegInfo, JPEG_YCbCrToRGB_Convert_Function *pFunction, uint32_t *ImageNbMCUs)
{
90003ca4:	b4f0      	push	{r4, r5, r6, r7}
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
  JPEG_ConvertorParams.ImageHeight = pJpegInfo->ImageHeight;
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;

  JPEG_ConvertorParams.ChromaSubsampling = pJpegInfo->ChromaSubsampling;
90003ca6:	e9d0 7601 	ldrd	r7, r6, [r0, #4]
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
90003caa:	68c5      	ldr	r5, [r0, #12]
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
90003cac:	6804      	ldr	r4, [r0, #0]
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
90003cae:	fb06 f005 	mul.w	r0, r6, r5
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
90003cb2:	4b31      	ldr	r3, [pc, #196]	; (90003d78 <TGFX_JPEG_GetDecodeColorConvertFunc+0xd4>)
  if(JPEG_ConvertorParams.ColorSpace == JPEG_YCBCR_COLORSPACE)
90003cb4:	2c10      	cmp	r4, #16
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
90003cb6:	ea4f 0040 	mov.w	r0, r0, lsl #1
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
90003cba:	609d      	str	r5, [r3, #8]
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
90003cbc:	601c      	str	r4, [r3, #0]
  JPEG_ConvertorParams.ImageHeight = pJpegInfo->ImageHeight;
90003cbe:	60de      	str	r6, [r3, #12]
  JPEG_ConvertorParams.ChromaSubsampling = pJpegInfo->ChromaSubsampling;
90003cc0:	605f      	str	r7, [r3, #4]
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
90003cc2:	6118      	str	r0, [r3, #16]
  if(JPEG_ConvertorParams.ColorSpace == JPEG_YCBCR_COLORSPACE)
90003cc4:	d02b      	beq.n	90003d1e <TGFX_JPEG_GetDecodeColorConvertFunc+0x7a>
      }
      JPEG_ConvertorParams.H_factor = 8;
      JPEG_ConvertorParams.V_factor  = 8;
    }
  }
  else if(JPEG_ConvertorParams.ColorSpace == JPEG_GRAYSCALE_COLORSPACE)
90003cc6:	b9fc      	cbnz	r4, 90003d08 <TGFX_JPEG_GetDecodeColorConvertFunc+0x64>
  {
    *pFunction =  JPEG_MCU_Gray_ARGB_ConvertBlocks;
90003cc8:	482c      	ldr	r0, [pc, #176]	; (90003d7c <TGFX_JPEG_GetDecodeColorConvertFunc+0xd8>)
90003cca:	6008      	str	r0, [r1, #0]

    JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 8;

    if(JPEG_ConvertorParams.LineOffset != 0)
90003ccc:	f015 0007 	ands.w	r0, r5, #7
90003cd0:	d121      	bne.n	90003d16 <TGFX_JPEG_GetDecodeColorConvertFunc+0x72>
  }
  else if(JPEG_ConvertorParams.ColorSpace == JPEG_CMYK_COLORSPACE)
  {
    *pFunction =  JPEG_MCU_YCCK_ARGB_ConvertBlocks;

    JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 8;
90003cd2:	4607      	mov	r7, r0
90003cd4:	6158      	str	r0, [r3, #20]

    if(JPEG_ConvertorParams.LineOffset != 0)
    {
      JPEG_ConvertorParams.LineOffset = 8 - JPEG_ConvertorParams.LineOffset;
    }
    JPEG_ConvertorParams.H_factor = 8;
90003cd6:	2108      	movs	r1, #8
90003cd8:	460c      	mov	r4, r1
    JPEG_ConvertorParams.V_factor  = 8;
90003cda:	e9c3 1107 	strd	r1, r1, [r3, #28]
  else
  {
    return HAL_ERROR; /* Color space Not supported*/
  }

  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
90003cde:	442f      	add	r7, r5
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;

  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90003ce0:	fbb5 f4f4 	udiv	r4, r5, r4
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90003ce4:	006d      	lsls	r5, r5, #1
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
90003ce6:	625f      	str	r7, [r3, #36]	; 0x24
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90003ce8:	629d      	str	r5, [r3, #40]	; 0x28
  if((JPEG_ConvertorParams.ImageWidth % JPEG_ConvertorParams.H_factor) != 0)
90003cea:	b100      	cbz	r0, 90003cee <TGFX_JPEG_GetDecodeColorConvertFunc+0x4a>
  {
    hMCU++; /*+1 for horizenatl incomplete MCU */
90003cec:	3401      	adds	r4, #1
  }

  vMCU = (JPEG_ConvertorParams.ImageHeight / JPEG_ConvertorParams.V_factor);
90003cee:	fbb6 f0f1 	udiv	r0, r6, r1
  if((JPEG_ConvertorParams.ImageHeight % JPEG_ConvertorParams.V_factor) != 0)
90003cf2:	fb01 6110 	mls	r1, r1, r0, r6
90003cf6:	b101      	cbz	r1, 90003cfa <TGFX_JPEG_GetDecodeColorConvertFunc+0x56>
  {
    vMCU++; /*+1 for vertical incomplete MCU */
90003cf8:	3001      	adds	r0, #1
  }
  JPEG_ConvertorParams.MCU_Total_Nb = (hMCU * vMCU);
90003cfa:	fb00 f404 	mul.w	r4, r0, r4
  *ImageNbMCUs = JPEG_ConvertorParams.MCU_Total_Nb;

  return HAL_OK;
90003cfe:	2000      	movs	r0, #0
  JPEG_ConvertorParams.MCU_Total_Nb = (hMCU * vMCU);
90003d00:	62dc      	str	r4, [r3, #44]	; 0x2c
  *ImageNbMCUs = JPEG_ConvertorParams.MCU_Total_Nb;
90003d02:	6014      	str	r4, [r2, #0]
}
90003d04:	bcf0      	pop	{r4, r5, r6, r7}
90003d06:	4770      	bx	lr
  else if(JPEG_ConvertorParams.ColorSpace == JPEG_CMYK_COLORSPACE)
90003d08:	2c30      	cmp	r4, #48	; 0x30
90003d0a:	d112      	bne.n	90003d32 <TGFX_JPEG_GetDecodeColorConvertFunc+0x8e>
    *pFunction =  JPEG_MCU_YCCK_ARGB_ConvertBlocks;
90003d0c:	481c      	ldr	r0, [pc, #112]	; (90003d80 <TGFX_JPEG_GetDecodeColorConvertFunc+0xdc>)
90003d0e:	6008      	str	r0, [r1, #0]
    if(JPEG_ConvertorParams.LineOffset != 0)
90003d10:	f015 0007 	ands.w	r0, r5, #7
90003d14:	d0dd      	beq.n	90003cd2 <TGFX_JPEG_GetDecodeColorConvertFunc+0x2e>
      JPEG_ConvertorParams.LineOffset = 8 - JPEG_ConvertorParams.LineOffset;
90003d16:	f1c0 0708 	rsb	r7, r0, #8
90003d1a:	615f      	str	r7, [r3, #20]
90003d1c:	e7db      	b.n	90003cd6 <TGFX_JPEG_GetDecodeColorConvertFunc+0x32>
    if(JPEG_ConvertorParams.ChromaSubsampling == JPEG_420_SUBSAMPLING)
90003d1e:	2f01      	cmp	r7, #1
90003d20:	d017      	beq.n	90003d52 <TGFX_JPEG_GetDecodeColorConvertFunc+0xae>
    else if(JPEG_ConvertorParams.ChromaSubsampling == JPEG_422_SUBSAMPLING)
90003d22:	2f02      	cmp	r7, #2
90003d24:	d008      	beq.n	90003d38 <TGFX_JPEG_GetDecodeColorConvertFunc+0x94>
      *pFunction =  JPEG_MCU_YCbCr444_ARGB_ConvertBlocks;
90003d26:	4817      	ldr	r0, [pc, #92]	; (90003d84 <TGFX_JPEG_GetDecodeColorConvertFunc+0xe0>)
90003d28:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
90003d2a:	f015 0007 	ands.w	r0, r5, #7
90003d2e:	d1f2      	bne.n	90003d16 <TGFX_JPEG_GetDecodeColorConvertFunc+0x72>
90003d30:	e7cf      	b.n	90003cd2 <TGFX_JPEG_GetDecodeColorConvertFunc+0x2e>
    return HAL_ERROR; /* Color space Not supported*/
90003d32:	2001      	movs	r0, #1
}
90003d34:	bcf0      	pop	{r4, r5, r6, r7}
90003d36:	4770      	bx	lr
      *pFunction =  JPEG_MCU_YCbCr422_ARGB_ConvertBlocks;
90003d38:	4813      	ldr	r0, [pc, #76]	; (90003d88 <TGFX_JPEG_GetDecodeColorConvertFunc+0xe4>)
90003d3a:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
90003d3c:	f015 000f 	ands.w	r0, r5, #15
90003d40:	d116      	bne.n	90003d70 <TGFX_JPEG_GetDecodeColorConvertFunc+0xcc>
      JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 16;
90003d42:	4607      	mov	r7, r0
90003d44:	6158      	str	r0, [r3, #20]
      JPEG_ConvertorParams.H_factor = 16;
90003d46:	f04f 0c10 	mov.w	ip, #16
90003d4a:	2108      	movs	r1, #8
90003d4c:	e9c3 c107 	strd	ip, r1, [r3, #28]
      JPEG_ConvertorParams.V_factor  = 8;
90003d50:	e7c5      	b.n	90003cde <TGFX_JPEG_GetDecodeColorConvertFunc+0x3a>
      *pFunction = TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks;
90003d52:	480e      	ldr	r0, [pc, #56]	; (90003d8c <TGFX_JPEG_GetDecodeColorConvertFunc+0xe8>)
90003d54:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
90003d56:	f015 000f 	ands.w	r0, r5, #15
90003d5a:	d105      	bne.n	90003d68 <TGFX_JPEG_GetDecodeColorConvertFunc+0xc4>
      JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 16;
90003d5c:	4607      	mov	r7, r0
90003d5e:	6158      	str	r0, [r3, #20]
      JPEG_ConvertorParams.H_factor = 16;
90003d60:	2110      	movs	r1, #16
      JPEG_ConvertorParams.V_factor  = 16;
90003d62:	e9c3 1107 	strd	r1, r1, [r3, #28]
90003d66:	e7ba      	b.n	90003cde <TGFX_JPEG_GetDecodeColorConvertFunc+0x3a>
        JPEG_ConvertorParams.LineOffset = 16 - JPEG_ConvertorParams.LineOffset;
90003d68:	f1c0 0710 	rsb	r7, r0, #16
90003d6c:	615f      	str	r7, [r3, #20]
90003d6e:	e7f7      	b.n	90003d60 <TGFX_JPEG_GetDecodeColorConvertFunc+0xbc>
        JPEG_ConvertorParams.LineOffset = 16 - JPEG_ConvertorParams.LineOffset;
90003d70:	f1c0 0710 	rsb	r7, r0, #16
90003d74:	615f      	str	r7, [r3, #20]
90003d76:	e7e6      	b.n	90003d46 <TGFX_JPEG_GetDecodeColorConvertFunc+0xa2>
90003d78:	2400c37c 	.word	0x2400c37c
90003d7c:	900038f9 	.word	0x900038f9
90003d80:	90003a29 	.word	0x90003a29
90003d84:	900035fd 	.word	0x900035fd
90003d88:	90003329 	.word	0x90003329
90003d8c:	9000310d 	.word	0x9000310d

90003d90 <TGFX_JPEG_InitColorTables>:
  * @brief  Initializes the colors conversion Look Up Tables
  * @param  None
  * @retval None
  */
void TGFX_JPEG_InitColorTables(void)
{
90003d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003d94:	f8df c12c 	ldr.w	ip, [pc, #300]	; 90003ec4 <TGFX_JPEG_InitColorTables+0x134>
90003d98:	b08b      	sub	sp, #44	; 0x2c
90003d9a:	f8df 812c 	ldr.w	r8, [pc, #300]	; 90003ec8 <TGFX_JPEG_InitColorTables+0x138>
90003d9e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
90003da2:	f8df e128 	ldr.w	lr, [pc, #296]	; 90003ecc <TGFX_JPEG_InitColorTables+0x13c>
  */
void TGFX_JPEG_InitPreProcColorTables(void)
{
  int32_t i;

  for (i = 0; i <= 255; i++)
90003da6:	2300      	movs	r3, #0
90003da8:	4f3d      	ldr	r7, [pc, #244]	; (90003ea0 <TGFX_JPEG_InitColorTables+0x110>)
    GREEN_CB_LUT[i]        = (((-((int32_t) ((0.3313 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;

    /* BLUE_CB_LUT and RED_CR_LUT are identical */
    BLUE_CB_RED_CR_LUT[i]  = ((  ((int32_t) ((0.5 )    * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;

    GREEN_CR_LUT[i]        = (((-((int32_t) ((0.4187 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003daa:	f64e 3b2f 	movw	fp, #60207	; 0xeb2f
90003dae:	4e3d      	ldr	r6, [pc, #244]	; (90003ea4 <TGFX_JPEG_InitColorTables+0x114>)
    BLUE_CR_LUT[i]         = (((-((int32_t) ((0.0813 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003db0:	f249 4ad0 	movw	sl, #38096	; 0x94d0
90003db4:	4d3c      	ldr	r5, [pc, #240]	; (90003ea8 <TGFX_JPEG_InitColorTables+0x118>)
  for (i = 0; i <= 255; i++)
90003db6:	f644 498b 	movw	r9, #19595	; 0x4c8b
90003dba:	4c3c      	ldr	r4, [pc, #240]	; (90003eac <TGFX_JPEG_InitColorTables+0x11c>)
90003dbc:	483c      	ldr	r0, [pc, #240]	; (90003eb0 <TGFX_JPEG_InitColorTables+0x120>)
    GREEN_Y_LUT[i]         = ((  ((int32_t) ((0.587 )  * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003dbe:	f249 6245 	movw	r2, #38469	; 0x9645
90003dc2:	fb02 f203 	mul.w	r2, r2, r3
90003dc6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90003dca:	1412      	asrs	r2, r2, #16
90003dcc:	f84e 2f04 	str.w	r2, [lr, #4]!
    BLUE_Y_LUT[i]          = ((  ((int32_t) ((0.114 )  * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003dd0:	f641 522f 	movw	r2, #7471	; 0x1d2f
90003dd4:	fb02 f203 	mul.w	r2, r2, r3
90003dd8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90003ddc:	1412      	asrs	r2, r2, #16
90003dde:	f84c 2f04 	str.w	r2, [ip, #4]!
    RED_CB_LUT[i]          = (((-((int32_t) ((0.1687 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003de2:	4a34      	ldr	r2, [pc, #208]	; (90003eb4 <TGFX_JPEG_InitColorTables+0x124>)
90003de4:	fb02 f203 	mul.w	r2, r2, r3
90003de8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90003dec:	1412      	asrs	r2, r2, #16
90003dee:	f847 2f04 	str.w	r2, [r7, #4]!
    GREEN_CB_LUT[i]        = (((-((int32_t) ((0.3313 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003df2:	4a31      	ldr	r2, [pc, #196]	; (90003eb8 <TGFX_JPEG_InitColorTables+0x128>)
90003df4:	fb02 f203 	mul.w	r2, r2, r3
    BLUE_CB_RED_CR_LUT[i]  = ((  ((int32_t) ((0.5 )    * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003df8:	3301      	adds	r3, #1
    GREEN_CB_LUT[i]        = (((-((int32_t) ((0.3313 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003dfa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
  for (i = 0; i <= 255; i++)
90003dfe:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
    GREEN_CB_LUT[i]        = (((-((int32_t) ((0.3313 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003e02:	ea4f 4222 	mov.w	r2, r2, asr #16
90003e06:	f846 2f04 	str.w	r2, [r6, #4]!
    GREEN_CR_LUT[i]        = (((-((int32_t) ((0.4187 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003e0a:	4a2c      	ldr	r2, [pc, #176]	; (90003ebc <TGFX_JPEG_InitColorTables+0x12c>)
90003e0c:	fb02 b203 	mla	r2, r2, r3, fp
90003e10:	ea4f 4222 	mov.w	r2, r2, asr #16
90003e14:	f844 2f04 	str.w	r2, [r4, #4]!
    BLUE_CR_LUT[i]         = (((-((int32_t) ((0.0813 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003e18:	4a29      	ldr	r2, [pc, #164]	; (90003ec0 <TGFX_JPEG_InitColorTables+0x130>)
90003e1a:	fb02 a203 	mla	r2, r2, r3, sl
90003e1e:	ea4f 4222 	mov.w	r2, r2, asr #16
90003e22:	f840 2f04 	str.w	r2, [r0, #4]!
    RED_Y_LUT[i]           = ((  ((int32_t) ((0.299 )  * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003e26:	ea4f 4221 	mov.w	r2, r1, asr #16
  for (i = 0; i <= 255; i++)
90003e2a:	4449      	add	r1, r9
    RED_Y_LUT[i]           = ((  ((int32_t) ((0.299 )  * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003e2c:	f848 2f04 	str.w	r2, [r8, #4]!
    BLUE_CB_RED_CR_LUT[i]  = ((  ((int32_t) ((0.5 )    * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90003e30:	f343 024f 	sbfx	r2, r3, #1, #16
90003e34:	f845 2f04 	str.w	r2, [r5, #4]!
  for (i = 0; i <= 255; i++)
90003e38:	d1c1      	bne.n	90003dbe <TGFX_JPEG_InitColorTables+0x2e>
90003e3a:	f8df e094 	ldr.w	lr, [pc, #148]	; 90003ed0 <TGFX_JPEG_InitColorTables+0x140>
90003e3e:	2138      	movs	r1, #56	; 0x38
void TGFX_JPEG_Init_MCU_LUT(void)
{
  uint32_t i, j, offset;

  /*Y LUT */
  for(i = 0; i < 16; i++)
90003e40:	f04f 0c00 	mov.w	ip, #0
90003e44:	e007      	b.n	90003e56 <TGFX_JPEG_InitColorTables+0xc6>
90003e46:	f10c 0c01 	add.w	ip, ip, #1
90003e4a:	f10e 0e20 	add.w	lr, lr, #32
90003e4e:	4641      	mov	r1, r8
90003e50:	f1bc 0f10 	cmp.w	ip, #16
90003e54:	d03e      	beq.n	90003ed4 <TGFX_JPEG_InitColorTables+0x144>
  {
    for(j = 0; j < 16; j++)
    {
      offset =  j + (i*8);
      if((j>=8) && (i>=8)) offset+= 120;
90003e56:	f1bc 0f07 	cmp.w	ip, #7
90003e5a:	f101 0808 	add.w	r8, r1, #8
90003e5e:	4672      	mov	r2, lr
90003e60:	f04f 0001 	mov.w	r0, #1
90003e64:	bf94      	ite	ls
90003e66:	2600      	movls	r6, #0
90003e68:	2601      	movhi	r6, #1
90003e6a:	fa1f f388 	uxth.w	r3, r8
90003e6e:	2400      	movs	r4, #0
90003e70:	2c07      	cmp	r4, #7
90003e72:	f1a1 0538 	sub.w	r5, r1, #56	; 0x38
90003e76:	bf94      	ite	ls
90003e78:	2700      	movls	r7, #0
90003e7a:	2701      	movhi	r7, #1
90003e7c:	2f00      	cmp	r7, #0
90003e7e:	f000 8356 	beq.w	9000452e <TGFX_JPEG_InitColorTables+0x79e>
90003e82:	2e00      	cmp	r6, #0
90003e84:	f000 8353 	beq.w	9000452e <TGFX_JPEG_InitColorTables+0x79e>
90003e88:	f101 0540 	add.w	r5, r1, #64	; 0x40
    for(j = 0; j < 16; j++)
90003e8c:	2810      	cmp	r0, #16
      else  if((j>=8) && (i<8)) offset+= 56;
      else  if((j<8) && (i>=8)) offset+= 64;

      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90003e8e:	8015      	strh	r5, [r2, #0]
    for(j = 0; j < 16; j++)
90003e90:	d0d9      	beq.n	90003e46 <TGFX_JPEG_InitColorTables+0xb6>
90003e92:	3301      	adds	r3, #1
90003e94:	3401      	adds	r4, #1
90003e96:	3001      	adds	r0, #1
90003e98:	3202      	adds	r2, #2
90003e9a:	b29b      	uxth	r3, r3
90003e9c:	3101      	adds	r1, #1
90003e9e:	e7e7      	b.n	90003e70 <TGFX_JPEG_InitColorTables+0xe0>
90003ea0:	2400cf38 	.word	0x2400cf38
90003ea4:	2400b2f8 	.word	0x2400b2f8
90003ea8:	240096f8 	.word	0x240096f8
90003eac:	2400b6f8 	.word	0x2400b6f8
90003eb0:	24009af8 	.word	0x24009af8
90003eb4:	ffffd4d1 	.word	0xffffd4d1
90003eb8:	ffffab30 	.word	0xffffab30
90003ebc:	ffff94d1 	.word	0xffff94d1
90003ec0:	ffffeb30 	.word	0xffffeb30
90003ec4:	24009ef8 	.word	0x24009ef8
90003ec8:	2400d338 	.word	0x2400d338
90003ecc:	2400baf8 	.word	0x2400baf8
90003ed0:	2400cd3c 	.word	0x2400cd3c
    }
  }

  /*Cb Cr K LUT*/
  for(i = 0; i < 16; i++)
90003ed4:	2300      	movs	r3, #0
90003ed6:	f8df b370 	ldr.w	fp, [pc, #880]	; 90004248 <TGFX_JPEG_InitColorTables+0x4b8>
90003eda:	f8df a370 	ldr.w	sl, [pc, #880]	; 9000424c <TGFX_JPEG_InitColorTables+0x4bc>
  for(i = 0; i < 16; i++)
90003ede:	2680      	movs	r6, #128	; 0x80
90003ee0:	f8df 836c 	ldr.w	r8, [pc, #876]	; 90004250 <TGFX_JPEG_InitColorTables+0x4c0>
90003ee4:	f8df e36c 	ldr.w	lr, [pc, #876]	; 90004254 <TGFX_JPEG_InitColorTables+0x4c4>
90003ee8:	f8df c36c 	ldr.w	ip, [pc, #876]	; 90004258 <TGFX_JPEG_InitColorTables+0x4c8>
90003eec:	4fce      	ldr	r7, [pc, #824]	; (90004228 <TGFX_JPEG_InitColorTables+0x498>)
  for(i = 0; i < 16; i++)
90003eee:	9300      	str	r3, [sp, #0]

      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;

      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003ef0:	f106 0441 	add.w	r4, r6, #65	; 0x41
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003ef4:	9800      	ldr	r0, [sp, #0]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003ef6:	f106 0240 	add.w	r2, r6, #64	; 0x40
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003efa:	1c71      	adds	r1, r6, #1
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003efc:	b2a4      	uxth	r4, r4
90003efe:	f106 0542 	add.w	r5, r6, #66	; 0x42
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f02:	0843      	lsrs	r3, r0, #1
  for(i = 0; i < 16; i++)
90003f04:	3001      	adds	r0, #1
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f06:	f8ae 4004 	strh.w	r4, [lr, #4]
90003f0a:	b292      	uxth	r2, r2
90003f0c:	f8ae 4006 	strh.w	r4, [lr, #6]
90003f10:	f106 0443 	add.w	r4, r6, #67	; 0x43
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f14:	00db      	lsls	r3, r3, #3
  for(i = 0; i < 16; i++)
90003f16:	9000      	str	r0, [sp, #0]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f18:	b2a4      	uxth	r4, r4
90003f1a:	f8ae 2000 	strh.w	r2, [lr]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f1e:	b29b      	uxth	r3, r3
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f20:	f8ae 2002 	strh.w	r2, [lr, #2]
90003f24:	9401      	str	r4, [sp, #4]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003f26:	1d34      	adds	r4, r6, #4
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f28:	f503 7080 	add.w	r0, r3, #256	; 0x100
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003f2c:	b289      	uxth	r1, r1
90003f2e:	b2a4      	uxth	r4, r4
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f30:	f203 1201 	addw	r2, r3, #257	; 0x101
90003f34:	b280      	uxth	r0, r0
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003f36:	f8aa 1004 	strh.w	r1, [sl, #4]
90003f3a:	9402      	str	r4, [sp, #8]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f3c:	f106 0444 	add.w	r4, r6, #68	; 0x44
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f40:	b292      	uxth	r2, r2
90003f42:	f8ab 0000 	strh.w	r0, [fp]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f46:	b2a4      	uxth	r4, r4

      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f48:	8038      	strh	r0, [r7, #0]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f4a:	f8ab 0002 	strh.w	r0, [fp, #2]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90003f4e:	f503 79a1 	add.w	r9, r3, #322	; 0x142
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f52:	9403      	str	r4, [sp, #12]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003f54:	1d74      	adds	r4, r6, #5
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f56:	8078      	strh	r0, [r7, #2]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003f58:	1cb0      	adds	r0, r6, #2
90003f5a:	b2a4      	uxth	r4, r4
90003f5c:	f8aa 1006 	strh.w	r1, [sl, #6]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f60:	f503 7181 	add.w	r1, r3, #258	; 0x102
90003f64:	f8ab 2004 	strh.w	r2, [fp, #4]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003f68:	9404      	str	r4, [sp, #16]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f6a:	f106 0445 	add.w	r4, r6, #69	; 0x45
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f6e:	b289      	uxth	r1, r1
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f70:	80ba      	strh	r2, [r7, #4]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f72:	b2a4      	uxth	r4, r4
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f74:	f8ab 2006 	strh.w	r2, [fp, #6]
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f78:	80fa      	strh	r2, [r7, #6]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f7a:	b2ad      	uxth	r5, r5
90003f7c:	9405      	str	r4, [sp, #20]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003f7e:	1db4      	adds	r4, r6, #6
90003f80:	b282      	uxth	r2, r0
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f82:	f8ab 1008 	strh.w	r1, [fp, #8]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003f86:	b2a4      	uxth	r4, r4
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f88:	8139      	strh	r1, [r7, #8]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90003f8a:	fa1f f989 	uxth.w	r9, r9
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003f8e:	f8ab 100a 	strh.w	r1, [fp, #10]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003f92:	9406      	str	r4, [sp, #24]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f94:	f106 0446 	add.w	r4, r6, #70	; 0x46
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90003f98:	f8a8 9008 	strh.w	r9, [r8, #8]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003f9c:	1cf0      	adds	r0, r6, #3
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003f9e:	b2a4      	uxth	r4, r4
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003fa0:	f8aa 6000 	strh.w	r6, [sl]
90003fa4:	f8aa 6002 	strh.w	r6, [sl, #2]
90003fa8:	b280      	uxth	r0, r0
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003faa:	9407      	str	r4, [sp, #28]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003fac:	1df4      	adds	r4, r6, #7
90003fae:	f8aa 2008 	strh.w	r2, [sl, #8]
  for(i = 0; i < 16; i++)
90003fb2:	f10c 0c20 	add.w	ip, ip, #32
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003fb6:	b2a4      	uxth	r4, r4
90003fb8:	f8aa 200a 	strh.w	r2, [sl, #10]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003fbc:	f8ae 5008 	strh.w	r5, [lr, #8]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003fc0:	f203 1203 	addw	r2, r3, #259	; 0x103
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90003fc4:	9408      	str	r4, [sp, #32]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003fc6:	f106 0447 	add.w	r4, r6, #71	; 0x47
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003fca:	b292      	uxth	r2, r2
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003fcc:	f8ae 500a 	strh.w	r5, [lr, #10]
90003fd0:	b2a4      	uxth	r4, r4
90003fd2:	9d05      	ldr	r5, [sp, #20]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003fd4:	f8ab 200c 	strh.w	r2, [fp, #12]
  for(i = 0; i < 16; i++)
90003fd8:	f108 0820 	add.w	r8, r8, #32
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90003fdc:	9409      	str	r4, [sp, #36]	; 0x24
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90003fde:	f503 74a0 	add.w	r4, r3, #320	; 0x140
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003fe2:	81ba      	strh	r2, [r7, #12]
  for(i = 0; i < 16; i++)
90003fe4:	f10b 0b20 	add.w	fp, fp, #32
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90003fe8:	b2a4      	uxth	r4, r4
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003fea:	81fa      	strh	r2, [r7, #14]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90003fec:	f82b 2c12 	strh.w	r2, [fp, #-18]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90003ff0:	f203 1243 	addw	r2, r3, #323	; 0x143
90003ff4:	f828 4c20 	strh.w	r4, [r8, #-32]
  for(i = 0; i < 16; i++)
90003ff8:	3720      	adds	r7, #32
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90003ffa:	f828 4c1e 	strh.w	r4, [r8, #-30]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90003ffe:	f503 74c0 	add.w	r4, r3, #384	; 0x180
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004002:	b292      	uxth	r2, r2
90004004:	f828 9c16 	strh.w	r9, [r8, #-22]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004008:	b2a4      	uxth	r4, r4
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
9000400a:	f827 1c16 	strh.w	r1, [r7, #-22]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
9000400e:	f8aa 000c 	strh.w	r0, [sl, #12]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004012:	f203 1185 	addw	r1, r3, #389	; 0x185
90004016:	f82c 4c20 	strh.w	r4, [ip, #-32]
  for(i = 0; i < 16; i++)
9000401a:	3608      	adds	r6, #8
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
9000401c:	f82c 4c1e 	strh.w	r4, [ip, #-30]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004020:	f203 1441 	addw	r4, r3, #321	; 0x141
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004024:	f8aa 000e 	strh.w	r0, [sl, #14]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004028:	f203 1045 	addw	r0, r3, #325	; 0x145
9000402c:	b2a4      	uxth	r4, r4
  for(i = 0; i < 16; i++)
9000402e:	f10a 0a20 	add.w	sl, sl, #32
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004032:	b280      	uxth	r0, r0
  for(i = 0; i < 16; i++)
90004034:	f10e 0e20 	add.w	lr, lr, #32
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004038:	f828 4c1c 	strh.w	r4, [r8, #-28]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
9000403c:	b289      	uxth	r1, r1
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
9000403e:	f828 4c1a 	strh.w	r4, [r8, #-26]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004042:	f203 1481 	addw	r4, r3, #385	; 0x181
  for(i = 0; i < 16; i++)
90004046:	b2b6      	uxth	r6, r6
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004048:	b2a4      	uxth	r4, r4
9000404a:	f82c 4c1c 	strh.w	r4, [ip, #-28]
9000404e:	f82c 4c1a 	strh.w	r4, [ip, #-26]
90004052:	f503 74c1 	add.w	r4, r3, #386	; 0x182
90004056:	b2a4      	uxth	r4, r4
90004058:	f82c 4c18 	strh.w	r4, [ip, #-24]
9000405c:	f82c 4c16 	strh.w	r4, [ip, #-22]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004060:	9c01      	ldr	r4, [sp, #4]
90004062:	f82e 4c14 	strh.w	r4, [lr, #-20]
90004066:	f82e 4c12 	strh.w	r4, [lr, #-18]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
9000406a:	9c02      	ldr	r4, [sp, #8]
9000406c:	f82a 4c10 	strh.w	r4, [sl, #-16]
90004070:	f82a 4c0e 	strh.w	r4, [sl, #-14]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004074:	9c03      	ldr	r4, [sp, #12]
90004076:	f82e 4c10 	strh.w	r4, [lr, #-16]
9000407a:	f82e 4c0e 	strh.w	r4, [lr, #-14]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
9000407e:	9c04      	ldr	r4, [sp, #16]
90004080:	f82a 4c0c 	strh.w	r4, [sl, #-12]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004084:	f82e 5c0c 	strh.w	r5, [lr, #-12]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004088:	f828 2c14 	strh.w	r2, [r8, #-20]
9000408c:	f828 2c12 	strh.w	r2, [r8, #-18]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004090:	f203 1283 	addw	r2, r3, #387	; 0x183
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004094:	f82a 4c0a 	strh.w	r4, [sl, #-10]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004098:	b292      	uxth	r2, r2
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
9000409a:	9c06      	ldr	r4, [sp, #24]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
9000409c:	f828 0c0c 	strh.w	r0, [r8, #-12]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
900040a0:	f82c 2c14 	strh.w	r2, [ip, #-20]
900040a4:	f82c 2c12 	strh.w	r2, [ip, #-18]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
900040a8:	f503 7282 	add.w	r2, r3, #260	; 0x104
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
900040ac:	f82a 4c08 	strh.w	r4, [sl, #-8]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
900040b0:	b292      	uxth	r2, r2
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
900040b2:	f82a 4c06 	strh.w	r4, [sl, #-6]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
900040b6:	9c07      	ldr	r4, [sp, #28]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
900040b8:	f82b 2c10 	strh.w	r2, [fp, #-16]
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
900040bc:	f827 2c10 	strh.w	r2, [r7, #-16]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
900040c0:	f82b 2c0e 	strh.w	r2, [fp, #-14]
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
900040c4:	f827 2c0e 	strh.w	r2, [r7, #-14]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
900040c8:	f503 72a2 	add.w	r2, r3, #324	; 0x144
900040cc:	f828 0c0a 	strh.w	r0, [r8, #-10]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
900040d0:	f503 70c3 	add.w	r0, r3, #390	; 0x186
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
900040d4:	b292      	uxth	r2, r2
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
900040d6:	f82e 4c08 	strh.w	r4, [lr, #-8]
900040da:	f82e 4c06 	strh.w	r4, [lr, #-6]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
900040de:	b280      	uxth	r0, r0
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
900040e0:	f828 2c10 	strh.w	r2, [r8, #-16]
900040e4:	f828 2c0e 	strh.w	r2, [r8, #-14]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
900040e8:	f503 72c2 	add.w	r2, r3, #388	; 0x184
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
900040ec:	9c08      	ldr	r4, [sp, #32]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
900040ee:	b292      	uxth	r2, r2
900040f0:	f82c 1c0c 	strh.w	r1, [ip, #-12]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
900040f4:	f82a 4c04 	strh.w	r4, [sl, #-4]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
900040f8:	f82c 2c10 	strh.w	r2, [ip, #-16]
900040fc:	f82c 2c0e 	strh.w	r2, [ip, #-14]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004100:	f203 1205 	addw	r2, r3, #261	; 0x105
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004104:	f82a 4c02 	strh.w	r4, [sl, #-2]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004108:	b292      	uxth	r2, r2
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
9000410a:	9c09      	ldr	r4, [sp, #36]	; 0x24
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
9000410c:	f82c 1c0a 	strh.w	r1, [ip, #-10]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004110:	f203 1147 	addw	r1, r3, #327	; 0x147
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004114:	f82b 2c0c 	strh.w	r2, [fp, #-12]
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004118:	f827 2c0c 	strh.w	r2, [r7, #-12]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
9000411c:	b289      	uxth	r1, r1
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
9000411e:	f82b 2c0a 	strh.w	r2, [fp, #-10]
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004122:	f827 2c0a 	strh.w	r2, [r7, #-10]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004126:	f203 1207 	addw	r2, r3, #263	; 0x107
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
9000412a:	f82e 5c0a 	strh.w	r5, [lr, #-10]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
9000412e:	b292      	uxth	r2, r2
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004130:	f82e 4c04 	strh.w	r4, [lr, #-4]
90004134:	f82e 4c02 	strh.w	r4, [lr, #-2]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004138:	f503 74a3 	add.w	r4, r3, #326	; 0x146
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
9000413c:	f82b 2c04 	strh.w	r2, [fp, #-4]
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004140:	f827 2c04 	strh.w	r2, [r7, #-4]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004144:	b2a4      	uxth	r4, r4
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004146:	f82b 2c02 	strh.w	r2, [fp, #-2]
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
9000414a:	f827 2c02 	strh.w	r2, [r7, #-2]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
9000414e:	f503 7283 	add.w	r2, r3, #262	; 0x106
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004152:	f82c 0c08 	strh.w	r0, [ip, #-8]
90004156:	f203 1387 	addw	r3, r3, #391	; 0x187
9000415a:	f82c 0c06 	strh.w	r0, [ip, #-6]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
9000415e:	b292      	uxth	r2, r2
  for(i = 0; i < 16; i++)
90004160:	9800      	ldr	r0, [sp, #0]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004162:	b29b      	uxth	r3, r3
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004164:	f82b 2c08 	strh.w	r2, [fp, #-8]
  for(i = 0; i < 16; i++)
90004168:	2810      	cmp	r0, #16
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
9000416a:	f828 4c08 	strh.w	r4, [r8, #-8]
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
9000416e:	f827 2c08 	strh.w	r2, [r7, #-8]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004172:	f82b 2c06 	strh.w	r2, [fp, #-6]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004176:	f828 4c06 	strh.w	r4, [r8, #-6]
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
9000417a:	f827 2c06 	strh.w	r2, [r7, #-6]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
9000417e:	f828 1c04 	strh.w	r1, [r8, #-4]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004182:	f82c 3c04 	strh.w	r3, [ip, #-4]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004186:	f828 1c02 	strh.w	r1, [r8, #-2]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
9000418a:	f82c 3c02 	strh.w	r3, [ip, #-2]
  for(i = 0; i < 16; i++)
9000418e:	f47f aeaf 	bne.w	90003ef0 <TGFX_JPEG_InitColorTables+0x160>
  {
    for(j = 0; j < 8; j++)
    {
      offset = i*8 + j;

      JPEG_Y_MCU_444_LUT[offset]  = offset;
90004192:	4826      	ldr	r0, [pc, #152]	; (9000422c <TGFX_JPEG_InitColorTables+0x49c>)
90004194:	f44f 3480 	mov.w	r4, #65536	; 0x10000
      JPEG_Cb_MCU_444_LUT[offset] = offset + 64 ;
90004198:	4925      	ldr	r1, [pc, #148]	; (90004230 <TGFX_JPEG_InitColorTables+0x4a0>)
      JPEG_Y_MCU_444_LUT[offset]  = offset;
9000419a:	6004      	str	r4, [r0, #0]
9000419c:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
      JPEG_Cr_MCU_444_LUT[offset] = offset + 128 ;
900041a0:	4a24      	ldr	r2, [pc, #144]	; (90004234 <TGFX_JPEG_InitColorTables+0x4a4>)
      JPEG_Y_MCU_444_LUT[offset]  = offset;
900041a2:	6044      	str	r4, [r0, #4]
900041a4:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
      JPEG_K_MCU_444_LUT[offset]  = offset + 192 ;
900041a8:	4b23      	ldr	r3, [pc, #140]	; (90004238 <TGFX_JPEG_InitColorTables+0x4a8>)
      JPEG_Y_MCU_444_LUT[offset]  = offset;
900041aa:	6084      	str	r4, [r0, #8]
900041ac:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900041b0:	4f22      	ldr	r7, [pc, #136]	; (9000423c <TGFX_JPEG_InitColorTables+0x4ac>)
900041b2:	60c4      	str	r4, [r0, #12]
900041b4:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900041b8:	4e21      	ldr	r6, [pc, #132]	; (90004240 <TGFX_JPEG_InitColorTables+0x4b0>)
900041ba:	6104      	str	r4, [r0, #16]
900041bc:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900041c0:	4d20      	ldr	r5, [pc, #128]	; (90004244 <TGFX_JPEG_InitColorTables+0x4b4>)
900041c2:	6144      	str	r4, [r0, #20]
900041c4:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
  for (i = 0; i <= 255; i++)
900041c8:	f8df b090 	ldr.w	fp, [pc, #144]	; 9000425c <TGFX_JPEG_InitColorTables+0x4cc>
      JPEG_Y_MCU_444_LUT[offset]  = offset;
900041cc:	6184      	str	r4, [r0, #24]
900041ce:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
  for (i = 0; i <= 255; i++)
900041d2:	f8df a08c 	ldr.w	sl, [pc, #140]	; 90004260 <TGFX_JPEG_InitColorTables+0x4d0>
      JPEG_Y_MCU_444_LUT[offset]  = offset;
900041d6:	61c4      	str	r4, [r0, #28]
900041d8:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
  for (i = 0; i <= 255; i++)
900041dc:	f8df 9084 	ldr.w	r9, [pc, #132]	; 90004264 <TGFX_JPEG_InitColorTables+0x4d4>
      JPEG_Y_MCU_444_LUT[offset]  = offset;
900041e0:	6204      	str	r4, [r0, #32]
900041e2:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
  for (i = 0; i <= 255; i++)
900041e6:	f8df 8080 	ldr.w	r8, [pc, #128]	; 90004268 <TGFX_JPEG_InitColorTables+0x4d8>
      JPEG_Y_MCU_444_LUT[offset]  = offset;
900041ea:	6244      	str	r4, [r0, #36]	; 0x24
900041ec:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
  for (i = 0; i <= 255; i++)
900041f0:	f8df e078 	ldr.w	lr, [pc, #120]	; 9000426c <TGFX_JPEG_InitColorTables+0x4dc>
      JPEG_Y_MCU_444_LUT[offset]  = offset;
900041f4:	6284      	str	r4, [r0, #40]	; 0x28
900041f6:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900041fa:	62c4      	str	r4, [r0, #44]	; 0x2c
900041fc:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
90004200:	6304      	str	r4, [r0, #48]	; 0x30
90004202:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
90004206:	6344      	str	r4, [r0, #52]	; 0x34
90004208:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
9000420c:	6384      	str	r4, [r0, #56]	; 0x38
9000420e:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
90004212:	63c4      	str	r4, [r0, #60]	; 0x3c
90004214:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
90004218:	6404      	str	r4, [r0, #64]	; 0x40
9000421a:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
9000421e:	6444      	str	r4, [r0, #68]	; 0x44
90004220:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
90004224:	e024      	b.n	90004270 <TGFX_JPEG_InitColorTables+0x4e0>
90004226:	bf00      	nop
90004228:	2400ca3c 	.word	0x2400ca3c
9000422c:	2400ccbc 	.word	0x2400ccbc
90004230:	2400c2fc 	.word	0x2400c2fc
90004234:	2400c7bc 	.word	0x2400c7bc
90004238:	2400cc3c 	.word	0x2400cc3c
9000423c:	2400aef8 	.word	0x2400aef8
90004240:	2400a2f8 	.word	0x2400a2f8
90004244:	2400aaf8 	.word	0x2400aaf8
90004248:	2400befc 	.word	0x2400befc
9000424c:	2400c0fc 	.word	0x2400c0fc
90004250:	2400c3bc 	.word	0x2400c3bc
90004254:	2400c5bc 	.word	0x2400c5bc
90004258:	2400c83c 	.word	0x2400c83c
9000425c:	000166e8 	.word	0x000166e8
90004260:	0001c5a0 	.word	0x0001c5a0
90004264:	ffff4930 	.word	0xffff4930
90004268:	ffffa7e8 	.word	0xffffa7e8
9000426c:	00b3f400 	.word	0x00b3f400
90004270:	6484      	str	r4, [r0, #72]	; 0x48
90004272:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
90004276:	64c4      	str	r4, [r0, #76]	; 0x4c
90004278:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
9000427c:	6504      	str	r4, [r0, #80]	; 0x50
9000427e:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
90004282:	6544      	str	r4, [r0, #84]	; 0x54
90004284:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
90004288:	6584      	str	r4, [r0, #88]	; 0x58
9000428a:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
9000428e:	65c4      	str	r4, [r0, #92]	; 0x5c
90004290:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
90004294:	6604      	str	r4, [r0, #96]	; 0x60
90004296:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
9000429a:	6644      	str	r4, [r0, #100]	; 0x64
9000429c:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900042a0:	6684      	str	r4, [r0, #104]	; 0x68
900042a2:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900042a6:	66c4      	str	r4, [r0, #108]	; 0x6c
900042a8:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900042ac:	6704      	str	r4, [r0, #112]	; 0x70
900042ae:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900042b2:	6744      	str	r4, [r0, #116]	; 0x74
900042b4:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900042b8:	6784      	str	r4, [r0, #120]	; 0x78
900042ba:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900042be:	67c4      	str	r4, [r0, #124]	; 0x7c
      JPEG_Cb_MCU_444_LUT[offset] = offset + 64 ;
900042c0:	f104 1402 	add.w	r4, r4, #131074	; 0x20002
900042c4:	48a1      	ldr	r0, [pc, #644]	; (9000454c <TGFX_JPEG_InitColorTables+0x7bc>)
900042c6:	e9c1 4000 	strd	r4, r0, [r1]
900042ca:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
900042ce:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
900042d2:	e9c1 4002 	strd	r4, r0, [r1, #8]
900042d6:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
900042da:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
900042de:	e9c1 4004 	strd	r4, r0, [r1, #16]
900042e2:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
900042e6:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
900042ea:	e9c1 4006 	strd	r4, r0, [r1, #24]
900042ee:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
900042f2:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
900042f6:	e9c1 4008 	strd	r4, r0, [r1, #32]
900042fa:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
900042fe:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
90004302:	e9c1 400a 	strd	r4, r0, [r1, #40]	; 0x28
90004306:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
9000430a:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
9000430e:	e9c1 400c 	strd	r4, r0, [r1, #48]	; 0x30
90004312:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
90004316:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
9000431a:	e9c1 400e 	strd	r4, r0, [r1, #56]	; 0x38
9000431e:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
90004322:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
90004326:	e9c1 4010 	strd	r4, r0, [r1, #64]	; 0x40
9000432a:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
9000432e:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
90004332:	e9c1 4012 	strd	r4, r0, [r1, #72]	; 0x48
90004336:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
9000433a:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
9000433e:	e9c1 4014 	strd	r4, r0, [r1, #80]	; 0x50
90004342:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
90004346:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
9000434a:	e9c1 4016 	strd	r4, r0, [r1, #88]	; 0x58
9000434e:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
90004352:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
90004356:	e9c1 4018 	strd	r4, r0, [r1, #96]	; 0x60
9000435a:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
9000435e:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
90004362:	e9c1 401a 	strd	r4, r0, [r1, #104]	; 0x68
90004366:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
9000436a:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
9000436e:	e9c1 401c 	strd	r4, r0, [r1, #112]	; 0x70
90004372:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
90004376:	f100 1004 	add.w	r0, r0, #262148	; 0x40004
9000437a:	e9c1 401e 	strd	r4, r0, [r1, #120]	; 0x78
      JPEG_Cr_MCU_444_LUT[offset] = offset + 128 ;
9000437e:	f104 1404 	add.w	r4, r4, #262148	; 0x40004
90004382:	4973      	ldr	r1, [pc, #460]	; (90004550 <TGFX_JPEG_InitColorTables+0x7c0>)
90004384:	f100 1006 	add.w	r0, r0, #393222	; 0x60006
90004388:	e9c2 4100 	strd	r4, r1, [r2]
9000438c:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
90004390:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
90004394:	e9c2 0102 	strd	r0, r1, [r2, #8]
90004398:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
9000439c:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
900043a0:	e9c2 4104 	strd	r4, r1, [r2, #16]
900043a4:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
900043a8:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
900043ac:	e9c2 0106 	strd	r0, r1, [r2, #24]
900043b0:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
900043b4:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
900043b8:	e9c2 4108 	strd	r4, r1, [r2, #32]
900043bc:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
900043c0:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
900043c4:	e9c2 010a 	strd	r0, r1, [r2, #40]	; 0x28
900043c8:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
900043cc:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
900043d0:	e9c2 410c 	strd	r4, r1, [r2, #48]	; 0x30
900043d4:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
900043d8:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
900043dc:	e9c2 010e 	strd	r0, r1, [r2, #56]	; 0x38
900043e0:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
900043e4:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
900043e8:	e9c2 4110 	strd	r4, r1, [r2, #64]	; 0x40
900043ec:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
900043f0:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
900043f4:	e9c2 0112 	strd	r0, r1, [r2, #72]	; 0x48
900043f8:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
900043fc:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
90004400:	e9c2 4114 	strd	r4, r1, [r2, #80]	; 0x50
90004404:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
90004408:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
9000440c:	e9c2 0116 	strd	r0, r1, [r2, #88]	; 0x58
90004410:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
90004414:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
90004418:	e9c2 4118 	strd	r4, r1, [r2, #96]	; 0x60
9000441c:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
90004420:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
90004424:	e9c2 011a 	strd	r0, r1, [r2, #104]	; 0x68
90004428:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
9000442c:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
90004430:	e9c2 411c 	strd	r4, r1, [r2, #112]	; 0x70
90004434:	f101 1104 	add.w	r1, r1, #262148	; 0x40004
      JPEG_K_MCU_444_LUT[offset]  = offset + 192 ;
90004438:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
      JPEG_Cr_MCU_444_LUT[offset] = offset + 128 ;
9000443c:	e9c2 011e 	strd	r0, r1, [r2, #120]	; 0x78
      JPEG_K_MCU_444_LUT[offset]  = offset + 192 ;
90004440:	f100 1006 	add.w	r0, r0, #393222	; 0x60006
90004444:	f101 1106 	add.w	r1, r1, #393222	; 0x60006
90004448:	4a42      	ldr	r2, [pc, #264]	; (90004554 <TGFX_JPEG_InitColorTables+0x7c4>)
9000444a:	e9c3 4000 	strd	r4, r0, [r3]
9000444e:	e9c3 1202 	strd	r1, r2, [r3, #8]
90004452:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
90004456:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
9000445a:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
9000445e:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
90004462:	e9c3 4004 	strd	r4, r0, [r3, #16]
90004466:	e9c3 1206 	strd	r1, r2, [r3, #24]
9000446a:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
9000446e:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
90004472:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
90004476:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
9000447a:	e9c3 4008 	strd	r4, r0, [r3, #32]
9000447e:	e9c3 120a 	strd	r1, r2, [r3, #40]	; 0x28
90004482:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
90004486:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
9000448a:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
9000448e:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
90004492:	e9c3 400c 	strd	r4, r0, [r3, #48]	; 0x30
90004496:	e9c3 120e 	strd	r1, r2, [r3, #56]	; 0x38
9000449a:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
9000449e:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
900044a2:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
900044a6:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
900044aa:	e9c3 4010 	strd	r4, r0, [r3, #64]	; 0x40
900044ae:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
900044b2:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
900044b6:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
900044ba:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
900044be:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
900044c2:	e9c3 4014 	strd	r4, r0, [r3, #80]	; 0x50
900044c6:	e9c3 1216 	strd	r1, r2, [r3, #88]	; 0x58
900044ca:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
900044ce:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
900044d2:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
900044d6:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
900044da:	e9c3 4018 	strd	r4, r0, [r3, #96]	; 0x60
900044de:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
900044e2:	f104 1408 	add.w	r4, r4, #524296	; 0x80008
900044e6:	f100 1008 	add.w	r0, r0, #524296	; 0x80008
900044ea:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
900044ee:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
900044f2:	e9c3 401c 	strd	r4, r0, [r3, #112]	; 0x70
900044f6:	e9c3 121e 	strd	r1, r2, [r3, #120]	; 0x78
  for(i = 0; i < 8; i++)
900044fa:	4c17      	ldr	r4, [pc, #92]	; (90004558 <TGFX_JPEG_InitColorTables+0x7c8>)
      JPEG_K_MCU_444_LUT[offset]  = offset + 192 ;
900044fc:	4817      	ldr	r0, [pc, #92]	; (9000455c <TGFX_JPEG_InitColorTables+0x7cc>)
900044fe:	4918      	ldr	r1, [pc, #96]	; (90004560 <TGFX_JPEG_InitColorTables+0x7d0>)
90004500:	4a18      	ldr	r2, [pc, #96]	; (90004564 <TGFX_JPEG_InitColorTables+0x7d4>)
90004502:	4b19      	ldr	r3, [pc, #100]	; (90004568 <TGFX_JPEG_InitColorTables+0x7d8>)
    CR_RED_LUT[i] = ( (((int32_t) ((1.40200 / 2) * (1L << 16)))  * index) + ((int32_t) 1 << (16 - 1))) >> 16;
90004504:	ea4f 4c23 	mov.w	ip, r3, asr #16
  for (i = 0; i <= 255; i++)
90004508:	445b      	add	r3, fp
    CR_GREEN_LUT[i] = (-((int32_t) ((0.71414 / 2) * (1L << 16)))) * index;
9000450a:	f845 1f04 	str.w	r1, [r5, #4]!
  for (i = 0; i <= 255; i++)
9000450e:	4449      	add	r1, r9
    CR_RED_LUT[i] = ( (((int32_t) ((1.40200 / 2) * (1L << 16)))  * index) + ((int32_t) 1 << (16 - 1))) >> 16;
90004510:	f847 cf04 	str.w	ip, [r7, #4]!
  for (i = 0; i <= 255; i++)
90004514:	4573      	cmp	r3, lr
    CB_BLUE_LUT[i] = ( (((int32_t) ((1.77200 / 2) * (1L << 16)))  * index) + ((int32_t) 1 << (16 - 1))) >> 16;
90004516:	ea4f 4c22 	mov.w	ip, r2, asr #16
    CB_GREEN_LUT[i] = (-((int32_t) ((0.34414 / 2) * (1L << 16)))) * index;
9000451a:	f844 0f04 	str.w	r0, [r4, #4]!
  for (i = 0; i <= 255; i++)
9000451e:	4452      	add	r2, sl
90004520:	4440      	add	r0, r8
    CB_BLUE_LUT[i] = ( (((int32_t) ((1.77200 / 2) * (1L << 16)))  * index) + ((int32_t) 1 << (16 - 1))) >> 16;
90004522:	f846 cf04 	str.w	ip, [r6, #4]!
  for (i = 0; i <= 255; i++)
90004526:	d1ed      	bne.n	90004504 <TGFX_JPEG_InitColorTables+0x774>
}
90004528:	b00b      	add	sp, #44	; 0x2c
9000452a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else  if((j>=8) && (i<8)) offset+= 56;
9000452e:	f1bc 0f07 	cmp.w	ip, #7
90004532:	d802      	bhi.n	9000453a <TGFX_JPEG_InitColorTables+0x7aa>
90004534:	b10f      	cbz	r7, 9000453a <TGFX_JPEG_InitColorTables+0x7aa>
90004536:	460d      	mov	r5, r1
90004538:	e4a8      	b.n	90003e8c <TGFX_JPEG_InitColorTables+0xfc>
      else  if((j<8) && (i>=8)) offset+= 64;
9000453a:	2c07      	cmp	r4, #7
9000453c:	f63f aca6 	bhi.w	90003e8c <TGFX_JPEG_InitColorTables+0xfc>
90004540:	2e00      	cmp	r6, #0
90004542:	f43f aca3 	beq.w	90003e8c <TGFX_JPEG_InitColorTables+0xfc>
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004546:	8013      	strh	r3, [r2, #0]
    for(j = 0; j < 16; j++)
90004548:	e4a3      	b.n	90003e92 <TGFX_JPEG_InitColorTables+0x102>
9000454a:	bf00      	nop
9000454c:	00430042 	.word	0x00430042
90004550:	00830082 	.word	0x00830082
90004554:	00c700c6 	.word	0x00c700c6
90004558:	2400a6f8 	.word	0x2400a6f8
9000455c:	002c0c00 	.word	0x002c0c00
90004560:	005b6800 	.word	0x005b6800
90004564:	ff1db000 	.word	0xff1db000
90004568:	ff4d0c00 	.word	0xff4d0c00

9000456c <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
9000456c:	4901      	ldr	r1, [pc, #4]	; (90004574 <vApplicationIdleHook+0x8>)
9000456e:	2000      	movs	r0, #0
90004570:	f00e be9e 	b.w	900132b0 <vTaskSetApplicationTaskTag>
90004574:	90000fbd 	.word	0x90000fbd

90004578 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
90004578:	b538      	push	{r3, r4, r5, lr}
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
9000457a:	4c10      	ldr	r4, [pc, #64]	; (900045bc <MX_USART3_UART_Init+0x44>)
  huart3.Init.BaudRate = 115200;
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
9000457c:	2500      	movs	r5, #0
  huart3.Init.StopBits = UART_STOPBITS_1;
  huart3.Init.Parity = UART_PARITY_NONE;
  huart3.Init.Mode = UART_MODE_TX_RX;
9000457e:	230c      	movs	r3, #12
  huart3.Init.BaudRate = 115200;
90004580:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
  huart3.Instance = USART3;
90004584:	490e      	ldr	r1, [pc, #56]	; (900045c0 <MX_USART3_UART_Init+0x48>)
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  if (HAL_UART_Init(&huart3) != HAL_OK)
90004586:	4620      	mov	r0, r4
  huart3.Init.BaudRate = 115200;
90004588:	e884 0026 	stmia.w	r4, {r1, r2, r5}
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
9000458c:	e9c4 3505 	strd	r3, r5, [r4, #20]
  huart3.Init.Parity = UART_PARITY_NONE;
90004590:	e9c4 5503 	strd	r5, r5, [r4, #12]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
90004594:	e9c4 5507 	strd	r5, r5, [r4, #28]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
90004598:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
9000459c:	f00c fa02 	bl	900109a4 <HAL_UART_Init>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
900045a0:	4629      	mov	r1, r5
900045a2:	4620      	mov	r0, r4
900045a4:	f00c fa50 	bl	90010a48 <HAL_UARTEx_SetTxFifoThreshold>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
900045a8:	4629      	mov	r1, r5
900045aa:	4620      	mov	r0, r4
900045ac:	f00c fa8e 	bl	90010acc <HAL_UARTEx_SetRxFifoThreshold>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
900045b0:	4620      	mov	r0, r4
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
900045b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
900045b6:	f00c ba29 	b.w	90010a0c <HAL_UARTEx_DisableFifoMode>
900045ba:	bf00      	nop
900045bc:	2400dad8 	.word	0x2400dad8
900045c0:	40004800 	.word	0x40004800
900045c4:	00000000 	.word	0x00000000

900045c8 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
900045c8:	b580      	push	{r7, lr}
  sFilterConfig.IdType 			= FDCAN_EXTENDED_ID;
900045ca:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
{
900045ce:	b088      	sub	sp, #32
  sFilterConfig.IdType 			= FDCAN_EXTENDED_ID;
900045d0:	2100      	movs	r1, #0
  sFilterConfig.FilterID1 		= 0x19F21100;
900045d2:	4b21      	ldr	r3, [pc, #132]	; (90004658 <StartDefaultTask+0x90>)
  sFilterConfig.IdType 			= FDCAN_EXTENDED_ID;
900045d4:	2402      	movs	r4, #2
900045d6:	2501      	movs	r5, #1
  sFilterConfig.FilterID1 		= 0x19F21100;
900045d8:	9304      	str	r3, [sp, #16]
  TxHeader.Identifier 			= 0x19F21101;
900045da:	4e20      	ldr	r6, [pc, #128]	; (9000465c <StartDefaultTask+0x94>)
  {
	  printf("Debug...\r\n");

	  if(isCanbusDataRx==1){

		  if (HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK){
900045dc:	4f20      	ldr	r7, [pc, #128]	; (90004660 <StartDefaultTask+0x98>)
  sFilterConfig.IdType 			= FDCAN_EXTENDED_ID;
900045de:	e9cd 0100 	strd	r0, r1, [sp]
  if (HAL_FDCAN_ConfigFilter(&hfdcan1, &sFilterConfig) != HAL_OK)
900045e2:	4669      	mov	r1, sp
900045e4:	481f      	ldr	r0, [pc, #124]	; (90004664 <StartDefaultTask+0x9c>)
  sFilterConfig.IdType 			= FDCAN_EXTENDED_ID;
900045e6:	e9cd 4502 	strd	r4, r5, [sp, #8]
  if (HAL_FDCAN_ConfigFilter(&hfdcan1, &sFilterConfig) != HAL_OK)
900045ea:	f006 f9bb 	bl	9000a964 <HAL_FDCAN_ConfigFilter>
  if (HAL_FDCAN_Start(&hfdcan1) != HAL_OK)
900045ee:	481d      	ldr	r0, [pc, #116]	; (90004664 <StartDefaultTask+0x9c>)
900045f0:	f006 f9fe 	bl	9000a9f0 <HAL_FDCAN_Start>
  if (HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK)
900045f4:	2200      	movs	r2, #0
900045f6:	2101      	movs	r1, #1
900045f8:	481a      	ldr	r0, [pc, #104]	; (90004664 <StartDefaultTask+0x9c>)
900045fa:	f006 fb21 	bl	9000ac40 <HAL_FDCAN_ActivateNotification>
  TxHeader.Identifier 			= 0x19F21101;
900045fe:	2200      	movs	r2, #0
90004600:	2300      	movs	r3, #0
  TxHeader.MessageMarker 		= 0;
90004602:	2100      	movs	r1, #0
90004604:	4d18      	ldr	r5, [pc, #96]	; (90004668 <StartDefaultTask+0xa0>)
90004606:	6231      	str	r1, [r6, #32]
	  printf("Debug...\r\n");
90004608:	4c18      	ldr	r4, [pc, #96]	; (9000466c <StartDefaultTask+0xa4>)
  TxHeader.Identifier 			= 0x19F21101;
9000460a:	ed9f 7b11 	vldr	d7, [pc, #68]	; 90004650 <StartDefaultTask+0x88>
9000460e:	e9c6 2304 	strd	r2, r3, [r6, #16]
90004612:	e9c6 2306 	strd	r2, r3, [r6, #24]
90004616:	2200      	movs	r2, #0
90004618:	f44f 2300 	mov.w	r3, #524288	; 0x80000
9000461c:	ed86 7b00 	vstr	d7, [r6]
90004620:	e9c6 2302 	strd	r2, r3, [r6, #8]
  MX_USART3_UART_Init();
90004624:	f7ff ffa8 	bl	90004578 <MX_USART3_UART_Init>
  printf("System Initialized...\r\n");
90004628:	4811      	ldr	r0, [pc, #68]	; (90004670 <StartDefaultTask+0xa8>)
9000462a:	f027 feb3 	bl	9002c394 <puts>
	  printf("Debug...\r\n");
9000462e:	4620      	mov	r0, r4
90004630:	f027 feb0 	bl	9002c394 <puts>
	  if(isCanbusDataRx==1){
90004634:	682b      	ldr	r3, [r5, #0]
90004636:	2b01      	cmp	r3, #1
90004638:	d1f9      	bne.n	9000462e <StartDefaultTask+0x66>
		  if (HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK){
9000463a:	463a      	mov	r2, r7
9000463c:	4631      	mov	r1, r6
9000463e:	4809      	ldr	r0, [pc, #36]	; (90004664 <StartDefaultTask+0x9c>)
90004640:	f006 f9f4 	bl	9000aa2c <HAL_FDCAN_AddMessageToTxFifoQ>

			    Error_Handler();

		  }
	    osDelay(100);
90004644:	2064      	movs	r0, #100	; 0x64
90004646:	f00c fbcb 	bl	90010de0 <osDelay>
9000464a:	e7f0      	b.n	9000462e <StartDefaultTask+0x66>
9000464c:	f3af 8000 	nop.w
90004650:	19f21101 	.word	0x19f21101
90004654:	40000000 	.word	0x40000000
90004658:	19f21100 	.word	0x19f21100
9000465c:	2400d778 	.word	0x2400d778
90004660:	2400d770 	.word	0x2400d770
90004664:	2400d82c 	.word	0x2400d82c
90004668:	2400db6c 	.word	0x2400db6c
9000466c:	9002e8cc 	.word	0x9002e8cc
90004670:	9002e8b4 	.word	0x9002e8b4

90004674 <__io_putchar>:
{
90004674:	b500      	push	{lr}
90004676:	b083      	sub	sp, #12
  HAL_UART_Transmit(&huart3, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
90004678:	f04f 33ff 	mov.w	r3, #4294967295
9000467c:	2201      	movs	r2, #1
{
9000467e:	9001      	str	r0, [sp, #4]
  HAL_UART_Transmit(&huart3, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
90004680:	a901      	add	r1, sp, #4
90004682:	4803      	ldr	r0, [pc, #12]	; (90004690 <__io_putchar+0x1c>)
90004684:	f00b fc2e 	bl	9000fee4 <HAL_UART_Transmit>
}
90004688:	9801      	ldr	r0, [sp, #4]
9000468a:	b003      	add	sp, #12
9000468c:	f85d fb04 	ldr.w	pc, [sp], #4
90004690:	2400dad8 	.word	0x2400dad8

90004694 <HAL_FDCAN_RxFifo0Callback>:
  if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
90004694:	07cb      	lsls	r3, r1, #31
90004696:	d400      	bmi.n	9000469a <HAL_FDCAN_RxFifo0Callback+0x6>
90004698:	4770      	bx	lr
{
9000469a:	b570      	push	{r4, r5, r6, lr}
    if (HAL_FDCAN_GetRxMessage(hfdcan1, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK)
9000469c:	4d22      	ldr	r5, [pc, #136]	; (90004728 <HAL_FDCAN_RxFifo0Callback+0x94>)
{
9000469e:	b086      	sub	sp, #24
    if (HAL_FDCAN_GetRxMessage(hfdcan1, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK)
900046a0:	4e22      	ldr	r6, [pc, #136]	; (9000472c <HAL_FDCAN_RxFifo0Callback+0x98>)
900046a2:	2140      	movs	r1, #64	; 0x40
900046a4:	462a      	mov	r2, r5
900046a6:	4604      	mov	r4, r0
900046a8:	4633      	mov	r3, r6
900046aa:	f006 f9f9 	bl	9000aaa0 <HAL_FDCAN_GetRxMessage>
    if ((RxHeader.Identifier 	== 0x19F21100) 				&&
900046ae:	4b20      	ldr	r3, [pc, #128]	; (90004730 <HAL_FDCAN_RxFifo0Callback+0x9c>)
900046b0:	682a      	ldr	r2, [r5, #0]
900046b2:	429a      	cmp	r2, r3
900046b4:	d007      	beq.n	900046c6 <HAL_FDCAN_RxFifo0Callback+0x32>
    if (HAL_FDCAN_ActivateNotification(hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK)
900046b6:	2200      	movs	r2, #0
900046b8:	2101      	movs	r1, #1
900046ba:	4620      	mov	r0, r4
}
900046bc:	b006      	add	sp, #24
900046be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    if (HAL_FDCAN_ActivateNotification(hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK)
900046c2:	f006 babd 	b.w	9000ac40 <HAL_FDCAN_ActivateNotification>
    if ((RxHeader.Identifier 	== 0x19F21100) 				&&
900046c6:	686b      	ldr	r3, [r5, #4]
900046c8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
900046cc:	d1f3      	bne.n	900046b6 <HAL_FDCAN_RxFifo0Callback+0x22>
    	(RxHeader.IdType 		== FDCAN_EXTENDED_ID) 		&&
900046ce:	68eb      	ldr	r3, [r5, #12]
900046d0:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
900046d4:	d1ef      	bne.n	900046b6 <HAL_FDCAN_RxFifo0Callback+0x22>
    		  TxData[i] = RxData[i];
900046d6:	4b17      	ldr	r3, [pc, #92]	; (90004734 <HAL_FDCAN_RxFifo0Callback+0xa0>)
    	isCanbusDataRx = 1;
900046d8:	4a17      	ldr	r2, [pc, #92]	; (90004738 <HAL_FDCAN_RxFifo0Callback+0xa4>)
    		  TxData[i] = RxData[i];
900046da:	e896 0003 	ldmia.w	r6, {r0, r1}
900046de:	e883 0003 	stmia.w	r3, {r0, r1}
    	  TxData[1] = 0xFF;
900046e2:	f64f 71ff 	movw	r1, #65535	; 0xffff
    	result = (merged*4)/1000;
900046e6:	4815      	ldr	r0, [pc, #84]	; (9000473c <HAL_FDCAN_RxFifo0Callback+0xa8>)
    	  TxData[1] = 0xFF;
900046e8:	f8a3 1001 	strh.w	r1, [r3, #1]
900046ec:	f8b6 3001 	ldrh.w	r3, [r6, #1]
    	merged = (hex1<<8)|(hex2);
900046f0:	4913      	ldr	r1, [pc, #76]	; (90004740 <HAL_FDCAN_RxFifo0Callback+0xac>)
900046f2:	ba5b      	rev16	r3, r3
900046f4:	b29b      	uxth	r3, r3
900046f6:	600b      	str	r3, [r1, #0]
    	result = (merged*4)/1000;
900046f8:	fba0 0303 	umull	r0, r3, r0, r3
900046fc:	4911      	ldr	r1, [pc, #68]	; (90004744 <HAL_FDCAN_RxFifo0Callback+0xb0>)
    	printf("Received Message 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x \r\n",
900046fe:	4812      	ldr	r0, [pc, #72]	; (90004748 <HAL_FDCAN_RxFifo0Callback+0xb4>)
    	result = (merged*4)/1000;
90004700:	091b      	lsrs	r3, r3, #4
90004702:	600b      	str	r3, [r1, #0]
    	printf("Received Message 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x \r\n",
90004704:	79f1      	ldrb	r1, [r6, #7]
90004706:	79b3      	ldrb	r3, [r6, #6]
90004708:	e9cd 3103 	strd	r3, r1, [sp, #12]
9000470c:	7971      	ldrb	r1, [r6, #5]
9000470e:	7933      	ldrb	r3, [r6, #4]
90004710:	e9cd 3101 	strd	r3, r1, [sp, #4]
90004714:	78f1      	ldrb	r1, [r6, #3]
90004716:	78b3      	ldrb	r3, [r6, #2]
90004718:	9100      	str	r1, [sp, #0]
    	isCanbusDataRx = 1;
9000471a:	2101      	movs	r1, #1
9000471c:	6011      	str	r1, [r2, #0]
    	printf("Received Message 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x \r\n",
9000471e:	7872      	ldrb	r2, [r6, #1]
90004720:	7831      	ldrb	r1, [r6, #0]
90004722:	f027 fdb1 	bl	9002c288 <iprintf>
90004726:	e7c6      	b.n	900046b6 <HAL_FDCAN_RxFifo0Callback+0x22>
90004728:	2400d748 	.word	0x2400d748
9000472c:	2400d740 	.word	0x2400d740
90004730:	19f21100 	.word	0x19f21100
90004734:	2400d770 	.word	0x2400d770
90004738:	2400db6c 	.word	0x2400db6c
9000473c:	10624dd3 	.word	0x10624dd3
90004740:	2400db70 	.word	0x2400db70
90004744:	2400db74 	.word	0x2400db74
90004748:	9002e8d8 	.word	0x9002e8d8
9000474c:	00000000 	.word	0x00000000

90004750 <SystemClock_Config>:
{
90004750:	b510      	push	{r4, lr}
90004752:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90004754:	224c      	movs	r2, #76	; 0x4c
90004756:	2100      	movs	r1, #0
90004758:	a80a      	add	r0, sp, #40	; 0x28
9000475a:	f027 f9bf 	bl	9002badc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
9000475e:	2220      	movs	r2, #32
90004760:	2100      	movs	r1, #0
90004762:	a802      	add	r0, sp, #8
90004764:	f027 f9ba 	bl	9002badc <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90004768:	2002      	movs	r0, #2
9000476a:	f009 fa7f 	bl	9000dc6c <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
9000476e:	4b28      	ldr	r3, [pc, #160]	; (90004810 <SystemClock_Config+0xc0>)
90004770:	2100      	movs	r1, #0
90004772:	4a28      	ldr	r2, [pc, #160]	; (90004814 <SystemClock_Config+0xc4>)
90004774:	9101      	str	r1, [sp, #4]
90004776:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
90004778:	f021 0101 	bic.w	r1, r1, #1
9000477c:	62d9      	str	r1, [r3, #44]	; 0x2c
9000477e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004780:	f003 0301 	and.w	r3, r3, #1
90004784:	9301      	str	r3, [sp, #4]
90004786:	6993      	ldr	r3, [r2, #24]
90004788:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
9000478c:	6193      	str	r3, [r2, #24]
9000478e:	6993      	ldr	r3, [r2, #24]
90004790:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
90004794:	9301      	str	r3, [sp, #4]
90004796:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90004798:	6993      	ldr	r3, [r2, #24]
9000479a:	049b      	lsls	r3, r3, #18
9000479c:	d5fc      	bpl.n	90004798 <SystemClock_Config+0x48>
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
9000479e:	4a1e      	ldr	r2, [pc, #120]	; (90004818 <SystemClock_Config+0xc8>)
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
900047a0:	2402      	movs	r4, #2
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
900047a2:	a80a      	add	r0, sp, #40	; 0x28
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
900047a4:	6a93      	ldr	r3, [r2, #40]	; 0x28
900047a6:	f023 0303 	bic.w	r3, r3, #3
900047aa:	f043 0302 	orr.w	r3, r3, #2
900047ae:	6293      	str	r3, [r2, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLM = 5;
900047b0:	2205      	movs	r2, #5
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
900047b2:	2300      	movs	r3, #0
  RCC_OscInitStruct.PLL.PLLP = 2;
900047b4:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLM = 5;
900047b6:	9215      	str	r2, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLN = 160;
900047b8:	22a0      	movs	r2, #160	; 0xa0
  RCC_OscInitStruct.PLL.PLLR = 2;
900047ba:	9419      	str	r4, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLN = 160;
900047bc:	9216      	str	r2, [sp, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 20;
900047be:	2214      	movs	r2, #20
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900047c0:	ed9f 7b11 	vldr	d7, [pc, #68]	; 90004808 <SystemClock_Config+0xb8>
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
900047c4:	e9cd 331b 	strd	r3, r3, [sp, #108]	; 0x6c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
900047c8:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLQ = 20;
900047ca:	9218      	str	r2, [sp, #96]	; 0x60
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900047cc:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
900047d0:	931a      	str	r3, [sp, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
900047d2:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
900047d6:	f009 fb05 	bl	9000dde4 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
900047da:	223f      	movs	r2, #63	; 0x3f
900047dc:	2303      	movs	r3, #3
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
900047de:	4621      	mov	r1, r4
900047e0:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
900047e2:	e9cd 2302 	strd	r2, r3, [sp, #8]
900047e6:	2200      	movs	r2, #0
900047e8:	2308      	movs	r3, #8
900047ea:	e9cd 2304 	strd	r2, r3, [sp, #16]
900047ee:	2240      	movs	r2, #64	; 0x40
900047f0:	2340      	movs	r3, #64	; 0x40
900047f2:	e9cd 2306 	strd	r2, r3, [sp, #24]
900047f6:	f44f 6280 	mov.w	r2, #1024	; 0x400
900047fa:	2340      	movs	r3, #64	; 0x40
900047fc:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90004800:	f009 fe84 	bl	9000e50c <HAL_RCC_ClockConfig>
}
90004804:	b01e      	add	sp, #120	; 0x78
90004806:	bd10      	pop	{r4, pc}
90004808:	00000001 	.word	0x00000001
9000480c:	00010000 	.word	0x00010000
90004810:	58000400 	.word	0x58000400
90004814:	58024800 	.word	0x58024800
90004818:	58024400 	.word	0x58024400
9000481c:	00000000 	.word	0x00000000

90004820 <main>:
{
90004820:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90004822:	2400      	movs	r4, #0
{
90004824:	b09a      	sub	sp, #104	; 0x68
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90004826:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90004828:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
9000482a:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
9000482c:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
90004830:	e9cd 440e 	strd	r4, r4, [sp, #56]	; 0x38
  HAL_MPU_Disable();
90004834:	f005 fc44 	bl	9000a0c0 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90004838:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
9000483c:	49d6      	ldr	r1, [pc, #856]	; (90004b98 <main+0x378>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000483e:	a80c      	add	r0, sp, #48	; 0x30
  MPU_InitStruct.BaseAddress = 0x24000000;
90004840:	930d      	str	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90004842:	4bd6      	ldr	r3, [pc, #856]	; (90004b9c <main+0x37c>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90004844:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90004848:	e9cd 130e 	strd	r1, r3, [sp, #56]	; 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000484c:	f005 fc56 	bl	9000a0fc <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90004850:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004854:	a80c      	add	r0, sp, #48	; 0x30
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90004856:	f88d 403b 	strb.w	r4, [sp, #59]	; 0x3b
  MPU_InitStruct.BaseAddress = 0x90000000;
9000485a:	930d      	str	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
9000485c:	f8ad 403e 	strh.w	r4, [sp, #62]	; 0x3e
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90004860:	f88d 5031 	strb.w	r5, [sp, #49]	; 0x31
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90004864:	f88d 7038 	strb.w	r7, [sp, #56]	; 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004868:	f005 fc48 	bl	9000a0fc <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
9000486c:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000486e:	a80c      	add	r0, sp, #48	; 0x30
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90004870:	f8ad 603b 	strh.w	r6, [sp, #59]	; 0x3b
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90004874:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90004878:	231a      	movs	r3, #26
9000487a:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
9000487e:	f240 1301 	movw	r3, #257	; 0x101
90004882:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004886:	f005 fc39 	bl	9000a0fc <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
9000488a:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000488e:	a80c      	add	r0, sp, #48	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90004890:	f8ad 403e 	strh.w	r4, [sp, #62]	; 0x3e

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90004894:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90004896:	f8ad 303b 	strh.w	r3, [sp, #59]	; 0x3b
  MPU_InitStruct.BaseAddress = 0xD0000000;
9000489a:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
9000489e:	f88d 7038 	strb.w	r7, [sp, #56]	; 0x38
  MPU_InitStruct.BaseAddress = 0xD0000000;
900048a2:	930d      	str	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
900048a4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900048a8:	f005 fc28 	bl	9000a0fc <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900048ac:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900048ae:	a80c      	add	r0, sp, #48	; 0x30
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
900048b0:	f88d 603b 	strb.w	r6, [sp, #59]	; 0x3b
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900048b4:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
900048b8:	f88d 4031 	strb.w	r4, [sp, #49]	; 0x31
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900048bc:	f88d 503e 	strb.w	r5, [sp, #62]	; 0x3e
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900048c0:	f005 fc1c 	bl	9000a0fc <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
900048c4:	4620      	mov	r0, r4
900048c6:	f005 fc09 	bl	9000a0dc <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
900048ca:	4ab5      	ldr	r2, [pc, #724]	; (90004ba0 <main+0x380>)
900048cc:	6953      	ldr	r3, [r2, #20]
900048ce:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
900048d2:	d111      	bne.n	900048f8 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
900048d4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900048d8:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
900048dc:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
900048e0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900048e4:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
900048e8:	6953      	ldr	r3, [r2, #20]
900048ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
900048ee:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
900048f0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900048f4:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
900048f8:	48a9      	ldr	r0, [pc, #676]	; (90004ba0 <main+0x380>)
900048fa:	6943      	ldr	r3, [r0, #20]
900048fc:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90004900:	d124      	bne.n	9000494c <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90004902:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90004906:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
9000490a:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
9000490e:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90004912:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90004916:	f3c5 05c9 	ubfx	r5, r5, #3, #10
9000491a:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
9000491c:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90004920:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90004922:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90004926:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90004928:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
9000492c:	1c5a      	adds	r2, r3, #1
9000492e:	d1f8      	bne.n	90004922 <main+0x102>
    } while(sets-- != 0U);
90004930:	3c20      	subs	r4, #32
90004932:	f114 0f20 	cmn.w	r4, #32
90004936:	d1f1      	bne.n	9000491c <main+0xfc>
90004938:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
9000493c:	6943      	ldr	r3, [r0, #20]
9000493e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90004942:	6143      	str	r3, [r0, #20]
90004944:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004948:	f3bf 8f6f 	isb	sy
  HAL_Init();
9000494c:	f005 fafe 	bl	90009f4c <HAL_Init>
  SystemClock_Config();
90004950:	f7ff fefe 	bl	90004750 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90004954:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004956:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90004958:	4d92      	ldr	r5, [pc, #584]	; (90004ba4 <main+0x384>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
9000495a:	21c0      	movs	r1, #192	; 0xc0
9000495c:	4892      	ldr	r0, [pc, #584]	; (90004ba8 <main+0x388>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000495e:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90004960:	4622      	mov	r2, r4
  hsdram2.Init.SDBank = FMC_SDRAM_BANK2;
90004962:	f04f 0801 	mov.w	r8, #1
  hltdc.Instance = LTDC;
90004966:	4e91      	ldr	r6, [pc, #580]	; (90004bac <main+0x38c>)
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90004968:	f04f 0902 	mov.w	r9, #2
  hdma2d.Instance = DMA2D;
9000496c:	4f90      	ldr	r7, [pc, #576]	; (90004bb0 <main+0x390>)
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
9000496e:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004972:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
90004976:	e9cd 440e 	strd	r4, r4, [sp, #56]	; 0x38
  __HAL_RCC_GPIOK_CLK_ENABLE();
9000497a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
9000497e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90004982:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004986:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
9000498a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
9000498e:	9301      	str	r3, [sp, #4]
90004990:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90004992:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004996:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9000499a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
9000499e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
900049a2:	f003 0340 	and.w	r3, r3, #64	; 0x40
900049a6:	9302      	str	r3, [sp, #8]
900049a8:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
900049aa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
900049ae:	f043 0304 	orr.w	r3, r3, #4
900049b2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
900049b6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
900049ba:	f003 0304 	and.w	r3, r3, #4
900049be:	9303      	str	r3, [sp, #12]
900049c0:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOI_CLK_ENABLE();
900049c2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
900049c6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
900049ca:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
900049ce:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
900049d2:	f403 7380 	and.w	r3, r3, #256	; 0x100
900049d6:	9304      	str	r3, [sp, #16]
900049d8:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900049da:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
900049de:	f043 0310 	orr.w	r3, r3, #16
900049e2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
900049e6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
900049ea:	f003 0310 	and.w	r3, r3, #16
900049ee:	9305      	str	r3, [sp, #20]
900049f0:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
900049f2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
900049f6:	f043 0302 	orr.w	r3, r3, #2
900049fa:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
900049fe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a02:	f003 0302 	and.w	r3, r3, #2
90004a06:	9306      	str	r3, [sp, #24]
90004a08:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90004a0a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a0e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90004a12:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004a16:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a1a:	f403 7300 	and.w	r3, r3, #512	; 0x200
90004a1e:	9307      	str	r3, [sp, #28]
90004a20:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90004a22:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a26:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90004a2a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004a2e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a32:	f003 0380 	and.w	r3, r3, #128	; 0x80
90004a36:	9308      	str	r3, [sp, #32]
90004a38:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90004a3a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a3e:	f043 0308 	orr.w	r3, r3, #8
90004a42:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004a46:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a4a:	f003 0308 	and.w	r3, r3, #8
90004a4e:	9309      	str	r3, [sp, #36]	; 0x24
90004a50:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOF_CLK_ENABLE();
90004a52:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a56:	f043 0320 	orr.w	r3, r3, #32
90004a5a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004a5e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a62:	f003 0320 	and.w	r3, r3, #32
90004a66:	930a      	str	r3, [sp, #40]	; 0x28
90004a68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  __HAL_RCC_GPIOA_CLK_ENABLE();
90004a6a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a6e:	f043 0301 	orr.w	r3, r3, #1
90004a72:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004a76:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004a7a:	f003 0301 	and.w	r3, r3, #1
90004a7e:	930b      	str	r3, [sp, #44]	; 0x2c
90004a80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90004a82:	f006 fce1 	bl	9000b448 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90004a86:	4622      	mov	r2, r4
90004a88:	2180      	movs	r1, #128	; 0x80
90004a8a:	484a      	ldr	r0, [pc, #296]	; (90004bb4 <main+0x394>)
90004a8c:	f006 fcdc 	bl	9000b448 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90004a90:	4622      	mov	r2, r4
90004a92:	2108      	movs	r1, #8
90004a94:	4848      	ldr	r0, [pc, #288]	; (90004bb8 <main+0x398>)
90004a96:	f006 fcd7 	bl	9000b448 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90004a9a:	2201      	movs	r2, #1
90004a9c:	4847      	ldr	r0, [pc, #284]	; (90004bbc <main+0x39c>)
90004a9e:	4611      	mov	r1, r2
90004aa0:	f006 fcd2 	bl	9000b448 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90004aa4:	4622      	mov	r2, r4
90004aa6:	2144      	movs	r1, #68	; 0x44
90004aa8:	4845      	ldr	r0, [pc, #276]	; (90004bc0 <main+0x3a0>)
90004aaa:	f006 fccd 	bl	9000b448 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90004aae:	22c0      	movs	r2, #192	; 0xc0
90004ab0:	2301      	movs	r3, #1
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90004ab2:	a90c      	add	r1, sp, #48	; 0x30
90004ab4:	483c      	ldr	r0, [pc, #240]	; (90004ba8 <main+0x388>)
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90004ab6:	ed9f 8b34 	vldr	d8, [pc, #208]	; 90004b88 <main+0x368>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90004aba:	ed9f 9b35 	vldr	d9, [pc, #212]	; 90004b90 <main+0x370>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90004abe:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
90004ac2:	ed8d 8b0e 	vstr	d8, [sp, #56]	; 0x38
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90004ac6:	f006 fab7 	bl	9000b038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90004aca:	2280      	movs	r2, #128	; 0x80
90004acc:	2301      	movs	r3, #1
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90004ace:	a90c      	add	r1, sp, #48	; 0x30
90004ad0:	4838      	ldr	r0, [pc, #224]	; (90004bb4 <main+0x394>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90004ad2:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
90004ad6:	ed8d 9b0e 	vstr	d9, [sp, #56]	; 0x38
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90004ada:	f006 faad 	bl	9000b038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90004ade:	2208      	movs	r2, #8
90004ae0:	2301      	movs	r3, #1
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90004ae2:	a90c      	add	r1, sp, #48	; 0x30
90004ae4:	4834      	ldr	r0, [pc, #208]	; (90004bb8 <main+0x398>)
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90004ae6:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
90004aea:	ed8d 8b0e 	vstr	d8, [sp, #56]	; 0x38
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90004aee:	f006 faa3 	bl	9000b038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
90004af2:	2201      	movs	r2, #1
90004af4:	2301      	movs	r3, #1
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90004af6:	a90c      	add	r1, sp, #48	; 0x30
90004af8:	4830      	ldr	r0, [pc, #192]	; (90004bbc <main+0x39c>)
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
90004afa:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
90004afe:	ed8d 9b0e 	vstr	d9, [sp, #56]	; 0x38
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90004b02:	f006 fa99 	bl	9000b038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90004b06:	2204      	movs	r2, #4
90004b08:	2301      	movs	r3, #1
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90004b0a:	a90c      	add	r1, sp, #48	; 0x30
90004b0c:	482c      	ldr	r0, [pc, #176]	; (90004bc0 <main+0x3a0>)
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90004b0e:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
90004b12:	ed8d 9b0e 	vstr	d9, [sp, #56]	; 0x38
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90004b16:	f006 fa8f 	bl	9000b038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90004b1a:	2240      	movs	r2, #64	; 0x40
90004b1c:	2301      	movs	r3, #1
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90004b1e:	a90c      	add	r1, sp, #48	; 0x30
90004b20:	4827      	ldr	r0, [pc, #156]	; (90004bc0 <main+0x3a0>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90004b22:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
90004b26:	ed8d 8b0e 	vstr	d8, [sp, #56]	; 0x38
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90004b2a:	f006 fa85 	bl	9000b038 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90004b2e:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90004b32:	4622      	mov	r2, r4
90004b34:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90004b36:	ea43 0308 	orr.w	r3, r3, r8
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90004b3a:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90004b3c:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90004b40:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Init.AccumulatedActiveH = 283;
90004b44:	f240 250a 	movw	r5, #522	; 0x20a
  __HAL_RCC_MDMA_CLK_ENABLE();
90004b48:	ea03 0308 	and.w	r3, r3, r8
90004b4c:	9300      	str	r3, [sp, #0]
90004b4e:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90004b50:	f005 fa56 	bl	9000a000 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90004b54:	207a      	movs	r0, #122	; 0x7a
90004b56:	f005 fa91 	bl	9000a07c <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90004b5a:	2234      	movs	r2, #52	; 0x34
90004b5c:	4621      	mov	r1, r4
90004b5e:	a80c      	add	r0, sp, #48	; 0x30
90004b60:	f026 ffbc 	bl	9002badc <memset>
  hltdc.Instance = LTDC;
90004b64:	4b17      	ldr	r3, [pc, #92]	; (90004bc4 <main+0x3a4>)
  hltdc.Init.VerticalSync = 8;
90004b66:	2127      	movs	r1, #39	; 0x27
  hltdc.Init.AccumulatedVBP = 11;
90004b68:	202a      	movs	r0, #42	; 0x2a
  hltdc.Instance = LTDC;
90004b6a:	6033      	str	r3, [r6, #0]
  hltdc.Init.VerticalSync = 8;
90004b6c:	2308      	movs	r3, #8
  hltdc.Init.TotalHeigh = 285;
90004b6e:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.Backcolor.Blue = 0;
90004b72:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90004b74:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  hltdc.Init.VerticalSync = 8;
90004b78:	e9c6 1305 	strd	r1, r3, [r6, #20]
  hltdc.Init.AccumulatedVBP = 11;
90004b7c:	230b      	movs	r3, #11
90004b7e:	e9c6 0307 	strd	r0, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90004b82:	f240 131b 	movw	r3, #283	; 0x11b
90004b86:	e01f      	b.n	90004bc8 <main+0x3a8>
90004b88:	00000000 	.word	0x00000000
90004b8c:	00000003 	.word	0x00000003
	...
90004b98:	03000012 	.word	0x03000012
90004b9c:	01010001 	.word	0x01010001
90004ba0:	e000ed00 	.word	0xe000ed00
90004ba4:	58024400 	.word	0x58024400
90004ba8:	58020400 	.word	0x58020400
90004bac:	2400d924 	.word	0x2400d924
90004bb0:	2400d7c4 	.word	0x2400d7c4
90004bb4:	58020c00 	.word	0x58020c00
90004bb8:	58021800 	.word	0x58021800
90004bbc:	58022800 	.word	0x58022800
90004bc0:	58020000 	.word	0x58020000
90004bc4:	50001000 	.word	0x50001000
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90004bc8:	4630      	mov	r0, r6
  hltdc.Init.AccumulatedActiveH = 283;
90004bca:	e9c6 5309 	strd	r5, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90004bce:	f240 131d 	movw	r3, #285	; 0x11d
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90004bd2:	e9c6 4401 	strd	r4, r4, [r6, #4]
  hltdc.Init.TotalHeigh = 285;
90004bd6:	e9c6 c30b 	strd	ip, r3, [r6, #44]	; 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90004bda:	e9c6 4403 	strd	r4, r4, [r6, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90004bde:	f008 fc5d 	bl	9000d49c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90004be2:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90004be6:	f44f 6280 	mov.w	r2, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90004bea:	a90c      	add	r1, sp, #48	; 0x30
  pLayerCfg.WindowX1 = 480;
90004bec:	930d      	str	r3, [sp, #52]	; 0x34
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90004bee:	4630      	mov	r0, r6
  pLayerCfg.ImageWidth = 480;
90004bf0:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.WindowY1 = 272;
90004bf2:	f44f 7388 	mov.w	r3, #272	; 0x110
  pLayerCfg.WindowX0 = 0;
90004bf6:	940c      	str	r4, [sp, #48]	; 0x30
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90004bf8:	2610      	movs	r6, #16
  pLayerCfg.WindowY1 = 272;
90004bfa:	930f      	str	r3, [sp, #60]	; 0x3c
  pLayerCfg.ImageHeight = 272;
90004bfc:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.Alpha = 255;
90004bfe:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowY0 = 0;
90004c00:	940e      	str	r4, [sp, #56]	; 0x38
  pLayerCfg.Alpha = 255;
90004c02:	9311      	str	r3, [sp, #68]	; 0x44
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90004c04:	2305      	movs	r3, #5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90004c06:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
  pLayerCfg.Alpha0 = 0;
90004c0a:	9412      	str	r4, [sp, #72]	; 0x48
  pLayerCfg.FBStartAdress = 0;
90004c0c:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.Backcolor.Blue = 0;
90004c0e:	f8ad 4060 	strh.w	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Red = 0;
90004c12:	f88d 4062 	strb.w	r4, [sp, #98]	; 0x62
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90004c16:	e9cd 2313 	strd	r2, r3, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90004c1a:	4622      	mov	r2, r4
90004c1c:	f008 fd12 	bl	9000d644 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90004c20:	4b49      	ldr	r3, [pc, #292]	; (90004d48 <main+0x528>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90004c22:	4638      	mov	r0, r7
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90004c24:	65fc      	str	r4, [r7, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
90004c26:	603b      	str	r3, [r7, #0]
  hdma2d.Init.OutputOffset = 0;
90004c28:	60fc      	str	r4, [r7, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90004c2a:	e9c7 4911 	strd	r4, r9, [r7, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90004c2e:	e9c7 4413 	strd	r4, r4, [r7, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90004c32:	e9c7 4415 	strd	r4, r4, [r7, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90004c36:	e9c7 4901 	strd	r4, r9, [r7, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90004c3a:	f005 fb07 	bl	9000a24c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90004c3e:	4641      	mov	r1, r8
90004c40:	4638      	mov	r0, r7
90004c42:	f005 fbdb 	bl	9000a3fc <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90004c46:	4841      	ldr	r0, [pc, #260]	; (90004d4c <main+0x52c>)
90004c48:	4b41      	ldr	r3, [pc, #260]	; (90004d50 <main+0x530>)
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90004c4a:	f44f 6c00 	mov.w	ip, #2048	; 0x800
  SdramTiming.LoadToActiveDelay = 2;
90004c4e:	2202      	movs	r2, #2
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90004c50:	a90c      	add	r1, sp, #48	; 0x30
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90004c52:	6003      	str	r3, [r0, #0]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90004c54:	2340      	movs	r3, #64	; 0x40
  SdramTiming.RCDDelay = 2;
90004c56:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90004c5a:	f8c0 a00c 	str.w	sl, [r0, #12]
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90004c5e:	61c4      	str	r4, [r0, #28]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90004c60:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90004c62:	e9c0 6304 	strd	r6, r3, [r0, #16]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90004c66:	f44f 73c0 	mov.w	r3, #384	; 0x180
90004c6a:	6183      	str	r3, [r0, #24]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90004c6c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90004c70:	e9c0 c308 	strd	ip, r3, [r0, #32]
  SdramTiming.LoadToActiveDelay = 2;
90004c74:	2307      	movs	r3, #7
90004c76:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
90004c7a:	2204      	movs	r2, #4
90004c7c:	2307      	movs	r3, #7
90004c7e:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
90004c82:	2205      	movs	r2, #5
90004c84:	2302      	movs	r3, #2
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90004c86:	e9c0 8401 	strd	r8, r4, [r0, #4]
  SdramTiming.LoadToActiveDelay = 2;
90004c8a:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90004c8e:	f00a fedf 	bl	9000fa50 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90004c92:	4620      	mov	r0, r4
90004c94:	f004 feec 	bl	90009a70 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90004c98:	4620      	mov	r0, r4
90004c9a:	f004 ff35 	bl	90009b08 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90004c9e:	f7fb fed7 	bl	90000a50 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90004ca2:	4b2c      	ldr	r3, [pc, #176]	; (90004d54 <main+0x534>)
90004ca4:	482c      	ldr	r0, [pc, #176]	; (90004d58 <main+0x538>)
90004ca6:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90004ca8:	f007 fbae 	bl	9000c408 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90004cac:	482b      	ldr	r0, [pc, #172]	; (90004d5c <main+0x53c>)
90004cae:	4b2c      	ldr	r3, [pc, #176]	; (90004d60 <main+0x540>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90004cb0:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90004cb2:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90004cb4:	f8c0 8020 	str.w	r8, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90004cb8:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90004cbc:	f005 fa50 	bl	9000a160 <HAL_CRC_Init>
  hfdcan1.Instance = FDCAN1;
90004cc0:	4828      	ldr	r0, [pc, #160]	; (90004d64 <main+0x544>)
  hfdcan1.Init.NominalPrescaler = 10;
90004cc2:	230a      	movs	r3, #10
  hfdcan1.Instance = FDCAN1;
90004cc4:	4a28      	ldr	r2, [pc, #160]	; (90004d68 <main+0x548>)
  hfdcan1.Init.AutoRetransmission = DISABLE;
90004cc6:	8204      	strh	r4, [r0, #16]
  hfdcan1.Init.NominalPrescaler = 10;
90004cc8:	6143      	str	r3, [r0, #20]
  hfdcan1.Init.NominalTimeSeg1 = 13;
90004cca:	230d      	movs	r3, #13
  hfdcan1.Instance = FDCAN1;
90004ccc:	6002      	str	r2, [r0, #0]
  hfdcan1.Init.NominalTimeSeg1 = 13;
90004cce:	61c3      	str	r3, [r0, #28]
  hfdcan1.Init.NominalTimeSeg2 = 2;
90004cd0:	f8c0 9020 	str.w	r9, [r0, #32]
  hfdcan1.Init.ProtocolException = DISABLE;
90004cd4:	7484      	strb	r4, [r0, #18]
  hfdcan1.Init.NominalSyncJumpWidth = 1;
90004cd6:	f8c0 8018 	str.w	r8, [r0, #24]
  hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
90004cda:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hfdcan1.Init.DataSyncJumpWidth = 1;
90004cde:	e9c0 8809 	strd	r8, r8, [r0, #36]	; 0x24
  hfdcan1.Init.DataTimeSeg2 = 1;
90004ce2:	e9c0 880b 	strd	r8, r8, [r0, #44]	; 0x2c
  hfdcan1.Init.StdFiltersNbr = 0;
90004ce6:	e9c0 440d 	strd	r4, r4, [r0, #52]	; 0x34
  hfdcan1.Init.RxFifo0ElmtsNbr = 1;
90004cea:	e9c0 880f 	strd	r8, r8, [r0, #60]	; 0x3c
  hfdcan1.Init.RxFifo1ElmtsNbr = 0;
90004cee:	e9c0 a411 	strd	sl, r4, [r0, #68]	; 0x44
  hfdcan1.Init.RxBuffersNbr = 0;
90004cf2:	e9c0 a413 	strd	sl, r4, [r0, #76]	; 0x4c
  hfdcan1.Init.TxEventsNbr = 0;
90004cf6:	e9c0 a415 	strd	sl, r4, [r0, #84]	; 0x54
  hfdcan1.Init.TxFifoQueueElmtsNbr = 1;
90004cfa:	e9c0 4817 	strd	r4, r8, [r0, #92]	; 0x5c
  hfdcan1.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
90004cfe:	e9c0 4a19 	strd	r4, sl, [r0, #100]	; 0x64
  if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
90004d02:	f005 fc2f 	bl	9000a564 <HAL_FDCAN_Init>
  MX_USART3_UART_Init();
90004d06:	f7ff fc37 	bl	90004578 <MX_USART3_UART_Init>
  MX_TouchGFX_Init();
90004d0a:	f7fb fea5 	bl	90000a58 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90004d0e:	f7fb fea1 	bl	90000a54 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90004d12:	f00b ffef 	bl	90010cf4 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90004d16:	4a15      	ldr	r2, [pc, #84]	; (90004d6c <main+0x54c>)
90004d18:	4621      	mov	r1, r4
90004d1a:	4815      	ldr	r0, [pc, #84]	; (90004d70 <main+0x550>)
90004d1c:	f00c f816 	bl	90010d4c <osThreadNew>
90004d20:	4b14      	ldr	r3, [pc, #80]	; (90004d74 <main+0x554>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004d22:	4a15      	ldr	r2, [pc, #84]	; (90004d78 <main+0x558>)
90004d24:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90004d26:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004d28:	4814      	ldr	r0, [pc, #80]	; (90004d7c <main+0x55c>)
90004d2a:	f00c f80f 	bl	90010d4c <osThreadNew>
90004d2e:	4b14      	ldr	r3, [pc, #80]	; (90004d80 <main+0x560>)
90004d30:	4605      	mov	r5, r0
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90004d32:	4a14      	ldr	r2, [pc, #80]	; (90004d84 <main+0x564>)
90004d34:	4621      	mov	r1, r4
90004d36:	4814      	ldr	r0, [pc, #80]	; (90004d88 <main+0x568>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004d38:	601d      	str	r5, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90004d3a:	f00c f807 	bl	90010d4c <osThreadNew>
90004d3e:	4b13      	ldr	r3, [pc, #76]	; (90004d8c <main+0x56c>)
90004d40:	6018      	str	r0, [r3, #0]
  osKernelStart();
90004d42:	f00b ffe9 	bl	90010d18 <osKernelStart>
  while (1)
90004d46:	e7fe      	b.n	90004d46 <main+0x526>
90004d48:	52001000 	.word	0x52001000
90004d4c:	2400daa4 	.word	0x2400daa4
90004d50:	52004140 	.word	0x52004140
90004d54:	52003000 	.word	0x52003000
90004d58:	2400d8cc 	.word	0x2400d8cc
90004d5c:	2400d7a0 	.word	0x2400d7a0
90004d60:	58024c00 	.word	0x58024c00
90004d64:	2400d82c 	.word	0x2400d82c
90004d68:	4000a000 	.word	0x4000a000
90004d6c:	9002e958 	.word	0x9002e958
90004d70:	900045c9 	.word	0x900045c9
90004d74:	2400d79c 	.word	0x2400d79c
90004d78:	9002e934 	.word	0x9002e934
90004d7c:	90000a69 	.word	0x90000a69
90004d80:	2400d73c 	.word	0x2400d73c
90004d84:	9002e97c 	.word	0x9002e97c
90004d88:	9000309d 	.word	0x9000309d
90004d8c:	2400db78 	.word	0x2400db78

90004d90 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90004d90:	4b03      	ldr	r3, [pc, #12]	; (90004da0 <HAL_TIM_PeriodElapsedCallback+0x10>)
90004d92:	6802      	ldr	r2, [r0, #0]
90004d94:	429a      	cmp	r2, r3
90004d96:	d000      	beq.n	90004d9a <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90004d98:	4770      	bx	lr
    HAL_IncTick();
90004d9a:	f005 b907 	b.w	90009fac <HAL_IncTick>
90004d9e:	bf00      	nop
90004da0:	40001000 	.word	0x40001000

90004da4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90004da4:	4770      	bx	lr
90004da6:	bf00      	nop

90004da8 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004da8:	4b0b      	ldr	r3, [pc, #44]	; (90004dd8 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004daa:	2200      	movs	r2, #0
90004dac:	210f      	movs	r1, #15
90004dae:	f06f 0001 	mvn.w	r0, #1
{
90004db2:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004db4:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
90004db8:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004dba:	f044 0402 	orr.w	r4, r4, #2
90004dbe:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
90004dc2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
90004dc6:	f003 0302 	and.w	r3, r3, #2
90004dca:	9301      	str	r3, [sp, #4]
90004dcc:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90004dce:	b003      	add	sp, #12
90004dd0:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004dd4:	f005 b914 	b.w	9000a000 <HAL_NVIC_SetPriority>
90004dd8:	58024400 	.word	0x58024400

90004ddc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90004ddc:	4b0a      	ldr	r3, [pc, #40]	; (90004e08 <HAL_CRC_MspInit+0x2c>)
90004dde:	6802      	ldr	r2, [r0, #0]
90004de0:	429a      	cmp	r2, r3
90004de2:	d000      	beq.n	90004de6 <HAL_CRC_MspInit+0xa>
90004de4:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90004de6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
90004dea:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90004dec:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90004df0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90004df4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90004df8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
90004dfc:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90004e00:	9301      	str	r3, [sp, #4]
90004e02:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90004e04:	b002      	add	sp, #8
90004e06:	4770      	bx	lr
90004e08:	58024c00 	.word	0x58024c00

90004e0c <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90004e0c:	4b0f      	ldr	r3, [pc, #60]	; (90004e4c <HAL_DMA2D_MspInit+0x40>)
90004e0e:	6802      	ldr	r2, [r0, #0]
90004e10:	429a      	cmp	r2, r3
90004e12:	d000      	beq.n	90004e16 <HAL_DMA2D_MspInit+0xa>
90004e14:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004e16:	4b0e      	ldr	r3, [pc, #56]	; (90004e50 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90004e18:	205a      	movs	r0, #90	; 0x5a
90004e1a:	2200      	movs	r2, #0
90004e1c:	2105      	movs	r1, #5
{
90004e1e:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004e20:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
90004e24:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004e26:	f044 0410 	orr.w	r4, r4, #16
90004e2a:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90004e2e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90004e32:	f003 0310 	and.w	r3, r3, #16
90004e36:	9301      	str	r3, [sp, #4]
90004e38:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90004e3a:	f005 f8e1 	bl	9000a000 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90004e3e:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90004e40:	b002      	add	sp, #8
90004e42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90004e46:	f005 b919 	b.w	9000a07c <HAL_NVIC_EnableIRQ>
90004e4a:	bf00      	nop
90004e4c:	52001000 	.word	0x52001000
90004e50:	58024400 	.word	0x58024400
90004e54:	00000000 	.word	0x00000000

90004e58 <HAL_FDCAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hfdcan: FDCAN handle pointer
* @retval None
*/
void HAL_FDCAN_MspInit(FDCAN_HandleTypeDef* hfdcan)
{
90004e58:	b510      	push	{r4, lr}
90004e5a:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004e5c:	2100      	movs	r1, #0
{
90004e5e:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004e60:	22c0      	movs	r2, #192	; 0xc0
90004e62:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004e64:	9106      	str	r1, [sp, #24]
90004e66:	e9cd 1102 	strd	r1, r1, [sp, #8]
90004e6a:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004e6e:	f026 fe35 	bl	9002badc <memset>
  if(hfdcan->Instance==FDCAN1)
90004e72:	4b29      	ldr	r3, [pc, #164]	; (90004f18 <HAL_FDCAN_MspInit+0xc0>)
90004e74:	6822      	ldr	r2, [r4, #0]
90004e76:	429a      	cmp	r2, r3
90004e78:	d001      	beq.n	90004e7e <HAL_FDCAN_MspInit+0x26>
  /* USER CODE BEGIN FDCAN1_MspInit 1 */

  /* USER CODE END FDCAN1_MspInit 1 */
  }

}
90004e7a:	b038      	add	sp, #224	; 0xe0
90004e7c:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FDCAN;
90004e7e:	ed9f 7b20 	vldr	d7, [pc, #128]	; 90004f00 <HAL_FDCAN_MspInit+0xa8>
    PeriphClkInitStruct.FdcanClockSelection = RCC_FDCANCLKSOURCE_PLL;
90004e82:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004e86:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FDCAN;
90004e88:	ed8d 7b08 	vstr	d7, [sp, #32]
    PeriphClkInitStruct.FdcanClockSelection = RCC_FDCANCLKSOURCE_PLL;
90004e8c:	9324      	str	r3, [sp, #144]	; 0x90
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004e8e:	f009 fe55 	bl	9000eb3c <HAL_RCCEx_PeriphCLKConfig>
90004e92:	bb80      	cbnz	r0, 90004ef6 <HAL_FDCAN_MspInit+0x9e>
    __HAL_RCC_FDCAN_CLK_ENABLE();
90004e94:	4b21      	ldr	r3, [pc, #132]	; (90004f1c <HAL_FDCAN_MspInit+0xc4>)
    GPIO_InitStruct.Alternate = GPIO_AF9_FDCAN1;
90004e96:	2409      	movs	r4, #9
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004e98:	a902      	add	r1, sp, #8
90004e9a:	4821      	ldr	r0, [pc, #132]	; (90004f20 <HAL_FDCAN_MspInit+0xc8>)
    __HAL_RCC_FDCAN_CLK_ENABLE();
90004e9c:	f8d3 20ec 	ldr.w	r2, [r3, #236]	; 0xec
90004ea0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
90004ea4:	f8c3 20ec 	str.w	r2, [r3, #236]	; 0xec
90004ea8:	f8d3 20ec 	ldr.w	r2, [r3, #236]	; 0xec
90004eac:	f402 7280 	and.w	r2, r2, #256	; 0x100
90004eb0:	9200      	str	r2, [sp, #0]
90004eb2:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004eb4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90004eb8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_13;
90004ebc:	ed9f 7b12 	vldr	d7, [pc, #72]	; 90004f08 <HAL_FDCAN_MspInit+0xb0>
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004ec0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90004ec4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF9_FDCAN1;
90004ec8:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004eca:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_13;
90004ece:	ed8d 7b02 	vstr	d7, [sp, #8]
90004ed2:	ed9f 7b0f 	vldr	d7, [pc, #60]	; 90004f10 <HAL_FDCAN_MspInit+0xb8>
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004ed6:	9301      	str	r3, [sp, #4]
90004ed8:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_13;
90004eda:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004ede:	f006 f8ab 	bl	9000b038 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(FDCAN1_IT0_IRQn, 5, 0);
90004ee2:	2200      	movs	r2, #0
90004ee4:	2105      	movs	r1, #5
90004ee6:	2013      	movs	r0, #19
90004ee8:	f005 f88a 	bl	9000a000 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(FDCAN1_IT0_IRQn);
90004eec:	2013      	movs	r0, #19
90004eee:	f005 f8c5 	bl	9000a07c <HAL_NVIC_EnableIRQ>
}
90004ef2:	b038      	add	sp, #224	; 0xe0
90004ef4:	bd10      	pop	{r4, pc}
      Error_Handler();
90004ef6:	f7ff ff55 	bl	90004da4 <Error_Handler>
90004efa:	e7cb      	b.n	90004e94 <HAL_FDCAN_MspInit+0x3c>
90004efc:	f3af 8000 	nop.w
90004f00:	00008000 	.word	0x00008000
90004f04:	00000000 	.word	0x00000000
90004f08:	00006000 	.word	0x00006000
90004f0c:	00000002 	.word	0x00000002
	...
90004f18:	4000a000 	.word	0x4000a000
90004f1c:	58024400 	.word	0x58024400
90004f20:	58021c00 	.word	0x58021c00

90004f24 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90004f24:	4b3f      	ldr	r3, [pc, #252]	; (90005024 <HAL_JPEG_MspInit+0x100>)
90004f26:	6802      	ldr	r2, [r0, #0]
90004f28:	429a      	cmp	r2, r3
90004f2a:	d000      	beq.n	90004f2e <HAL_JPEG_MspInit+0xa>
90004f2c:	4770      	bx	lr
{
90004f2e:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90004f30:	4b3d      	ldr	r3, [pc, #244]	; (90005028 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90004f32:	2211      	movs	r2, #17
90004f34:	4e3d      	ldr	r6, [pc, #244]	; (9000502c <HAL_JPEG_MspInit+0x108>)
{
90004f36:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004f38:	4d3d      	ldr	r5, [pc, #244]	; (90005030 <HAL_JPEG_MspInit+0x10c>)
90004f3a:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90004f3c:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90004f3e:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90004f40:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004f44:	493b      	ldr	r1, [pc, #236]	; (90005034 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90004f46:	f042 0220 	orr.w	r2, r2, #32
90004f4a:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90004f4e:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90004f50:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90004f54:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004f56:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004f5a:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004f5c:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004f5e:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90004f60:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90004f62:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90004f64:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004f68:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
90004f6c:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004f6e:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90004f70:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
90004f74:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004f78:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90004f7a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
90004f7e:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
90004f82:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004f86:	2313      	movs	r3, #19
90004f88:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90004f8a:	2302      	movs	r3, #2
90004f8c:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90004f8e:	f008 fc4f 	bl	9000d830 <HAL_MDMA_Init>
90004f92:	2800      	cmp	r0, #0
90004f94:	d13a      	bne.n	9000500c <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90004f96:	2200      	movs	r2, #0
90004f98:	4824      	ldr	r0, [pc, #144]	; (9000502c <HAL_JPEG_MspInit+0x108>)
90004f9a:	4611      	mov	r1, r2
90004f9c:	f008 fce6 	bl	9000d96c <HAL_MDMA_ConfigPostRequestMask>
90004fa0:	2800      	cmp	r0, #0
90004fa2:	d13c      	bne.n	9000501e <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004fa4:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004fa6:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004fa8:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004faa:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004fac:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90004fae:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004fb0:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90004fb4:	4920      	ldr	r1, [pc, #128]	; (90005038 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004fb6:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90004fb8:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
90004fba:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004fbc:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004fbe:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90004fc2:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90004fc6:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90004fc8:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90004fca:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90004fce:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004fd0:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004fd4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004fd8:	4815      	ldr	r0, [pc, #84]	; (90005030 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004fda:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90004fdc:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004fde:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004fe0:	f008 fc26 	bl	9000d830 <HAL_MDMA_Init>
90004fe4:	b9c0      	cbnz	r0, 90005018 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90004fe6:	2200      	movs	r2, #0
90004fe8:	4811      	ldr	r0, [pc, #68]	; (90005030 <HAL_JPEG_MspInit+0x10c>)
90004fea:	4611      	mov	r1, r2
90004fec:	f008 fcbe 	bl	9000d96c <HAL_MDMA_ConfigPostRequestMask>
90004ff0:	b978      	cbnz	r0, 90005012 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90004ff2:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004ff4:	2079      	movs	r0, #121	; 0x79
90004ff6:	2200      	movs	r2, #0
90004ff8:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90004ffa:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004ffc:	f005 f800 	bl	9000a000 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90005000:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
90005002:	b002      	add	sp, #8
90005004:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90005008:	f005 b838 	b.w	9000a07c <HAL_NVIC_EnableIRQ>
      Error_Handler();
9000500c:	f7ff feca 	bl	90004da4 <Error_Handler>
90005010:	e7c1      	b.n	90004f96 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90005012:	f7ff fec7 	bl	90004da4 <Error_Handler>
90005016:	e7ec      	b.n	90004ff2 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90005018:	f7ff fec4 	bl	90004da4 <Error_Handler>
9000501c:	e7e3      	b.n	90004fe6 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
9000501e:	f7ff fec1 	bl	90004da4 <Error_Handler>
90005022:	e7bf      	b.n	90004fa4 <HAL_JPEG_MspInit+0x80>
90005024:	52003000 	.word	0x52003000
90005028:	58024400 	.word	0x58024400
9000502c:	2400d9cc 	.word	0x2400d9cc
90005030:	2400da38 	.word	0x2400da38
90005034:	52000200 	.word	0x52000200
90005038:	520001c0 	.word	0x520001c0

9000503c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
9000503c:	b5d0      	push	{r4, r6, r7, lr}
9000503e:	b0bc      	sub	sp, #240	; 0xf0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90005040:	2100      	movs	r1, #0
{
90005042:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90005044:	22c0      	movs	r2, #192	; 0xc0
90005046:	a80c      	add	r0, sp, #48	; 0x30
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90005048:	910a      	str	r1, [sp, #40]	; 0x28
9000504a:	e9cd 1106 	strd	r1, r1, [sp, #24]
9000504e:	e9cd 1108 	strd	r1, r1, [sp, #32]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90005052:	f026 fd43 	bl	9002badc <memset>
  if(hltdc->Instance==LTDC)
90005056:	4b4c      	ldr	r3, [pc, #304]	; (90005188 <HAL_LTDC_MspInit+0x14c>)
90005058:	6822      	ldr	r2, [r4, #0]
9000505a:	429a      	cmp	r2, r3
9000505c:	d001      	beq.n	90005062 <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
9000505e:	b03c      	add	sp, #240	; 0xf0
90005060:	bdd0      	pop	{r4, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90005062:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
90005066:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005068:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000506a:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
    PeriphClkInitStruct.PLL3.PLL3M = 5;
9000506e:	2205      	movs	r2, #5
90005070:	23a0      	movs	r3, #160	; 0xa0
90005072:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
90005076:	2202      	movs	r2, #2
90005078:	2302      	movs	r3, #2
9000507a:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
9000507e:	2253      	movs	r2, #83	; 0x53
90005080:	f44f 6300 	mov.w	r3, #2048	; 0x800
90005084:	e9cd 231a 	strd	r2, r3, [sp, #104]	; 0x68
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005088:	f009 fd58 	bl	9000eb3c <HAL_RCCEx_PeriphCLKConfig>
9000508c:	2800      	cmp	r0, #0
9000508e:	d178      	bne.n	90005182 <HAL_LTDC_MspInit+0x146>
    __HAL_RCC_LTDC_CLK_ENABLE();
90005090:	4b3e      	ldr	r3, [pc, #248]	; (9000518c <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90005092:	20fc      	movs	r0, #252	; 0xfc
90005094:	2102      	movs	r1, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90005096:	240e      	movs	r4, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
90005098:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
9000509c:	2600      	movs	r6, #0
9000509e:	2702      	movs	r7, #2
    __HAL_RCC_LTDC_CLK_ENABLE();
900050a0:	f042 0208 	orr.w	r2, r2, #8
900050a4:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
900050a8:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
900050ac:	f002 0208 	and.w	r2, r2, #8
900050b0:	9201      	str	r2, [sp, #4]
900050b2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOK_CLK_ENABLE();
900050b4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900050b8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
900050bc:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900050c0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900050c4:	f402 6280 	and.w	r2, r2, #1024	; 0x400
900050c8:	9202      	str	r2, [sp, #8]
900050ca:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900050cc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900050d0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900050d4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900050d8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900050dc:	f402 7280 	and.w	r2, r2, #256	; 0x100
900050e0:	9203      	str	r2, [sp, #12]
900050e2:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900050e4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900050e8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
900050ec:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900050f0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900050f4:	f402 7200 	and.w	r2, r2, #512	; 0x200
900050f8:	9204      	str	r2, [sp, #16]
900050fa:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900050fc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90005100:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90005104:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90005108:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000510c:	940a      	str	r4, [sp, #40]	; 0x28
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000510e:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90005112:	e9cd 0106 	strd	r0, r1, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90005116:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90005118:	a906      	add	r1, sp, #24
9000511a:	481d      	ldr	r0, [pc, #116]	; (90005190 <HAL_LTDC_MspInit+0x154>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000511c:	9b05      	ldr	r3, [sp, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
9000511e:	e9cd 6708 	strd	r6, r7, [sp, #32]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90005122:	f005 ff89 	bl	9000b038 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90005126:	f24d 2203 	movw	r2, #53763	; 0xd203
9000512a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000512c:	a906      	add	r1, sp, #24
9000512e:	4819      	ldr	r0, [pc, #100]	; (90005194 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90005130:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90005132:	e9cd 2306 	strd	r2, r3, [sp, #24]
90005136:	e9cd 6708 	strd	r6, r7, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000513a:	f005 ff7d 	bl	9000b038 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
9000513e:	f64f 72fb 	movw	r2, #65531	; 0xfffb
90005142:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90005144:	a906      	add	r1, sp, #24
90005146:	4814      	ldr	r0, [pc, #80]	; (90005198 <HAL_LTDC_MspInit+0x15c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90005148:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
9000514a:	e9cd 2306 	strd	r2, r3, [sp, #24]
9000514e:	e9cd 6708 	strd	r6, r7, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90005152:	f005 ff71 	bl	9000b038 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90005156:	2302      	movs	r3, #2
90005158:	f44f 7200 	mov.w	r2, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000515c:	a906      	add	r1, sp, #24
9000515e:	480f      	ldr	r0, [pc, #60]	; (9000519c <HAL_LTDC_MspInit+0x160>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90005160:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90005162:	e9cd 2306 	strd	r2, r3, [sp, #24]
90005166:	e9cd 6708 	strd	r6, r7, [sp, #32]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000516a:	f005 ff65 	bl	9000b038 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
9000516e:	2200      	movs	r2, #0
90005170:	2105      	movs	r1, #5
90005172:	2058      	movs	r0, #88	; 0x58
90005174:	f004 ff44 	bl	9000a000 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90005178:	2058      	movs	r0, #88	; 0x58
9000517a:	f004 ff7f 	bl	9000a07c <HAL_NVIC_EnableIRQ>
}
9000517e:	b03c      	add	sp, #240	; 0xf0
90005180:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90005182:	f7ff fe0f 	bl	90004da4 <Error_Handler>
90005186:	e783      	b.n	90005090 <HAL_LTDC_MspInit+0x54>
90005188:	50001000 	.word	0x50001000
9000518c:	58024400 	.word	0x58024400
90005190:	58022800 	.word	0x58022800
90005194:	58022000 	.word	0x58022000
90005198:	58022400 	.word	0x58022400
9000519c:	58021c00 	.word	0x58021c00

900051a0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
900051a0:	b510      	push	{r4, lr}
900051a2:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900051a4:	2100      	movs	r1, #0
{
900051a6:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900051a8:	22c0      	movs	r2, #192	; 0xc0
900051aa:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900051ac:	9106      	str	r1, [sp, #24]
900051ae:	e9cd 1102 	strd	r1, r1, [sp, #8]
900051b2:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900051b6:	f026 fc91 	bl	9002badc <memset>
  if(huart->Instance==USART3)
900051ba:	4b21      	ldr	r3, [pc, #132]	; (90005240 <HAL_UART_MspInit+0xa0>)
900051bc:	6822      	ldr	r2, [r4, #0]
900051be:	429a      	cmp	r2, r3
900051c0:	d001      	beq.n	900051c6 <HAL_UART_MspInit+0x26>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
900051c2:	b038      	add	sp, #224	; 0xe0
900051c4:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
900051c6:	2202      	movs	r2, #2
900051c8:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900051ca:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
900051cc:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900051d0:	f009 fcb4 	bl	9000eb3c <HAL_RCCEx_PeriphCLKConfig>
900051d4:	bb40      	cbnz	r0, 90005228 <HAL_UART_MspInit+0x88>
    __HAL_RCC_USART3_CLK_ENABLE();
900051d6:	4b1b      	ldr	r3, [pc, #108]	; (90005244 <HAL_UART_MspInit+0xa4>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
900051d8:	2407      	movs	r4, #7
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
900051da:	a902      	add	r1, sp, #8
900051dc:	481a      	ldr	r0, [pc, #104]	; (90005248 <HAL_UART_MspInit+0xa8>)
    __HAL_RCC_USART3_CLK_ENABLE();
900051de:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
900051e2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
900051e6:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
900051ea:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
900051ee:	f402 2280 	and.w	r2, r2, #262144	; 0x40000
900051f2:	9200      	str	r2, [sp, #0]
900051f4:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();
900051f6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900051fa:	f042 0204 	orr.w	r2, r2, #4
900051fe:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90005202:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
90005206:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
90005208:	f003 0304 	and.w	r3, r3, #4
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
9000520c:	ed9f 7b08 	vldr	d7, [pc, #32]	; 90005230 <HAL_UART_MspInit+0x90>
    __HAL_RCC_GPIOC_CLK_ENABLE();
90005210:	9301      	str	r3, [sp, #4]
90005212:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
90005214:	ed8d 7b02 	vstr	d7, [sp, #8]
90005218:	ed9f 7b07 	vldr	d7, [pc, #28]	; 90005238 <HAL_UART_MspInit+0x98>
9000521c:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90005220:	f005 ff0a 	bl	9000b038 <HAL_GPIO_Init>
}
90005224:	b038      	add	sp, #224	; 0xe0
90005226:	bd10      	pop	{r4, pc}
      Error_Handler();
90005228:	f7ff fdbc 	bl	90004da4 <Error_Handler>
9000522c:	e7d3      	b.n	900051d6 <HAL_UART_MspInit+0x36>
9000522e:	bf00      	nop
90005230:	00000c00 	.word	0x00000c00
90005234:	00000002 	.word	0x00000002
	...
90005240:	40004800 	.word	0x40004800
90005244:	58024400 	.word	0x58024400
90005248:	58020800 	.word	0x58020800

9000524c <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
9000524c:	4836      	ldr	r0, [pc, #216]	; (90005328 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000524e:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90005250:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90005252:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90005254:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90005256:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000525a:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000525e:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90005260:	b109      	cbz	r1, 90005266 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90005262:	b038      	add	sp, #224	; 0xe0
90005264:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
90005266:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90005268:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
9000526a:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000526c:	a80a      	add	r0, sp, #40	; 0x28
9000526e:	f026 fc35 	bl	9002badc <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90005272:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90005276:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005278:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000527a:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000527e:	f009 fc5d 	bl	9000eb3c <HAL_RCCEx_PeriphCLKConfig>
90005282:	2800      	cmp	r0, #0
90005284:	d14c      	bne.n	90005320 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
90005286:	4b29      	ldr	r3, [pc, #164]	; (9000532c <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90005288:	f64f 7083 	movw	r0, #65411	; 0xff83
9000528c:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000528e:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90005290:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90005294:	2600      	movs	r6, #0
90005296:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90005298:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000529c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900052a0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900052a4:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900052a6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900052aa:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900052ae:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900052b0:	a902      	add	r1, sp, #8
900052b2:	481f      	ldr	r0, [pc, #124]	; (90005330 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900052b4:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900052b6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900052ba:	f005 febd 	bl	9000b038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900052be:	f248 1233 	movw	r2, #33075	; 0x8133
900052c2:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900052c4:	a902      	add	r1, sp, #8
900052c6:	481b      	ldr	r0, [pc, #108]	; (90005334 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900052c8:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900052ca:	e9cd 2302 	strd	r2, r3, [sp, #8]
900052ce:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900052d2:	f005 feb1 	bl	9000b038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900052d6:	f24c 7203 	movw	r2, #50947	; 0xc703
900052da:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900052dc:	a902      	add	r1, sp, #8
900052de:	4816      	ldr	r0, [pc, #88]	; (90005338 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900052e0:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900052e2:	e9cd 2302 	strd	r2, r3, [sp, #8]
900052e6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900052ea:	f005 fea5 	bl	9000b038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900052ee:	f64f 023f 	movw	r2, #63551	; 0xf83f
900052f2:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900052f4:	a902      	add	r1, sp, #8
900052f6:	4811      	ldr	r0, [pc, #68]	; (9000533c <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900052f8:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900052fa:	e9cd 2302 	strd	r2, r3, [sp, #8]
900052fe:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90005302:	f005 fe99 	bl	9000b038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90005306:	22e0      	movs	r2, #224	; 0xe0
90005308:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000530a:	a902      	add	r1, sp, #8
9000530c:	480c      	ldr	r0, [pc, #48]	; (90005340 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000530e:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90005310:	e9cd 6704 	strd	r6, r7, [sp, #16]
90005314:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90005318:	f005 fe8e 	bl	9000b038 <HAL_GPIO_Init>
}
9000531c:	b038      	add	sp, #224	; 0xe0
9000531e:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90005320:	f7ff fd40 	bl	90004da4 <Error_Handler>
90005324:	e7af      	b.n	90005286 <HAL_SDRAM_MspInit+0x3a>
90005326:	bf00      	nop
90005328:	2400db80 	.word	0x2400db80
9000532c:	58024400 	.word	0x58024400
90005330:	58021000 	.word	0x58021000
90005334:	58021800 	.word	0x58021800
90005338:	58020c00 	.word	0x58020c00
9000533c:	58021400 	.word	0x58021400
90005340:	58021c00 	.word	0x58021c00

90005344 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90005344:	4b13      	ldr	r3, [pc, #76]	; (90005394 <HAL_SDRAM_MspDeInit+0x50>)
90005346:	681a      	ldr	r2, [r3, #0]
90005348:	b102      	cbz	r2, 9000534c <HAL_SDRAM_MspDeInit+0x8>
9000534a:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
9000534c:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
9000534e:	4a12      	ldr	r2, [pc, #72]	; (90005398 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90005350:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90005352:	f64f 7183 	movw	r1, #65411	; 0xff83
90005356:	4811      	ldr	r0, [pc, #68]	; (9000539c <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90005358:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
9000535a:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
9000535e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90005362:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90005366:	f005 ffa1 	bl	9000b2ac <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000536a:	f248 1133 	movw	r1, #33075	; 0x8133
9000536e:	480c      	ldr	r0, [pc, #48]	; (900053a0 <HAL_SDRAM_MspDeInit+0x5c>)
90005370:	f005 ff9c 	bl	9000b2ac <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90005374:	f24c 7103 	movw	r1, #50947	; 0xc703
90005378:	480a      	ldr	r0, [pc, #40]	; (900053a4 <HAL_SDRAM_MspDeInit+0x60>)
9000537a:	f005 ff97 	bl	9000b2ac <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000537e:	f64f 013f 	movw	r1, #63551	; 0xf83f
90005382:	4809      	ldr	r0, [pc, #36]	; (900053a8 <HAL_SDRAM_MspDeInit+0x64>)
90005384:	f005 ff92 	bl	9000b2ac <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90005388:	21e0      	movs	r1, #224	; 0xe0
9000538a:	4808      	ldr	r0, [pc, #32]	; (900053ac <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
9000538c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90005390:	f005 bf8c 	b.w	9000b2ac <HAL_GPIO_DeInit>
90005394:	2400db7c 	.word	0x2400db7c
90005398:	58024400 	.word	0x58024400
9000539c:	58021000 	.word	0x58021000
900053a0:	58021800 	.word	0x58021800
900053a4:	58020c00 	.word	0x58020c00
900053a8:	58021400 	.word	0x58021400
900053ac:	58021c00 	.word	0x58021c00

900053b0 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900053b0:	280f      	cmp	r0, #15
900053b2:	d901      	bls.n	900053b8 <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900053b4:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900053b6:	4770      	bx	lr
{
900053b8:	b510      	push	{r4, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900053ba:	4601      	mov	r1, r0
{
900053bc:	b08a      	sub	sp, #40	; 0x28
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900053be:	2200      	movs	r2, #0
900053c0:	4604      	mov	r4, r0
900053c2:	2036      	movs	r0, #54	; 0x36
900053c4:	f004 fe1c 	bl	9000a000 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900053c8:	2036      	movs	r0, #54	; 0x36
900053ca:	f004 fe57 	bl	9000a07c <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900053ce:	4b1a      	ldr	r3, [pc, #104]	; (90005438 <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
900053d0:	4a1a      	ldr	r2, [pc, #104]	; (9000543c <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900053d2:	4669      	mov	r1, sp
900053d4:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
900053d6:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
900053d8:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
900053dc:	f042 0210 	orr.w	r2, r2, #16
900053e0:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
900053e4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
900053e8:	f003 0310 	and.w	r3, r3, #16
900053ec:	9301      	str	r3, [sp, #4]
900053ee:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900053f0:	f009 fa84 	bl	9000e8fc <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
900053f4:	9b07      	ldr	r3, [sp, #28]
900053f6:	b9bb      	cbnz	r3, 90005428 <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
900053f8:	f009 f9f0 	bl	9000e7dc <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900053fc:	4b10      	ldr	r3, [pc, #64]	; (90005440 <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
900053fe:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90005400:	4c10      	ldr	r4, [pc, #64]	; (90005444 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90005402:	fba3 0300 	umull	r0, r3, r3, r0
  htim6.Instance = TIM6;
90005406:	4910      	ldr	r1, [pc, #64]	; (90005448 <HAL_InitTick+0x98>)
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90005408:	4620      	mov	r0, r4
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000540a:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000540c:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000540e:	6021      	str	r1, [r4, #0]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90005410:	f240 31e7 	movw	r1, #999	; 0x3e7
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90005414:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90005416:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
9000541a:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
9000541c:	f00a fb8a 	bl	9000fb34 <HAL_TIM_Base_Init>
90005420:	b130      	cbz	r0, 90005430 <HAL_InitTick+0x80>
    return HAL_ERROR;
90005422:	2001      	movs	r0, #1
}
90005424:	b00a      	add	sp, #40	; 0x28
90005426:	bd10      	pop	{r4, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90005428:	f009 f9d8 	bl	9000e7dc <HAL_RCC_GetPCLK1Freq>
9000542c:	0040      	lsls	r0, r0, #1
9000542e:	e7e5      	b.n	900053fc <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
90005430:	4620      	mov	r0, r4
90005432:	f00a fc35 	bl	9000fca0 <HAL_TIM_Base_Start_IT>
90005436:	e7f5      	b.n	90005424 <HAL_InitTick+0x74>
90005438:	58024400 	.word	0x58024400
9000543c:	24000060 	.word	0x24000060
90005440:	431bde83 	.word	0x431bde83
90005444:	2400db84 	.word	0x2400db84
90005448:	40001000 	.word	0x40001000

9000544c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
9000544c:	4770      	bx	lr
9000544e:	bf00      	nop

90005450 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90005450:	e7fe      	b.n	90005450 <HardFault_Handler>
90005452:	bf00      	nop

90005454 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90005454:	e7fe      	b.n	90005454 <MemManage_Handler>
90005456:	bf00      	nop

90005458 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90005458:	e7fe      	b.n	90005458 <BusFault_Handler>
9000545a:	bf00      	nop

9000545c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
9000545c:	e7fe      	b.n	9000545c <UsageFault_Handler>
9000545e:	bf00      	nop

90005460 <DebugMon_Handler>:
90005460:	4770      	bx	lr
90005462:	bf00      	nop

90005464 <FDCAN1_IT0_IRQHandler>:
void FDCAN1_IT0_IRQHandler(void)
{
  /* USER CODE BEGIN FDCAN1_IT0_IRQn 0 */

  /* USER CODE END FDCAN1_IT0_IRQn 0 */
  HAL_FDCAN_IRQHandler(&hfdcan1);
90005464:	4801      	ldr	r0, [pc, #4]	; (9000546c <FDCAN1_IT0_IRQHandler+0x8>)
90005466:	f005 bc4f 	b.w	9000ad08 <HAL_FDCAN_IRQHandler>
9000546a:	bf00      	nop
9000546c:	2400d82c 	.word	0x2400d82c

90005470 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90005470:	4801      	ldr	r0, [pc, #4]	; (90005478 <TIM6_DAC_IRQHandler+0x8>)
90005472:	f00a bc79 	b.w	9000fd68 <HAL_TIM_IRQHandler>
90005476:	bf00      	nop
90005478:	2400db84 	.word	0x2400db84

9000547c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
9000547c:	4801      	ldr	r0, [pc, #4]	; (90005484 <LTDC_IRQHandler+0x8>)
9000547e:	f008 b87f 	b.w	9000d580 <HAL_LTDC_IRQHandler>
90005482:	bf00      	nop
90005484:	2400d924 	.word	0x2400d924

90005488 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90005488:	4801      	ldr	r0, [pc, #4]	; (90005490 <DMA2D_IRQHandler+0x8>)
9000548a:	f004 bf23 	b.w	9000a2d4 <HAL_DMA2D_IRQHandler>
9000548e:	bf00      	nop
90005490:	2400d7c4 	.word	0x2400d7c4

90005494 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90005494:	4801      	ldr	r0, [pc, #4]	; (9000549c <JPEG_IRQHandler+0x8>)
90005496:	f007 bf5f 	b.w	9000d358 <HAL_JPEG_IRQHandler>
9000549a:	bf00      	nop
9000549c:	2400d8cc 	.word	0x2400d8cc

900054a0 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900054a0:	4804      	ldr	r0, [pc, #16]	; (900054b4 <MDMA_IRQHandler+0x14>)
{
900054a2:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900054a4:	f008 fb24 	bl	9000daf0 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900054a8:	4803      	ldr	r0, [pc, #12]	; (900054b8 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900054aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900054ae:	f008 bb1f 	b.w	9000daf0 <HAL_MDMA_IRQHandler>
900054b2:	bf00      	nop
900054b4:	2400da38 	.word	0x2400da38
900054b8:	2400d9cc 	.word	0x2400d9cc

900054bc <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900054bc:	2001      	movs	r0, #1
900054be:	4770      	bx	lr

900054c0 <_kill>:

int _kill(int pid, int sig)
{
900054c0:	b508      	push	{r3, lr}
	errno = EINVAL;
900054c2:	f026 f9b7 	bl	9002b834 <__errno>
900054c6:	2216      	movs	r2, #22
900054c8:	4603      	mov	r3, r0
	return -1;
}
900054ca:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900054ce:	601a      	str	r2, [r3, #0]
}
900054d0:	bd08      	pop	{r3, pc}
900054d2:	bf00      	nop

900054d4 <_exit>:

void _exit (int status)
{
900054d4:	b508      	push	{r3, lr}
	errno = EINVAL;
900054d6:	f026 f9ad 	bl	9002b834 <__errno>
900054da:	2316      	movs	r3, #22
900054dc:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900054de:	e7fe      	b.n	900054de <_exit+0xa>

900054e0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
900054e0:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900054e2:	1e16      	subs	r6, r2, #0
900054e4:	dd07      	ble.n	900054f6 <_read+0x16>
900054e6:	460c      	mov	r4, r1
900054e8:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
900054ea:	f3af 8000 	nop.w
900054ee:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
900054f2:	42a5      	cmp	r5, r4
900054f4:	d1f9      	bne.n	900054ea <_read+0xa>
	}

return len;
}
900054f6:	4630      	mov	r0, r6
900054f8:	bd70      	pop	{r4, r5, r6, pc}
900054fa:	bf00      	nop

900054fc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
900054fc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900054fe:	1e16      	subs	r6, r2, #0
90005500:	dd07      	ble.n	90005512 <_write+0x16>
90005502:	460c      	mov	r4, r1
90005504:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90005506:	f814 0b01 	ldrb.w	r0, [r4], #1
9000550a:	f7ff f8b3 	bl	90004674 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000550e:	42ac      	cmp	r4, r5
90005510:	d1f9      	bne.n	90005506 <_write+0xa>
	}
	return len;
}
90005512:	4630      	mov	r0, r6
90005514:	bd70      	pop	{r4, r5, r6, pc}
90005516:	bf00      	nop

90005518 <_close>:

int _close(int file)
{
	return -1;
}
90005518:	f04f 30ff 	mov.w	r0, #4294967295
9000551c:	4770      	bx	lr
9000551e:	bf00      	nop

90005520 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90005520:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
90005524:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90005526:	604b      	str	r3, [r1, #4]
}
90005528:	4770      	bx	lr
9000552a:	bf00      	nop

9000552c <_isatty>:

int _isatty(int file)
{
	return 1;
}
9000552c:	2001      	movs	r0, #1
9000552e:	4770      	bx	lr

90005530 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90005530:	2000      	movs	r0, #0
90005532:	4770      	bx	lr

90005534 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90005534:	490d      	ldr	r1, [pc, #52]	; (9000556c <_sbrk+0x38>)
90005536:	680a      	ldr	r2, [r1, #0]
{
90005538:	b508      	push	{r3, lr}
9000553a:	4603      	mov	r3, r0
	if (heap_end == 0)
9000553c:	b132      	cbz	r2, 9000554c <_sbrk+0x18>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
9000553e:	4413      	add	r3, r2
90005540:	4668      	mov	r0, sp
90005542:	4283      	cmp	r3, r0
90005544:	d809      	bhi.n	9000555a <_sbrk+0x26>
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
90005546:	4610      	mov	r0, r2
	heap_end += incr;
90005548:	600b      	str	r3, [r1, #0]
}
9000554a:	bd08      	pop	{r3, pc}
		heap_end = &end;
9000554c:	4808      	ldr	r0, [pc, #32]	; (90005570 <_sbrk+0x3c>)
9000554e:	4602      	mov	r2, r0
90005550:	6008      	str	r0, [r1, #0]
	if (heap_end + incr > stack_ptr)
90005552:	4668      	mov	r0, sp
90005554:	4413      	add	r3, r2
90005556:	4283      	cmp	r3, r0
90005558:	d9f5      	bls.n	90005546 <_sbrk+0x12>
		errno = ENOMEM;
9000555a:	f026 f96b 	bl	9002b834 <__errno>
9000555e:	230c      	movs	r3, #12
		return (caddr_t) -1;
90005560:	f04f 32ff 	mov.w	r2, #4294967295
		errno = ENOMEM;
90005564:	6003      	str	r3, [r0, #0]
}
90005566:	4610      	mov	r0, r2
90005568:	bd08      	pop	{r3, pc}
9000556a:	bf00      	nop
9000556c:	2400dbd0 	.word	0x2400dbd0
90005570:	240290d8 	.word	0x240290d8

90005574 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId VERDANA_BOLD_30 = 4; // verdanab_30_4bpp
    static const touchgfx::FontId VERDANA_BOLD_20 = 5; // verdanab_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 6;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90005574:	4770      	bx	lr
90005576:	bf00      	nop

90005578 <_ZN23ApplicationFontProviderD0Ev>:
90005578:	b510      	push	{r4, lr}
9000557a:	4604      	mov	r4, r0
9000557c:	2104      	movs	r1, #4
9000557e:	f025 ff4a 	bl	9002b416 <_ZdlPvj>
90005582:	4620      	mov	r0, r4
90005584:	bd10      	pop	{r4, pc}
90005586:	bf00      	nop

90005588 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
90005588:	b508      	push	{r3, lr}
    switch (typography)
9000558a:	2905      	cmp	r1, #5
9000558c:	d81c      	bhi.n	900055c8 <_ZN23ApplicationFontProvider7getFontEt+0x40>
9000558e:	e8df f001 	tbb	[pc, r1]
90005592:	0b07      	.short	0x0b07
90005594:	0317130f 	.word	0x0317130f
    case Typography::VERDANA_BOLD_30:
        // verdanab_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    case Typography::VERDANA_BOLD_20:
        // verdanab_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
90005598:	f003 fa4a 	bl	90008a30 <_ZN17TypedTextDatabase8getFontsEv>
9000559c:	6940      	ldr	r0, [r0, #20]
    default:
        return 0;
    }
}
9000559e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
900055a0:	f003 fa46 	bl	90008a30 <_ZN17TypedTextDatabase8getFontsEv>
900055a4:	6800      	ldr	r0, [r0, #0]
}
900055a6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
900055a8:	f003 fa42 	bl	90008a30 <_ZN17TypedTextDatabase8getFontsEv>
900055ac:	6840      	ldr	r0, [r0, #4]
}
900055ae:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
900055b0:	f003 fa3e 	bl	90008a30 <_ZN17TypedTextDatabase8getFontsEv>
900055b4:	6880      	ldr	r0, [r0, #8]
}
900055b6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
900055b8:	f003 fa3a 	bl	90008a30 <_ZN17TypedTextDatabase8getFontsEv>
900055bc:	68c0      	ldr	r0, [r0, #12]
}
900055be:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
900055c0:	f003 fa36 	bl	90008a30 <_ZN17TypedTextDatabase8getFontsEv>
900055c4:	6900      	ldr	r0, [r0, #16]
}
900055c6:	bd08      	pop	{r3, pc}
    switch (typography)
900055c8:	2000      	movs	r0, #0
}
900055ca:	bd08      	pop	{r3, pc}

900055cc <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
900055cc:	4800      	ldr	r0, [pc, #0]	; (900055d0 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
900055ce:	4770      	bx	lr
900055d0:	9002e9b4 	.word	0x9002e9b4

900055d4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
900055d4:	201a      	movs	r0, #26
900055d6:	4770      	bx	lr

900055d8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
900055d8:	b169      	cbz	r1, 900055f6 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900055da:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
900055dc:	b530      	push	{r4, r5, lr}
900055de:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
900055e0:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900055e2:	6895      	ldr	r5, [r2, #8]
900055e4:	f10d 0303 	add.w	r3, sp, #3
900055e8:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900055ea:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900055ec:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900055f0:	47a8      	blx	r5
        return glyph;
    }
900055f2:	b003      	add	sp, #12
900055f4:	bd30      	pop	{r4, r5, pc}
            return 0;
900055f6:	4608      	mov	r0, r1
    }
900055f8:	4770      	bx	lr
900055fa:	bf00      	nop

900055fc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900055fc:	89c0      	ldrh	r0, [r0, #14]
900055fe:	4770      	bx	lr

90005600 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90005600:	8a00      	ldrh	r0, [r0, #16]
90005602:	4770      	bx	lr

90005604 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90005604:	88c0      	ldrh	r0, [r0, #6]
90005606:	4770      	bx	lr

90005608 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90005608:	8880      	ldrh	r0, [r0, #4]
9000560a:	4770      	bx	lr

9000560c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
9000560c:	7a80      	ldrb	r0, [r0, #10]
    }
9000560e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
90005612:	4770      	bx	lr

90005614 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90005614:	7a80      	ldrb	r0, [r0, #10]
    }
90005616:	09c0      	lsrs	r0, r0, #7
90005618:	4770      	bx	lr
9000561a:	bf00      	nop

9000561c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
9000561c:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000561e:	4770      	bx	lr

90005620 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90005620:	4770      	bx	lr
90005622:	bf00      	nop

90005624 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90005624:	4770      	bx	lr
90005626:	bf00      	nop

90005628 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90005628:	4770      	bx	lr
9000562a:	bf00      	nop

9000562c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
9000562c:	4770      	bx	lr
9000562e:	bf00      	nop

90005630 <_ZN25CalibrationScreenViewBaseD1Ev>:
}

CalibrationScreenViewBase::~CalibrationScreenViewBase()
{

}
90005630:	4770      	bx	lr
90005632:	bf00      	nop

90005634 <_ZN25CalibrationScreenViewBase11setupScreenEv>:

void CalibrationScreenViewBase::setupScreen()
{

}
90005634:	4770      	bx	lr
90005636:	bf00      	nop

90005638 <_ZN8touchgfx8CallbackI25CalibrationScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005638:	4770      	bx	lr
9000563a:	bf00      	nop

9000563c <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class ImageButtonStyle : public T
9000563c:	4770      	bx	lr
9000563e:	bf00      	nop

90005640 <_ZN8touchgfx8CallbackI25CalibrationScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
90005640:	b410      	push	{r4}
    {
        (pobject->*pmemfun)(t1);
90005642:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90005644:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90005646:	6844      	ldr	r4, [r0, #4]
90005648:	f012 0f01 	tst.w	r2, #1
9000564c:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005650:	d103      	bne.n	9000565a <_ZN8touchgfx8CallbackI25CalibrationScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90005652:	689b      	ldr	r3, [r3, #8]
    }
90005654:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005658:	4718      	bx	r3
9000565a:	ea4f 0c62 	mov.w	ip, r2, asr #1
9000565e:	689b      	ldr	r3, [r3, #8]
90005660:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90005664:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005668:	58d3      	ldr	r3, [r2, r3]
9000566a:	4718      	bx	r3

9000566c <_ZNK8touchgfx8CallbackI25CalibrationScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
9000566c:	6843      	ldr	r3, [r0, #4]
9000566e:	b13b      	cbz	r3, 90005680 <_ZNK8touchgfx8CallbackI25CalibrationScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90005670:	6883      	ldr	r3, [r0, #8]
90005672:	b10b      	cbz	r3, 90005678 <_ZNK8touchgfx8CallbackI25CalibrationScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90005674:	2001      	movs	r0, #1
    }
90005676:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005678:	68c0      	ldr	r0, [r0, #12]
9000567a:	f000 0001 	and.w	r0, r0, #1
9000567e:	4770      	bx	lr
90005680:	4618      	mov	r0, r3
90005682:	4770      	bx	lr

90005684 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90005684:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
90005688:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        buttonImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
9000568c:	4770      	bx	lr
9000568e:	bf00      	nop

90005690 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
        buttonImage.setBitmap(T::getPressed() ? down : up);
90005690:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    virtual void handlePressedUpdated()
90005694:	4601      	mov	r1, r0
        buttonImage.setBitmap(T::getPressed() ? down : up);
90005696:	3034      	adds	r0, #52	; 0x34
90005698:	b113      	cbz	r3, 900056a0 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x10>
9000569a:	3162      	adds	r1, #98	; 0x62
9000569c:	f012 bfb5 	b.w	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900056a0:	3160      	adds	r1, #96	; 0x60
900056a2:	f012 bfb2 	b.w	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900056a6:	bf00      	nop

900056a8 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class ImageButtonStyle : public T
900056a8:	b510      	push	{r4, lr}
900056aa:	4604      	mov	r4, r0
900056ac:	2164      	movs	r1, #100	; 0x64
900056ae:	f025 feb2 	bl	9002b416 <_ZdlPvj>
900056b2:	4620      	mov	r0, r4
900056b4:	bd10      	pop	{r4, pc}
900056b6:	bf00      	nop

900056b8 <_ZN8touchgfx8CallbackI25CalibrationScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900056b8:	b510      	push	{r4, lr}
900056ba:	4604      	mov	r4, r0
900056bc:	2110      	movs	r1, #16
900056be:	f025 feaa 	bl	9002b416 <_ZdlPvj>
900056c2:	4620      	mov	r0, r4
900056c4:	bd10      	pop	{r4, pc}
900056c6:	bf00      	nop

900056c8 <_ZN25CalibrationScreenViewBaseD0Ev>:
CalibrationScreenViewBase::~CalibrationScreenViewBase()
900056c8:	b510      	push	{r4, lr}
900056ca:	4604      	mov	r4, r0
}
900056cc:	f44f 7186 	mov.w	r1, #268	; 0x10c
900056d0:	f025 fea1 	bl	9002b416 <_ZdlPvj>
900056d4:	4620      	mov	r0, r4
900056d6:	bd10      	pop	{r4, pc}

900056d8 <_ZN25CalibrationScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CalibrationScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Tank1CalibScrToHomeScr_Btn)
900056d8:	3098      	adds	r0, #152	; 0x98
900056da:	4288      	cmp	r0, r1
900056dc:	d000      	beq.n	900056e0 <_ZN25CalibrationScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x8>
900056de:	4770      	bx	lr
{
900056e0:	b508      	push	{r3, lr}
    virtual ~CalibrationScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900056e2:	f015 fb6f 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
        //Tank1CalibScrToHomeScr_Interaction
        //When Tank1CalibScrToHomeScr_Btn clicked change screen to HomePageScreen
        //Go to HomePageScreen with screen transition towards North
        application().gotoHomePageScreenScreenSlideTransitionNorth();
    }
}
900056e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoHomePageScreenScreenSlideTransitionNorth();
900056ea:	f001 b94d 	b.w	90006988 <_ZN23FrontendApplicationBase44gotoHomePageScreenScreenSlideTransitionNorthEv>
900056ee:	bf00      	nop

900056f0 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>:
        up = bmpReleased;
900056f0:	880b      	ldrh	r3, [r1, #0]
    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
900056f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        up = bmpReleased;
900056f6:	f8a0 3060 	strh.w	r3, [r0, #96]	; 0x60
        down = bmpPressed;
900056fa:	4605      	mov	r5, r0
900056fc:	8813      	ldrh	r3, [r2, #0]
    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
900056fe:	4604      	mov	r4, r0
        down = bmpPressed;
90005700:	f825 3f62 	strh.w	r3, [r5, #98]!
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
90005704:	4628      	mov	r0, r5
90005706:	f018 f9e3 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000570a:	4607      	mov	r7, r0
9000570c:	4628      	mov	r0, r5
9000570e:	f018 fa13 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        setWidth(width);
90005712:	6823      	ldr	r3, [r4, #0]
90005714:	4917      	ldr	r1, [pc, #92]	; (90005774 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_+0x84>)
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
90005716:	4606      	mov	r6, r0
        setWidth(width);
90005718:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000571a:	428a      	cmp	r2, r1
9000571c:	d124      	bne.n	90005768 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_+0x78>
        rect.width = width;
9000571e:	8127      	strh	r7, [r4, #8]
        setHeight(height);
90005720:	6bda      	ldr	r2, [r3, #60]	; 0x3c
90005722:	4915      	ldr	r1, [pc, #84]	; (90005778 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_+0x88>)
90005724:	428a      	cmp	r2, r1
90005726:	d11a      	bne.n	9000575e <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_+0x6e>
        rect.height = height;
90005728:	8166      	strh	r6, [r4, #10]
        handlePressedUpdated();
9000572a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
9000572e:	4a13      	ldr	r2, [pc, #76]	; (9000577c <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_+0x8c>)
90005730:	4293      	cmp	r3, r2
90005732:	d110      	bne.n	90005756 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_+0x66>
        buttonImage.setBitmap(T::getPressed() ? down : up);
90005734:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
90005738:	f104 0034 	add.w	r0, r4, #52	; 0x34
9000573c:	b123      	cbz	r3, 90005748 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_+0x58>
9000573e:	4629      	mov	r1, r5
    }
90005740:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        buttonImage.setBitmap(T::getPressed() ? down : up);
90005744:	f012 bf61 	b.w	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005748:	f104 0560 	add.w	r5, r4, #96	; 0x60
9000574c:	4629      	mov	r1, r5
    }
9000574e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        buttonImage.setBitmap(T::getPressed() ? down : up);
90005752:	f012 bf5a 	b.w	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        handlePressedUpdated();
90005756:	4620      	mov	r0, r4
    }
90005758:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
9000575c:	4718      	bx	r3
        setHeight(height);
9000575e:	4631      	mov	r1, r6
90005760:	4620      	mov	r0, r4
90005762:	4790      	blx	r2
90005764:	6823      	ldr	r3, [r4, #0]
90005766:	e7e0      	b.n	9000572a <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_+0x3a>
        setWidth(width);
90005768:	4639      	mov	r1, r7
9000576a:	4620      	mov	r0, r4
9000576c:	4790      	blx	r2
        setHeight(height);
9000576e:	6823      	ldr	r3, [r4, #0]
90005770:	e7d6      	b.n	90005720 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_+0x30>
90005772:	bf00      	nop
90005774:	90002a05 	.word	0x90002a05
90005778:	90002a09 	.word	0x90002a09
9000577c:	90005691 	.word	0x90005691

90005780 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
90005780:	6b03      	ldr	r3, [r0, #48]	; 0x30
90005782:	b30b      	cbz	r3, 900057c8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
90005784:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
90005786:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
90005788:	68d1      	ldr	r1, [r2, #12]
9000578a:	4604      	mov	r4, r0
9000578c:	481a      	ldr	r0, [pc, #104]	; (900057f8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
9000578e:	4281      	cmp	r1, r0
90005790:	d11b      	bne.n	900057ca <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
90005792:	6858      	ldr	r0, [r3, #4]
90005794:	b180      	cbz	r0, 900057b8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
90005796:	6899      	ldr	r1, [r3, #8]
90005798:	b1f1      	cbz	r1, 900057d8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
9000579a:	6892      	ldr	r2, [r2, #8]
9000579c:	4917      	ldr	r1, [pc, #92]	; (900057fc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
9000579e:	428a      	cmp	r2, r1
900057a0:	d124      	bne.n	900057ec <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900057a2:	68da      	ldr	r2, [r3, #12]
900057a4:	6858      	ldr	r0, [r3, #4]
900057a6:	eb00 0062 	add.w	r0, r0, r2, asr #1
900057aa:	07d2      	lsls	r2, r2, #31
900057ac:	d405      	bmi.n	900057ba <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
900057ae:	4621      	mov	r1, r4
900057b0:	689b      	ldr	r3, [r3, #8]
        }
    }
900057b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900057b6:	4718      	bx	r3
900057b8:	bd70      	pop	{r4, r5, r6, pc}
900057ba:	6899      	ldr	r1, [r3, #8]
900057bc:	6803      	ldr	r3, [r0, #0]
900057be:	585b      	ldr	r3, [r3, r1]
900057c0:	4621      	mov	r1, r4
900057c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900057c6:	4718      	bx	r3
900057c8:	4770      	bx	lr
        if (action && action->isValid())
900057ca:	4618      	mov	r0, r3
900057cc:	4788      	blx	r1
900057ce:	2800      	cmp	r0, #0
900057d0:	d0f2      	beq.n	900057b8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
900057d2:	6b23      	ldr	r3, [r4, #48]	; 0x30
900057d4:	681a      	ldr	r2, [r3, #0]
900057d6:	e7e0      	b.n	9000579a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
900057d8:	68dd      	ldr	r5, [r3, #12]
900057da:	07ee      	lsls	r6, r5, #31
900057dc:	d5ec      	bpl.n	900057b8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900057de:	6892      	ldr	r2, [r2, #8]
900057e0:	4e06      	ldr	r6, [pc, #24]	; (900057fc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900057e2:	42b2      	cmp	r2, r6
900057e4:	d102      	bne.n	900057ec <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900057e6:	eb00 0065 	add.w	r0, r0, r5, asr #1
900057ea:	e7e7      	b.n	900057bc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
900057ec:	4621      	mov	r1, r4
900057ee:	4618      	mov	r0, r3
    }
900057f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
900057f4:	4710      	bx	r2
900057f6:	bf00      	nop
900057f8:	9000566d 	.word	0x9000566d
900057fc:	90005641 	.word	0x90005641

90005800 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
90005800:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005802:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90005804:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005806:	bf18      	it	ne
90005808:	2201      	movne	r2, #1
        return pressed;
9000580a:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
9000580e:	460d      	mov	r5, r1
90005810:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005812:	42b2      	cmp	r2, r6
90005814:	d004      	beq.n	90005820 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
90005816:	b116      	cbz	r6, 9000581e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005818:	792b      	ldrb	r3, [r5, #4]
9000581a:	2b01      	cmp	r3, #1
9000581c:	d00e      	beq.n	9000583c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
9000581e:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
90005820:	fab3 f383 	clz	r3, r3
90005824:	095b      	lsrs	r3, r3, #5
90005826:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
9000582a:	6803      	ldr	r3, [r0, #0]
9000582c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
90005830:	4798      	blx	r3
            invalidate();
90005832:	6823      	ldr	r3, [r4, #0]
90005834:	4620      	mov	r0, r4
90005836:	695b      	ldr	r3, [r3, #20]
90005838:	4798      	blx	r3
9000583a:	e7ec      	b.n	90005816 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
9000583c:	6823      	ldr	r3, [r4, #0]
9000583e:	4a20      	ldr	r2, [pc, #128]	; (900058c0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
90005840:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90005844:	4293      	cmp	r3, r2
90005846:	d127      	bne.n	90005898 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
90005848:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000584a:	2b00      	cmp	r3, #0
9000584c:	d0e7      	beq.n	9000581e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000584e:	6819      	ldr	r1, [r3, #0]
90005850:	481c      	ldr	r0, [pc, #112]	; (900058c4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
90005852:	68ca      	ldr	r2, [r1, #12]
90005854:	4282      	cmp	r2, r0
90005856:	d123      	bne.n	900058a0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
90005858:	685a      	ldr	r2, [r3, #4]
9000585a:	2a00      	cmp	r2, #0
9000585c:	d0df      	beq.n	9000581e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000585e:	689d      	ldr	r5, [r3, #8]
90005860:	b175      	cbz	r5, 90005880 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
90005862:	688e      	ldr	r6, [r1, #8]
90005864:	4a18      	ldr	r2, [pc, #96]	; (900058c8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
90005866:	4296      	cmp	r6, r2
90005868:	d123      	bne.n	900058b2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
9000586a:	68d9      	ldr	r1, [r3, #12]
9000586c:	685a      	ldr	r2, [r3, #4]
9000586e:	eb02 0061 	add.w	r0, r2, r1, asr #1
90005872:	07ca      	lsls	r2, r1, #31
90005874:	d41b      	bmi.n	900058ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
90005876:	689b      	ldr	r3, [r3, #8]
90005878:	4621      	mov	r1, r4
    }
9000587a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000587e:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
90005880:	68d8      	ldr	r0, [r3, #12]
90005882:	07c6      	lsls	r6, r0, #31
90005884:	d5cb      	bpl.n	9000581e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005886:	688e      	ldr	r6, [r1, #8]
90005888:	490f      	ldr	r1, [pc, #60]	; (900058c8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
9000588a:	428e      	cmp	r6, r1
9000588c:	d111      	bne.n	900058b2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
9000588e:	eb02 0060 	add.w	r0, r2, r0, asr #1
90005892:	6803      	ldr	r3, [r0, #0]
90005894:	595b      	ldr	r3, [r3, r5]
90005896:	e7ef      	b.n	90005878 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
90005898:	4620      	mov	r0, r4
    }
9000589a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
9000589e:	4718      	bx	r3
        if (action && action->isValid())
900058a0:	4618      	mov	r0, r3
900058a2:	4790      	blx	r2
900058a4:	2800      	cmp	r0, #0
900058a6:	d0ba      	beq.n	9000581e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900058a8:	6b23      	ldr	r3, [r4, #48]	; 0x30
900058aa:	6819      	ldr	r1, [r3, #0]
900058ac:	e7d9      	b.n	90005862 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900058ae:	689d      	ldr	r5, [r3, #8]
900058b0:	e7ef      	b.n	90005892 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
900058b2:	4621      	mov	r1, r4
900058b4:	4618      	mov	r0, r3
900058b6:	4633      	mov	r3, r6
    }
900058b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900058bc:	4718      	bx	r3
900058be:	bf00      	nop
900058c0:	90005781 	.word	0x90005781
900058c4:	9000566d 	.word	0x9000566d
900058c8:	90005641 	.word	0x90005641

900058cc <_ZN25CalibrationScreenViewBaseC1Ev>:
CalibrationScreenViewBase::CalibrationScreenViewBase() :
900058cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900058d0:	b082      	sub	sp, #8
900058d2:	4604      	mov	r4, r0
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
900058d4:	f016 fe9a 	bl	9001c60c <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &CalibrationScreenViewBase::flexButtonCallbackHandler)
900058d8:	4b5e      	ldr	r3, [pc, #376]	; (90005a54 <_ZN25CalibrationScreenViewBaseC1Ev+0x188>)
900058da:	2500      	movs	r5, #0
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
900058dc:	f64f 76ff 	movw	r6, #65535	; 0xffff
900058e0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
          visible(true)
900058e4:	f44f 7880 	mov.w	r8, #256	; 0x100
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
900058e8:	f04f 09ff 	mov.w	r9, #255	; 0xff
        : Widget(), bitmap(bmp), alpha(255)
900058ec:	f8df a188 	ldr.w	sl, [pc, #392]	; 90005a78 <_ZN25CalibrationScreenViewBaseC1Ev+0x1ac>
900058f0:	6023      	str	r3, [r4, #0]
        Image::setBitmap(bmp);
900058f2:	a901      	add	r1, sp, #4
900058f4:	4b58      	ldr	r3, [pc, #352]	; (90005a58 <_ZN25CalibrationScreenViewBaseC1Ev+0x18c>)
900058f6:	4638      	mov	r0, r7
900058f8:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
900058fc:	6423      	str	r3, [r4, #64]	; 0x40
900058fe:	f884 9066 	strb.w	r9, [r4, #102]	; 0x66
90005902:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
        : Widget(), bitmap(bmp), alpha(255)
90005906:	f8a4 6092 	strh.w	r6, [r4, #146]	; 0x92
9000590a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
9000590e:	f8c4 a06c 	str.w	sl, [r4, #108]	; 0x6c
90005912:	63e5      	str	r5, [r4, #60]	; 0x3c
90005914:	6465      	str	r5, [r4, #68]	; 0x44
90005916:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
90005918:	66a5      	str	r5, [r4, #104]	; 0x68
9000591a:	f8ad 6004 	strh.w	r6, [sp, #4]
        : x(0), y(0), width(0), height(0)
9000591e:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
90005922:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
90005926:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
9000592a:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
9000592e:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
90005932:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
90005936:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        Image::setBitmap(bmp);
9000593a:	f012 fe66 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
9000593e:	f44f 437f 	mov.w	r3, #65280	; 0xff00
90005942:	f8a4 80f0 	strh.w	r8, [r4, #240]	; 0xf0
        : T(), up(), down()
90005946:	f104 08cc 	add.w	r8, r4, #204	; 0xcc
9000594a:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
        touchable = touch;
9000594e:	f240 1301 	movw	r3, #257	; 0x101
90005952:	a901      	add	r1, sp, #4
90005954:	4640      	mov	r0, r8
90005956:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
9000595a:	4b40      	ldr	r3, [pc, #256]	; (90005a5c <_ZN25CalibrationScreenViewBaseC1Ev+0x190>)
        : Widget(), bitmap(bmp), alpha(255)
9000595c:	f8c4 a0cc 	str.w	sl, [r4, #204]	; 0xcc
90005960:	f104 0a98 	add.w	sl, r4, #152	; 0x98
90005964:	f884 90f4 	strb.w	r9, [r4, #244]	; 0xf4
90005968:	f8a4 60f2 	strh.w	r6, [r4, #242]	; 0xf2
9000596c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
          firstChild(0)
90005970:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
90005974:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
90005978:	f8ad 6004 	strh.w	r6, [sp, #4]
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
9000597c:	1d26      	adds	r6, r4, #4
9000597e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
90005982:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          visible(true)
90005986:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
9000598a:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
9000598e:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
90005992:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
90005996:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
9000599a:	e9c4 553a 	strd	r5, r5, [r4, #232]	; 0xe8
        Image::setBitmap(bmp);
9000599e:	f012 fe34 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900059a2:	f04f 33ff 	mov.w	r3, #4294967295
        T::add(buttonImage);
900059a6:	4641      	mov	r1, r8
900059a8:	4650      	mov	r0, sl
900059aa:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
        rect.x = x;
900059ae:	f8c4 50d0 	str.w	r5, [r4, #208]	; 0xd0
900059b2:	f00f fa7f 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
900059b6:	4b2a      	ldr	r3, [pc, #168]	; (90005a60 <_ZN25CalibrationScreenViewBaseC1Ev+0x194>)
900059b8:	f104 0140 	add.w	r1, r4, #64	; 0x40
900059bc:	4630      	mov	r0, r6
900059be:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
900059c2:	4b28      	ldr	r3, [pc, #160]	; (90005a64 <_ZN25CalibrationScreenViewBaseC1Ev+0x198>)
900059c4:	f8c4 4100 	str.w	r4, [r4, #256]	; 0x100
900059c8:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
        rect.width = width;
900059cc:	4b26      	ldr	r3, [pc, #152]	; (90005a68 <_ZN25CalibrationScreenViewBaseC1Ev+0x19c>)
900059ce:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
900059d2:	64a3      	str	r3, [r4, #72]	; 0x48
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
900059d4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        rect.x = x;
900059d8:	6465      	str	r5, [r4, #68]	; 0x44
900059da:	66a3      	str	r3, [r4, #104]	; 0x68
900059dc:	f00f fa6a 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900059e0:	2315      	movs	r3, #21
    Tank1CalibScrBG.setBitmap(touchgfx::Bitmap(BITMAP_TANK1CALIBRATIONSCREEN_ID));
900059e2:	a901      	add	r1, sp, #4
900059e4:	4638      	mov	r0, r7
900059e6:	6725      	str	r5, [r4, #112]	; 0x70
900059e8:	f8ad 3004 	strh.w	r3, [sp, #4]
900059ec:	f012 fe0d 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900059f0:	4639      	mov	r1, r7
900059f2:	4630      	mov	r0, r6
900059f4:	f00f fa5e 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        ImageButtonStyle::setWidthHeight(down);
900059f8:	f104 07fa 	add.w	r7, r4, #250	; 0xfa
        up = bmpReleased;
900059fc:	4b1b      	ldr	r3, [pc, #108]	; (90005a6c <_ZN25CalibrationScreenViewBaseC1Ev+0x1a0>)
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
900059fe:	4638      	mov	r0, r7
90005a00:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
90005a04:	f018 f864 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90005a08:	4681      	mov	r9, r0
90005a0a:	4638      	mov	r0, r7
90005a0c:	f018 f894 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        rect.width = width;
90005a10:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
        buttonImage.setBitmap(T::getPressed() ? down : up);
90005a14:	f894 10c4 	ldrb.w	r1, [r4, #196]	; 0xc4
        rect.height = height;
90005a18:	f8a4 00a2 	strh.w	r0, [r4, #162]	; 0xa2
90005a1c:	4640      	mov	r0, r8
90005a1e:	42a9      	cmp	r1, r5
90005a20:	bf0c      	ite	eq
90005a22:	4619      	moveq	r1, r3
90005a24:	4639      	movne	r1, r7
        rect.width = width;
90005a26:	f8a4 90a0 	strh.w	r9, [r4, #160]	; 0xa0
90005a2a:	f012 fdee 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Tank1CalibScrToHomeScr_Btn.setAction(flexButtonCallback);
90005a2e:	f104 03fc 	add.w	r3, r4, #252	; 0xfc
        rect.x = x;
90005a32:	4a0f      	ldr	r2, [pc, #60]	; (90005a70 <_ZN25CalibrationScreenViewBaseC1Ev+0x1a4>)
90005a34:	4630      	mov	r0, r6
        action = &callback;
90005a36:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
90005a3a:	4651      	mov	r1, sl
90005a3c:	4b0d      	ldr	r3, [pc, #52]	; (90005a74 <_ZN25CalibrationScreenViewBaseC1Ev+0x1a8>)
90005a3e:	f8c4 50d0 	str.w	r5, [r4, #208]	; 0xd0
90005a42:	e9c4 2327 	strd	r2, r3, [r4, #156]	; 0x9c
90005a46:	f00f fa35 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005a4a:	4620      	mov	r0, r4
90005a4c:	b002      	add	sp, #8
90005a4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90005a52:	bf00      	nop
90005a54:	9002ec7c 	.word	0x9002ec7c
90005a58:	900308a8 	.word	0x900308a8
90005a5c:	9002ebc4 	.word	0x9002ebc4
90005a60:	9002ec64 	.word	0x9002ec64
90005a64:	900056d9 	.word	0x900056d9
90005a68:	011001e0 	.word	0x011001e0
90005a6c:	00070008 	.word	0x00070008
90005a70:	00060199 	.word	0x00060199
90005a74:	00200040 	.word	0x00200040
90005a78:	90030a7c 	.word	0x90030a7c

90005a7c <_ZN8touchgfx9TypedTextD1Ev>:
    }
90005a7c:	4770      	bx	lr
90005a7e:	bf00      	nop

90005a80 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90005a80:	b510      	push	{r4, lr}
90005a82:	4604      	mov	r4, r0
    }
90005a84:	2108      	movs	r1, #8
90005a86:	f025 fcc6 	bl	9002b416 <_ZdlPvj>
90005a8a:	4620      	mov	r0, r4
90005a8c:	bd10      	pop	{r4, pc}
90005a8e:	bf00      	nop

90005a90 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90005a90:	4770      	bx	lr
90005a92:	bf00      	nop

90005a94 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90005a94:	f500 7398 	add.w	r3, r0, #304	; 0x130
90005a98:	6808      	ldr	r0, [r1, #0]
90005a9a:	6849      	ldr	r1, [r1, #4]
90005a9c:	c303      	stmia	r3!, {r0, r1}
    }
90005a9e:	4770      	bx	lr

90005aa0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90005aa0:	4770      	bx	lr
90005aa2:	bf00      	nop

90005aa4 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90005aa4:	4770      	bx	lr
90005aa6:	bf00      	nop

90005aa8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90005aa8:	6041      	str	r1, [r0, #4]
    }
90005aaa:	4770      	bx	lr

90005aac <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90005aac:	4770      	bx	lr
90005aae:	bf00      	nop

90005ab0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005ab0:	4905      	ldr	r1, [pc, #20]	; (90005ac8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90005ab2:	2200      	movs	r2, #0
// HomePageScreen

void FrontendApplicationBase::gotoHomePageScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoHomePageScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90005ab4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90005ab8:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90005abc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90005ac0:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoHomePageScreenScreenNoTransition();
    }
90005ac4:	4770      	bx	lr
90005ac6:	bf00      	nop
90005ac8:	90005dad 	.word	0x90005dad

90005acc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90005acc:	2301      	movs	r3, #1
90005ace:	7203      	strb	r3, [r0, #8]
    }
90005ad0:	4770      	bx	lr
90005ad2:	bf00      	nop

90005ad4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
90005ad4:	4770      	bx	lr
90005ad6:	bf00      	nop

90005ad8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED1Ev>:
90005ad8:	4770      	bx	lr
90005ada:	bf00      	nop

90005adc <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90005adc:	4770      	bx	lr
90005ade:	bf00      	nop

90005ae0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90005ae0:	4770      	bx	lr
90005ae2:	bf00      	nop

90005ae4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90005ae4:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
90005ae6:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
90005ae8:	6841      	ldr	r1, [r0, #4]
90005aea:	ea4f 0c62 	mov.w	ip, r2, asr #1
90005aee:	eb01 0062 	add.w	r0, r1, r2, asr #1
90005af2:	07d2      	lsls	r2, r2, #31
90005af4:	d401      	bmi.n	90005afa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90005af6:	689b      	ldr	r3, [r3, #8]
90005af8:	4718      	bx	r3
90005afa:	f851 200c 	ldr.w	r2, [r1, ip]
90005afe:	689b      	ldr	r3, [r3, #8]
90005b00:	58d3      	ldr	r3, [r2, r3]
90005b02:	4718      	bx	r3

90005b04 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90005b04:	6843      	ldr	r3, [r0, #4]
90005b06:	b13b      	cbz	r3, 90005b18 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90005b08:	6883      	ldr	r3, [r0, #8]
90005b0a:	b10b      	cbz	r3, 90005b10 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90005b0c:	2001      	movs	r0, #1
    }
90005b0e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005b10:	68c0      	ldr	r0, [r0, #12]
90005b12:	f000 0001 	and.w	r0, r0, #1
90005b16:	4770      	bx	lr
90005b18:	4618      	mov	r0, r3
90005b1a:	4770      	bx	lr

90005b1c <_ZN8touchgfx12NoTransitionD0Ev>:
90005b1c:	b510      	push	{r4, lr}
90005b1e:	4604      	mov	r4, r0
90005b20:	210c      	movs	r1, #12
90005b22:	f025 fc78 	bl	9002b416 <_ZdlPvj>
90005b26:	4620      	mov	r0, r4
90005b28:	bd10      	pop	{r4, pc}
90005b2a:	bf00      	nop

90005b2c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005b2c:	b510      	push	{r4, lr}
90005b2e:	4604      	mov	r4, r0
90005b30:	2110      	movs	r1, #16
90005b32:	f025 fc70 	bl	9002b416 <_ZdlPvj>
90005b36:	4620      	mov	r0, r4
90005b38:	bd10      	pop	{r4, pc}
90005b3a:	bf00      	nop

90005b3c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90005b3c:	b510      	push	{r4, lr}
90005b3e:	4604      	mov	r4, r0
90005b40:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90005b44:	f025 fc67 	bl	9002b416 <_ZdlPvj>
90005b48:	4620      	mov	r0, r4
90005b4a:	bd10      	pop	{r4, pc}

90005b4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EED0Ev>:
90005b4c:	b510      	push	{r4, lr}
90005b4e:	4604      	mov	r4, r0
90005b50:	2140      	movs	r1, #64	; 0x40
90005b52:	f025 fc60 	bl	9002b416 <_ZdlPvj>
90005b56:	4620      	mov	r0, r4
90005b58:	bd10      	pop	{r4, pc}
90005b5a:	bf00      	nop

90005b5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED0Ev>:
90005b5c:	b510      	push	{r4, lr}
90005b5e:	4604      	mov	r4, r0
90005b60:	2140      	movs	r1, #64	; 0x40
90005b62:	f025 fc58 	bl	9002b416 <_ZdlPvj>
90005b66:	4620      	mov	r0, r4
90005b68:	bd10      	pop	{r4, pc}
90005b6a:	bf00      	nop

90005b6c <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90005b6c:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
90005b6e:	f015 f929 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
    }
90005b72:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
90005b76:	f015 bdb9 	b.w	9001b6ec <_ZN8touchgfx11Application10invalidateEv>
90005b7a:	bf00      	nop

90005b7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90005b7c:	4b05      	ldr	r3, [pc, #20]	; (90005b94 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x18>)
90005b7e:	781b      	ldrb	r3, [r3, #0]
90005b80:	b13b      	cbz	r3, 90005b92 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x16>
90005b82:	6843      	ldr	r3, [r0, #4]
90005b84:	b12b      	cbz	r3, 90005b92 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
90005b86:	681a      	ldr	r2, [r3, #0]
90005b88:	f100 010c 	add.w	r1, r0, #12
90005b8c:	4618      	mov	r0, r3
90005b8e:	6e53      	ldr	r3, [r2, #100]	; 0x64
90005b90:	4718      	bx	r3
        }
    }
90005b92:	4770      	bx	lr
90005b94:	24028e2b 	.word	0x24028e2b

90005b98 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90005b98:	4b05      	ldr	r3, [pc, #20]	; (90005bb0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x18>)
90005b9a:	781b      	ldrb	r3, [r3, #0]
90005b9c:	b13b      	cbz	r3, 90005bae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x16>
90005b9e:	6843      	ldr	r3, [r0, #4]
90005ba0:	b12b      	cbz	r3, 90005bae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
90005ba2:	681a      	ldr	r2, [r3, #0]
90005ba4:	f100 010c 	add.w	r1, r0, #12
90005ba8:	4618      	mov	r0, r3
90005baa:	6e53      	ldr	r3, [r2, #100]	; 0x64
90005bac:	4718      	bx	r3
    }
90005bae:	4770      	bx	lr
90005bb0:	24028e2b 	.word	0x24028e2b

90005bb4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv>:
    virtual void handleTickEvent()
90005bb4:	b570      	push	{r4, r5, r6, lr}
90005bb6:	4605      	mov	r5, r0
        animationCounter++;
90005bb8:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
90005bbc:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90005bbe:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
90005bc2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90005bc4:	4298      	cmp	r0, r3
        animationCounter++;
90005bc6:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
90005bca:	d905      	bls.n	90005bd8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x24>
            done = true;
90005bcc:	2201      	movs	r2, #1
            animationCounter = 0;
90005bce:	2300      	movs	r3, #0
            done = true;
90005bd0:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
90005bd2:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
90005bd6:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90005bd8:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90005bdc:	2100      	movs	r1, #0
90005bde:	f016 ff05 	bl	9001c9ec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90005be2:	f010 0201 	ands.w	r2, r0, #1
90005be6:	b283      	uxth	r3, r0
90005be8:	d006      	beq.n	90005bf8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90005bea:	f64f 71ff 	movw	r1, #65535	; 0xffff
90005bee:	2800      	cmp	r0, #0
90005bf0:	bfd8      	it	le
90005bf2:	460a      	movle	r2, r1
90005bf4:	4413      	add	r3, r2
90005bf6:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90005bf8:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getY();
90005bfa:	8a6c      	ldrh	r4, [r5, #18]
        Drawable* d = screenContainer->getFirstChild();
90005bfc:	6802      	ldr	r2, [r0, #0]
90005bfe:	4912      	ldr	r1, [pc, #72]	; (90005c48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getY();
90005c00:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90005c02:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getY();
90005c04:	87ab      	strh	r3, [r5, #60]	; 0x3c
90005c06:	428a      	cmp	r2, r1
90005c08:	d11b      	bne.n	90005c42 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x8e>
        return firstChild;
90005c0a:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90005c0c:	b164      	cbz	r4, 90005c28 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x74>
90005c0e:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90005c10:	4e0e      	ldr	r6, [pc, #56]	; (90005c4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x98>)
                d->setY(d->getY() + relativeValue);
90005c12:	6823      	ldr	r3, [r4, #0]
90005c14:	88e1      	ldrh	r1, [r4, #6]
90005c16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90005c18:	4411      	add	r1, r2
90005c1a:	42b3      	cmp	r3, r6
90005c1c:	b209      	sxth	r1, r1
        rect.y = y;
90005c1e:	d109      	bne.n	90005c34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x80>
90005c20:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90005c22:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005c24:	2c00      	cmp	r4, #0
90005c26:	d1f4      	bne.n	90005c12 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90005c28:	6868      	ldr	r0, [r5, #4]
90005c2a:	6803      	ldr	r3, [r0, #0]
    }
90005c2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90005c30:	695b      	ldr	r3, [r3, #20]
90005c32:	4718      	bx	r3
                d->setY(d->getY() + relativeValue);
90005c34:	4620      	mov	r0, r4
90005c36:	4798      	blx	r3
90005c38:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005c3a:	2c00      	cmp	r4, #0
90005c3c:	d0f4      	beq.n	90005c28 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x74>
90005c3e:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90005c40:	e7e7      	b.n	90005c12 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90005c42:	4790      	blx	r2
90005c44:	4604      	mov	r4, r0
90005c46:	e7e1      	b.n	90005c0c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x58>
90005c48:	9000561d 	.word	0x9000561d
90005c4c:	90002a01 	.word	0x90002a01

90005c50 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv>:
    virtual void handleTickEvent()
90005c50:	b570      	push	{r4, r5, r6, lr}
90005c52:	4605      	mov	r5, r0
        animationCounter++;
90005c54:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
90005c58:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90005c5a:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
90005c5e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90005c60:	4298      	cmp	r0, r3
        animationCounter++;
90005c62:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
90005c66:	d905      	bls.n	90005c74 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x24>
            done = true;
90005c68:	2201      	movs	r2, #1
            animationCounter = 0;
90005c6a:	2300      	movs	r3, #0
            done = true;
90005c6c:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
90005c6e:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
90005c72:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90005c74:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90005c78:	2100      	movs	r1, #0
90005c7a:	f016 feb7 	bl	9001c9ec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90005c7e:	f010 0201 	ands.w	r2, r0, #1
90005c82:	b283      	uxth	r3, r0
90005c84:	d006      	beq.n	90005c94 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90005c86:	f64f 71ff 	movw	r1, #65535	; 0xffff
90005c8a:	2800      	cmp	r0, #0
90005c8c:	bfd8      	it	le
90005c8e:	460a      	movle	r2, r1
90005c90:	4413      	add	r3, r2
90005c92:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90005c94:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getY();
90005c96:	8a6c      	ldrh	r4, [r5, #18]
        Drawable* d = screenContainer->getFirstChild();
90005c98:	6802      	ldr	r2, [r0, #0]
90005c9a:	4912      	ldr	r1, [pc, #72]	; (90005ce4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getY();
90005c9c:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90005c9e:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getY();
90005ca0:	87ab      	strh	r3, [r5, #60]	; 0x3c
90005ca2:	428a      	cmp	r2, r1
90005ca4:	d11b      	bne.n	90005cde <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x8e>
90005ca6:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90005ca8:	b164      	cbz	r4, 90005cc4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x74>
90005caa:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90005cac:	4e0e      	ldr	r6, [pc, #56]	; (90005ce8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x98>)
                d->setY(d->getY() + relativeValue);
90005cae:	6823      	ldr	r3, [r4, #0]
90005cb0:	88e1      	ldrh	r1, [r4, #6]
90005cb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90005cb4:	4411      	add	r1, r2
90005cb6:	42b3      	cmp	r3, r6
90005cb8:	b209      	sxth	r1, r1
        rect.y = y;
90005cba:	d109      	bne.n	90005cd0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x80>
90005cbc:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90005cbe:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005cc0:	2c00      	cmp	r4, #0
90005cc2:	d1f4      	bne.n	90005cae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90005cc4:	6868      	ldr	r0, [r5, #4]
90005cc6:	6803      	ldr	r3, [r0, #0]
    }
90005cc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90005ccc:	695b      	ldr	r3, [r3, #20]
90005cce:	4718      	bx	r3
                d->setY(d->getY() + relativeValue);
90005cd0:	4620      	mov	r0, r4
90005cd2:	4798      	blx	r3
90005cd4:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005cd6:	2c00      	cmp	r4, #0
90005cd8:	d0f4      	beq.n	90005cc4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x74>
90005cda:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90005cdc:	e7e7      	b.n	90005cae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90005cde:	4790      	blx	r2
90005ce0:	4604      	mov	r4, r0
90005ce2:	e7e1      	b.n	90005ca8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x58>
90005ce4:	9000561d 	.word	0x9000561d
90005ce8:	90002a01 	.word	0x90002a01

90005cec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90005cec:	7a03      	ldrb	r3, [r0, #8]
90005cee:	bb2b      	cbnz	r3, 90005d3c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x50>
90005cf0:	4a14      	ldr	r2, [pc, #80]	; (90005d44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x58>)
    virtual void init()
90005cf2:	b570      	push	{r4, r5, r6, lr}
90005cf4:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90005cf6:	6840      	ldr	r0, [r0, #4]
90005cf8:	6803      	ldr	r3, [r0, #0]
90005cfa:	69db      	ldr	r3, [r3, #28]
90005cfc:	4293      	cmp	r3, r2
90005cfe:	d11e      	bne.n	90005d3e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x52>
90005d00:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90005d02:	b164      	cbz	r4, 90005d1e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x32>
90005d04:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90005d06:	4e10      	ldr	r6, [pc, #64]	; (90005d48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x5c>)
            case WEST:
                d->setX(d->getX() - targetValue);
                break;
            case NORTH:
            case SOUTH:
                d->setY(d->getY() - targetValue);
90005d08:	6823      	ldr	r3, [r4, #0]
90005d0a:	88e1      	ldrh	r1, [r4, #6]
90005d0c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90005d0e:	1a89      	subs	r1, r1, r2
90005d10:	42b3      	cmp	r3, r6
90005d12:	b209      	sxth	r1, r1
        rect.y = y;
90005d14:	d10b      	bne.n	90005d2e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x42>
90005d16:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90005d18:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005d1a:	2c00      	cmp	r4, #0
90005d1c:	d1f4      	bne.n	90005d08 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
90005d1e:	6868      	ldr	r0, [r5, #4]
90005d20:	f105 010c 	add.w	r1, r5, #12
90005d24:	6803      	ldr	r3, [r0, #0]
    }
90005d26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90005d2a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90005d2c:	4718      	bx	r3
                d->setY(d->getY() - targetValue);
90005d2e:	4620      	mov	r0, r4
90005d30:	4798      	blx	r3
90005d32:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005d34:	2c00      	cmp	r4, #0
90005d36:	d0f2      	beq.n	90005d1e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x32>
90005d38:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90005d3a:	e7e5      	b.n	90005d08 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x1c>
90005d3c:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90005d3e:	4798      	blx	r3
90005d40:	4604      	mov	r4, r0
90005d42:	e7de      	b.n	90005d02 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x16>
90005d44:	9000561d 	.word	0x9000561d
90005d48:	90002a01 	.word	0x90002a01

90005d4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv>:
        if (done)
90005d4c:	7a03      	ldrb	r3, [r0, #8]
90005d4e:	bb2b      	cbnz	r3, 90005d9c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x50>
90005d50:	4a14      	ldr	r2, [pc, #80]	; (90005da4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x58>)
    virtual void init()
90005d52:	b570      	push	{r4, r5, r6, lr}
90005d54:	4605      	mov	r5, r0
        Drawable* d = screenContainer->getFirstChild();
90005d56:	6840      	ldr	r0, [r0, #4]
90005d58:	6803      	ldr	r3, [r0, #0]
90005d5a:	69db      	ldr	r3, [r3, #28]
90005d5c:	4293      	cmp	r3, r2
90005d5e:	d11e      	bne.n	90005d9e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x52>
90005d60:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90005d62:	b164      	cbz	r4, 90005d7e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x32>
90005d64:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90005d66:	4e10      	ldr	r6, [pc, #64]	; (90005da8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x5c>)
                d->setY(d->getY() - targetValue);
90005d68:	6823      	ldr	r3, [r4, #0]
90005d6a:	88e1      	ldrh	r1, [r4, #6]
90005d6c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90005d6e:	1a89      	subs	r1, r1, r2
90005d70:	42b3      	cmp	r3, r6
90005d72:	b209      	sxth	r1, r1
        rect.y = y;
90005d74:	d10b      	bne.n	90005d8e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x42>
90005d76:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90005d78:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005d7a:	2c00      	cmp	r4, #0
90005d7c:	d1f4      	bne.n	90005d68 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x1c>
        screenContainer->add(snapshot);
90005d7e:	6868      	ldr	r0, [r5, #4]
90005d80:	f105 010c 	add.w	r1, r5, #12
90005d84:	6803      	ldr	r3, [r0, #0]
    }
90005d86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90005d8a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90005d8c:	4718      	bx	r3
                d->setY(d->getY() - targetValue);
90005d8e:	4620      	mov	r0, r4
90005d90:	4798      	blx	r3
90005d92:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005d94:	2c00      	cmp	r4, #0
90005d96:	d0f2      	beq.n	90005d7e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x32>
90005d98:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90005d9a:	e7e5      	b.n	90005d68 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x1c>
90005d9c:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90005d9e:	4798      	blx	r3
90005da0:	4604      	mov	r4, r0
90005da2:	e7de      	b.n	90005d62 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x16>
90005da4:	9000561d 	.word	0x9000561d
90005da8:	90002a01 	.word	0x90002a01

90005dac <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoHomePageScreenScreenNoTransitionImpl()
{
90005dac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<HomePageScreenView, HomePageScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90005db0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90005db4:	4607      	mov	r7, r0
90005db6:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005db8:	68a0      	ldr	r0, [r4, #8]
90005dba:	6803      	ldr	r3, [r0, #0]
90005dbc:	6a1b      	ldr	r3, [r3, #32]
90005dbe:	4798      	blx	r3
90005dc0:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
90005dc4:	f0c0 809c 	bcc.w	90005f00 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x154>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005dc8:	6860      	ldr	r0, [r4, #4]
90005dca:	6803      	ldr	r3, [r0, #0]
90005dcc:	6a1b      	ldr	r3, [r3, #32]
90005dce:	4798      	blx	r3
90005dd0:	280f      	cmp	r0, #15
90005dd2:	f240 80a1 	bls.w	90005f18 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x16c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005dd6:	68e0      	ldr	r0, [r4, #12]
90005dd8:	6803      	ldr	r3, [r0, #0]
90005dda:	6a1b      	ldr	r3, [r3, #32]
90005ddc:	4798      	blx	r3
90005dde:	280b      	cmp	r0, #11
90005de0:	f240 8094 	bls.w	90005f0c <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x160>
    if (*currentTrans)
90005de4:	f8df 915c 	ldr.w	r9, [pc, #348]	; 90005f44 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x198>
    Application::getInstance()->clearAllTimerWidgets();
90005de8:	f014 ffec 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90005dec:	3004      	adds	r0, #4
90005dee:	f015 f827 	bl	9001ae40 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90005df2:	f8d9 0000 	ldr.w	r0, [r9]
90005df6:	b140      	cbz	r0, 90005e0a <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90005df8:	6803      	ldr	r3, [r0, #0]
90005dfa:	68db      	ldr	r3, [r3, #12]
90005dfc:	4798      	blx	r3
    if (*currentTrans)
90005dfe:	f8d9 0000 	ldr.w	r0, [r9]
90005e02:	b110      	cbz	r0, 90005e0a <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90005e04:	6803      	ldr	r3, [r0, #0]
90005e06:	681b      	ldr	r3, [r3, #0]
90005e08:	4798      	blx	r3
    if (*currentScreen)
90005e0a:	f8df 813c 	ldr.w	r8, [pc, #316]	; 90005f48 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x19c>
90005e0e:	f8d8 0000 	ldr.w	r0, [r8]
90005e12:	2800      	cmp	r0, #0
90005e14:	d061      	beq.n	90005eda <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x12e>
        (*currentScreen)->tearDownScreen();
90005e16:	6803      	ldr	r3, [r0, #0]
90005e18:	695b      	ldr	r3, [r3, #20]
90005e1a:	4798      	blx	r3
    if (*currentPresenter)
90005e1c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90005e20:	2800      	cmp	r0, #0
90005e22:	d055      	beq.n	90005ed0 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x124>
        (*currentPresenter)->deactivate();
90005e24:	6803      	ldr	r3, [r0, #0]
90005e26:	685b      	ldr	r3, [r3, #4]
90005e28:	4798      	blx	r3
    if (*currentScreen)
90005e2a:	f8d8 0000 	ldr.w	r0, [r8]
90005e2e:	b110      	cbz	r0, 90005e36 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90005e30:	6803      	ldr	r3, [r0, #0]
90005e32:	681b      	ldr	r3, [r3, #0]
90005e34:	4798      	blx	r3
    if (*currentPresenter)
90005e36:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90005e3a:	b110      	cbz	r0, 90005e42 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90005e3c:	6803      	ldr	r3, [r0, #0]
90005e3e:	689b      	ldr	r3, [r3, #8]
90005e40:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90005e42:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90005e44:	2100      	movs	r1, #0
90005e46:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90005e48:	468b      	mov	fp, r1
90005e4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90005e4c:	4798      	blx	r3
90005e4e:	4b35      	ldr	r3, [pc, #212]	; (90005f24 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x178>)
90005e50:	4605      	mov	r5, r0
90005e52:	f8c0 b004 	str.w	fp, [r0, #4]
90005e56:	f880 b008 	strb.w	fp, [r0, #8]
90005e5a:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90005e5c:	68a0      	ldr	r0, [r4, #8]
90005e5e:	602b      	str	r3, [r5, #0]
90005e60:	6803      	ldr	r3, [r0, #0]
90005e62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90005e64:	4798      	blx	r3
90005e66:	4606      	mov	r6, r0
90005e68:	f002 feb6 	bl	90008bd8 <_ZN18HomePageScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90005e6c:	6860      	ldr	r0, [r4, #4]
90005e6e:	4659      	mov	r1, fp
90005e70:	6803      	ldr	r3, [r0, #0]
90005e72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90005e74:	4798      	blx	r3
90005e76:	4604      	mov	r4, r0
90005e78:	4631      	mov	r1, r6
90005e7a:	f002 fe81 	bl	90008b80 <_ZN23HomePageScreenPresenterC1ER18HomePageScreenView>
    *currentTrans = newTransition;
90005e7e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90005e82:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90005e86:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90005e8a:	b35c      	cbz	r4, 90005ee4 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x138>
90005e8c:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90005e8e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90005e92:	4630      	mov	r0, r6
90005e94:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90005e96:	f8c4 a008 	str.w	sl, [r4, #8]
90005e9a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90005e9c:	63f4      	str	r4, [r6, #60]	; 0x3c
90005e9e:	4798      	blx	r3
    newPresenter->activate();
90005ea0:	6823      	ldr	r3, [r4, #0]
90005ea2:	4620      	mov	r0, r4
90005ea4:	681b      	ldr	r3, [r3, #0]
90005ea6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90005ea8:	4629      	mov	r1, r5
90005eaa:	4630      	mov	r0, r6
90005eac:	f016 fd5a 	bl	9001c964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90005eb0:	682b      	ldr	r3, [r5, #0]
90005eb2:	491d      	ldr	r1, [pc, #116]	; (90005f28 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x17c>)
90005eb4:	691a      	ldr	r2, [r3, #16]
90005eb6:	428a      	cmp	r2, r1
90005eb8:	d116      	bne.n	90005ee8 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x13c>
    newTransition->invalidate();
90005eba:	695b      	ldr	r3, [r3, #20]
90005ebc:	4a1b      	ldr	r2, [pc, #108]	; (90005f2c <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x180>)
90005ebe:	4293      	cmp	r3, r2
90005ec0:	d119      	bne.n	90005ef6 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x14a>
        Application::getInstance()->invalidate();
90005ec2:	f014 ff7f 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
}
90005ec6:	b001      	add	sp, #4
90005ec8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005ecc:	f015 bc0e 	b.w	9001b6ec <_ZN8touchgfx11Application10invalidateEv>
    if (*currentScreen)
90005ed0:	f8d8 0000 	ldr.w	r0, [r8]
90005ed4:	2800      	cmp	r0, #0
90005ed6:	d1ab      	bne.n	90005e30 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x84>
90005ed8:	e7b3      	b.n	90005e42 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90005eda:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90005ede:	2800      	cmp	r0, #0
90005ee0:	d1a0      	bne.n	90005e24 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x78>
90005ee2:	e7ae      	b.n	90005e42 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90005ee4:	4623      	mov	r3, r4
90005ee6:	e7d2      	b.n	90005e8e <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0xe2>
    newTransition->init();
90005ee8:	4628      	mov	r0, r5
90005eea:	4790      	blx	r2
    newTransition->invalidate();
90005eec:	682b      	ldr	r3, [r5, #0]
90005eee:	4a0f      	ldr	r2, [pc, #60]	; (90005f2c <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x180>)
90005ef0:	695b      	ldr	r3, [r3, #20]
90005ef2:	4293      	cmp	r3, r2
90005ef4:	d0e5      	beq.n	90005ec2 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x116>
90005ef6:	4628      	mov	r0, r5
90005ef8:	b001      	add	sp, #4
90005efa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005efe:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005f00:	4b0b      	ldr	r3, [pc, #44]	; (90005f30 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x184>)
90005f02:	21a3      	movs	r1, #163	; 0xa3
90005f04:	4a0b      	ldr	r2, [pc, #44]	; (90005f34 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x188>)
90005f06:	480c      	ldr	r0, [pc, #48]	; (90005f38 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x18c>)
90005f08:	f025 fc62 	bl	9002b7d0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005f0c:	4b0b      	ldr	r3, [pc, #44]	; (90005f3c <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x190>)
90005f0e:	21a5      	movs	r1, #165	; 0xa5
90005f10:	4a08      	ldr	r2, [pc, #32]	; (90005f34 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x188>)
90005f12:	4809      	ldr	r0, [pc, #36]	; (90005f38 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x18c>)
90005f14:	f025 fc5c 	bl	9002b7d0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005f18:	4b09      	ldr	r3, [pc, #36]	; (90005f40 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x194>)
90005f1a:	21a4      	movs	r1, #164	; 0xa4
90005f1c:	4a05      	ldr	r2, [pc, #20]	; (90005f34 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x188>)
90005f1e:	4806      	ldr	r0, [pc, #24]	; (90005f38 <_ZN23FrontendApplicationBase40gotoHomePageScreenScreenNoTransitionImplEv+0x18c>)
90005f20:	f025 fc56 	bl	9002b7d0 <__assert_func>
90005f24:	9002f4f4 	.word	0x9002f4f4
90005f28:	90005aa5 	.word	0x90005aa5
90005f2c:	90005b6d 	.word	0x90005b6d
90005f30:	9002ecb8 	.word	0x9002ecb8
90005f34:	9002ed48 	.word	0x9002ed48
90005f38:	9002ee5c 	.word	0x9002ee5c
90005f3c:	9002ef48 	.word	0x9002ef48
90005f40:	9002eea4 	.word	0x9002eea4
90005f44:	24028e74 	.word	0x24028e74
90005f48:	24028e70 	.word	0x24028e70

90005f4c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005f4c:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90005f50:	b1d3      	cbz	r3, 90005f88 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90005f52:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90005f54:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005f56:	68d1      	ldr	r1, [r2, #12]
90005f58:	4604      	mov	r4, r0
90005f5a:	4818      	ldr	r0, [pc, #96]	; (90005fbc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90005f5c:	4281      	cmp	r1, r0
90005f5e:	d118      	bne.n	90005f92 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90005f60:	6858      	ldr	r0, [r3, #4]
90005f62:	b180      	cbz	r0, 90005f86 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90005f64:	6899      	ldr	r1, [r3, #8]
90005f66:	b1e1      	cbz	r1, 90005fa2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
            pendingScreenTransitionCallback->execute();
90005f68:	6892      	ldr	r2, [r2, #8]
90005f6a:	4915      	ldr	r1, [pc, #84]	; (90005fc0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90005f6c:	428a      	cmp	r2, r1
90005f6e:	d122      	bne.n	90005fb6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90005f70:	68da      	ldr	r2, [r3, #12]
90005f72:	6858      	ldr	r0, [r3, #4]
90005f74:	eb00 0062 	add.w	r0, r0, r2, asr #1
90005f78:	07d2      	lsls	r2, r2, #31
90005f7a:	d406      	bmi.n	90005f8a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90005f7c:	689b      	ldr	r3, [r3, #8]
90005f7e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90005f80:	2300      	movs	r3, #0
90005f82:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90005f86:	bd70      	pop	{r4, r5, r6, pc}
90005f88:	4770      	bx	lr
90005f8a:	6899      	ldr	r1, [r3, #8]
90005f8c:	6803      	ldr	r3, [r0, #0]
90005f8e:	585b      	ldr	r3, [r3, r1]
90005f90:	e7f5      	b.n	90005f7e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005f92:	4618      	mov	r0, r3
90005f94:	4788      	blx	r1
90005f96:	2800      	cmp	r0, #0
90005f98:	d0f5      	beq.n	90005f86 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90005f9a:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90005f9e:	681a      	ldr	r2, [r3, #0]
90005fa0:	e7e2      	b.n	90005f68 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90005fa2:	68dd      	ldr	r5, [r3, #12]
90005fa4:	07ee      	lsls	r6, r5, #31
90005fa6:	d5ee      	bpl.n	90005f86 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90005fa8:	6892      	ldr	r2, [r2, #8]
90005faa:	4e05      	ldr	r6, [pc, #20]	; (90005fc0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90005fac:	42b2      	cmp	r2, r6
90005fae:	d102      	bne.n	90005fb6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90005fb0:	eb00 0065 	add.w	r0, r0, r5, asr #1
90005fb4:	e7ea      	b.n	90005f8c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90005fb6:	4618      	mov	r0, r3
90005fb8:	4790      	blx	r2
90005fba:	e7e1      	b.n	90005f80 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90005fbc:	90005b05 	.word	0x90005b05
90005fc0:	90005ae5 	.word	0x90005ae5

90005fc4 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv>:
{
90005fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90005fc8:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90005fcc:	4680      	mov	r8, r0
90005fce:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005fd0:	68a0      	ldr	r0, [r4, #8]
90005fd2:	6803      	ldr	r3, [r0, #0]
90005fd4:	6a1b      	ldr	r3, [r3, #32]
90005fd6:	4798      	blx	r3
90005fd8:	f642 13e7 	movw	r3, #10727	; 0x29e7
90005fdc:	4298      	cmp	r0, r3
90005fde:	f240 80de 	bls.w	9000619e <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x1da>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005fe2:	6860      	ldr	r0, [r4, #4]
90005fe4:	6803      	ldr	r3, [r0, #0]
90005fe6:	6a1b      	ldr	r3, [r3, #32]
90005fe8:	4798      	blx	r3
90005fea:	280f      	cmp	r0, #15
90005fec:	f240 80e3 	bls.w	900061b6 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x1f2>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005ff0:	68e0      	ldr	r0, [r4, #12]
90005ff2:	6803      	ldr	r3, [r0, #0]
90005ff4:	6a1b      	ldr	r3, [r3, #32]
90005ff6:	4798      	blx	r3
90005ff8:	283f      	cmp	r0, #63	; 0x3f
90005ffa:	f240 80d6 	bls.w	900061aa <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x1e6>
    if (*currentTrans)
90005ffe:	f8df a1f8 	ldr.w	sl, [pc, #504]	; 900061f8 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x234>
    Application::getInstance()->clearAllTimerWidgets();
90006002:	f014 fedf 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90006006:	3004      	adds	r0, #4
90006008:	f014 ff1a 	bl	9001ae40 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
9000600c:	f8da 0000 	ldr.w	r0, [sl]
90006010:	b140      	cbz	r0, 90006024 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x60>
        (*currentTrans)->tearDown();
90006012:	6803      	ldr	r3, [r0, #0]
90006014:	68db      	ldr	r3, [r3, #12]
90006016:	4798      	blx	r3
    if (*currentTrans)
90006018:	f8da 0000 	ldr.w	r0, [sl]
9000601c:	b110      	cbz	r0, 90006024 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x60>
        (*currentTrans)->~Transition();
9000601e:	6803      	ldr	r3, [r0, #0]
90006020:	681b      	ldr	r3, [r3, #0]
90006022:	4798      	blx	r3
    if (*currentScreen)
90006024:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 900061fc <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x238>
90006028:	f8d9 0000 	ldr.w	r0, [r9]
9000602c:	2800      	cmp	r0, #0
9000602e:	f000 80a2 	beq.w	90006176 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x1b2>
        (*currentScreen)->tearDownScreen();
90006032:	6803      	ldr	r3, [r0, #0]
90006034:	695b      	ldr	r3, [r3, #20]
90006036:	4798      	blx	r3
    if (*currentPresenter)
90006038:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
9000603c:	2800      	cmp	r0, #0
9000603e:	d07f      	beq.n	90006140 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x17c>
        (*currentPresenter)->deactivate();
90006040:	6803      	ldr	r3, [r0, #0]
90006042:	685b      	ldr	r3, [r3, #4]
90006044:	4798      	blx	r3
    if (*currentScreen)
90006046:	f8d9 0000 	ldr.w	r0, [r9]
9000604a:	b110      	cbz	r0, 90006052 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x8e>
        (*currentScreen)->~Screen();
9000604c:	6803      	ldr	r3, [r0, #0]
9000604e:	681b      	ldr	r3, [r3, #0]
90006050:	4798      	blx	r3
    if (*currentPresenter)
90006052:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90006056:	b110      	cbz	r0, 9000605e <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x9a>
        (*currentPresenter)->~Presenter();
90006058:	6803      	ldr	r3, [r0, #0]
9000605a:	689b      	ldr	r3, [r3, #8]
9000605c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
9000605e:	68e0      	ldr	r0, [r4, #12]
90006060:	2100      	movs	r1, #0
90006062:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90006064:	460f      	mov	r7, r1
90006066:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90006068:	4798      	blx	r3
          relativeValue(0)
9000606a:	4b56      	ldr	r3, [pc, #344]	; (900061c4 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x200>)
9000606c:	4606      	mov	r6, r0
9000606e:	4605      	mov	r5, r0
90006070:	6047      	str	r7, [r0, #4]
90006072:	7207      	strb	r7, [r0, #8]
90006074:	f846 3b0c 	str.w	r3, [r6], #12
90006078:	4630      	mov	r0, r6
9000607a:	f011 fb71 	bl	90017760 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
9000607e:	4b52      	ldr	r3, [pc, #328]	; (900061c8 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x204>)
          relativeValue(0)
90006080:	2214      	movs	r2, #20
90006082:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90006084:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
90006086:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90006088:	2b00      	cmp	r3, #0
9000608a:	d165      	bne.n	90006158 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x194>
            done = true;
9000608c:	2301      	movs	r3, #1
9000608e:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90006090:	68a0      	ldr	r0, [r4, #8]
90006092:	2100      	movs	r1, #0
90006094:	6803      	ldr	r3, [r0, #0]
90006096:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90006098:	4798      	blx	r3
9000609a:	4607      	mov	r7, r0
9000609c:	f002 fdee 	bl	90008c7c <_ZN14MainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900060a0:	6860      	ldr	r0, [r4, #4]
900060a2:	2100      	movs	r1, #0
900060a4:	6803      	ldr	r3, [r0, #0]
900060a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900060a8:	4798      	blx	r3
900060aa:	4604      	mov	r4, r0
900060ac:	4639      	mov	r1, r7
900060ae:	f002 fdb9 	bl	90008c24 <_ZN19MainScreenPresenterC1ER14MainScreenView>
    *currentTrans = newTransition;
900060b2:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
900060b6:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
900060ba:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
900060be:	2c00      	cmp	r4, #0
900060c0:	d05f      	beq.n	90006182 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x1be>
900060c2:	1d23      	adds	r3, r4, #4
900060c4:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
900060c8:	4638      	mov	r0, r7
900060ca:	683b      	ldr	r3, [r7, #0]
900060cc:	f8c4 b008 	str.w	fp, [r4, #8]
900060d0:	68db      	ldr	r3, [r3, #12]
900060d2:	63fc      	str	r4, [r7, #60]	; 0x3c
900060d4:	4798      	blx	r3
    newPresenter->activate();
900060d6:	6823      	ldr	r3, [r4, #0]
900060d8:	4620      	mov	r0, r4
900060da:	681b      	ldr	r3, [r3, #0]
900060dc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
900060de:	4629      	mov	r1, r5
900060e0:	4638      	mov	r0, r7
900060e2:	f016 fc3f 	bl	9001c964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
900060e6:	682b      	ldr	r3, [r5, #0]
900060e8:	4938      	ldr	r1, [pc, #224]	; (900061cc <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x208>)
900060ea:	691a      	ldr	r2, [r3, #16]
900060ec:	428a      	cmp	r2, r1
900060ee:	d152      	bne.n	90006196 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x1d2>
        if (done)
900060f0:	7a2a      	ldrb	r2, [r5, #8]
900060f2:	b9d2      	cbnz	r2, 9000612a <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x166>
        Drawable* d = screenContainer->getFirstChild();
900060f4:	6868      	ldr	r0, [r5, #4]
900060f6:	4a36      	ldr	r2, [pc, #216]	; (900061d0 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x20c>)
900060f8:	6803      	ldr	r3, [r0, #0]
900060fa:	69db      	ldr	r3, [r3, #28]
900060fc:	4293      	cmp	r3, r2
900060fe:	d142      	bne.n	90006186 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x1c2>
90006100:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90006102:	b164      	cbz	r4, 9000611e <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x15a>
90006104:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90006106:	4f33      	ldr	r7, [pc, #204]	; (900061d4 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x210>)
                d->setY(d->getY() - targetValue);
90006108:	6823      	ldr	r3, [r4, #0]
9000610a:	88e1      	ldrh	r1, [r4, #6]
9000610c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000610e:	1a89      	subs	r1, r1, r2
90006110:	42bb      	cmp	r3, r7
90006112:	b209      	sxth	r1, r1
90006114:	d119      	bne.n	9000614a <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x186>
        rect.y = y;
90006116:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90006118:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000611a:	2c00      	cmp	r4, #0
9000611c:	d1f4      	bne.n	90006108 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x144>
        screenContainer->add(snapshot);
9000611e:	6868      	ldr	r0, [r5, #4]
90006120:	4631      	mov	r1, r6
90006122:	6803      	ldr	r3, [r0, #0]
90006124:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90006126:	4798      	blx	r3
    newTransition->invalidate();
90006128:	682b      	ldr	r3, [r5, #0]
9000612a:	695b      	ldr	r3, [r3, #20]
9000612c:	4a2a      	ldr	r2, [pc, #168]	; (900061d8 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x214>)
9000612e:	4293      	cmp	r3, r2
90006130:	d12c      	bne.n	9000618c <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x1c8>
        Application::getInstance()->invalidate();
90006132:	f014 fe47 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
}
90006136:	b001      	add	sp, #4
90006138:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000613c:	f015 bad6 	b.w	9001b6ec <_ZN8touchgfx11Application10invalidateEv>
    if (*currentScreen)
90006140:	f8d9 0000 	ldr.w	r0, [r9]
90006144:	2800      	cmp	r0, #0
90006146:	d181      	bne.n	9000604c <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x88>
90006148:	e789      	b.n	9000605e <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x9a>
                d->setY(d->getY() - targetValue);
9000614a:	4620      	mov	r0, r4
9000614c:	4798      	blx	r3
9000614e:	69a4      	ldr	r4, [r4, #24]
        while (d)
90006150:	2c00      	cmp	r4, #0
90006152:	d0e4      	beq.n	9000611e <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x15a>
90006154:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90006156:	e7d7      	b.n	90006108 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x144>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90006158:	4b20      	ldr	r3, [pc, #128]	; (900061dc <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x218>)
        snapshot.makeSnapshot();
9000615a:	4630      	mov	r0, r6
        rect.x = x;
9000615c:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
9000615e:	f9b3 3000 	ldrsh.w	r3, [r3]
90006162:	4f1f      	ldr	r7, [pc, #124]	; (900061e0 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x21c>)
        rect.width = width;
90006164:	82ab      	strh	r3, [r5, #20]
90006166:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.height = height;
9000616a:	82eb      	strh	r3, [r5, #22]
        snapshot.makeSnapshot();
9000616c:	f011 fa73 	bl	90017656 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_HEIGHT;
90006170:	883b      	ldrh	r3, [r7, #0]
90006172:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90006174:	e78c      	b.n	90006090 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0xcc>
    if (*currentPresenter)
90006176:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
9000617a:	2800      	cmp	r0, #0
9000617c:	f47f af60 	bne.w	90006040 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x7c>
90006180:	e76d      	b.n	9000605e <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x9a>
    model->bind(newPresenter);
90006182:	4623      	mov	r3, r4
90006184:	e79e      	b.n	900060c4 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x100>
        Drawable* d = screenContainer->getFirstChild();
90006186:	4798      	blx	r3
90006188:	4604      	mov	r4, r0
9000618a:	e7ba      	b.n	90006102 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x13e>
    newTransition->invalidate();
9000618c:	4628      	mov	r0, r5
9000618e:	b001      	add	sp, #4
90006190:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006194:	4718      	bx	r3
    newTransition->init();
90006196:	4628      	mov	r0, r5
90006198:	4790      	blx	r2
    newTransition->invalidate();
9000619a:	682b      	ldr	r3, [r5, #0]
9000619c:	e7c5      	b.n	9000612a <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x166>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
9000619e:	4b11      	ldr	r3, [pc, #68]	; (900061e4 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x220>)
900061a0:	21a3      	movs	r1, #163	; 0xa3
900061a2:	4a11      	ldr	r2, [pc, #68]	; (900061e8 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x224>)
900061a4:	4811      	ldr	r0, [pc, #68]	; (900061ec <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x228>)
900061a6:	f025 fb13 	bl	9002b7d0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900061aa:	4b11      	ldr	r3, [pc, #68]	; (900061f0 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x22c>)
900061ac:	21a5      	movs	r1, #165	; 0xa5
900061ae:	4a0e      	ldr	r2, [pc, #56]	; (900061e8 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x224>)
900061b0:	480e      	ldr	r0, [pc, #56]	; (900061ec <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x228>)
900061b2:	f025 fb0d 	bl	9002b7d0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900061b6:	4b0f      	ldr	r3, [pc, #60]	; (900061f4 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x230>)
900061b8:	21a4      	movs	r1, #164	; 0xa4
900061ba:	4a0b      	ldr	r2, [pc, #44]	; (900061e8 <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x224>)
900061bc:	480b      	ldr	r0, [pc, #44]	; (900061ec <_ZN23FrontendApplicationBase44gotoMainScreenScreenSlideTransitionNorthImplEv+0x228>)
900061be:	f025 fb07 	bl	9002b7d0 <__assert_func>
900061c2:	bf00      	nop
900061c4:	9002f53c 	.word	0x9002f53c
900061c8:	24028e2b 	.word	0x24028e2b
900061cc:	90005ced 	.word	0x90005ced
900061d0:	9000561d 	.word	0x9000561d
900061d4:	90002a01 	.word	0x90002a01
900061d8:	90005b6d 	.word	0x90005b6d
900061dc:	24028e20 	.word	0x24028e20
900061e0:	24028e22 	.word	0x24028e22
900061e4:	9002ecb8 	.word	0x9002ecb8
900061e8:	9002efec 	.word	0x9002efec
900061ec:	9002ee5c 	.word	0x9002ee5c
900061f0:	9002ef48 	.word	0x9002ef48
900061f4:	9002eea4 	.word	0x9002eea4
900061f8:	24028e74 	.word	0x24028e74
900061fc:	24028e70 	.word	0x24028e70

90006200 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoHomePageScreenScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoHomePageScreenScreenSlideTransitionNorthImpl()
{
90006200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<HomePageScreenView, HomePageScreenPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90006204:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90006208:	4680      	mov	r8, r0
9000620a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
9000620c:	68a0      	ldr	r0, [r4, #8]
9000620e:	6803      	ldr	r3, [r0, #0]
90006210:	6a1b      	ldr	r3, [r3, #32]
90006212:	4798      	blx	r3
90006214:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
90006218:	f0c0 80de 	bcc.w	900063d8 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x1d8>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000621c:	6860      	ldr	r0, [r4, #4]
9000621e:	6803      	ldr	r3, [r0, #0]
90006220:	6a1b      	ldr	r3, [r3, #32]
90006222:	4798      	blx	r3
90006224:	280f      	cmp	r0, #15
90006226:	f240 80e3 	bls.w	900063f0 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x1f0>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000622a:	68e0      	ldr	r0, [r4, #12]
9000622c:	6803      	ldr	r3, [r0, #0]
9000622e:	6a1b      	ldr	r3, [r3, #32]
90006230:	4798      	blx	r3
90006232:	283f      	cmp	r0, #63	; 0x3f
90006234:	f240 80d6 	bls.w	900063e4 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x1e4>
    if (*currentTrans)
90006238:	f8df a1f4 	ldr.w	sl, [pc, #500]	; 90006430 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x230>
    Application::getInstance()->clearAllTimerWidgets();
9000623c:	f014 fdc2 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90006240:	3004      	adds	r0, #4
90006242:	f014 fdfd 	bl	9001ae40 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90006246:	f8da 0000 	ldr.w	r0, [sl]
9000624a:	b140      	cbz	r0, 9000625e <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x5e>
        (*currentTrans)->tearDown();
9000624c:	6803      	ldr	r3, [r0, #0]
9000624e:	68db      	ldr	r3, [r3, #12]
90006250:	4798      	blx	r3
    if (*currentTrans)
90006252:	f8da 0000 	ldr.w	r0, [sl]
90006256:	b110      	cbz	r0, 9000625e <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x5e>
        (*currentTrans)->~Transition();
90006258:	6803      	ldr	r3, [r0, #0]
9000625a:	681b      	ldr	r3, [r3, #0]
9000625c:	4798      	blx	r3
    if (*currentScreen)
9000625e:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 90006434 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x234>
90006262:	f8d9 0000 	ldr.w	r0, [r9]
90006266:	2800      	cmp	r0, #0
90006268:	f000 80a2 	beq.w	900063b0 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x1b0>
        (*currentScreen)->tearDownScreen();
9000626c:	6803      	ldr	r3, [r0, #0]
9000626e:	695b      	ldr	r3, [r3, #20]
90006270:	4798      	blx	r3
    if (*currentPresenter)
90006272:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90006276:	2800      	cmp	r0, #0
90006278:	d07f      	beq.n	9000637a <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x17a>
        (*currentPresenter)->deactivate();
9000627a:	6803      	ldr	r3, [r0, #0]
9000627c:	685b      	ldr	r3, [r3, #4]
9000627e:	4798      	blx	r3
    if (*currentScreen)
90006280:	f8d9 0000 	ldr.w	r0, [r9]
90006284:	b110      	cbz	r0, 9000628c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x8c>
        (*currentScreen)->~Screen();
90006286:	6803      	ldr	r3, [r0, #0]
90006288:	681b      	ldr	r3, [r3, #0]
9000628a:	4798      	blx	r3
    if (*currentPresenter)
9000628c:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90006290:	b110      	cbz	r0, 90006298 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x98>
        (*currentPresenter)->~Presenter();
90006292:	6803      	ldr	r3, [r0, #0]
90006294:	689b      	ldr	r3, [r3, #8]
90006296:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90006298:	68e0      	ldr	r0, [r4, #12]
9000629a:	2100      	movs	r1, #0
9000629c:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
9000629e:	460f      	mov	r7, r1
900062a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900062a2:	4798      	blx	r3
          relativeValue(0)
900062a4:	4b55      	ldr	r3, [pc, #340]	; (900063fc <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x1fc>)
900062a6:	4606      	mov	r6, r0
900062a8:	4605      	mov	r5, r0
900062aa:	6047      	str	r7, [r0, #4]
900062ac:	7207      	strb	r7, [r0, #8]
900062ae:	f846 3b0c 	str.w	r3, [r6], #12
900062b2:	4630      	mov	r0, r6
900062b4:	f011 fa54 	bl	90017760 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
900062b8:	4b51      	ldr	r3, [pc, #324]	; (90006400 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x200>)
          relativeValue(0)
900062ba:	2214      	movs	r2, #20
900062bc:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
900062be:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
900062c0:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
900062c2:	2b00      	cmp	r3, #0
900062c4:	d165      	bne.n	90006392 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x192>
            done = true;
900062c6:	2301      	movs	r3, #1
900062c8:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900062ca:	68a0      	ldr	r0, [r4, #8]
900062cc:	2100      	movs	r1, #0
900062ce:	6803      	ldr	r3, [r0, #0]
900062d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900062d2:	4798      	blx	r3
900062d4:	4607      	mov	r7, r0
900062d6:	f002 fc7f 	bl	90008bd8 <_ZN18HomePageScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900062da:	6860      	ldr	r0, [r4, #4]
900062dc:	2100      	movs	r1, #0
900062de:	6803      	ldr	r3, [r0, #0]
900062e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900062e2:	4798      	blx	r3
900062e4:	4604      	mov	r4, r0
900062e6:	4639      	mov	r1, r7
900062e8:	f002 fc4a 	bl	90008b80 <_ZN23HomePageScreenPresenterC1ER18HomePageScreenView>
    *currentTrans = newTransition;
900062ec:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
900062f0:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
900062f4:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
900062f8:	2c00      	cmp	r4, #0
900062fa:	d05f      	beq.n	900063bc <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x1bc>
900062fc:	1d23      	adds	r3, r4, #4
900062fe:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90006302:	4638      	mov	r0, r7
90006304:	683b      	ldr	r3, [r7, #0]
90006306:	f8c4 b008 	str.w	fp, [r4, #8]
9000630a:	68db      	ldr	r3, [r3, #12]
9000630c:	63fc      	str	r4, [r7, #60]	; 0x3c
9000630e:	4798      	blx	r3
    newPresenter->activate();
90006310:	6823      	ldr	r3, [r4, #0]
90006312:	4620      	mov	r0, r4
90006314:	681b      	ldr	r3, [r3, #0]
90006316:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90006318:	4629      	mov	r1, r5
9000631a:	4638      	mov	r0, r7
9000631c:	f016 fb22 	bl	9001c964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90006320:	682b      	ldr	r3, [r5, #0]
90006322:	4938      	ldr	r1, [pc, #224]	; (90006404 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x204>)
90006324:	691a      	ldr	r2, [r3, #16]
90006326:	428a      	cmp	r2, r1
90006328:	d152      	bne.n	900063d0 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x1d0>
        if (done)
9000632a:	7a2a      	ldrb	r2, [r5, #8]
9000632c:	b9d2      	cbnz	r2, 90006364 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x164>
        Drawable* d = screenContainer->getFirstChild();
9000632e:	6868      	ldr	r0, [r5, #4]
90006330:	4a35      	ldr	r2, [pc, #212]	; (90006408 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x208>)
90006332:	6803      	ldr	r3, [r0, #0]
90006334:	69db      	ldr	r3, [r3, #28]
90006336:	4293      	cmp	r3, r2
90006338:	d142      	bne.n	900063c0 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x1c0>
9000633a:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
9000633c:	b164      	cbz	r4, 90006358 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x158>
9000633e:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90006340:	4f32      	ldr	r7, [pc, #200]	; (9000640c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x20c>)
                d->setY(d->getY() - targetValue);
90006342:	6823      	ldr	r3, [r4, #0]
90006344:	88e1      	ldrh	r1, [r4, #6]
90006346:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006348:	1a89      	subs	r1, r1, r2
9000634a:	42bb      	cmp	r3, r7
9000634c:	b209      	sxth	r1, r1
9000634e:	d119      	bne.n	90006384 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x184>
        rect.y = y;
90006350:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
90006352:	69a4      	ldr	r4, [r4, #24]
        while (d)
90006354:	2c00      	cmp	r4, #0
90006356:	d1f4      	bne.n	90006342 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x142>
        screenContainer->add(snapshot);
90006358:	6868      	ldr	r0, [r5, #4]
9000635a:	4631      	mov	r1, r6
9000635c:	6803      	ldr	r3, [r0, #0]
9000635e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90006360:	4798      	blx	r3
    newTransition->invalidate();
90006362:	682b      	ldr	r3, [r5, #0]
90006364:	695b      	ldr	r3, [r3, #20]
90006366:	4a2a      	ldr	r2, [pc, #168]	; (90006410 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x210>)
90006368:	4293      	cmp	r3, r2
9000636a:	d12c      	bne.n	900063c6 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x1c6>
        Application::getInstance()->invalidate();
9000636c:	f014 fd2a 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
}
90006370:	b001      	add	sp, #4
90006372:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006376:	f015 b9b9 	b.w	9001b6ec <_ZN8touchgfx11Application10invalidateEv>
    if (*currentScreen)
9000637a:	f8d9 0000 	ldr.w	r0, [r9]
9000637e:	2800      	cmp	r0, #0
90006380:	d181      	bne.n	90006286 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x86>
90006382:	e789      	b.n	90006298 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x98>
                d->setY(d->getY() - targetValue);
90006384:	4620      	mov	r0, r4
90006386:	4798      	blx	r3
90006388:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000638a:	2c00      	cmp	r4, #0
9000638c:	d0e4      	beq.n	90006358 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x158>
9000638e:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90006390:	e7d7      	b.n	90006342 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x142>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90006392:	4b20      	ldr	r3, [pc, #128]	; (90006414 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x214>)
        snapshot.makeSnapshot();
90006394:	4630      	mov	r0, r6
        rect.x = x;
90006396:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90006398:	f9b3 3000 	ldrsh.w	r3, [r3]
9000639c:	4f1e      	ldr	r7, [pc, #120]	; (90006418 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x218>)
        rect.width = width;
9000639e:	82ab      	strh	r3, [r5, #20]
900063a0:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.height = height;
900063a4:	82eb      	strh	r3, [r5, #22]
        snapshot.makeSnapshot();
900063a6:	f011 f956 	bl	90017656 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_HEIGHT;
900063aa:	883b      	ldrh	r3, [r7, #0]
900063ac:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
900063ae:	e78c      	b.n	900062ca <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0xca>
    if (*currentPresenter)
900063b0:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900063b4:	2800      	cmp	r0, #0
900063b6:	f47f af60 	bne.w	9000627a <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x7a>
900063ba:	e76d      	b.n	90006298 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x98>
    model->bind(newPresenter);
900063bc:	4623      	mov	r3, r4
900063be:	e79e      	b.n	900062fe <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0xfe>
        Drawable* d = screenContainer->getFirstChild();
900063c0:	4798      	blx	r3
900063c2:	4604      	mov	r4, r0
900063c4:	e7ba      	b.n	9000633c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x13c>
    newTransition->invalidate();
900063c6:	4628      	mov	r0, r5
900063c8:	b001      	add	sp, #4
900063ca:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900063ce:	4718      	bx	r3
    newTransition->init();
900063d0:	4628      	mov	r0, r5
900063d2:	4790      	blx	r2
    newTransition->invalidate();
900063d4:	682b      	ldr	r3, [r5, #0]
900063d6:	e7c5      	b.n	90006364 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x164>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900063d8:	4b10      	ldr	r3, [pc, #64]	; (9000641c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x21c>)
900063da:	21a3      	movs	r1, #163	; 0xa3
900063dc:	4a10      	ldr	r2, [pc, #64]	; (90006420 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x220>)
900063de:	4811      	ldr	r0, [pc, #68]	; (90006424 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x224>)
900063e0:	f025 f9f6 	bl	9002b7d0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900063e4:	4b10      	ldr	r3, [pc, #64]	; (90006428 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x228>)
900063e6:	21a5      	movs	r1, #165	; 0xa5
900063e8:	4a0d      	ldr	r2, [pc, #52]	; (90006420 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x220>)
900063ea:	480e      	ldr	r0, [pc, #56]	; (90006424 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x224>)
900063ec:	f025 f9f0 	bl	9002b7d0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900063f0:	4b0e      	ldr	r3, [pc, #56]	; (9000642c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x22c>)
900063f2:	21a4      	movs	r1, #164	; 0xa4
900063f4:	4a0a      	ldr	r2, [pc, #40]	; (90006420 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x220>)
900063f6:	480b      	ldr	r0, [pc, #44]	; (90006424 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionNorthImplEv+0x224>)
900063f8:	f025 f9ea 	bl	9002b7d0 <__assert_func>
900063fc:	9002f53c 	.word	0x9002f53c
90006400:	24028e2b 	.word	0x24028e2b
90006404:	90005ced 	.word	0x90005ced
90006408:	9000561d 	.word	0x9000561d
9000640c:	90002a01 	.word	0x90002a01
90006410:	90005b6d 	.word	0x90005b6d
90006414:	24028e20 	.word	0x24028e20
90006418:	24028e22 	.word	0x24028e22
9000641c:	9002ecb8 	.word	0x9002ecb8
90006420:	9002f10c 	.word	0x9002f10c
90006424:	9002ee5c 	.word	0x9002ee5c
90006428:	9002ef48 	.word	0x9002ef48
9000642c:	9002eea4 	.word	0x9002eea4
90006430:	24028e74 	.word	0x24028e74
90006434:	24028e70 	.word	0x24028e70

90006438 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoCalibrationScreenScreenSlideTransitionSouthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoCalibrationScreenScreenSlideTransitionSouthImpl()
{
90006438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<CalibrationScreenView, CalibrationScreenPresenter, touchgfx::SlideTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
9000643c:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90006440:	4680      	mov	r8, r0
90006442:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90006444:	68a0      	ldr	r0, [r4, #8]
90006446:	6803      	ldr	r3, [r0, #0]
90006448:	6a1b      	ldr	r3, [r3, #32]
9000644a:	4798      	blx	r3
9000644c:	f5b0 7f86 	cmp.w	r0, #268	; 0x10c
90006450:	f0c0 80df 	bcc.w	90006612 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x1da>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90006454:	6860      	ldr	r0, [r4, #4]
90006456:	6803      	ldr	r3, [r0, #0]
90006458:	6a1b      	ldr	r3, [r3, #32]
9000645a:	4798      	blx	r3
9000645c:	280f      	cmp	r0, #15
9000645e:	f240 80e4 	bls.w	9000662a <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x1f2>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90006462:	68e0      	ldr	r0, [r4, #12]
90006464:	6803      	ldr	r3, [r0, #0]
90006466:	6a1b      	ldr	r3, [r3, #32]
90006468:	4798      	blx	r3
9000646a:	283f      	cmp	r0, #63	; 0x3f
9000646c:	f240 80d7 	bls.w	9000661e <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x1e6>
    if (*currentTrans)
90006470:	f8df a1f8 	ldr.w	sl, [pc, #504]	; 9000666c <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x234>
    Application::getInstance()->clearAllTimerWidgets();
90006474:	f014 fca6 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90006478:	3004      	adds	r0, #4
9000647a:	f014 fce1 	bl	9001ae40 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
9000647e:	f8da 0000 	ldr.w	r0, [sl]
90006482:	b140      	cbz	r0, 90006496 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x5e>
        (*currentTrans)->tearDown();
90006484:	6803      	ldr	r3, [r0, #0]
90006486:	68db      	ldr	r3, [r3, #12]
90006488:	4798      	blx	r3
    if (*currentTrans)
9000648a:	f8da 0000 	ldr.w	r0, [sl]
9000648e:	b110      	cbz	r0, 90006496 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x5e>
        (*currentTrans)->~Transition();
90006490:	6803      	ldr	r3, [r0, #0]
90006492:	681b      	ldr	r3, [r3, #0]
90006494:	4798      	blx	r3
    if (*currentScreen)
90006496:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90006670 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x238>
9000649a:	f8d9 0000 	ldr.w	r0, [r9]
9000649e:	2800      	cmp	r0, #0
900064a0:	f000 80a3 	beq.w	900065ea <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x1b2>
        (*currentScreen)->tearDownScreen();
900064a4:	6803      	ldr	r3, [r0, #0]
900064a6:	695b      	ldr	r3, [r3, #20]
900064a8:	4798      	blx	r3
    if (*currentPresenter)
900064aa:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900064ae:	2800      	cmp	r0, #0
900064b0:	d07f      	beq.n	900065b2 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x17a>
        (*currentPresenter)->deactivate();
900064b2:	6803      	ldr	r3, [r0, #0]
900064b4:	685b      	ldr	r3, [r3, #4]
900064b6:	4798      	blx	r3
    if (*currentScreen)
900064b8:	f8d9 0000 	ldr.w	r0, [r9]
900064bc:	b110      	cbz	r0, 900064c4 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x8c>
        (*currentScreen)->~Screen();
900064be:	6803      	ldr	r3, [r0, #0]
900064c0:	681b      	ldr	r3, [r3, #0]
900064c2:	4798      	blx	r3
    if (*currentPresenter)
900064c4:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900064c8:	b110      	cbz	r0, 900064d0 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x98>
        (*currentPresenter)->~Presenter();
900064ca:	6803      	ldr	r3, [r0, #0]
900064cc:	689b      	ldr	r3, [r3, #8]
900064ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900064d0:	68e0      	ldr	r0, [r4, #12]
900064d2:	2100      	movs	r1, #0
900064d4:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
900064d6:	460f      	mov	r7, r1
900064d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900064da:	4798      	blx	r3
          relativeValue(0)
900064dc:	4b56      	ldr	r3, [pc, #344]	; (90006638 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x200>)
900064de:	4606      	mov	r6, r0
900064e0:	4605      	mov	r5, r0
900064e2:	6047      	str	r7, [r0, #4]
900064e4:	7207      	strb	r7, [r0, #8]
900064e6:	f846 3b0c 	str.w	r3, [r6], #12
900064ea:	4630      	mov	r0, r6
900064ec:	f011 f938 	bl	90017760 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
900064f0:	4b52      	ldr	r3, [pc, #328]	; (9000663c <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x204>)
          relativeValue(0)
900064f2:	2214      	movs	r2, #20
900064f4:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
900064f6:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
900064f8:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
900064fa:	2b00      	cmp	r3, #0
900064fc:	d165      	bne.n	900065ca <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x192>
            done = true;
900064fe:	2301      	movs	r3, #1
90006500:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90006502:	68a0      	ldr	r0, [r4, #8]
90006504:	2100      	movs	r1, #0
90006506:	6803      	ldr	r3, [r0, #0]
90006508:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000650a:	4798      	blx	r3
9000650c:	4607      	mov	r7, r0
9000650e:	f002 faf1 	bl	90008af4 <_ZN21CalibrationScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90006512:	6860      	ldr	r0, [r4, #4]
90006514:	2100      	movs	r1, #0
90006516:	6803      	ldr	r3, [r0, #0]
90006518:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000651a:	4798      	blx	r3
9000651c:	4604      	mov	r4, r0
9000651e:	4639      	mov	r1, r7
90006520:	f002 fabc 	bl	90008a9c <_ZN26CalibrationScreenPresenterC1ER21CalibrationScreenView>
    *currentTrans = newTransition;
90006524:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90006528:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
9000652c:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
90006530:	2c00      	cmp	r4, #0
90006532:	d060      	beq.n	900065f6 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x1be>
90006534:	1d23      	adds	r3, r4, #4
90006536:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
9000653a:	4638      	mov	r0, r7
9000653c:	683b      	ldr	r3, [r7, #0]
9000653e:	f8c4 b008 	str.w	fp, [r4, #8]
90006542:	68db      	ldr	r3, [r3, #12]
90006544:	63fc      	str	r4, [r7, #60]	; 0x3c
90006546:	4798      	blx	r3
    newPresenter->activate();
90006548:	6823      	ldr	r3, [r4, #0]
9000654a:	4620      	mov	r0, r4
9000654c:	681b      	ldr	r3, [r3, #0]
9000654e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90006550:	4629      	mov	r1, r5
90006552:	4638      	mov	r0, r7
90006554:	f016 fa06 	bl	9001c964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90006558:	682b      	ldr	r3, [r5, #0]
9000655a:	4939      	ldr	r1, [pc, #228]	; (90006640 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x208>)
9000655c:	691a      	ldr	r2, [r3, #16]
9000655e:	428a      	cmp	r2, r1
90006560:	d153      	bne.n	9000660a <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x1d2>
        if (done)
90006562:	7a2a      	ldrb	r2, [r5, #8]
90006564:	b9d2      	cbnz	r2, 9000659c <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x164>
        Drawable* d = screenContainer->getFirstChild();
90006566:	6868      	ldr	r0, [r5, #4]
90006568:	4a36      	ldr	r2, [pc, #216]	; (90006644 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x20c>)
9000656a:	6803      	ldr	r3, [r0, #0]
9000656c:	69db      	ldr	r3, [r3, #28]
9000656e:	4293      	cmp	r3, r2
90006570:	d143      	bne.n	900065fa <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x1c2>
90006572:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90006574:	b164      	cbz	r4, 90006590 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x158>
90006576:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90006578:	4f33      	ldr	r7, [pc, #204]	; (90006648 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x210>)
                d->setY(d->getY() - targetValue);
9000657a:	6823      	ldr	r3, [r4, #0]
9000657c:	88e1      	ldrh	r1, [r4, #6]
9000657e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006580:	1a89      	subs	r1, r1, r2
90006582:	42bb      	cmp	r3, r7
90006584:	b209      	sxth	r1, r1
90006586:	d119      	bne.n	900065bc <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x184>
        rect.y = y;
90006588:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
9000658a:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000658c:	2c00      	cmp	r4, #0
9000658e:	d1f4      	bne.n	9000657a <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x142>
        screenContainer->add(snapshot);
90006590:	6868      	ldr	r0, [r5, #4]
90006592:	4631      	mov	r1, r6
90006594:	6803      	ldr	r3, [r0, #0]
90006596:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90006598:	4798      	blx	r3
    newTransition->invalidate();
9000659a:	682b      	ldr	r3, [r5, #0]
9000659c:	695b      	ldr	r3, [r3, #20]
9000659e:	4a2b      	ldr	r2, [pc, #172]	; (9000664c <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x214>)
900065a0:	4293      	cmp	r3, r2
900065a2:	d12d      	bne.n	90006600 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x1c8>
        Application::getInstance()->invalidate();
900065a4:	f014 fc0e 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
}
900065a8:	b001      	add	sp, #4
900065aa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900065ae:	f015 b89d 	b.w	9001b6ec <_ZN8touchgfx11Application10invalidateEv>
    if (*currentScreen)
900065b2:	f8d9 0000 	ldr.w	r0, [r9]
900065b6:	2800      	cmp	r0, #0
900065b8:	d181      	bne.n	900064be <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x86>
900065ba:	e789      	b.n	900064d0 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x98>
                d->setY(d->getY() - targetValue);
900065bc:	4620      	mov	r0, r4
900065be:	4798      	blx	r3
900065c0:	69a4      	ldr	r4, [r4, #24]
        while (d)
900065c2:	2c00      	cmp	r4, #0
900065c4:	d0e4      	beq.n	90006590 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x158>
900065c6:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900065c8:	e7d7      	b.n	9000657a <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x142>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900065ca:	4b21      	ldr	r3, [pc, #132]	; (90006650 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x218>)
        snapshot.makeSnapshot();
900065cc:	4630      	mov	r0, r6
        rect.x = x;
900065ce:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900065d0:	f9b3 3000 	ldrsh.w	r3, [r3]
900065d4:	4f1f      	ldr	r7, [pc, #124]	; (90006654 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x21c>)
        rect.width = width;
900065d6:	82ab      	strh	r3, [r5, #20]
900065d8:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.height = height;
900065dc:	82eb      	strh	r3, [r5, #22]
        snapshot.makeSnapshot();
900065de:	f011 f83a 	bl	90017656 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_HEIGHT;
900065e2:	883b      	ldrh	r3, [r7, #0]
900065e4:	425b      	negs	r3, r3
900065e6:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
900065e8:	e78b      	b.n	90006502 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0xca>
    if (*currentPresenter)
900065ea:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900065ee:	2800      	cmp	r0, #0
900065f0:	f47f af5f 	bne.w	900064b2 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x7a>
900065f4:	e76c      	b.n	900064d0 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x98>
    model->bind(newPresenter);
900065f6:	4623      	mov	r3, r4
900065f8:	e79d      	b.n	90006536 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0xfe>
        Drawable* d = screenContainer->getFirstChild();
900065fa:	4798      	blx	r3
900065fc:	4604      	mov	r4, r0
900065fe:	e7b9      	b.n	90006574 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x13c>
    newTransition->invalidate();
90006600:	4628      	mov	r0, r5
90006602:	b001      	add	sp, #4
90006604:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006608:	4718      	bx	r3
    newTransition->init();
9000660a:	4628      	mov	r0, r5
9000660c:	4790      	blx	r2
    newTransition->invalidate();
9000660e:	682b      	ldr	r3, [r5, #0]
90006610:	e7c4      	b.n	9000659c <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x164>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90006612:	4b11      	ldr	r3, [pc, #68]	; (90006658 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x220>)
90006614:	21a3      	movs	r1, #163	; 0xa3
90006616:	4a11      	ldr	r2, [pc, #68]	; (9000665c <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x224>)
90006618:	4811      	ldr	r0, [pc, #68]	; (90006660 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x228>)
9000661a:	f025 f8d9 	bl	9002b7d0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000661e:	4b11      	ldr	r3, [pc, #68]	; (90006664 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x22c>)
90006620:	21a5      	movs	r1, #165	; 0xa5
90006622:	4a0e      	ldr	r2, [pc, #56]	; (9000665c <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x224>)
90006624:	480e      	ldr	r0, [pc, #56]	; (90006660 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x228>)
90006626:	f025 f8d3 	bl	9002b7d0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000662a:	4b0f      	ldr	r3, [pc, #60]	; (90006668 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x230>)
9000662c:	21a4      	movs	r1, #164	; 0xa4
9000662e:	4a0b      	ldr	r2, [pc, #44]	; (9000665c <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x224>)
90006630:	480b      	ldr	r0, [pc, #44]	; (90006660 <_ZN23FrontendApplicationBase51gotoCalibrationScreenScreenSlideTransitionSouthImplEv+0x228>)
90006632:	f025 f8cd 	bl	9002b7d0 <__assert_func>
90006636:	bf00      	nop
90006638:	9002f518 	.word	0x9002f518
9000663c:	24028e2b 	.word	0x24028e2b
90006640:	90005d4d 	.word	0x90005d4d
90006644:	9000561d 	.word	0x9000561d
90006648:	90002a01 	.word	0x90002a01
9000664c:	90005b6d 	.word	0x90005b6d
90006650:	24028e20 	.word	0x24028e20
90006654:	24028e22 	.word	0x24028e22
90006658:	9002ecb8 	.word	0x9002ecb8
9000665c:	9002f234 	.word	0x9002f234
90006660:	9002ee5c 	.word	0x9002ee5c
90006664:	9002ef48 	.word	0x9002ef48
90006668:	9002eea4 	.word	0x9002eea4
9000666c:	24028e74 	.word	0x24028e74
90006670:	24028e70 	.word	0x24028e70

90006674 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv>:
{
90006674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<HomePageScreenView, HomePageScreenPresenter, touchgfx::SlideTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90006678:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
9000667c:	4680      	mov	r8, r0
9000667e:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90006680:	68a0      	ldr	r0, [r4, #8]
90006682:	6803      	ldr	r3, [r0, #0]
90006684:	6a1b      	ldr	r3, [r3, #32]
90006686:	4798      	blx	r3
90006688:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
9000668c:	f0c0 80df 	bcc.w	9000684e <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x1da>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90006690:	6860      	ldr	r0, [r4, #4]
90006692:	6803      	ldr	r3, [r0, #0]
90006694:	6a1b      	ldr	r3, [r3, #32]
90006696:	4798      	blx	r3
90006698:	280f      	cmp	r0, #15
9000669a:	f240 80e4 	bls.w	90006866 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x1f2>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000669e:	68e0      	ldr	r0, [r4, #12]
900066a0:	6803      	ldr	r3, [r0, #0]
900066a2:	6a1b      	ldr	r3, [r3, #32]
900066a4:	4798      	blx	r3
900066a6:	283f      	cmp	r0, #63	; 0x3f
900066a8:	f240 80d7 	bls.w	9000685a <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x1e6>
    if (*currentTrans)
900066ac:	f8df a1f8 	ldr.w	sl, [pc, #504]	; 900068a8 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x234>
    Application::getInstance()->clearAllTimerWidgets();
900066b0:	f014 fb88 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
900066b4:	3004      	adds	r0, #4
900066b6:	f014 fbc3 	bl	9001ae40 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900066ba:	f8da 0000 	ldr.w	r0, [sl]
900066be:	b140      	cbz	r0, 900066d2 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x5e>
        (*currentTrans)->tearDown();
900066c0:	6803      	ldr	r3, [r0, #0]
900066c2:	68db      	ldr	r3, [r3, #12]
900066c4:	4798      	blx	r3
    if (*currentTrans)
900066c6:	f8da 0000 	ldr.w	r0, [sl]
900066ca:	b110      	cbz	r0, 900066d2 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x5e>
        (*currentTrans)->~Transition();
900066cc:	6803      	ldr	r3, [r0, #0]
900066ce:	681b      	ldr	r3, [r3, #0]
900066d0:	4798      	blx	r3
    if (*currentScreen)
900066d2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 900068ac <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x238>
900066d6:	f8d9 0000 	ldr.w	r0, [r9]
900066da:	2800      	cmp	r0, #0
900066dc:	f000 80a3 	beq.w	90006826 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x1b2>
        (*currentScreen)->tearDownScreen();
900066e0:	6803      	ldr	r3, [r0, #0]
900066e2:	695b      	ldr	r3, [r3, #20]
900066e4:	4798      	blx	r3
    if (*currentPresenter)
900066e6:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900066ea:	2800      	cmp	r0, #0
900066ec:	d07f      	beq.n	900067ee <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x17a>
        (*currentPresenter)->deactivate();
900066ee:	6803      	ldr	r3, [r0, #0]
900066f0:	685b      	ldr	r3, [r3, #4]
900066f2:	4798      	blx	r3
    if (*currentScreen)
900066f4:	f8d9 0000 	ldr.w	r0, [r9]
900066f8:	b110      	cbz	r0, 90006700 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x8c>
        (*currentScreen)->~Screen();
900066fa:	6803      	ldr	r3, [r0, #0]
900066fc:	681b      	ldr	r3, [r3, #0]
900066fe:	4798      	blx	r3
    if (*currentPresenter)
90006700:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90006704:	b110      	cbz	r0, 9000670c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x98>
        (*currentPresenter)->~Presenter();
90006706:	6803      	ldr	r3, [r0, #0]
90006708:	689b      	ldr	r3, [r3, #8]
9000670a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
9000670c:	68e0      	ldr	r0, [r4, #12]
9000670e:	2100      	movs	r1, #0
90006710:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90006712:	460f      	mov	r7, r1
90006714:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90006716:	4798      	blx	r3
          relativeValue(0)
90006718:	4b56      	ldr	r3, [pc, #344]	; (90006874 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x200>)
9000671a:	4606      	mov	r6, r0
9000671c:	4605      	mov	r5, r0
9000671e:	6047      	str	r7, [r0, #4]
90006720:	7207      	strb	r7, [r0, #8]
90006722:	f846 3b0c 	str.w	r3, [r6], #12
90006726:	4630      	mov	r0, r6
90006728:	f011 f81a 	bl	90017760 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
9000672c:	4b52      	ldr	r3, [pc, #328]	; (90006878 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x204>)
          relativeValue(0)
9000672e:	2214      	movs	r2, #20
90006730:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90006732:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
90006734:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90006736:	2b00      	cmp	r3, #0
90006738:	d165      	bne.n	90006806 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x192>
            done = true;
9000673a:	2301      	movs	r3, #1
9000673c:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
9000673e:	68a0      	ldr	r0, [r4, #8]
90006740:	2100      	movs	r1, #0
90006742:	6803      	ldr	r3, [r0, #0]
90006744:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90006746:	4798      	blx	r3
90006748:	4607      	mov	r7, r0
9000674a:	f002 fa45 	bl	90008bd8 <_ZN18HomePageScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
9000674e:	6860      	ldr	r0, [r4, #4]
90006750:	2100      	movs	r1, #0
90006752:	6803      	ldr	r3, [r0, #0]
90006754:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90006756:	4798      	blx	r3
90006758:	4604      	mov	r4, r0
9000675a:	4639      	mov	r1, r7
9000675c:	f002 fa10 	bl	90008b80 <_ZN23HomePageScreenPresenterC1ER18HomePageScreenView>
    *currentTrans = newTransition;
90006760:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90006764:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90006768:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
9000676c:	2c00      	cmp	r4, #0
9000676e:	d060      	beq.n	90006832 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x1be>
90006770:	1d23      	adds	r3, r4, #4
90006772:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90006776:	4638      	mov	r0, r7
90006778:	683b      	ldr	r3, [r7, #0]
9000677a:	f8c4 b008 	str.w	fp, [r4, #8]
9000677e:	68db      	ldr	r3, [r3, #12]
90006780:	63fc      	str	r4, [r7, #60]	; 0x3c
90006782:	4798      	blx	r3
    newPresenter->activate();
90006784:	6823      	ldr	r3, [r4, #0]
90006786:	4620      	mov	r0, r4
90006788:	681b      	ldr	r3, [r3, #0]
9000678a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
9000678c:	4629      	mov	r1, r5
9000678e:	4638      	mov	r0, r7
90006790:	f016 f8e8 	bl	9001c964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90006794:	682b      	ldr	r3, [r5, #0]
90006796:	4939      	ldr	r1, [pc, #228]	; (9000687c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x208>)
90006798:	691a      	ldr	r2, [r3, #16]
9000679a:	428a      	cmp	r2, r1
9000679c:	d153      	bne.n	90006846 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x1d2>
        if (done)
9000679e:	7a2a      	ldrb	r2, [r5, #8]
900067a0:	b9d2      	cbnz	r2, 900067d8 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x164>
        Drawable* d = screenContainer->getFirstChild();
900067a2:	6868      	ldr	r0, [r5, #4]
900067a4:	4a36      	ldr	r2, [pc, #216]	; (90006880 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x20c>)
900067a6:	6803      	ldr	r3, [r0, #0]
900067a8:	69db      	ldr	r3, [r3, #28]
900067aa:	4293      	cmp	r3, r2
900067ac:	d143      	bne.n	90006836 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x1c2>
900067ae:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
900067b0:	b164      	cbz	r4, 900067cc <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x158>
900067b2:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900067b4:	4f33      	ldr	r7, [pc, #204]	; (90006884 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x210>)
                d->setY(d->getY() - targetValue);
900067b6:	6823      	ldr	r3, [r4, #0]
900067b8:	88e1      	ldrh	r1, [r4, #6]
900067ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900067bc:	1a89      	subs	r1, r1, r2
900067be:	42bb      	cmp	r3, r7
900067c0:	b209      	sxth	r1, r1
900067c2:	d119      	bne.n	900067f8 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x184>
        rect.y = y;
900067c4:	80e1      	strh	r1, [r4, #6]
        return nextSibling;
900067c6:	69a4      	ldr	r4, [r4, #24]
        while (d)
900067c8:	2c00      	cmp	r4, #0
900067ca:	d1f4      	bne.n	900067b6 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x142>
        screenContainer->add(snapshot);
900067cc:	6868      	ldr	r0, [r5, #4]
900067ce:	4631      	mov	r1, r6
900067d0:	6803      	ldr	r3, [r0, #0]
900067d2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900067d4:	4798      	blx	r3
    newTransition->invalidate();
900067d6:	682b      	ldr	r3, [r5, #0]
900067d8:	695b      	ldr	r3, [r3, #20]
900067da:	4a2b      	ldr	r2, [pc, #172]	; (90006888 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x214>)
900067dc:	4293      	cmp	r3, r2
900067de:	d12d      	bne.n	9000683c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x1c8>
        Application::getInstance()->invalidate();
900067e0:	f014 faf0 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
}
900067e4:	b001      	add	sp, #4
900067e6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900067ea:	f014 bf7f 	b.w	9001b6ec <_ZN8touchgfx11Application10invalidateEv>
    if (*currentScreen)
900067ee:	f8d9 0000 	ldr.w	r0, [r9]
900067f2:	2800      	cmp	r0, #0
900067f4:	d181      	bne.n	900066fa <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x86>
900067f6:	e789      	b.n	9000670c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x98>
                d->setY(d->getY() - targetValue);
900067f8:	4620      	mov	r0, r4
900067fa:	4798      	blx	r3
900067fc:	69a4      	ldr	r4, [r4, #24]
        while (d)
900067fe:	2c00      	cmp	r4, #0
90006800:	d0e4      	beq.n	900067cc <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x158>
90006802:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90006804:	e7d7      	b.n	900067b6 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x142>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90006806:	4b21      	ldr	r3, [pc, #132]	; (9000688c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x218>)
        snapshot.makeSnapshot();
90006808:	4630      	mov	r0, r6
        rect.x = x;
9000680a:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
9000680c:	f9b3 3000 	ldrsh.w	r3, [r3]
90006810:	4f1f      	ldr	r7, [pc, #124]	; (90006890 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x21c>)
        rect.width = width;
90006812:	82ab      	strh	r3, [r5, #20]
90006814:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.height = height;
90006818:	82eb      	strh	r3, [r5, #22]
        snapshot.makeSnapshot();
9000681a:	f010 ff1c 	bl	90017656 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_HEIGHT;
9000681e:	883b      	ldrh	r3, [r7, #0]
90006820:	425b      	negs	r3, r3
90006822:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90006824:	e78b      	b.n	9000673e <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0xca>
    if (*currentPresenter)
90006826:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
9000682a:	2800      	cmp	r0, #0
9000682c:	f47f af5f 	bne.w	900066ee <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x7a>
90006830:	e76c      	b.n	9000670c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x98>
    model->bind(newPresenter);
90006832:	4623      	mov	r3, r4
90006834:	e79d      	b.n	90006772 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0xfe>
        Drawable* d = screenContainer->getFirstChild();
90006836:	4798      	blx	r3
90006838:	4604      	mov	r4, r0
9000683a:	e7b9      	b.n	900067b0 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x13c>
    newTransition->invalidate();
9000683c:	4628      	mov	r0, r5
9000683e:	b001      	add	sp, #4
90006840:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006844:	4718      	bx	r3
    newTransition->init();
90006846:	4628      	mov	r0, r5
90006848:	4790      	blx	r2
    newTransition->invalidate();
9000684a:	682b      	ldr	r3, [r5, #0]
9000684c:	e7c4      	b.n	900067d8 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x164>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
9000684e:	4b11      	ldr	r3, [pc, #68]	; (90006894 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x220>)
90006850:	21a3      	movs	r1, #163	; 0xa3
90006852:	4a11      	ldr	r2, [pc, #68]	; (90006898 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x224>)
90006854:	4811      	ldr	r0, [pc, #68]	; (9000689c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x228>)
90006856:	f024 ffbb 	bl	9002b7d0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000685a:	4b11      	ldr	r3, [pc, #68]	; (900068a0 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x22c>)
9000685c:	21a5      	movs	r1, #165	; 0xa5
9000685e:	4a0e      	ldr	r2, [pc, #56]	; (90006898 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x224>)
90006860:	480e      	ldr	r0, [pc, #56]	; (9000689c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x228>)
90006862:	f024 ffb5 	bl	9002b7d0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90006866:	4b0f      	ldr	r3, [pc, #60]	; (900068a4 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x230>)
90006868:	21a4      	movs	r1, #164	; 0xa4
9000686a:	4a0b      	ldr	r2, [pc, #44]	; (90006898 <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x224>)
9000686c:	480b      	ldr	r0, [pc, #44]	; (9000689c <_ZN23FrontendApplicationBase48gotoHomePageScreenScreenSlideTransitionSouthImplEv+0x228>)
9000686e:	f024 ffaf 	bl	9002b7d0 <__assert_func>
90006872:	bf00      	nop
90006874:	9002f518 	.word	0x9002f518
90006878:	24028e2b 	.word	0x24028e2b
9000687c:	90005d4d 	.word	0x90005d4d
90006880:	9000561d 	.word	0x9000561d
90006884:	90002a01 	.word	0x90002a01
90006888:	90005b6d 	.word	0x90005b6d
9000688c:	24028e20 	.word	0x24028e20
90006890:	24028e22 	.word	0x24028e22
90006894:	9002ecb8 	.word	0x9002ecb8
90006898:	9002f360 	.word	0x9002f360
9000689c:	9002ee5c 	.word	0x9002ee5c
900068a0:	9002ef48 	.word	0x9002ef48
900068a4:	9002eea4 	.word	0x9002eea4
900068a8:	24028e74 	.word	0x24028e74
900068ac:	24028e70 	.word	0x24028e70

900068b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
900068b0:	b570      	push	{r4, r5, r6, lr}
900068b2:	4604      	mov	r4, r0
900068b4:	4616      	mov	r6, r2
900068b6:	460d      	mov	r5, r1
          pendingScreenTransitionCallback(0)
900068b8:	f014 fb94 	bl	9001afe4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
900068bc:	4a18      	ldr	r2, [pc, #96]	; (90006920 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
          pendingScreenTransitionCallback(0)
900068be:	2300      	movs	r3, #0
      model(m)
900068c0:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
        instance = this;
900068c4:	6014      	str	r4, [r2, #0]
        return instance;
900068c6:	4e17      	ldr	r6, [pc, #92]	; (90006924 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x74>)
900068c8:	4a17      	ldr	r2, [pc, #92]	; (90006928 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x78>)
900068ca:	6830      	ldr	r0, [r6, #0]
900068cc:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
900068ce:	4a17      	ldr	r2, [pc, #92]	; (9000692c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
900068d0:	4917      	ldr	r1, [pc, #92]	; (90006930 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>)
900068d2:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
900068d6:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
900068da:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
900068de:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900068e2:	6802      	ldr	r2, [r0, #0]
900068e4:	6892      	ldr	r2, [r2, #8]
900068e6:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
900068e8:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
900068ec:	d115      	bne.n	9000691a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6a>
        requestedOrientation = orientation;
900068ee:	f44f 7380 	mov.w	r3, #256	; 0x100
900068f2:	f8a0 3074 	strh.w	r3, [r0, #116]	; 0x74
    touchgfx::Texts::setLanguage(GB);
900068f6:	2000      	movs	r0, #0
900068f8:	f002 f84c 	bl	90008994 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900068fc:	6833      	ldr	r3, [r6, #0]
900068fe:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
90006902:	b12a      	cbz	r2, 90006910 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>
90006904:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006906:	b118      	cbz	r0, 90006910 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90006908:	f01b ffbf 	bl	9002288a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
9000690c:	4620      	mov	r0, r4
9000690e:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90006910:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90006912:	f01b ffba 	bl	9002288a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
90006916:	4620      	mov	r0, r4
90006918:	bd70      	pop	{r4, r5, r6, pc}
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000691a:	4619      	mov	r1, r3
9000691c:	4790      	blx	r2
9000691e:	e7ea      	b.n	900068f6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90006920:	24028e80 	.word	0x24028e80
90006924:	24028e2c 	.word	0x24028e2c
90006928:	9002f4a8 	.word	0x9002f4a8
9000692c:	9002f490 	.word	0x9002f490
90006930:	90000cdd 	.word	0x90000cdd

90006934 <_ZN23FrontendApplicationBase40gotoMainScreenScreenSlideTransitionNorthEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90006934:	4905      	ldr	r1, [pc, #20]	; (9000694c <_ZN23FrontendApplicationBase40gotoMainScreenScreenSlideTransitionNorthEv+0x18>)
90006936:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90006938:	f500 73a2 	add.w	r3, r0, #324	; 0x144
9000693c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90006940:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90006944:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90006948:	4770      	bx	lr
9000694a:	bf00      	nop
9000694c:	90005fc5 	.word	0x90005fc5

90006950 <_ZN23FrontendApplicationBase36gotoHomePageScreenScreenNoTransitionEv>:
90006950:	4905      	ldr	r1, [pc, #20]	; (90006968 <_ZN23FrontendApplicationBase36gotoHomePageScreenScreenNoTransitionEv+0x18>)
90006952:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90006954:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90006958:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
9000695c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90006960:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90006964:	4770      	bx	lr
90006966:	bf00      	nop
90006968:	90005dad 	.word	0x90005dad

9000696c <_ZN23FrontendApplicationBase44gotoHomePageScreenScreenSlideTransitionSouthEv>:
9000696c:	4905      	ldr	r1, [pc, #20]	; (90006984 <_ZN23FrontendApplicationBase44gotoHomePageScreenScreenSlideTransitionSouthEv+0x18>)
9000696e:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90006970:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90006974:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90006978:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
9000697c:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90006980:	4770      	bx	lr
90006982:	bf00      	nop
90006984:	90006675 	.word	0x90006675

90006988 <_ZN23FrontendApplicationBase44gotoHomePageScreenScreenSlideTransitionNorthEv>:
90006988:	4905      	ldr	r1, [pc, #20]	; (900069a0 <_ZN23FrontendApplicationBase44gotoHomePageScreenScreenSlideTransitionNorthEv+0x18>)
9000698a:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
9000698c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90006990:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90006994:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90006998:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
9000699c:	4770      	bx	lr
9000699e:	bf00      	nop
900069a0:	90006201 	.word	0x90006201

900069a4 <_ZN23FrontendApplicationBase47gotoCalibrationScreenScreenSlideTransitionSouthEv>:
900069a4:	4905      	ldr	r1, [pc, #20]	; (900069bc <_ZN23FrontendApplicationBase47gotoCalibrationScreenScreenSlideTransitionSouthEv+0x18>)
900069a6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900069a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900069ac:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900069b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900069b4:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
900069b8:	4770      	bx	lr
900069ba:	bf00      	nop
900069bc:	90006439 	.word	0x90006439

900069c0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
900069c0:	6a40      	ldr	r0, [r0, #36]	; 0x24
900069c2:	4770      	bx	lr

900069c4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
900069c4:	6a80      	ldr	r0, [r0, #40]	; 0x28
900069c6:	4770      	bx	lr

900069c8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
900069c8:	4770      	bx	lr
900069ca:	bf00      	nop

900069cc <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
900069cc:	888b      	ldrh	r3, [r1, #4]
900069ce:	69c0      	ldr	r0, [r0, #28]
900069d0:	0adb      	lsrs	r3, r3, #11
900069d2:	680a      	ldr	r2, [r1, #0]
900069d4:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
900069d8:	4410      	add	r0, r2
900069da:	4770      	bx	lr

900069dc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
900069dc:	b1da      	cbz	r2, 90006a16 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
900069de:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
900069e0:	7b14      	ldrb	r4, [r2, #12]
900069e2:	b1b4      	cbz	r4, 90006a12 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
900069e4:	f892 c00d 	ldrb.w	ip, [r2, #13]
900069e8:	f892 e00b 	ldrb.w	lr, [r2, #11]
900069ec:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
900069f0:	6a03      	ldr	r3, [r0, #32]
900069f2:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
900069f6:	ea4e 0202 	orr.w	r2, lr, r2
900069fa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900069fe:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
90006a02:	881a      	ldrh	r2, [r3, #0]
90006a04:	428a      	cmp	r2, r1
90006a06:	d008      	beq.n	90006a1a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90006a08:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90006a0c:	d801      	bhi.n	90006a12 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90006a0e:	4283      	cmp	r3, r0
90006a10:	d1f7      	bne.n	90006a02 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
90006a12:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
90006a14:	bd10      	pop	{r4, pc}
        return 0;
90006a16:	4610      	mov	r0, r2
}
90006a18:	4770      	bx	lr
            return kerndata->distance;
90006a1a:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
90006a1e:	bd10      	pop	{r4, pc}

90006a20 <_ZN8touchgfx13GeneratedFontD0Ev>:
90006a20:	b510      	push	{r4, lr}
90006a22:	4604      	mov	r4, r0
90006a24:	212c      	movs	r1, #44	; 0x2c
90006a26:	f024 fcf6 	bl	9002b416 <_ZdlPvj>
90006a2a:	4620      	mov	r0, r4
90006a2c:	bd10      	pop	{r4, pc}
90006a2e:	bf00      	nop

90006a30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006a30:	b530      	push	{r4, r5, lr}
90006a32:	b08b      	sub	sp, #44	; 0x2c
90006a34:	4604      	mov	r4, r0
90006a36:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
90006a3a:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006a3c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
90006a40:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006a42:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
90006a46:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006a48:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
90006a4c:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006a4e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
90006a52:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006a54:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
90006a58:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006a5a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
90006a5e:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006a60:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
90006a64:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006a66:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
90006a6a:	9508      	str	r5, [sp, #32]
90006a6c:	f015 fae6 	bl	9001c03c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
90006a70:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
90006a72:	4620      	mov	r0, r4
      arabicTable(formsTable)
90006a74:	61e3      	str	r3, [r4, #28]
90006a76:	9b16      	ldr	r3, [sp, #88]	; 0x58
90006a78:	6223      	str	r3, [r4, #32]
90006a7a:	9b19      	ldr	r3, [sp, #100]	; 0x64
90006a7c:	6263      	str	r3, [r4, #36]	; 0x24
90006a7e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90006a80:	62a3      	str	r3, [r4, #40]	; 0x28
90006a82:	4b02      	ldr	r3, [pc, #8]	; (90006a8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90006a84:	6023      	str	r3, [r4, #0]
}
90006a86:	b00b      	add	sp, #44	; 0x2c
90006a88:	bd30      	pop	{r4, r5, pc}
90006a8a:	bf00      	nop
90006a8c:	9002f560 	.word	0x9002f560

90006a90 <_ZN22HomePageScreenViewBaseD1Ev>:
}

HomePageScreenViewBase::~HomePageScreenViewBase()
{

}
90006a90:	4770      	bx	lr
90006a92:	bf00      	nop

90006a94 <_ZN22HomePageScreenViewBase11setupScreenEv>:

void HomePageScreenViewBase::setupScreen()
{

}
90006a94:	4770      	bx	lr
90006a96:	bf00      	nop

90006a98 <_ZN8touchgfx8CallbackI22HomePageScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006a98:	4770      	bx	lr
90006a9a:	bf00      	nop

90006a9c <_ZN8touchgfx8CallbackI22HomePageScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90006a9c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90006a9e:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90006aa0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90006aa2:	6844      	ldr	r4, [r0, #4]
90006aa4:	f012 0f01 	tst.w	r2, #1
90006aa8:	eb04 0062 	add.w	r0, r4, r2, asr #1
90006aac:	d103      	bne.n	90006ab6 <_ZN8touchgfx8CallbackI22HomePageScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90006aae:	689b      	ldr	r3, [r3, #8]
    }
90006ab0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006ab4:	4718      	bx	r3
90006ab6:	ea4f 0c62 	mov.w	ip, r2, asr #1
90006aba:	689b      	ldr	r3, [r3, #8]
90006abc:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90006ac0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006ac4:	58d3      	ldr	r3, [r2, r3]
90006ac6:	4718      	bx	r3

90006ac8 <_ZNK8touchgfx8CallbackI22HomePageScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90006ac8:	6843      	ldr	r3, [r0, #4]
90006aca:	b13b      	cbz	r3, 90006adc <_ZNK8touchgfx8CallbackI22HomePageScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90006acc:	6883      	ldr	r3, [r0, #8]
90006ace:	b10b      	cbz	r3, 90006ad4 <_ZNK8touchgfx8CallbackI22HomePageScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90006ad0:	2001      	movs	r0, #1
    }
90006ad2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90006ad4:	68c0      	ldr	r0, [r0, #12]
90006ad6:	f000 0001 	and.w	r0, r0, #1
90006ada:	4770      	bx	lr
90006adc:	4618      	mov	r0, r3
90006ade:	4770      	bx	lr

90006ae0 <_ZN8touchgfx8CallbackI22HomePageScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006ae0:	b510      	push	{r4, lr}
90006ae2:	4604      	mov	r4, r0
90006ae4:	2110      	movs	r1, #16
90006ae6:	f024 fc96 	bl	9002b416 <_ZdlPvj>
90006aea:	4620      	mov	r0, r4
90006aec:	bd10      	pop	{r4, pc}
90006aee:	bf00      	nop

90006af0 <_ZN22HomePageScreenViewBaseD0Ev>:
HomePageScreenViewBase::~HomePageScreenViewBase()
90006af0:	b510      	push	{r4, lr}
90006af2:	4604      	mov	r4, r0
}
90006af4:	f44f 71b8 	mov.w	r1, #368	; 0x170
90006af8:	f024 fc8d 	bl	9002b416 <_ZdlPvj>
90006afc:	4620      	mov	r0, r4
90006afe:	bd10      	pop	{r4, pc}

90006b00 <_ZN22HomePageScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void HomePageScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
90006b00:	b538      	push	{r3, r4, r5, lr}
    if (&src == &HomeScrToGaugeScrBtn)
90006b02:	f100 0398 	add.w	r3, r0, #152	; 0x98
{
90006b06:	4604      	mov	r4, r0
90006b08:	460d      	mov	r5, r1
    if (&src == &HomeScrToGaugeScrBtn)
90006b0a:	4299      	cmp	r1, r3
90006b0c:	d003      	beq.n	90006b16 <_ZN22HomePageScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
        //HomeScreenToGaugeScreen_Interaction
        //When HomeScrToGaugeScrBtn clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards North
        application().gotoMainScreenScreenSlideTransitionNorth();
    }
    if (&src == &HomeScrToCalibScrBtn)
90006b0e:	34fc      	adds	r4, #252	; 0xfc
90006b10:	42a5      	cmp	r5, r4
90006b12:	d007      	beq.n	90006b24 <_ZN22HomePageScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
        //HomeScrToCalibScr_Interaction
        //When HomeScrToCalibScrBtn clicked change screen to CalibrationScreen
        //Go to CalibrationScreen with screen transition towards South
        application().gotoCalibrationScreenScreenSlideTransitionSouth();
    }
}
90006b14:	bd38      	pop	{r3, r4, r5, pc}
    if (&src == &HomeScrToCalibScrBtn)
90006b16:	34fc      	adds	r4, #252	; 0xfc
    virtual ~HomePageScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90006b18:	f014 f954 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMainScreenScreenSlideTransitionNorth();
90006b1c:	f7ff ff0a 	bl	90006934 <_ZN23FrontendApplicationBase40gotoMainScreenScreenSlideTransitionNorthEv>
    if (&src == &HomeScrToCalibScrBtn)
90006b20:	42a5      	cmp	r5, r4
90006b22:	d1f7      	bne.n	90006b14 <_ZN22HomePageScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
90006b24:	f014 f94e 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
}
90006b28:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibrationScreenScreenSlideTransitionSouth();
90006b2c:	f7ff bf3a 	b.w	900069a4 <_ZN23FrontendApplicationBase47gotoCalibrationScreenScreenSlideTransitionSouthEv>

90006b30 <_ZN22HomePageScreenViewBaseC1Ev>:
HomePageScreenViewBase::HomePageScreenViewBase() :
90006b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006b34:	b085      	sub	sp, #20
90006b36:	4604      	mov	r4, r0
        : presenter(0)
90006b38:	f015 fd68 	bl	9001c60c <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &HomePageScreenViewBase::flexButtonCallbackHandler)
90006b3c:	4b91      	ldr	r3, [pc, #580]	; (90006d84 <_ZN22HomePageScreenViewBaseC1Ev+0x254>)
90006b3e:	2500      	movs	r5, #0
90006b40:	f64f 76ff 	movw	r6, #65535	; 0xffff
90006b44:	6023      	str	r3, [r4, #0]
          visible(true)
90006b46:	f44f 7880 	mov.w	r8, #256	; 0x100
        : Widget(), alpha(255), color(0)
90006b4a:	4b8f      	ldr	r3, [pc, #572]	; (90006d88 <_ZN22HomePageScreenViewBaseC1Ev+0x258>)
90006b4c:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
90006b50:	f04f 09ff 	mov.w	r9, #255	; 0xff
90006b54:	a903      	add	r1, sp, #12
90006b56:	6423      	str	r3, [r4, #64]	; 0x40
90006b58:	4658      	mov	r0, fp
        : Widget(), bitmap(bmp), alpha(255)
90006b5a:	4b8c      	ldr	r3, [pc, #560]	; (90006d8c <_ZN22HomePageScreenViewBaseC1Ev+0x25c>)
        : T(), up(), down()
90006b5c:	f104 0acc 	add.w	sl, r4, #204	; 0xcc
90006b60:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
90006b64:	f04f 37ff 	mov.w	r7, #4294967295
90006b68:	f884 9066 	strb.w	r9, [r4, #102]	; 0x66
90006b6c:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
90006b70:	f8a4 6092 	strh.w	r6, [r4, #146]	; 0x92
90006b74:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
90006b78:	66e3      	str	r3, [r4, #108]	; 0x6c
90006b7a:	63e5      	str	r5, [r4, #60]	; 0x3c
90006b7c:	6465      	str	r5, [r4, #68]	; 0x44
90006b7e:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
90006b80:	66a5      	str	r5, [r4, #104]	; 0x68
90006b82:	f8ad 600c 	strh.w	r6, [sp, #12]
        : x(0), y(0), width(0), height(0)
90006b86:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
90006b8a:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
90006b8e:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
90006b92:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
90006b96:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
90006b9a:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
90006b9e:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        Image::setBitmap(bmp);
90006ba2:	f011 fd32 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
90006ba6:	f64f 7300 	movw	r3, #65280	; 0xff00
90006baa:	a803      	add	r0, sp, #12
        touchable = touch;
90006bac:	f240 1101 	movw	r1, #257	; 0x101
90006bb0:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
90006bb4:	f104 0298 	add.w	r2, r4, #152	; 0x98
90006bb8:	4b75      	ldr	r3, [pc, #468]	; (90006d90 <_ZN22HomePageScreenViewBaseC1Ev+0x260>)
        : Widget(), bitmap(bmp), alpha(255)
90006bba:	f884 90f4 	strb.w	r9, [r4, #244]	; 0xf4
90006bbe:	f504 7998 	add.w	r9, r4, #304	; 0x130
90006bc2:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
90006bc6:	4b71      	ldr	r3, [pc, #452]	; (90006d8c <_ZN22HomePageScreenViewBaseC1Ev+0x25c>)
90006bc8:	f8a4 10bc 	strh.w	r1, [r4, #188]	; 0xbc
        Image::setBitmap(bmp);
90006bcc:	4601      	mov	r1, r0
        : Widget(), bitmap(bmp), alpha(255)
90006bce:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
        Image::setBitmap(bmp);
90006bd2:	4650      	mov	r0, sl
          visible(true)
90006bd4:	f8a4 80f0 	strh.w	r8, [r4, #240]	; 0xf0
        : Widget(), bitmap(bmp), alpha(255)
90006bd8:	f8a4 60f2 	strh.w	r6, [r4, #242]	; 0xf2
          firstChild(0)
90006bdc:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
90006be0:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
90006be4:	f8ad 600c 	strh.w	r6, [sp, #12]
90006be8:	9201      	str	r2, [sp, #4]
90006bea:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
90006bee:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
90006bf2:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
90006bf6:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
90006bfa:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
90006bfe:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
90006c02:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
90006c06:	e9c4 553a 	strd	r5, r5, [r4, #232]	; 0xe8
        Image::setBitmap(bmp);
90006c0a:	f011 fcfe 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(buttonImage);
90006c0e:	9a01      	ldr	r2, [sp, #4]
90006c10:	4651      	mov	r1, sl
90006c12:	f8c4 70f8 	str.w	r7, [r4, #248]	; 0xf8
90006c16:	4610      	mov	r0, r2
        rect.x = x;
90006c18:	f8c4 50d0 	str.w	r5, [r4, #208]	; 0xd0
90006c1c:	f00e f94a 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), up(), down()
90006c20:	4b5b      	ldr	r3, [pc, #364]	; (90006d90 <_ZN22HomePageScreenViewBaseC1Ev+0x260>)
90006c22:	f64f 7200 	movw	r2, #65280	; 0xff00
        touchable = touch;
90006c26:	f240 1101 	movw	r1, #257	; 0x101
90006c2a:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
90006c2e:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
90006c30:	4b56      	ldr	r3, [pc, #344]	; (90006d8c <_ZN22HomePageScreenViewBaseC1Ev+0x25c>)
          visible(true)
90006c32:	f8a4 8154 	strh.w	r8, [r4, #340]	; 0x154
90006c36:	f104 08fc 	add.w	r8, r4, #252	; 0xfc
90006c3a:	f8a4 2128 	strh.w	r2, [r4, #296]	; 0x128
90006c3e:	f8c4 3130 	str.w	r3, [r4, #304]	; 0x130
        touchable = touch;
90006c42:	f8a4 1120 	strh.w	r1, [r4, #288]	; 0x120
        Image::setBitmap(bmp);
90006c46:	a903      	add	r1, sp, #12
        : Widget(), bitmap(bmp), alpha(255)
90006c48:	f8a4 6156 	strh.w	r6, [r4, #342]	; 0x156
90006c4c:	1d26      	adds	r6, r4, #4
90006c4e:	f884 7158 	strb.w	r7, [r4, #344]	; 0x158
90006c52:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
90006c56:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
90006c5a:	f8ad 700c 	strh.w	r7, [sp, #12]
90006c5e:	e9c4 5540 	strd	r5, r5, [r4, #256]	; 0x100
90006c62:	e9c4 5542 	strd	r5, r5, [r4, #264]	; 0x108
          visible(true)
90006c66:	e9c4 5544 	strd	r5, r5, [r4, #272]	; 0x110
90006c6a:	e9c4 5546 	strd	r5, r5, [r4, #280]	; 0x118
90006c6e:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
90006c72:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
90006c76:	e9c4 5551 	strd	r5, r5, [r4, #324]	; 0x144
90006c7a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
        Image::setBitmap(bmp);
90006c7e:	f011 fcc4 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(buttonImage);
90006c82:	4649      	mov	r1, r9
90006c84:	4640      	mov	r0, r8
90006c86:	f8c4 715c 	str.w	r7, [r4, #348]	; 0x15c
        rect.x = x;
90006c8a:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
        ImageButtonStyle::setWidthHeight(down);
90006c8e:	f104 07fa 	add.w	r7, r4, #250	; 0xfa
        T::add(buttonImage);
90006c92:	f00e f90f 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
90006c96:	4b3f      	ldr	r3, [pc, #252]	; (90006d94 <_ZN22HomePageScreenViewBaseC1Ev+0x264>)
90006c98:	f104 0140 	add.w	r1, r4, #64	; 0x40
90006c9c:	4630      	mov	r0, r6
90006c9e:	f8c4 3160 	str.w	r3, [r4, #352]	; 0x160
90006ca2:	4b3d      	ldr	r3, [pc, #244]	; (90006d98 <_ZN22HomePageScreenViewBaseC1Ev+0x268>)
90006ca4:	f8c4 4164 	str.w	r4, [r4, #356]	; 0x164
90006ca8:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        rect.width = width;
90006cac:	4b3b      	ldr	r3, [pc, #236]	; (90006d9c <_ZN22HomePageScreenViewBaseC1Ev+0x26c>)
90006cae:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
90006cb2:	64a3      	str	r3, [r4, #72]	; 0x48
        color = newColor;
90006cb4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        rect.x = x;
90006cb8:	6465      	str	r5, [r4, #68]	; 0x44
90006cba:	66a3      	str	r3, [r4, #104]	; 0x68
90006cbc:	f00e f8fa 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006cc0:	2312      	movs	r3, #18
    HomePageScreenBG.setBitmap(touchgfx::Bitmap(BITMAP_HOMEPAGESCREEN_ID));
90006cc2:	a903      	add	r1, sp, #12
90006cc4:	4658      	mov	r0, fp
90006cc6:	6725      	str	r5, [r4, #112]	; 0x70
90006cc8:	f8ad 300c 	strh.w	r3, [sp, #12]
90006ccc:	f011 fc9d 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006cd0:	4659      	mov	r1, fp
90006cd2:	4630      	mov	r0, r6
90006cd4:	f00e f8ee 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        up = bmpReleased;
90006cd8:	4b31      	ldr	r3, [pc, #196]	; (90006da0 <_ZN22HomePageScreenViewBaseC1Ev+0x270>)
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
90006cda:	4638      	mov	r0, r7
90006cdc:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
90006ce0:	f016 fef6 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90006ce4:	4683      	mov	fp, r0
90006ce6:	4638      	mov	r0, r7
90006ce8:	f016 ff26 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        rect.width = width;
90006cec:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
        buttonImage.setBitmap(T::getPressed() ? down : up);
90006cf0:	f894 10c4 	ldrb.w	r1, [r4, #196]	; 0xc4
90006cf4:	f8a4 b0a0 	strh.w	fp, [r4, #160]	; 0xa0
90006cf8:	42a9      	cmp	r1, r5
90006cfa:	bf0c      	ite	eq
90006cfc:	4619      	moveq	r1, r3
90006cfe:	4639      	movne	r1, r7
        rect.height = height;
90006d00:	f8a4 00a2 	strh.w	r0, [r4, #162]	; 0xa2
90006d04:	4650      	mov	r0, sl
        rect.x = x;
90006d06:	f8df b0a8 	ldr.w	fp, [pc, #168]	; 90006db0 <_ZN22HomePageScreenViewBaseC1Ev+0x280>
90006d0a:	f011 fc7e 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006d0e:	9a01      	ldr	r2, [sp, #4]
    HomeScrToGaugeScrBtn.setAction(flexButtonCallback);
90006d10:	f504 73b0 	add.w	r3, r4, #352	; 0x160
90006d14:	4630      	mov	r0, r6
90006d16:	4611      	mov	r1, r2
90006d18:	4a22      	ldr	r2, [pc, #136]	; (90006da4 <_ZN22HomePageScreenViewBaseC1Ev+0x274>)
        action = &callback;
90006d1a:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        ImageButtonStyle::setWidthHeight(down);
90006d1e:	f504 77af 	add.w	r7, r4, #350	; 0x15e
90006d22:	f8c4 50d0 	str.w	r5, [r4, #208]	; 0xd0
90006d26:	9301      	str	r3, [sp, #4]
90006d28:	e9c4 2b27 	strd	r2, fp, [r4, #156]	; 0x9c
90006d2c:	f00e f8c2 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        up = bmpReleased;
90006d30:	4a1d      	ldr	r2, [pc, #116]	; (90006da8 <_ZN22HomePageScreenViewBaseC1Ev+0x278>)
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
90006d32:	4638      	mov	r0, r7
90006d34:	f8c4 215c 	str.w	r2, [r4, #348]	; 0x15c
90006d38:	f016 feca 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90006d3c:	4682      	mov	sl, r0
90006d3e:	4638      	mov	r0, r7
90006d40:	f016 fefa 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        rect.width = width;
90006d44:	f504 72ae 	add.w	r2, r4, #348	; 0x15c
        buttonImage.setBitmap(T::getPressed() ? down : up);
90006d48:	f894 1128 	ldrb.w	r1, [r4, #296]	; 0x128
        rect.height = height;
90006d4c:	f8a4 0106 	strh.w	r0, [r4, #262]	; 0x106
90006d50:	4648      	mov	r0, r9
90006d52:	42a9      	cmp	r1, r5
90006d54:	bf0c      	ite	eq
90006d56:	4611      	moveq	r1, r2
90006d58:	4639      	movne	r1, r7
        rect.width = width;
90006d5a:	f8a4 a104 	strh.w	sl, [r4, #260]	; 0x104
90006d5e:	f011 fc54 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006d62:	9b01      	ldr	r3, [sp, #4]
90006d64:	4630      	mov	r0, r6
90006d66:	4641      	mov	r1, r8
90006d68:	f8c4 312c 	str.w	r3, [r4, #300]	; 0x12c
        rect.x = x;
90006d6c:	4b0f      	ldr	r3, [pc, #60]	; (90006dac <_ZN22HomePageScreenViewBaseC1Ev+0x27c>)
90006d6e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90006d72:	e9c4 3b40 	strd	r3, fp, [r4, #256]	; 0x100
90006d76:	f00e f89d 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90006d7a:	4620      	mov	r0, r4
90006d7c:	b005      	add	sp, #20
90006d7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006d82:	bf00      	nop
90006d84:	9002f5d8 	.word	0x9002f5d8
90006d88:	900308a8 	.word	0x900308a8
90006d8c:	90030a7c 	.word	0x90030a7c
90006d90:	9002ebc4 	.word	0x9002ebc4
90006d94:	9002f5c0 	.word	0x9002f5c0
90006d98:	90006b01 	.word	0x90006b01
90006d9c:	011001e0 	.word	0x011001e0
90006da0:	00100011 	.word	0x00100011
90006da4:	003d001f 	.word	0x003d001f
90006da8:	0009000a 	.word	0x0009000a
90006dac:	003d00fa 	.word	0x003d00fa
90006db0:	009600c8 	.word	0x009600c8

90006db4 <_ZN8touchgfx21AbstractPainterBitmapD1Ev>:
    }

    /** Destructor */
    virtual ~AbstractPainterBitmap()
    {
    }
90006db4:	4770      	bx	lr
90006db6:	bf00      	nop

90006db8 <_ZN8touchgfx21AbstractPainterBitmap8setTiledEb>:
     *
     * @see setOffset
     */
    virtual void setTiled(bool tiled)
    {
        isTiled = tiled;
90006db8:	7601      	strb	r1, [r0, #24]
    }
90006dba:	4770      	bx	lr

90006dbc <_ZN8touchgfx21AbstractPainterBitmap9setOffsetEss>:
     *
     * @see setTiled
     */
    virtual void setOffset(int16_t x, int16_t y)
    {
        xOffset = x;
90006dbc:	8281      	strh	r1, [r0, #20]
        yOffset = y;
90006dbe:	82c2      	strh	r2, [r0, #22]
    }
90006dc0:	4770      	bx	lr
90006dc2:	bf00      	nop

90006dc4 <_ZN18MainScreenViewBase11setupScreenEv>:
}

void MainScreenViewBase::setupScreen()
{

}
90006dc4:	4770      	bx	lr
90006dc6:	bf00      	nop

90006dc8 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006dc8:	4770      	bx	lr
90006dca:	bf00      	nop

90006dcc <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90006dcc:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90006dce:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90006dd0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90006dd2:	6844      	ldr	r4, [r0, #4]
90006dd4:	f012 0f01 	tst.w	r2, #1
90006dd8:	eb04 0062 	add.w	r0, r4, r2, asr #1
90006ddc:	d103      	bne.n	90006de6 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90006dde:	689b      	ldr	r3, [r3, #8]
    }
90006de0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006de4:	4718      	bx	r3
90006de6:	ea4f 0c62 	mov.w	ip, r2, asr #1
90006dea:	689b      	ldr	r3, [r3, #8]
90006dec:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90006df0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006df4:	58d3      	ldr	r3, [r2, r3]
90006df6:	4718      	bx	r3

90006df8 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90006df8:	6843      	ldr	r3, [r0, #4]
90006dfa:	b13b      	cbz	r3, 90006e0c <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90006dfc:	6883      	ldr	r3, [r0, #8]
90006dfe:	b10b      	cbz	r3, 90006e04 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90006e00:	2001      	movs	r0, #1
    }
90006e02:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90006e04:	68c0      	ldr	r0, [r0, #12]
90006e06:	f000 0001 	and.w	r0, r0, #1
90006e0a:	4770      	bx	lr
90006e0c:	4618      	mov	r0, r3
90006e0e:	4770      	bx	lr

90006e10 <_ZN8touchgfx21AbstractPainterBitmapD0Ev>:
    virtual ~AbstractPainterBitmap()
90006e10:	b510      	push	{r4, lr}
90006e12:	4604      	mov	r4, r0
    }
90006e14:	2120      	movs	r1, #32
90006e16:	f024 fafe 	bl	9002b416 <_ZdlPvj>
90006e1a:	4620      	mov	r0, r4
90006e1c:	bd10      	pop	{r4, pc}
90006e1e:	bf00      	nop

90006e20 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006e20:	b510      	push	{r4, lr}
90006e22:	4604      	mov	r4, r0
90006e24:	2110      	movs	r1, #16
90006e26:	f024 faf6 	bl	9002b416 <_ZdlPvj>
90006e2a:	4620      	mov	r0, r4
90006e2c:	bd10      	pop	{r4, pc}
90006e2e:	bf00      	nop

90006e30 <_ZN8touchgfx21AbstractPainterBitmap9setBitmapERKNS_6BitmapE>:
    virtual void setBitmap(const Bitmap& bmp)
90006e30:	b570      	push	{r4, r5, r6, lr}
        bitmap = bmp;
90006e32:	880b      	ldrh	r3, [r1, #0]
90006e34:	4605      	mov	r5, r0
    virtual void setBitmap(const Bitmap& bmp)
90006e36:	4604      	mov	r4, r0
        bitmap = bmp;
90006e38:	f825 3f04 	strh.w	r3, [r5, #4]!
        bitmapFormat = bitmap.getFormat();
90006e3c:	4628      	mov	r0, r5
90006e3e:	f016 ffb7 	bl	9001ddb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
90006e42:	4603      	mov	r3, r0
     *
     * @return a Rect describing the dimensions of this Bitmap.
     */
    Rect getRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
90006e44:	4628      	mov	r0, r5
90006e46:	71a3      	strb	r3, [r4, #6]
90006e48:	f016 fe42 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90006e4c:	4606      	mov	r6, r0
90006e4e:	4628      	mov	r0, r5
90006e50:	f016 fe72 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        bitmapRect = bitmap.getRect();
90006e54:	2200      	movs	r2, #0
90006e56:	4603      	mov	r3, r0
90006e58:	81a6      	strh	r6, [r4, #12]
        DisplayTransformation::transformDisplayToFrameBuffer(bitmapRect);
90006e5a:	f104 0008 	add.w	r0, r4, #8
        bitmapRect = bitmap.getRect();
90006e5e:	60a2      	str	r2, [r4, #8]
90006e60:	81e3      	strh	r3, [r4, #14]
        DisplayTransformation::transformDisplayToFrameBuffer(bitmapRect);
90006e62:	f013 fe11 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
        bitmapData = bitmap.getData();
90006e66:	4628      	mov	r0, r5
90006e68:	f016 ff1e 	bl	9001dca8 <_ZNK8touchgfx6Bitmap7getDataEv>
90006e6c:	6120      	str	r0, [r4, #16]
    }
90006e6e:	bd70      	pop	{r4, r5, r6, pc}

90006e70 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
90006e70:	b538      	push	{r3, r4, r5, lr}
    if (&src == &TankSettingsToHomeScr_Button)
90006e72:	f600 5354 	addw	r3, r0, #3412	; 0xd54
{
90006e76:	4604      	mov	r4, r0
90006e78:	460d      	mov	r5, r1
    if (&src == &TankSettingsToHomeScr_Button)
90006e7a:	4299      	cmp	r1, r3
90006e7c:	d004      	beq.n	90006e88 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x18>
        //TankSettingsScrToHomeScr_Interaction
        //When TankSettingsToHomeScr_Button clicked change screen to HomePageScreen
        //Go to HomePageScreen with screen transition towards South
        application().gotoHomePageScreenScreenSlideTransitionSouth();
    }
    if (&src == &TanksGaugeScrToHomeScr_Btn)
90006e7e:	f504 6409 	add.w	r4, r4, #2192	; 0x890
90006e82:	42a5      	cmp	r5, r4
90006e84:	d008      	beq.n	90006e98 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x28>
        //TanksGaugeScrToHomeScr_Interaction
        //When TanksGaugeScrToHomeScr_Btn clicked change screen to HomePageScreen
        //Go to HomePageScreen with screen transition towards South
        application().gotoHomePageScreenScreenSlideTransitionSouth();
    }
}
90006e86:	bd38      	pop	{r3, r4, r5, pc}
    if (&src == &TanksGaugeScrToHomeScr_Btn)
90006e88:	f504 6409 	add.w	r4, r4, #2192	; 0x890
    virtual ~MainScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90006e8c:	f013 ff9a 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoHomePageScreenScreenSlideTransitionSouth();
90006e90:	f7ff fd6c 	bl	9000696c <_ZN23FrontendApplicationBase44gotoHomePageScreenScreenSlideTransitionSouthEv>
    if (&src == &TanksGaugeScrToHomeScr_Btn)
90006e94:	42a5      	cmp	r5, r4
90006e96:	d1f6      	bne.n	90006e86 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
90006e98:	f013 ff94 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
}
90006e9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoHomePageScreenScreenSlideTransitionSouth();
90006ea0:	f7ff bd64 	b.w	9000696c <_ZN23FrontendApplicationBase44gotoHomePageScreenScreenSlideTransitionSouthEv>

90006ea4 <_ZN18MainScreenViewBaseC1Ev>:
MainScreenViewBase::MainScreenViewBase() :
90006ea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006ea8:	ed2d 8b10 	vpush	{d8-d15}
90006eac:	b0af      	sub	sp, #188	; 0xbc
90006eae:	4604      	mov	r4, r0
90006eb0:	f015 fbac 	bl	9001c60c <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
90006eb4:	4bdd      	ldr	r3, [pc, #884]	; (9000722c <_ZN18MainScreenViewBaseC1Ev+0x388>)
90006eb6:	2600      	movs	r6, #0
          visible(true)
90006eb8:	f44f 7980 	mov.w	r9, #256	; 0x100
90006ebc:	6023      	str	r3, [r4, #0]
        : Widget(), alpha(255), color(0)
90006ebe:	f04f 0aff 	mov.w	sl, #255	; 0xff
90006ec2:	4bdb      	ldr	r3, [pc, #876]	; (90007230 <_ZN18MainScreenViewBaseC1Ev+0x38c>)
        : bitmapId(id)
90006ec4:	f64f 75ff 	movw	r5, #65535	; 0xffff
90006ec8:	f8a4 9064 	strh.w	r9, [r4, #100]	; 0x64
90006ecc:	f504 77c6 	add.w	r7, r4, #396	; 0x18c
90006ed0:	6423      	str	r3, [r4, #64]	; 0x40
90006ed2:	f104 036c 	add.w	r3, r4, #108	; 0x6c
90006ed6:	63e6      	str	r6, [r4, #60]	; 0x3c
90006ed8:	f504 78dc 	add.w	r8, r4, #440	; 0x1b8
90006edc:	4618      	mov	r0, r3
90006ede:	6466      	str	r6, [r4, #68]	; 0x44
90006ee0:	6626      	str	r6, [r4, #96]	; 0x60
90006ee2:	ee08 3a10 	vmov	s16, r3
90006ee6:	f884 a066 	strb.w	sl, [r4, #102]	; 0x66
90006eea:	ee0a 7a90 	vmov	s21, r7
        : color(col)
90006eee:	66a6      	str	r6, [r4, #104]	; 0x68
        : x(0), y(0), width(0), height(0)
90006ef0:	e9c4 6612 	strd	r6, r6, [r4, #72]	; 0x48
90006ef4:	e9c4 6614 	strd	r6, r6, [r4, #80]	; 0x50
90006ef8:	e9c4 6616 	strd	r6, r6, [r4, #88]	; 0x58
90006efc:	f00e fba4 	bl	90015648 <_ZN8touchgfx14SwipeContainerC1Ev>
90006f00:	4bcc      	ldr	r3, [pc, #816]	; (90007234 <_ZN18MainScreenViewBaseC1Ev+0x390>)
90006f02:	a92c      	add	r1, sp, #176	; 0xb0
90006f04:	4638      	mov	r0, r7
90006f06:	f8c4 3160 	str.w	r3, [r4, #352]	; 0x160
90006f0a:	f504 7756 	add.w	r7, r4, #856	; 0x358
        : Widget(), bitmap(bmp), alpha(255)
90006f0e:	4bca      	ldr	r3, [pc, #808]	; (90007238 <_ZN18MainScreenViewBaseC1Ev+0x394>)
90006f10:	f8a4 9184 	strh.w	r9, [r4, #388]	; 0x184
90006f14:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
90006f18:	f8a4 91b0 	strh.w	r9, [r4, #432]	; 0x1b0
90006f1c:	f8a4 51b2 	strh.w	r5, [r4, #434]	; 0x1b2
90006f20:	f884 51b4 	strb.w	r5, [r4, #436]	; 0x1b4
90006f24:	f8c4 6188 	str.w	r6, [r4, #392]	; 0x188
90006f28:	f8ad 50b0 	strh.w	r5, [sp, #176]	; 0xb0
90006f2c:	e9c4 6659 	strd	r6, r6, [r4, #356]	; 0x164
90006f30:	e9c4 665b 	strd	r6, r6, [r4, #364]	; 0x16c
90006f34:	e9c4 665d 	strd	r6, r6, [r4, #372]	; 0x174
90006f38:	e9c4 665f 	strd	r6, r6, [r4, #380]	; 0x17c
90006f3c:	e9c4 6664 	strd	r6, r6, [r4, #400]	; 0x190
90006f40:	e9c4 6666 	strd	r6, r6, [r4, #408]	; 0x198
90006f44:	e9c4 6668 	strd	r6, r6, [r4, #416]	; 0x1a0
90006f48:	e9c4 666a 	strd	r6, r6, [r4, #424]	; 0x1a8
        Image::setBitmap(bmp);
90006f4c:	f011 fb5d 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006f50:	4640      	mov	r0, r8
90006f52:	f011 fa15 	bl	90018380 <_ZN8touchgfx5GaugeC1Ev>
90006f56:	4638      	mov	r0, r7
90006f58:	f011 fa12 	bl	90018380 <_ZN8touchgfx5GaugeC1Ev>
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006f5c:	4ab7      	ldr	r2, [pc, #732]	; (9000723c <_ZN18MainScreenViewBaseC1Ev+0x398>)
        : typedTextId(id)
90006f5e:	49b8      	ldr	r1, [pc, #736]	; (90007240 <_ZN18MainScreenViewBaseC1Ev+0x39c>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006f60:	f04f 33ff 	mov.w	r3, #4294967295
90006f64:	f8c4 24f8 	str.w	r2, [r4, #1272]	; 0x4f8
90006f68:	f504 60ba 	add.w	r0, r4, #1488	; 0x5d0
90006f6c:	f8c4 2540 	str.w	r2, [r4, #1344]	; 0x540
90006f70:	f8c4 1520 	str.w	r1, [r4, #1312]	; 0x520
90006f74:	f8c4 1568 	str.w	r1, [r4, #1384]	; 0x568
90006f78:	f8a4 951c 	strh.w	r9, [r4, #1308]	; 0x51c
90006f7c:	f8a4 5524 	strh.w	r5, [r4, #1316]	; 0x524
90006f80:	f8a4 9564 	strh.w	r9, [r4, #1380]	; 0x564
90006f84:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
90006f88:	f8a4 356c 	strh.w	r3, [r4, #1388]	; 0x56c
        : x(0), y(0), width(0), height(0)
90006f8c:	f8c4 64fc 	str.w	r6, [r4, #1276]	; 0x4fc
90006f90:	f8c4 6500 	str.w	r6, [r4, #1280]	; 0x500
90006f94:	f8c4 6504 	str.w	r6, [r4, #1284]	; 0x504
90006f98:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
90006f9c:	f8c4 650c 	str.w	r6, [r4, #1292]	; 0x50c
90006fa0:	f8c4 6510 	str.w	r6, [r4, #1296]	; 0x510
90006fa4:	f8c4 6514 	str.w	r6, [r4, #1300]	; 0x514
90006fa8:	f8c4 6518 	str.w	r6, [r4, #1304]	; 0x518
        : color(col)
90006fac:	f8c4 6528 	str.w	r6, [r4, #1320]	; 0x528
90006fb0:	f8a4 652c 	strh.w	r6, [r4, #1324]	; 0x52c
90006fb4:	f8c4 a52e 	str.w	sl, [r4, #1326]	; 0x52e
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006fb8:	f8c4 6534 	str.w	r6, [r4, #1332]	; 0x534
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90006fbc:	f8c4 653c 	str.w	r6, [r4, #1340]	; 0x53c
        : x(0), y(0), width(0), height(0)
90006fc0:	f8c4 6544 	str.w	r6, [r4, #1348]	; 0x544
90006fc4:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
90006fc8:	f8c4 654c 	str.w	r6, [r4, #1356]	; 0x54c
90006fcc:	f8c4 6550 	str.w	r6, [r4, #1360]	; 0x550
90006fd0:	f8c4 6554 	str.w	r6, [r4, #1364]	; 0x554
90006fd4:	f8c4 6558 	str.w	r6, [r4, #1368]	; 0x558
90006fd8:	f8c4 655c 	str.w	r6, [r4, #1372]	; 0x55c
90006fdc:	f8c4 6560 	str.w	r6, [r4, #1376]	; 0x560
        : color(col)
90006fe0:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006fe4:	f8a4 6574 	strh.w	r6, [r4, #1396]	; 0x574
90006fe8:	f8c4 a576 	str.w	sl, [r4, #1398]	; 0x576
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006fec:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
90006ff0:	f504 73b0 	add.w	r3, r4, #352	; 0x160
90006ff4:	f8a4 95ac 	strh.w	r9, [r4, #1452]	; 0x5ac
90006ff8:	f8c4 2588 	str.w	r2, [r4, #1416]	; 0x588
90006ffc:	ee08 3a90 	vmov	s17, r3
90007000:	f8c4 15b0 	str.w	r1, [r4, #1456]	; 0x5b0
90007004:	f8a4 55b4 	strh.w	r5, [r4, #1460]	; 0x5b4
90007008:	f8a4 55c8 	strh.w	r5, [r4, #1480]	; 0x5c8
9000700c:	f8a4 55ca 	strh.w	r5, [r4, #1482]	; 0x5ca
90007010:	f8c4 a5be 	str.w	sl, [r4, #1470]	; 0x5be
90007014:	f8c4 657c 	str.w	r6, [r4, #1404]	; 0x57c
              text(0)
90007018:	f8c4 6584 	str.w	r6, [r4, #1412]	; 0x584
        : x(0), y(0), width(0), height(0)
9000701c:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
90007020:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
90007024:	f8c4 6594 	str.w	r6, [r4, #1428]	; 0x594
90007028:	f8c4 6598 	str.w	r6, [r4, #1432]	; 0x598
9000702c:	f8c4 659c 	str.w	r6, [r4, #1436]	; 0x59c
90007030:	f8c4 65a0 	str.w	r6, [r4, #1440]	; 0x5a0
90007034:	f8c4 65a4 	str.w	r6, [r4, #1444]	; 0x5a4
90007038:	f8c4 65a8 	str.w	r6, [r4, #1448]	; 0x5a8
        : color(col)
9000703c:	f8c4 65b8 	str.w	r6, [r4, #1464]	; 0x5b8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90007040:	f8a4 65bc 	strh.w	r6, [r4, #1468]	; 0x5bc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90007044:	f8a4 65c4 	strh.w	r6, [r4, #1476]	; 0x5c4
90007048:	f8a4 65c6 	strh.w	r6, [r4, #1478]	; 0x5c6
              text(0)
9000704c:	f8c4 65cc 	str.w	r6, [r4, #1484]	; 0x5cc
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90007050:	4d7c      	ldr	r5, [pc, #496]	; (90007244 <_ZN18MainScreenViewBaseC1Ev+0x3a0>)
90007052:	900b      	str	r0, [sp, #44]	; 0x2c
90007054:	f00d fd48 	bl	90014ae8 <_ZN8touchgfx12LineProgressC1Ev>
90007058:	f504 629f 	add.w	r2, r4, #1272	; 0x4f8
9000705c:	f504 61b1 	add.w	r1, r4, #1416	; 0x588
90007060:	682b      	ldr	r3, [r5, #0]
90007062:	9208      	str	r2, [sp, #32]
90007064:	f504 62a8 	add.w	r2, r4, #1344	; 0x540
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90007068:	f8df 91ec 	ldr.w	r9, [pc, #492]	; 90007258 <_ZN18MainScreenViewBaseC1Ev+0x3b4>
9000706c:	9209      	str	r2, [sp, #36]	; 0x24
9000706e:	910a      	str	r1, [sp, #40]	; 0x28
90007070:	f204 7104 	addw	r1, r4, #1796	; 0x704
90007074:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
        : widgetWidth(0)
90007078:	f8a4 6708 	strh.w	r6, [r4, #1800]	; 0x708
9000707c:	f8c4 9704 	str.w	r9, [r4, #1796]	; 0x704
90007080:	910c      	str	r1, [sp, #48]	; 0x30
90007082:	2a00      	cmp	r2, #0
90007084:	f001 8235 	beq.w	900084f2 <_ZN18MainScreenViewBaseC1Ev+0x164e>
90007088:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000708a:	2800      	cmp	r0, #0
9000708c:	f001 8231 	beq.w	900084f2 <_ZN18MainScreenViewBaseC1Ev+0x164e>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90007090:	6803      	ldr	r3, [r0, #0]
90007092:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90007094:	4798      	blx	r3
        return auxiliaryLCD;
90007096:	682b      	ldr	r3, [r5, #0]
90007098:	fab0 f680 	clz	r6, r0
9000709c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000709e:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900070a0:	b130      	cbz	r0, 900070b0 <_ZN18MainScreenViewBaseC1Ev+0x20c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900070a2:	6803      	ldr	r3, [r0, #0]
900070a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900070a6:	4798      	blx	r3
900070a8:	2800      	cmp	r0, #0
900070aa:	bf08      	it	eq
900070ac:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900070b0:	2e00      	cmp	r6, #0
900070b2:	f001 8227 	beq.w	90008504 <_ZN18MainScreenViewBaseC1Ev+0x1660>
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
900070b6:	f04f 0b00 	mov.w	fp, #0
        bitmap = bmp;
900070ba:	f64f 72ff 	movw	r2, #65535	; 0xffff
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
900070be:	4b62      	ldr	r3, [pc, #392]	; (90007248 <_ZN18MainScreenViewBaseC1Ev+0x3a4>)
        bitmapFormat = bitmap.getFormat();
900070c0:	f504 6ae2 	add.w	sl, r4, #1808	; 0x710
        bitmap = bmp;
900070c4:	f8a4 2710 	strh.w	r2, [r4, #1808]	; 0x710
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
900070c8:	f8c4 370c 	str.w	r3, [r4, #1804]	; 0x70c
        bitmapFormat = bitmap.getFormat();
900070cc:	4650      	mov	r0, sl
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
900070ce:	f884 b712 	strb.w	fp, [r4, #1810]	; 0x712
        : x(0), y(0), width(0), height(0)
900070d2:	f8c4 b714 	str.w	fp, [r4, #1812]	; 0x714
900070d6:	f8c4 b718 	str.w	fp, [r4, #1816]	; 0x718
900070da:	f8c4 b71c 	str.w	fp, [r4, #1820]	; 0x71c
900070de:	f8c4 b720 	str.w	fp, [r4, #1824]	; 0x720
900070e2:	f884 b724 	strb.w	fp, [r4, #1828]	; 0x724
        bitmapFormat = bitmap.getFormat();
900070e6:	f016 fe63 	bl	9001ddb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
900070ea:	f884 0712 	strb.w	r0, [r4, #1810]	; 0x712
        return Rect(0, 0, getWidth(), getHeight());
900070ee:	4650      	mov	r0, sl
900070f0:	f016 fcee 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900070f4:	4606      	mov	r6, r0
900070f6:	4650      	mov	r0, sl
900070f8:	f016 fd1e 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        bitmapRect = bitmap.getRect();
900070fc:	f8a4 6718 	strh.w	r6, [r4, #1816]	; 0x718
90007100:	f8a4 071a 	strh.w	r0, [r4, #1818]	; 0x71a
        DisplayTransformation::transformDisplayToFrameBuffer(bitmapRect);
90007104:	f204 7014 	addw	r0, r4, #1812	; 0x714
     * Constructor.
     *
     * @param  bmp (Optional) The bitmap to use in the painter.
     */
    PainterRGB565Bitmap(const Bitmap& bmp = Bitmap(BITMAP_INVALID))
        : AbstractPainterRGB565(), AbstractPainterBitmap(bmp)
90007108:	4e50      	ldr	r6, [pc, #320]	; (9000724c <_ZN18MainScreenViewBaseC1Ev+0x3a8>)
        bitmapRect = bitmap.getRect();
9000710a:	f8c4 b714 	str.w	fp, [r4, #1812]	; 0x714
        DisplayTransformation::transformDisplayToFrameBuffer(bitmapRect);
9000710e:	f013 fcbb 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
        bitmapData = bitmap.getData();
90007112:	4650      	mov	r0, sl
90007114:	f016 fdc8 	bl	9001dca8 <_ZNK8touchgfx6Bitmap7getDataEv>
90007118:	f106 0324 	add.w	r3, r6, #36	; 0x24
9000711c:	f504 6ae6 	add.w	sl, r4, #1840	; 0x730
90007120:	f8c4 071c 	str.w	r0, [r4, #1820]	; 0x71c
90007124:	f8c4 370c 	str.w	r3, [r4, #1804]	; 0x70c
90007128:	f604 0364 	addw	r3, r4, #2148	; 0x864
9000712c:	4650      	mov	r0, sl
9000712e:	f8c4 6704 	str.w	r6, [r4, #1796]	; 0x704
90007132:	930d      	str	r3, [sp, #52]	; 0x34
90007134:	f00d fcd8 	bl	90014ae8 <_ZN8touchgfx12LineProgressC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90007138:	682b      	ldr	r3, [r5, #0]
        : widgetWidth(0)
9000713a:	f8a4 b868 	strh.w	fp, [r4, #2152]	; 0x868
9000713e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
        : AbstractPainter()
90007142:	f8c4 9864 	str.w	r9, [r4, #2148]	; 0x864
90007146:	2a00      	cmp	r2, #0
90007148:	f041 81d6 	bne.w	900084f8 <_ZN18MainScreenViewBaseC1Ev+0x1654>
        return instance->lcdRef;
9000714c:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
9000714e:	6803      	ldr	r3, [r0, #0]
90007150:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90007152:	4798      	blx	r3
        return auxiliaryLCD;
90007154:	682b      	ldr	r3, [r5, #0]
90007156:	fab0 f580 	clz	r5, r0
9000715a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000715c:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
9000715e:	b130      	cbz	r0, 9000716e <_ZN18MainScreenViewBaseC1Ev+0x2ca>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90007160:	6803      	ldr	r3, [r0, #0]
90007162:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90007164:	4798      	blx	r3
90007166:	2800      	cmp	r0, #0
90007168:	bf08      	it	eq
9000716a:	f045 0501 	orreq.w	r5, r5, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
9000716e:	2d00      	cmp	r5, #0
90007170:	f001 81c8 	beq.w	90008504 <_ZN18MainScreenViewBaseC1Ev+0x1660>
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
90007174:	2500      	movs	r5, #0
        bitmap = bmp;
90007176:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
9000717a:	4b33      	ldr	r3, [pc, #204]	; (90007248 <_ZN18MainScreenViewBaseC1Ev+0x3a4>)
        bitmapFormat = bitmap.getFormat();
9000717c:	f504 6b07 	add.w	fp, r4, #2160	; 0x870
        bitmap = bmp;
90007180:	f8a4 9870 	strh.w	r9, [r4, #2160]	; 0x870
    GaugesContainer.setSwipeCutoff(50);
90007184:	eeb0 9a48 	vmov.f32	s18, s16
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
90007188:	f8c4 386c 	str.w	r3, [r4, #2156]	; 0x86c
        bitmapFormat = bitmap.getFormat();
9000718c:	4658      	mov	r0, fp
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
9000718e:	f884 5872 	strb.w	r5, [r4, #2162]	; 0x872
90007192:	f8c4 5874 	str.w	r5, [r4, #2164]	; 0x874
90007196:	f8c4 5878 	str.w	r5, [r4, #2168]	; 0x878
9000719a:	f8c4 587c 	str.w	r5, [r4, #2172]	; 0x87c
9000719e:	f8c4 5880 	str.w	r5, [r4, #2176]	; 0x880
900071a2:	f884 5884 	strb.w	r5, [r4, #2180]	; 0x884
        bitmapFormat = bitmap.getFormat();
900071a6:	f016 fe03 	bl	9001ddb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
900071aa:	f884 0872 	strb.w	r0, [r4, #2162]	; 0x872
900071ae:	4658      	mov	r0, fp
900071b0:	f016 fc8e 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900071b4:	9002      	str	r0, [sp, #8]
900071b6:	4658      	mov	r0, fp
900071b8:	f016 fcbe 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        bitmapRect = bitmap.getRect();
900071bc:	9a02      	ldr	r2, [sp, #8]
900071be:	f8a4 087a 	strh.w	r0, [r4, #2170]	; 0x87a
        DisplayTransformation::transformDisplayToFrameBuffer(bitmapRect);
900071c2:	f604 0074 	addw	r0, r4, #2164	; 0x874
        bitmapRect = bitmap.getRect();
900071c6:	f8a4 2878 	strh.w	r2, [r4, #2168]	; 0x878
900071ca:	f8c4 5874 	str.w	r5, [r4, #2164]	; 0x874
        DisplayTransformation::transformDisplayToFrameBuffer(bitmapRect);
900071ce:	f013 fc5b 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
        bitmapData = bitmap.getData();
900071d2:	4658      	mov	r0, fp
900071d4:	f016 fd68 	bl	9001dca8 <_ZNK8touchgfx6Bitmap7getDataEv>
900071d8:	4b1d      	ldr	r3, [pc, #116]	; (90007250 <_ZN18MainScreenViewBaseC1Ev+0x3ac>)
        touchable = touch;
900071da:	f240 1b01 	movw	fp, #257	; 0x101
          visible(true)
900071de:	f44f 7c80 	mov.w	ip, #256	; 0x100
900071e2:	f8c4 386c 	str.w	r3, [r4, #2156]	; 0x86c
        : pressed(false), alpha(255), action(0)
900071e6:	f64f 7300 	movw	r3, #65280	; 0xff00
        : T(), up(), down()
900071ea:	491a      	ldr	r1, [pc, #104]	; (90007254 <_ZN18MainScreenViewBaseC1Ev+0x3b0>)
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
900071ec:	f604 1268 	addw	r2, r4, #2408	; 0x968
900071f0:	f8a4 38bc 	strh.w	r3, [r4, #2236]	; 0x8bc
        : Widget(), bitmap(bmp), alpha(255)
900071f4:	4b10      	ldr	r3, [pc, #64]	; (90007238 <_ZN18MainScreenViewBaseC1Ev+0x394>)
900071f6:	f8c4 087c 	str.w	r0, [r4, #2172]	; 0x87c
900071fa:	f604 00c4 	addw	r0, r4, #2244	; 0x8c4
900071fe:	f8c4 38c4 	str.w	r3, [r4, #2244]	; 0x8c4
90007202:	f504 6309 	add.w	r3, r4, #2192	; 0x890
90007206:	f8a4 c8e8 	strh.w	ip, [r4, #2280]	; 0x8e8
        Image::setBitmap(bmp);
9000720a:	ee0e 0a90 	vmov	s29, r0
9000720e:	f8c4 6864 	str.w	r6, [r4, #2148]	; 0x864
        : bitmapId(id)
90007212:	f04f 36ff 	mov.w	r6, #4294967295
        : Widget(), bitmap(bmp), alpha(255)
90007216:	f8a4 98ea 	strh.w	r9, [r4, #2282]	; 0x8ea
9000721a:	f884 98ec 	strb.w	r9, [r4, #2284]	; 0x8ec
        touchable = touch;
9000721e:	f8a4 b8b4 	strh.w	fp, [r4, #2228]	; 0x8b4
90007222:	f8c4 1890 	str.w	r1, [r4, #2192]	; 0x890
        Image::setBitmap(bmp);
90007226:	a92c      	add	r1, sp, #176	; 0xb0
90007228:	e018      	b.n	9000725c <_ZN18MainScreenViewBaseC1Ev+0x3b8>
9000722a:	bf00      	nop
9000722c:	9002f740 	.word	0x9002f740
90007230:	900308a8 	.word	0x900308a8
90007234:	900302b8 	.word	0x900302b8
90007238:	90030a7c 	.word	0x90030a7c
9000723c:	90030818 	.word	0x90030818
90007240:	9002ecb0 	.word	0x9002ecb0
90007244:	24028e2c 	.word	0x24028e2c
90007248:	9002f70c 	.word	0x9002f70c
9000724c:	90030564 	.word	0x90030564
90007250:	90030588 	.word	0x90030588
90007254:	9002ebc4 	.word	0x9002ebc4
90007258:	9002e55c 	.word	0x9002e55c
9000725c:	f8c4 58b8 	str.w	r5, [r4, #2232]	; 0x8b8
90007260:	f8c4 58c0 	str.w	r5, [r4, #2240]	; 0x8c0
90007264:	f8c4 5894 	str.w	r5, [r4, #2196]	; 0x894
90007268:	f8c4 5898 	str.w	r5, [r4, #2200]	; 0x898
9000726c:	f8c4 589c 	str.w	r5, [r4, #2204]	; 0x89c
90007270:	f8c4 58a0 	str.w	r5, [r4, #2208]	; 0x8a0
          visible(true)
90007274:	f8c4 58a4 	str.w	r5, [r4, #2212]	; 0x8a4
90007278:	f8c4 58a8 	str.w	r5, [r4, #2216]	; 0x8a8
9000727c:	f8c4 58ac 	str.w	r5, [r4, #2220]	; 0x8ac
90007280:	f8c4 58b0 	str.w	r5, [r4, #2224]	; 0x8b0
90007284:	f8c4 58c8 	str.w	r5, [r4, #2248]	; 0x8c8
90007288:	f8c4 58cc 	str.w	r5, [r4, #2252]	; 0x8cc
9000728c:	f8c4 58d0 	str.w	r5, [r4, #2256]	; 0x8d0
90007290:	f8c4 58d4 	str.w	r5, [r4, #2260]	; 0x8d4
90007294:	f8c4 58d8 	str.w	r5, [r4, #2264]	; 0x8d8
90007298:	f8c4 58dc 	str.w	r5, [r4, #2268]	; 0x8dc
9000729c:	f8c4 58e0 	str.w	r5, [r4, #2272]	; 0x8e0
900072a0:	f8c4 58e4 	str.w	r5, [r4, #2276]	; 0x8e4
900072a4:	9302      	str	r3, [sp, #8]
900072a6:	9203      	str	r2, [sp, #12]
900072a8:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
900072ac:	f011 f9ad 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(buttonImage);
900072b0:	eddd 9a02 	vldr	s19, [sp, #8]
        : T(), up(), down()
900072b4:	f604 1ec8 	addw	lr, r4, #2504	; 0x9c8
        T::add(buttonImage);
900072b8:	ee1e 1a90 	vmov	r1, s29
900072bc:	f8c4 68f0 	str.w	r6, [r4, #2288]	; 0x8f0
900072c0:	ee19 0a90 	vmov	r0, s19
        rect.x = x;
900072c4:	f8c4 58c8 	str.w	r5, [r4, #2248]	; 0x8c8
        : T(), up(), down()
900072c8:	f8cd e014 	str.w	lr, [sp, #20]
        T::add(buttonImage);
900072cc:	f00d fdf2 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900072d0:	4bf4      	ldr	r3, [pc, #976]	; (900076a4 <_ZN18MainScreenViewBaseC1Ev+0x800>)
          visible(true)
900072d2:	f44f 7c80 	mov.w	ip, #256	; 0x100
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900072d6:	22ff      	movs	r2, #255	; 0xff
900072d8:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
900072dc:	f8c4 393c 	str.w	r3, [r4, #2364]	; 0x93c
900072e0:	4bf1      	ldr	r3, [pc, #964]	; (900076a8 <_ZN18MainScreenViewBaseC1Ev+0x804>)
900072e2:	4671      	mov	r1, lr
900072e4:	f8a4 c918 	strh.w	ip, [r4, #2328]	; 0x918
900072e8:	f8c4 38f4 	str.w	r3, [r4, #2292]	; 0x8f4
900072ec:	4bef      	ldr	r3, [pc, #956]	; (900076ac <_ZN18MainScreenViewBaseC1Ev+0x808>)
900072ee:	f8a4 c960 	strh.w	ip, [r4, #2400]	; 0x960
900072f2:	f8c4 391c 	str.w	r3, [r4, #2332]	; 0x91c
900072f6:	f8a4 6920 	strh.w	r6, [r4, #2336]	; 0x920
900072fa:	f8c4 292a 	str.w	r2, [r4, #2346]	; 0x92a
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900072fe:	f8c4 6934 	str.w	r6, [r4, #2356]	; 0x934
        : Widget(), bitmap(bmp), alpha(255)
90007302:	4aeb      	ldr	r2, [pc, #940]	; (900076b0 <_ZN18MainScreenViewBaseC1Ev+0x80c>)
90007304:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
        : x(0), y(0), width(0), height(0)
90007308:	f8c4 58f8 	str.w	r5, [r4, #2296]	; 0x8f8
9000730c:	f8c4 58fc 	str.w	r5, [r4, #2300]	; 0x8fc
90007310:	f8c4 5900 	str.w	r5, [r4, #2304]	; 0x900
90007314:	f8c4 5904 	str.w	r5, [r4, #2308]	; 0x904
90007318:	f8c4 5908 	str.w	r5, [r4, #2312]	; 0x908
9000731c:	f8c4 590c 	str.w	r5, [r4, #2316]	; 0x90c
90007320:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
90007324:	f8c4 5914 	str.w	r5, [r4, #2324]	; 0x914
        : color(col)
90007328:	f8c4 5924 	str.w	r5, [r4, #2340]	; 0x924
9000732c:	f8a4 5928 	strh.w	r5, [r4, #2344]	; 0x928
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90007330:	f8c4 5930 	str.w	r5, [r4, #2352]	; 0x930
              text(0)
90007334:	f8c4 5938 	str.w	r5, [r4, #2360]	; 0x938
        : x(0), y(0), width(0), height(0)
90007338:	f8c4 5940 	str.w	r5, [r4, #2368]	; 0x940
9000733c:	f8c4 5944 	str.w	r5, [r4, #2372]	; 0x944
90007340:	f8c4 5948 	str.w	r5, [r4, #2376]	; 0x948
90007344:	f8c4 594c 	str.w	r5, [r4, #2380]	; 0x94c
90007348:	f8c4 5950 	str.w	r5, [r4, #2384]	; 0x950
9000734c:	f8c4 5954 	str.w	r5, [r4, #2388]	; 0x954
90007350:	f8c4 5958 	str.w	r5, [r4, #2392]	; 0x958
90007354:	f8c4 595c 	str.w	r5, [r4, #2396]	; 0x95c
90007358:	f8c4 5964 	str.w	r5, [r4, #2404]	; 0x964
9000735c:	f8c4 596c 	str.w	r5, [r4, #2412]	; 0x96c
90007360:	f8c4 5970 	str.w	r5, [r4, #2416]	; 0x970
90007364:	f8c4 5974 	str.w	r5, [r4, #2420]	; 0x974
        Image::setBitmap(bmp);
90007368:	ed9d aa03 	vldr	s20, [sp, #12]
9000736c:	f8a4 c98c 	strh.w	ip, [r4, #2444]	; 0x98c
90007370:	ee1a 0a10 	vmov	r0, s20
        : Widget(), bitmap(bmp), alpha(255)
90007374:	f8c4 2968 	str.w	r2, [r4, #2408]	; 0x968
90007378:	f8a4 998e 	strh.w	r9, [r4, #2446]	; 0x98e
9000737c:	f884 6990 	strb.w	r6, [r4, #2448]	; 0x990
90007380:	f8c4 5978 	str.w	r5, [r4, #2424]	; 0x978
90007384:	f8c4 597c 	str.w	r5, [r4, #2428]	; 0x97c
90007388:	f8c4 5980 	str.w	r5, [r4, #2432]	; 0x980
9000738c:	f8c4 5984 	str.w	r5, [r4, #2436]	; 0x984
90007390:	f8c4 5988 	str.w	r5, [r4, #2440]	; 0x988
        Image::setBitmap(bmp);
90007394:	f011 f939 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90007398:	f64f 7e00 	movw	lr, #65280	; 0xff00
9000739c:	ed9d ea05 	vldr	s28, [sp, #20]
900073a0:	f44f 7c80 	mov.w	ip, #256	; 0x100
900073a4:	f8a4 e9c0 	strh.w	lr, [r4, #2496]	; 0x9c0
900073a8:	f604 1e94 	addw	lr, r4, #2452	; 0x994
        : Widget(), bitmap(bmp), alpha(255)
900073ac:	4ac0      	ldr	r2, [pc, #768]	; (900076b0 <_ZN18MainScreenViewBaseC1Ev+0x80c>)
        Image::setBitmap(bmp);
900073ae:	ee1e 0a10 	vmov	r0, s28
900073b2:	f8cd e008 	str.w	lr, [sp, #8]
        : T(), up(), down()
900073b6:	f604 2e2c 	addw	lr, r4, #2604	; 0xa2c
900073ba:	49be      	ldr	r1, [pc, #760]	; (900076b4 <_ZN18MainScreenViewBaseC1Ev+0x810>)
900073bc:	f8cd e010 	str.w	lr, [sp, #16]
900073c0:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
900073c4:	f8a4 c9ec 	strh.w	ip, [r4, #2540]	; 0x9ec
        : Widget(), bitmap(bmp), alpha(255)
900073c8:	f8c4 29c8 	str.w	r2, [r4, #2504]	; 0x9c8
        touchable = touch;
900073cc:	f8a4 b9b8 	strh.w	fp, [r4, #2488]	; 0x9b8
900073d0:	f8c4 1994 	str.w	r1, [r4, #2452]	; 0x994
        Image::setBitmap(bmp);
900073d4:	4671      	mov	r1, lr
        : Widget(), bitmap(bmp), alpha(255)
900073d6:	f8a4 99ee 	strh.w	r9, [r4, #2542]	; 0x9ee
900073da:	f884 99f0 	strb.w	r9, [r4, #2544]	; 0x9f0
900073de:	f8c4 59bc 	str.w	r5, [r4, #2492]	; 0x9bc
900073e2:	f8c4 59c4 	str.w	r5, [r4, #2500]	; 0x9c4
900073e6:	f8c4 5998 	str.w	r5, [r4, #2456]	; 0x998
900073ea:	f8c4 599c 	str.w	r5, [r4, #2460]	; 0x99c
900073ee:	f8c4 59a0 	str.w	r5, [r4, #2464]	; 0x9a0
900073f2:	f8c4 59a4 	str.w	r5, [r4, #2468]	; 0x9a4
          visible(true)
900073f6:	f8c4 59a8 	str.w	r5, [r4, #2472]	; 0x9a8
900073fa:	f8c4 59ac 	str.w	r5, [r4, #2476]	; 0x9ac
900073fe:	f8c4 59b0 	str.w	r5, [r4, #2480]	; 0x9b0
90007402:	f8c4 59b4 	str.w	r5, [r4, #2484]	; 0x9b4
90007406:	f8c4 59cc 	str.w	r5, [r4, #2508]	; 0x9cc
9000740a:	f8c4 59d0 	str.w	r5, [r4, #2512]	; 0x9d0
9000740e:	f8c4 59d4 	str.w	r5, [r4, #2516]	; 0x9d4
90007412:	f8c4 59d8 	str.w	r5, [r4, #2520]	; 0x9d8
90007416:	f8c4 59dc 	str.w	r5, [r4, #2524]	; 0x9dc
9000741a:	f8c4 59e0 	str.w	r5, [r4, #2528]	; 0x9e0
9000741e:	f8c4 59e4 	str.w	r5, [r4, #2532]	; 0x9e4
90007422:	f8c4 59e8 	str.w	r5, [r4, #2536]	; 0x9e8
90007426:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
        Image::setBitmap(bmp);
9000742a:	f011 f8ee 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(buttonImage);
9000742e:	ee1e 1a10 	vmov	r1, s28
90007432:	9802      	ldr	r0, [sp, #8]
90007434:	f8c4 69f4 	str.w	r6, [r4, #2548]	; 0x9f4
        rect.x = x;
90007438:	f8c4 59cc 	str.w	r5, [r4, #2508]	; 0x9cc
9000743c:	f00d fd3a 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007440:	f64f 7e00 	movw	lr, #65280	; 0xff00
        : T(), up(), down()
90007444:	4a9b      	ldr	r2, [pc, #620]	; (900076b4 <_ZN18MainScreenViewBaseC1Ev+0x810>)
          visible(true)
90007446:	f44f 7c80 	mov.w	ip, #256	; 0x100
9000744a:	f8a4 ea24 	strh.w	lr, [r4, #2596]	; 0xa24
9000744e:	f604 1ef8 	addw	lr, r4, #2552	; 0x9f8
90007452:	eddd da04 	vldr	s27, [sp, #16]
90007456:	f8cd e00c 	str.w	lr, [sp, #12]
9000745a:	f504 6e29 	add.w	lr, r4, #2704	; 0xa90
9000745e:	f8c4 29f8 	str.w	r2, [r4, #2552]	; 0x9f8
90007462:	ee1d 0a90 	vmov	r0, s27
        : Widget(), bitmap(bmp), alpha(255)
90007466:	4a92      	ldr	r2, [pc, #584]	; (900076b0 <_ZN18MainScreenViewBaseC1Ev+0x80c>)
90007468:	f8cd e014 	str.w	lr, [sp, #20]
        Image::setBitmap(bmp);
9000746c:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
90007470:	f8a4 ca50 	strh.w	ip, [r4, #2640]	; 0xa50
90007474:	4671      	mov	r1, lr
        : Widget(), bitmap(bmp), alpha(255)
90007476:	f8c4 2a2c 	str.w	r2, [r4, #2604]	; 0xa2c
        touchable = touch;
9000747a:	f8a4 ba1c 	strh.w	fp, [r4, #2588]	; 0xa1c
9000747e:	f8a4 9a52 	strh.w	r9, [r4, #2642]	; 0xa52
90007482:	f884 9a54 	strb.w	r9, [r4, #2644]	; 0xa54
90007486:	f8c4 5a20 	str.w	r5, [r4, #2592]	; 0xa20
9000748a:	f8c4 5a28 	str.w	r5, [r4, #2600]	; 0xa28
9000748e:	f8c4 59fc 	str.w	r5, [r4, #2556]	; 0x9fc
90007492:	f8c4 5a00 	str.w	r5, [r4, #2560]	; 0xa00
90007496:	f8c4 5a04 	str.w	r5, [r4, #2564]	; 0xa04
9000749a:	f8c4 5a08 	str.w	r5, [r4, #2568]	; 0xa08
          visible(true)
9000749e:	f8c4 5a0c 	str.w	r5, [r4, #2572]	; 0xa0c
900074a2:	f8c4 5a10 	str.w	r5, [r4, #2576]	; 0xa10
900074a6:	f8c4 5a14 	str.w	r5, [r4, #2580]	; 0xa14
900074aa:	f8c4 5a18 	str.w	r5, [r4, #2584]	; 0xa18
900074ae:	f8c4 5a30 	str.w	r5, [r4, #2608]	; 0xa30
900074b2:	f8c4 5a34 	str.w	r5, [r4, #2612]	; 0xa34
900074b6:	f8c4 5a38 	str.w	r5, [r4, #2616]	; 0xa38
900074ba:	f8c4 5a3c 	str.w	r5, [r4, #2620]	; 0xa3c
900074be:	f8c4 5a40 	str.w	r5, [r4, #2624]	; 0xa40
900074c2:	f8c4 5a44 	str.w	r5, [r4, #2628]	; 0xa44
900074c6:	f8c4 5a48 	str.w	r5, [r4, #2632]	; 0xa48
900074ca:	f8c4 5a4c 	str.w	r5, [r4, #2636]	; 0xa4c
900074ce:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
        Image::setBitmap(bmp);
900074d2:	f011 f89a 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(buttonImage);
900074d6:	ee1d 1a90 	vmov	r1, s27
900074da:	9803      	ldr	r0, [sp, #12]
900074dc:	f8c4 6a58 	str.w	r6, [r4, #2648]	; 0xa58
        rect.x = x;
900074e0:	f8c4 5a30 	str.w	r5, [r4, #2608]	; 0xa30
900074e4:	f00d fce6 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          visible(true)
900074e8:	f44f 7c80 	mov.w	ip, #256	; 0x100
        : T(), up(), down()
900074ec:	4a71      	ldr	r2, [pc, #452]	; (900076b4 <_ZN18MainScreenViewBaseC1Ev+0x810>)
900074ee:	f64f 7e00 	movw	lr, #65280	; 0xff00
900074f2:	f8a4 cab4 	strh.w	ip, [r4, #2740]	; 0xab4
900074f6:	f604 2c5c 	addw	ip, r4, #2652	; 0xa5c
900074fa:	ed9d da05 	vldr	s26, [sp, #20]
900074fe:	f8cd c010 	str.w	ip, [sp, #16]
90007502:	f604 2cf4 	addw	ip, r4, #2804	; 0xaf4
90007506:	f8c4 2a5c 	str.w	r2, [r4, #2652]	; 0xa5c
9000750a:	ee1d 0a10 	vmov	r0, s26
        : Widget(), bitmap(bmp), alpha(255)
9000750e:	4a68      	ldr	r2, [pc, #416]	; (900076b0 <_ZN18MainScreenViewBaseC1Ev+0x80c>)
90007510:	f8cd c018 	str.w	ip, [sp, #24]
        Image::setBitmap(bmp);
90007514:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007518:	f8a4 ea88 	strh.w	lr, [r4, #2696]	; 0xa88
9000751c:	4661      	mov	r1, ip
        : Widget(), bitmap(bmp), alpha(255)
9000751e:	f8c4 2a90 	str.w	r2, [r4, #2704]	; 0xa90
        touchable = touch;
90007522:	f8a4 ba80 	strh.w	fp, [r4, #2688]	; 0xa80
90007526:	f8a4 9ab6 	strh.w	r9, [r4, #2742]	; 0xab6
9000752a:	f884 9ab8 	strb.w	r9, [r4, #2744]	; 0xab8
9000752e:	f8c4 5a84 	str.w	r5, [r4, #2692]	; 0xa84
90007532:	f8c4 5a8c 	str.w	r5, [r4, #2700]	; 0xa8c
90007536:	f8c4 5a60 	str.w	r5, [r4, #2656]	; 0xa60
9000753a:	f8c4 5a64 	str.w	r5, [r4, #2660]	; 0xa64
9000753e:	f8c4 5a68 	str.w	r5, [r4, #2664]	; 0xa68
90007542:	f8c4 5a6c 	str.w	r5, [r4, #2668]	; 0xa6c
          visible(true)
90007546:	f8c4 5a70 	str.w	r5, [r4, #2672]	; 0xa70
9000754a:	f8c4 5a74 	str.w	r5, [r4, #2676]	; 0xa74
9000754e:	f8c4 5a78 	str.w	r5, [r4, #2680]	; 0xa78
90007552:	f8c4 5a7c 	str.w	r5, [r4, #2684]	; 0xa7c
90007556:	f8c4 5a94 	str.w	r5, [r4, #2708]	; 0xa94
9000755a:	f8c4 5a98 	str.w	r5, [r4, #2712]	; 0xa98
9000755e:	f8c4 5a9c 	str.w	r5, [r4, #2716]	; 0xa9c
90007562:	f8c4 5aa0 	str.w	r5, [r4, #2720]	; 0xaa0
90007566:	f8c4 5aa4 	str.w	r5, [r4, #2724]	; 0xaa4
9000756a:	f8c4 5aa8 	str.w	r5, [r4, #2728]	; 0xaa8
9000756e:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
90007572:	f8c4 5ab0 	str.w	r5, [r4, #2736]	; 0xab0
90007576:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
        Image::setBitmap(bmp);
9000757a:	f011 f846 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(buttonImage);
9000757e:	ee1d 1a10 	vmov	r1, s26
90007582:	9804      	ldr	r0, [sp, #16]
90007584:	f8c4 6abc 	str.w	r6, [r4, #2748]	; 0xabc
        rect.x = x;
90007588:	f8c4 5a94 	str.w	r5, [r4, #2708]	; 0xa94
9000758c:	f00d fc92 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007590:	f64f 7e00 	movw	lr, #65280	; 0xff00
        : T(), up(), down()
90007594:	4a47      	ldr	r2, [pc, #284]	; (900076b4 <_ZN18MainScreenViewBaseC1Ev+0x810>)
          visible(true)
90007596:	f44f 7c80 	mov.w	ip, #256	; 0x100
9000759a:	f8a4 eaec 	strh.w	lr, [r4, #2796]	; 0xaec
9000759e:	f504 6e2c 	add.w	lr, r4, #2752	; 0xac0
900075a2:	eddd ca06 	vldr	s25, [sp, #24]
900075a6:	f8cd e014 	str.w	lr, [sp, #20]
900075aa:	f604 3e58 	addw	lr, r4, #2904	; 0xb58
900075ae:	f8c4 2ac0 	str.w	r2, [r4, #2752]	; 0xac0
900075b2:	ee1c 0a90 	vmov	r0, s25
        : Widget(), bitmap(bmp), alpha(255)
900075b6:	4a3e      	ldr	r2, [pc, #248]	; (900076b0 <_ZN18MainScreenViewBaseC1Ev+0x80c>)
900075b8:	f8cd e01c 	str.w	lr, [sp, #28]
        Image::setBitmap(bmp);
900075bc:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
900075c0:	f8a4 cb18 	strh.w	ip, [r4, #2840]	; 0xb18
900075c4:	4671      	mov	r1, lr
        : Widget(), bitmap(bmp), alpha(255)
900075c6:	f8c4 2af4 	str.w	r2, [r4, #2804]	; 0xaf4
        touchable = touch;
900075ca:	f8a4 bae4 	strh.w	fp, [r4, #2788]	; 0xae4
900075ce:	f8a4 9b1a 	strh.w	r9, [r4, #2842]	; 0xb1a
900075d2:	f884 9b1c 	strb.w	r9, [r4, #2844]	; 0xb1c
900075d6:	f8c4 5ae8 	str.w	r5, [r4, #2792]	; 0xae8
900075da:	f8c4 5af0 	str.w	r5, [r4, #2800]	; 0xaf0
900075de:	f8c4 5ac4 	str.w	r5, [r4, #2756]	; 0xac4
900075e2:	f8c4 5ac8 	str.w	r5, [r4, #2760]	; 0xac8
900075e6:	f8c4 5acc 	str.w	r5, [r4, #2764]	; 0xacc
900075ea:	f8c4 5ad0 	str.w	r5, [r4, #2768]	; 0xad0
          visible(true)
900075ee:	f8c4 5ad4 	str.w	r5, [r4, #2772]	; 0xad4
900075f2:	f8c4 5ad8 	str.w	r5, [r4, #2776]	; 0xad8
900075f6:	f8c4 5adc 	str.w	r5, [r4, #2780]	; 0xadc
900075fa:	f8c4 5ae0 	str.w	r5, [r4, #2784]	; 0xae0
900075fe:	f8c4 5af8 	str.w	r5, [r4, #2808]	; 0xaf8
90007602:	f8c4 5afc 	str.w	r5, [r4, #2812]	; 0xafc
90007606:	f8c4 5b00 	str.w	r5, [r4, #2816]	; 0xb00
9000760a:	f8c4 5b04 	str.w	r5, [r4, #2820]	; 0xb04
9000760e:	f8c4 5b08 	str.w	r5, [r4, #2824]	; 0xb08
90007612:	f8c4 5b0c 	str.w	r5, [r4, #2828]	; 0xb0c
90007616:	f8c4 5b10 	str.w	r5, [r4, #2832]	; 0xb10
9000761a:	f8c4 5b14 	str.w	r5, [r4, #2836]	; 0xb14
9000761e:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
        Image::setBitmap(bmp);
90007622:	f010 fff2 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(buttonImage);
90007626:	ee1c 1a90 	vmov	r1, s25
9000762a:	9805      	ldr	r0, [sp, #20]
9000762c:	f8c4 6b20 	str.w	r6, [r4, #2848]	; 0xb20
        rect.x = x;
90007630:	f8c4 5af8 	str.w	r5, [r4, #2808]	; 0xaf8
90007634:	f00d fc3e 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007638:	f64f 7e00 	movw	lr, #65280	; 0xff00
        : T(), up(), down()
9000763c:	4a1d      	ldr	r2, [pc, #116]	; (900076b4 <_ZN18MainScreenViewBaseC1Ev+0x810>)
          visible(true)
9000763e:	f44f 7c80 	mov.w	ip, #256	; 0x100
90007642:	f8a4 eb50 	strh.w	lr, [r4, #2896]	; 0xb50
90007646:	f604 3e24 	addw	lr, r4, #2852	; 0xb24
9000764a:	ed9d ca07 	vldr	s24, [sp, #28]
9000764e:	f8cd e018 	str.w	lr, [sp, #24]
90007652:	f604 3ebc 	addw	lr, r4, #3004	; 0xbbc
90007656:	f8c4 2b24 	str.w	r2, [r4, #2852]	; 0xb24
9000765a:	ee1c 0a10 	vmov	r0, s24
        : Widget(), bitmap(bmp), alpha(255)
9000765e:	4a14      	ldr	r2, [pc, #80]	; (900076b0 <_ZN18MainScreenViewBaseC1Ev+0x80c>)
90007660:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
        Image::setBitmap(bmp);
90007664:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
90007668:	f8a4 cb7c 	strh.w	ip, [r4, #2940]	; 0xb7c
9000766c:	4671      	mov	r1, lr
        : Widget(), bitmap(bmp), alpha(255)
9000766e:	f8c4 2b58 	str.w	r2, [r4, #2904]	; 0xb58
        touchable = touch;
90007672:	f8a4 bb48 	strh.w	fp, [r4, #2888]	; 0xb48
90007676:	f8a4 9b7e 	strh.w	r9, [r4, #2942]	; 0xb7e
9000767a:	f884 9b80 	strb.w	r9, [r4, #2944]	; 0xb80
9000767e:	f8c4 5b4c 	str.w	r5, [r4, #2892]	; 0xb4c
90007682:	f8c4 5b54 	str.w	r5, [r4, #2900]	; 0xb54
90007686:	f8c4 5b28 	str.w	r5, [r4, #2856]	; 0xb28
9000768a:	f8c4 5b2c 	str.w	r5, [r4, #2860]	; 0xb2c
9000768e:	f8c4 5b30 	str.w	r5, [r4, #2864]	; 0xb30
90007692:	f8c4 5b34 	str.w	r5, [r4, #2868]	; 0xb34
          visible(true)
90007696:	f8c4 5b38 	str.w	r5, [r4, #2872]	; 0xb38
9000769a:	f8c4 5b3c 	str.w	r5, [r4, #2876]	; 0xb3c
9000769e:	f8c4 5b40 	str.w	r5, [r4, #2880]	; 0xb40
900076a2:	e009      	b.n	900076b8 <_ZN18MainScreenViewBaseC1Ev+0x814>
900076a4:	900302b8 	.word	0x900302b8
900076a8:	90030818 	.word	0x90030818
900076ac:	9002ecb0 	.word	0x9002ecb0
900076b0:	90030a7c 	.word	0x90030a7c
900076b4:	9002ebc4 	.word	0x9002ebc4
900076b8:	f8c4 5b44 	str.w	r5, [r4, #2884]	; 0xb44
900076bc:	f8c4 5b5c 	str.w	r5, [r4, #2908]	; 0xb5c
900076c0:	f8c4 5b60 	str.w	r5, [r4, #2912]	; 0xb60
900076c4:	f8c4 5b64 	str.w	r5, [r4, #2916]	; 0xb64
900076c8:	f8c4 5b68 	str.w	r5, [r4, #2920]	; 0xb68
900076cc:	f8c4 5b6c 	str.w	r5, [r4, #2924]	; 0xb6c
900076d0:	f8c4 5b70 	str.w	r5, [r4, #2928]	; 0xb70
900076d4:	f8c4 5b74 	str.w	r5, [r4, #2932]	; 0xb74
900076d8:	f8c4 5b78 	str.w	r5, [r4, #2936]	; 0xb78
900076dc:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
        Image::setBitmap(bmp);
900076e0:	f010 ff93 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(buttonImage);
900076e4:	ee1c 1a10 	vmov	r1, s24
900076e8:	9806      	ldr	r0, [sp, #24]
900076ea:	f8c4 6b84 	str.w	r6, [r4, #2948]	; 0xb84
        rect.x = x;
900076ee:	f8c4 5b5c 	str.w	r5, [r4, #2908]	; 0xb5c
900076f2:	f00d fbdf 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900076f6:	f64f 7e00 	movw	lr, #65280	; 0xff00
        : T(), up(), down()
900076fa:	4af3      	ldr	r2, [pc, #972]	; (90007ac8 <_ZN18MainScreenViewBaseC1Ev+0xc24>)
          visible(true)
900076fc:	f44f 7c80 	mov.w	ip, #256	; 0x100
90007700:	f8a4 ebb4 	strh.w	lr, [r4, #2996]	; 0xbb4
90007704:	f604 3e88 	addw	lr, r4, #2952	; 0xb88
90007708:	eddd ba0e 	vldr	s23, [sp, #56]	; 0x38
9000770c:	f8cd e01c 	str.w	lr, [sp, #28]
90007710:	f604 5e88 	addw	lr, r4, #3464	; 0xd88
90007714:	f8c4 2b88 	str.w	r2, [r4, #2952]	; 0xb88
90007718:	ee1b 0a90 	vmov	r0, s23
        : Widget(), bitmap(bmp), alpha(255)
9000771c:	4aeb      	ldr	r2, [pc, #940]	; (90007acc <_ZN18MainScreenViewBaseC1Ev+0xc28>)
9000771e:	f8cd e03c 	str.w	lr, [sp, #60]	; 0x3c
        Image::setBitmap(bmp);
90007722:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
90007726:	f8a4 cbe0 	strh.w	ip, [r4, #3040]	; 0xbe0
9000772a:	4671      	mov	r1, lr
        : Widget(), bitmap(bmp), alpha(255)
9000772c:	f8c4 2bbc 	str.w	r2, [r4, #3004]	; 0xbbc
        touchable = touch;
90007730:	f8a4 bbac 	strh.w	fp, [r4, #2988]	; 0xbac
90007734:	f8a4 9be2 	strh.w	r9, [r4, #3042]	; 0xbe2
90007738:	f884 9be4 	strb.w	r9, [r4, #3044]	; 0xbe4
9000773c:	f8c4 5bb0 	str.w	r5, [r4, #2992]	; 0xbb0
90007740:	f8c4 5bb8 	str.w	r5, [r4, #3000]	; 0xbb8
90007744:	f8c4 5b8c 	str.w	r5, [r4, #2956]	; 0xb8c
90007748:	f8c4 5b90 	str.w	r5, [r4, #2960]	; 0xb90
9000774c:	f8c4 5b94 	str.w	r5, [r4, #2964]	; 0xb94
90007750:	f8c4 5b98 	str.w	r5, [r4, #2968]	; 0xb98
          visible(true)
90007754:	f8c4 5b9c 	str.w	r5, [r4, #2972]	; 0xb9c
90007758:	f8c4 5ba0 	str.w	r5, [r4, #2976]	; 0xba0
9000775c:	f8c4 5ba4 	str.w	r5, [r4, #2980]	; 0xba4
90007760:	f8c4 5ba8 	str.w	r5, [r4, #2984]	; 0xba8
90007764:	f8c4 5bc0 	str.w	r5, [r4, #3008]	; 0xbc0
90007768:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
9000776c:	f8c4 5bc8 	str.w	r5, [r4, #3016]	; 0xbc8
90007770:	f8c4 5bcc 	str.w	r5, [r4, #3020]	; 0xbcc
90007774:	f8c4 5bd0 	str.w	r5, [r4, #3024]	; 0xbd0
90007778:	f8c4 5bd4 	str.w	r5, [r4, #3028]	; 0xbd4
9000777c:	f8c4 5bd8 	str.w	r5, [r4, #3032]	; 0xbd8
90007780:	f8c4 5bdc 	str.w	r5, [r4, #3036]	; 0xbdc
90007784:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
        Image::setBitmap(bmp);
90007788:	f010 ff3f 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(buttonImage);
9000778c:	ee1b 1a90 	vmov	r1, s23
90007790:	9807      	ldr	r0, [sp, #28]
90007792:	f8c4 6be8 	str.w	r6, [r4, #3048]	; 0xbe8
        rect.x = x;
90007796:	f8c4 5bc0 	str.w	r5, [r4, #3008]	; 0xbc0
9000779a:	f00d fb8b 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000779e:	4bcc      	ldr	r3, [pc, #816]	; (90007ad0 <_ZN18MainScreenViewBaseC1Ev+0xc2c>)
          visible(true)
900077a0:	f44f 7c80 	mov.w	ip, #256	; 0x100
900077a4:	22ff      	movs	r2, #255	; 0xff
900077a6:	4619      	mov	r1, r3
900077a8:	f8c4 3bec 	str.w	r3, [r4, #3052]	; 0xbec
900077ac:	4bc9      	ldr	r3, [pc, #804]	; (90007ad4 <_ZN18MainScreenViewBaseC1Ev+0xc30>)
900077ae:	f64f 7e00 	movw	lr, #65280	; 0xff00
900077b2:	f8a4 cc10 	strh.w	ip, [r4, #3088]	; 0xc10
900077b6:	f8c4 3c14 	str.w	r3, [r4, #3092]	; 0xc14
900077ba:	f8c4 3c5c 	str.w	r3, [r4, #3164]	; 0xc5c
900077be:	f8a4 9c18 	strh.w	r9, [r4, #3096]	; 0xc18
900077c2:	f8c4 2c22 	str.w	r2, [r4, #3106]	; 0xc22
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900077c6:	f8c4 6c2c 	str.w	r6, [r4, #3116]	; 0xc2c
900077ca:	f8a4 cc58 	strh.w	ip, [r4, #3160]	; 0xc58
900077ce:	f8c4 1c34 	str.w	r1, [r4, #3124]	; 0xc34
900077d2:	f8a4 9c60 	strh.w	r9, [r4, #3168]	; 0xc60
        : x(0), y(0), width(0), height(0)
900077d6:	f8c4 5bf0 	str.w	r5, [r4, #3056]	; 0xbf0
900077da:	f8c4 5bf4 	str.w	r5, [r4, #3060]	; 0xbf4
900077de:	f8c4 5bf8 	str.w	r5, [r4, #3064]	; 0xbf8
900077e2:	f8c4 5bfc 	str.w	r5, [r4, #3068]	; 0xbfc
900077e6:	f8c4 5c00 	str.w	r5, [r4, #3072]	; 0xc00
900077ea:	f8c4 5c04 	str.w	r5, [r4, #3076]	; 0xc04
900077ee:	f8c4 5c08 	str.w	r5, [r4, #3080]	; 0xc08
900077f2:	f8c4 5c0c 	str.w	r5, [r4, #3084]	; 0xc0c
        : color(col)
900077f6:	f8c4 5c1c 	str.w	r5, [r4, #3100]	; 0xc1c
900077fa:	f8a4 5c20 	strh.w	r5, [r4, #3104]	; 0xc20
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900077fe:	f8c4 5c28 	str.w	r5, [r4, #3112]	; 0xc28
              text(0)
90007802:	f8c4 5c30 	str.w	r5, [r4, #3120]	; 0xc30
        : x(0), y(0), width(0), height(0)
90007806:	f8c4 5c38 	str.w	r5, [r4, #3128]	; 0xc38
9000780a:	f8c4 5c3c 	str.w	r5, [r4, #3132]	; 0xc3c
9000780e:	f8c4 5c40 	str.w	r5, [r4, #3136]	; 0xc40
90007812:	f8c4 5c44 	str.w	r5, [r4, #3140]	; 0xc44
90007816:	f8c4 5c48 	str.w	r5, [r4, #3144]	; 0xc48
9000781a:	f8c4 5c4c 	str.w	r5, [r4, #3148]	; 0xc4c
9000781e:	f8c4 5c50 	str.w	r5, [r4, #3152]	; 0xc50
90007822:	f8c4 5c54 	str.w	r5, [r4, #3156]	; 0xc54
        : color(col)
90007826:	f8c4 5c64 	str.w	r5, [r4, #3172]	; 0xc64
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000782a:	f8a4 5c68 	strh.w	r5, [r4, #3176]	; 0xc68
9000782e:	f8c4 2c6a 	str.w	r2, [r4, #3178]	; 0xc6a
90007832:	f8c4 3ca4 	str.w	r3, [r4, #3236]	; 0xca4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90007836:	f8c4 6c74 	str.w	r6, [r4, #3188]	; 0xc74
9000783a:	f8a4 cca0 	strh.w	ip, [r4, #3232]	; 0xca0
9000783e:	f8c4 1c7c 	str.w	r1, [r4, #3196]	; 0xc7c
90007842:	f8a4 9ca8 	strh.w	r9, [r4, #3240]	; 0xca8
90007846:	f8c4 2cb2 	str.w	r2, [r4, #3250]	; 0xcb2
9000784a:	f8a4 9cbc 	strh.w	r9, [r4, #3260]	; 0xcbc
9000784e:	f8a4 9cbe 	strh.w	r9, [r4, #3262]	; 0xcbe
90007852:	f8a4 cce8 	strh.w	ip, [r4, #3304]	; 0xce8
90007856:	f8c4 5c70 	str.w	r5, [r4, #3184]	; 0xc70
              text(0)
9000785a:	f8c4 5c78 	str.w	r5, [r4, #3192]	; 0xc78
        : x(0), y(0), width(0), height(0)
9000785e:	f8c4 5c80 	str.w	r5, [r4, #3200]	; 0xc80
90007862:	f8c4 5c84 	str.w	r5, [r4, #3204]	; 0xc84
90007866:	f8c4 5c88 	str.w	r5, [r4, #3208]	; 0xc88
9000786a:	f8c4 5c8c 	str.w	r5, [r4, #3212]	; 0xc8c
9000786e:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
90007872:	f8c4 5c94 	str.w	r5, [r4, #3220]	; 0xc94
90007876:	f8c4 5c98 	str.w	r5, [r4, #3224]	; 0xc98
9000787a:	f8c4 5c9c 	str.w	r5, [r4, #3228]	; 0xc9c
        : color(col)
9000787e:	f8c4 5cac 	str.w	r5, [r4, #3244]	; 0xcac
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90007882:	f8a4 5cb0 	strh.w	r5, [r4, #3248]	; 0xcb0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90007886:	f8a4 5cb8 	strh.w	r5, [r4, #3256]	; 0xcb8
9000788a:	f8a4 5cba 	strh.w	r5, [r4, #3258]	; 0xcba
              text(0)
9000788e:	f8c4 5cc0 	str.w	r5, [r4, #3264]	; 0xcc0
        : x(0), y(0), width(0), height(0)
90007892:	f8c4 5cc8 	str.w	r5, [r4, #3272]	; 0xcc8
90007896:	f8c4 5ccc 	str.w	r5, [r4, #3276]	; 0xccc
9000789a:	f8c4 5cd0 	str.w	r5, [r4, #3280]	; 0xcd0
9000789e:	f8c4 5cd4 	str.w	r5, [r4, #3284]	; 0xcd4
900078a2:	f8c4 5cd8 	str.w	r5, [r4, #3288]	; 0xcd8
900078a6:	f8c4 5cdc 	str.w	r5, [r4, #3292]	; 0xcdc
900078aa:	f8c4 5ce0 	str.w	r5, [r4, #3296]	; 0xce0
900078ae:	f8c4 5ce4 	str.w	r5, [r4, #3300]	; 0xce4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900078b2:	f8c4 1cc4 	str.w	r1, [r4, #3268]	; 0xcc4
900078b6:	f8c4 2cfa 	str.w	r2, [r4, #3322]	; 0xcfa
900078ba:	f8c4 2d42 	str.w	r2, [r4, #3394]	; 0xd42
        : T(), up(), down()
900078be:	4a82      	ldr	r2, [pc, #520]	; (90007ac8 <_ZN18MainScreenViewBaseC1Ev+0xc24>)
900078c0:	f8a4 ed80 	strh.w	lr, [r4, #3456]	; 0xd80
900078c4:	f8c4 3cec 	str.w	r3, [r4, #3308]	; 0xcec
900078c8:	f8c4 3d34 	str.w	r3, [r4, #3380]	; 0xd34
900078cc:	f8c4 1d0c 	str.w	r1, [r4, #3340]	; 0xd0c
900078d0:	f8a4 9cf0 	strh.w	r9, [r4, #3312]	; 0xcf0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900078d4:	f8c4 6d04 	str.w	r6, [r4, #3332]	; 0xd04
900078d8:	f8a4 cd30 	strh.w	ip, [r4, #3376]	; 0xd30
900078dc:	f8a4 9d38 	strh.w	r9, [r4, #3384]	; 0xd38
900078e0:	f8c4 6d4c 	str.w	r6, [r4, #3404]	; 0xd4c
        : color(col)
900078e4:	f8c4 5cf4 	str.w	r5, [r4, #3316]	; 0xcf4
900078e8:	f8a4 5cf8 	strh.w	r5, [r4, #3320]	; 0xcf8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900078ec:	f8c4 5d00 	str.w	r5, [r4, #3328]	; 0xd00
              text(0)
900078f0:	f8c4 5d08 	str.w	r5, [r4, #3336]	; 0xd08
        : x(0), y(0), width(0), height(0)
900078f4:	f8c4 5d10 	str.w	r5, [r4, #3344]	; 0xd10
900078f8:	f8c4 5d14 	str.w	r5, [r4, #3348]	; 0xd14
900078fc:	f8c4 5d18 	str.w	r5, [r4, #3352]	; 0xd18
90007900:	f8c4 5d1c 	str.w	r5, [r4, #3356]	; 0xd1c
90007904:	f8c4 5d20 	str.w	r5, [r4, #3360]	; 0xd20
90007908:	f8c4 5d24 	str.w	r5, [r4, #3364]	; 0xd24
9000790c:	f8c4 5d28 	str.w	r5, [r4, #3368]	; 0xd28
90007910:	f8c4 5d2c 	str.w	r5, [r4, #3372]	; 0xd2c
        : color(col)
90007914:	f8c4 5d3c 	str.w	r5, [r4, #3388]	; 0xd3c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90007918:	f8a4 5d40 	strh.w	r5, [r4, #3392]	; 0xd40
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000791c:	f8c4 5d48 	str.w	r5, [r4, #3400]	; 0xd48
              text(0)
90007920:	f8c4 5d50 	str.w	r5, [r4, #3408]	; 0xd50
90007924:	f8c4 5d7c 	str.w	r5, [r4, #3452]	; 0xd7c
90007928:	f8c4 5d84 	str.w	r5, [r4, #3460]	; 0xd84
        : x(0), y(0), width(0), height(0)
9000792c:	f8c4 5d58 	str.w	r5, [r4, #3416]	; 0xd58
90007930:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
90007934:	f8c4 5d60 	str.w	r5, [r4, #3424]	; 0xd60
90007938:	f8c4 5d64 	str.w	r5, [r4, #3428]	; 0xd64
9000793c:	f8c4 2d54 	str.w	r2, [r4, #3412]	; 0xd54
        : Widget(), bitmap(bmp), alpha(255)
90007940:	4a62      	ldr	r2, [pc, #392]	; (90007acc <_ZN18MainScreenViewBaseC1Ev+0xc28>)
        Image::setBitmap(bmp);
90007942:	ed9d ba0f 	vldr	s22, [sp, #60]	; 0x3c
90007946:	f8a4 cdac 	strh.w	ip, [r4, #3500]	; 0xdac
9000794a:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
        : Widget(), bitmap(bmp), alpha(255)
9000794e:	f8c4 2d88 	str.w	r2, [r4, #3464]	; 0xd88
90007952:	f604 5254 	addw	r2, r4, #3412	; 0xd54
        Image::setBitmap(bmp);
90007956:	4661      	mov	r1, ip
90007958:	ee1b 0a10 	vmov	r0, s22
        touchable = touch;
9000795c:	f8a4 bd78 	strh.w	fp, [r4, #3448]	; 0xd78
90007960:	f604 5b0c 	addw	fp, r4, #3340	; 0xd0c
        : Widget(), bitmap(bmp), alpha(255)
90007964:	f8a4 9dae 	strh.w	r9, [r4, #3502]	; 0xdae
90007968:	f884 9db0 	strb.w	r9, [r4, #3504]	; 0xdb0
          visible(true)
9000796c:	f8c4 5d68 	str.w	r5, [r4, #3432]	; 0xd68
90007970:	f8c4 5d6c 	str.w	r5, [r4, #3436]	; 0xd6c
90007974:	f8c4 5d70 	str.w	r5, [r4, #3440]	; 0xd70
90007978:	f8c4 5d74 	str.w	r5, [r4, #3444]	; 0xd74
9000797c:	f8a4 5d8c 	strh.w	r5, [r4, #3468]	; 0xd8c
90007980:	f8a4 5d8e 	strh.w	r5, [r4, #3470]	; 0xd8e
90007984:	f8c4 5d90 	str.w	r5, [r4, #3472]	; 0xd90
90007988:	f8c4 5d94 	str.w	r5, [r4, #3476]	; 0xd94
9000798c:	f8c4 5d98 	str.w	r5, [r4, #3480]	; 0xd98
90007990:	f8c4 5d9c 	str.w	r5, [r4, #3484]	; 0xd9c
90007994:	f8c4 5da0 	str.w	r5, [r4, #3488]	; 0xda0
90007998:	f8c4 5da4 	str.w	r5, [r4, #3492]	; 0xda4
9000799c:	f8c4 5da8 	str.w	r5, [r4, #3496]	; 0xda8
900079a0:	920e      	str	r2, [sp, #56]	; 0x38
900079a2:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
        Image::setBitmap(bmp);
900079a6:	f010 fe30 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(buttonImage);
900079aa:	eddd fa0e 	vldr	s31, [sp, #56]	; 0x38
900079ae:	ee1b 1a10 	vmov	r1, s22
900079b2:	f8c4 6db4 	str.w	r6, [r4, #3508]	; 0xdb4
900079b6:	f04f 090f 	mov.w	r9, #15
900079ba:	ee1f 0a90 	vmov	r0, s31
        rect.x = x;
900079be:	f8c4 5d8c 	str.w	r5, [r4, #3468]	; 0xd8c
900079c2:	f00d fa77 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
900079c6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
900079ca:	4a43      	ldr	r2, [pc, #268]	; (90007ad8 <_ZN18MainScreenViewBaseC1Ev+0xc34>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
900079cc:	f604 50b8 	addw	r0, r4, #3512	; 0xdb8
900079d0:	f8c3 49dc 	str.w	r4, [r3, #2524]	; 0x9dc
900079d4:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
900079d8:	f8c3 29d8 	str.w	r2, [r3, #2520]	; 0x9d8
900079dc:	4a3f      	ldr	r2, [pc, #252]	; (90007adc <_ZN18MainScreenViewBaseC1Ev+0xc38>)
900079de:	f8c3 59e4 	str.w	r5, [r3, #2532]	; 0x9e4
900079e2:	f8c3 29e0 	str.w	r2, [r3, #2528]	; 0x9e0
900079e6:	f011 fd01 	bl	900193ec <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
900079ea:	4e3d      	ldr	r6, [pc, #244]	; (90007ae0 <_ZN18MainScreenViewBaseC1Ev+0xc3c>)
900079ec:	1d22      	adds	r2, r4, #4
        color = newColor;
900079ee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
900079f2:	f104 0140 	add.w	r1, r4, #64	; 0x40
900079f6:	64a6      	str	r6, [r4, #72]	; 0x48
900079f8:	4610      	mov	r0, r2
900079fa:	66a3      	str	r3, [r4, #104]	; 0x68
900079fc:	6465      	str	r5, [r4, #68]	; 0x44
900079fe:	ee0f 2a10 	vmov	s30, r2
90007a02:	f00d fa57 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    GaugesContainer.setSwipeCutoff(50);
90007a06:	ee18 0a10 	vmov	r0, s16
90007a0a:	2132      	movs	r1, #50	; 0x32
90007a0c:	6725      	str	r5, [r4, #112]	; 0x70
90007a0e:	f00d fcda 	bl	900153c6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    GaugesContainer.setEndSwipeElasticWidth(50);
90007a12:	ee18 0a10 	vmov	r0, s16
90007a16:	2132      	movs	r1, #50	; 0x32
    TanksGaugeScreen.add(TanksGaugeScreenBG);
90007a18:	eeb0 8a68 	vmov.f32	s16, s17
    GaugesContainer.setEndSwipeElasticWidth(50);
90007a1c:	f00d fd64 	bl	900154e8 <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
    TanksGaugeScreenBG.setBitmap(touchgfx::Bitmap(BITMAP_TANKGAUGESTANKGAUGESPAGE_ID));
90007a20:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007a24:	2316      	movs	r3, #22
90007a26:	ee1a 0a90 	vmov	r0, s21
90007a2a:	4661      	mov	r1, ip
        rect.width = width;
90007a2c:	f8c4 6168 	str.w	r6, [r4, #360]	; 0x168
        rect.x = x;
90007a30:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
        boundingArea = calculateBoundingArea();
90007a34:	ae28      	add	r6, sp, #160	; 0xa0
90007a36:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
90007a3a:	f010 fde6 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    TanksGaugeScreen.add(TanksGaugeScreenBG);
90007a3e:	ee1a 1a90 	vmov	r1, s21
90007a42:	ee18 0a90 	vmov	r0, s17
90007a46:	f00d fa35 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Tank2Gauge.setBackground(touchgfx::Bitmap(BITMAP_GAUGEBACKGROUND_ID));
90007a4a:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007a4e:	4640      	mov	r0, r8
90007a50:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
90007a54:	4661      	mov	r1, ip
90007a56:	f00d f9c0 	bl	90014dda <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
90007a5a:	4a22      	ldr	r2, [pc, #136]	; (90007ae4 <_ZN18MainScreenViewBaseC1Ev+0xc40>)
        setX(x);
90007a5c:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        setWidth(width);
90007a60:	4640      	mov	r0, r8
90007a62:	2178      	movs	r1, #120	; 0x78
90007a64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
        rect.x = x;
90007a66:	f8c4 21bc 	str.w	r2, [r4, #444]	; 0x1bc
        setWidth(width);
90007a6a:	4798      	blx	r3
        setHeight(height);
90007a6c:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
90007a70:	4640      	mov	r0, r8
90007a72:	2178      	movs	r1, #120	; 0x78
90007a74:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90007a76:	4798      	blx	r3
    Tank2Gauge.setCenter(60, 60);
90007a78:	223c      	movs	r2, #60	; 0x3c
90007a7a:	4640      	mov	r0, r8
90007a7c:	4611      	mov	r1, r2
90007a7e:	f010 fd2a 	bl	900184d6 <_ZN8touchgfx5Gauge9setCenterEii>
    Tank2Gauge.setStartEndAngle(-97.4f, 97.4f);
90007a82:	4640      	mov	r0, r8
90007a84:	2261      	movs	r2, #97	; 0x61
90007a86:	f06f 0160 	mvn.w	r1, #96	; 0x60
90007a8a:	f010 fda9 	bl	900185e0 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    Tank2Gauge.setRange(0, 300);
90007a8e:	462b      	mov	r3, r5
90007a90:	f44f 7296 	mov.w	r2, #300	; 0x12c
90007a94:	4629      	mov	r1, r5
90007a96:	4640      	mov	r0, r8
90007a98:	9500      	str	r5, [sp, #0]
90007a9a:	f00d f857 	bl	90014b4c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    Tank2Gauge.setValue(50);
90007a9e:	4640      	mov	r0, r8
90007aa0:	2132      	movs	r1, #50	; 0x32
90007aa2:	f010 fd47 	bl	90018534 <_ZN8touchgfx5Gauge8setValueEi>
    Tank2Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
90007aa6:	2321      	movs	r3, #33	; 0x21
90007aa8:	2205      	movs	r2, #5
90007aaa:	4640      	mov	r0, r8
90007aac:	2101      	movs	r1, #1
90007aae:	f010 fcfd 	bl	900184ac <_ZN8touchgfx5Gauge9setNeedleEtss>
    Tank2Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
90007ab2:	4640      	mov	r0, r8
90007ab4:	2101      	movs	r1, #1
90007ab6:	f010 fc9b 	bl	900183f0 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    Tank2Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
90007aba:	4640      	mov	r0, r8
90007abc:	2101      	movs	r1, #1
90007abe:	f010 fc9a 	bl	900183f6 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    TanksGaugeScreen.add(Tank2Gauge);
90007ac2:	4641      	mov	r1, r8
90007ac4:	e010      	b.n	90007ae8 <_ZN18MainScreenViewBaseC1Ev+0xc44>
90007ac6:	bf00      	nop
90007ac8:	9002ebc4 	.word	0x9002ebc4
90007acc:	90030a7c 	.word	0x90030a7c
90007ad0:	90030818 	.word	0x90030818
90007ad4:	9002ecb0 	.word	0x9002ecb0
90007ad8:	9002f728 	.word	0x9002f728
90007adc:	90006e71 	.word	0x90006e71
90007ae0:	011001e0 	.word	0x011001e0
90007ae4:	004c0104 	.word	0x004c0104
90007ae8:	ee18 0a90 	vmov	r0, s17
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
90007aec:	f604 4834 	addw	r8, r4, #3124	; 0xc34
    TanksGaugeScreen.add(Tank2Gauge);
90007af0:	f00d f9e0 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Tank1Gauge.setBackground(touchgfx::Bitmap(BITMAP_GAUGEBACKGROUND_ID));
90007af4:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007af8:	4638      	mov	r0, r7
90007afa:	f8ad 90b0 	strh.w	r9, [sp, #176]	; 0xb0
90007afe:	4661      	mov	r1, ip
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
90007b00:	f604 39ec 	addw	r9, r4, #3052	; 0xbec
    Tank1Gauge.setBackground(touchgfx::Bitmap(BITMAP_GAUGEBACKGROUND_ID));
90007b04:	f00d f969 	bl	90014dda <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        rect.x = x;
90007b08:	4aee      	ldr	r2, [pc, #952]	; (90007ec4 <_ZN18MainScreenViewBaseC1Ev+0x1020>)
        setX(x);
90007b0a:	f8d4 3358 	ldr.w	r3, [r4, #856]	; 0x358
        setWidth(width);
90007b0e:	4638      	mov	r0, r7
90007b10:	2178      	movs	r1, #120	; 0x78
90007b12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
        rect.x = x;
90007b14:	f8c4 235c 	str.w	r2, [r4, #860]	; 0x35c
        setWidth(width);
90007b18:	4798      	blx	r3
        setHeight(height);
90007b1a:	f8d4 3358 	ldr.w	r3, [r4, #856]	; 0x358
90007b1e:	4638      	mov	r0, r7
90007b20:	2178      	movs	r1, #120	; 0x78
90007b22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90007b24:	4798      	blx	r3
    Tank1Gauge.setCenter(60, 60);
90007b26:	223c      	movs	r2, #60	; 0x3c
90007b28:	4638      	mov	r0, r7
90007b2a:	4611      	mov	r1, r2
90007b2c:	f010 fcd3 	bl	900184d6 <_ZN8touchgfx5Gauge9setCenterEii>
    Tank1Gauge.setStartEndAngle(-97.4f, 97.4f);
90007b30:	4638      	mov	r0, r7
90007b32:	2261      	movs	r2, #97	; 0x61
90007b34:	f06f 0160 	mvn.w	r1, #96	; 0x60
90007b38:	f010 fd52 	bl	900185e0 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    Tank1Gauge.setRange(0, 226);
90007b3c:	462b      	mov	r3, r5
90007b3e:	22e2      	movs	r2, #226	; 0xe2
90007b40:	4629      	mov	r1, r5
90007b42:	4638      	mov	r0, r7
90007b44:	9500      	str	r5, [sp, #0]
90007b46:	f00d f801 	bl	90014b4c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    Tank1Gauge.setValue(100);
90007b4a:	4638      	mov	r0, r7
90007b4c:	2164      	movs	r1, #100	; 0x64
90007b4e:	f010 fcf1 	bl	90018534 <_ZN8touchgfx5Gauge8setValueEi>
    Tank1Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
90007b52:	2205      	movs	r2, #5
90007b54:	2321      	movs	r3, #33	; 0x21
90007b56:	4638      	mov	r0, r7
90007b58:	2101      	movs	r1, #1
90007b5a:	f010 fca7 	bl	900184ac <_ZN8touchgfx5Gauge9setNeedleEtss>
    Tank1Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
90007b5e:	4638      	mov	r0, r7
90007b60:	2101      	movs	r1, #1
90007b62:	f010 fc45 	bl	900183f0 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    Tank1Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
90007b66:	4638      	mov	r0, r7
90007b68:	2101      	movs	r1, #1
90007b6a:	f010 fc44 	bl	900183f6 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    TanksGaugeScreen.add(Tank1Gauge);
90007b6e:	4639      	mov	r1, r7
90007b70:	ee18 0a90 	vmov	r0, s17
90007b74:	f00d f99e 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidth(width);
90007b78:	9f08      	ldr	r7, [sp, #32]
        rect.x = x;
90007b7a:	4bd3      	ldr	r3, [pc, #844]	; (90007ec8 <_ZN18MainScreenViewBaseC1Ev+0x1024>)
        setWidth(width);
90007b7c:	213d      	movs	r1, #61	; 0x3d
90007b7e:	4638      	mov	r0, r7
90007b80:	ee0a 7a90 	vmov	s21, r7
        rect.x = x;
90007b84:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
        setWidth(width);
90007b88:	f00c feaf 	bl	900148ea <_ZN8touchgfx8TextArea8setWidthEs>
        setHeight(height);
90007b8c:	4638      	mov	r0, r7
90007b8e:	2119      	movs	r1, #25
90007b90:	f00c febd 	bl	9001490e <_ZN8touchgfx8TextArea9setHeightEs>
        color = newColor;
90007b94:	4acd      	ldr	r2, [pc, #820]	; (90007ecc <_ZN18MainScreenViewBaseC1Ev+0x1028>)
        boundingArea = calculateBoundingArea();
90007b96:	4639      	mov	r1, r7
90007b98:	4630      	mov	r0, r6
        color = newColor;
90007b9a:	f8c4 2528 	str.w	r2, [r4, #1320]	; 0x528
        linespace = space;
90007b9e:	f8a4 552c 	strh.w	r5, [r4, #1324]	; 0x52c
        boundingArea = calculateBoundingArea();
90007ba2:	f00f fedd 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        ImageButtonStyle::setWidthHeight(down);
90007ba6:	f604 0ef2 	addw	lr, r4, #2290	; 0x8f2
90007baa:	4bc9      	ldr	r3, [pc, #804]	; (90007ed0 <_ZN18MainScreenViewBaseC1Ev+0x102c>)
90007bac:	f04f 0c03 	mov.w	ip, #3
90007bb0:	f8cd e04c 	str.w	lr, [sp, #76]	; 0x4c
    TanksGaugeScrToHomeScr_Btn.setAction(flexButtonCallback);
90007bb4:	f642 1ed8 	movw	lr, #10712	; 0x29d8
90007bb8:	932c      	str	r3, [sp, #176]	; 0xb0
90007bba:	f107 033c 	add.w	r3, r7, #60	; 0x3c
90007bbe:	4677      	mov	r7, lr
90007bc0:	f504 6e0f 	add.w	lr, r4, #2288	; 0x8f0
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
90007bc4:	f604 123c 	addw	r2, r4, #2364	; 0x93c
90007bc8:	f8ad c0b4 	strh.w	ip, [sp, #180]	; 0xb4
90007bcc:	f8cd e07c 	str.w	lr, [sp, #124]	; 0x7c
90007bd0:	f604 0ef4 	addw	lr, r4, #2292	; 0x8f4
    TanksGaugeScrToHomeScr_Btn.setAction(flexButtonCallback);
90007bd4:	19e7      	adds	r7, r4, r7
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
90007bd6:	920f      	str	r2, [sp, #60]	; 0x3c
90007bd8:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
        boundingArea = calculateBoundingArea();
90007bdc:	f504 6e13 	add.w	lr, r4, #2352	; 0x930
    TanksGaugeScrToHomeScr_Btn.setAction(flexButtonCallback);
90007be0:	9708      	str	r7, [sp, #32]
90007be2:	f8cd e088 	str.w	lr, [sp, #136]	; 0x88
90007be6:	f604 1ef6 	addw	lr, r4, #2550	; 0x9f6
90007bea:	f8cd e068 	str.w	lr, [sp, #104]	; 0x68
90007bee:	f604 1ef4 	addw	lr, r4, #2548	; 0x9f4
90007bf2:	f8cd e074 	str.w	lr, [sp, #116]	; 0x74
90007bf6:	f604 2e5a 	addw	lr, r4, #2650	; 0xa5a
90007bfa:	f8cd e060 	str.w	lr, [sp, #96]	; 0x60
90007bfe:	f604 2e58 	addw	lr, r4, #2648	; 0xa58
90007c02:	f8cd e070 	str.w	lr, [sp, #112]	; 0x70
90007c06:	f604 2ebe 	addw	lr, r4, #2750	; 0xabe
90007c0a:	f8cd e05c 	str.w	lr, [sp, #92]	; 0x5c
90007c0e:	f604 2ebc 	addw	lr, r4, #2748	; 0xabc
90007c12:	f8cd e084 	str.w	lr, [sp, #132]	; 0x84
90007c16:	f604 3e22 	addw	lr, r4, #2850	; 0xb22
90007c1a:	f8cd e058 	str.w	lr, [sp, #88]	; 0x58
90007c1e:	f504 6e32 	add.w	lr, r4, #2848	; 0xb20
90007c22:	f8cd e080 	str.w	lr, [sp, #128]	; 0x80
90007c26:	f604 3e86 	addw	lr, r4, #2950	; 0xb86
90007c2a:	f8cd e054 	str.w	lr, [sp, #84]	; 0x54
90007c2e:	f604 3e84 	addw	lr, r4, #2948	; 0xb84
90007c32:	f8cd e078 	str.w	lr, [sp, #120]	; 0x78
90007c36:	f604 3eea 	addw	lr, r4, #3050	; 0xbea
90007c3a:	f8cd e050 	str.w	lr, [sp, #80]	; 0x50
90007c3e:	f604 3ee8 	addw	lr, r4, #3048	; 0xbe8
90007c42:	f8cd e064 	str.w	lr, [sp, #100]	; 0x64
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
90007c46:	f604 4e7c 	addw	lr, r4, #3196	; 0xc7c
90007c4a:	4671      	mov	r1, lr
90007c4c:	f604 4e28 	addw	lr, r4, #3112	; 0xc28
90007c50:	f8cd e08c 	str.w	lr, [sp, #140]	; 0x8c
90007c54:	f604 4ec4 	addw	lr, r4, #3268	; 0xcc4
90007c58:	9110      	str	r1, [sp, #64]	; 0x40
90007c5a:	4677      	mov	r7, lr
90007c5c:	f504 6e47 	add.w	lr, r4, #3184	; 0xc70
90007c60:	f8cd e090 	str.w	lr, [sp, #144]	; 0x90
90007c64:	f101 0e3c 	add.w	lr, r1, #60	; 0x3c
90007c68:	9711      	str	r7, [sp, #68]	; 0x44
90007c6a:	f8cd e094 	str.w	lr, [sp, #148]	; 0x94
90007c6e:	f107 0e3c 	add.w	lr, r7, #60	; 0x3c
90007c72:	f8cd e098 	str.w	lr, [sp, #152]	; 0x98
90007c76:	f604 5eb6 	addw	lr, r4, #3510	; 0xdb6
90007c7a:	f8cd e06c 	str.w	lr, [sp, #108]	; 0x6c
90007c7e:	f604 5eb4 	addw	lr, r4, #3508	; 0xdb4
90007c82:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
90007c86:	f604 5e48 	addw	lr, r4, #3400	; 0xd48
        boundingArea = calculateBoundingArea();
90007c8a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90007c8e:	f8cd e09c 	str.w	lr, [sp, #156]	; 0x9c
    Tank1CapacityGaugeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D72K));
90007c92:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
        boundingArea = calculateBoundingArea();
90007c96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90007c9a:	4671      	mov	r1, lr
90007c9c:	ee1a 0a90 	vmov	r0, s21
90007ca0:	f010 f8f8 	bl	90017e94 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    TanksGaugeScreen.add(Tank1CapacityGaugeText);
90007ca4:	ee1a 1a90 	vmov	r1, s21
90007ca8:	ee18 0a90 	vmov	r0, s17
90007cac:	f00d f902 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidth(width);
90007cb0:	9f09      	ldr	r7, [sp, #36]	; 0x24
        rect.x = x;
90007cb2:	4b88      	ldr	r3, [pc, #544]	; (90007ed4 <_ZN18MainScreenViewBaseC1Ev+0x1030>)
        setWidth(width);
90007cb4:	214a      	movs	r1, #74	; 0x4a
90007cb6:	4638      	mov	r0, r7
        rect.x = x;
90007cb8:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        setWidth(width);
90007cbc:	f00c fe15 	bl	900148ea <_ZN8touchgfx8TextArea8setWidthEs>
        setHeight(height);
90007cc0:	4638      	mov	r0, r7
90007cc2:	2119      	movs	r1, #25
90007cc4:	f00c fe23 	bl	9001490e <_ZN8touchgfx8TextArea9setHeightEs>
        color = newColor;
90007cc8:	4a80      	ldr	r2, [pc, #512]	; (90007ecc <_ZN18MainScreenViewBaseC1Ev+0x1028>)
        boundingArea = calculateBoundingArea();
90007cca:	4639      	mov	r1, r7
90007ccc:	4630      	mov	r0, r6
        color = newColor;
90007cce:	f8c4 2570 	str.w	r2, [r4, #1392]	; 0x570
        linespace = space;
90007cd2:	f8a4 5574 	strh.w	r5, [r4, #1396]	; 0x574
        boundingArea = calculateBoundingArea();
90007cd6:	f00f fe43 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007cda:	4b7d      	ldr	r3, [pc, #500]	; (90007ed0 <_ZN18MainScreenViewBaseC1Ev+0x102c>)
90007cdc:	f04f 0e02 	mov.w	lr, #2
    Tank1CapacityBarText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RO5M));
90007ce0:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007ce4:	932c      	str	r3, [sp, #176]	; 0xb0
90007ce6:	463b      	mov	r3, r7
90007ce8:	f8ad e0b4 	strh.w	lr, [sp, #180]	; 0xb4
90007cec:	333c      	adds	r3, #60	; 0x3c
90007cee:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90007cf2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90007cf6:	4661      	mov	r1, ip
90007cf8:	4638      	mov	r0, r7
90007cfa:	f010 f8cb 	bl	90017e94 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    TanksGaugeScreen.add(Tank1CapacityBarText);
90007cfe:	4639      	mov	r1, r7
90007d00:	ee18 0a90 	vmov	r0, s17
90007d04:	f00d f8d6 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidth(width);
90007d08:	9f0a      	ldr	r7, [sp, #40]	; 0x28
        rect.x = x;
90007d0a:	4b73      	ldr	r3, [pc, #460]	; (90007ed8 <_ZN18MainScreenViewBaseC1Ev+0x1034>)
        setWidth(width);
90007d0c:	214a      	movs	r1, #74	; 0x4a
90007d0e:	4638      	mov	r0, r7
        rect.x = x;
90007d10:	f8c4 358c 	str.w	r3, [r4, #1420]	; 0x58c
        setWidth(width);
90007d14:	f00c fde9 	bl	900148ea <_ZN8touchgfx8TextArea8setWidthEs>
        setHeight(height);
90007d18:	4638      	mov	r0, r7
90007d1a:	2119      	movs	r1, #25
90007d1c:	f00c fdf7 	bl	9001490e <_ZN8touchgfx8TextArea9setHeightEs>
        color = newColor;
90007d20:	4a6a      	ldr	r2, [pc, #424]	; (90007ecc <_ZN18MainScreenViewBaseC1Ev+0x1028>)
        boundingArea = calculateBoundingArea();
90007d22:	4639      	mov	r1, r7
90007d24:	4630      	mov	r0, r6
        color = newColor;
90007d26:	f8c4 25b8 	str.w	r2, [r4, #1464]	; 0x5b8
        linespace = space;
90007d2a:	f8a4 55bc 	strh.w	r5, [r4, #1468]	; 0x5bc
        boundingArea = calculateBoundingArea();
90007d2e:	f00f fe17 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007d32:	4b67      	ldr	r3, [pc, #412]	; (90007ed0 <_ZN18MainScreenViewBaseC1Ev+0x102c>)
90007d34:	2201      	movs	r2, #1
    Tank2CapacityBarText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E710));
90007d36:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007d3a:	932c      	str	r3, [sp, #176]	; 0xb0
90007d3c:	463b      	mov	r3, r7
90007d3e:	f8ad 20b4 	strh.w	r2, [sp, #180]	; 0xb4
90007d42:	333c      	adds	r3, #60	; 0x3c
90007d44:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90007d48:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90007d4c:	4661      	mov	r1, ip
90007d4e:	4638      	mov	r0, r7
90007d50:	f010 f8a0 	bl	90017e94 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    TanksGaugeScreen.add(Tank2CapacityBarText);
90007d54:	4639      	mov	r1, r7
90007d56:	ee18 0a90 	vmov	r0, s17
90007d5a:	f00d f8ab 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Tank1LineProgress.setProgressIndicatorPosition(0, 0, 18, 100);
90007d5e:	eddd 8a0b 	vldr	s17, [sp, #44]	; 0x2c
90007d62:	f04f 0c64 	mov.w	ip, #100	; 0x64
        rect.x = x;
90007d66:	4b5d      	ldr	r3, [pc, #372]	; (90007edc <_ZN18MainScreenViewBaseC1Ev+0x1038>)
90007d68:	462a      	mov	r2, r5
90007d6a:	4629      	mov	r1, r5
90007d6c:	f8cd c000 	str.w	ip, [sp]
90007d70:	ee18 0a90 	vmov	r0, s17
90007d74:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
90007d78:	2312      	movs	r3, #18
90007d7a:	f00c fe9c 	bl	90014ab6 <_ZN8touchgfx12LineProgress28setProgressIndicatorPositionEssss>
    Tank1LineProgress.setRange(0, 226);
90007d7e:	462b      	mov	r3, r5
90007d80:	22e2      	movs	r2, #226	; 0xe2
90007d82:	4629      	mov	r1, r5
90007d84:	ee18 0a90 	vmov	r0, s17
90007d88:	9500      	str	r5, [sp, #0]
90007d8a:	f00c fedf 	bl	90014b4c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    Tank1LineProgress.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_LINEPROGRESS_BACKGROUNDS_IMAGE_PLAIN_THICK_TINY_90_ID));
90007d8e:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007d92:	f04f 0e02 	mov.w	lr, #2
90007d96:	ee18 0a90 	vmov	r0, s17
90007d9a:	4661      	mov	r1, ip
90007d9c:	f8ad e0b0 	strh.w	lr, [sp, #176]	; 0xb0
90007da0:	f00d f81b 	bl	90014dda <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
90007da4:	f04f 0c03 	mov.w	ip, #3
    Tank1LineProgressPainter.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THICK_TINY_DARK_90_ID));
90007da8:	eddd aa0c 	vldr	s21, [sp, #48]	; 0x30
90007dac:	4667      	mov	r7, ip
90007dae:	f8ad c0b0 	strh.w	ip, [sp, #176]	; 0xb0
90007db2:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007db6:	ee1a 0a90 	vmov	r0, s21
90007dba:	4661      	mov	r1, ip
90007dbc:	f00e ffa0 	bl	90016d00 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>
    Tank1LineProgress.setPainter(Tank1LineProgressPainter);
90007dc0:	ee1a 1a90 	vmov	r1, s21
90007dc4:	ee18 0a90 	vmov	r0, s17
90007dc8:	f00c fde7 	bl	9001499a <_ZN8touchgfx12LineProgress10setPainterERNS_15AbstractPainterE>
    Tank1LineProgress.setStart(9, 100);
90007dcc:	ee18 0a90 	vmov	r0, s17
90007dd0:	2264      	movs	r2, #100	; 0x64
90007dd2:	2109      	movs	r1, #9
90007dd4:	f00c fe0c 	bl	900149f0 <_ZN8touchgfx12LineProgress8setStartEii>
    Tank1LineProgress.setEnd(9, 0);
90007dd8:	462a      	mov	r2, r5
90007dda:	ee18 0a90 	vmov	r0, s17
90007dde:	2109      	movs	r1, #9
90007de0:	f00c fdeb 	bl	900149ba <_ZN8touchgfx12LineProgress6setEndEii>
    Tank1LineProgress.setLineWidth(18);
90007de4:	ee18 0a90 	vmov	r0, s17
90007de8:	2112      	movs	r1, #18
90007dea:	f00c fe08 	bl	900149fe <_ZN8touchgfx12LineProgress12setLineWidthEi>
    Tank1LineProgress.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
90007dee:	4629      	mov	r1, r5
90007df0:	ee18 0a90 	vmov	r0, s17
90007df4:	f00c fe0e 	bl	90014a14 <_ZN8touchgfx12LineProgress18setLineEndingStyleENS_4Line17LINE_ENDING_STYLEE>
    Tank1LineProgress.setValue(60);
90007df8:	ee18 0a90 	vmov	r0, s17
90007dfc:	213c      	movs	r1, #60	; 0x3c
90007dfe:	f00c fe1f 	bl	90014a40 <_ZN8touchgfx12LineProgress8setValueEi>
    TanksGaugeScreen.add(Tank1LineProgress);
90007e02:	ee18 1a90 	vmov	r1, s17
90007e06:	ee18 0a10 	vmov	r0, s16
90007e0a:	f00d f853 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Tank2LineProgress.setProgressIndicatorPosition(0, 0, 18, 100);
90007e0e:	f04f 0c64 	mov.w	ip, #100	; 0x64
90007e12:	4b33      	ldr	r3, [pc, #204]	; (90007ee0 <_ZN18MainScreenViewBaseC1Ev+0x103c>)
90007e14:	462a      	mov	r2, r5
90007e16:	f8cd c000 	str.w	ip, [sp]
90007e1a:	4629      	mov	r1, r5
90007e1c:	4650      	mov	r0, sl
90007e1e:	f8c4 3734 	str.w	r3, [r4, #1844]	; 0x734
90007e22:	2312      	movs	r3, #18
90007e24:	f00c fe47 	bl	90014ab6 <_ZN8touchgfx12LineProgress28setProgressIndicatorPositionEssss>
    Tank2LineProgress.setRange(0, 100);
90007e28:	462b      	mov	r3, r5
90007e2a:	2264      	movs	r2, #100	; 0x64
90007e2c:	4629      	mov	r1, r5
90007e2e:	4650      	mov	r0, sl
90007e30:	9500      	str	r5, [sp, #0]
90007e32:	f00c fe8b 	bl	90014b4c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    Tank2LineProgress.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_LINEPROGRESS_BACKGROUNDS_IMAGE_PLAIN_THICK_TINY_90_ID));
90007e36:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007e3a:	f04f 0e02 	mov.w	lr, #2
90007e3e:	4650      	mov	r0, sl
90007e40:	4661      	mov	r1, ip
90007e42:	f8ad e0b0 	strh.w	lr, [sp, #176]	; 0xb0
90007e46:	f00c ffc8 	bl	90014dda <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    Tank2LineProgressPainter.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THICK_TINY_DARK_90_ID));
90007e4a:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007e4e:	eddd aa0d 	vldr	s21, [sp, #52]	; 0x34
90007e52:	f8ad 70b0 	strh.w	r7, [sp, #176]	; 0xb0
90007e56:	4661      	mov	r1, ip
90007e58:	ee1a 0a90 	vmov	r0, s21
90007e5c:	f00e ff50 	bl	90016d00 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>
    Tank2LineProgress.setPainter(Tank2LineProgressPainter);
90007e60:	ee1a 1a90 	vmov	r1, s21
90007e64:	4650      	mov	r0, sl
90007e66:	f00c fd98 	bl	9001499a <_ZN8touchgfx12LineProgress10setPainterERNS_15AbstractPainterE>
    Tank2LineProgress.setStart(9, 100);
90007e6a:	4650      	mov	r0, sl
90007e6c:	2264      	movs	r2, #100	; 0x64
90007e6e:	2109      	movs	r1, #9
90007e70:	f00c fdbe 	bl	900149f0 <_ZN8touchgfx12LineProgress8setStartEii>
    Tank2LineProgress.setEnd(9, 0);
90007e74:	462a      	mov	r2, r5
90007e76:	4650      	mov	r0, sl
90007e78:	2109      	movs	r1, #9
90007e7a:	f00c fd9e 	bl	900149ba <_ZN8touchgfx12LineProgress6setEndEii>
    Tank2LineProgress.setLineWidth(18);
90007e7e:	4650      	mov	r0, sl
90007e80:	2112      	movs	r1, #18
90007e82:	f00c fdbc 	bl	900149fe <_ZN8touchgfx12LineProgress12setLineWidthEi>
    Tank2LineProgress.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
90007e86:	4629      	mov	r1, r5
90007e88:	4650      	mov	r0, sl
90007e8a:	f00c fdc3 	bl	90014a14 <_ZN8touchgfx12LineProgress18setLineEndingStyleENS_4Line17LINE_ENDING_STYLEE>
    Tank2LineProgress.setValue(60);
90007e8e:	4650      	mov	r0, sl
90007e90:	213c      	movs	r1, #60	; 0x3c
90007e92:	f00c fdd5 	bl	90014a40 <_ZN8touchgfx12LineProgress8setValueEi>
    TanksGaugeScreen.add(Tank2LineProgress);
90007e96:	4651      	mov	r1, sl
90007e98:	ee18 0a10 	vmov	r0, s16
90007e9c:	f00d f80a 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
90007ea0:	eddd aa13 	vldr	s21, [sp, #76]	; 0x4c
        up = bmpReleased;
90007ea4:	4b0f      	ldr	r3, [pc, #60]	; (90007ee4 <_ZN18MainScreenViewBaseC1Ev+0x1040>)
90007ea6:	ee1a 0a90 	vmov	r0, s21
90007eaa:	f8c4 38f0 	str.w	r3, [r4, #2288]	; 0x8f0
90007eae:	f015 fe0f 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90007eb2:	4682      	mov	sl, r0
90007eb4:	ee1a 0a90 	vmov	r0, s21
90007eb8:	f015 fe3e 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        buttonImage.setBitmap(T::getPressed() ? down : up);
90007ebc:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90007ebe:	f894 18bc 	ldrb.w	r1, [r4, #2236]	; 0x8bc
90007ec2:	e011      	b.n	90007ee8 <_ZN18MainScreenViewBaseC1Ev+0x1044>
90007ec4:	004c0011 	.word	0x004c0011
90007ec8:	0091002e 	.word	0x0091002e
90007ecc:	ff395779 	.word	0xff395779
90007ed0:	9002ecb0 	.word	0x9002ecb0
90007ed4:	004c0095 	.word	0x004c0095
90007ed8:	004c0180 	.word	0x004c0180
90007edc:	006800ac 	.word	0x006800ac
90007ee0:	0068019c 	.word	0x0068019c
90007ee4:	00070008 	.word	0x00070008
90007ee8:	ee1a 3a90 	vmov	r3, s21
        rect.width = width;
90007eec:	f8a4 a898 	strh.w	sl, [r4, #2200]	; 0x898
90007ef0:	42a9      	cmp	r1, r5
90007ef2:	bf08      	it	eq
90007ef4:	4613      	moveq	r3, r2
        rect.height = height;
90007ef6:	f8a4 089a 	strh.w	r0, [r4, #2202]	; 0x89a
90007efa:	ee1e 0a90 	vmov	r0, s29
90007efe:	4619      	mov	r1, r3
90007f00:	f010 fb83 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        action = &callback;
90007f04:	9b08      	ldr	r3, [sp, #32]
    TanksGaugeScreen.add(TanksGaugeScrToHomeScr_Btn);
90007f06:	ee19 1a90 	vmov	r1, s19
90007f0a:	ee18 0a10 	vmov	r0, s16
90007f0e:	f8c4 38c0 	str.w	r3, [r4, #2240]	; 0x8c0
        rect.x = x;
90007f12:	4be3      	ldr	r3, [pc, #908]	; (900082a0 <_ZN18MainScreenViewBaseC1Ev+0x13fc>)
90007f14:	f8c4 58c8 	str.w	r5, [r4, #2248]	; 0x8c8
90007f18:	f8c4 3894 	str.w	r3, [r4, #2196]	; 0x894
90007f1c:	4be1      	ldr	r3, [pc, #900]	; (900082a4 <_ZN18MainScreenViewBaseC1Ev+0x1400>)
90007f1e:	f8c4 3898 	str.w	r3, [r4, #2200]	; 0x898
90007f22:	f00c ffc7 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007f26:	4be0      	ldr	r3, [pc, #896]	; (900082a8 <_ZN18MainScreenViewBaseC1Ev+0x1404>)
        boundingArea = calculateBoundingArea();
90007f28:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
90007f2c:	4630      	mov	r0, r6
90007f2e:	f8c4 38f8 	str.w	r3, [r4, #2296]	; 0x8f8
        rect.width = width;
90007f32:	233c      	movs	r3, #60	; 0x3c
90007f34:	4651      	mov	r1, sl
90007f36:	f8a4 38fc 	strh.w	r3, [r4, #2300]	; 0x8fc
90007f3a:	f00f fd11 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007f3e:	9f22      	ldr	r7, [sp, #136]	; 0x88
        rect.height = height;
90007f40:	2318      	movs	r3, #24
90007f42:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90007f46:	e887 0007 	stmia.w	r7, {r0, r1, r2}
90007f4a:	f8a4 38fe 	strh.w	r3, [r4, #2302]	; 0x8fe
        boundingArea = calculateBoundingArea();
90007f4e:	4651      	mov	r1, sl
90007f50:	4630      	mov	r0, r6
90007f52:	f00f fd05 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007f56:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90007f5a:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        color = newColor;
90007f5e:	4ad3      	ldr	r2, [pc, #844]	; (900082ac <_ZN18MainScreenViewBaseC1Ev+0x1408>)
        boundingArea = calculateBoundingArea();
90007f60:	4651      	mov	r1, sl
90007f62:	4630      	mov	r0, r6
        linespace = space;
90007f64:	f8a4 5928 	strh.w	r5, [r4, #2344]	; 0x928
        color = newColor;
90007f68:	f8c4 2924 	str.w	r2, [r4, #2340]	; 0x924
        boundingArea = calculateBoundingArea();
90007f6c:	f00f fcf8 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
    Tank2CapacityGaugeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4AN6));
90007f70:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90007f74:	f8ad 50b4 	strh.w	r5, [sp, #180]	; 0xb4
90007f78:	4bcd      	ldr	r3, [pc, #820]	; (900082b0 <_ZN18MainScreenViewBaseC1Ev+0x140c>)
90007f7a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90007f7e:	e887 0007 	stmia.w	r7, {r0, r1, r2}
90007f82:	4661      	mov	r1, ip
90007f84:	4650      	mov	r0, sl
90007f86:	932c      	str	r3, [sp, #176]	; 0xb0
90007f88:	f00f ff84 	bl	90017e94 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    TanksGaugeScreen.add(Tank2CapacityGaugeText);
90007f8c:	4651      	mov	r1, sl
90007f8e:	ee18 0a10 	vmov	r0, s16
90007f92:	f00c ff8f 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    GaugesContainer.add(TanksGaugeScreen);
90007f96:	ee18 1a10 	vmov	r1, s16
90007f9a:	ee19 0a10 	vmov	r0, s18
90007f9e:	f04f 0a17 	mov.w	sl, #23
90007fa2:	f00d fc5b 	bl	9001585c <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    TankSettingBG.setBitmap(touchgfx::Bitmap(BITMAP_TANKSETTINGSTANKSETTINGS_ID));
90007fa6:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
        rect.width = width;
90007faa:	4ac2      	ldr	r2, [pc, #776]	; (900082b4 <_ZN18MainScreenViewBaseC1Ev+0x1410>)
90007fac:	ee1a 0a10 	vmov	r0, s20
90007fb0:	4661      	mov	r1, ip
        rect.x = x;
90007fb2:	f8c4 596c 	str.w	r5, [r4, #2412]	; 0x96c
        rect.width = width;
90007fb6:	f8c4 2944 	str.w	r2, [r4, #2372]	; 0x944
90007fba:	f8ad a0b0 	strh.w	sl, [sp, #176]	; 0xb0
90007fbe:	f010 fb24 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    TanksSettingScren.add(TankSettingBG);
90007fc2:	ed9d 8a0f 	vldr	s16, [sp, #60]	; 0x3c
90007fc6:	ee1a 1a10 	vmov	r1, s20
90007fca:	ee18 0a10 	vmov	r0, s16
90007fce:	f00c ff71 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
90007fd2:	eddd 9a1a 	vldr	s19, [sp, #104]	; 0x68
        up = bmpReleased;
90007fd6:	4bb8      	ldr	r3, [pc, #736]	; (900082b8 <_ZN18MainScreenViewBaseC1Ev+0x1414>)
90007fd8:	ee19 0a90 	vmov	r0, s19
90007fdc:	f8c4 39f4 	str.w	r3, [r4, #2548]	; 0x9f4
90007fe0:	461f      	mov	r7, r3
90007fe2:	f015 fd75 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90007fe6:	4682      	mov	sl, r0
90007fe8:	ee19 0a90 	vmov	r0, s19
90007fec:	f015 fda4 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        buttonImage.setBitmap(T::getPressed() ? down : up);
90007ff0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90007ff2:	f894 19c0 	ldrb.w	r1, [r4, #2496]	; 0x9c0
90007ff6:	ee19 3a90 	vmov	r3, s19
        rect.width = width;
90007ffa:	f8a4 a99c 	strh.w	sl, [r4, #2460]	; 0x99c
90007ffe:	42a9      	cmp	r1, r5
90008000:	bf08      	it	eq
90008002:	4613      	moveq	r3, r2
        rect.height = height;
90008004:	f8a4 099e 	strh.w	r0, [r4, #2462]	; 0x99e
90008008:	ee1e 0a10 	vmov	r0, s28
9000800c:	4619      	mov	r1, r3
9000800e:	f010 fafc 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90008012:	4ba4      	ldr	r3, [pc, #656]	; (900082a4 <_ZN18MainScreenViewBaseC1Ev+0x1400>)
    TanksSettingScren.add(Tank3WaterEdit_Btn);
90008014:	9902      	ldr	r1, [sp, #8]
90008016:	ee18 0a10 	vmov	r0, s16
9000801a:	f8c4 399c 	str.w	r3, [r4, #2460]	; 0x99c
9000801e:	4ba7      	ldr	r3, [pc, #668]	; (900082bc <_ZN18MainScreenViewBaseC1Ev+0x1418>)
90008020:	f8c4 59cc 	str.w	r5, [r4, #2508]	; 0x9cc
90008024:	f8c4 3998 	str.w	r3, [r4, #2456]	; 0x998
90008028:	f00c ff44 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
9000802c:	eddd 9a18 	vldr	s19, [sp, #96]	; 0x60
        up = bmpReleased;
90008030:	4ba3      	ldr	r3, [pc, #652]	; (900082c0 <_ZN18MainScreenViewBaseC1Ev+0x141c>)
90008032:	ee19 0a90 	vmov	r0, s19
90008036:	f8c4 3a58 	str.w	r3, [r4, #2648]	; 0xa58
9000803a:	f015 fd49 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000803e:	4682      	mov	sl, r0
90008040:	ee19 0a90 	vmov	r0, s19
90008044:	f015 fd78 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        buttonImage.setBitmap(T::getPressed() ? down : up);
90008048:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9000804a:	f894 1a24 	ldrb.w	r1, [r4, #2596]	; 0xa24
9000804e:	ee19 3a90 	vmov	r3, s19
        rect.width = width;
90008052:	f8a4 aa00 	strh.w	sl, [r4, #2560]	; 0xa00
90008056:	42a9      	cmp	r1, r5
90008058:	bf08      	it	eq
9000805a:	4613      	moveq	r3, r2
        rect.height = height;
9000805c:	f8a4 0a02 	strh.w	r0, [r4, #2562]	; 0xa02
90008060:	ee1d 0a90 	vmov	r0, s27
90008064:	4619      	mov	r1, r3
90008066:	f010 fad0 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
9000806a:	4b8e      	ldr	r3, [pc, #568]	; (900082a4 <_ZN18MainScreenViewBaseC1Ev+0x1400>)
    TanksSettingScren.add(TanksSettingSave_Btn);
9000806c:	9903      	ldr	r1, [sp, #12]
9000806e:	ee18 0a10 	vmov	r0, s16
90008072:	f8c4 3a00 	str.w	r3, [r4, #2560]	; 0xa00
90008076:	4b93      	ldr	r3, [pc, #588]	; (900082c4 <_ZN18MainScreenViewBaseC1Ev+0x1420>)
90008078:	f8c4 5a30 	str.w	r5, [r4, #2608]	; 0xa30
9000807c:	f8c4 39fc 	str.w	r3, [r4, #2556]	; 0x9fc
90008080:	f00c ff18 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
90008084:	eddd 8a17 	vldr	s17, [sp, #92]	; 0x5c
        up = bmpReleased;
90008088:	f8c4 7abc 	str.w	r7, [r4, #2748]	; 0xabc
9000808c:	ee18 0a90 	vmov	r0, s17
90008090:	f015 fd1e 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90008094:	4682      	mov	sl, r0
90008096:	ee18 0a90 	vmov	r0, s17
9000809a:	f015 fd4d 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        buttonImage.setBitmap(T::getPressed() ? down : up);
9000809e:	9a21      	ldr	r2, [sp, #132]	; 0x84
900080a0:	f894 1a88 	ldrb.w	r1, [r4, #2696]	; 0xa88
900080a4:	ee18 3a90 	vmov	r3, s17
        rect.width = width;
900080a8:	f8a4 aa64 	strh.w	sl, [r4, #2660]	; 0xa64
    TanksSettingScren.add(Tank2FuelEdit_Btn);
900080ac:	eef0 8a48 	vmov.f32	s17, s16
900080b0:	42a9      	cmp	r1, r5
900080b2:	bf08      	it	eq
900080b4:	4613      	moveq	r3, r2
        rect.height = height;
900080b6:	f8a4 0a66 	strh.w	r0, [r4, #2662]	; 0xa66
900080ba:	ee1d 0a10 	vmov	r0, s26
900080be:	4619      	mov	r1, r3
900080c0:	f010 faa3 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
900080c4:	4b77      	ldr	r3, [pc, #476]	; (900082a4 <_ZN18MainScreenViewBaseC1Ev+0x1400>)
900080c6:	9904      	ldr	r1, [sp, #16]
900080c8:	ee18 0a10 	vmov	r0, s16
900080cc:	f8c4 3a64 	str.w	r3, [r4, #2660]	; 0xa64
900080d0:	4b7d      	ldr	r3, [pc, #500]	; (900082c8 <_ZN18MainScreenViewBaseC1Ev+0x1424>)
900080d2:	f8c4 5a94 	str.w	r5, [r4, #2708]	; 0xa94
900080d6:	f8c4 3a60 	str.w	r3, [r4, #2656]	; 0xa60
900080da:	f00c feeb 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
900080de:	ed9d 8a16 	vldr	s16, [sp, #88]	; 0x58
        up = bmpReleased;
900080e2:	f8c4 7b20 	str.w	r7, [r4, #2848]	; 0xb20
900080e6:	ee18 0a10 	vmov	r0, s16
900080ea:	f015 fcf1 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900080ee:	4682      	mov	sl, r0
900080f0:	ee18 0a10 	vmov	r0, s16
900080f4:	f015 fd20 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        buttonImage.setBitmap(T::getPressed() ? down : up);
900080f8:	f894 1aec 	ldrb.w	r1, [r4, #2796]	; 0xaec
900080fc:	9f20      	ldr	r7, [sp, #128]	; 0x80
900080fe:	ee18 3a10 	vmov	r3, s16
        rect.width = width;
90008102:	f8a4 aac8 	strh.w	sl, [r4, #2760]	; 0xac8
90008106:	42a9      	cmp	r1, r5
90008108:	bf08      	it	eq
9000810a:	463b      	moveq	r3, r7
        rect.height = height;
9000810c:	f8a4 0aca 	strh.w	r0, [r4, #2762]	; 0xaca
90008110:	ee1c 0a90 	vmov	r0, s25
    TanksSettingScren.add(Tank1FuelEdit_Btn);
90008114:	ee18 7a90 	vmov	r7, s17
90008118:	4619      	mov	r1, r3
9000811a:	f010 fa76 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
9000811e:	4b61      	ldr	r3, [pc, #388]	; (900082a4 <_ZN18MainScreenViewBaseC1Ev+0x1400>)
90008120:	9905      	ldr	r1, [sp, #20]
90008122:	ee18 0a90 	vmov	r0, s17
90008126:	f8c4 3ac8 	str.w	r3, [r4, #2760]	; 0xac8
9000812a:	4b68      	ldr	r3, [pc, #416]	; (900082cc <_ZN18MainScreenViewBaseC1Ev+0x1428>)
9000812c:	f8c4 5af8 	str.w	r5, [r4, #2808]	; 0xaf8
90008130:	f8c4 3ac4 	str.w	r3, [r4, #2756]	; 0xac4
90008134:	f00c febe 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
90008138:	eddd 8a15 	vldr	s17, [sp, #84]	; 0x54
        up = bmpReleased;
9000813c:	4b64      	ldr	r3, [pc, #400]	; (900082d0 <_ZN18MainScreenViewBaseC1Ev+0x142c>)
9000813e:	ee18 0a90 	vmov	r0, s17
90008142:	f8c4 3b84 	str.w	r3, [r4, #2948]	; 0xb84
90008146:	f015 fcc3 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000814a:	4682      	mov	sl, r0
9000814c:	ee18 0a90 	vmov	r0, s17
90008150:	f015 fcf2 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        buttonImage.setBitmap(T::getPressed() ? down : up);
90008154:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90008156:	f894 1b50 	ldrb.w	r1, [r4, #2896]	; 0xb50
9000815a:	ee18 3a90 	vmov	r3, s17
        rect.width = width;
9000815e:	f8a4 ab2c 	strh.w	sl, [r4, #2860]	; 0xb2c
    TanksSettingScren.add(CapacityDown_Btn);
90008162:	ee08 7a90 	vmov	s17, r7
90008166:	42a9      	cmp	r1, r5
90008168:	bf08      	it	eq
9000816a:	4613      	moveq	r3, r2
        rect.height = height;
9000816c:	f8a4 0b2e 	strh.w	r0, [r4, #2862]	; 0xb2e
90008170:	ee1c 0a10 	vmov	r0, s24
90008174:	4619      	mov	r1, r3
90008176:	f010 fa48 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
9000817a:	f04f 1c20 	mov.w	ip, #2097184	; 0x200020
9000817e:	4b55      	ldr	r3, [pc, #340]	; (900082d4 <_ZN18MainScreenViewBaseC1Ev+0x1430>)
90008180:	4638      	mov	r0, r7
90008182:	f8c4 cb2c 	str.w	ip, [r4, #2860]	; 0xb2c
90008186:	9906      	ldr	r1, [sp, #24]
90008188:	f8c4 3b28 	str.w	r3, [r4, #2856]	; 0xb28
9000818c:	f8c4 5b5c 	str.w	r5, [r4, #2908]	; 0xb5c
90008190:	f00c fe90 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
90008194:	ed9d 8a14 	vldr	s16, [sp, #80]	; 0x50
        up = bmpReleased;
90008198:	4b4f      	ldr	r3, [pc, #316]	; (900082d8 <_ZN18MainScreenViewBaseC1Ev+0x1434>)
9000819a:	ee18 0a10 	vmov	r0, s16
9000819e:	f8c4 3be8 	str.w	r3, [r4, #3048]	; 0xbe8
900081a2:	f015 fc95 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900081a6:	4682      	mov	sl, r0
900081a8:	ee18 0a10 	vmov	r0, s16
900081ac:	f015 fcc4 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        buttonImage.setBitmap(T::getPressed() ? down : up);
900081b0:	f894 1bb4 	ldrb.w	r1, [r4, #2996]	; 0xbb4
900081b4:	9f19      	ldr	r7, [sp, #100]	; 0x64
900081b6:	ee18 3a10 	vmov	r3, s16
        rect.width = width;
900081ba:	f8a4 ab90 	strh.w	sl, [r4, #2960]	; 0xb90
        rect.height = height;
900081be:	f04f 0a17 	mov.w	sl, #23
900081c2:	42a9      	cmp	r1, r5
900081c4:	bf08      	it	eq
900081c6:	463b      	moveq	r3, r7
900081c8:	f8a4 0b92 	strh.w	r0, [r4, #2962]	; 0xb92
900081cc:	ee1b 0a90 	vmov	r0, s23
900081d0:	4619      	mov	r1, r3
900081d2:	f010 fa1a 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
900081d6:	f04f 1c20 	mov.w	ip, #2097184	; 0x200020
900081da:	4b40      	ldr	r3, [pc, #256]	; (900082dc <_ZN18MainScreenViewBaseC1Ev+0x1438>)
    TanksSettingScren.add(CapacityUp_Btn);
900081dc:	ee18 0a90 	vmov	r0, s17
900081e0:	9907      	ldr	r1, [sp, #28]
900081e2:	f8c4 cb90 	str.w	ip, [r4, #2960]	; 0xb90
900081e6:	f8c4 3b8c 	str.w	r3, [r4, #2956]	; 0xb8c
900081ea:	f8c4 5bc0 	str.w	r5, [r4, #3008]	; 0xbc0
900081ee:	f00c fe61 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.width = width;
900081f2:	f04f 0c40 	mov.w	ip, #64	; 0x40
        rect.x = x;
900081f6:	4b3a      	ldr	r3, [pc, #232]	; (900082e0 <_ZN18MainScreenViewBaseC1Ev+0x143c>)
        boundingArea = calculateBoundingArea();
900081f8:	4649      	mov	r1, r9
        rect.width = width;
900081fa:	f8a4 cbf4 	strh.w	ip, [r4, #3060]	; 0xbf4
900081fe:	4630      	mov	r0, r6
        rect.x = x;
90008200:	f8c4 3bf0 	str.w	r3, [r4, #3056]	; 0xbf0
90008204:	f00f fbac 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90008208:	9f23      	ldr	r7, [sp, #140]	; 0x8c
9000820a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
9000820e:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90008212:	4649      	mov	r1, r9
90008214:	4630      	mov	r0, r6
        rect.height = height;
90008216:	f8a4 abf6 	strh.w	sl, [r4, #3062]	; 0xbf6
9000821a:	f00f fba1 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000821e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90008222:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        color = newColor;
90008226:	4a21      	ldr	r2, [pc, #132]	; (900082ac <_ZN18MainScreenViewBaseC1Ev+0x1408>)
        boundingArea = calculateBoundingArea();
90008228:	4649      	mov	r1, r9
9000822a:	4630      	mov	r0, r6
        linespace = space;
9000822c:	f8a4 5c20 	strh.w	r5, [r4, #3104]	; 0xc20
        color = newColor;
90008230:	f8c4 2c1c 	str.w	r2, [r4, #3100]	; 0xc1c
        boundingArea = calculateBoundingArea();
90008234:	f00f fb94 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90008238:	4b1d      	ldr	r3, [pc, #116]	; (900082b0 <_ZN18MainScreenViewBaseC1Ev+0x140c>)
    Tank1FuelText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PPG8));
9000823a:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
9000823e:	932c      	str	r3, [sp, #176]	; 0xb0
90008240:	2308      	movs	r3, #8
90008242:	f8ad 30b4 	strh.w	r3, [sp, #180]	; 0xb4
90008246:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
9000824a:	e887 0007 	stmia.w	r7, {r0, r1, r2}
9000824e:	4671      	mov	r1, lr
90008250:	4648      	mov	r0, r9
90008252:	f00f fe1f 	bl	90017e94 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    TanksSettingScren.add(Tank1FuelText);
90008256:	4649      	mov	r1, r9
90008258:	ee18 0a90 	vmov	r0, s17
9000825c:	f00c fe2a 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.width = width;
90008260:	f04f 0c40 	mov.w	ip, #64	; 0x40
        rect.x = x;
90008264:	4b1f      	ldr	r3, [pc, #124]	; (900082e4 <_ZN18MainScreenViewBaseC1Ev+0x1440>)
        boundingArea = calculateBoundingArea();
90008266:	4641      	mov	r1, r8
        rect.width = width;
90008268:	f8a4 cc3c 	strh.w	ip, [r4, #3132]	; 0xc3c
9000826c:	4630      	mov	r0, r6
        rect.x = x;
9000826e:	f8c4 3c38 	str.w	r3, [r4, #3128]	; 0xc38
90008272:	f00f fb75 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90008276:	9f24      	ldr	r7, [sp, #144]	; 0x90
90008278:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
9000827c:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90008280:	4641      	mov	r1, r8
90008282:	4630      	mov	r0, r6
        rect.height = height;
90008284:	f8a4 ac3e 	strh.w	sl, [r4, #3134]	; 0xc3e
90008288:	f00f fb6a 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000828c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90008290:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        color = newColor;
90008294:	4a05      	ldr	r2, [pc, #20]	; (900082ac <_ZN18MainScreenViewBaseC1Ev+0x1408>)
        boundingArea = calculateBoundingArea();
90008296:	4641      	mov	r1, r8
90008298:	4630      	mov	r0, r6
        linespace = space;
9000829a:	f8a4 5c68 	strh.w	r5, [r4, #3176]	; 0xc68
9000829e:	e023      	b.n	900082e8 <_ZN18MainScreenViewBaseC1Ev+0x1444>
900082a0:	00060199 	.word	0x00060199
900082a4:	00200040 	.word	0x00200040
900082a8:	00910122 	.word	0x00910122
900082ac:	ff395779 	.word	0xff395779
900082b0:	9002ecb0 	.word	0x9002ecb0
900082b4:	011001e0 	.word	0x011001e0
900082b8:	000d000e 	.word	0x000d000e
900082bc:	00750196 	.word	0x00750196
900082c0:	00130014 	.word	0x00130014
900082c4:	00cc0196 	.word	0x00cc0196
900082c8:	00520196 	.word	0x00520196
900082cc:	002e0196 	.word	0x002e0196
900082d0:	000b000c 	.word	0x000b000c
900082d4:	00e4015c 	.word	0x00e4015c
900082d8:	00180019 	.word	0x00180019
900082dc:	00b4015c 	.word	0x00b4015c
900082e0:	00320114 	.word	0x00320114
900082e4:	007a0114 	.word	0x007a0114
        color = newColor;
900082e8:	f8c4 2c64 	str.w	r2, [r4, #3172]	; 0xc64
        boundingArea = calculateBoundingArea();
900082ec:	f00f fb38 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900082f0:	4b87      	ldr	r3, [pc, #540]	; (90008510 <_ZN18MainScreenViewBaseC1Ev+0x166c>)
    Tank3WaterText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HI8H));
900082f2:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
900082f6:	932c      	str	r3, [sp, #176]	; 0xb0
900082f8:	2306      	movs	r3, #6
900082fa:	f8ad 30b4 	strh.w	r3, [sp, #180]	; 0xb4
900082fe:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90008302:	e887 0007 	stmia.w	r7, {r0, r1, r2}
90008306:	4671      	mov	r1, lr
90008308:	4640      	mov	r0, r8
9000830a:	f00f fdc3 	bl	90017e94 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    TanksSettingScren.add(Tank3WaterText);
9000830e:	4641      	mov	r1, r8
90008310:	ee18 0a90 	vmov	r0, s17
90008314:	f00c fdce 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90008318:	4b7e      	ldr	r3, [pc, #504]	; (90008514 <_ZN18MainScreenViewBaseC1Ev+0x1670>)
        boundingArea = calculateBoundingArea();
9000831a:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
9000831e:	4630      	mov	r0, r6
90008320:	f8c4 3c80 	str.w	r3, [r4, #3200]	; 0xc80
        rect.width = width;
90008324:	2339      	movs	r3, #57	; 0x39
90008326:	4641      	mov	r1, r8
90008328:	f8a4 3c84 	strh.w	r3, [r4, #3204]	; 0xc84
9000832c:	f00f fb18 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90008330:	9f25      	ldr	r7, [sp, #148]	; 0x94
90008332:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90008336:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
9000833a:	4641      	mov	r1, r8
9000833c:	4630      	mov	r0, r6
        rect.height = height;
9000833e:	f8a4 ac86 	strh.w	sl, [r4, #3206]	; 0xc86
90008342:	f00f fb0d 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90008346:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
9000834a:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        color = newColor;
9000834e:	4a72      	ldr	r2, [pc, #456]	; (90008518 <_ZN18MainScreenViewBaseC1Ev+0x1674>)
        boundingArea = calculateBoundingArea();
90008350:	4641      	mov	r1, r8
90008352:	4630      	mov	r0, r6
        linespace = space;
90008354:	f8a4 5cb0 	strh.w	r5, [r4, #3248]	; 0xcb0
        color = newColor;
90008358:	f8c4 2cac 	str.w	r2, [r4, #3244]	; 0xcac
        boundingArea = calculateBoundingArea();
9000835c:	f00f fb00 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90008360:	4b6b      	ldr	r3, [pc, #428]	; (90008510 <_ZN18MainScreenViewBaseC1Ev+0x166c>)
    Tank4FuelText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WGA0));
90008362:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
90008366:	932c      	str	r3, [sp, #176]	; 0xb0
90008368:	2305      	movs	r3, #5
9000836a:	f8ad 30b4 	strh.w	r3, [sp, #180]	; 0xb4
9000836e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90008372:	e887 0007 	stmia.w	r7, {r0, r1, r2}
90008376:	4671      	mov	r1, lr
90008378:	4640      	mov	r0, r8
9000837a:	f00f fd8b 	bl	90017e94 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    TanksSettingScren.add(Tank4FuelText);
9000837e:	4641      	mov	r1, r8
90008380:	ee18 0a90 	vmov	r0, s17
90008384:	f00c fd96 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90008388:	4b64      	ldr	r3, [pc, #400]	; (9000851c <_ZN18MainScreenViewBaseC1Ev+0x1678>)
        boundingArea = calculateBoundingArea();
9000838a:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
9000838e:	4630      	mov	r0, r6
90008390:	f8c4 3cc8 	str.w	r3, [r4, #3272]	; 0xcc8
        rect.width = width;
90008394:	236e      	movs	r3, #110	; 0x6e
90008396:	4641      	mov	r1, r8
90008398:	f8a4 3ccc 	strh.w	r3, [r4, #3276]	; 0xccc
9000839c:	f00f fae0 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900083a0:	9f26      	ldr	r7, [sp, #152]	; 0x98
        rect.height = height;
900083a2:	2322      	movs	r3, #34	; 0x22
900083a4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900083a8:	e887 0007 	stmia.w	r7, {r0, r1, r2}
900083ac:	f8a4 3cce 	strh.w	r3, [r4, #3278]	; 0xcce
        boundingArea = calculateBoundingArea();
900083b0:	4641      	mov	r1, r8
900083b2:	4630      	mov	r0, r6
900083b4:	f00f fad4 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900083b8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900083bc:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        color = newColor;
900083c0:	4a55      	ldr	r2, [pc, #340]	; (90008518 <_ZN18MainScreenViewBaseC1Ev+0x1674>)
        boundingArea = calculateBoundingArea();
900083c2:	4641      	mov	r1, r8
900083c4:	4630      	mov	r0, r6
        linespace = space;
900083c6:	f8a4 5cf8 	strh.w	r5, [r4, #3320]	; 0xcf8
        color = newColor;
900083ca:	f8c4 2cf4 	str.w	r2, [r4, #3316]	; 0xcf4
        boundingArea = calculateBoundingArea();
900083ce:	f00f fac7 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900083d2:	4b4f      	ldr	r3, [pc, #316]	; (90008510 <_ZN18MainScreenViewBaseC1Ev+0x166c>)
    CapacityText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TD2N));
900083d4:	f10d 0eb0 	add.w	lr, sp, #176	; 0xb0
900083d8:	932c      	str	r3, [sp, #176]	; 0xb0
900083da:	2304      	movs	r3, #4
900083dc:	f8ad 30b4 	strh.w	r3, [sp, #180]	; 0xb4
900083e0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900083e4:	e887 0007 	stmia.w	r7, {r0, r1, r2}
900083e8:	4671      	mov	r1, lr
900083ea:	4640      	mov	r0, r8
900083ec:	f00f fd52 	bl	90017e94 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    TanksSettingScren.add(CapacityText);
900083f0:	4641      	mov	r1, r8
900083f2:	ee18 0a90 	vmov	r0, s17
900083f6:	f00c fd5d 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.width = width;
900083fa:	f04f 0c40 	mov.w	ip, #64	; 0x40
        rect.x = x;
900083fe:	4b48      	ldr	r3, [pc, #288]	; (90008520 <_ZN18MainScreenViewBaseC1Ev+0x167c>)
        boundingArea = calculateBoundingArea();
90008400:	4659      	mov	r1, fp
        rect.width = width;
90008402:	f8a4 cd14 	strh.w	ip, [r4, #3348]	; 0xd14
90008406:	4630      	mov	r0, r6
        rect.x = x;
90008408:	f8c4 3d10 	str.w	r3, [r4, #3344]	; 0xd10
9000840c:	f00f faa8 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90008410:	9f27      	ldr	r7, [sp, #156]	; 0x9c
        rect.height = height;
90008412:	2319      	movs	r3, #25
90008414:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90008418:	e887 0007 	stmia.w	r7, {r0, r1, r2}
9000841c:	f8a4 3d16 	strh.w	r3, [r4, #3350]	; 0xd16
        boundingArea = calculateBoundingArea();
90008420:	4659      	mov	r1, fp
90008422:	4630      	mov	r0, r6
90008424:	f00f fa9c 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90008428:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
9000842c:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        color = newColor;
90008430:	4a39      	ldr	r2, [pc, #228]	; (90008518 <_ZN18MainScreenViewBaseC1Ev+0x1674>)
        boundingArea = calculateBoundingArea();
90008432:	4659      	mov	r1, fp
90008434:	4630      	mov	r0, r6
        linespace = space;
90008436:	f8a4 5d40 	strh.w	r5, [r4, #3392]	; 0xd40
        color = newColor;
9000843a:	f8c4 2d3c 	str.w	r2, [r4, #3388]	; 0xd3c
        boundingArea = calculateBoundingArea();
9000843e:	f00f fa8f 	bl	90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90008442:	4b33      	ldr	r3, [pc, #204]	; (90008510 <_ZN18MainScreenViewBaseC1Ev+0x166c>)
    Tank2FuelText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RIA3));
90008444:	f10d 0cb0 	add.w	ip, sp, #176	; 0xb0
90008448:	932c      	str	r3, [sp, #176]	; 0xb0
9000844a:	2307      	movs	r3, #7
9000844c:	f8ad 30b4 	strh.w	r3, [sp, #180]	; 0xb4
90008450:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90008454:	e887 0007 	stmia.w	r7, {r0, r1, r2}
90008458:	4661      	mov	r1, ip
9000845a:	4658      	mov	r0, fp
9000845c:	f00f fd1a 	bl	90017e94 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    TanksSettingScren.add(Tank2FuelText);
90008460:	4659      	mov	r1, fp
90008462:	ee18 0a90 	vmov	r0, s17
90008466:	f00c fd25 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        up = bmpReleased;
9000846a:	4a2e      	ldr	r2, [pc, #184]	; (90008524 <_ZN18MainScreenViewBaseC1Ev+0x1680>)
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
9000846c:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
90008470:	f8c4 2db4 	str.w	r2, [r4, #3508]	; 0xdb4
90008474:	4640      	mov	r0, r8
90008476:	f015 fb2b 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9000847a:	4606      	mov	r6, r0
9000847c:	4640      	mov	r0, r8
9000847e:	f015 fb5b 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
        buttonImage.setBitmap(T::getPressed() ? down : up);
90008482:	f894 1d80 	ldrb.w	r1, [r4, #3456]	; 0xd80
90008486:	9f12      	ldr	r7, [sp, #72]	; 0x48
        rect.width = width;
90008488:	f8a4 6d5c 	strh.w	r6, [r4, #3420]	; 0xd5c
9000848c:	4646      	mov	r6, r8
        rect.height = height;
9000848e:	f8a4 0d5e 	strh.w	r0, [r4, #3422]	; 0xd5e
90008492:	ee1b 0a10 	vmov	r0, s22
90008496:	42a9      	cmp	r1, r5
90008498:	bf08      	it	eq
9000849a:	463e      	moveq	r6, r7
9000849c:	4631      	mov	r1, r6
9000849e:	f010 f8b4 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
900084a2:	4a21      	ldr	r2, [pc, #132]	; (90008528 <_ZN18MainScreenViewBaseC1Ev+0x1684>)
900084a4:	4b21      	ldr	r3, [pc, #132]	; (9000852c <_ZN18MainScreenViewBaseC1Ev+0x1688>)
    TanksSettingScren.add(TankSettingsToHomeScr_Button);
900084a6:	ee1f 1a90 	vmov	r1, s31
900084aa:	9f08      	ldr	r7, [sp, #32]
900084ac:	ee18 0a90 	vmov	r0, s17
900084b0:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
900084b4:	f8c4 3d5c 	str.w	r3, [r4, #3420]	; 0xd5c
900084b8:	f8c4 5d8c 	str.w	r5, [r4, #3468]	; 0xd8c
900084bc:	f8c4 7d84 	str.w	r7, [r4, #3460]	; 0xd84
900084c0:	f00c fcf8 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    GaugesContainer.add(TanksSettingScren);
900084c4:	ee18 1a90 	vmov	r1, s17
900084c8:	ee19 0a10 	vmov	r0, s18
900084cc:	f00d f9c6 	bl	9001585c <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    GaugesContainer.setSelectedPage(0);
900084d0:	4629      	mov	r1, r5
900084d2:	ee19 0a10 	vmov	r0, s18
900084d6:	f00d f9b2 	bl	9001583e <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
900084da:	ee1f 0a10 	vmov	r0, s30
900084de:	ee19 1a10 	vmov	r1, s18
900084e2:	f00c fce7 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900084e6:	4620      	mov	r0, r4
900084e8:	b02f      	add	sp, #188	; 0xbc
900084ea:	ecbd 8b10 	vpop	{d8-d15}
900084ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return instance->lcdRef;
900084f2:	6898      	ldr	r0, [r3, #8]
900084f4:	f7fe bdcc 	b.w	90007090 <_ZN18MainScreenViewBaseC1Ev+0x1ec>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900084f8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900084fa:	2800      	cmp	r0, #0
900084fc:	f47e ae27 	bne.w	9000714e <_ZN18MainScreenViewBaseC1Ev+0x2aa>
90008500:	f7fe be24 	b.w	9000714c <_ZN18MainScreenViewBaseC1Ev+0x2a8>
90008504:	4b0a      	ldr	r3, [pc, #40]	; (90008530 <_ZN18MainScreenViewBaseC1Ev+0x168c>)
90008506:	212c      	movs	r1, #44	; 0x2c
90008508:	4a0a      	ldr	r2, [pc, #40]	; (90008534 <_ZN18MainScreenViewBaseC1Ev+0x1690>)
9000850a:	480b      	ldr	r0, [pc, #44]	; (90008538 <_ZN18MainScreenViewBaseC1Ev+0x1694>)
9000850c:	f023 f960 	bl	9002b7d0 <__assert_func>
90008510:	9002ecb0 	.word	0x9002ecb0
90008514:	00a200ab 	.word	0x00a200ab
90008518:	ff395779 	.word	0xff395779
9000851c:	00cb00dd 	.word	0x00cb00dd
90008520:	00560114 	.word	0x00560114
90008524:	00070008 	.word	0x00070008
90008528:	00060199 	.word	0x00060199
9000852c:	00200040 	.word	0x00200040
90008530:	9002f604 	.word	0x9002f604
90008534:	9002f664 	.word	0x9002f664
90008538:	9002f6a0 	.word	0x9002f6a0

9000853c <_ZN18MainScreenViewBaseD1Ev>:
MainScreenViewBase::~MainScreenViewBase()
9000853c:	b538      	push	{r3, r4, r5, lr}
9000853e:	4b06      	ldr	r3, [pc, #24]	; (90008558 <_ZN18MainScreenViewBaseD1Ev+0x1c>)
90008540:	4605      	mov	r5, r0
90008542:	4604      	mov	r4, r0
90008544:	f845 3b6c 	str.w	r3, [r5], #108
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90008548:	f010 ff5a 	bl	90019400 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
MainScreenViewBase::~MainScreenViewBase()
9000854c:	4628      	mov	r0, r5
9000854e:	f00c ff45 	bl	900153dc <_ZN8touchgfx14SwipeContainerD1Ev>
}
90008552:	4620      	mov	r0, r4
90008554:	bd38      	pop	{r3, r4, r5, pc}
90008556:	bf00      	nop
90008558:	9002f740 	.word	0x9002f740

9000855c <_ZN18MainScreenViewBaseD0Ev>:
MainScreenViewBase::~MainScreenViewBase()
9000855c:	b538      	push	{r3, r4, r5, lr}
9000855e:	4b08      	ldr	r3, [pc, #32]	; (90008580 <_ZN18MainScreenViewBaseD0Ev+0x24>)
90008560:	4605      	mov	r5, r0
90008562:	4604      	mov	r4, r0
90008564:	f845 3b6c 	str.w	r3, [r5], #108
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90008568:	f010 ff4a 	bl	90019400 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
MainScreenViewBase::~MainScreenViewBase()
9000856c:	4628      	mov	r0, r5
9000856e:	f00c ff35 	bl	900153dc <_ZN8touchgfx14SwipeContainerD1Ev>
}
90008572:	4620      	mov	r0, r4
90008574:	f642 11e8 	movw	r1, #10728	; 0x29e8
90008578:	f022 ff4d 	bl	9002b416 <_ZdlPvj>
9000857c:	4620      	mov	r0, r4
9000857e:	bd38      	pop	{r3, r4, r5, pc}
90008580:	9002f740 	.word	0x9002f740

90008584 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90008584:	4770      	bx	lr
90008586:	bf00      	nop

90008588 <_Z23getFont_verdana_10_4bppv>:
{
90008588:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000858a:	4d18      	ldr	r5, [pc, #96]	; (900085ec <_Z23getFont_verdana_10_4bppv+0x64>)
{
9000858c:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000858e:	782b      	ldrb	r3, [r5, #0]
90008590:	f3bf 8f5b 	dmb	ish
90008594:	f013 0401 	ands.w	r4, r3, #1
90008598:	d002      	beq.n	900085a0 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
9000859a:	4815      	ldr	r0, [pc, #84]	; (900085f0 <_Z23getFont_verdana_10_4bppv+0x68>)
9000859c:	b00f      	add	sp, #60	; 0x3c
9000859e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900085a0:	4628      	mov	r0, r5
900085a2:	f022 ff3a 	bl	9002b41a <__cxa_guard_acquire>
900085a6:	2800      	cmp	r0, #0
900085a8:	d0f7      	beq.n	9000859a <_Z23getFont_verdana_10_4bppv+0x12>
900085aa:	213f      	movs	r1, #63	; 0x3f
900085ac:	2201      	movs	r2, #1
900085ae:	230a      	movs	r3, #10
900085b0:	2004      	movs	r0, #4
900085b2:	9204      	str	r2, [sp, #16]
900085b4:	9300      	str	r3, [sp, #0]
900085b6:	9003      	str	r0, [sp, #12]
900085b8:	480d      	ldr	r0, [pc, #52]	; (900085f0 <_Z23getFont_verdana_10_4bppv+0x68>)
900085ba:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900085be:	490d      	ldr	r1, [pc, #52]	; (900085f4 <_Z23getFont_verdana_10_4bppv+0x6c>)
900085c0:	9108      	str	r1, [sp, #32]
900085c2:	490d      	ldr	r1, [pc, #52]	; (900085f8 <_Z23getFont_verdana_10_4bppv+0x70>)
900085c4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
900085c8:	9107      	str	r1, [sp, #28]
900085ca:	490c      	ldr	r1, [pc, #48]	; (900085fc <_Z23getFont_verdana_10_4bppv+0x74>)
900085cc:	e9cd 4405 	strd	r4, r4, [sp, #20]
900085d0:	e9cd 4401 	strd	r4, r4, [sp, #4]
900085d4:	f7fe fa2c 	bl	90006a30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900085d8:	4809      	ldr	r0, [pc, #36]	; (90008600 <_Z23getFont_verdana_10_4bppv+0x78>)
900085da:	f023 f917 	bl	9002b80c <atexit>
900085de:	4628      	mov	r0, r5
900085e0:	f022 ff27 	bl	9002b432 <__cxa_guard_release>
}
900085e4:	4802      	ldr	r0, [pc, #8]	; (900085f0 <_Z23getFont_verdana_10_4bppv+0x68>)
900085e6:	b00f      	add	sp, #60	; 0x3c
900085e8:	bd30      	pop	{r4, r5, pc}
900085ea:	bf00      	nop
900085ec:	2400dbd4 	.word	0x2400dbd4
900085f0:	2400dbd8 	.word	0x2400dbd8
900085f4:	900312b8 	.word	0x900312b8
900085f8:	900312d0 	.word	0x900312d0
900085fc:	90200a68 	.word	0x90200a68
90008600:	90008585 	.word	0x90008585

90008604 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90008604:	4770      	bx	lr
90008606:	bf00      	nop

90008608 <_Z23getFont_verdana_20_4bppv>:
{
90008608:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000860a:	4d18      	ldr	r5, [pc, #96]	; (9000866c <_Z23getFont_verdana_20_4bppv+0x64>)
{
9000860c:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000860e:	782b      	ldrb	r3, [r5, #0]
90008610:	f3bf 8f5b 	dmb	ish
90008614:	f013 0401 	ands.w	r4, r3, #1
90008618:	d002      	beq.n	90008620 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
9000861a:	4815      	ldr	r0, [pc, #84]	; (90008670 <_Z23getFont_verdana_20_4bppv+0x68>)
9000861c:	b00f      	add	sp, #60	; 0x3c
9000861e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90008620:	4628      	mov	r0, r5
90008622:	f022 fefa 	bl	9002b41a <__cxa_guard_acquire>
90008626:	2800      	cmp	r0, #0
90008628:	d0f7      	beq.n	9000861a <_Z23getFont_verdana_20_4bppv+0x12>
9000862a:	213f      	movs	r1, #63	; 0x3f
9000862c:	2201      	movs	r2, #1
9000862e:	2314      	movs	r3, #20
90008630:	2004      	movs	r0, #4
90008632:	9204      	str	r2, [sp, #16]
90008634:	9300      	str	r3, [sp, #0]
90008636:	9003      	str	r0, [sp, #12]
90008638:	480d      	ldr	r0, [pc, #52]	; (90008670 <_Z23getFont_verdana_20_4bppv+0x68>)
9000863a:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000863e:	490d      	ldr	r1, [pc, #52]	; (90008674 <_Z23getFont_verdana_20_4bppv+0x6c>)
90008640:	9108      	str	r1, [sp, #32]
90008642:	490d      	ldr	r1, [pc, #52]	; (90008678 <_Z23getFont_verdana_20_4bppv+0x70>)
90008644:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90008648:	9107      	str	r1, [sp, #28]
9000864a:	490c      	ldr	r1, [pc, #48]	; (9000867c <_Z23getFont_verdana_20_4bppv+0x74>)
9000864c:	e9cd 4405 	strd	r4, r4, [sp, #20]
90008650:	e9cd 4401 	strd	r4, r4, [sp, #4]
90008654:	f7fe f9ec 	bl	90006a30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90008658:	4809      	ldr	r0, [pc, #36]	; (90008680 <_Z23getFont_verdana_20_4bppv+0x78>)
9000865a:	f023 f8d7 	bl	9002b80c <atexit>
9000865e:	4628      	mov	r0, r5
90008660:	f022 fee7 	bl	9002b432 <__cxa_guard_release>
}
90008664:	4802      	ldr	r0, [pc, #8]	; (90008670 <_Z23getFont_verdana_20_4bppv+0x68>)
90008666:	b00f      	add	sp, #60	; 0x3c
90008668:	bd30      	pop	{r4, r5, pc}
9000866a:	bf00      	nop
9000866c:	2400dc04 	.word	0x2400dc04
90008670:	2400dc08 	.word	0x2400dc08
90008674:	900312bc 	.word	0x900312bc
90008678:	900312d4 	.word	0x900312d4
9000867c:	90200a78 	.word	0x90200a78
90008680:	90008605 	.word	0x90008605

90008684 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90008684:	4770      	bx	lr
90008686:	bf00      	nop

90008688 <_Z23getFont_verdana_40_4bppv>:
{
90008688:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000868a:	4d18      	ldr	r5, [pc, #96]	; (900086ec <_Z23getFont_verdana_40_4bppv+0x64>)
{
9000868c:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000868e:	782b      	ldrb	r3, [r5, #0]
90008690:	f3bf 8f5b 	dmb	ish
90008694:	f013 0401 	ands.w	r4, r3, #1
90008698:	d002      	beq.n	900086a0 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
9000869a:	4815      	ldr	r0, [pc, #84]	; (900086f0 <_Z23getFont_verdana_40_4bppv+0x68>)
9000869c:	b00f      	add	sp, #60	; 0x3c
9000869e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900086a0:	4628      	mov	r0, r5
900086a2:	f022 feba 	bl	9002b41a <__cxa_guard_acquire>
900086a6:	2800      	cmp	r0, #0
900086a8:	d0f7      	beq.n	9000869a <_Z23getFont_verdana_40_4bppv+0x12>
900086aa:	213f      	movs	r1, #63	; 0x3f
900086ac:	2201      	movs	r2, #1
900086ae:	2328      	movs	r3, #40	; 0x28
900086b0:	2004      	movs	r0, #4
900086b2:	9204      	str	r2, [sp, #16]
900086b4:	9300      	str	r3, [sp, #0]
900086b6:	9003      	str	r0, [sp, #12]
900086b8:	480d      	ldr	r0, [pc, #52]	; (900086f0 <_Z23getFont_verdana_40_4bppv+0x68>)
900086ba:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900086be:	490d      	ldr	r1, [pc, #52]	; (900086f4 <_Z23getFont_verdana_40_4bppv+0x6c>)
900086c0:	9108      	str	r1, [sp, #32]
900086c2:	490d      	ldr	r1, [pc, #52]	; (900086f8 <_Z23getFont_verdana_40_4bppv+0x70>)
900086c4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
900086c8:	9107      	str	r1, [sp, #28]
900086ca:	490c      	ldr	r1, [pc, #48]	; (900086fc <_Z23getFont_verdana_40_4bppv+0x74>)
900086cc:	e9cd 4405 	strd	r4, r4, [sp, #20]
900086d0:	e9cd 4401 	strd	r4, r4, [sp, #4]
900086d4:	f7fe f9ac 	bl	90006a30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900086d8:	4809      	ldr	r0, [pc, #36]	; (90008700 <_Z23getFont_verdana_40_4bppv+0x78>)
900086da:	f023 f897 	bl	9002b80c <atexit>
900086de:	4628      	mov	r0, r5
900086e0:	f022 fea7 	bl	9002b432 <__cxa_guard_release>
}
900086e4:	4802      	ldr	r0, [pc, #8]	; (900086f0 <_Z23getFont_verdana_40_4bppv+0x68>)
900086e6:	b00f      	add	sp, #60	; 0x3c
900086e8:	bd30      	pop	{r4, r5, pc}
900086ea:	bf00      	nop
900086ec:	2400dc34 	.word	0x2400dc34
900086f0:	2400dc38 	.word	0x2400dc38
900086f4:	900312c0 	.word	0x900312c0
900086f8:	900312d8 	.word	0x900312d8
900086fc:	90200a88 	.word	0x90200a88
90008700:	90008685 	.word	0x90008685

90008704 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_17_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_17_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_17_4bpp()
{
    static touchgfx::GeneratedFont verdanab_17_4bpp(glyphs_verdanab_17_4bpp, 12, 21, 17, 0, 0, 4, 1, 0, 0, unicodes_verdanab_17_4bpp, kerning_verdanab_17_4bpp, 63, 0, 0, 0);
90008704:	4770      	bx	lr
90008706:	bf00      	nop

90008708 <_Z24getFont_verdanab_17_4bppv>:
{
90008708:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdanab_17_4bpp(glyphs_verdanab_17_4bpp, 12, 21, 17, 0, 0, 4, 1, 0, 0, unicodes_verdanab_17_4bpp, kerning_verdanab_17_4bpp, 63, 0, 0, 0);
9000870a:	4d19      	ldr	r5, [pc, #100]	; (90008770 <_Z24getFont_verdanab_17_4bppv+0x68>)
{
9000870c:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdanab_17_4bpp(glyphs_verdanab_17_4bpp, 12, 21, 17, 0, 0, 4, 1, 0, 0, unicodes_verdanab_17_4bpp, kerning_verdanab_17_4bpp, 63, 0, 0, 0);
9000870e:	782b      	ldrb	r3, [r5, #0]
90008710:	f3bf 8f5b 	dmb	ish
90008714:	f013 0401 	ands.w	r4, r3, #1
90008718:	d002      	beq.n	90008720 <_Z24getFont_verdanab_17_4bppv+0x18>
    return verdanab_17_4bpp;
}
9000871a:	4816      	ldr	r0, [pc, #88]	; (90008774 <_Z24getFont_verdanab_17_4bppv+0x6c>)
9000871c:	b00f      	add	sp, #60	; 0x3c
9000871e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdanab_17_4bpp(glyphs_verdanab_17_4bpp, 12, 21, 17, 0, 0, 4, 1, 0, 0, unicodes_verdanab_17_4bpp, kerning_verdanab_17_4bpp, 63, 0, 0, 0);
90008720:	4628      	mov	r0, r5
90008722:	f022 fe7a 	bl	9002b41a <__cxa_guard_acquire>
90008726:	2800      	cmp	r0, #0
90008728:	d0f7      	beq.n	9000871a <_Z24getFont_verdanab_17_4bppv+0x12>
9000872a:	223f      	movs	r2, #63	; 0x3f
9000872c:	4b12      	ldr	r3, [pc, #72]	; (90008778 <_Z24getFont_verdanab_17_4bppv+0x70>)
9000872e:	4913      	ldr	r1, [pc, #76]	; (9000877c <_Z24getFont_verdanab_17_4bppv+0x74>)
90008730:	2011      	movs	r0, #17
90008732:	9308      	str	r3, [sp, #32]
90008734:	2301      	movs	r3, #1
90008736:	9000      	str	r0, [sp, #0]
90008738:	9401      	str	r4, [sp, #4]
9000873a:	480e      	ldr	r0, [pc, #56]	; (90008774 <_Z24getFont_verdanab_17_4bppv+0x6c>)
9000873c:	e9cd 2409 	strd	r2, r4, [sp, #36]	; 0x24
90008740:	2204      	movs	r2, #4
90008742:	e9cd 4106 	strd	r4, r1, [sp, #24]
90008746:	e9cd 3404 	strd	r3, r4, [sp, #16]
9000874a:	490d      	ldr	r1, [pc, #52]	; (90008780 <_Z24getFont_verdanab_17_4bppv+0x78>)
9000874c:	2315      	movs	r3, #21
9000874e:	e9cd 4202 	strd	r4, r2, [sp, #8]
90008752:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90008756:	220c      	movs	r2, #12
90008758:	f7fe f96a 	bl	90006a30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000875c:	4809      	ldr	r0, [pc, #36]	; (90008784 <_Z24getFont_verdanab_17_4bppv+0x7c>)
9000875e:	f023 f855 	bl	9002b80c <atexit>
90008762:	4628      	mov	r0, r5
90008764:	f022 fe65 	bl	9002b432 <__cxa_guard_release>
}
90008768:	4802      	ldr	r0, [pc, #8]	; (90008774 <_Z24getFont_verdanab_17_4bppv+0x6c>)
9000876a:	b00f      	add	sp, #60	; 0x3c
9000876c:	bd30      	pop	{r4, r5, pc}
9000876e:	bf00      	nop
90008770:	2400dc64 	.word	0x2400dc64
90008774:	2400dc68 	.word	0x2400dc68
90008778:	900312c4 	.word	0x900312c4
9000877c:	900312dc 	.word	0x900312dc
90008780:	90200a98 	.word	0x90200a98
90008784:	90008705 	.word	0x90008705

90008788 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_20_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_20_4bpp()
{
    static touchgfx::GeneratedFont verdanab_20_4bpp(glyphs_verdanab_20_4bpp, 8, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdanab_20_4bpp, kerning_verdanab_20_4bpp, 63, 0, 0, 0);
90008788:	4770      	bx	lr
9000878a:	bf00      	nop

9000878c <_Z24getFont_verdanab_20_4bppv>:
{
9000878c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdanab_20_4bpp(glyphs_verdanab_20_4bpp, 8, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdanab_20_4bpp, kerning_verdanab_20_4bpp, 63, 0, 0, 0);
9000878e:	4d18      	ldr	r5, [pc, #96]	; (900087f0 <_Z24getFont_verdanab_20_4bppv+0x64>)
{
90008790:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdanab_20_4bpp(glyphs_verdanab_20_4bpp, 8, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdanab_20_4bpp, kerning_verdanab_20_4bpp, 63, 0, 0, 0);
90008792:	782b      	ldrb	r3, [r5, #0]
90008794:	f3bf 8f5b 	dmb	ish
90008798:	f013 0401 	ands.w	r4, r3, #1
9000879c:	d002      	beq.n	900087a4 <_Z24getFont_verdanab_20_4bppv+0x18>
    return verdanab_20_4bpp;
}
9000879e:	4815      	ldr	r0, [pc, #84]	; (900087f4 <_Z24getFont_verdanab_20_4bppv+0x68>)
900087a0:	b00f      	add	sp, #60	; 0x3c
900087a2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdanab_20_4bpp(glyphs_verdanab_20_4bpp, 8, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdanab_20_4bpp, kerning_verdanab_20_4bpp, 63, 0, 0, 0);
900087a4:	4628      	mov	r0, r5
900087a6:	f022 fe38 	bl	9002b41a <__cxa_guard_acquire>
900087aa:	2800      	cmp	r0, #0
900087ac:	d0f7      	beq.n	9000879e <_Z24getFont_verdanab_20_4bppv+0x12>
900087ae:	4a12      	ldr	r2, [pc, #72]	; (900087f8 <_Z24getFont_verdanab_20_4bppv+0x6c>)
900087b0:	213f      	movs	r1, #63	; 0x3f
900087b2:	2314      	movs	r3, #20
900087b4:	480f      	ldr	r0, [pc, #60]	; (900087f4 <_Z24getFont_verdanab_20_4bppv+0x68>)
900087b6:	9208      	str	r2, [sp, #32]
900087b8:	2201      	movs	r2, #1
900087ba:	9300      	str	r3, [sp, #0]
900087bc:	9204      	str	r2, [sp, #16]
900087be:	2204      	movs	r2, #4
900087c0:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900087c4:	490d      	ldr	r1, [pc, #52]	; (900087fc <_Z24getFont_verdanab_20_4bppv+0x70>)
900087c6:	9203      	str	r2, [sp, #12]
900087c8:	2208      	movs	r2, #8
900087ca:	9107      	str	r1, [sp, #28]
900087cc:	490c      	ldr	r1, [pc, #48]	; (90008800 <_Z24getFont_verdanab_20_4bppv+0x74>)
900087ce:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
900087d2:	e9cd 4405 	strd	r4, r4, [sp, #20]
900087d6:	e9cd 4401 	strd	r4, r4, [sp, #4]
900087da:	f7fe f929 	bl	90006a30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900087de:	4809      	ldr	r0, [pc, #36]	; (90008804 <_Z24getFont_verdanab_20_4bppv+0x78>)
900087e0:	f023 f814 	bl	9002b80c <atexit>
900087e4:	4628      	mov	r0, r5
900087e6:	f022 fe24 	bl	9002b432 <__cxa_guard_release>
}
900087ea:	4802      	ldr	r0, [pc, #8]	; (900087f4 <_Z24getFont_verdanab_20_4bppv+0x68>)
900087ec:	b00f      	add	sp, #60	; 0x3c
900087ee:	bd30      	pop	{r4, r5, pc}
900087f0:	2400dc94 	.word	0x2400dc94
900087f4:	2400dc98 	.word	0x2400dc98
900087f8:	900312c8 	.word	0x900312c8
900087fc:	900312e0 	.word	0x900312e0
90008800:	90200b40 	.word	0x90200b40
90008804:	90008789 	.word	0x90008789

90008808 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_30_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_30_4bpp()
{
    static touchgfx::GeneratedFont verdanab_30_4bpp(glyphs_verdanab_30_4bpp, 4, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_verdanab_30_4bpp, kerning_verdanab_30_4bpp, 63, 0, 0, 0);
90008808:	4770      	bx	lr
9000880a:	bf00      	nop

9000880c <_Z24getFont_verdanab_30_4bppv>:
{
9000880c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdanab_30_4bpp(glyphs_verdanab_30_4bpp, 4, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_verdanab_30_4bpp, kerning_verdanab_30_4bpp, 63, 0, 0, 0);
9000880e:	4d18      	ldr	r5, [pc, #96]	; (90008870 <_Z24getFont_verdanab_30_4bppv+0x64>)
{
90008810:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdanab_30_4bpp(glyphs_verdanab_30_4bpp, 4, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_verdanab_30_4bpp, kerning_verdanab_30_4bpp, 63, 0, 0, 0);
90008812:	782b      	ldrb	r3, [r5, #0]
90008814:	f3bf 8f5b 	dmb	ish
90008818:	f013 0401 	ands.w	r4, r3, #1
9000881c:	d002      	beq.n	90008824 <_Z24getFont_verdanab_30_4bppv+0x18>
    return verdanab_30_4bpp;
}
9000881e:	4815      	ldr	r0, [pc, #84]	; (90008874 <_Z24getFont_verdanab_30_4bppv+0x68>)
90008820:	b00f      	add	sp, #60	; 0x3c
90008822:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdanab_30_4bpp(glyphs_verdanab_30_4bpp, 4, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_verdanab_30_4bpp, kerning_verdanab_30_4bpp, 63, 0, 0, 0);
90008824:	4628      	mov	r0, r5
90008826:	f022 fdf8 	bl	9002b41a <__cxa_guard_acquire>
9000882a:	2800      	cmp	r0, #0
9000882c:	d0f7      	beq.n	9000881e <_Z24getFont_verdanab_30_4bppv+0x12>
9000882e:	213f      	movs	r1, #63	; 0x3f
90008830:	2204      	movs	r2, #4
90008832:	231e      	movs	r3, #30
90008834:	480f      	ldr	r0, [pc, #60]	; (90008874 <_Z24getFont_verdanab_30_4bppv+0x68>)
90008836:	9203      	str	r2, [sp, #12]
90008838:	9300      	str	r3, [sp, #0]
9000883a:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000883e:	490e      	ldr	r1, [pc, #56]	; (90008878 <_Z24getFont_verdanab_30_4bppv+0x6c>)
90008840:	9108      	str	r1, [sp, #32]
90008842:	490e      	ldr	r1, [pc, #56]	; (9000887c <_Z24getFont_verdanab_30_4bppv+0x70>)
90008844:	9107      	str	r1, [sp, #28]
90008846:	2101      	movs	r1, #1
90008848:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000884c:	9104      	str	r1, [sp, #16]
9000884e:	490c      	ldr	r1, [pc, #48]	; (90008880 <_Z24getFont_verdanab_30_4bppv+0x74>)
90008850:	e9cd 4405 	strd	r4, r4, [sp, #20]
90008854:	e9cd 4401 	strd	r4, r4, [sp, #4]
90008858:	f7fe f8ea 	bl	90006a30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000885c:	4809      	ldr	r0, [pc, #36]	; (90008884 <_Z24getFont_verdanab_30_4bppv+0x78>)
9000885e:	f022 ffd5 	bl	9002b80c <atexit>
90008862:	4628      	mov	r0, r5
90008864:	f022 fde5 	bl	9002b432 <__cxa_guard_release>
}
90008868:	4802      	ldr	r0, [pc, #8]	; (90008874 <_Z24getFont_verdanab_30_4bppv+0x68>)
9000886a:	b00f      	add	sp, #60	; 0x3c
9000886c:	bd30      	pop	{r4, r5, pc}
9000886e:	bf00      	nop
90008870:	2400dcc4 	.word	0x2400dcc4
90008874:	2400dcc8 	.word	0x2400dcc8
90008878:	900312cc 	.word	0x900312cc
9000887c:	900312e4 	.word	0x900312e4
90008880:	90200bb0 	.word	0x90200bb0
90008884:	90008809 	.word	0x90008809

90008888 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
90008888:	2000      	movs	r0, #0
9000888a:	4770      	bx	lr

9000888c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
9000888c:	2000      	movs	r0, #0
9000888e:	4770      	bx	lr

90008890 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90008890:	b40e      	push	{r1, r2, r3}
90008892:	b500      	push	{lr}
90008894:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90008896:	2100      	movs	r1, #0
{
90008898:	ab03      	add	r3, sp, #12
9000889a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
9000889e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900088a0:	f013 f9f4 	bl	9001bc8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900088a4:	b002      	add	sp, #8
900088a6:	f85d eb04 	ldr.w	lr, [sp], #4
900088aa:	b003      	add	sp, #12
900088ac:	4770      	bx	lr
900088ae:	bf00      	nop

900088b0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900088b0:	b40c      	push	{r2, r3}
900088b2:	b500      	push	{lr}
900088b4:	b083      	sub	sp, #12
900088b6:	ab04      	add	r3, sp, #16
900088b8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900088bc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900088be:	f013 f9e5 	bl	9001bc8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900088c2:	b003      	add	sp, #12
900088c4:	f85d eb04 	ldr.w	lr, [sp], #4
900088c8:	b002      	add	sp, #8
900088ca:	4770      	bx	lr

900088cc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
900088cc:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
900088ce:	b510      	push	{r4, lr}
900088d0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
900088d2:	b133      	cbz	r3, 900088e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
900088d4:	8f03      	ldrh	r3, [r0, #56]	; 0x38
900088d6:	b39b      	cbz	r3, 90008940 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
900088d8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900088da:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900088de:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
900088e0:	b923      	cbnz	r3, 900088ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
900088e2:	4620      	mov	r0, r4
}
900088e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
900088e8:	f014 bd0c 	b.w	9001d304 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
900088ec:	f014 fe08 	bl	9001d500 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
900088f0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900088f2:	2b01      	cmp	r3, #1
900088f4:	d92a      	bls.n	9000894c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
900088f6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900088f8:	1c53      	adds	r3, r2, #1
900088fa:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
900088fc:	2b09      	cmp	r3, #9
900088fe:	d812      	bhi.n	90008926 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90008900:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90008904:	f640 103f 	movw	r0, #2367	; 0x93f
90008908:	8c49      	ldrh	r1, [r1, #34]	; 0x22
9000890a:	4281      	cmp	r1, r0
9000890c:	d1e9      	bne.n	900088e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000890e:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90008912:	0052      	lsls	r2, r2, #1
90008914:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90008916:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
9000891a:	4422      	add	r2, r4
9000891c:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
90008920:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
90008922:	8450      	strh	r0, [r2, #34]	; 0x22
        }
90008924:	e7dd      	b.n	900088e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90008926:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9000892a:	f640 113f 	movw	r1, #2367	; 0x93f
9000892e:	89db      	ldrh	r3, [r3, #14]
90008930:	428b      	cmp	r3, r1
90008932:	d1d6      	bne.n	900088e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90008934:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90008938:	2300      	movs	r3, #0
9000893a:	0052      	lsls	r2, r2, #1
9000893c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
9000893e:	e7ea      	b.n	90008916 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90008940:	4b05      	ldr	r3, [pc, #20]	; (90008958 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90008942:	21c5      	movs	r1, #197	; 0xc5
90008944:	4a05      	ldr	r2, [pc, #20]	; (9000895c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90008946:	4806      	ldr	r0, [pc, #24]	; (90008960 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90008948:	f022 ff42 	bl	9002b7d0 <__assert_func>
            assert(offset < used);
9000894c:	4b05      	ldr	r3, [pc, #20]	; (90008964 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
9000894e:	21cb      	movs	r1, #203	; 0xcb
90008950:	4a05      	ldr	r2, [pc, #20]	; (90008968 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
90008952:	4803      	ldr	r0, [pc, #12]	; (90008960 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90008954:	f022 ff3c 	bl	9002b7d0 <__assert_func>
90008958:	9002f76c 	.word	0x9002f76c
9000895c:	9002f778 	.word	0x9002f778
90008960:	9002f824 	.word	0x9002f824
90008964:	9002f870 	.word	0x9002f870
90008968:	9002f880 	.word	0x9002f880

9000896c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
9000896c:	f014 bc93 	b.w	9001d296 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90008970 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90008970:	b510      	push	{r4, lr}
90008972:	b086      	sub	sp, #24
90008974:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90008978:	ac0a      	add	r4, sp, #40	; 0x28
{
9000897a:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
9000897e:	461a      	mov	r2, r3
90008980:	9b09      	ldr	r3, [sp, #36]	; 0x24
90008982:	4661      	mov	r1, ip
90008984:	9401      	str	r4, [sp, #4]
90008986:	9300      	str	r3, [sp, #0]
90008988:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
9000898a:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
9000898c:	f011 fdba 	bl	9001a504 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90008990:	b006      	add	sp, #24
90008992:	bd10      	pop	{r4, pc}

90008994 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90008994:	b9e0      	cbnz	r0, 900089d0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90008996:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90008998:	4b13      	ldr	r3, [pc, #76]	; (900089e8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
9000899a:	681b      	ldr	r3, [r3, #0]
9000899c:	b1cb      	cbz	r3, 900089d2 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000899e:	4c13      	ldr	r4, [pc, #76]	; (900089ec <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900089a0:	4813      	ldr	r0, [pc, #76]	; (900089f0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900089a2:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900089a6:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900089a8:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900089aa:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900089ac:	689c      	ldr	r4, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900089ae:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900089b0:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900089b2:	4b10      	ldr	r3, [pc, #64]	; (900089f4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
900089b4:	2200      	movs	r2, #0
900089b6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
900089b8:	f000 f83a 	bl	90008a30 <_ZN17TypedTextDatabase8getFontsEv>
900089bc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900089be:	f000 f835 	bl	90008a2c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
900089c2:	4b0d      	ldr	r3, [pc, #52]	; (900089f8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900089c4:	4a0d      	ldr	r2, [pc, #52]	; (900089fc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900089c6:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
900089c8:	4b0d      	ldr	r3, [pc, #52]	; (90008a00 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
900089ca:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
900089cc:	8018      	strh	r0, [r3, #0]
    }
}
900089ce:	bd38      	pop	{r3, r4, r5, pc}
900089d0:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
900089d2:	4c0c      	ldr	r4, [pc, #48]	; (90008a04 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
900089d4:	4905      	ldr	r1, [pc, #20]	; (900089ec <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
900089d6:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
900089d8:	480b      	ldr	r0, [pc, #44]	; (90008a08 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
900089da:	4b05      	ldr	r3, [pc, #20]	; (900089f0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900089dc:	4a0b      	ldr	r2, [pc, #44]	; (90008a0c <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
900089de:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
900089e0:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
900089e2:	2c00      	cmp	r4, #0
900089e4:	d1e5      	bne.n	900089b2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
900089e6:	bd38      	pop	{r3, r4, r5, pc}
900089e8:	2400dcf4 	.word	0x2400dcf4
900089ec:	2400dcf8 	.word	0x2400dcf8
900089f0:	2400dcfc 	.word	0x2400dcfc
900089f4:	2400dd00 	.word	0x2400dd00
900089f8:	24028e84 	.word	0x24028e84
900089fc:	24028e8c 	.word	0x24028e8c
90008a00:	24028e88 	.word	0x24028e88
90008a04:	90200c6c 	.word	0x90200c6c
90008a08:	90200c0c 	.word	0x90200c0c
90008a0c:	90200be8 	.word	0x90200be8

90008a10 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90008a10:	4a04      	ldr	r2, [pc, #16]	; (90008a24 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90008a12:	4b05      	ldr	r3, [pc, #20]	; (90008a28 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90008a14:	6812      	ldr	r2, [r2, #0]
90008a16:	681b      	ldr	r3, [r3, #0]
90008a18:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90008a1c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90008a20:	4770      	bx	lr
90008a22:	bf00      	nop
90008a24:	2400dcfc 	.word	0x2400dcfc
90008a28:	2400dcf8 	.word	0x2400dcf8

90008a2c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90008a2c:	2009      	movs	r0, #9
90008a2e:	4770      	bx	lr

90008a30 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90008a30:	4800      	ldr	r0, [pc, #0]	; (90008a34 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90008a32:	4770      	bx	lr
90008a34:	2400dd04 	.word	0x2400dd04

90008a38 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 5:
        touchgfx_fonts[5] = &(getFont_verdanab_20_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90008a38:	b510      	push	{r4, lr}
};
90008a3a:	4c0a      	ldr	r4, [pc, #40]	; (90008a64 <_GLOBAL__sub_I_touchgfx_fonts+0x2c>)
    &(getFont_verdana_20_4bpp()),
90008a3c:	f7ff fde4 	bl	90008608 <_Z23getFont_verdana_20_4bppv>
};
90008a40:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90008a42:	f7ff fe21 	bl	90008688 <_Z23getFont_verdana_40_4bppv>
};
90008a46:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
90008a48:	f7ff fd9e 	bl	90008588 <_Z23getFont_verdana_10_4bppv>
};
90008a4c:	60a0      	str	r0, [r4, #8]
    &(getFont_verdanab_17_4bpp()),
90008a4e:	f7ff fe5b 	bl	90008708 <_Z24getFont_verdanab_17_4bppv>
};
90008a52:	60e0      	str	r0, [r4, #12]
    &(getFont_verdanab_30_4bpp()),
90008a54:	f7ff feda 	bl	9000880c <_Z24getFont_verdanab_30_4bppv>
};
90008a58:	6120      	str	r0, [r4, #16]
    &(getFont_verdanab_20_4bpp())
90008a5a:	f7ff fe97 	bl	9000878c <_Z24getFont_verdanab_20_4bppv>
};
90008a5e:	6160      	str	r0, [r4, #20]
} // namespace TypedTextDatabase
90008a60:	bd10      	pop	{r4, pc}
90008a62:	bf00      	nop
90008a64:	2400dd04 	.word	0x2400dd04

90008a68 <_ZN26CalibrationScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationScreenPresenter() {};
90008a68:	4770      	bx	lr
90008a6a:	bf00      	nop

90008a6c <_ZThn4_N26CalibrationScreenPresenterD1Ev>:
90008a6c:	3804      	subs	r0, #4
90008a6e:	4770      	bx	lr

90008a70 <_ZN26CalibrationScreenPresenter10deactivateEv>:
}

void CalibrationScreenPresenter::activate()
{

}
90008a70:	4770      	bx	lr
90008a72:	bf00      	nop

90008a74 <_ZN26CalibrationScreenPresenterD0Ev>:
90008a74:	b510      	push	{r4, lr}
90008a76:	4604      	mov	r4, r0
90008a78:	2110      	movs	r1, #16
90008a7a:	f022 fccc 	bl	9002b416 <_ZdlPvj>
90008a7e:	4620      	mov	r0, r4
90008a80:	bd10      	pop	{r4, pc}
90008a82:	bf00      	nop

90008a84 <_ZThn4_N26CalibrationScreenPresenterD0Ev>:
90008a84:	b500      	push	{lr}
90008a86:	3804      	subs	r0, #4
90008a88:	b083      	sub	sp, #12
90008a8a:	2110      	movs	r1, #16
90008a8c:	9001      	str	r0, [sp, #4]
90008a8e:	f022 fcc2 	bl	9002b416 <_ZdlPvj>
90008a92:	9801      	ldr	r0, [sp, #4]
90008a94:	b003      	add	sp, #12
90008a96:	f85d fb04 	ldr.w	pc, [sp], #4
90008a9a:	bf00      	nop

90008a9c <_ZN26CalibrationScreenPresenterC1ER21CalibrationScreenView>:
    : view(v)
90008a9c:	4a06      	ldr	r2, [pc, #24]	; (90008ab8 <_ZN26CalibrationScreenPresenterC1ER21CalibrationScreenView+0x1c>)
90008a9e:	60c1      	str	r1, [r0, #12]
CalibrationScreenPresenter::CalibrationScreenPresenter(CalibrationScreenView& v)
90008aa0:	b410      	push	{r4}
    ModelListener() : model(0) {}
90008aa2:	2400      	movs	r4, #0
90008aa4:	6084      	str	r4, [r0, #8]
    : view(v)
90008aa6:	f102 0408 	add.w	r4, r2, #8
90008aaa:	3220      	adds	r2, #32
90008aac:	e9c0 4200 	strd	r4, r2, [r0]
}
90008ab0:	f85d 4b04 	ldr.w	r4, [sp], #4
90008ab4:	4770      	bx	lr
90008ab6:	bf00      	nop
90008ab8:	9002f954 	.word	0x9002f954

90008abc <_ZN21CalibrationScreenView14tearDownScreenEv>:
}

void CalibrationScreenView::tearDownScreen()
{
    CalibrationScreenViewBase::tearDownScreen();
}
90008abc:	4770      	bx	lr
90008abe:	bf00      	nop

90008ac0 <_ZN21CalibrationScreenViewD1Ev>:

class CalibrationScreenView : public CalibrationScreenViewBase
{
public:
    CalibrationScreenView();
    virtual ~CalibrationScreenView() {}
90008ac0:	4b03      	ldr	r3, [pc, #12]	; (90008ad0 <_ZN21CalibrationScreenViewD1Ev+0x10>)
90008ac2:	b510      	push	{r4, lr}
90008ac4:	4604      	mov	r4, r0
90008ac6:	6003      	str	r3, [r0, #0]
90008ac8:	f7fc fdb2 	bl	90005630 <_ZN25CalibrationScreenViewBaseD1Ev>
90008acc:	4620      	mov	r0, r4
90008ace:	bd10      	pop	{r4, pc}
90008ad0:	9002f984 	.word	0x9002f984

90008ad4 <_ZN21CalibrationScreenViewD0Ev>:
90008ad4:	4b06      	ldr	r3, [pc, #24]	; (90008af0 <_ZN21CalibrationScreenViewD0Ev+0x1c>)
90008ad6:	b510      	push	{r4, lr}
90008ad8:	4604      	mov	r4, r0
90008ada:	6003      	str	r3, [r0, #0]
90008adc:	f7fc fda8 	bl	90005630 <_ZN25CalibrationScreenViewBaseD1Ev>
90008ae0:	f44f 7186 	mov.w	r1, #268	; 0x10c
90008ae4:	4620      	mov	r0, r4
90008ae6:	f022 fc96 	bl	9002b416 <_ZdlPvj>
90008aea:	4620      	mov	r0, r4
90008aec:	bd10      	pop	{r4, pc}
90008aee:	bf00      	nop
90008af0:	9002f984 	.word	0x9002f984

90008af4 <_ZN21CalibrationScreenViewC1Ev>:
CalibrationScreenView::CalibrationScreenView()
90008af4:	b510      	push	{r4, lr}
90008af6:	4604      	mov	r4, r0
90008af8:	f7fc fee8 	bl	900058cc <_ZN25CalibrationScreenViewBaseC1Ev>
90008afc:	4b01      	ldr	r3, [pc, #4]	; (90008b04 <_ZN21CalibrationScreenViewC1Ev+0x10>)
}
90008afe:	4620      	mov	r0, r4
CalibrationScreenView::CalibrationScreenView()
90008b00:	6023      	str	r3, [r4, #0]
}
90008b02:	bd10      	pop	{r4, pc}
90008b04:	9002f984 	.word	0x9002f984

90008b08 <_ZN21CalibrationScreenView11setupScreenEv>:
    CalibrationScreenViewBase::setupScreen();
90008b08:	f7fc bd94 	b.w	90005634 <_ZN25CalibrationScreenViewBase11setupScreenEv>

90008b0c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90008b0c:	4770      	bx	lr
90008b0e:	bf00      	nop

90008b10 <_ZN19FrontendApplicationD0Ev>:
90008b10:	b510      	push	{r4, lr}
90008b12:	4604      	mov	r4, r0
90008b14:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90008b18:	f022 fc7d 	bl	9002b416 <_ZdlPvj>
90008b1c:	4620      	mov	r0, r4
90008b1e:	bd10      	pop	{r4, pc}

90008b20 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90008b20:	b510      	push	{r4, lr}
90008b22:	4604      	mov	r4, r0
    {
        model.tick();
90008b24:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
90008b28:	f000 f8d6 	bl	90008cd8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90008b2c:	4620      	mov	r0, r4
    }
90008b2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90008b32:	f012 b9e3 	b.w	9001aefc <_ZN8touchgfx11Application15handleTickEventEv>
90008b36:	bf00      	nop

90008b38 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90008b38:	b510      	push	{r4, lr}
90008b3a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90008b3c:	f7fd feb8 	bl	900068b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90008b40:	4b01      	ldr	r3, [pc, #4]	; (90008b48 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90008b42:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90008b44:	6023      	str	r3, [r4, #0]
}
90008b46:	bd10      	pop	{r4, pc}
90008b48:	9002f9b8 	.word	0x9002f9b8

90008b4c <_ZN23HomePageScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~HomePageScreenPresenter() {};
90008b4c:	4770      	bx	lr
90008b4e:	bf00      	nop

90008b50 <_ZThn4_N23HomePageScreenPresenterD1Ev>:
90008b50:	3804      	subs	r0, #4
90008b52:	4770      	bx	lr

90008b54 <_ZN23HomePageScreenPresenter10deactivateEv>:
}

void HomePageScreenPresenter::activate()
{

}
90008b54:	4770      	bx	lr
90008b56:	bf00      	nop

90008b58 <_ZN23HomePageScreenPresenterD0Ev>:
90008b58:	b510      	push	{r4, lr}
90008b5a:	4604      	mov	r4, r0
90008b5c:	2110      	movs	r1, #16
90008b5e:	f022 fc5a 	bl	9002b416 <_ZdlPvj>
90008b62:	4620      	mov	r0, r4
90008b64:	bd10      	pop	{r4, pc}
90008b66:	bf00      	nop

90008b68 <_ZThn4_N23HomePageScreenPresenterD0Ev>:
90008b68:	b500      	push	{lr}
90008b6a:	3804      	subs	r0, #4
90008b6c:	b083      	sub	sp, #12
90008b6e:	2110      	movs	r1, #16
90008b70:	9001      	str	r0, [sp, #4]
90008b72:	f022 fc50 	bl	9002b416 <_ZdlPvj>
90008b76:	9801      	ldr	r0, [sp, #4]
90008b78:	b003      	add	sp, #12
90008b7a:	f85d fb04 	ldr.w	pc, [sp], #4
90008b7e:	bf00      	nop

90008b80 <_ZN23HomePageScreenPresenterC1ER18HomePageScreenView>:
    : view(v)
90008b80:	4a06      	ldr	r2, [pc, #24]	; (90008b9c <_ZN23HomePageScreenPresenterC1ER18HomePageScreenView+0x1c>)
90008b82:	60c1      	str	r1, [r0, #12]
HomePageScreenPresenter::HomePageScreenPresenter(HomePageScreenView& v)
90008b84:	b410      	push	{r4}
90008b86:	2400      	movs	r4, #0
90008b88:	6084      	str	r4, [r0, #8]
    : view(v)
90008b8a:	f102 0408 	add.w	r4, r2, #8
90008b8e:	3220      	adds	r2, #32
90008b90:	e9c0 4200 	strd	r4, r2, [r0]
}
90008b94:	f85d 4b04 	ldr.w	r4, [sp], #4
90008b98:	4770      	bx	lr
90008b9a:	bf00      	nop
90008b9c:	9002f9fc 	.word	0x9002f9fc

90008ba0 <_ZN18HomePageScreenView14tearDownScreenEv>:
}

void HomePageScreenView::tearDownScreen()
{
    HomePageScreenViewBase::tearDownScreen();
}
90008ba0:	4770      	bx	lr
90008ba2:	bf00      	nop

90008ba4 <_ZN18HomePageScreenViewD1Ev>:

class HomePageScreenView : public HomePageScreenViewBase
{
public:
    HomePageScreenView();
    virtual ~HomePageScreenView() {}
90008ba4:	4b03      	ldr	r3, [pc, #12]	; (90008bb4 <_ZN18HomePageScreenViewD1Ev+0x10>)
90008ba6:	b510      	push	{r4, lr}
90008ba8:	4604      	mov	r4, r0
90008baa:	6003      	str	r3, [r0, #0]
90008bac:	f7fd ff70 	bl	90006a90 <_ZN22HomePageScreenViewBaseD1Ev>
90008bb0:	4620      	mov	r0, r4
90008bb2:	bd10      	pop	{r4, pc}
90008bb4:	9002fa2c 	.word	0x9002fa2c

90008bb8 <_ZN18HomePageScreenViewD0Ev>:
90008bb8:	4b06      	ldr	r3, [pc, #24]	; (90008bd4 <_ZN18HomePageScreenViewD0Ev+0x1c>)
90008bba:	b510      	push	{r4, lr}
90008bbc:	4604      	mov	r4, r0
90008bbe:	6003      	str	r3, [r0, #0]
90008bc0:	f7fd ff66 	bl	90006a90 <_ZN22HomePageScreenViewBaseD1Ev>
90008bc4:	f44f 71b8 	mov.w	r1, #368	; 0x170
90008bc8:	4620      	mov	r0, r4
90008bca:	f022 fc24 	bl	9002b416 <_ZdlPvj>
90008bce:	4620      	mov	r0, r4
90008bd0:	bd10      	pop	{r4, pc}
90008bd2:	bf00      	nop
90008bd4:	9002fa2c 	.word	0x9002fa2c

90008bd8 <_ZN18HomePageScreenViewC1Ev>:
HomePageScreenView::HomePageScreenView()
90008bd8:	b510      	push	{r4, lr}
90008bda:	4604      	mov	r4, r0
90008bdc:	f7fd ffa8 	bl	90006b30 <_ZN22HomePageScreenViewBaseC1Ev>
90008be0:	4b01      	ldr	r3, [pc, #4]	; (90008be8 <_ZN18HomePageScreenViewC1Ev+0x10>)
}
90008be2:	4620      	mov	r0, r4
HomePageScreenView::HomePageScreenView()
90008be4:	6023      	str	r3, [r4, #0]
}
90008be6:	bd10      	pop	{r4, pc}
90008be8:	9002fa2c 	.word	0x9002fa2c

90008bec <_ZN18HomePageScreenView11setupScreenEv>:
    HomePageScreenViewBase::setupScreen();
90008bec:	f7fd bf52 	b.w	90006a94 <_ZN22HomePageScreenViewBase11setupScreenEv>

90008bf0 <_ZN19MainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainScreenPresenter() {};
90008bf0:	4770      	bx	lr
90008bf2:	bf00      	nop

90008bf4 <_ZThn4_N19MainScreenPresenterD1Ev>:
90008bf4:	3804      	subs	r0, #4
90008bf6:	4770      	bx	lr

90008bf8 <_ZN19MainScreenPresenter10deactivateEv>:
}

void MainScreenPresenter::activate()
{

}
90008bf8:	4770      	bx	lr
90008bfa:	bf00      	nop

90008bfc <_ZN19MainScreenPresenterD0Ev>:
90008bfc:	b510      	push	{r4, lr}
90008bfe:	4604      	mov	r4, r0
90008c00:	2110      	movs	r1, #16
90008c02:	f022 fc08 	bl	9002b416 <_ZdlPvj>
90008c06:	4620      	mov	r0, r4
90008c08:	bd10      	pop	{r4, pc}
90008c0a:	bf00      	nop

90008c0c <_ZThn4_N19MainScreenPresenterD0Ev>:
90008c0c:	b500      	push	{lr}
90008c0e:	3804      	subs	r0, #4
90008c10:	b083      	sub	sp, #12
90008c12:	2110      	movs	r1, #16
90008c14:	9001      	str	r0, [sp, #4]
90008c16:	f022 fbfe 	bl	9002b416 <_ZdlPvj>
90008c1a:	9801      	ldr	r0, [sp, #4]
90008c1c:	b003      	add	sp, #12
90008c1e:	f85d fb04 	ldr.w	pc, [sp], #4
90008c22:	bf00      	nop

90008c24 <_ZN19MainScreenPresenterC1ER14MainScreenView>:
    : view(v)
90008c24:	4a06      	ldr	r2, [pc, #24]	; (90008c40 <_ZN19MainScreenPresenterC1ER14MainScreenView+0x1c>)
90008c26:	60c1      	str	r1, [r0, #12]
MainScreenPresenter::MainScreenPresenter(MainScreenView& v)
90008c28:	b410      	push	{r4}
90008c2a:	2400      	movs	r4, #0
90008c2c:	6084      	str	r4, [r0, #8]
    : view(v)
90008c2e:	f102 0408 	add.w	r4, r2, #8
90008c32:	3220      	adds	r2, #32
90008c34:	e9c0 4200 	strd	r4, r2, [r0]
}
90008c38:	f85d 4b04 	ldr.w	r4, [sp], #4
90008c3c:	4770      	bx	lr
90008c3e:	bf00      	nop
90008c40:	9002fa58 	.word	0x9002fa58

90008c44 <_ZN14MainScreenView14tearDownScreenEv>:
}

void MainScreenView::tearDownScreen()
{
    MainScreenViewBase::tearDownScreen();
}
90008c44:	4770      	bx	lr
90008c46:	bf00      	nop

90008c48 <_ZN14MainScreenViewD1Ev>:

class MainScreenView : public MainScreenViewBase
{
public:
    MainScreenView();
    virtual ~MainScreenView() {}
90008c48:	4b03      	ldr	r3, [pc, #12]	; (90008c58 <_ZN14MainScreenViewD1Ev+0x10>)
90008c4a:	b510      	push	{r4, lr}
90008c4c:	4604      	mov	r4, r0
90008c4e:	6003      	str	r3, [r0, #0]
90008c50:	f7ff fc74 	bl	9000853c <_ZN18MainScreenViewBaseD1Ev>
90008c54:	4620      	mov	r0, r4
90008c56:	bd10      	pop	{r4, pc}
90008c58:	9002fa88 	.word	0x9002fa88

90008c5c <_ZN14MainScreenViewD0Ev>:
90008c5c:	4b06      	ldr	r3, [pc, #24]	; (90008c78 <_ZN14MainScreenViewD0Ev+0x1c>)
90008c5e:	b510      	push	{r4, lr}
90008c60:	4604      	mov	r4, r0
90008c62:	6003      	str	r3, [r0, #0]
90008c64:	f7ff fc6a 	bl	9000853c <_ZN18MainScreenViewBaseD1Ev>
90008c68:	f642 11e8 	movw	r1, #10728	; 0x29e8
90008c6c:	4620      	mov	r0, r4
90008c6e:	f022 fbd2 	bl	9002b416 <_ZdlPvj>
90008c72:	4620      	mov	r0, r4
90008c74:	bd10      	pop	{r4, pc}
90008c76:	bf00      	nop
90008c78:	9002fa88 	.word	0x9002fa88

90008c7c <_ZN14MainScreenViewC1Ev>:
MainScreenView::MainScreenView()
90008c7c:	b510      	push	{r4, lr}
90008c7e:	4604      	mov	r4, r0
90008c80:	f7fe f910 	bl	90006ea4 <_ZN18MainScreenViewBaseC1Ev>
90008c84:	4b01      	ldr	r3, [pc, #4]	; (90008c8c <_ZN14MainScreenViewC1Ev+0x10>)
}
90008c86:	4620      	mov	r0, r4
MainScreenView::MainScreenView()
90008c88:	6023      	str	r3, [r4, #0]
}
90008c8a:	bd10      	pop	{r4, pc}
90008c8c:	9002fa88 	.word	0x9002fa88

90008c90 <_ZN14MainScreenView11setupScreenEv>:
    MainScreenViewBase::setupScreen();
90008c90:	f7fe b898 	b.w	90006dc4 <_ZN18MainScreenViewBase11setupScreenEv>

90008c94 <_ZN14MainScreenView15handleTickEventEv>:


void MainScreenView::handleTickEvent()
{
90008c94:	b570      	push	{r4, r5, r6, lr}

	if(isCanbusDataRx==1){
90008c96:	4d0c      	ldr	r5, [pc, #48]	; (90008cc8 <_ZN14MainScreenView15handleTickEventEv+0x34>)
90008c98:	682b      	ldr	r3, [r5, #0]
90008c9a:	2b01      	cmp	r3, #1
90008c9c:	d002      	beq.n	90008ca4 <_ZN14MainScreenView15handleTickEventEv+0x10>

		Tank1Gauge.updateValue(result, 0);
		Tank1LineProgress.updateValue(result, 0);

	}
	isCanbusDataRx=0;
90008c9e:	2300      	movs	r3, #0
90008ca0:	602b      	str	r3, [r5, #0]

}
90008ca2:	bd70      	pop	{r4, r5, r6, pc}
		Tank1Gauge.updateValue(result, 0);
90008ca4:	4e09      	ldr	r6, [pc, #36]	; (90008ccc <_ZN14MainScreenView15handleTickEventEv+0x38>)
90008ca6:	4604      	mov	r4, r0
90008ca8:	2200      	movs	r2, #0
90008caa:	f500 7056 	add.w	r0, r0, #856	; 0x358
90008cae:	6831      	ldr	r1, [r6, #0]
90008cb0:	f00b ff9a 	bl	90014be8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
		Tank1LineProgress.updateValue(result, 0);
90008cb4:	2200      	movs	r2, #0
90008cb6:	6831      	ldr	r1, [r6, #0]
90008cb8:	f504 60ba 	add.w	r0, r4, #1488	; 0x5d0
90008cbc:	f00b ff94 	bl	90014be8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	isCanbusDataRx=0;
90008cc0:	2300      	movs	r3, #0
90008cc2:	602b      	str	r3, [r5, #0]
}
90008cc4:	bd70      	pop	{r4, r5, r6, pc}
90008cc6:	bf00      	nop
90008cc8:	2400db6c 	.word	0x2400db6c
90008ccc:	2400db74 	.word	0x2400db74

90008cd0 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
90008cd0:	2200      	movs	r2, #0
90008cd2:	6002      	str	r2, [r0, #0]
{

}
90008cd4:	4770      	bx	lr
90008cd6:	bf00      	nop

90008cd8 <_ZN5Model4tickEv>:

void Model::tick()
{

}
90008cd8:	4770      	bx	lr
90008cda:	bf00      	nop

90008cdc <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90008cdc:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90008ce0:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90008ce2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90008ce6:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90008cea:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90008cec:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90008cee:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90008cf2:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90008cf6:	4770      	bx	lr

90008cf8 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90008cf8:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90008cfc:	2b01      	cmp	r3, #1
90008cfe:	d102      	bne.n	90008d06 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90008d00:	2300      	movs	r3, #0
90008d02:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
90008d06:	2000      	movs	r0, #0
90008d08:	4770      	bx	lr
90008d0a:	bf00      	nop

90008d0c <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90008d0c:	2000      	movs	r0, #0
90008d0e:	4770      	bx	lr

90008d10 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90008d10:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90008d12:	6904      	ldr	r4, [r0, #16]
90008d14:	8900      	ldrh	r0, [r0, #8]
90008d16:	46a4      	mov	ip, r4
}
90008d18:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90008d1c:	4760      	bx	ip
90008d1e:	bf00      	nop

90008d20 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90008d20:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90008d22:	68c4      	ldr	r4, [r0, #12]
90008d24:	8900      	ldrh	r0, [r0, #8]
90008d26:	46a4      	mov	ip, r4
}
90008d28:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90008d2c:	4760      	bx	ip
90008d2e:	bf00      	nop

90008d30 <FT5336_GestureConfig>:
{
90008d30:	e92d 41b8 	stmdb	sp!, {r3, r4, r5, r7, r8, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90008d34:	f100 0718 	add.w	r7, r0, #24
{
90008d38:	4688      	mov	r8, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90008d3a:	7809      	ldrb	r1, [r1, #0]
90008d3c:	4638      	mov	r0, r7
90008d3e:	f000 f975 	bl	9000902c <ft5336_radian_value>
90008d42:	4605      	mov	r5, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90008d44:	f898 1004 	ldrb.w	r1, [r8, #4]
90008d48:	4638      	mov	r0, r7
90008d4a:	f000 f97d 	bl	90009048 <ft5336_offset_left_right>
90008d4e:	4405      	add	r5, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90008d50:	f898 1008 	ldrb.w	r1, [r8, #8]
90008d54:	4638      	mov	r0, r7
90008d56:	f000 f985 	bl	90009064 <ft5336_offset_up_down>
90008d5a:	4405      	add	r5, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90008d5c:	f898 100c 	ldrb.w	r1, [r8, #12]
90008d60:	4638      	mov	r0, r7
90008d62:	f000 f98d 	bl	90009080 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90008d66:	f898 1010 	ldrb.w	r1, [r8, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90008d6a:	4405      	add	r5, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90008d6c:	4638      	mov	r0, r7
90008d6e:	f000 f995 	bl	9000909c <ft5336_distance_up_down>
90008d72:	4604      	mov	r4, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90008d74:	f898 1014 	ldrb.w	r1, [r8, #20]
90008d78:	4638      	mov	r0, r7
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90008d7a:	442c      	add	r4, r5
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90008d7c:	f000 f99c 	bl	900090b8 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90008d80:	42c4      	cmn	r4, r0
}
90008d82:	bf14      	ite	ne
90008d84:	f04f 30ff 	movne.w	r0, #4294967295
90008d88:	2000      	moveq	r0, #0
90008d8a:	e8bd 81b8 	ldmia.w	sp!, {r3, r4, r5, r7, r8, pc}
90008d8e:	bf00      	nop

90008d90 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90008d90:	3018      	adds	r0, #24
90008d92:	f000 b9ad 	b.w	900090f0 <ft5336_chip_id>
90008d96:	bf00      	nop

90008d98 <FT5336_GetState>:
{
90008d98:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90008d9a:	f100 0518 	add.w	r5, r0, #24
{
90008d9e:	b083      	sub	sp, #12
90008da0:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90008da2:	4628      	mov	r0, r5
90008da4:	a901      	add	r1, sp, #4
90008da6:	f000 f933 	bl	90009010 <ft5336_td_status>
90008daa:	bb10      	cbnz	r0, 90008df2 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90008dac:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90008db0:	2b05      	cmp	r3, #5
90008db2:	bf94      	ite	ls
90008db4:	4619      	movls	r1, r3
90008db6:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90008db8:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90008dba:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90008dbc:	4628      	mov	r0, r5
90008dbe:	2103      	movs	r1, #3
90008dc0:	eb0d 0203 	add.w	r2, sp, r3
90008dc4:	f000 f912 	bl	90008fec <ft5336_read_reg>
90008dc8:	b9b0      	cbnz	r0, 90008df8 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90008dca:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90008dce:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90008dd2:	0212      	lsls	r2, r2, #8
90008dd4:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90008dd8:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90008dda:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90008dde:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90008de2:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90008de4:	f89d 1007 	ldrb.w	r1, [sp, #7]
90008de8:	430b      	orrs	r3, r1
90008dea:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90008dee:	b003      	add	sp, #12
90008df0:	bd30      	pop	{r4, r5, pc}
90008df2:	f04f 31ff 	mov.w	r1, #4294967295
90008df6:	e7df      	b.n	90008db8 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90008df8:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90008dfc:	e7f7      	b.n	90008dee <FT5336_GetState+0x56>
90008dfe:	bf00      	nop

90008e00 <FT5336_GetMultiTouchState>:
{
90008e00:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90008e02:	f100 0518 	add.w	r5, r0, #24
{
90008e06:	b088      	sub	sp, #32
90008e08:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90008e0a:	4628      	mov	r0, r5
90008e0c:	4669      	mov	r1, sp
90008e0e:	f000 f8ff 	bl	90009010 <ft5336_td_status>
90008e12:	2800      	cmp	r0, #0
90008e14:	f040 809a 	bne.w	90008f4c <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90008e18:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90008e1c:	2b05      	cmp	r3, #5
90008e1e:	bf94      	ite	ls
90008e20:	4619      	movls	r1, r3
90008e22:	2100      	movhi	r1, #0
90008e24:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90008e26:	231e      	movs	r3, #30
90008e28:	466a      	mov	r2, sp
90008e2a:	4628      	mov	r0, r5
90008e2c:	2103      	movs	r1, #3
90008e2e:	f000 f8dd 	bl	90008fec <ft5336_read_reg>
90008e32:	2800      	cmp	r0, #0
90008e34:	f040 808d 	bne.w	90008f52 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e38:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008e3c:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e40:	020a      	lsls	r2, r1, #8
90008e42:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008e46:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e48:	f89d c007 	ldrb.w	ip, [sp, #7]
90008e4c:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008e50:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008e52:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008e56:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e5a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008e5c:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008e60:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008e62:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008e64:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e66:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008e68:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008e6c:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008e6e:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e72:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008e76:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008e78:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008e7a:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e7e:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008e80:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008e82:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e84:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008e88:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008e8a:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e8c:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008e90:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008e94:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e96:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008e98:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008e9a:	ea45 050c 	orr.w	r5, r5, ip
90008e9e:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008ea2:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008ea6:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008ea8:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008eaa:	0212      	lsls	r2, r2, #8
90008eac:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008eb0:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008eb2:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008eb6:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008eba:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008ebc:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008ebe:	f89d 300e 	ldrb.w	r3, [sp, #14]
90008ec2:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008ec4:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008ec8:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008eca:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008ecc:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008ed0:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008ed2:	f89d 200f 	ldrb.w	r2, [sp, #15]
90008ed6:	4313      	orrs	r3, r2
90008ed8:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008eda:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008edc:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008ee0:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008ee4:	020a      	lsls	r2, r1, #8
90008ee6:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008eea:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008eec:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008ef0:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008ef2:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008ef6:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008ef8:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008efc:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008efe:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f00:	f89d 1018 	ldrb.w	r1, [sp, #24]
90008f04:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f06:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f08:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008f0a:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008f0e:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f10:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008f14:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f16:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f1a:	f89d 301d 	ldrb.w	r3, [sp, #29]
90008f1e:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008f20:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f22:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008f24:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f28:	6625      	str	r5, [r4, #96]	; 0x60
90008f2a:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f2c:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008f30:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f32:	021b      	lsls	r3, r3, #8
90008f34:	f89d 101b 	ldrb.w	r1, [sp, #27]
90008f38:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90008f3c:	430b      	orrs	r3, r1
90008f3e:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f40:	f89d 3019 	ldrb.w	r3, [sp, #25]
90008f44:	4313      	orrs	r3, r2
90008f46:	6163      	str	r3, [r4, #20]
}
90008f48:	b008      	add	sp, #32
90008f4a:	bd70      	pop	{r4, r5, r6, pc}
90008f4c:	f04f 31ff 	mov.w	r1, #4294967295
90008f50:	e768      	b.n	90008e24 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90008f52:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90008f56:	e7f7      	b.n	90008f48 <FT5336_GetMultiTouchState+0x148>

90008f58 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90008f58:	3018      	adds	r0, #24
90008f5a:	f000 b84f 	b.w	90008ffc <ft5336_gest_id>
90008f5e:	bf00      	nop

90008f60 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90008f60:	2101      	movs	r1, #1
90008f62:	3018      	adds	r0, #24
90008f64:	f000 b8b6 	b.w	900090d4 <ft5336_g_mode>

90008f68 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90008f68:	2100      	movs	r1, #0
90008f6a:	3018      	adds	r0, #24
90008f6c:	f000 b8b2 	b.w	900090d4 <ft5336_g_mode>

90008f70 <FT5336_Init>:
{
90008f70:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90008f72:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90008f76:	b98d      	cbnz	r5, 90008f9c <FT5336_Init+0x2c>
    pObj->IO.Init();
90008f78:	4606      	mov	r6, r0
90008f7a:	4604      	mov	r4, r0
90008f7c:	f856 3b18 	ldr.w	r3, [r6], #24
90008f80:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90008f82:	4629      	mov	r1, r5
90008f84:	4630      	mov	r0, r6
90008f86:	f000 f8a5 	bl	900090d4 <ft5336_g_mode>
  if(ret != FT5336_OK)
90008f8a:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90008f8c:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90008f90:	bf18      	it	ne
90008f92:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90008f94:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
90008f98:	4240      	negs	r0, r0
}
90008f9a:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90008f9c:	2000      	movs	r0, #0
}
90008f9e:	bd70      	pop	{r4, r5, r6, pc}

90008fa0 <FT5336_ClearIT>:
90008fa0:	2000      	movs	r0, #0
90008fa2:	4770      	bx	lr

90008fa4 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90008fa4:	b1d0      	cbz	r0, 90008fdc <FT5336_RegisterBusIO+0x38>
    pObj->IO.Address   = pIO->Address;
90008fa6:	890a      	ldrh	r2, [r1, #8]
{
90008fa8:	b410      	push	{r4}
    pObj->IO.DeInit    = pIO->DeInit;
90008faa:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90008fae:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90008fb0:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.ReadReg   = pIO->ReadReg;
90008fb4:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
    pObj->IO.GetTick   = pIO->GetTick;
90008fb8:	6949      	ldr	r1, [r1, #20]
    pObj->IO.ReadReg   = pIO->ReadReg;
90008fba:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
90008fbc:	6141      	str	r1, [r0, #20]
    pObj->Ctx.WriteReg = WriteRegWrap;
90008fbe:	4a09      	ldr	r2, [pc, #36]	; (90008fe4 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.ReadReg  = ReadRegWrap;
90008fc0:	4909      	ldr	r1, [pc, #36]	; (90008fe8 <FT5336_RegisterBusIO+0x44>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90008fc2:	60c4      	str	r4, [r0, #12]
    pObj->Ctx.handle   = pObj;
90008fc4:	6200      	str	r0, [r0, #32]
    pObj->Ctx.WriteReg = WriteRegWrap;
90008fc6:	e9c0 2106 	strd	r2, r1, [r0, #24]
    if(pObj->IO.Init != NULL)
90008fca:	b113      	cbz	r3, 90008fd2 <FT5336_RegisterBusIO+0x2e>
}
90008fcc:	f85d 4b04 	ldr.w	r4, [sp], #4
      ret = pObj->IO.Init();
90008fd0:	4718      	bx	r3
}
90008fd2:	f04f 30ff 	mov.w	r0, #4294967295
90008fd6:	f85d 4b04 	ldr.w	r4, [sp], #4
90008fda:	4770      	bx	lr
90008fdc:	f04f 30ff 	mov.w	r0, #4294967295
90008fe0:	4770      	bx	lr
90008fe2:	bf00      	nop
90008fe4:	90008d21 	.word	0x90008d21
90008fe8:	90008d11 	.word	0x90008d11

90008fec <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90008fec:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90008fee:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90008ff2:	46a4      	mov	ip, r4
}
90008ff4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90008ff8:	4760      	bx	ip
90008ffa:	bf00      	nop

90008ffc <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90008ffc:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90008ffe:	2301      	movs	r3, #1
{
90009000:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009002:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90009006:	4619      	mov	r1, r3
90009008:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
9000900a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000900e:	4760      	bx	ip

90009010 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90009010:	b538      	push	{r3, r4, r5, lr}
90009012:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009014:	2301      	movs	r3, #1
90009016:	2102      	movs	r1, #2
90009018:	4622      	mov	r2, r4
9000901a:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
9000901e:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90009020:	b918      	cbnz	r0, 9000902a <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90009022:	7823      	ldrb	r3, [r4, #0]
90009024:	f003 030f 	and.w	r3, r3, #15
90009028:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
9000902a:	bd38      	pop	{r3, r4, r5, pc}

9000902c <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
9000902c:	b510      	push	{r4, lr}
9000902e:	460c      	mov	r4, r1
90009030:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009032:	2301      	movs	r3, #1
90009034:	2191      	movs	r1, #145	; 0x91
{
90009036:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000903a:	f10d 0207 	add.w	r2, sp, #7
9000903e:	6804      	ldr	r4, [r0, #0]
90009040:	6880      	ldr	r0, [r0, #8]
90009042:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90009044:	b002      	add	sp, #8
90009046:	bd10      	pop	{r4, pc}

90009048 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009048:	b510      	push	{r4, lr}
9000904a:	460c      	mov	r4, r1
9000904c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000904e:	2301      	movs	r3, #1
90009050:	2192      	movs	r1, #146	; 0x92
{
90009052:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009056:	f10d 0207 	add.w	r2, sp, #7
9000905a:	6804      	ldr	r4, [r0, #0]
9000905c:	6880      	ldr	r0, [r0, #8]
9000905e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90009060:	b002      	add	sp, #8
90009062:	bd10      	pop	{r4, pc}

90009064 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90009064:	b510      	push	{r4, lr}
90009066:	460c      	mov	r4, r1
90009068:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000906a:	2301      	movs	r3, #1
9000906c:	2193      	movs	r1, #147	; 0x93
{
9000906e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009072:	f10d 0207 	add.w	r2, sp, #7
90009076:	6804      	ldr	r4, [r0, #0]
90009078:	6880      	ldr	r0, [r0, #8]
9000907a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
9000907c:	b002      	add	sp, #8
9000907e:	bd10      	pop	{r4, pc}

90009080 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009080:	b510      	push	{r4, lr}
90009082:	460c      	mov	r4, r1
90009084:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009086:	2301      	movs	r3, #1
90009088:	2194      	movs	r1, #148	; 0x94
{
9000908a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000908e:	f10d 0207 	add.w	r2, sp, #7
90009092:	6804      	ldr	r4, [r0, #0]
90009094:	6880      	ldr	r0, [r0, #8]
90009096:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90009098:	b002      	add	sp, #8
9000909a:	bd10      	pop	{r4, pc}

9000909c <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
9000909c:	b510      	push	{r4, lr}
9000909e:	460c      	mov	r4, r1
900090a0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900090a2:	2301      	movs	r3, #1
900090a4:	2195      	movs	r1, #149	; 0x95
{
900090a6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900090aa:	f10d 0207 	add.w	r2, sp, #7
900090ae:	6804      	ldr	r4, [r0, #0]
900090b0:	6880      	ldr	r0, [r0, #8]
900090b2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
900090b4:	b002      	add	sp, #8
900090b6:	bd10      	pop	{r4, pc}

900090b8 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
900090b8:	b510      	push	{r4, lr}
900090ba:	460c      	mov	r4, r1
900090bc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900090be:	2301      	movs	r3, #1
900090c0:	2196      	movs	r1, #150	; 0x96
{
900090c2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900090c6:	f10d 0207 	add.w	r2, sp, #7
900090ca:	6804      	ldr	r4, [r0, #0]
900090cc:	6880      	ldr	r0, [r0, #8]
900090ce:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
900090d0:	b002      	add	sp, #8
900090d2:	bd10      	pop	{r4, pc}

900090d4 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
900090d4:	b510      	push	{r4, lr}
900090d6:	460c      	mov	r4, r1
900090d8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900090da:	2301      	movs	r3, #1
900090dc:	21a4      	movs	r1, #164	; 0xa4
{
900090de:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900090e2:	f10d 0207 	add.w	r2, sp, #7
900090e6:	6804      	ldr	r4, [r0, #0]
900090e8:	6880      	ldr	r0, [r0, #8]
900090ea:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900090ec:	b002      	add	sp, #8
900090ee:	bd10      	pop	{r4, pc}

900090f0 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900090f0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900090f2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
900090f6:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900090f8:	2301      	movs	r3, #1
900090fa:	46a4      	mov	ip, r4
900090fc:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
900090fe:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009102:	4760      	bx	ip

90009104 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90009104:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90009106:	680b      	ldr	r3, [r1, #0]
{
90009108:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000910a:	4c2b      	ldr	r4, [pc, #172]	; (900091b8 <MT48LC4M32B2_Init+0xb4>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000910c:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90009110:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90009112:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90009114:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009116:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90009118:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000911a:	2301      	movs	r3, #1
9000911c:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
9000911e:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009120:	f006 fcce 	bl	9000fac0 <HAL_SDRAM_SendCommand>
90009124:	2800      	cmp	r0, #0
90009126:	d143      	bne.n	900091b0 <MT48LC4M32B2_Init+0xac>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90009128:	f000 ff4c 	bl	90009fc4 <HAL_GetTick>
9000912c:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
9000912e:	f000 ff49 	bl	90009fc4 <HAL_GetTick>
90009132:	4286      	cmp	r6, r0
90009134:	d0fb      	beq.n	9000912e <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90009136:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90009138:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
9000913a:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000913c:	491e      	ldr	r1, [pc, #120]	; (900091b8 <MT48LC4M32B2_Init+0xb4>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000913e:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90009140:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90009142:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009144:	4638      	mov	r0, r7
90009146:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
9000914a:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
9000914c:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000914e:	f006 fcb7 	bl	9000fac0 <HAL_SDRAM_SendCommand>
90009152:	bb68      	cbnz	r0, 900091b0 <MT48LC4M32B2_Init+0xac>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009154:	4918      	ldr	r1, [pc, #96]	; (900091b8 <MT48LC4M32B2_Init+0xb4>)
90009156:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90009158:	e9d5 2300 	ldrd	r2, r3, [r5]
9000915c:	e9c4 3200 	strd	r3, r2, [r4]
  Command.AutoRefreshNumber      = 8;
90009160:	2208      	movs	r2, #8
90009162:	2300      	movs	r3, #0
90009164:	e9c4 2302 	strd	r2, r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009168:	f64f 72ff 	movw	r2, #65535	; 0xffff
9000916c:	f006 fca8 	bl	9000fac0 <HAL_SDRAM_SendCommand>
90009170:	b9f0      	cbnz	r0, 900091b0 <MT48LC4M32B2_Init+0xac>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009172:	4911      	ldr	r1, [pc, #68]	; (900091b8 <MT48LC4M32B2_Init+0xb4>)
90009174:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90009176:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
9000917a:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
9000917c:	696a      	ldr	r2, [r5, #20]
9000917e:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90009180:	69aa      	ldr	r2, [r5, #24]
90009182:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90009184:	69ea      	ldr	r2, [r5, #28]
90009186:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90009188:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
9000918a:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000918c:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
9000918e:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009192:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90009196:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009198:	f006 fc92 	bl	9000fac0 <HAL_SDRAM_SendCommand>
9000919c:	b940      	cbnz	r0, 900091b0 <MT48LC4M32B2_Init+0xac>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
9000919e:	68a9      	ldr	r1, [r5, #8]
900091a0:	4638      	mov	r0, r7
900091a2:	f006 fcad 	bl	9000fb00 <HAL_SDRAM_ProgramRefreshRate>
900091a6:	3800      	subs	r0, #0
900091a8:	bf18      	it	ne
900091aa:	2001      	movne	r0, #1
900091ac:	4240      	negs	r0, r0
}
900091ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
900091b0:	f04f 30ff 	mov.w	r0, #4294967295
}
900091b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900091b6:	bf00      	nop
900091b8:	2400dd20 	.word	0x2400dd20

900091bc <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
900091bc:	4a10      	ldr	r2, [pc, #64]	; (90009200 <BSP_I2C4_DeInit+0x44>)
{
900091be:	b508      	push	{r3, lr}
  I2c4InitCounter--;
900091c0:	6813      	ldr	r3, [r2, #0]
900091c2:	3b01      	subs	r3, #1
900091c4:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
900091c6:	b10b      	cbz	r3, 900091cc <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
900091c8:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
900091ca:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
900091cc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
900091d0:	480c      	ldr	r0, [pc, #48]	; (90009204 <BSP_I2C4_DeInit+0x48>)
900091d2:	f002 f86b 	bl	9000b2ac <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
900091d6:	480b      	ldr	r0, [pc, #44]	; (90009204 <BSP_I2C4_DeInit+0x48>)
900091d8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
900091dc:	f002 f866 	bl	9000b2ac <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900091e0:	4a09      	ldr	r2, [pc, #36]	; (90009208 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900091e2:	480a      	ldr	r0, [pc, #40]	; (9000920c <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900091e4:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
900091e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900091ec:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900091f0:	f002 fafc 	bl	9000b7ec <HAL_I2C_DeInit>
900091f4:	2800      	cmp	r0, #0
900091f6:	d0e7      	beq.n	900091c8 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900091f8:	f06f 0007 	mvn.w	r0, #7
}
900091fc:	bd08      	pop	{r3, pc}
900091fe:	bf00      	nop
90009200:	2400dd30 	.word	0x2400dd30
90009204:	58020c00 	.word	0x58020c00
90009208:	58024400 	.word	0x58024400
9000920c:	2400e738 	.word	0x2400e738

90009210 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90009210:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90009212:	2201      	movs	r2, #1
{
90009214:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90009216:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
9000921a:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
9000921e:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90009222:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90009226:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90009228:	f002 fa88 	bl	9000b73c <HAL_I2C_Init>
9000922c:	b108      	cbz	r0, 90009232 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
9000922e:	2001      	movs	r0, #1
}
90009230:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90009232:	4601      	mov	r1, r0
90009234:	4620      	mov	r0, r4
90009236:	f002 fd93 	bl	9000bd60 <HAL_I2CEx_ConfigAnalogFilter>
9000923a:	2800      	cmp	r0, #0
9000923c:	d1f7      	bne.n	9000922e <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
9000923e:	4601      	mov	r1, r0
90009240:	4620      	mov	r0, r4
90009242:	f002 fdb7 	bl	9000bdb4 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90009246:	3800      	subs	r0, #0
90009248:	bf18      	it	ne
9000924a:	2001      	movne	r0, #1
}
9000924c:	bd10      	pop	{r4, pc}
9000924e:	bf00      	nop

90009250 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90009250:	4b9a      	ldr	r3, [pc, #616]	; (900094bc <BSP_I2C4_Init+0x26c>)
  hbus_i2c4.Instance = BUS_I2C4;
90009252:	489b      	ldr	r0, [pc, #620]	; (900094c0 <BSP_I2C4_Init+0x270>)
90009254:	4a9b      	ldr	r2, [pc, #620]	; (900094c4 <BSP_I2C4_Init+0x274>)
  if (I2c4InitCounter == 0U)
90009256:	6819      	ldr	r1, [r3, #0]
{
90009258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000925c:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
9000925e:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90009260:	9103      	str	r1, [sp, #12]
90009262:	b119      	cbz	r1, 9000926c <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90009264:	2000      	movs	r0, #0
}
90009266:	b01f      	add	sp, #124	; 0x7c
90009268:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
9000926c:	2201      	movs	r2, #1
9000926e:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90009270:	f002 fd70 	bl	9000bd54 <HAL_I2C_GetState>
90009274:	2800      	cmp	r0, #0
90009276:	d1f5      	bne.n	90009264 <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009278:	4c93      	ldr	r4, [pc, #588]	; (900094c8 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000927a:	f44f 5080 	mov.w	r0, #4096	; 0x1000
9000927e:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90009280:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009282:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009286:	2600      	movs	r6, #0
90009288:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000928a:	f043 0308 	orr.w	r3, r3, #8
9000928e:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90009292:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90009296:	f003 0308 	and.w	r3, r3, #8
9000929a:	9315      	str	r3, [sp, #84]	; 0x54
9000929c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000929e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
900092a2:	f043 0308 	orr.w	r3, r3, #8
900092a6:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
900092aa:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900092ae:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900092b0:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900092b4:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900092b8:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900092ba:	a918      	add	r1, sp, #96	; 0x60
900092bc:	4883      	ldr	r0, [pc, #524]	; (900094cc <BSP_I2C4_Init+0x27c>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900092be:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900092c0:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900092c4:	f001 feb8 	bl	9000b038 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900092c8:	2312      	movs	r3, #18
900092ca:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900092ce:	a918      	add	r1, sp, #96	; 0x60
900092d0:	487e      	ldr	r0, [pc, #504]	; (900094cc <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
900092d2:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900092d4:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
900092d8:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900092dc:	f001 feac 	bl	9000b038 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
900092e0:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900092e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900092e8:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
900092ec:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900092f0:	f003 0380 	and.w	r3, r3, #128	; 0x80
900092f4:	9317      	str	r3, [sp, #92]	; 0x5c
900092f6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
900092f8:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
900092fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90009300:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90009304:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90009308:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000930c:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90009310:	f005 faac 	bl	9000e86c <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90009314:	2800      	cmp	r0, #0
90009316:	f000 81f0 	beq.w	900096fa <BSP_I2C4_Init+0x4aa>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000931a:	4b6d      	ldr	r3, [pc, #436]	; (900094d0 <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
9000931c:	f06f 021d 	mvn.w	r2, #29
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009320:	9e03      	ldr	r6, [sp, #12]
  uint32_t prev_presc = I2C_PRESC_MAX;
90009322:	f04f 0b10 	mov.w	fp, #16
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009326:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000932a:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 900094d8 <BSP_I2C4_Init+0x288>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000932e:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009330:	fbb3 f7f0 	udiv	r7, r3, r0
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009334:	f640 13f6 	movw	r3, #2550	; 0x9f6
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009338:	eb07 0147 	add.w	r1, r7, r7, lsl #1
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000933c:	9702      	str	r7, [sp, #8]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000933e:	eba3 0387 	sub.w	r3, r3, r7, lsl #2
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90009342:	1a52      	subs	r2, r2, r1
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009344:	0079      	lsls	r1, r7, #1
90009346:	ea23 7ce3 	bic.w	ip, r3, r3, asr #31
9000934a:	4b62      	ldr	r3, [pc, #392]	; (900094d4 <BSP_I2C4_Init+0x284>)
9000934c:	ea22 74e2 	bic.w	r4, r2, r2, asr #31
90009350:	9113      	str	r1, [sp, #76]	; 0x4c
90009352:	681b      	ldr	r3, [r3, #0]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009354:	4699      	mov	r9, r3
90009356:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009358:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
9000935c:	46b8      	mov	r8, r7
9000935e:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90009362:	bf94      	ite	ls
90009364:	2101      	movls	r1, #1
90009366:	2100      	movhi	r1, #0
90009368:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
9000936c:	f001 0101 	and.w	r1, r1, #1
90009370:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90009374:	bf38      	it	cc
90009376:	2100      	movcc	r1, #0
90009378:	429c      	cmp	r4, r3
9000937a:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
9000937e:	9105      	str	r1, [sp, #20]
90009380:	bf8c      	ite	hi
90009382:	2100      	movhi	r1, #0
90009384:	2101      	movls	r1, #1
90009386:	459c      	cmp	ip, r3
90009388:	bf38      	it	cc
9000938a:	2100      	movcc	r1, #0
9000938c:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90009390:	9106      	str	r1, [sp, #24]
90009392:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90009396:	9104      	str	r1, [sp, #16]
90009398:	eb07 0183 	add.w	r1, r7, r3, lsl #2
9000939c:	9111      	str	r1, [sp, #68]	; 0x44
9000939e:	bf94      	ite	ls
900093a0:	2101      	movls	r1, #1
900093a2:	2100      	movhi	r1, #0
900093a4:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
900093a8:	f001 0e01 	and.w	lr, r1, #1
900093ac:	bf38      	it	cc
900093ae:	f04f 0e00 	movcc.w	lr, #0
900093b2:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900093b4:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900093b8:	f8cd e01c 	str.w	lr, [sp, #28]
900093bc:	bf8c      	ite	hi
900093be:	f04f 0e00 	movhi.w	lr, #0
900093c2:	f04f 0e01 	movls.w	lr, #1
900093c6:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900093c8:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900093ca:	bf38      	it	cc
900093cc:	f04f 0e00 	movcc.w	lr, #0
900093d0:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
900093d4:	bf98      	it	ls
900093d6:	2101      	movls	r1, #1
900093d8:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
900093dc:	f8cd e020 	str.w	lr, [sp, #32]
900093e0:	f001 0101 	and.w	r1, r1, #1
900093e4:	bf38      	it	cc
900093e6:	2100      	movcc	r1, #0
900093e8:	4284      	cmp	r4, r0
900093ea:	9109      	str	r1, [sp, #36]	; 0x24
900093ec:	4601      	mov	r1, r0
900093ee:	bf8c      	ite	hi
900093f0:	2000      	movhi	r0, #0
900093f2:	2001      	movls	r0, #1
900093f4:	458c      	cmp	ip, r1
900093f6:	bf38      	it	cc
900093f8:	2000      	movcc	r0, #0
900093fa:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
900093fe:	900b      	str	r0, [sp, #44]	; 0x2c
90009400:	bf94      	ite	ls
90009402:	2001      	movls	r0, #1
90009404:	2000      	movhi	r0, #0
90009406:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
9000940a:	f000 0001 	and.w	r0, r0, #1
9000940e:	bf38      	it	cc
90009410:	2000      	movcc	r0, #0
90009412:	900c      	str	r0, [sp, #48]	; 0x30
90009414:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90009418:	4284      	cmp	r4, r0
9000941a:	bf8c      	ite	hi
9000941c:	f04f 0e00 	movhi.w	lr, #0
90009420:	f04f 0e01 	movls.w	lr, #1
90009424:	4584      	cmp	ip, r0
90009426:	bf38      	it	cc
90009428:	f04f 0e00 	movcc.w	lr, #0
9000942c:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90009430:	4670      	mov	r0, lr
90009432:	bf94      	ite	ls
90009434:	2001      	movls	r0, #1
90009436:	2000      	movhi	r0, #0
90009438:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
9000943c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90009440:	f04f 0e00 	mov.w	lr, #0
90009444:	f000 0001 	and.w	r0, r0, #1
90009448:	bf38      	it	cc
9000944a:	2000      	movcc	r0, #0
9000944c:	900e      	str	r0, [sp, #56]	; 0x38
9000944e:	9804      	ldr	r0, [sp, #16]
90009450:	4284      	cmp	r4, r0
90009452:	4602      	mov	r2, r0
90009454:	bf8c      	ite	hi
90009456:	2200      	movhi	r2, #0
90009458:	2201      	movls	r2, #1
9000945a:	4584      	cmp	ip, r0
9000945c:	bf38      	it	cc
9000945e:	2200      	movcc	r2, #0
90009460:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90009464:	920f      	str	r2, [sp, #60]	; 0x3c
90009466:	bf94      	ite	ls
90009468:	2201      	movls	r2, #1
9000946a:	2200      	movhi	r2, #0
9000946c:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90009470:	f002 0201 	and.w	r2, r2, #1
90009474:	bf38      	it	cc
90009476:	2200      	movcc	r2, #0
90009478:	9210      	str	r2, [sp, #64]	; 0x40
9000947a:	9a11      	ldr	r2, [sp, #68]	; 0x44
9000947c:	4294      	cmp	r4, r2
9000947e:	4613      	mov	r3, r2
90009480:	bf8c      	ite	hi
90009482:	2300      	movhi	r3, #0
90009484:	2301      	movls	r3, #1
90009486:	4594      	cmp	ip, r2
90009488:	bf38      	it	cc
9000948a:	2300      	movcc	r3, #0
9000948c:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90009490:	9311      	str	r3, [sp, #68]	; 0x44
90009492:	bf94      	ite	ls
90009494:	2301      	movls	r3, #1
90009496:	2300      	movhi	r3, #0
90009498:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
9000949c:	f003 0301 	and.w	r3, r3, #1
900094a0:	bf38      	it	cc
900094a2:	2300      	movcc	r3, #0
900094a4:	9312      	str	r3, [sp, #72]	; 0x48
900094a6:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
900094aa:	429c      	cmp	r4, r3
900094ac:	bf8c      	ite	hi
900094ae:	2200      	movhi	r2, #0
900094b0:	2201      	movls	r2, #1
900094b2:	459c      	cmp	ip, r3
900094b4:	bf38      	it	cc
900094b6:	2200      	movcc	r2, #0
900094b8:	9204      	str	r2, [sp, #16]
900094ba:	e014      	b.n	900094e6 <BSP_I2C4_Init+0x296>
900094bc:	2400dd30 	.word	0x2400dd30
900094c0:	2400e738 	.word	0x2400e738
900094c4:	58001c00 	.word	0x58001c00
900094c8:	58024400 	.word	0x58024400
900094cc:	58020c00 	.word	0x58020c00
900094d0:	3b9aca00 	.word	0x3b9aca00
900094d4:	2400e734 	.word	0x2400e734
900094d8:	2400dd34 	.word	0x2400dd34
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900094dc:	f1be 0f10 	cmp.w	lr, #16
900094e0:	44b8      	add	r8, r7
900094e2:	f000 826b 	beq.w	900099bc <BSP_I2C4_Init+0x76c>
      if (tscldel >= (uint32_t)tscldel_min)
900094e6:	f240 3279 	movw	r2, #889	; 0x379
900094ea:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
900094ec:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
900094f0:	4590      	cmp	r8, r2
900094f2:	d9f3      	bls.n	900094dc <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
900094f4:	ebbb 0105 	subs.w	r1, fp, r5
900094f8:	bf18      	it	ne
900094fa:	2101      	movne	r1, #1
900094fc:	2c00      	cmp	r4, #0
900094fe:	bf18      	it	ne
90009500:	2100      	movne	r1, #0
90009502:	2900      	cmp	r1, #0
90009504:	f040 8248 	bne.w	90009998 <BSP_I2C4_Init+0x748>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009508:	42bc      	cmp	r4, r7
9000950a:	bf8c      	ite	hi
9000950c:	2100      	movhi	r1, #0
9000950e:	2101      	movls	r1, #1
90009510:	45bc      	cmp	ip, r7
90009512:	bf38      	it	cc
90009514:	2100      	movcc	r1, #0
            if(presc != prev_presc)
90009516:	45ab      	cmp	fp, r5
90009518:	bf0c      	ite	eq
9000951a:	2100      	moveq	r1, #0
9000951c:	f001 0101 	andne.w	r1, r1, #1
90009520:	2900      	cmp	r1, #0
90009522:	f000 821d 	beq.w	90009960 <BSP_I2C4_Init+0x710>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009526:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000952a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000952e:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009530:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009534:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009538:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000953c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000953e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009540:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009542:	f200 8116 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
90009546:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009548:	9e06      	ldr	r6, [sp, #24]
9000954a:	45ab      	cmp	fp, r5
9000954c:	bf0c      	ite	eq
9000954e:	2600      	moveq	r6, #0
90009550:	f006 0601 	andne.w	r6, r6, #1
90009554:	2e00      	cmp	r6, #0
90009556:	f000 81cb 	beq.w	900098f0 <BSP_I2C4_Init+0x6a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000955a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000955e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009562:	2103      	movs	r1, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009564:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009568:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000956c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009570:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009572:	6091      	str	r1, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009574:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009576:	f200 80fc 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
9000957a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000957c:	9808      	ldr	r0, [sp, #32]
9000957e:	455d      	cmp	r5, fp
90009580:	bf0c      	ite	eq
90009582:	2000      	moveq	r0, #0
90009584:	f000 0001 	andne.w	r0, r0, #1
90009588:	2800      	cmp	r0, #0
9000958a:	f000 81e7 	beq.w	9000995c <BSP_I2C4_Init+0x70c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000958e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009592:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009596:	2105      	movs	r1, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009598:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000959c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900095a0:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900095a4:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900095a6:	6091      	str	r1, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900095a8:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900095aa:	f200 80e2 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
900095ae:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900095b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
900095b2:	455d      	cmp	r5, fp
900095b4:	bf0c      	ite	eq
900095b6:	2100      	moveq	r1, #0
900095b8:	f001 0101 	andne.w	r1, r1, #1
900095bc:	2900      	cmp	r1, #0
900095be:	f000 817b 	beq.w	900098b8 <BSP_I2C4_Init+0x668>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900095c2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900095c6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900095ca:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900095cc:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900095d0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900095d4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900095d8:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900095da:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900095dc:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900095de:	f200 80c8 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
900095e2:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900095e4:	980d      	ldr	r0, [sp, #52]	; 0x34
900095e6:	455d      	cmp	r5, fp
900095e8:	bf0c      	ite	eq
900095ea:	2000      	moveq	r0, #0
900095ec:	f000 0001 	andne.w	r0, r0, #1
900095f0:	2800      	cmp	r0, #0
900095f2:	f000 8143 	beq.w	9000987c <BSP_I2C4_Init+0x62c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900095f6:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900095fa:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900095fe:	2109      	movs	r1, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009600:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009604:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009608:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000960c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000960e:	6091      	str	r1, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009610:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009612:	f200 80ae 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
90009616:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009618:	990f      	ldr	r1, [sp, #60]	; 0x3c
9000961a:	455d      	cmp	r5, fp
9000961c:	bf0c      	ite	eq
9000961e:	2100      	moveq	r1, #0
90009620:	f001 0101 	andne.w	r1, r1, #1
90009624:	2900      	cmp	r1, #0
90009626:	d072      	beq.n	9000970e <BSP_I2C4_Init+0x4be>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009628:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000962c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009630:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009632:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009636:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000963a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000963e:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009640:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009642:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009644:	f200 8095 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
90009648:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000964a:	9811      	ldr	r0, [sp, #68]	; 0x44
9000964c:	455d      	cmp	r5, fp
9000964e:	bf0c      	ite	eq
90009650:	2000      	moveq	r0, #0
90009652:	f000 0001 	andne.w	r0, r0, #1
90009656:	2800      	cmp	r0, #0
90009658:	d073      	beq.n	90009742 <BSP_I2C4_Init+0x4f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000965a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000965e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009662:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009664:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009668:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000966c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009670:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009672:	6091      	str	r1, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009674:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009676:	d87c      	bhi.n	90009772 <BSP_I2C4_Init+0x522>
90009678:	4601      	mov	r1, r0
9000967a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000967c:	9e04      	ldr	r6, [sp, #16]
9000967e:	455d      	cmp	r5, fp
90009680:	bf0c      	ite	eq
90009682:	2600      	moveq	r6, #0
90009684:	f006 0601 	andne.w	r6, r6, #1
90009688:	2e00      	cmp	r6, #0
9000968a:	f000 80f5 	beq.w	90009878 <BSP_I2C4_Init+0x628>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000968e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009692:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009696:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
9000969a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000969e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900096a2:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900096a4:	f04f 030f 	mov.w	r3, #15
900096a8:	6093      	str	r3, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900096aa:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900096ac:	d861      	bhi.n	90009772 <BSP_I2C4_Init+0x522>
900096ae:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900096b0:	e714      	b.n	900094dc <BSP_I2C4_Init+0x28c>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900096b2:	9a07      	ldr	r2, [sp, #28]
900096b4:	9b08      	ldr	r3, [sp, #32]
900096b6:	3214      	adds	r2, #20
900096b8:	3301      	adds	r3, #1
900096ba:	9207      	str	r2, [sp, #28]
900096bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900096be:	9308      	str	r3, [sp, #32]
900096c0:	4293      	cmp	r3, r2
900096c2:	d177      	bne.n	900097b4 <BSP_I2C4_Init+0x564>
        if (idx < I2C_VALID_TIMING_NBR)
900096c4:	297f      	cmp	r1, #127	; 0x7f
900096c6:	d818      	bhi.n	900096fa <BSP_I2C4_Init+0x4aa>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900096c8:	eb01 0381 	add.w	r3, r1, r1, lsl #2
900096cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
900096ce:	eb01 0283 	add.w	r2, r1, r3, lsl #2
900096d2:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900096d6:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900096d8:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900096da:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900096dc:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900096e0:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900096e4:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900096e8:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900096ea:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900096ec:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900096ee:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900096f2:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900096f4:	430b      	orrs	r3, r1
900096f6:	4313      	orrs	r3, r2
900096f8:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900096fa:	9903      	ldr	r1, [sp, #12]
900096fc:	48b9      	ldr	r0, [pc, #740]	; (900099e4 <BSP_I2C4_Init+0x794>)
900096fe:	f7ff fd87 	bl	90009210 <MX_I2C4_Init>
90009702:	2800      	cmp	r0, #0
90009704:	f43f adae 	beq.w	90009264 <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
90009708:	f06f 0007 	mvn.w	r0, #7
  return ret;
9000970c:	e5ab      	b.n	90009266 <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
9000970e:	4606      	mov	r6, r0
90009710:	9910      	ldr	r1, [sp, #64]	; 0x40
90009712:	455d      	cmp	r5, fp
90009714:	bf0c      	ite	eq
90009716:	2100      	moveq	r1, #0
90009718:	f001 0101 	andne.w	r1, r1, #1
9000971c:	2900      	cmp	r1, #0
9000971e:	f000 80c9 	beq.w	900098b4 <BSP_I2C4_Init+0x664>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009722:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009726:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000972a:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000972c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009730:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009734:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009738:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000973a:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000973c:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000973e:	d818      	bhi.n	90009772 <BSP_I2C4_Init+0x522>
90009740:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009742:	9e12      	ldr	r6, [sp, #72]	; 0x48
90009744:	455d      	cmp	r5, fp
90009746:	bf0c      	ite	eq
90009748:	2600      	moveq	r6, #0
9000974a:	f006 0601 	andne.w	r6, r6, #1
9000974e:	2e00      	cmp	r6, #0
90009750:	d094      	beq.n	9000967c <BSP_I2C4_Init+0x42c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009752:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009756:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000975a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
9000975e:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009762:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009766:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009768:	f04f 030e 	mov.w	r3, #14
9000976c:	6093      	str	r3, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000976e:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009770:	d99d      	bls.n	900096ae <BSP_I2C4_Init+0x45e>
90009772:	4b9d      	ldr	r3, [pc, #628]	; (900099e8 <BSP_I2C4_Init+0x798>)
90009774:	920b      	str	r2, [sp, #44]	; 0x2c
90009776:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
9000977a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9000977e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90009780:	f241 220c 	movw	r2, #4620	; 0x120c
90009784:	f640 769f 	movw	r6, #3999	; 0xf9f
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90009788:	f242 7a10 	movw	sl, #10000	; 0x2710
9000978c:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000978e:	f241 0b47 	movw	fp, #4167	; 0x1047
90009792:	920c      	str	r2, [sp, #48]	; 0x30
90009794:	9a02      	ldr	r2, [sp, #8]
90009796:	4296      	cmp	r6, r2
90009798:	bf38      	it	cc
9000979a:	4616      	movcc	r6, r2
9000979c:	4a93      	ldr	r2, [pc, #588]	; (900099ec <BSP_I2C4_Init+0x79c>)
9000979e:	189a      	adds	r2, r3, r2
900097a0:	3332      	adds	r3, #50	; 0x32
900097a2:	930d      	str	r3, [sp, #52]	; 0x34
900097a4:	4b92      	ldr	r3, [pc, #584]	; (900099f0 <BSP_I2C4_Init+0x7a0>)
900097a6:	920e      	str	r2, [sp, #56]	; 0x38
900097a8:	9307      	str	r3, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900097aa:	2300      	movs	r3, #0
900097ac:	9308      	str	r3, [sp, #32]
900097ae:	f04f 33ff 	mov.w	r3, #4294967295
900097b2:	4619      	mov	r1, r3
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900097b4:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900097b6:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900097ba:	6818      	ldr	r0, [r3, #0]
900097bc:	9b02      	ldr	r3, [sp, #8]
900097be:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900097c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900097c4:	1a1b      	subs	r3, r3, r0
900097c6:	ea4f 0943 	mov.w	r9, r3, lsl #1
900097ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900097cc:	eb03 0e00 	add.w	lr, r3, r0
900097d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900097d2:	4403      	add	r3, r0
900097d4:	9309      	str	r3, [sp, #36]	; 0x24
900097d6:	e006      	b.n	900097e6 <BSP_I2C4_Init+0x596>
900097d8:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
900097dc:	4486      	add	lr, r0
900097de:	eba9 0900 	sub.w	r9, r9, r0
900097e2:	f43f af66 	beq.w	900096b2 <BSP_I2C4_Init+0x462>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900097e6:	f241 225c 	movw	r2, #4700	; 0x125c
900097ea:	f8cd 8004 	str.w	r8, [sp, #4]
900097ee:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900097f2:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900097f6:	4596      	cmp	lr, r2
900097f8:	d9ee      	bls.n	900097d8 <BSP_I2C4_Init+0x588>
900097fa:	9a02      	ldr	r2, [sp, #8]
900097fc:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
90009800:	d2ea      	bcs.n	900097d8 <BSP_I2C4_Init+0x588>
90009802:	f242 4c4a 	movw	ip, #9290	; 0x244a
90009806:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90009808:	f8cd 8010 	str.w	r8, [sp, #16]
9000980c:	2200      	movs	r2, #0
9000980e:	ebac 0c03 	sub.w	ip, ip, r3
90009812:	9b09      	ldr	r3, [sp, #36]	; 0x24
90009814:	f8cd e014 	str.w	lr, [sp, #20]
90009818:	4473      	add	r3, lr
9000981a:	f8cd 9018 	str.w	r9, [sp, #24]
9000981e:	f8dd 801c 	ldr.w	r8, [sp, #28]
90009822:	468e      	mov	lr, r1
90009824:	f8dd 9020 	ldr.w	r9, [sp, #32]
90009828:	e005      	b.n	90009836 <BSP_I2C4_Init+0x5e6>
9000982a:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9000982e:	eba4 0400 	sub.w	r4, r4, r0
90009832:	4403      	add	r3, r0
90009834:	d01a      	beq.n	9000986c <BSP_I2C4_Init+0x61c>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90009836:	eb0c 0103 	add.w	r1, ip, r3
9000983a:	4617      	mov	r7, r2
9000983c:	f203 6583 	addw	r5, r3, #1667	; 0x683
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90009840:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90009842:	42b1      	cmp	r1, r6
90009844:	d9f1      	bls.n	9000982a <BSP_I2C4_Init+0x5da>
90009846:	455d      	cmp	r5, fp
90009848:	d8ef      	bhi.n	9000982a <BSP_I2C4_Init+0x5da>
            if (error < 0)
9000984a:	ea33 0123 	bics.w	r1, r3, r3, asr #32
9000984e:	bf28      	it	cs
90009850:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90009852:	458a      	cmp	sl, r1
90009854:	d9e9      	bls.n	9000982a <BSP_I2C4_Init+0x5da>
              I2c_valid_timing[count].sclh = sclh;
90009856:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90009858:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
9000985c:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
9000985e:	46ce      	mov	lr, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90009860:	eba4 0400 	sub.w	r4, r4, r0
90009864:	4403      	add	r3, r0
              I2c_valid_timing[count].sclh = sclh;
90009866:	e9c8 7103 	strd	r7, r1, [r8, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000986a:	d1e4      	bne.n	90009836 <BSP_I2C4_Init+0x5e6>
9000986c:	4671      	mov	r1, lr
9000986e:	f8dd 8010 	ldr.w	r8, [sp, #16]
90009872:	e9dd e905 	ldrd	lr, r9, [sp, #20]
90009876:	e7af      	b.n	900097d8 <BSP_I2C4_Init+0x588>
90009878:	460e      	mov	r6, r1
9000987a:	e62f      	b.n	900094dc <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
9000987c:	4608      	mov	r0, r1
9000987e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90009880:	455d      	cmp	r5, fp
90009882:	bf0c      	ite	eq
90009884:	2600      	moveq	r6, #0
90009886:	f006 0601 	andne.w	r6, r6, #1
9000988a:	2e00      	cmp	r6, #0
9000988c:	f43f aec4 	beq.w	90009618 <BSP_I2C4_Init+0x3c8>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009890:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009894:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009898:	210a      	movs	r1, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000989a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000989e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098a2:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900098a6:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900098a8:	6091      	str	r1, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098aa:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900098ac:	f63f af61 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
900098b0:	46ab      	mov	fp, r5
900098b2:	e72d      	b.n	90009710 <BSP_I2C4_Init+0x4c0>
            if(presc != prev_presc)
900098b4:	4631      	mov	r1, r6
900098b6:	e6c8      	b.n	9000964a <BSP_I2C4_Init+0x3fa>
900098b8:	4601      	mov	r1, r0
900098ba:	980c      	ldr	r0, [sp, #48]	; 0x30
900098bc:	455d      	cmp	r5, fp
900098be:	bf0c      	ite	eq
900098c0:	2000      	moveq	r0, #0
900098c2:	f000 0001 	andne.w	r0, r0, #1
900098c6:	2800      	cmp	r0, #0
900098c8:	f43f ae8c 	beq.w	900095e4 <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098cc:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900098d0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900098d4:	2108      	movs	r1, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098d6:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900098da:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098de:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900098e2:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900098e4:	6091      	str	r1, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098e6:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900098e8:	f63f af43 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
900098ec:	46ab      	mov	fp, r5
900098ee:	e7c6      	b.n	9000987e <BSP_I2C4_Init+0x62e>
            if(presc != prev_presc)
900098f0:	460e      	mov	r6, r1
900098f2:	9807      	ldr	r0, [sp, #28]
900098f4:	455d      	cmp	r5, fp
900098f6:	bf0c      	ite	eq
900098f8:	2000      	moveq	r0, #0
900098fa:	f000 0001 	andne.w	r0, r0, #1
900098fe:	2800      	cmp	r0, #0
90009900:	f43f ae3c 	beq.w	9000957c <BSP_I2C4_Init+0x32c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009904:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009908:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000990c:	2104      	movs	r1, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000990e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009912:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009916:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000991a:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000991c:	6091      	str	r1, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000991e:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009920:	f63f af27 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
90009924:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009926:	9909      	ldr	r1, [sp, #36]	; 0x24
90009928:	455d      	cmp	r5, fp
9000992a:	bf0c      	ite	eq
9000992c:	2100      	moveq	r1, #0
9000992e:	f001 0101 	andne.w	r1, r1, #1
90009932:	2900      	cmp	r1, #0
90009934:	f43f ae3c 	beq.w	900095b0 <BSP_I2C4_Init+0x360>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009938:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000993c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009940:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009942:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009946:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000994a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000994e:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009950:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009952:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009954:	f63f af0d 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
90009958:	46ab      	mov	fp, r5
9000995a:	e7ae      	b.n	900098ba <BSP_I2C4_Init+0x66a>
            if(presc != prev_presc)
9000995c:	4630      	mov	r0, r6
9000995e:	e7e2      	b.n	90009926 <BSP_I2C4_Init+0x6d6>
90009960:	4631      	mov	r1, r6
90009962:	9e05      	ldr	r6, [sp, #20]
90009964:	45ab      	cmp	fp, r5
90009966:	bf0c      	ite	eq
90009968:	2600      	moveq	r6, #0
9000996a:	f006 0601 	andne.w	r6, r6, #1
9000996e:	2e00      	cmp	r6, #0
90009970:	f43f adea 	beq.w	90009548 <BSP_I2C4_Init+0x2f8>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009974:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009978:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000997c:	2102      	movs	r1, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000997e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009982:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009986:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000998a:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000998c:	6091      	str	r1, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000998e:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009990:	f63f aeef 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
90009994:	46ab      	mov	fp, r5
90009996:	e7ac      	b.n	900098f2 <BSP_I2C4_Init+0x6a2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009998:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000999c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900099a0:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900099a2:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900099a6:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900099aa:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900099ae:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900099b0:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900099b2:	4652      	mov	r2, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900099b4:	f63f aedd 	bhi.w	90009772 <BSP_I2C4_Init+0x522>
900099b8:	46ab      	mov	fp, r5
900099ba:	e7d2      	b.n	90009962 <BSP_I2C4_Init+0x712>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900099bc:	3501      	adds	r5, #1
900099be:	9b02      	ldr	r3, [sp, #8]
900099c0:	2d10      	cmp	r5, #16
900099c2:	441f      	add	r7, r3
900099c4:	f47f acc8 	bne.w	90009358 <BSP_I2C4_Init+0x108>
900099c8:	b126      	cbz	r6, 900099d4 <BSP_I2C4_Init+0x784>
900099ca:	4b07      	ldr	r3, [pc, #28]	; (900099e8 <BSP_I2C4_Init+0x798>)
900099cc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
900099d0:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900099d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900099d6:	2b00      	cmp	r3, #0
900099d8:	f43f ae8f 	beq.w	900096fa <BSP_I2C4_Init+0x4aa>
900099dc:	4b04      	ldr	r3, [pc, #16]	; (900099f0 <BSP_I2C4_Init+0x7a0>)
900099de:	930b      	str	r3, [sp, #44]	; 0x2c
900099e0:	e6cd      	b.n	9000977e <BSP_I2C4_Init+0x52e>
900099e2:	bf00      	nop
900099e4:	2400e738 	.word	0x2400e738
900099e8:	2400e734 	.word	0x2400e734
900099ec:	ffffdbb6 	.word	0xffffdbb6
900099f0:	2400dd34 	.word	0x2400dd34

900099f4 <BSP_I2C4_WriteReg>:
{
900099f4:	b530      	push	{r4, r5, lr}
900099f6:	4614      	mov	r4, r2
900099f8:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900099fa:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
900099fe:	460a      	mov	r2, r1
90009a00:	9301      	str	r3, [sp, #4]
90009a02:	4601      	mov	r1, r0
90009a04:	2301      	movs	r3, #1
90009a06:	4809      	ldr	r0, [pc, #36]	; (90009a2c <BSP_I2C4_WriteReg+0x38>)
90009a08:	9502      	str	r5, [sp, #8]
90009a0a:	9400      	str	r4, [sp, #0]
90009a0c:	f001 ff08 	bl	9000b820 <HAL_I2C_Mem_Write>
90009a10:	b908      	cbnz	r0, 90009a16 <BSP_I2C4_WriteReg+0x22>
}
90009a12:	b005      	add	sp, #20
90009a14:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90009a16:	4805      	ldr	r0, [pc, #20]	; (90009a2c <BSP_I2C4_WriteReg+0x38>)
90009a18:	f002 f9a0 	bl	9000bd5c <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90009a1c:	2804      	cmp	r0, #4
90009a1e:	bf0c      	ite	eq
90009a20:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90009a24:	f06f 0003 	mvnne.w	r0, #3
90009a28:	e7f3      	b.n	90009a12 <BSP_I2C4_WriteReg+0x1e>
90009a2a:	bf00      	nop
90009a2c:	2400e738 	.word	0x2400e738

90009a30 <BSP_I2C4_ReadReg>:
{
90009a30:	b530      	push	{r4, r5, lr}
90009a32:	4614      	mov	r4, r2
90009a34:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90009a36:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
90009a3a:	460a      	mov	r2, r1
90009a3c:	9301      	str	r3, [sp, #4]
90009a3e:	4601      	mov	r1, r0
90009a40:	2301      	movs	r3, #1
90009a42:	4809      	ldr	r0, [pc, #36]	; (90009a68 <BSP_I2C4_ReadReg+0x38>)
90009a44:	9502      	str	r5, [sp, #8]
90009a46:	9400      	str	r4, [sp, #0]
90009a48:	f002 f81e 	bl	9000ba88 <HAL_I2C_Mem_Read>
90009a4c:	b908      	cbnz	r0, 90009a52 <BSP_I2C4_ReadReg+0x22>
}
90009a4e:	b005      	add	sp, #20
90009a50:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90009a52:	4805      	ldr	r0, [pc, #20]	; (90009a68 <BSP_I2C4_ReadReg+0x38>)
90009a54:	f002 f982 	bl	9000bd5c <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90009a58:	2804      	cmp	r0, #4
90009a5a:	bf0c      	ite	eq
90009a5c:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90009a60:	f06f 0003 	mvnne.w	r0, #3
90009a64:	e7f3      	b.n	90009a4e <BSP_I2C4_ReadReg+0x1e>
90009a66:	bf00      	nop
90009a68:	2400e738 	.word	0x2400e738

90009a6c <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90009a6c:	f000 baaa 	b.w	90009fc4 <HAL_GetTick>

90009a70 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90009a70:	b970      	cbnz	r0, 90009a90 <BSP_SDRAM_DeInit+0x20>
{
90009a72:	b510      	push	{r4, lr}
90009a74:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90009a76:	4808      	ldr	r0, [pc, #32]	; (90009a98 <BSP_SDRAM_DeInit+0x28>)
90009a78:	f006 f814 	bl	9000faa4 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90009a7c:	207a      	movs	r0, #122	; 0x7a
90009a7e:	f000 fb0b 	bl	9000a098 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90009a82:	4b06      	ldr	r3, [pc, #24]	; (90009a9c <BSP_SDRAM_DeInit+0x2c>)
90009a84:	4806      	ldr	r0, [pc, #24]	; (90009aa0 <BSP_SDRAM_DeInit+0x30>)
90009a86:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90009a88:	f003 ff4c 	bl	9000d924 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90009a8c:	4620      	mov	r0, r4
}
90009a8e:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90009a90:	f06f 0001 	mvn.w	r0, #1
}
90009a94:	4770      	bx	lr
90009a96:	bf00      	nop
90009a98:	2400e78c 	.word	0x2400e78c
90009a9c:	52000040 	.word	0x52000040
90009aa0:	2400e7c0 	.word	0x2400e7c0

90009aa4 <MX_SDRAM_BANK2_Init>:
{
90009aa4:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90009aa6:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90009aa8:	2200      	movs	r2, #0
  hsdram->Instance = FMC_SDRAM_DEVICE;
90009aaa:	4c15      	ldr	r4, [pc, #84]	; (90009b00 <MX_SDRAM_BANK2_Init+0x5c>)
{
90009aac:	b089      	sub	sp, #36	; 0x24
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90009aae:	60c1      	str	r1, [r0, #12]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90009ab0:	2140      	movs	r1, #64	; 0x40
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90009ab2:	6082      	str	r2, [r0, #8]
  sdram_timing.LoadToActiveDelay    = 2;
90009ab4:	2307      	movs	r3, #7
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90009ab6:	61c2      	str	r2, [r0, #28]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90009ab8:	f44f 75c0 	mov.w	r5, #384	; 0x180
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90009abc:	6282      	str	r2, [r0, #40]	; 0x28
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90009abe:	2201      	movs	r2, #1
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90009ac0:	6185      	str	r5, [r0, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90009ac2:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90009ac4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90009ac8:	6161      	str	r1, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90009aca:	f44f 6100 	mov.w	r1, #2048	; 0x800
90009ace:	e9c0 1208 	strd	r1, r2, [r0, #32]
  sdram_timing.LoadToActiveDelay    = 2;
90009ad2:	2202      	movs	r2, #2
  sdram_timing.RCDDelay             = 2;
90009ad4:	2102      	movs	r1, #2
  sdram_timing.LoadToActiveDelay    = 2;
90009ad6:	e9cd 2300 	strd	r2, r3, [sp]
90009ada:	2204      	movs	r2, #4
90009adc:	2307      	movs	r3, #7
  sdram_timing.RCDDelay             = 2;
90009ade:	9106      	str	r1, [sp, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90009ae0:	4669      	mov	r1, sp
  sdram_timing.LoadToActiveDelay    = 2;
90009ae2:	e9cd 2302 	strd	r2, r3, [sp, #8]
90009ae6:	2202      	movs	r2, #2
90009ae8:	2302      	movs	r3, #2
90009aea:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90009aee:	4b05      	ldr	r3, [pc, #20]	; (90009b04 <MX_SDRAM_BANK2_Init+0x60>)
90009af0:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90009af2:	f005 ffad 	bl	9000fa50 <HAL_SDRAM_Init>
}
90009af6:	3800      	subs	r0, #0
90009af8:	bf18      	it	ne
90009afa:	2001      	movne	r0, #1
90009afc:	b009      	add	sp, #36	; 0x24
90009afe:	bd30      	pop	{r4, r5, pc}
90009b00:	2400e78c 	.word	0x2400e78c
90009b04:	52004140 	.word	0x52004140

90009b08 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90009b08:	2800      	cmp	r0, #0
90009b0a:	f040 80d2 	bne.w	90009cb2 <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
90009b0e:	4b6c      	ldr	r3, [pc, #432]	; (90009cc0 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90009b10:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90009b12:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90009b16:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
90009b1a:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90009b1c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
90009b20:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
90009b22:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90009b26:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90009b28:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90009b2c:	4c65      	ldr	r4, [pc, #404]	; (90009cc4 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
90009b2e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90009b32:	4e65      	ldr	r6, [pc, #404]	; (90009cc8 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
90009b34:	9201      	str	r2, [sp, #4]
90009b36:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
90009b38:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90009b3c:	f042 0201 	orr.w	r2, r2, #1
90009b40:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90009b44:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90009b48:	f002 0201 	and.w	r2, r2, #1
90009b4c:	9202      	str	r2, [sp, #8]
90009b4e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90009b50:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009b54:	f042 0208 	orr.w	r2, r2, #8
90009b58:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90009b5c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009b60:	f002 0208 	and.w	r2, r2, #8
90009b64:	9203      	str	r2, [sp, #12]
90009b66:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90009b68:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009b6c:	f042 0210 	orr.w	r2, r2, #16
90009b70:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90009b74:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009b78:	f002 0210 	and.w	r2, r2, #16
90009b7c:	9204      	str	r2, [sp, #16]
90009b7e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90009b80:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009b84:	f042 0220 	orr.w	r2, r2, #32
90009b88:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90009b8c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009b90:	f002 0220 	and.w	r2, r2, #32
90009b94:	9205      	str	r2, [sp, #20]
90009b96:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90009b98:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009b9c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90009ba0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90009ba4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009ba8:	f002 0240 	and.w	r2, r2, #64	; 0x40
90009bac:	9206      	str	r2, [sp, #24]
90009bae:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90009bb0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009bb4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90009bb8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90009bbc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90009bc0:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90009bc2:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
90009bc4:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90009bc8:	e9cd 0108 	strd	r0, r1, [sp, #32]
90009bcc:	2001      	movs	r0, #1
90009bce:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
90009bd0:	9307      	str	r3, [sp, #28]
90009bd2:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90009bd4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90009bd8:	a908      	add	r1, sp, #32
90009bda:	483c      	ldr	r0, [pc, #240]	; (90009ccc <BSP_SDRAM_Init+0x1c4>)
90009bdc:	f001 fa2c 	bl	9000b038 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90009be0:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90009be4:	a908      	add	r1, sp, #32
90009be6:	483a      	ldr	r0, [pc, #232]	; (90009cd0 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90009be8:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90009bea:	f001 fa25 	bl	9000b038 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90009bee:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90009bf2:	a908      	add	r1, sp, #32
90009bf4:	4837      	ldr	r0, [pc, #220]	; (90009cd4 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90009bf6:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90009bf8:	f001 fa1e 	bl	9000b038 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90009bfc:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90009c00:	a908      	add	r1, sp, #32
90009c02:	4835      	ldr	r0, [pc, #212]	; (90009cd8 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90009c04:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90009c06:	f001 fa17 	bl	9000b038 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90009c0a:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90009c0c:	a908      	add	r1, sp, #32
90009c0e:	4833      	ldr	r0, [pc, #204]	; (90009cdc <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90009c10:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90009c12:	f001 fa11 	bl	9000b038 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90009c16:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90009c18:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90009c1c:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90009c20:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90009c22:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90009c24:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90009c26:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90009c28:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90009c2c:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90009c2e:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90009c30:	4a2b      	ldr	r2, [pc, #172]	; (90009ce0 <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90009c32:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90009c34:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90009c36:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90009c38:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90009c3c:	f640 0308 	movw	r3, #2056	; 0x808
90009c40:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90009c42:	2320      	movs	r3, #32
90009c44:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90009c46:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90009c4a:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90009c4e:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
90009c50:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90009c54:	f003 fe66 	bl	9000d924 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90009c58:	4620      	mov	r0, r4
90009c5a:	f003 fde9 	bl	9000d830 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90009c5e:	462a      	mov	r2, r5
90009c60:	210f      	movs	r1, #15
90009c62:	207a      	movs	r0, #122	; 0x7a
90009c64:	f000 f9cc 	bl	9000a000 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90009c68:	207a      	movs	r0, #122	; 0x7a
90009c6a:	f000 fa07 	bl	9000a07c <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90009c6e:	2210      	movs	r2, #16
90009c70:	2104      	movs	r1, #4
90009c72:	4630      	mov	r0, r6
90009c74:	f7ff ff16 	bl	90009aa4 <MX_SDRAM_BANK2_Init>
90009c78:	b9f0      	cbnz	r0, 90009cb8 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90009c7a:	491a      	ldr	r1, [pc, #104]	; (90009ce4 <BSP_SDRAM_Init+0x1dc>)
90009c7c:	2208      	movs	r2, #8
90009c7e:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90009c80:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90009c82:	e9c1 2300 	strd	r2, r3, [r1]
90009c86:	f240 6203 	movw	r2, #1539	; 0x603
90009c8a:	2300      	movs	r3, #0
90009c8c:	e9c1 2302 	strd	r2, r3, [r1, #8]
90009c90:	2200      	movs	r2, #0
90009c92:	2330      	movs	r3, #48	; 0x30
90009c94:	e9c1 2304 	strd	r2, r3, [r1, #16]
90009c98:	2200      	movs	r2, #0
90009c9a:	f44f 7300 	mov.w	r3, #512	; 0x200
90009c9e:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90009ca2:	f7ff fa2f 	bl	90009104 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90009ca6:	2800      	cmp	r0, #0
90009ca8:	bf18      	it	ne
90009caa:	f06f 0004 	mvnne.w	r0, #4
}
90009cae:	b00e      	add	sp, #56	; 0x38
90009cb0:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90009cb2:	f06f 0001 	mvn.w	r0, #1
}
90009cb6:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90009cb8:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90009cbc:	e7f7      	b.n	90009cae <BSP_SDRAM_Init+0x1a6>
90009cbe:	bf00      	nop
90009cc0:	58024400 	.word	0x58024400
90009cc4:	2400e82c 	.word	0x2400e82c
90009cc8:	2400e78c 	.word	0x2400e78c
90009ccc:	58020c00 	.word	0x58020c00
90009cd0:	58021000 	.word	0x58021000
90009cd4:	58021400 	.word	0x58021400
90009cd8:	58021800 	.word	0x58021800
90009cdc:	58021c00 	.word	0x58021c00
90009ce0:	52000040 	.word	0x52000040
90009ce4:	2400e898 	.word	0x2400e898

90009ce8 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90009ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009cec:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90009cee:	2800      	cmp	r0, #0
90009cf0:	d16b      	bne.n	90009dca <BSP_TS_Init+0xe2>
90009cf2:	680b      	ldr	r3, [r1, #0]
90009cf4:	460c      	mov	r4, r1
90009cf6:	1e5a      	subs	r2, r3, #1
90009cf8:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
90009cfc:	d265      	bcs.n	90009dca <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90009cfe:	684a      	ldr	r2, [r1, #4]
90009d00:	1e51      	subs	r1, r2, #1
90009d02:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
90009d06:	d260      	bcs.n	90009dca <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90009d08:	4293      	cmp	r3, r2
90009d0a:	bf28      	it	cs
90009d0c:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90009d0e:	68e2      	ldr	r2, [r4, #12]
90009d10:	429a      	cmp	r2, r3
90009d12:	d85a      	bhi.n	90009dca <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90009d14:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90009d16:	4b31      	ldr	r3, [pc, #196]	; (90009ddc <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90009d18:	4d31      	ldr	r5, [pc, #196]	; (90009de0 <BSP_TS_Init+0xf8>)
90009d1a:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90009d1c:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90009d20:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90009d22:	4a30      	ldr	r2, [pc, #192]	; (90009de4 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90009d24:	4b30      	ldr	r3, [pc, #192]	; (90009de8 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90009d26:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90009d28:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90009d2a:	4a30      	ldr	r2, [pc, #192]	; (90009dec <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90009d2c:	4b30      	ldr	r3, [pc, #192]	; (90009df0 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90009d2e:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90009d30:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90009d32:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90009d34:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90009d36:	f7ff f935 	bl	90008fa4 <FT5336_RegisterBusIO>
90009d3a:	2800      	cmp	r0, #0
90009d3c:	d14b      	bne.n	90009dd6 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90009d3e:	a901      	add	r1, sp, #4
90009d40:	4628      	mov	r0, r5
90009d42:	f7ff f825 	bl	90008d90 <FT5336_ReadID>
90009d46:	2800      	cmp	r0, #0
90009d48:	d145      	bne.n	90009dd6 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90009d4a:	9b01      	ldr	r3, [sp, #4]
90009d4c:	2b51      	cmp	r3, #81	; 0x51
90009d4e:	d142      	bne.n	90009dd6 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90009d50:	4b28      	ldr	r3, [pc, #160]	; (90009df4 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90009d52:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
90009d54:	4f28      	ldr	r7, [pc, #160]	; (90009df8 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90009d56:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 90009e00 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90009d5a:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90009d5c:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90009d60:	681b      	ldr	r3, [r3, #0]
90009d62:	4798      	blx	r3
90009d64:	4606      	mov	r6, r0
90009d66:	2800      	cmp	r0, #0
90009d68:	d135      	bne.n	90009dd6 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90009d6a:	4d24      	ldr	r5, [pc, #144]	; (90009dfc <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90009d6c:	a902      	add	r1, sp, #8
90009d6e:	6838      	ldr	r0, [r7, #0]
90009d70:	f8d8 3000 	ldr.w	r3, [r8]
90009d74:	e9d4 7200 	ldrd	r7, r2, [r4]
90009d78:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90009d7a:	e9c5 7200 	strd	r7, r2, [r5]
90009d7e:	68a2      	ldr	r2, [r4, #8]
90009d80:	60aa      	str	r2, [r5, #8]
90009d82:	68e2      	ldr	r2, [r4, #12]
90009d84:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90009d86:	4798      	blx	r3
90009d88:	2800      	cmp	r0, #0
90009d8a:	db18      	blt.n	90009dbe <BSP_TS_Init+0xd6>
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009d8c:	68e3      	ldr	r3, [r4, #12]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90009d8e:	9803      	ldr	r0, [sp, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009d90:	e9d4 2100 	ldrd	r2, r1, [r4]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90009d94:	6128      	str	r0, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009d96:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009d98:	440b      	add	r3, r1
90009d9a:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009d9c:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009d9e:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
90009da2:	636b      	str	r3, [r5, #52]	; 0x34
90009da4:	63ab      	str	r3, [r5, #56]	; 0x38
90009da6:	63eb      	str	r3, [r5, #60]	; 0x3c
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
90009da8:	9b04      	ldr	r3, [sp, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009daa:	622a      	str	r2, [r5, #32]
90009dac:	626a      	str	r2, [r5, #36]	; 0x24
90009dae:	62aa      	str	r2, [r5, #40]	; 0x28
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
90009db0:	616b      	str	r3, [r5, #20]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009db2:	e9c5 2206 	strd	r2, r2, [r5, #24]
}
90009db6:	4630      	mov	r0, r6
90009db8:	b008      	add	sp, #32
90009dba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90009dbe:	f06f 0604 	mvn.w	r6, #4
}
90009dc2:	4630      	mov	r0, r6
90009dc4:	b008      	add	sp, #32
90009dc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90009dca:	f06f 0601 	mvn.w	r6, #1
}
90009dce:	4630      	mov	r0, r6
90009dd0:	b008      	add	sp, #32
90009dd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90009dd6:	f04f 36ff 	mov.w	r6, #4294967295
90009dda:	e7ec      	b.n	90009db6 <BSP_TS_Init+0xce>
90009ddc:	90009251 	.word	0x90009251
90009de0:	2400e8b8 	.word	0x2400e8b8
90009de4:	900091bd 	.word	0x900091bd
90009de8:	90009a31 	.word	0x90009a31
90009dec:	900099f5 	.word	0x900099f5
90009df0:	90009a6d 	.word	0x90009a6d
90009df4:	24000024 	.word	0x24000024
90009df8:	2400e8e0 	.word	0x2400e8e0
90009dfc:	2400e8e4 	.word	0x2400e8e4
90009e00:	2400e924 	.word	0x2400e924

90009e04 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90009e04:	2800      	cmp	r0, #0
90009e06:	d156      	bne.n	90009eb6 <BSP_TS_GetState+0xb2>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90009e08:	4b2c      	ldr	r3, [pc, #176]	; (90009ebc <BSP_TS_GetState+0xb8>)
90009e0a:	4a2d      	ldr	r2, [pc, #180]	; (90009ec0 <BSP_TS_GetState+0xbc>)
90009e0c:	681b      	ldr	r3, [r3, #0]
90009e0e:	6810      	ldr	r0, [r2, #0]
90009e10:	691b      	ldr	r3, [r3, #16]
{
90009e12:	b5f0      	push	{r4, r5, r6, r7, lr}
90009e14:	b085      	sub	sp, #20
90009e16:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90009e18:	a901      	add	r1, sp, #4
90009e1a:	4798      	blx	r3
90009e1c:	2800      	cmp	r0, #0
90009e1e:	db40      	blt.n	90009ea2 <BSP_TS_GetState+0x9e>
    else if(state.TouchDetected != 0U)
90009e20:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90009e22:	4b28      	ldr	r3, [pc, #160]	; (90009ec4 <BSP_TS_GetState+0xc0>)
    else if(state.TouchDetected != 0U)
90009e24:	b93d      	cbnz	r5, 90009e36 <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
90009e26:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
90009e28:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90009e2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
90009e2c:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90009e2e:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90009e32:	b005      	add	sp, #20
90009e34:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90009e36:	6899      	ldr	r1, [r3, #8]
90009e38:	0708      	lsls	r0, r1, #28
      y_oriented = state.TouchY;
90009e3a:	e9dd 6202 	ldrd	r6, r2, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90009e3e:	d434      	bmi.n	90009eaa <BSP_TS_GetState+0xa6>
      y_oriented = state.TouchY;
90009e40:	4610      	mov	r0, r2
      x_oriented = state.TouchX;
90009e42:	46b4      	mov	ip, r6
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90009e44:	691f      	ldr	r7, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90009e46:	f011 0f02 	tst.w	r1, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90009e4a:	bf1c      	itt	ne
90009e4c:	f107 3cff 	addne.w	ip, r7, #4294967295
90009e50:	ebac 0c06 	subne.w	ip, ip, r6
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90009e54:	695e      	ldr	r6, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90009e56:	0749      	lsls	r1, r1, #29
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009e58:	6859      	ldr	r1, [r3, #4]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90009e5a:	bf48      	it	mi
90009e5c:	1ab0      	submi	r0, r6, r2
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90009e5e:	681a      	ldr	r2, [r3, #0]
      TS_State->TouchDetected = state.TouchDetected;
90009e60:	6025      	str	r5, [r4, #0]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90009e62:	fb02 f20c 	mul.w	r2, r2, ip
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90009e66:	6add      	ldr	r5, [r3, #44]	; 0x2c
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009e68:	fb00 f101 	mul.w	r1, r0, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90009e6c:	fbb2 f2f7 	udiv	r2, r2, r7
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009e70:	fbb1 f1f6 	udiv	r1, r1, r6
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90009e74:	699e      	ldr	r6, [r3, #24]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90009e76:	6062      	str	r2, [r4, #4]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90009e78:	42b2      	cmp	r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009e7a:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90009e7c:	bf8c      	ite	hi
90009e7e:	1b90      	subhi	r0, r2, r6
90009e80:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90009e82:	42a9      	cmp	r1, r5
90009e84:	bf8c      	ite	hi
90009e86:	1b4f      	subhi	r7, r1, r5
90009e88:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90009e8a:	42b8      	cmp	r0, r7
90009e8c:	bf38      	it	cc
90009e8e:	4638      	movcc	r0, r7
90009e90:	68df      	ldr	r7, [r3, #12]
90009e92:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
90009e94:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90009e98:	d20a      	bcs.n	90009eb0 <BSP_TS_GetState+0xac>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90009e9a:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90009e9c:	62d9      	str	r1, [r3, #44]	; 0x2c
}
90009e9e:	b005      	add	sp, #20
90009ea0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
90009ea2:	f06f 0004 	mvn.w	r0, #4
}
90009ea6:	b005      	add	sp, #20
90009ea8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
90009eaa:	4630      	mov	r0, r6
        x_oriented = state.TouchY;
90009eac:	4694      	mov	ip, r2
90009eae:	e7c9      	b.n	90009e44 <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90009eb0:	e9c4 6501 	strd	r6, r5, [r4, #4]
90009eb4:	e7bd      	b.n	90009e32 <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
90009eb6:	f06f 0001 	mvn.w	r0, #1
}
90009eba:	4770      	bx	lr
90009ebc:	2400e924 	.word	0x2400e924
90009ec0:	2400e8e0 	.word	0x2400e8e0
90009ec4:	2400e8e4 	.word	0x2400e8e4

90009ec8 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90009ec8:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90009eca:	4c19      	ldr	r4, [pc, #100]	; (90009f30 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90009ecc:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90009ece:	4b19      	ldr	r3, [pc, #100]	; (90009f34 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90009ed0:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90009ed4:	4818      	ldr	r0, [pc, #96]	; (90009f38 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90009ed6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
90009eda:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
90009ede:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90009ee0:	4c16      	ldr	r4, [pc, #88]	; (90009f3c <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90009ee2:	f041 0101 	orr.w	r1, r1, #1
90009ee6:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90009ee8:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90009eea:	6819      	ldr	r1, [r3, #0]
90009eec:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90009eee:	4914      	ldr	r1, [pc, #80]	; (90009f40 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90009ef0:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90009ef2:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90009ef4:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90009ef6:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90009ef8:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
90009efa:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
90009efc:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
90009efe:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
90009f00:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
90009f02:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
90009f04:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
90009f06:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
90009f08:	6818      	ldr	r0, [r3, #0]
90009f0a:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
90009f0e:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90009f10:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90009f12:	6823      	ldr	r3, [r4, #0]
90009f14:	4019      	ands	r1, r3
90009f16:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
90009f1a:	d203      	bcs.n	90009f24 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90009f1c:	4b09      	ldr	r3, [pc, #36]	; (90009f44 <SystemInit+0x7c>)
90009f1e:	2201      	movs	r2, #1
90009f20:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90009f24:	4a08      	ldr	r2, [pc, #32]	; (90009f48 <SystemInit+0x80>)
90009f26:	4b02      	ldr	r3, [pc, #8]	; (90009f30 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90009f28:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90009f2c:	609a      	str	r2, [r3, #8]
}
90009f2e:	4770      	bx	lr
90009f30:	e000ed00 	.word	0xe000ed00
90009f34:	58024400 	.word	0x58024400
90009f38:	eaf6ed7f 	.word	0xeaf6ed7f
90009f3c:	5c001000 	.word	0x5c001000
90009f40:	ffff0000 	.word	0xffff0000
90009f44:	51008000 	.word	0x51008000
90009f48:	90000000 	.word	0x90000000

90009f4c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90009f4c:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90009f4e:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009f50:	4c12      	ldr	r4, [pc, #72]	; (90009f9c <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90009f52:	f000 f843 	bl	90009fdc <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90009f56:	f004 fa39 	bl	9000e3cc <HAL_RCC_GetSysClockFreq>
90009f5a:	4b11      	ldr	r3, [pc, #68]	; (90009fa0 <HAL_Init+0x54>)
90009f5c:	4911      	ldr	r1, [pc, #68]	; (90009fa4 <HAL_Init+0x58>)
90009f5e:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009f60:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90009f62:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009f66:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90009f6a:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009f6c:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90009f6e:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90009f72:	490d      	ldr	r1, [pc, #52]	; (90009fa8 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009f74:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90009f78:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009f7a:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90009f7e:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90009f80:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90009f82:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90009f84:	f7fb fa14 	bl	900053b0 <HAL_InitTick>
90009f88:	b110      	cbz	r0, 90009f90 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90009f8a:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90009f8c:	4620      	mov	r0, r4
90009f8e:	bd10      	pop	{r4, pc}
90009f90:	4604      	mov	r4, r0
  HAL_MspInit();
90009f92:	f7fa ff09 	bl	90004da8 <HAL_MspInit>
}
90009f96:	4620      	mov	r0, r4
90009f98:	bd10      	pop	{r4, pc}
90009f9a:	bf00      	nop
90009f9c:	24000058 	.word	0x24000058
90009fa0:	58024400 	.word	0x58024400
90009fa4:	9002fab4 	.word	0x9002fab4
90009fa8:	24000054 	.word	0x24000054

90009fac <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90009fac:	4a03      	ldr	r2, [pc, #12]	; (90009fbc <HAL_IncTick+0x10>)
90009fae:	4b04      	ldr	r3, [pc, #16]	; (90009fc0 <HAL_IncTick+0x14>)
90009fb0:	6811      	ldr	r1, [r2, #0]
90009fb2:	781b      	ldrb	r3, [r3, #0]
90009fb4:	440b      	add	r3, r1
90009fb6:	6013      	str	r3, [r2, #0]
}
90009fb8:	4770      	bx	lr
90009fba:	bf00      	nop
90009fbc:	2400e928 	.word	0x2400e928
90009fc0:	2400005c 	.word	0x2400005c

90009fc4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90009fc4:	4b01      	ldr	r3, [pc, #4]	; (90009fcc <HAL_GetTick+0x8>)
90009fc6:	6818      	ldr	r0, [r3, #0]
}
90009fc8:	4770      	bx	lr
90009fca:	bf00      	nop
90009fcc:	2400e928 	.word	0x2400e928

90009fd0 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90009fd0:	4b01      	ldr	r3, [pc, #4]	; (90009fd8 <HAL_GetREVID+0x8>)
90009fd2:	6818      	ldr	r0, [r3, #0]
}
90009fd4:	0c00      	lsrs	r0, r0, #16
90009fd6:	4770      	bx	lr
90009fd8:	5c001000 	.word	0x5c001000

90009fdc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90009fdc:	4906      	ldr	r1, [pc, #24]	; (90009ff8 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90009fde:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90009fe2:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90009fe4:	4b05      	ldr	r3, [pc, #20]	; (90009ffc <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90009fe6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90009fe8:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90009fec:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90009ff0:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90009ff2:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90009ff4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90009ff6:	4770      	bx	lr
90009ff8:	e000ed00 	.word	0xe000ed00
90009ffc:	05fa0000 	.word	0x05fa0000

9000a000 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
9000a000:	4b1b      	ldr	r3, [pc, #108]	; (9000a070 <HAL_NVIC_SetPriority+0x70>)
9000a002:	68db      	ldr	r3, [r3, #12]
9000a004:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
9000a008:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000a00a:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a00e:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000a012:	f1be 0f04 	cmp.w	lr, #4
9000a016:	bf28      	it	cs
9000a018:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a01c:	f1bc 0f06 	cmp.w	ip, #6
9000a020:	d91a      	bls.n	9000a058 <HAL_NVIC_SetPriority+0x58>
9000a022:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
9000a024:	f04f 3cff 	mov.w	ip, #4294967295
9000a028:	fa0c fc03 	lsl.w	ip, ip, r3
9000a02c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000a030:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
9000a034:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000a036:	fa0c fc0e 	lsl.w	ip, ip, lr
9000a03a:	ea21 010c 	bic.w	r1, r1, ip
9000a03e:	fa01 f103 	lsl.w	r1, r1, r3
9000a042:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
9000a046:	db0a      	blt.n	9000a05e <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000a048:	0109      	lsls	r1, r1, #4
9000a04a:	4b0a      	ldr	r3, [pc, #40]	; (9000a074 <HAL_NVIC_SetPriority+0x74>)
9000a04c:	b2c9      	uxtb	r1, r1
9000a04e:	4403      	add	r3, r0
9000a050:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
9000a054:	f85d fb04 	ldr.w	pc, [sp], #4
9000a058:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a05a:	4613      	mov	r3, r2
9000a05c:	e7e8      	b.n	9000a030 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000a05e:	f000 000f 	and.w	r0, r0, #15
9000a062:	0109      	lsls	r1, r1, #4
9000a064:	4b04      	ldr	r3, [pc, #16]	; (9000a078 <HAL_NVIC_SetPriority+0x78>)
9000a066:	b2c9      	uxtb	r1, r1
9000a068:	4403      	add	r3, r0
9000a06a:	7619      	strb	r1, [r3, #24]
9000a06c:	f85d fb04 	ldr.w	pc, [sp], #4
9000a070:	e000ed00 	.word	0xe000ed00
9000a074:	e000e100 	.word	0xe000e100
9000a078:	e000ecfc 	.word	0xe000ecfc

9000a07c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000a07c:	2800      	cmp	r0, #0
9000a07e:	db07      	blt.n	9000a090 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000a080:	2301      	movs	r3, #1
9000a082:	f000 011f 	and.w	r1, r0, #31
9000a086:	4a03      	ldr	r2, [pc, #12]	; (9000a094 <HAL_NVIC_EnableIRQ+0x18>)
9000a088:	0940      	lsrs	r0, r0, #5
9000a08a:	408b      	lsls	r3, r1
9000a08c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000a090:	4770      	bx	lr
9000a092:	bf00      	nop
9000a094:	e000e100 	.word	0xe000e100

9000a098 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000a098:	2800      	cmp	r0, #0
9000a09a:	db0d      	blt.n	9000a0b8 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000a09c:	0943      	lsrs	r3, r0, #5
9000a09e:	2201      	movs	r2, #1
9000a0a0:	f000 001f 	and.w	r0, r0, #31
9000a0a4:	4905      	ldr	r1, [pc, #20]	; (9000a0bc <HAL_NVIC_DisableIRQ+0x24>)
9000a0a6:	3320      	adds	r3, #32
9000a0a8:	fa02 f000 	lsl.w	r0, r2, r0
9000a0ac:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000a0b0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000a0b4:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
9000a0b8:	4770      	bx	lr
9000a0ba:	bf00      	nop
9000a0bc:	e000e100 	.word	0xe000e100

9000a0c0 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
9000a0c0:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000a0c4:	4b04      	ldr	r3, [pc, #16]	; (9000a0d8 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000a0c6:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000a0c8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000a0ca:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000a0ce:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
9000a0d0:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
9000a0d4:	4770      	bx	lr
9000a0d6:	bf00      	nop
9000a0d8:	e000ed00 	.word	0xe000ed00

9000a0dc <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
9000a0dc:	4b06      	ldr	r3, [pc, #24]	; (9000a0f8 <HAL_MPU_Enable+0x1c>)
9000a0de:	f040 0001 	orr.w	r0, r0, #1
9000a0e2:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000a0e6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000a0e8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000a0ec:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
9000a0ee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000a0f2:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
9000a0f6:	4770      	bx	lr
9000a0f8:	e000ed00 	.word	0xe000ed00

9000a0fc <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
9000a0fc:	4a17      	ldr	r2, [pc, #92]	; (9000a15c <HAL_MPU_ConfigRegion+0x60>)
9000a0fe:	7843      	ldrb	r3, [r0, #1]
9000a100:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
9000a104:	7801      	ldrb	r1, [r0, #0]
9000a106:	b321      	cbz	r1, 9000a152 <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
9000a108:	6843      	ldr	r3, [r0, #4]
{
9000a10a:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
9000a10c:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000a110:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a112:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000a116:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
9000a118:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a11c:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
9000a120:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a124:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
9000a126:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a128:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
9000a12c:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a130:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
9000a134:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a138:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
9000a13c:	7a01      	ldrb	r1, [r0, #8]
9000a13e:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
9000a142:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000a146:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a14a:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
9000a14e:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
9000a152:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
9000a156:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
9000a15a:	4770      	bx	lr
9000a15c:	e000ed00 	.word	0xe000ed00

9000a160 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
9000a160:	2800      	cmp	r0, #0
9000a162:	d036      	beq.n	9000a1d2 <HAL_CRC_Init+0x72>
{
9000a164:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000a166:	7f43      	ldrb	r3, [r0, #29]
9000a168:	4604      	mov	r4, r0
9000a16a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a16e:	b363      	cbz	r3, 9000a1ca <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
9000a170:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000a172:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
9000a174:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000a176:	b9f3      	cbnz	r3, 9000a1b6 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
9000a178:	6823      	ldr	r3, [r4, #0]
9000a17a:	4a17      	ldr	r2, [pc, #92]	; (9000a1d8 <HAL_CRC_Init+0x78>)
9000a17c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
9000a17e:	689a      	ldr	r2, [r3, #8]
9000a180:	f022 0218 	bic.w	r2, r2, #24
9000a184:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000a186:	7962      	ldrb	r2, [r4, #5]
9000a188:	b18a      	cbz	r2, 9000a1ae <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000a18a:	6922      	ldr	r2, [r4, #16]
9000a18c:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a18e:	6899      	ldr	r1, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a190:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a194:	f021 0160 	bic.w	r1, r1, #96	; 0x60
9000a198:	4311      	orrs	r1, r2
9000a19a:	6099      	str	r1, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
9000a19c:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a19e:	689a      	ldr	r2, [r3, #8]
9000a1a0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9000a1a4:	4302      	orrs	r2, r0

  /* Return function status */
  return HAL_OK;
9000a1a6:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a1a8:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
9000a1aa:	7761      	strb	r1, [r4, #29]
}
9000a1ac:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000a1ae:	f04f 32ff 	mov.w	r2, #4294967295
9000a1b2:	611a      	str	r2, [r3, #16]
9000a1b4:	e7eb      	b.n	9000a18e <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000a1b6:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000a1ba:	4620      	mov	r0, r4
9000a1bc:	f000 f80e 	bl	9000a1dc <HAL_CRCEx_Polynomial_Set>
9000a1c0:	b908      	cbnz	r0, 9000a1c6 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000a1c2:	6823      	ldr	r3, [r4, #0]
9000a1c4:	e7df      	b.n	9000a186 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000a1c6:	2001      	movs	r0, #1
}
9000a1c8:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000a1ca:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
9000a1cc:	f7fa fe06 	bl	90004ddc <HAL_CRC_MspInit>
9000a1d0:	e7ce      	b.n	9000a170 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000a1d2:	2001      	movs	r0, #1
}
9000a1d4:	4770      	bx	lr
9000a1d6:	bf00      	nop
9000a1d8:	04c11db7 	.word	0x04c11db7

9000a1dc <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
9000a1dc:	07cb      	lsls	r3, r1, #31
9000a1de:	d51a      	bpl.n	9000a216 <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000a1e0:	231e      	movs	r3, #30
{
9000a1e2:	b410      	push	{r4}
9000a1e4:	e001      	b.n	9000a1ea <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000a1e6:	3b01      	subs	r3, #1
9000a1e8:	d317      	bcc.n	9000a21a <HAL_CRCEx_Polynomial_Set+0x3e>
9000a1ea:	fa21 fc03 	lsr.w	ip, r1, r3
9000a1ee:	f01c 0f01 	tst.w	ip, #1
9000a1f2:	d0f8      	beq.n	9000a1e6 <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
9000a1f4:	2a18      	cmp	r2, #24
9000a1f6:	d811      	bhi.n	9000a21c <HAL_CRCEx_Polynomial_Set+0x40>
9000a1f8:	e8df f002 	tbb	[pc, r2]
9000a1fc:	10101016 	.word	0x10101016
9000a200:	10101010 	.word	0x10101010
9000a204:	10101024 	.word	0x10101024
9000a208:	10101010 	.word	0x10101010
9000a20c:	10101021 	.word	0x10101021
9000a210:	10101010 	.word	0x10101010
9000a214:	14          	.byte	0x14
9000a215:	00          	.byte	0x00
    status =  HAL_ERROR;
9000a216:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
9000a218:	4770      	bx	lr
    switch (PolyLength)
9000a21a:	b12a      	cbz	r2, 9000a228 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
9000a21c:	2001      	movs	r0, #1
}
9000a21e:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a222:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
9000a224:	2b06      	cmp	r3, #6
9000a226:	d8f9      	bhi.n	9000a21c <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
9000a228:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000a22a:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
9000a22c:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000a22e:	68a3      	ldr	r3, [r4, #8]
9000a230:	f023 0318 	bic.w	r3, r3, #24
9000a234:	431a      	orrs	r2, r3
9000a236:	60a2      	str	r2, [r4, #8]
}
9000a238:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a23c:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000a23e:	2b07      	cmp	r3, #7
9000a240:	d9f2      	bls.n	9000a228 <HAL_CRCEx_Polynomial_Set+0x4c>
9000a242:	e7eb      	b.n	9000a21c <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
9000a244:	2b0f      	cmp	r3, #15
9000a246:	d9ef      	bls.n	9000a228 <HAL_CRCEx_Polynomial_Set+0x4c>
9000a248:	e7e8      	b.n	9000a21c <HAL_CRCEx_Polynomial_Set+0x40>
9000a24a:	bf00      	nop

9000a24c <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
9000a24c:	2800      	cmp	r0, #0
9000a24e:	d035      	beq.n	9000a2bc <HAL_DMA2D_Init+0x70>
{
9000a250:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000a252:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
9000a256:	4604      	mov	r4, r0
9000a258:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a25c:	b34b      	cbz	r3, 9000a2b2 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a25e:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000a260:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a262:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000a264:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a268:	69e1      	ldr	r1, [r4, #28]
9000a26a:	681d      	ldr	r5, [r3, #0]
9000a26c:	4814      	ldr	r0, [pc, #80]	; (9000a2c0 <HAL_DMA2D_Init+0x74>)
9000a26e:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a270:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a272:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a274:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a276:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a278:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a27a:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a27c:	4302      	orrs	r2, r0
9000a27e:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000a280:	4810      	ldr	r0, [pc, #64]	; (9000a2c4 <HAL_DMA2D_Init+0x78>)
9000a282:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a284:	4910      	ldr	r1, [pc, #64]	; (9000a2c8 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a286:	4302      	orrs	r2, r0
9000a288:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a28a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
9000a28c:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a28e:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a292:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a294:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a296:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a298:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000a29a:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000a29e:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a2a0:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000a2a4:	430a      	orrs	r2, r1
9000a2a6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000a2a8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000a2aa:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000a2ac:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
9000a2b0:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000a2b2:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000a2b6:	f7fa fda9 	bl	90004e0c <HAL_DMA2D_MspInit>
9000a2ba:	e7d0      	b.n	9000a25e <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
9000a2bc:	2001      	movs	r0, #1
}
9000a2be:	4770      	bx	lr
9000a2c0:	fff8ffbf 	.word	0xfff8ffbf
9000a2c4:	fffffef8 	.word	0xfffffef8
9000a2c8:	ffff0000 	.word	0xffff0000

9000a2cc <HAL_DMA2D_LineEventCallback>:
9000a2cc:	4770      	bx	lr
9000a2ce:	bf00      	nop

9000a2d0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
9000a2d0:	4770      	bx	lr
9000a2d2:	bf00      	nop

9000a2d4 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000a2d4:	6803      	ldr	r3, [r0, #0]
{
9000a2d6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000a2d8:	685d      	ldr	r5, [r3, #4]
{
9000a2da:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
9000a2dc:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
9000a2de:	07ea      	lsls	r2, r5, #31
9000a2e0:	d501      	bpl.n	9000a2e6 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
9000a2e2:	05f1      	lsls	r1, r6, #23
9000a2e4:	d456      	bmi.n	9000a394 <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000a2e6:	06aa      	lsls	r2, r5, #26
9000a2e8:	d501      	bpl.n	9000a2ee <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
9000a2ea:	04b3      	lsls	r3, r6, #18
9000a2ec:	d43b      	bmi.n	9000a366 <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
9000a2ee:	0728      	lsls	r0, r5, #28
9000a2f0:	d501      	bpl.n	9000a2f6 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
9000a2f2:	0531      	lsls	r1, r6, #20
9000a2f4:	d421      	bmi.n	9000a33a <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000a2f6:	076a      	lsls	r2, r5, #29
9000a2f8:	d501      	bpl.n	9000a2fe <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
9000a2fa:	0573      	lsls	r3, r6, #21
9000a2fc:	d472      	bmi.n	9000a3e4 <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
9000a2fe:	07a8      	lsls	r0, r5, #30
9000a300:	d501      	bpl.n	9000a306 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
9000a302:	05b1      	lsls	r1, r6, #22
9000a304:	d404      	bmi.n	9000a310 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000a306:	06ea      	lsls	r2, r5, #27
9000a308:	d501      	bpl.n	9000a30e <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000a30a:	04f3      	lsls	r3, r6, #19
9000a30c:	d457      	bmi.n	9000a3be <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
9000a30e:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
9000a310:	6823      	ldr	r3, [r4, #0]
9000a312:	681a      	ldr	r2, [r3, #0]
9000a314:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000a318:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000a31a:	2202      	movs	r2, #2
9000a31c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000a31e:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000a320:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000a322:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000a324:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000a326:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000a32a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
9000a32e:	6a23      	ldr	r3, [r4, #32]
9000a330:	2b00      	cmp	r3, #0
9000a332:	d0e8      	beq.n	9000a306 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
9000a334:	4620      	mov	r0, r4
9000a336:	4798      	blx	r3
9000a338:	e7e5      	b.n	9000a306 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
9000a33a:	6823      	ldr	r3, [r4, #0]
9000a33c:	681a      	ldr	r2, [r3, #0]
9000a33e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
9000a342:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
9000a344:	2208      	movs	r2, #8
9000a346:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000a348:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
9000a34a:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000a34c:	4313      	orrs	r3, r2
9000a34e:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000a350:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000a354:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000a356:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000a358:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000a35c:	2b00      	cmp	r3, #0
9000a35e:	d0ca      	beq.n	9000a2f6 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
9000a360:	4620      	mov	r0, r4
9000a362:	4798      	blx	r3
9000a364:	e7c7      	b.n	9000a2f6 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
9000a366:	6823      	ldr	r3, [r4, #0]
9000a368:	681a      	ldr	r2, [r3, #0]
9000a36a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
9000a36e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
9000a370:	2220      	movs	r2, #32
9000a372:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000a374:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000a376:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000a378:	f043 0302 	orr.w	r3, r3, #2
9000a37c:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000a37e:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000a382:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000a384:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000a386:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000a38a:	2b00      	cmp	r3, #0
9000a38c:	d0af      	beq.n	9000a2ee <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
9000a38e:	4620      	mov	r0, r4
9000a390:	4798      	blx	r3
9000a392:	e7ac      	b.n	9000a2ee <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
9000a394:	681a      	ldr	r2, [r3, #0]
9000a396:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000a39a:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
9000a39c:	6e42      	ldr	r2, [r0, #100]	; 0x64
9000a39e:	f042 0201 	orr.w	r2, r2, #1
9000a3a2:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
9000a3a4:	2201      	movs	r2, #1
9000a3a6:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000a3a8:	2304      	movs	r3, #4
9000a3aa:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000a3ae:	2300      	movs	r3, #0
9000a3b0:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000a3b4:	6a43      	ldr	r3, [r0, #36]	; 0x24
9000a3b6:	2b00      	cmp	r3, #0
9000a3b8:	d095      	beq.n	9000a2e6 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000a3ba:	4798      	blx	r3
9000a3bc:	e793      	b.n	9000a2e6 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000a3be:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000a3c0:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000a3c2:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
9000a3c4:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000a3c6:	681a      	ldr	r2, [r3, #0]
9000a3c8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
9000a3cc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000a3ce:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000a3d0:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000a3d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000a3d4:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000a3d8:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000a3da:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000a3de:	f7ff ff77 	bl	9000a2d0 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000a3e2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000a3e4:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000a3e6:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000a3e8:	681a      	ldr	r2, [r3, #0]
9000a3ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
9000a3ee:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
9000a3f0:	2204      	movs	r2, #4
9000a3f2:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000a3f4:	f7ff ff6a 	bl	9000a2cc <HAL_DMA2D_LineEventCallback>
9000a3f8:	e781      	b.n	9000a2fe <HAL_DMA2D_IRQHandler+0x2a>
9000a3fa:	bf00      	nop

9000a3fc <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
9000a3fc:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
9000a400:	2a01      	cmp	r2, #1
9000a402:	d065      	beq.n	9000a4d0 <HAL_DMA2D_ConfigLayer+0xd4>
9000a404:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000a406:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000a40a:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000a40c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
9000a410:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
9000a412:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000a414:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
9000a418:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000a41c:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000a41e:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
9000a420:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000a422:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000a424:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000a428:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
9000a42c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000a42e:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000a432:	ea42 0204 	orr.w	r2, r2, r4
9000a436:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000a43a:	d922      	bls.n	9000a482 <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000a43c:	6b45      	ldr	r5, [r0, #52]	; 0x34
9000a43e:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000a442:	b981      	cbnz	r1, 9000a466 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000a444:	6818      	ldr	r0, [r3, #0]
9000a446:	4923      	ldr	r1, [pc, #140]	; (9000a4d4 <HAL_DMA2D_ConfigLayer+0xd8>)
9000a448:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000a44a:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000a44c:	4029      	ands	r1, r5
9000a44e:	430a      	orrs	r2, r1
9000a450:	6242      	str	r2, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000a452:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
9000a454:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000a456:	2101      	movs	r1, #1

  return HAL_OK;
9000a458:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000a45a:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
9000a45e:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
9000a462:	bc70      	pop	{r4, r5, r6}
9000a464:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000a466:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a468:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000a46a:	d129      	bne.n	9000a4c0 <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a46c:	69e5      	ldr	r5, [r4, #28]
9000a46e:	491a      	ldr	r1, [pc, #104]	; (9000a4d8 <HAL_DMA2D_ConfigLayer+0xdc>)
9000a470:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
9000a472:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a474:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a476:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
9000a47a:	430a      	orrs	r2, r1
9000a47c:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a47e:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000a480:	e7e8      	b.n	9000a454 <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000a482:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000a484:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
9000a488:	4322      	orrs	r2, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000a48a:	b961      	cbnz	r1, 9000a4a6 <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000a48c:	6818      	ldr	r0, [r3, #0]
9000a48e:	4911      	ldr	r1, [pc, #68]	; (9000a4d4 <HAL_DMA2D_ConfigLayer+0xd8>)
9000a490:	6a46      	ldr	r6, [r0, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000a492:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000a494:	4031      	ands	r1, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000a496:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000a498:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000a49c:	430a      	orrs	r2, r1
9000a49e:	6242      	str	r2, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000a4a0:	6185      	str	r5, [r0, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000a4a2:	6284      	str	r4, [r0, #40]	; 0x28
9000a4a4:	e7d6      	b.n	9000a454 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a4a6:	681c      	ldr	r4, [r3, #0]
9000a4a8:	490a      	ldr	r1, [pc, #40]	; (9000a4d4 <HAL_DMA2D_ConfigLayer+0xd8>)
9000a4aa:	69e5      	ldr	r5, [r4, #28]
9000a4ac:	4029      	ands	r1, r5
9000a4ae:	430a      	orrs	r2, r1
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000a4b0:	6b41      	ldr	r1, [r0, #52]	; 0x34
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a4b2:	6a80      	ldr	r0, [r0, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000a4b4:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a4b8:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a4ba:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000a4bc:	6221      	str	r1, [r4, #32]
9000a4be:	e7c9      	b.n	9000a454 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a4c0:	69e5      	ldr	r5, [r4, #28]
9000a4c2:	4904      	ldr	r1, [pc, #16]	; (9000a4d4 <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a4c4:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a4c6:	4029      	ands	r1, r5
9000a4c8:	430a      	orrs	r2, r1
9000a4ca:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a4cc:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000a4ce:	e7c1      	b.n	9000a454 <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
9000a4d0:	2002      	movs	r0, #2
}
9000a4d2:	4770      	bx	lr
9000a4d4:	00ccfff0 	.word	0x00ccfff0
9000a4d8:	00c0fff0 	.word	0x00c0fff0

9000a4dc <FDCAN_CopyMessageToRAM>:
  * @param  pTxData pointer to a buffer containing the payload of the Tx frame.
  * @param  BufferIndex index of the buffer to be configured.
  * @retval HAL status
 */
static void FDCAN_CopyMessageToRAM(FDCAN_HandleTypeDef *hfdcan, FDCAN_TxHeaderTypeDef *pTxHeader, uint8_t *pTxData, uint32_t BufferIndex)
{
9000a4dc:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t TxElementW2;
  uint32_t *TxAddress;
  uint32_t ByteCounter;

  /* Build first word of Tx header element */
  if (pTxHeader->IdType == FDCAN_STANDARD_ID)
9000a4de:	684c      	ldr	r4, [r1, #4]
9000a4e0:	2c00      	cmp	r4, #0
9000a4e2:	d134      	bne.n	9000a54e <FDCAN_CopyMessageToRAM+0x72>
  {
    TxElementW1 = (pTxHeader->ErrorStateIndicator |
                   FDCAN_STANDARD_ID |
9000a4e4:	688c      	ldr	r4, [r1, #8]
9000a4e6:	690e      	ldr	r6, [r1, #16]
9000a4e8:	4326      	orrs	r6, r4
                   pTxHeader->TxFrameType |
                   (pTxHeader->Identifier << 18));
9000a4ea:	680c      	ldr	r4, [r1, #0]
    TxElementW1 = (pTxHeader->ErrorStateIndicator |
9000a4ec:	ea46 4684 	orr.w	r6, r6, r4, lsl #18
                   pTxHeader->TxFrameType |
                   pTxHeader->Identifier);
  }

  /* Build second word of Tx header element */
  TxElementW2 = ((pTxHeader->MessageMarker << 24) |
9000a4f0:	e9d1 4506 	ldrd	r4, r5, [r1, #24]
9000a4f4:	4325      	orrs	r5, r4
9000a4f6:	694c      	ldr	r4, [r1, #20]
9000a4f8:	4325      	orrs	r5, r4
9000a4fa:	68cc      	ldr	r4, [r1, #12]
9000a4fc:	4325      	orrs	r5, r4
                 pTxHeader->FDFormat |
                 pTxHeader->BitRateSwitch |
                 pTxHeader->DataLength);

  /* Calculate Tx element address */
  TxAddress = (uint32_t *)(hfdcan->msgRam.TxBufferSA + (BufferIndex * hfdcan->Init.TxElmtSize * 4U));
9000a4fe:	6e84      	ldr	r4, [r0, #104]	; 0x68
9000a500:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9000a504:	fb03 f404 	mul.w	r4, r3, r4
  TxElementW2 = ((pTxHeader->MessageMarker << 24) |
9000a508:	6a0b      	ldr	r3, [r1, #32]

  /* Write Tx element header to the message RAM */
  *TxAddress = TxElementW1;
9000a50a:	f840 6024 	str.w	r6, [r0, r4, lsl #2]
  TxElementW2 = ((pTxHeader->MessageMarker << 24) |
9000a50e:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
  TxAddress = (uint32_t *)(hfdcan->msgRam.TxBufferSA + (BufferIndex * hfdcan->Init.TxElmtSize * 4U));
9000a512:	eb00 0484 	add.w	r4, r0, r4, lsl #2
  TxAddress++;
  *TxAddress = TxElementW2;
  TxAddress++;

  /* Write Tx payload to the message RAM */
  for (ByteCounter = 0; ByteCounter < DLCtoBytes[pTxHeader->DataLength >> 16]; ByteCounter += 4U)
9000a516:	4d12      	ldr	r5, [pc, #72]	; (9000a560 <FDCAN_CopyMessageToRAM+0x84>)
  *TxAddress = TxElementW2;
9000a518:	6063      	str	r3, [r4, #4]
  for (ByteCounter = 0; ByteCounter < DLCtoBytes[pTxHeader->DataLength >> 16]; ByteCounter += 4U)
9000a51a:	89cb      	ldrh	r3, [r1, #14]
9000a51c:	5ceb      	ldrb	r3, [r5, r3]
9000a51e:	b1ab      	cbz	r3, 9000a54c <FDCAN_CopyMessageToRAM+0x70>
9000a520:	2000      	movs	r0, #0
  {
    *TxAddress = (((uint32_t)pTxData[ByteCounter + 3U] << 24) |
                  ((uint32_t)pTxData[ByteCounter + 2U] << 16) |
9000a522:	7893      	ldrb	r3, [r2, #2]
    *TxAddress = (((uint32_t)pTxData[ByteCounter + 3U] << 24) |
9000a524:	eb04 0c00 	add.w	ip, r4, r0
9000a528:	78d7      	ldrb	r7, [r2, #3]
  for (ByteCounter = 0; ByteCounter < DLCtoBytes[pTxHeader->DataLength >> 16]; ByteCounter += 4U)
9000a52a:	3004      	adds	r0, #4
                  ((uint32_t)pTxData[ByteCounter + 2U] << 16) |
9000a52c:	041b      	lsls	r3, r3, #16
                  ((uint32_t)pTxData[ByteCounter + 1U] << 8) |
                  (uint32_t)pTxData[ByteCounter]);
9000a52e:	7816      	ldrb	r6, [r2, #0]
                  ((uint32_t)pTxData[ByteCounter + 1U] << 8) |
9000a530:	f892 e001 	ldrb.w	lr, [r2, #1]
  for (ByteCounter = 0; ByteCounter < DLCtoBytes[pTxHeader->DataLength >> 16]; ByteCounter += 4U)
9000a534:	3204      	adds	r2, #4
    *TxAddress = (((uint32_t)pTxData[ByteCounter + 3U] << 24) |
9000a536:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
                  ((uint32_t)pTxData[ByteCounter + 1U] << 8) |
9000a53a:	4333      	orrs	r3, r6
9000a53c:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
    *TxAddress = (((uint32_t)pTxData[ByteCounter + 3U] << 24) |
9000a540:	f8cc 3008 	str.w	r3, [ip, #8]
  for (ByteCounter = 0; ByteCounter < DLCtoBytes[pTxHeader->DataLength >> 16]; ByteCounter += 4U)
9000a544:	89cb      	ldrh	r3, [r1, #14]
9000a546:	5ceb      	ldrb	r3, [r5, r3]
9000a548:	4283      	cmp	r3, r0
9000a54a:	d8ea      	bhi.n	9000a522 <FDCAN_CopyMessageToRAM+0x46>
    TxAddress++;
  }
}
9000a54c:	bdf0      	pop	{r4, r5, r6, r7, pc}
                   pTxHeader->TxFrameType |
9000a54e:	690c      	ldr	r4, [r1, #16]
9000a550:	680e      	ldr	r6, [r1, #0]
9000a552:	4326      	orrs	r6, r4
9000a554:	688c      	ldr	r4, [r1, #8]
9000a556:	4326      	orrs	r6, r4
    TxElementW1 = (pTxHeader->ErrorStateIndicator |
9000a558:	f046 4680 	orr.w	r6, r6, #1073741824	; 0x40000000
9000a55c:	e7c8      	b.n	9000a4f0 <FDCAN_CopyMessageToRAM+0x14>
9000a55e:	bf00      	nop
9000a560:	9002fac4 	.word	0x9002fac4

9000a564 <HAL_FDCAN_Init>:
{
9000a564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000a568:	b099      	sub	sp, #100	; 0x64
9000a56a:	4604      	mov	r4, r0
  const uint32_t CvtEltSize[] = {0, 0, 0, 0, 0, 1, 2, 3, 4, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7};
9000a56c:	224c      	movs	r2, #76	; 0x4c
9000a56e:	4947      	ldr	r1, [pc, #284]	; (9000a68c <HAL_FDCAN_Init+0x128>)
9000a570:	a805      	add	r0, sp, #20
9000a572:	f021 faa5 	bl	9002bac0 <memcpy>
  if (hfdcan == NULL)
9000a576:	2c00      	cmp	r4, #0
9000a578:	f000 81c0 	beq.w	9000a8fc <HAL_FDCAN_Init+0x398>
  if (hfdcan->Instance == FDCAN1)
9000a57c:	6823      	ldr	r3, [r4, #0]
9000a57e:	4a44      	ldr	r2, [pc, #272]	; (9000a690 <HAL_FDCAN_Init+0x12c>)
9000a580:	4293      	cmp	r3, r2
9000a582:	d07e      	beq.n	9000a682 <HAL_FDCAN_Init+0x11e>
  if (hfdcan->State == HAL_FDCAN_STATE_RESET)
9000a584:	f894 2098 	ldrb.w	r2, [r4, #152]	; 0x98
9000a588:	f002 01ff 	and.w	r1, r2, #255	; 0xff
9000a58c:	2a00      	cmp	r2, #0
9000a58e:	d071      	beq.n	9000a674 <HAL_FDCAN_Init+0x110>
  CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CSR);
9000a590:	699a      	ldr	r2, [r3, #24]
9000a592:	f022 0210 	bic.w	r2, r2, #16
9000a596:	619a      	str	r2, [r3, #24]
  tickstart = HAL_GetTick();
9000a598:	f7ff fd14 	bl	90009fc4 <HAL_GetTick>
9000a59c:	4605      	mov	r5, r0
  while ((hfdcan->Instance->CCCR & FDCAN_CCCR_CSA) == FDCAN_CCCR_CSA)
9000a59e:	e004      	b.n	9000a5aa <HAL_FDCAN_Init+0x46>
    if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
9000a5a0:	f7ff fd10 	bl	90009fc4 <HAL_GetTick>
9000a5a4:	1b40      	subs	r0, r0, r5
9000a5a6:	280a      	cmp	r0, #10
9000a5a8:	d858      	bhi.n	9000a65c <HAL_FDCAN_Init+0xf8>
  while ((hfdcan->Instance->CCCR & FDCAN_CCCR_CSA) == FDCAN_CCCR_CSA)
9000a5aa:	6823      	ldr	r3, [r4, #0]
9000a5ac:	699a      	ldr	r2, [r3, #24]
9000a5ae:	0711      	lsls	r1, r2, #28
9000a5b0:	d4f6      	bmi.n	9000a5a0 <HAL_FDCAN_Init+0x3c>
  SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
9000a5b2:	699a      	ldr	r2, [r3, #24]
9000a5b4:	f042 0201 	orr.w	r2, r2, #1
9000a5b8:	619a      	str	r2, [r3, #24]
  tickstart = HAL_GetTick();
9000a5ba:	f7ff fd03 	bl	90009fc4 <HAL_GetTick>
9000a5be:	4605      	mov	r5, r0
  while ((hfdcan->Instance->CCCR & FDCAN_CCCR_INIT) == 0U)
9000a5c0:	e004      	b.n	9000a5cc <HAL_FDCAN_Init+0x68>
    if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
9000a5c2:	f7ff fcff 	bl	90009fc4 <HAL_GetTick>
9000a5c6:	1b40      	subs	r0, r0, r5
9000a5c8:	280a      	cmp	r0, #10
9000a5ca:	d847      	bhi.n	9000a65c <HAL_FDCAN_Init+0xf8>
  while ((hfdcan->Instance->CCCR & FDCAN_CCCR_INIT) == 0U)
9000a5cc:	6823      	ldr	r3, [r4, #0]
9000a5ce:	699a      	ldr	r2, [r3, #24]
9000a5d0:	07d2      	lsls	r2, r2, #31
9000a5d2:	d5f6      	bpl.n	9000a5c2 <HAL_FDCAN_Init+0x5e>
  SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CCE);
9000a5d4:	699a      	ldr	r2, [r3, #24]
9000a5d6:	f042 0202 	orr.w	r2, r2, #2
9000a5da:	619a      	str	r2, [r3, #24]
  if (hfdcan->Init.AutoRetransmission == ENABLE)
9000a5dc:	7c22      	ldrb	r2, [r4, #16]
9000a5de:	2a01      	cmp	r2, #1
    CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_DAR);
9000a5e0:	699a      	ldr	r2, [r3, #24]
9000a5e2:	bf0c      	ite	eq
9000a5e4:	f022 0240 	biceq.w	r2, r2, #64	; 0x40
    SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_DAR);
9000a5e8:	f042 0240 	orrne.w	r2, r2, #64	; 0x40
9000a5ec:	619a      	str	r2, [r3, #24]
  if (hfdcan->Init.TransmitPause == ENABLE)
9000a5ee:	7c62      	ldrb	r2, [r4, #17]
9000a5f0:	2a01      	cmp	r2, #1
    SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TXP);
9000a5f2:	699a      	ldr	r2, [r3, #24]
9000a5f4:	bf0c      	ite	eq
9000a5f6:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
    CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TXP);
9000a5fa:	f422 4280 	bicne.w	r2, r2, #16384	; 0x4000
9000a5fe:	619a      	str	r2, [r3, #24]
  if (hfdcan->Init.ProtocolException == ENABLE)
9000a600:	7ca2      	ldrb	r2, [r4, #18]
9000a602:	2a01      	cmp	r2, #1
    CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_PXHD);
9000a604:	699a      	ldr	r2, [r3, #24]
9000a606:	bf0c      	ite	eq
9000a608:	f422 5280 	biceq.w	r2, r2, #4096	; 0x1000
    SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_PXHD);
9000a60c:	f442 5280 	orrne.w	r2, r2, #4096	; 0x1000
9000a610:	619a      	str	r2, [r3, #24]
  MODIFY_REG(hfdcan->Instance->CCCR, FDCAN_FRAME_FD_BRS, hfdcan->Init.FrameFormat);
9000a612:	699a      	ldr	r2, [r3, #24]
  if (hfdcan->Init.Mode == FDCAN_MODE_RESTRICTED_OPERATION)
9000a614:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
  MODIFY_REG(hfdcan->Instance->CCCR, FDCAN_FRAME_FD_BRS, hfdcan->Init.FrameFormat);
9000a618:	f422 7240 	bic.w	r2, r2, #768	; 0x300
  if (hfdcan->Init.Mode == FDCAN_MODE_RESTRICTED_OPERATION)
9000a61c:	2901      	cmp	r1, #1
  MODIFY_REG(hfdcan->Instance->CCCR, FDCAN_FRAME_FD_BRS, hfdcan->Init.FrameFormat);
9000a61e:	ea42 0200 	orr.w	r2, r2, r0
9000a622:	619a      	str	r2, [r3, #24]
  CLEAR_BIT(hfdcan->Instance->CCCR, (FDCAN_CCCR_TEST | FDCAN_CCCR_MON | FDCAN_CCCR_ASM));
9000a624:	699a      	ldr	r2, [r3, #24]
9000a626:	f022 02a4 	bic.w	r2, r2, #164	; 0xa4
9000a62a:	619a      	str	r2, [r3, #24]
  CLEAR_BIT(hfdcan->Instance->TEST, FDCAN_TEST_LBCK);
9000a62c:	691a      	ldr	r2, [r3, #16]
9000a62e:	f022 0210 	bic.w	r2, r2, #16
9000a632:	611a      	str	r2, [r3, #16]
  if (hfdcan->Init.Mode == FDCAN_MODE_RESTRICTED_OPERATION)
9000a634:	d02e      	beq.n	9000a694 <HAL_FDCAN_Init+0x130>
  else if (hfdcan->Init.Mode != FDCAN_MODE_NORMAL)
9000a636:	b389      	cbz	r1, 9000a69c <HAL_FDCAN_Init+0x138>
    if (hfdcan->Init.Mode != FDCAN_MODE_BUS_MONITORING)
9000a638:	2902      	cmp	r1, #2
      SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TEST);
9000a63a:	699a      	ldr	r2, [r3, #24]
    if (hfdcan->Init.Mode != FDCAN_MODE_BUS_MONITORING)
9000a63c:	f000 8185 	beq.w	9000a94a <HAL_FDCAN_Init+0x3e6>
      SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TEST);
9000a640:	f042 0280 	orr.w	r2, r2, #128	; 0x80
      if (hfdcan->Init.Mode == FDCAN_MODE_INTERNAL_LOOPBACK)
9000a644:	2903      	cmp	r1, #3
      SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TEST);
9000a646:	619a      	str	r2, [r3, #24]
      SET_BIT(hfdcan->Instance->TEST, FDCAN_TEST_LBCK);
9000a648:	691a      	ldr	r2, [r3, #16]
9000a64a:	f042 0210 	orr.w	r2, r2, #16
9000a64e:	611a      	str	r2, [r3, #16]
      if (hfdcan->Init.Mode == FDCAN_MODE_INTERNAL_LOOPBACK)
9000a650:	d124      	bne.n	9000a69c <HAL_FDCAN_Init+0x138>
        SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_MON);
9000a652:	699a      	ldr	r2, [r3, #24]
9000a654:	f042 0220 	orr.w	r2, r2, #32
9000a658:	619a      	str	r2, [r3, #24]
9000a65a:	e01f      	b.n	9000a69c <HAL_FDCAN_Init+0x138>
      hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
9000a65c:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
      return HAL_ERROR;
9000a660:	2001      	movs	r0, #1
      hfdcan->State = HAL_FDCAN_STATE_ERROR;
9000a662:	2203      	movs	r2, #3
      hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
9000a664:	4303      	orrs	r3, r0
9000a666:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
      hfdcan->State = HAL_FDCAN_STATE_ERROR;
9000a66a:	f884 2098 	strb.w	r2, [r4, #152]	; 0x98
}
9000a66e:	b019      	add	sp, #100	; 0x64
9000a670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    HAL_FDCAN_MspInit(hfdcan);
9000a674:	4620      	mov	r0, r4
    hfdcan->Lock = HAL_UNLOCKED;
9000a676:	f884 1099 	strb.w	r1, [r4, #153]	; 0x99
    HAL_FDCAN_MspInit(hfdcan);
9000a67a:	f7fa fbed 	bl	90004e58 <HAL_FDCAN_MspInit>
  CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CSR);
9000a67e:	6823      	ldr	r3, [r4, #0]
9000a680:	e786      	b.n	9000a590 <HAL_FDCAN_Init+0x2c>
    hfdcan->ttcan = (TTCAN_TypeDef *)((uint32_t)hfdcan->Instance + 0x100U);
9000a682:	f502 7280 	add.w	r2, r2, #256	; 0x100
9000a686:	6062      	str	r2, [r4, #4]
9000a688:	e77c      	b.n	9000a584 <HAL_FDCAN_Init+0x20>
9000a68a:	bf00      	nop
9000a68c:	9002cb68 	.word	0x9002cb68
9000a690:	4000a000 	.word	0x4000a000
    SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_ASM);
9000a694:	699a      	ldr	r2, [r3, #24]
9000a696:	f042 0204 	orr.w	r2, r2, #4
9000a69a:	619a      	str	r2, [r3, #24]
  if (hfdcan->Init.FrameFormat == FDCAN_FRAME_FD_BRS)
9000a69c:	f5b0 7f40 	cmp.w	r0, #768	; 0x300
  hfdcan->Instance->NBTP = ((((uint32_t)hfdcan->Init.NominalSyncJumpWidth - 1U) << FDCAN_NBTP_NSJW_Pos) | \
9000a6a0:	e9d4 1206 	ldrd	r1, r2, [r4, #24]
                            (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos)    | \
9000a6a4:	f102 32ff 	add.w	r2, r2, #4294967295
  hfdcan->Instance->NBTP = ((((uint32_t)hfdcan->Init.NominalSyncJumpWidth - 1U) << FDCAN_NBTP_NSJW_Pos) | \
9000a6a8:	f101 31ff 	add.w	r1, r1, #4294967295
                            (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos)    | \
9000a6ac:	ea4f 2202 	mov.w	r2, r2, lsl #8
  hfdcan->Instance->NBTP = ((((uint32_t)hfdcan->Init.NominalSyncJumpWidth - 1U) << FDCAN_NBTP_NSJW_Pos) | \
9000a6b0:	ea42 6241 	orr.w	r2, r2, r1, lsl #25
                            (((uint32_t)hfdcan->Init.NominalTimeSeg2 - 1U) << FDCAN_NBTP_NTSEG2_Pos)    | \
9000a6b4:	6a21      	ldr	r1, [r4, #32]
9000a6b6:	f101 31ff 	add.w	r1, r1, #4294967295
                            (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos)    | \
9000a6ba:	ea42 0201 	orr.w	r2, r2, r1
                            (((uint32_t)hfdcan->Init.NominalPrescaler - 1U) << FDCAN_NBTP_NBRP_Pos));
9000a6be:	6961      	ldr	r1, [r4, #20]
9000a6c0:	f101 31ff 	add.w	r1, r1, #4294967295
                            (((uint32_t)hfdcan->Init.NominalTimeSeg2 - 1U) << FDCAN_NBTP_NTSEG2_Pos)    | \
9000a6c4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  hfdcan->Instance->NBTP = ((((uint32_t)hfdcan->Init.NominalSyncJumpWidth - 1U) << FDCAN_NBTP_NSJW_Pos) | \
9000a6c8:	61da      	str	r2, [r3, #28]
  if (hfdcan->Init.FrameFormat == FDCAN_FRAME_FD_BRS)
9000a6ca:	d10e      	bne.n	9000a6ea <HAL_FDCAN_Init+0x186>
    hfdcan->Instance->DBTP = ((((uint32_t)hfdcan->Init.DataSyncJumpWidth - 1U) << FDCAN_DBTP_DSJW_Pos) | \
9000a6cc:	6aa1      	ldr	r1, [r4, #40]	; 0x28
                              (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)    | \
9000a6ce:	e9d4 020b 	ldrd	r0, r2, [r4, #44]	; 0x2c
    hfdcan->Instance->DBTP = ((((uint32_t)hfdcan->Init.DataSyncJumpWidth - 1U) << FDCAN_DBTP_DSJW_Pos) | \
9000a6d2:	3901      	subs	r1, #1
                              (((uint32_t)hfdcan->Init.DataTimeSeg2 - 1U) << FDCAN_DBTP_DTSEG2_Pos)    | \
9000a6d4:	3a01      	subs	r2, #1
                              (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)    | \
9000a6d6:	3801      	subs	r0, #1
                              (((uint32_t)hfdcan->Init.DataTimeSeg2 - 1U) << FDCAN_DBTP_DTSEG2_Pos)    | \
9000a6d8:	0112      	lsls	r2, r2, #4
                              (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)    | \
9000a6da:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
9000a6de:	430a      	orrs	r2, r1
                              (((uint32_t)hfdcan->Init.DataPrescaler - 1U) << FDCAN_DBTP_DBRP_Pos));
9000a6e0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a6e2:	3901      	subs	r1, #1
                              (((uint32_t)hfdcan->Init.DataTimeSeg2 - 1U) << FDCAN_DBTP_DTSEG2_Pos)    | \
9000a6e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
    hfdcan->Instance->DBTP = ((((uint32_t)hfdcan->Init.DataSyncJumpWidth - 1U) << FDCAN_DBTP_DSJW_Pos) | \
9000a6e8:	60da      	str	r2, [r3, #12]
  if (hfdcan->Init.TxFifoQueueElmtsNbr > 0U)
9000a6ea:	f8d4 b060 	ldr.w	fp, [r4, #96]	; 0x60
9000a6ee:	f1bb 0f00 	cmp.w	fp, #0
9000a6f2:	d005      	beq.n	9000a700 <HAL_FDCAN_Init+0x19c>
    SET_BIT(hfdcan->Instance->TXBC, hfdcan->Init.TxFifoQueueMode);
9000a6f4:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
9000a6f8:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000a6fa:	430a      	orrs	r2, r1
9000a6fc:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
  if ((hfdcan->Init.TxBuffersNbr + hfdcan->Init.TxFifoQueueElmtsNbr) > 0U)
9000a700:	6de2      	ldr	r2, [r4, #92]	; 0x5c
9000a702:	eb1b 0f02 	cmn.w	fp, r2
9000a706:	9201      	str	r2, [sp, #4]
9000a708:	f040 80fc 	bne.w	9000a904 <HAL_FDCAN_Init+0x3a0>
    MODIFY_REG(hfdcan->Instance->TXESC, FDCAN_TXESC_TBDS, CvtEltSize[hfdcan->Init.TxElmtSize]);
9000a70c:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000a70e:	9202      	str	r2, [sp, #8]
    MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_F0DS, (CvtEltSize[hfdcan->Init.RxFifo0ElmtSize] << FDCAN_RXESC_F0DS_Pos));
9000a710:	e9d4 8510 	ldrd	r8, r5, [r4, #64]	; 0x40
  if (hfdcan->Init.RxFifo0ElmtsNbr > 0U)
9000a714:	f1b8 0f00 	cmp.w	r8, #0
9000a718:	d00b      	beq.n	9000a732 <HAL_FDCAN_Init+0x1ce>
    MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_F0DS, (CvtEltSize[hfdcan->Init.RxFifo0ElmtSize] << FDCAN_RXESC_F0DS_Pos));
9000a71a:	a918      	add	r1, sp, #96	; 0x60
9000a71c:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
9000a720:	eb01 0185 	add.w	r1, r1, r5, lsl #2
9000a724:	f022 0207 	bic.w	r2, r2, #7
9000a728:	f851 1c4c 	ldr.w	r1, [r1, #-76]
9000a72c:	430a      	orrs	r2, r1
9000a72e:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
    MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_F1DS, (CvtEltSize[hfdcan->Init.RxFifo1ElmtSize] << FDCAN_RXESC_F1DS_Pos));
9000a732:	e9d4 6012 	ldrd	r6, r0, [r4, #72]	; 0x48
  if (hfdcan->Init.RxFifo1ElmtsNbr > 0U)
9000a736:	b166      	cbz	r6, 9000a752 <HAL_FDCAN_Init+0x1ee>
    MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_F1DS, (CvtEltSize[hfdcan->Init.RxFifo1ElmtSize] << FDCAN_RXESC_F1DS_Pos));
9000a738:	a918      	add	r1, sp, #96	; 0x60
9000a73a:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
9000a73e:	eb01 0180 	add.w	r1, r1, r0, lsl #2
9000a742:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000a746:	f851 1c4c 	ldr.w	r1, [r1, #-76]
9000a74a:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
9000a74e:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
    MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_RBDS, (CvtEltSize[hfdcan->Init.RxBufferSize] << FDCAN_RXESC_RBDS_Pos));
9000a752:	e9d4 2714 	ldrd	r2, r7, [r4, #80]	; 0x50
  if (hfdcan->Init.RxBuffersNbr > 0U)
9000a756:	b16a      	cbz	r2, 9000a774 <HAL_FDCAN_Init+0x210>
    MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_RBDS, (CvtEltSize[hfdcan->Init.RxBufferSize] << FDCAN_RXESC_RBDS_Pos));
9000a758:	f10d 0c60 	add.w	ip, sp, #96	; 0x60
9000a75c:	f8d3 10bc 	ldr.w	r1, [r3, #188]	; 0xbc
9000a760:	eb0c 0c87 	add.w	ip, ip, r7, lsl #2
9000a764:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
9000a768:	f85c cc4c 	ldr.w	ip, [ip, #-76]
9000a76c:	ea41 210c 	orr.w	r1, r1, ip, lsl #8
9000a770:	f8c3 10bc 	str.w	r1, [r3, #188]	; 0xbc
  if (hfdcan->Instance == FDCAN1)
9000a774:	4977      	ldr	r1, [pc, #476]	; (9000a954 <HAL_FDCAN_Init+0x3f0>)
9000a776:	428b      	cmp	r3, r1
9000a778:	f000 80de 	beq.w	9000a938 <HAL_FDCAN_Init+0x3d4>
  StartAddress += (hfdcan->Init.RxBuffersNbr * hfdcan->Init.RxBufferSize);
9000a77c:	fb07 f202 	mul.w	r2, r7, r2
  hfdcan->State = HAL_FDCAN_STATE_READY;
9000a780:	f04f 0101 	mov.w	r1, #1
  StartAddress += (hfdcan->Init.RxFifo0ElmtsNbr * hfdcan->Init.RxFifo0ElmtSize);
9000a784:	fb05 f908 	mul.w	r9, r5, r8
  MODIFY_REG(hfdcan->Instance->SIDFC, FDCAN_SIDFC_FLSSA, (StartAddress << FDCAN_SIDFC_FLSSA_Pos));
9000a788:	4d73      	ldr	r5, [pc, #460]	; (9000a958 <HAL_FDCAN_Init+0x3f4>)
  StartAddress += (hfdcan->Init.RxBuffersNbr * hfdcan->Init.RxBufferSize);
9000a78a:	9203      	str	r2, [sp, #12]
  hfdcan->ErrorCode = HAL_FDCAN_ERROR_NONE;
9000a78c:	2200      	movs	r2, #0
  StartAddress = hfdcan->Init.MessageRAMOffset;
9000a78e:	f8d4 e034 	ldr.w	lr, [r4, #52]	; 0x34
  StartAddress += (hfdcan->Init.RxFifo1ElmtsNbr * hfdcan->Init.RxFifo1ElmtSize);
9000a792:	fb00 fa06 	mul.w	sl, r0, r6
  hfdcan->ErrorCode = HAL_FDCAN_ERROR_NONE;
9000a796:	f8c4 209c 	str.w	r2, [r4, #156]	; 0x9c
  hfdcan->LatestTxFifoQRequest = 0U;
9000a79a:	f8c4 2094 	str.w	r2, [r4, #148]	; 0x94
  hfdcan->State = HAL_FDCAN_STATE_READY;
9000a79e:	f884 1098 	strb.w	r1, [r4, #152]	; 0x98
  MODIFY_REG(hfdcan->Instance->SIDFC, FDCAN_SIDFC_FLSSA, (StartAddress << FDCAN_SIDFC_FLSSA_Pos));
9000a7a2:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
  MODIFY_REG(hfdcan->Instance->SIDFC, FDCAN_SIDFC_LSS, (hfdcan->Init.StdFiltersNbr << FDCAN_SIDFC_LSS_Pos));
9000a7a6:	f8d4 c038 	ldr.w	ip, [r4, #56]	; 0x38
  MODIFY_REG(hfdcan->Instance->SIDFC, FDCAN_SIDFC_FLSSA, (StartAddress << FDCAN_SIDFC_FLSSA_Pos));
9000a7aa:	402a      	ands	r2, r5
  MODIFY_REG(hfdcan->Instance->XIDFC, FDCAN_XIDFC_LSE, (hfdcan->Init.ExtFiltersNbr << FDCAN_XIDFC_LSE_Pos));
9000a7ac:	6be7      	ldr	r7, [r4, #60]	; 0x3c
  MODIFY_REG(hfdcan->Instance->TXEFC, FDCAN_TXEFC_EFS, (hfdcan->Init.TxEventsNbr << FDCAN_TXEFC_EFS_Pos));
9000a7ae:	6da0      	ldr	r0, [r4, #88]	; 0x58
  MODIFY_REG(hfdcan->Instance->SIDFC, FDCAN_SIDFC_FLSSA, (StartAddress << FDCAN_SIDFC_FLSSA_Pos));
9000a7b0:	ea42 028e 	orr.w	r2, r2, lr, lsl #2
9000a7b4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  MODIFY_REG(hfdcan->Instance->SIDFC, FDCAN_SIDFC_LSS, (hfdcan->Init.StdFiltersNbr << FDCAN_SIDFC_LSS_Pos));
9000a7b8:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
9000a7bc:	f422 027f 	bic.w	r2, r2, #16711680	; 0xff0000
9000a7c0:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
9000a7c4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  StartAddress += hfdcan->Init.StdFiltersNbr;
9000a7c8:	eb0e 020c 	add.w	r2, lr, ip
  MODIFY_REG(hfdcan->Instance->XIDFC, FDCAN_XIDFC_FLESA, (StartAddress << FDCAN_XIDFC_FLESA_Pos));
9000a7cc:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
9000a7d0:	4029      	ands	r1, r5
9000a7d2:	ea41 0182 	orr.w	r1, r1, r2, lsl #2
  StartAddress += (hfdcan->Init.ExtFiltersNbr * 2U);
9000a7d6:	eb02 0247 	add.w	r2, r2, r7, lsl #1
  MODIFY_REG(hfdcan->Instance->XIDFC, FDCAN_XIDFC_FLESA, (StartAddress << FDCAN_XIDFC_FLESA_Pos));
9000a7da:	f8c3 1088 	str.w	r1, [r3, #136]	; 0x88
  MODIFY_REG(hfdcan->Instance->XIDFC, FDCAN_XIDFC_LSE, (hfdcan->Init.ExtFiltersNbr << FDCAN_XIDFC_LSE_Pos));
9000a7de:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
9000a7e2:	f421 01fe 	bic.w	r1, r1, #8323072	; 0x7f0000
9000a7e6:	ea41 4107 	orr.w	r1, r1, r7, lsl #16
9000a7ea:	f8c3 1088 	str.w	r1, [r3, #136]	; 0x88
  MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0SA, (StartAddress << FDCAN_RXF0C_F0SA_Pos));
9000a7ee:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
9000a7f2:	4029      	ands	r1, r5
9000a7f4:	ea41 0182 	orr.w	r1, r1, r2, lsl #2
  StartAddress += (hfdcan->Init.RxFifo0ElmtsNbr * hfdcan->Init.RxFifo0ElmtSize);
9000a7f8:	444a      	add	r2, r9
  MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0SA, (StartAddress << FDCAN_RXF0C_F0SA_Pos));
9000a7fa:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
  MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0S, (hfdcan->Init.RxFifo0ElmtsNbr << FDCAN_RXF0C_F0S_Pos));
9000a7fe:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
9000a802:	f421 01fe 	bic.w	r1, r1, #8323072	; 0x7f0000
9000a806:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000a80a:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
  MODIFY_REG(hfdcan->Instance->RXF1C, FDCAN_RXF1C_F1SA, (StartAddress << FDCAN_RXF1C_F1SA_Pos));
9000a80e:	f8d3 10b0 	ldr.w	r1, [r3, #176]	; 0xb0
9000a812:	4029      	ands	r1, r5
9000a814:	ea41 0182 	orr.w	r1, r1, r2, lsl #2
9000a818:	f8c3 10b0 	str.w	r1, [r3, #176]	; 0xb0
  StartAddress += (hfdcan->Init.RxFifo1ElmtsNbr * hfdcan->Init.RxFifo1ElmtSize);
9000a81c:	eb02 010a 	add.w	r1, r2, sl
  MODIFY_REG(hfdcan->Instance->RXF1C, FDCAN_RXF1C_F1S, (hfdcan->Init.RxFifo1ElmtsNbr << FDCAN_RXF1C_F1S_Pos));
9000a820:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
9000a824:	f422 08fe 	bic.w	r8, r2, #8323072	; 0x7f0000
9000a828:	ea48 4606 	orr.w	r6, r8, r6, lsl #16
9000a82c:	f8c3 60b0 	str.w	r6, [r3, #176]	; 0xb0
  MODIFY_REG(hfdcan->Instance->RXBC, FDCAN_RXBC_RBSA, (StartAddress << FDCAN_RXBC_RBSA_Pos));
9000a830:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
  StartAddress += (hfdcan->Init.RxBuffersNbr * hfdcan->Init.RxBufferSize);
9000a834:	9e03      	ldr	r6, [sp, #12]
  MODIFY_REG(hfdcan->Instance->RXBC, FDCAN_RXBC_RBSA, (StartAddress << FDCAN_RXBC_RBSA_Pos));
9000a836:	402a      	ands	r2, r5
9000a838:	ea42 0281 	orr.w	r2, r2, r1, lsl #2
  StartAddress += (hfdcan->Init.RxBuffersNbr * hfdcan->Init.RxBufferSize);
9000a83c:	4431      	add	r1, r6
  MODIFY_REG(hfdcan->Instance->RXBC, FDCAN_RXBC_RBSA, (StartAddress << FDCAN_RXBC_RBSA_Pos));
9000a83e:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
  MODIFY_REG(hfdcan->Instance->TXEFC, FDCAN_TXEFC_EFSA, (StartAddress << FDCAN_TXEFC_EFSA_Pos));
9000a842:	f8d3 20f0 	ldr.w	r2, [r3, #240]	; 0xf0
9000a846:	402a      	ands	r2, r5
9000a848:	ea42 0281 	orr.w	r2, r2, r1, lsl #2
  StartAddress += (hfdcan->Init.TxEventsNbr * 2U);
9000a84c:	eb01 0140 	add.w	r1, r1, r0, lsl #1
  MODIFY_REG(hfdcan->Instance->TXEFC, FDCAN_TXEFC_EFSA, (StartAddress << FDCAN_TXEFC_EFSA_Pos));
9000a850:	f8c3 20f0 	str.w	r2, [r3, #240]	; 0xf0
  MODIFY_REG(hfdcan->Instance->TXEFC, FDCAN_TXEFC_EFS, (hfdcan->Init.TxEventsNbr << FDCAN_TXEFC_EFS_Pos));
9000a854:	f8d3 20f0 	ldr.w	r2, [r3, #240]	; 0xf0
9000a858:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
9000a85c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a860:	f8c3 20f0 	str.w	r2, [r3, #240]	; 0xf0
  hfdcan->msgRam.StandardFilterSA = SRAMCAN_BASE + (hfdcan->Init.MessageRAMOffset * 4U);
9000a864:	4a3d      	ldr	r2, [pc, #244]	; (9000a95c <HAL_FDCAN_Init+0x3f8>)
9000a866:	4472      	add	r2, lr
9000a868:	0092      	lsls	r2, r2, #2
  hfdcan->msgRam.ExtendedFilterSA = hfdcan->msgRam.StandardFilterSA + (hfdcan->Init.StdFiltersNbr * 4U);
9000a86a:	eb02 0c8c 	add.w	ip, r2, ip, lsl #2
  hfdcan->msgRam.RxFIFO0SA = hfdcan->msgRam.ExtendedFilterSA + (hfdcan->Init.ExtFiltersNbr * 2U * 4U);
9000a86e:	eb0c 07c7 	add.w	r7, ip, r7, lsl #3
  hfdcan->msgRam.RxFIFO1SA = hfdcan->msgRam.RxFIFO0SA + (hfdcan->Init.RxFifo0ElmtsNbr * hfdcan->Init.RxFifo0ElmtSize * 4U);
9000a872:	eb07 0989 	add.w	r9, r7, r9, lsl #2
  hfdcan->msgRam.RxBufferSA = hfdcan->msgRam.RxFIFO1SA + (hfdcan->Init.RxFifo1ElmtsNbr * hfdcan->Init.RxFifo1ElmtSize * 4U);
9000a876:	eb09 088a 	add.w	r8, r9, sl, lsl #2
  MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_TBSA, (StartAddress << FDCAN_TXBC_TBSA_Pos));
9000a87a:	f8d3 a0c0 	ldr.w	sl, [r3, #192]	; 0xc0
9000a87e:	ea0a 0505 	and.w	r5, sl, r5
  hfdcan->msgRam.TxEventFIFOSA = hfdcan->msgRam.RxBufferSA + (hfdcan->Init.RxBuffersNbr * hfdcan->Init.RxBufferSize * 4U);
9000a882:	eb08 0e86 	add.w	lr, r8, r6, lsl #2
  MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_TBSA, (StartAddress << FDCAN_TXBC_TBSA_Pos));
9000a886:	ea45 0581 	orr.w	r5, r5, r1, lsl #2
  hfdcan->msgRam.TxBufferSA = hfdcan->msgRam.TxEventFIFOSA + (hfdcan->Init.TxEventsNbr * 2U * 4U);
9000a88a:	eb0e 06c0 	add.w	r6, lr, r0, lsl #3
  MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_TBSA, (StartAddress << FDCAN_TXBC_TBSA_Pos));
9000a88e:	f8c3 50c0 	str.w	r5, [r3, #192]	; 0xc0
  MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_NDTB, (hfdcan->Init.TxBuffersNbr << FDCAN_TXBC_NDTB_Pos));
9000a892:	f8d3 10c0 	ldr.w	r1, [r3, #192]	; 0xc0
9000a896:	9d01      	ldr	r5, [sp, #4]
9000a898:	f421 117c 	bic.w	r1, r1, #4128768	; 0x3f0000
  hfdcan->msgRam.TxFIFOQSA = hfdcan->msgRam.TxBufferSA + (hfdcan->Init.TxBuffersNbr * hfdcan->Init.TxElmtSize * 4U);
9000a89c:	9802      	ldr	r0, [sp, #8]
  MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_NDTB, (hfdcan->Init.TxBuffersNbr << FDCAN_TXBC_NDTB_Pos));
9000a89e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
  hfdcan->msgRam.TxFIFOQSA = hfdcan->msgRam.TxBufferSA + (hfdcan->Init.TxBuffersNbr * hfdcan->Init.TxElmtSize * 4U);
9000a8a2:	fb00 f505 	mul.w	r5, r0, r5
  MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_NDTB, (hfdcan->Init.TxBuffersNbr << FDCAN_TXBC_NDTB_Pos));
9000a8a6:	f8c3 10c0 	str.w	r1, [r3, #192]	; 0xc0
  hfdcan->msgRam.TxFIFOQSA = hfdcan->msgRam.TxBufferSA + (hfdcan->Init.TxBuffersNbr * hfdcan->Init.TxElmtSize * 4U);
9000a8aa:	eb06 0585 	add.w	r5, r6, r5, lsl #2
  MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_TFQS, (hfdcan->Init.TxFifoQueueElmtsNbr << FDCAN_TXBC_TFQS_Pos));
9000a8ae:	f8d3 a0c0 	ldr.w	sl, [r3, #192]	; 0xc0
  hfdcan->msgRam.EndAddress = hfdcan->msgRam.TxFIFOQSA + (hfdcan->Init.TxFifoQueueElmtsNbr * hfdcan->Init.TxElmtSize * 4U);
9000a8b2:	fb00 f10b 	mul.w	r1, r0, fp
  MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_TFQS, (hfdcan->Init.TxFifoQueueElmtsNbr << FDCAN_TXBC_TFQS_Pos));
9000a8b6:	f02a 5a7c 	bic.w	sl, sl, #1056964608	; 0x3f000000
  hfdcan->msgRam.EndAddress = hfdcan->msgRam.TxFIFOQSA + (hfdcan->Init.TxFifoQueueElmtsNbr * hfdcan->Init.TxElmtSize * 4U);
9000a8ba:	eb05 0181 	add.w	r1, r5, r1, lsl #2
  MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_TFQS, (hfdcan->Init.TxFifoQueueElmtsNbr << FDCAN_TXBC_TFQS_Pos));
9000a8be:	ea4a 6a0b 	orr.w	sl, sl, fp, lsl #24
9000a8c2:	f8c3 a0c0 	str.w	sl, [r3, #192]	; 0xc0
  if (hfdcan->msgRam.EndAddress > FDCAN_MESSAGE_RAM_END_ADDRESS) /* Last address of the Message RAM */
9000a8c6:	4b26      	ldr	r3, [pc, #152]	; (9000a960 <HAL_FDCAN_Init+0x3fc>)
  hfdcan->msgRam.TxFIFOQSA = hfdcan->msgRam.TxBufferSA + (hfdcan->Init.TxBuffersNbr * hfdcan->Init.TxElmtSize * 4U);
9000a8c8:	f8c4 5088 	str.w	r5, [r4, #136]	; 0x88
  if (hfdcan->msgRam.EndAddress > FDCAN_MESSAGE_RAM_END_ADDRESS) /* Last address of the Message RAM */
9000a8cc:	4299      	cmp	r1, r3
  hfdcan->msgRam.StandardFilterSA = SRAMCAN_BASE + (hfdcan->Init.MessageRAMOffset * 4U);
9000a8ce:	66e2      	str	r2, [r4, #108]	; 0x6c
  hfdcan->msgRam.EndAddress = hfdcan->msgRam.TxFIFOQSA + (hfdcan->Init.TxFifoQueueElmtsNbr * hfdcan->Init.TxElmtSize * 4U);
9000a8d0:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
  hfdcan->msgRam.RxFIFO0SA = hfdcan->msgRam.ExtendedFilterSA + (hfdcan->Init.ExtFiltersNbr * 2U * 4U);
9000a8d4:	e9c4 c71c 	strd	ip, r7, [r4, #112]	; 0x70
  hfdcan->msgRam.RxBufferSA = hfdcan->msgRam.RxFIFO1SA + (hfdcan->Init.RxFifo1ElmtsNbr * hfdcan->Init.RxFifo1ElmtSize * 4U);
9000a8d8:	e9c4 981e 	strd	r9, r8, [r4, #120]	; 0x78
  hfdcan->msgRam.TxBufferSA = hfdcan->msgRam.TxEventFIFOSA + (hfdcan->Init.TxEventsNbr * 2U * 4U);
9000a8dc:	e9c4 e620 	strd	lr, r6, [r4, #128]	; 0x80
  if (hfdcan->msgRam.EndAddress > FDCAN_MESSAGE_RAM_END_ADDRESS) /* Last address of the Message RAM */
9000a8e0:	d81f      	bhi.n	9000a922 <HAL_FDCAN_Init+0x3be>
    for (RAMcounter = hfdcan->msgRam.StandardFilterSA; RAMcounter < hfdcan->msgRam.EndAddress; RAMcounter += 4U)
9000a8e2:	428a      	cmp	r2, r1
9000a8e4:	d206      	bcs.n	9000a8f4 <HAL_FDCAN_Init+0x390>
      *(uint32_t *)(RAMcounter) = 0x00000000;
9000a8e6:	2300      	movs	r3, #0
9000a8e8:	f842 3b04 	str.w	r3, [r2], #4
    for (RAMcounter = hfdcan->msgRam.StandardFilterSA; RAMcounter < hfdcan->msgRam.EndAddress; RAMcounter += 4U)
9000a8ec:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
9000a8f0:	429a      	cmp	r2, r3
9000a8f2:	d3f8      	bcc.n	9000a8e6 <HAL_FDCAN_Init+0x382>
  return HAL_OK;
9000a8f4:	2000      	movs	r0, #0
}
9000a8f6:	b019      	add	sp, #100	; 0x64
9000a8f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_ERROR;
9000a8fc:	2001      	movs	r0, #1
}
9000a8fe:	b019      	add	sp, #100	; 0x64
9000a900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    MODIFY_REG(hfdcan->Instance->TXESC, FDCAN_TXESC_TBDS, CvtEltSize[hfdcan->Init.TxElmtSize]);
9000a904:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000a906:	a818      	add	r0, sp, #96	; 0x60
9000a908:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
9000a90c:	9102      	str	r1, [sp, #8]
9000a90e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
9000a912:	f022 0207 	bic.w	r2, r2, #7
9000a916:	f851 1c4c 	ldr.w	r1, [r1, #-76]
9000a91a:	430a      	orrs	r2, r1
9000a91c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
9000a920:	e6f6      	b.n	9000a710 <HAL_FDCAN_Init+0x1ac>
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
9000a922:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
    hfdcan->State = HAL_FDCAN_STATE_ERROR;
9000a926:	2203      	movs	r2, #3
    return HAL_ERROR;
9000a928:	2001      	movs	r0, #1
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
9000a92a:	f043 0320 	orr.w	r3, r3, #32
9000a92e:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
    hfdcan->State = HAL_FDCAN_STATE_ERROR;
9000a932:	f884 2098 	strb.w	r2, [r4, #152]	; 0x98
    return HAL_ERROR;
9000a936:	e69a      	b.n	9000a66e <HAL_FDCAN_Init+0x10a>
    CLEAR_BIT(hfdcan->ttcan->TTOCF, FDCAN_TTOCF_OM);
9000a938:	f8d4 c004 	ldr.w	ip, [r4, #4]
9000a93c:	f8dc 1008 	ldr.w	r1, [ip, #8]
9000a940:	f021 0103 	bic.w	r1, r1, #3
9000a944:	f8cc 1008 	str.w	r1, [ip, #8]
9000a948:	e718      	b.n	9000a77c <HAL_FDCAN_Init+0x218>
      SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_MON);
9000a94a:	f042 0220 	orr.w	r2, r2, #32
9000a94e:	619a      	str	r2, [r3, #24]
9000a950:	e6a4      	b.n	9000a69c <HAL_FDCAN_Init+0x138>
9000a952:	bf00      	nop
9000a954:	4000a000 	.word	0x4000a000
9000a958:	ffff0003 	.word	0xffff0003
9000a95c:	10002b00 	.word	0x10002b00
9000a960:	4000d3fc 	.word	0x4000d3fc

9000a964 <HAL_FDCAN_ConfigFilter>:
  HAL_FDCAN_StateTypeDef state = hfdcan->State;
9000a964:	f890 2098 	ldrb.w	r2, [r0, #152]	; 0x98
{
9000a968:	4603      	mov	r3, r0
  if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
9000a96a:	3a01      	subs	r2, #1
9000a96c:	2a01      	cmp	r2, #1
9000a96e:	d907      	bls.n	9000a980 <HAL_FDCAN_ConfigFilter+0x1c>
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
9000a970:	f8d0 209c 	ldr.w	r2, [r0, #156]	; 0x9c
    return HAL_ERROR;
9000a974:	2001      	movs	r0, #1
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
9000a976:	f042 0202 	orr.w	r2, r2, #2
9000a97a:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
}
9000a97e:	4770      	bx	lr
    if (sFilterConfig->IdType == FDCAN_STANDARD_ID)
9000a980:	6808      	ldr	r0, [r1, #0]
    if (sFilterConfig->FilterConfig == FDCAN_FILTER_TO_RXBUFFER)
9000a982:	68ca      	ldr	r2, [r1, #12]
{
9000a984:	b410      	push	{r4}
    if (sFilterConfig->IdType == FDCAN_STANDARD_ID)
9000a986:	b990      	cbnz	r0, 9000a9ae <HAL_FDCAN_ConfigFilter+0x4a>
      if (sFilterConfig->FilterConfig == FDCAN_FILTER_TO_RXBUFFER)
9000a988:	2a07      	cmp	r2, #7
9000a98a:	d027      	beq.n	9000a9dc <HAL_FDCAN_ConfigFilter+0x78>
                           (sFilterConfig->FilterConfig << 27U) |
9000a98c:	06d2      	lsls	r2, r2, #27
        FilterElementW1 = ((sFilterConfig->FilterType << 30U)   |
9000a98e:	688c      	ldr	r4, [r1, #8]
9000a990:	6948      	ldr	r0, [r1, #20]
9000a992:	ea42 7284 	orr.w	r2, r2, r4, lsl #30
9000a996:	4302      	orrs	r2, r0
                           (sFilterConfig->FilterID1 << 16U)    |
9000a998:	6908      	ldr	r0, [r1, #16]
        FilterElementW1 = ((sFilterConfig->FilterType << 30U)   |
9000a99a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
      FilterAddress = (uint32_t *)(hfdcan->msgRam.StandardFilterSA + (sFilterConfig->FilterIndex * 4U));
9000a99e:	6849      	ldr	r1, [r1, #4]
    return HAL_OK;
9000a9a0:	2000      	movs	r0, #0
      *FilterAddress = FilterElementW1;
9000a9a2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
}
9000a9a4:	f85d 4b04 	ldr.w	r4, [sp], #4
      *FilterAddress = FilterElementW1;
9000a9a8:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
}
9000a9ac:	4770      	bx	lr
      FilterElementW1 = ((sFilterConfig->FilterConfig << 29U) | sFilterConfig->FilterID1);
9000a9ae:	6908      	ldr	r0, [r1, #16]
      if (sFilterConfig->FilterConfig == FDCAN_FILTER_TO_RXBUFFER)
9000a9b0:	2a07      	cmp	r2, #7
      FilterElementW1 = ((sFilterConfig->FilterConfig << 29U) | sFilterConfig->FilterID1);
9000a9b2:	ea40 7042 	orr.w	r0, r0, r2, lsl #29
      if (sFilterConfig->FilterConfig == FDCAN_FILTER_TO_RXBUFFER)
9000a9b6:	d00f      	beq.n	9000a9d8 <HAL_FDCAN_ConfigFilter+0x74>
        FilterElementW2 = ((sFilterConfig->FilterType << 30U) | sFilterConfig->FilterID2);
9000a9b8:	694a      	ldr	r2, [r1, #20]
9000a9ba:	688c      	ldr	r4, [r1, #8]
9000a9bc:	ea42 7284 	orr.w	r2, r2, r4, lsl #30
      FilterAddress = (uint32_t *)(hfdcan->msgRam.ExtendedFilterSA + (sFilterConfig->FilterIndex * 4U * 2U));
9000a9c0:	6849      	ldr	r1, [r1, #4]
9000a9c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
}
9000a9c4:	f85d 4b04 	ldr.w	r4, [sp], #4
      FilterAddress = (uint32_t *)(hfdcan->msgRam.ExtendedFilterSA + (sFilterConfig->FilterIndex * 4U * 2U));
9000a9c8:	eb03 0cc1 	add.w	ip, r3, r1, lsl #3
      *FilterAddress = FilterElementW1;
9000a9cc:	f843 0031 	str.w	r0, [r3, r1, lsl #3]
    return HAL_OK;
9000a9d0:	2000      	movs	r0, #0
      *FilterAddress = FilterElementW2;
9000a9d2:	f8cc 2004 	str.w	r2, [ip, #4]
}
9000a9d6:	4770      	bx	lr
        FilterElementW2 = sFilterConfig->RxBufferIndex;
9000a9d8:	698a      	ldr	r2, [r1, #24]
9000a9da:	e7f1      	b.n	9000a9c0 <HAL_FDCAN_ConfigFilter+0x5c>
                           (sFilterConfig->IsCalibrationMsg << 8U) |
9000a9dc:	69c8      	ldr	r0, [r1, #28]
9000a9de:	0202      	lsls	r2, r0, #8
                           (sFilterConfig->FilterID1 << 16U)       |
9000a9e0:	6908      	ldr	r0, [r1, #16]
9000a9e2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
                           (sFilterConfig->IsCalibrationMsg << 8U) |
9000a9e6:	6988      	ldr	r0, [r1, #24]
9000a9e8:	4302      	orrs	r2, r0
        FilterElementW1 = ((FDCAN_FILTER_TO_RXBUFFER << 27U)       |
9000a9ea:	f042 5260 	orr.w	r2, r2, #939524096	; 0x38000000
9000a9ee:	e7d6      	b.n	9000a99e <HAL_FDCAN_ConfigFilter+0x3a>

9000a9f0 <HAL_FDCAN_Start>:
  if (hfdcan->State == HAL_FDCAN_STATE_READY)
9000a9f0:	f890 2098 	ldrb.w	r2, [r0, #152]	; 0x98
{
9000a9f4:	4603      	mov	r3, r0
  if (hfdcan->State == HAL_FDCAN_STATE_READY)
9000a9f6:	2a01      	cmp	r2, #1
9000a9f8:	d007      	beq.n	9000aa0a <HAL_FDCAN_Start+0x1a>
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
9000a9fa:	f8d0 209c 	ldr.w	r2, [r0, #156]	; 0x9c
    return HAL_ERROR;
9000a9fe:	2001      	movs	r0, #1
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
9000aa00:	f042 0204 	orr.w	r2, r2, #4
9000aa04:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
}
9000aa08:	4770      	bx	lr
{
9000aa0a:	b410      	push	{r4}
    hfdcan->State = HAL_FDCAN_STATE_BUSY;
9000aa0c:	2202      	movs	r2, #2
    CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
9000aa0e:	6804      	ldr	r4, [r0, #0]
    hfdcan->ErrorCode = HAL_FDCAN_ERROR_NONE;
9000aa10:	2100      	movs	r1, #0
    hfdcan->State = HAL_FDCAN_STATE_BUSY;
9000aa12:	f880 2098 	strb.w	r2, [r0, #152]	; 0x98
    CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
9000aa16:	69a2      	ldr	r2, [r4, #24]
    return HAL_OK;
9000aa18:	4608      	mov	r0, r1
    CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
9000aa1a:	f022 0201 	bic.w	r2, r2, #1
9000aa1e:	61a2      	str	r2, [r4, #24]
}
9000aa20:	f85d 4b04 	ldr.w	r4, [sp], #4
    hfdcan->ErrorCode = HAL_FDCAN_ERROR_NONE;
9000aa24:	f8c3 109c 	str.w	r1, [r3, #156]	; 0x9c
}
9000aa28:	4770      	bx	lr
9000aa2a:	bf00      	nop

9000aa2c <HAL_FDCAN_AddMessageToTxFifoQ>:
{
9000aa2c:	b570      	push	{r4, r5, r6, lr}
  if (hfdcan->State == HAL_FDCAN_STATE_BUSY)
9000aa2e:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
{
9000aa32:	4604      	mov	r4, r0
  if (hfdcan->State == HAL_FDCAN_STATE_BUSY)
9000aa34:	2b02      	cmp	r3, #2
9000aa36:	d112      	bne.n	9000aa5e <HAL_FDCAN_AddMessageToTxFifoQ+0x32>
    if ((hfdcan->Instance->TXBC & FDCAN_TXBC_TFQS) == 0U)
9000aa38:	6806      	ldr	r6, [r0, #0]
9000aa3a:	f8d6 30c0 	ldr.w	r3, [r6, #192]	; 0xc0
9000aa3e:	f013 5f7c 	tst.w	r3, #1056964608	; 0x3f000000
9000aa42:	d014      	beq.n	9000aa6e <HAL_FDCAN_AddMessageToTxFifoQ+0x42>
    if ((hfdcan->Instance->TXFQS & FDCAN_TXFQS_TFQF) != 0U)
9000aa44:	f8d6 50c4 	ldr.w	r5, [r6, #196]	; 0xc4
9000aa48:	f415 1500 	ands.w	r5, r5, #2097152	; 0x200000
9000aa4c:	d017      	beq.n	9000aa7e <HAL_FDCAN_AddMessageToTxFifoQ+0x52>
      hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_FULL;
9000aa4e:	f8d0 309c 	ldr.w	r3, [r0, #156]	; 0x9c
      return HAL_ERROR;
9000aa52:	2001      	movs	r0, #1
      hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_FULL;
9000aa54:	f443 7300 	orr.w	r3, r3, #512	; 0x200
9000aa58:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
}
9000aa5c:	bd70      	pop	{r4, r5, r6, pc}
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
9000aa5e:	f8d0 309c 	ldr.w	r3, [r0, #156]	; 0x9c
    return HAL_ERROR;
9000aa62:	2001      	movs	r0, #1
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
9000aa64:	f043 0308 	orr.w	r3, r3, #8
9000aa68:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
}
9000aa6c:	bd70      	pop	{r4, r5, r6, pc}
      hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
9000aa6e:	f8d0 309c 	ldr.w	r3, [r0, #156]	; 0x9c
      return HAL_ERROR;
9000aa72:	2001      	movs	r0, #1
      hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
9000aa74:	f043 0320 	orr.w	r3, r3, #32
9000aa78:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
}
9000aa7c:	bd70      	pop	{r4, r5, r6, pc}
      PutIndex = ((hfdcan->Instance->TXFQS & FDCAN_TXFQS_TFQPI) >> FDCAN_TXFQS_TFQPI_Pos);
9000aa7e:	f8d6 60c4 	ldr.w	r6, [r6, #196]	; 0xc4
9000aa82:	f3c6 4604 	ubfx	r6, r6, #16, #5
      FDCAN_CopyMessageToRAM(hfdcan, pTxHeader, pTxData, PutIndex);
9000aa86:	4633      	mov	r3, r6
9000aa88:	f7ff fd28 	bl	9000a4dc <FDCAN_CopyMessageToRAM>
      hfdcan->Instance->TXBAR = ((uint32_t)1 << PutIndex);
9000aa8c:	2201      	movs	r2, #1
9000aa8e:	6821      	ldr	r1, [r4, #0]
    return HAL_OK;
9000aa90:	4628      	mov	r0, r5
      hfdcan->Instance->TXBAR = ((uint32_t)1 << PutIndex);
9000aa92:	40b2      	lsls	r2, r6
9000aa94:	f8c1 20d0 	str.w	r2, [r1, #208]	; 0xd0
      hfdcan->LatestTxFifoQRequest = ((uint32_t)1 << PutIndex);
9000aa98:	f8c4 2094 	str.w	r2, [r4, #148]	; 0x94
}
9000aa9c:	bd70      	pop	{r4, r5, r6, pc}
9000aa9e:	bf00      	nop

9000aaa0 <HAL_FDCAN_GetRxMessage>:
{
9000aaa0:	4684      	mov	ip, r0
  HAL_FDCAN_StateTypeDef state = hfdcan->State;
9000aaa2:	f890 0098 	ldrb.w	r0, [r0, #152]	; 0x98
  if (state == HAL_FDCAN_STATE_BUSY)
9000aaa6:	2802      	cmp	r0, #2
9000aaa8:	d161      	bne.n	9000ab6e <HAL_FDCAN_GetRxMessage+0xce>
    if (RxLocation == FDCAN_RX_FIFO0) /* Rx element is assigned to the Rx FIFO 0 */
9000aaaa:	2940      	cmp	r1, #64	; 0x40
{
9000aaac:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (RxLocation == FDCAN_RX_FIFO0) /* Rx element is assigned to the Rx FIFO 0 */
9000aaae:	d066      	beq.n	9000ab7e <HAL_FDCAN_GetRxMessage+0xde>
    else if (RxLocation == FDCAN_RX_FIFO1) /* Rx element is assigned to the Rx FIFO 1 */
9000aab0:	2941      	cmp	r1, #65	; 0x41
9000aab2:	f000 8082 	beq.w	9000abba <HAL_FDCAN_GetRxMessage+0x11a>
      if (RxLocation >= hfdcan->Init.RxBuffersNbr)
9000aab6:	f8dc 0050 	ldr.w	r0, [ip, #80]	; 0x50
9000aaba:	4288      	cmp	r0, r1
9000aabc:	d94f      	bls.n	9000ab5e <HAL_FDCAN_GetRxMessage+0xbe>
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxBufferSA + (RxLocation * hfdcan->Init.RxBufferSize * 4U));
9000aabe:	f8dc 5054 	ldr.w	r5, [ip, #84]	; 0x54
  uint32_t GetIndex = 0;
9000aac2:	2700      	movs	r7, #0
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxBufferSA + (RxLocation * hfdcan->Init.RxBufferSize * 4U));
9000aac4:	f8dc 007c 	ldr.w	r0, [ip, #124]	; 0x7c
9000aac8:	fb01 f505 	mul.w	r5, r1, r5
9000aacc:	eb00 0585 	add.w	r5, r0, r5, lsl #2
    pRxHeader->IdType = *RxAddress & FDCAN_ELEMENT_MASK_XTD;
9000aad0:	6828      	ldr	r0, [r5, #0]
9000aad2:	f000 4080 	and.w	r0, r0, #1073741824	; 0x40000000
9000aad6:	6050      	str	r0, [r2, #4]
    if (pRxHeader->IdType == FDCAN_STANDARD_ID) /* Standard ID element */
9000aad8:	2800      	cmp	r0, #0
9000aada:	f040 8094 	bne.w	9000ac06 <HAL_FDCAN_GetRxMessage+0x166>
      pRxHeader->Identifier = ((*RxAddress & FDCAN_ELEMENT_MASK_STDID) >> 18);
9000aade:	6828      	ldr	r0, [r5, #0]
9000aae0:	f3c0 408a 	ubfx	r0, r0, #18, #11
9000aae4:	6010      	str	r0, [r2, #0]
    pRxHeader->RxFrameType = (*RxAddress & FDCAN_ELEMENT_MASK_RTR);
9000aae6:	6828      	ldr	r0, [r5, #0]
    for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
9000aae8:	4e54      	ldr	r6, [pc, #336]	; (9000ac3c <HAL_FDCAN_GetRxMessage+0x19c>)
    pRxHeader->RxFrameType = (*RxAddress & FDCAN_ELEMENT_MASK_RTR);
9000aaea:	f000 5000 	and.w	r0, r0, #536870912	; 0x20000000
9000aaee:	6090      	str	r0, [r2, #8]
    pRxHeader->ErrorStateIndicator = (*RxAddress & FDCAN_ELEMENT_MASK_ESI);
9000aaf0:	6828      	ldr	r0, [r5, #0]
9000aaf2:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
9000aaf6:	6110      	str	r0, [r2, #16]
    pRxHeader->RxTimestamp = (*RxAddress & FDCAN_ELEMENT_MASK_TS);
9000aaf8:	88a8      	ldrh	r0, [r5, #4]
9000aafa:	61d0      	str	r0, [r2, #28]
    pRxHeader->DataLength = (*RxAddress & FDCAN_ELEMENT_MASK_DLC);
9000aafc:	6868      	ldr	r0, [r5, #4]
9000aafe:	f400 2070 	and.w	r0, r0, #983040	; 0xf0000
9000ab02:	60d0      	str	r0, [r2, #12]
    for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
9000ab04:	0c00      	lsrs	r0, r0, #16
    pRxHeader->BitRateSwitch = (*RxAddress & FDCAN_ELEMENT_MASK_BRS);
9000ab06:	686c      	ldr	r4, [r5, #4]
9000ab08:	f404 1480 	and.w	r4, r4, #1048576	; 0x100000
9000ab0c:	6154      	str	r4, [r2, #20]
    pRxHeader->FDFormat = (*RxAddress & FDCAN_ELEMENT_MASK_FDF);
9000ab0e:	686c      	ldr	r4, [r5, #4]
9000ab10:	f404 1400 	and.w	r4, r4, #2097152	; 0x200000
9000ab14:	6194      	str	r4, [r2, #24]
    pRxHeader->FilterIndex = ((*RxAddress & FDCAN_ELEMENT_MASK_FIDX) >> 24);
9000ab16:	79ec      	ldrb	r4, [r5, #7]
9000ab18:	f004 047f 	and.w	r4, r4, #127	; 0x7f
9000ab1c:	6214      	str	r4, [r2, #32]
    for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
9000ab1e:	5c34      	ldrb	r4, [r6, r0]
    pRxHeader->IsFilterMatchingFrame = ((*RxAddress & FDCAN_ELEMENT_MASK_ANMF) >> 31);
9000ab20:	6868      	ldr	r0, [r5, #4]
9000ab22:	0fc0      	lsrs	r0, r0, #31
9000ab24:	6250      	str	r0, [r2, #36]	; 0x24
    for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
9000ab26:	b164      	cbz	r4, 9000ab42 <HAL_FDCAN_GetRxMessage+0xa2>
9000ab28:	f103 3eff 	add.w	lr, r3, #4294967295
9000ab2c:	1de8      	adds	r0, r5, #7
9000ab2e:	1f83      	subs	r3, r0, #6
      pRxData[ByteCounter] = pData[ByteCounter];
9000ab30:	f810 4f01 	ldrb.w	r4, [r0, #1]!
9000ab34:	f80e 4f01 	strb.w	r4, [lr, #1]!
    for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
9000ab38:	1b5b      	subs	r3, r3, r5
9000ab3a:	89d4      	ldrh	r4, [r2, #14]
9000ab3c:	5d34      	ldrb	r4, [r6, r4]
9000ab3e:	429c      	cmp	r4, r3
9000ab40:	d8f5      	bhi.n	9000ab2e <HAL_FDCAN_GetRxMessage+0x8e>
    if (RxLocation == FDCAN_RX_FIFO0) /* Rx element is assigned to the Rx FIFO 0 */
9000ab42:	2940      	cmp	r1, #64	; 0x40
9000ab44:	d063      	beq.n	9000ac0e <HAL_FDCAN_GetRxMessage+0x16e>
    else if (RxLocation == FDCAN_RX_FIFO1) /* Rx element is assigned to the Rx FIFO 1 */
9000ab46:	2941      	cmp	r1, #65	; 0x41
9000ab48:	d072      	beq.n	9000ac30 <HAL_FDCAN_GetRxMessage+0x190>
      if (RxLocation < FDCAN_RX_BUFFER32)
9000ab4a:	291f      	cmp	r1, #31
9000ab4c:	d865      	bhi.n	9000ac1a <HAL_FDCAN_GetRxMessage+0x17a>
        hfdcan->Instance->NDAT1 = ((uint32_t)1 << RxLocation);
9000ab4e:	2301      	movs	r3, #1
9000ab50:	f8dc 2000 	ldr.w	r2, [ip]
    return HAL_OK;
9000ab54:	2000      	movs	r0, #0
        hfdcan->Instance->NDAT1 = ((uint32_t)1 << RxLocation);
9000ab56:	408b      	lsls	r3, r1
9000ab58:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
}
9000ab5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
9000ab5e:	f8dc 309c 	ldr.w	r3, [ip, #156]	; 0x9c
        return HAL_ERROR;
9000ab62:	2001      	movs	r0, #1
        hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
9000ab64:	f043 0320 	orr.w	r3, r3, #32
9000ab68:	f8cc 309c 	str.w	r3, [ip, #156]	; 0x9c
}
9000ab6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
9000ab6e:	f8dc 309c 	ldr.w	r3, [ip, #156]	; 0x9c
    return HAL_ERROR;
9000ab72:	2001      	movs	r0, #1
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
9000ab74:	f043 0308 	orr.w	r3, r3, #8
9000ab78:	f8cc 309c 	str.w	r3, [ip, #156]	; 0x9c
}
9000ab7c:	4770      	bx	lr
      if ((hfdcan->Instance->RXF0C & FDCAN_RXF0C_F0S) == 0U)
9000ab7e:	f8dc 0000 	ldr.w	r0, [ip]
9000ab82:	f8d0 40a0 	ldr.w	r4, [r0, #160]	; 0xa0
9000ab86:	f414 0ffe 	tst.w	r4, #8323072	; 0x7f0000
9000ab8a:	d0e8      	beq.n	9000ab5e <HAL_FDCAN_GetRxMessage+0xbe>
      if ((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0FL) == 0U)
9000ab8c:	f8d0 40a4 	ldr.w	r4, [r0, #164]	; 0xa4
9000ab90:	0667      	lsls	r7, r4, #25
9000ab92:	d030      	beq.n	9000abf6 <HAL_FDCAN_GetRxMessage+0x156>
        if(((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0F) >> FDCAN_RXF0S_F0F_Pos) == 1U)
9000ab94:	f8d0 40a4 	ldr.w	r4, [r0, #164]	; 0xa4
9000ab98:	01e6      	lsls	r6, r4, #7
9000ab9a:	d501      	bpl.n	9000aba0 <HAL_FDCAN_GetRxMessage+0x100>
          if(((hfdcan->Instance->RXF0C & FDCAN_RXF0C_F0OM) >> FDCAN_RXF0C_F0OM_Pos) == FDCAN_RX_FIFO_OVERWRITE)
9000ab9c:	f8d0 40a0 	ldr.w	r4, [r0, #160]	; 0xa0
        GetIndex += ((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0GI) >> FDCAN_RXF0S_F0GI_Pos);
9000aba0:	f8d0 70a4 	ldr.w	r7, [r0, #164]	; 0xa4
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO0SA + (GetIndex * hfdcan->Init.RxFifo0ElmtSize * 4U));
9000aba4:	f8dc 5044 	ldr.w	r5, [ip, #68]	; 0x44
        GetIndex += ((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0GI) >> FDCAN_RXF0S_F0GI_Pos);
9000aba8:	f3c7 2705 	ubfx	r7, r7, #8, #6
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO0SA + (GetIndex * hfdcan->Init.RxFifo0ElmtSize * 4U));
9000abac:	f8dc 0074 	ldr.w	r0, [ip, #116]	; 0x74
9000abb0:	fb07 f505 	mul.w	r5, r7, r5
9000abb4:	eb00 0585 	add.w	r5, r0, r5, lsl #2
9000abb8:	e78a      	b.n	9000aad0 <HAL_FDCAN_GetRxMessage+0x30>
      if ((hfdcan->Instance->RXF1C & FDCAN_RXF1C_F1S) == 0U)
9000abba:	f8dc 0000 	ldr.w	r0, [ip]
9000abbe:	f8d0 40b0 	ldr.w	r4, [r0, #176]	; 0xb0
9000abc2:	f414 0ffe 	tst.w	r4, #8323072	; 0x7f0000
9000abc6:	d0ca      	beq.n	9000ab5e <HAL_FDCAN_GetRxMessage+0xbe>
      if ((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1FL) == 0U)
9000abc8:	f8d0 40b4 	ldr.w	r4, [r0, #180]	; 0xb4
9000abcc:	0665      	lsls	r5, r4, #25
9000abce:	d012      	beq.n	9000abf6 <HAL_FDCAN_GetRxMessage+0x156>
        if(((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1F) >> FDCAN_RXF1S_F1F_Pos) == 1U)
9000abd0:	f8d0 40b4 	ldr.w	r4, [r0, #180]	; 0xb4
9000abd4:	01e4      	lsls	r4, r4, #7
9000abd6:	d501      	bpl.n	9000abdc <HAL_FDCAN_GetRxMessage+0x13c>
          if(((hfdcan->Instance->RXF1C & FDCAN_RXF1C_F1OM) >> FDCAN_RXF1C_F1OM_Pos) == FDCAN_RX_FIFO_OVERWRITE)
9000abd8:	f8d0 40b0 	ldr.w	r4, [r0, #176]	; 0xb0
        GetIndex += ((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1GI) >> FDCAN_RXF1S_F1GI_Pos);
9000abdc:	f8d0 70b4 	ldr.w	r7, [r0, #180]	; 0xb4
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO1SA + (GetIndex * hfdcan->Init.RxFifo1ElmtSize * 4U));
9000abe0:	f8dc 504c 	ldr.w	r5, [ip, #76]	; 0x4c
        GetIndex += ((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1GI) >> FDCAN_RXF1S_F1GI_Pos);
9000abe4:	f3c7 2705 	ubfx	r7, r7, #8, #6
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO1SA + (GetIndex * hfdcan->Init.RxFifo1ElmtSize * 4U));
9000abe8:	f8dc 0078 	ldr.w	r0, [ip, #120]	; 0x78
9000abec:	fb07 f505 	mul.w	r5, r7, r5
9000abf0:	eb00 0585 	add.w	r5, r0, r5, lsl #2
9000abf4:	e76c      	b.n	9000aad0 <HAL_FDCAN_GetRxMessage+0x30>
        hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_EMPTY;
9000abf6:	f8dc 309c 	ldr.w	r3, [ip, #156]	; 0x9c
        return HAL_ERROR;
9000abfa:	2001      	movs	r0, #1
        hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_EMPTY;
9000abfc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000ac00:	f8cc 309c 	str.w	r3, [ip, #156]	; 0x9c
}
9000ac04:	bdf0      	pop	{r4, r5, r6, r7, pc}
      pRxHeader->Identifier = (*RxAddress & FDCAN_ELEMENT_MASK_EXTID);
9000ac06:	6828      	ldr	r0, [r5, #0]
9000ac08:	f020 4060 	bic.w	r0, r0, #3758096384	; 0xe0000000
9000ac0c:	e76a      	b.n	9000aae4 <HAL_FDCAN_GetRxMessage+0x44>
      hfdcan->Instance->RXF0A = GetIndex;
9000ac0e:	f8dc 3000 	ldr.w	r3, [ip]
    return HAL_OK;
9000ac12:	2000      	movs	r0, #0
      hfdcan->Instance->RXF0A = GetIndex;
9000ac14:	f8c3 70a8 	str.w	r7, [r3, #168]	; 0xa8
}
9000ac18:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hfdcan->Instance->NDAT2 = ((uint32_t)1 << (RxLocation & 0x1FU));
9000ac1a:	f001 031f 	and.w	r3, r1, #31
9000ac1e:	2201      	movs	r2, #1
9000ac20:	f8dc 1000 	ldr.w	r1, [ip]
    return HAL_OK;
9000ac24:	2000      	movs	r0, #0
        hfdcan->Instance->NDAT2 = ((uint32_t)1 << (RxLocation & 0x1FU));
9000ac26:	fa02 f303 	lsl.w	r3, r2, r3
9000ac2a:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
}
9000ac2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      hfdcan->Instance->RXF1A = GetIndex;
9000ac30:	f8dc 3000 	ldr.w	r3, [ip]
    return HAL_OK;
9000ac34:	2000      	movs	r0, #0
      hfdcan->Instance->RXF1A = GetIndex;
9000ac36:	f8c3 70b8 	str.w	r7, [r3, #184]	; 0xb8
}
9000ac3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000ac3c:	9002fac4 	.word	0x9002fac4

9000ac40 <HAL_FDCAN_ActivateNotification>:
{
9000ac40:	4603      	mov	r3, r0
  HAL_FDCAN_StateTypeDef state = hfdcan->State;
9000ac42:	f890 0098 	ldrb.w	r0, [r0, #152]	; 0x98
  if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
9000ac46:	3801      	subs	r0, #1
9000ac48:	2801      	cmp	r0, #1
9000ac4a:	d907      	bls.n	9000ac5c <HAL_FDCAN_ActivateNotification+0x1c>
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
9000ac4c:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
    return HAL_ERROR;
9000ac50:	2001      	movs	r0, #1
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
9000ac52:	f042 0202 	orr.w	r2, r2, #2
9000ac56:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
}
9000ac5a:	4770      	bx	lr
    if ((ActiveITs & hfdcan->Instance->ILS) == 0U)
9000ac5c:	6818      	ldr	r0, [r3, #0]
9000ac5e:	6d83      	ldr	r3, [r0, #88]	; 0x58
9000ac60:	420b      	tst	r3, r1
{
9000ac62:	b410      	push	{r4}
    if ((ActiveITs & hfdcan->Instance->ILS) == 0U)
9000ac64:	d11f      	bne.n	9000aca6 <HAL_FDCAN_ActivateNotification+0x66>
      SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE0);
9000ac66:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
9000ac68:	f043 0301 	orr.w	r3, r3, #1
9000ac6c:	65c3      	str	r3, [r0, #92]	; 0x5c
    if ((ActiveITs & FDCAN_IT_TX_COMPLETE) != 0U)
9000ac6e:	058c      	lsls	r4, r1, #22
9000ac70:	d504      	bpl.n	9000ac7c <HAL_FDCAN_ActivateNotification+0x3c>
      SET_BIT(hfdcan->Instance->TXBTIE, BufferIndexes);
9000ac72:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
9000ac76:	4313      	orrs	r3, r2
9000ac78:	f8c0 30e0 	str.w	r3, [r0, #224]	; 0xe0
    if ((ActiveITs & FDCAN_IT_TX_ABORT_COMPLETE) != 0U)
9000ac7c:	054b      	lsls	r3, r1, #21
9000ac7e:	d504      	bpl.n	9000ac8a <HAL_FDCAN_ActivateNotification+0x4a>
      SET_BIT(hfdcan->Instance->TXBCIE, BufferIndexes);
9000ac80:	f8d0 30e4 	ldr.w	r3, [r0, #228]	; 0xe4
9000ac84:	431a      	orrs	r2, r3
9000ac86:	f8c0 20e4 	str.w	r2, [r0, #228]	; 0xe4
    __HAL_FDCAN_ENABLE_IT(hfdcan, ActiveITs);
9000ac8a:	4b0d      	ldr	r3, [pc, #52]	; (9000acc0 <HAL_FDCAN_ActivateNotification+0x80>)
9000ac8c:	6d44      	ldr	r4, [r0, #84]	; 0x54
9000ac8e:	400b      	ands	r3, r1
9000ac90:	4a0c      	ldr	r2, [pc, #48]	; (9000acc4 <HAL_FDCAN_ActivateNotification+0x84>)
9000ac92:	4323      	orrs	r3, r4
}
9000ac94:	f85d 4b04 	ldr.w	r4, [sp], #4
    __HAL_FDCAN_ENABLE_IT(hfdcan, ActiveITs);
9000ac98:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_OK;
9000ac9a:	2000      	movs	r0, #0
    __HAL_FDCAN_ENABLE_IT(hfdcan, ActiveITs);
9000ac9c:	6953      	ldr	r3, [r2, #20]
9000ac9e:	ea43 7191 	orr.w	r1, r3, r1, lsr #30
9000aca2:	6151      	str	r1, [r2, #20]
}
9000aca4:	4770      	bx	lr
    else if ((ActiveITs & hfdcan->Instance->ILS) == ActiveITs)
9000aca6:	6d83      	ldr	r3, [r0, #88]	; 0x58
9000aca8:	ea31 0303 	bics.w	r3, r1, r3
9000acac:	d002      	beq.n	9000acb4 <HAL_FDCAN_ActivateNotification+0x74>
      hfdcan->Instance->ILE = (FDCAN_INTERRUPT_LINE0 | FDCAN_INTERRUPT_LINE1);
9000acae:	2303      	movs	r3, #3
9000acb0:	65c3      	str	r3, [r0, #92]	; 0x5c
9000acb2:	e7dc      	b.n	9000ac6e <HAL_FDCAN_ActivateNotification+0x2e>
      SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE1);
9000acb4:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
9000acb6:	f043 0302 	orr.w	r3, r3, #2
9000acba:	65c3      	str	r3, [r0, #92]	; 0x5c
9000acbc:	e7d7      	b.n	9000ac6e <HAL_FDCAN_ActivateNotification+0x2e>
9000acbe:	bf00      	nop
9000acc0:	3fcfffff 	.word	0x3fcfffff
9000acc4:	4000a800 	.word	0x4000a800

9000acc8 <HAL_FDCAN_ClockCalibrationCallback>:
}
9000acc8:	4770      	bx	lr
9000acca:	bf00      	nop

9000accc <HAL_FDCAN_TxEventFifoCallback>:
9000accc:	4770      	bx	lr
9000acce:	bf00      	nop

9000acd0 <HAL_FDCAN_RxFifo1Callback>:
9000acd0:	4770      	bx	lr
9000acd2:	bf00      	nop

9000acd4 <HAL_FDCAN_TxFifoEmptyCallback>:
9000acd4:	4770      	bx	lr
9000acd6:	bf00      	nop

9000acd8 <HAL_FDCAN_TxBufferCompleteCallback>:
9000acd8:	4770      	bx	lr
9000acda:	bf00      	nop

9000acdc <HAL_FDCAN_TxBufferAbortCallback>:
9000acdc:	4770      	bx	lr
9000acde:	bf00      	nop

9000ace0 <HAL_FDCAN_RxBufferNewMessageCallback>:
9000ace0:	4770      	bx	lr
9000ace2:	bf00      	nop

9000ace4 <HAL_FDCAN_TimestampWraparoundCallback>:
9000ace4:	4770      	bx	lr
9000ace6:	bf00      	nop

9000ace8 <HAL_FDCAN_TimeoutOccurredCallback>:
9000ace8:	4770      	bx	lr
9000acea:	bf00      	nop

9000acec <HAL_FDCAN_HighPriorityMessageCallback>:
9000acec:	4770      	bx	lr
9000acee:	bf00      	nop

9000acf0 <HAL_FDCAN_ErrorCallback>:
9000acf0:	4770      	bx	lr
9000acf2:	bf00      	nop

9000acf4 <HAL_FDCAN_ErrorStatusCallback>:
9000acf4:	4770      	bx	lr
9000acf6:	bf00      	nop

9000acf8 <HAL_FDCAN_TT_ScheduleSyncCallback>:
9000acf8:	4770      	bx	lr
9000acfa:	bf00      	nop

9000acfc <HAL_FDCAN_TT_TimeMarkCallback>:
9000acfc:	4770      	bx	lr
9000acfe:	bf00      	nop

9000ad00 <HAL_FDCAN_TT_StopWatchCallback>:
}
9000ad00:	4770      	bx	lr
9000ad02:	bf00      	nop

9000ad04 <HAL_FDCAN_TT_GlobalTimeCallback>:
9000ad04:	4770      	bx	lr
9000ad06:	bf00      	nop

9000ad08 <HAL_FDCAN_IRQHandler>:
  ClkCalibrationITs = (FDCAN_CCU->IR << 30);
9000ad08:	49aa      	ldr	r1, [pc, #680]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
9000ad0a:	690a      	ldr	r2, [r1, #16]
  ClkCalibrationITs &= (FDCAN_CCU->IE << 30);
9000ad0c:	694b      	ldr	r3, [r1, #20]
{
9000ad0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  ClkCalibrationITs &= (FDCAN_CCU->IE << 30);
9000ad12:	ea4f 7b83 	mov.w	fp, r3, lsl #30
  TxEventFifoITs = hfdcan->Instance->IR & FDCAN_TX_EVENT_FIFO_MASK;
9000ad16:	6803      	ldr	r3, [r0, #0]
{
9000ad18:	b083      	sub	sp, #12
9000ad1a:	4604      	mov	r4, r0
  ClkCalibrationITs &= (FDCAN_CCU->IE << 30);
9000ad1c:	ea0b 7b82 	and.w	fp, fp, r2, lsl #30
  TxEventFifoITs = hfdcan->Instance->IR & FDCAN_TX_EVENT_FIFO_MASK;
9000ad20:	6d1a      	ldr	r2, [r3, #80]	; 0x50
  TxEventFifoITs &= hfdcan->Instance->IE;
9000ad22:	6d5d      	ldr	r5, [r3, #84]	; 0x54
9000ad24:	ea02 0a05 	and.w	sl, r2, r5
  RxFifo0ITs = hfdcan->Instance->IR & FDCAN_RX_FIFO0_MASK;
9000ad28:	6d1a      	ldr	r2, [r3, #80]	; 0x50
  RxFifo0ITs &= hfdcan->Instance->IE;
9000ad2a:	6d5d      	ldr	r5, [r3, #84]	; 0x54
  TxEventFifoITs &= hfdcan->Instance->IE;
9000ad2c:	f40a 4a70 	and.w	sl, sl, #61440	; 0xf000
  RxFifo0ITs &= hfdcan->Instance->IE;
9000ad30:	ea02 0905 	and.w	r9, r2, r5
  RxFifo1ITs = hfdcan->Instance->IR & FDCAN_RX_FIFO1_MASK;
9000ad34:	6d1a      	ldr	r2, [r3, #80]	; 0x50
  RxFifo1ITs &= hfdcan->Instance->IE;
9000ad36:	6d5d      	ldr	r5, [r3, #84]	; 0x54
  Errors = hfdcan->Instance->IR & FDCAN_ERROR_MASK;
9000ad38:	6d1e      	ldr	r6, [r3, #80]	; 0x50
  RxFifo0ITs &= hfdcan->Instance->IE;
9000ad3a:	f009 090f 	and.w	r9, r9, #15
  RxFifo1ITs &= hfdcan->Instance->IE;
9000ad3e:	ea02 0805 	and.w	r8, r2, r5
9000ad42:	f008 02f0 	and.w	r2, r8, #240	; 0xf0
9000ad46:	9201      	str	r2, [sp, #4]
  Errors &= hfdcan->Instance->IE;
9000ad48:	6d5a      	ldr	r2, [r3, #84]	; 0x54
  ErrorStatusITs = hfdcan->Instance->IR & FDCAN_ERROR_STATUS_MASK;
9000ad4a:	6d1f      	ldr	r7, [r3, #80]	; 0x50
  Errors &= hfdcan->Instance->IE;
9000ad4c:	4016      	ands	r6, r2
  ErrorStatusITs &= hfdcan->Instance->IE;
9000ad4e:	6d5a      	ldr	r2, [r3, #84]	; 0x54
  itsourceIE = hfdcan->Instance->IE;
9000ad50:	6d5d      	ldr	r5, [r3, #84]	; 0x54
  ErrorStatusITs &= hfdcan->Instance->IE;
9000ad52:	4017      	ands	r7, r2
  Errors &= hfdcan->Instance->IE;
9000ad54:	f006 5671 	and.w	r6, r6, #1010827264	; 0x3c400000
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RX_HIGH_PRIORITY_MSG) != RESET)
9000ad58:	05ea      	lsls	r2, r5, #23
  itflagIR = hfdcan->Instance->IR;
9000ad5a:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
  ErrorStatusITs &= hfdcan->Instance->IE;
9000ad5e:	f007 7760 	and.w	r7, r7, #58720256	; 0x3800000
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RX_HIGH_PRIORITY_MSG) != RESET)
9000ad62:	d503      	bpl.n	9000ad6c <HAL_FDCAN_IRQHandler+0x64>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RX_HIGH_PRIORITY_MSG) != RESET)
9000ad64:	f418 7f80 	tst.w	r8, #256	; 0x100
9000ad68:	f040 80eb 	bne.w	9000af42 <HAL_FDCAN_IRQHandler+0x23a>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_ABORT_COMPLETE) != RESET)
9000ad6c:	0569      	lsls	r1, r5, #21
9000ad6e:	d503      	bpl.n	9000ad78 <HAL_FDCAN_IRQHandler+0x70>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_ABORT_COMPLETE) != RESET)
9000ad70:	f418 6f80 	tst.w	r8, #1024	; 0x400
9000ad74:	f040 80ee 	bne.w	9000af54 <HAL_FDCAN_IRQHandler+0x24c>
  if (ClkCalibrationITs != 0U)
9000ad78:	f1bb 0f00 	cmp.w	fp, #0
9000ad7c:	d17a      	bne.n	9000ae74 <HAL_FDCAN_IRQHandler+0x16c>
  if (TxEventFifoITs != 0U)
9000ad7e:	f1ba 0f00 	cmp.w	sl, #0
9000ad82:	d153      	bne.n	9000ae2c <HAL_FDCAN_IRQHandler+0x124>
  if (RxFifo0ITs != 0U)
9000ad84:	f1b9 0f00 	cmp.w	r9, #0
9000ad88:	d15d      	bne.n	9000ae46 <HAL_FDCAN_IRQHandler+0x13e>
  if (RxFifo1ITs != 0U)
9000ad8a:	9a01      	ldr	r2, [sp, #4]
9000ad8c:	2a00      	cmp	r2, #0
9000ad8e:	d167      	bne.n	9000ae60 <HAL_FDCAN_IRQHandler+0x158>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_FIFO_EMPTY) != RESET)
9000ad90:	052a      	lsls	r2, r5, #20
9000ad92:	d503      	bpl.n	9000ad9c <HAL_FDCAN_IRQHandler+0x94>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_FIFO_EMPTY) != RESET)
9000ad94:	f418 6f00 	tst.w	r8, #2048	; 0x800
9000ad98:	f040 80f0 	bne.w	9000af7c <HAL_FDCAN_IRQHandler+0x274>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_COMPLETE) != RESET)
9000ad9c:	05a8      	lsls	r0, r5, #22
9000ad9e:	d503      	bpl.n	9000ada8 <HAL_FDCAN_IRQHandler+0xa0>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_COMPLETE) != RESET)
9000ada0:	f418 7f00 	tst.w	r8, #512	; 0x200
9000ada4:	f040 80f5 	bne.w	9000af92 <HAL_FDCAN_IRQHandler+0x28a>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RX_BUFFER_NEW_MESSAGE) != RESET)
9000ada8:	0329      	lsls	r1, r5, #12
9000adaa:	d503      	bpl.n	9000adb4 <HAL_FDCAN_IRQHandler+0xac>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RX_BUFFER_NEW_MESSAGE) != RESET)
9000adac:	f418 2f00 	tst.w	r8, #524288	; 0x80000
9000adb0:	f040 8104 	bne.w	9000afbc <HAL_FDCAN_IRQHandler+0x2b4>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TIMESTAMP_WRAPAROUND) != RESET)
9000adb4:	03ea      	lsls	r2, r5, #15
9000adb6:	d503      	bpl.n	9000adc0 <HAL_FDCAN_IRQHandler+0xb8>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TIMESTAMP_WRAPAROUND) != RESET)
9000adb8:	f418 3f80 	tst.w	r8, #65536	; 0x10000
9000adbc:	f040 8109 	bne.w	9000afd2 <HAL_FDCAN_IRQHandler+0x2ca>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TIMEOUT_OCCURRED) != RESET)
9000adc0:	0368      	lsls	r0, r5, #13
9000adc2:	d503      	bpl.n	9000adcc <HAL_FDCAN_IRQHandler+0xc4>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TIMEOUT_OCCURRED) != RESET)
9000adc4:	f418 2f80 	tst.w	r8, #262144	; 0x40000
9000adc8:	f040 80b0 	bne.w	9000af2c <HAL_FDCAN_IRQHandler+0x224>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RAM_ACCESS_FAILURE) != RESET)
9000adcc:	03a9      	lsls	r1, r5, #14
9000adce:	d50e      	bpl.n	9000adee <HAL_FDCAN_IRQHandler+0xe6>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RAM_ACCESS_FAILURE) != RESET)
9000add0:	f418 3f00 	tst.w	r8, #131072	; 0x20000
9000add4:	d00b      	beq.n	9000adee <HAL_FDCAN_IRQHandler+0xe6>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RAM_ACCESS_FAILURE);
9000add6:	f44f 3200 	mov.w	r2, #131072	; 0x20000
9000adda:	2100      	movs	r1, #0
9000addc:	651a      	str	r2, [r3, #80]	; 0x50
9000adde:	4a75      	ldr	r2, [pc, #468]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
9000ade0:	6111      	str	r1, [r2, #16]
      hfdcan->ErrorCode |= HAL_FDCAN_ERROR_RAM_ACCESS;
9000ade2:	f8d4 209c 	ldr.w	r2, [r4, #156]	; 0x9c
9000ade6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
9000adea:	f8c4 209c 	str.w	r2, [r4, #156]	; 0x9c
  if (ErrorStatusITs != 0U)
9000adee:	b99f      	cbnz	r7, 9000ae18 <HAL_FDCAN_IRQHandler+0x110>
  if (Errors != 0U)
9000adf0:	b146      	cbz	r6, 9000ae04 <HAL_FDCAN_IRQHandler+0xfc>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, Errors);
9000adf2:	4a70      	ldr	r2, [pc, #448]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
9000adf4:	2100      	movs	r1, #0
9000adf6:	651e      	str	r6, [r3, #80]	; 0x50
9000adf8:	6111      	str	r1, [r2, #16]
    hfdcan->ErrorCode |= Errors;
9000adfa:	f8d4 209c 	ldr.w	r2, [r4, #156]	; 0x9c
9000adfe:	4316      	orrs	r6, r2
9000ae00:	f8c4 609c 	str.w	r6, [r4, #156]	; 0x9c
  if (hfdcan->Instance == FDCAN1)
9000ae04:	4a6c      	ldr	r2, [pc, #432]	; (9000afb8 <HAL_FDCAN_IRQHandler+0x2b0>)
9000ae06:	4293      	cmp	r3, r2
9000ae08:	d04a      	beq.n	9000aea0 <HAL_FDCAN_IRQHandler+0x198>
  if (hfdcan->ErrorCode != HAL_FDCAN_ERROR_NONE)
9000ae0a:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
9000ae0e:	2b00      	cmp	r3, #0
9000ae10:	d140      	bne.n	9000ae94 <HAL_FDCAN_IRQHandler+0x18c>
}
9000ae12:	b003      	add	sp, #12
9000ae14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, ErrorStatusITs);
9000ae18:	651f      	str	r7, [r3, #80]	; 0x50
9000ae1a:	2300      	movs	r3, #0
9000ae1c:	4a65      	ldr	r2, [pc, #404]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
    HAL_FDCAN_ErrorStatusCallback(hfdcan, ErrorStatusITs);
9000ae1e:	4639      	mov	r1, r7
9000ae20:	4620      	mov	r0, r4
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, ErrorStatusITs);
9000ae22:	6113      	str	r3, [r2, #16]
    HAL_FDCAN_ErrorStatusCallback(hfdcan, ErrorStatusITs);
9000ae24:	f7ff ff66 	bl	9000acf4 <HAL_FDCAN_ErrorStatusCallback>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, Errors);
9000ae28:	6823      	ldr	r3, [r4, #0]
9000ae2a:	e7e1      	b.n	9000adf0 <HAL_FDCAN_IRQHandler+0xe8>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, TxEventFifoITs);
9000ae2c:	f8c3 a050 	str.w	sl, [r3, #80]	; 0x50
9000ae30:	2000      	movs	r0, #0
9000ae32:	4b60      	ldr	r3, [pc, #384]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
    HAL_FDCAN_TxEventFifoCallback(hfdcan, TxEventFifoITs);
9000ae34:	4651      	mov	r1, sl
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, TxEventFifoITs);
9000ae36:	6118      	str	r0, [r3, #16]
    HAL_FDCAN_TxEventFifoCallback(hfdcan, TxEventFifoITs);
9000ae38:	4620      	mov	r0, r4
9000ae3a:	f7ff ff47 	bl	9000accc <HAL_FDCAN_TxEventFifoCallback>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo0ITs);
9000ae3e:	6823      	ldr	r3, [r4, #0]
  if (RxFifo0ITs != 0U)
9000ae40:	f1b9 0f00 	cmp.w	r9, #0
9000ae44:	d0a1      	beq.n	9000ad8a <HAL_FDCAN_IRQHandler+0x82>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo0ITs);
9000ae46:	f8c3 9050 	str.w	r9, [r3, #80]	; 0x50
9000ae4a:	2000      	movs	r0, #0
9000ae4c:	4b59      	ldr	r3, [pc, #356]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
    HAL_FDCAN_RxFifo0Callback(hfdcan, RxFifo0ITs);
9000ae4e:	4649      	mov	r1, r9
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo0ITs);
9000ae50:	6118      	str	r0, [r3, #16]
    HAL_FDCAN_RxFifo0Callback(hfdcan, RxFifo0ITs);
9000ae52:	4620      	mov	r0, r4
9000ae54:	f7f9 fc1e 	bl	90004694 <HAL_FDCAN_RxFifo0Callback>
  if (RxFifo1ITs != 0U)
9000ae58:	9a01      	ldr	r2, [sp, #4]
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo1ITs);
9000ae5a:	6823      	ldr	r3, [r4, #0]
  if (RxFifo1ITs != 0U)
9000ae5c:	2a00      	cmp	r2, #0
9000ae5e:	d097      	beq.n	9000ad90 <HAL_FDCAN_IRQHandler+0x88>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo1ITs);
9000ae60:	651a      	str	r2, [r3, #80]	; 0x50
9000ae62:	2000      	movs	r0, #0
9000ae64:	4b53      	ldr	r3, [pc, #332]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
    HAL_FDCAN_RxFifo1Callback(hfdcan, RxFifo1ITs);
9000ae66:	4611      	mov	r1, r2
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo1ITs);
9000ae68:	6118      	str	r0, [r3, #16]
    HAL_FDCAN_RxFifo1Callback(hfdcan, RxFifo1ITs);
9000ae6a:	4620      	mov	r0, r4
9000ae6c:	f7ff ff30 	bl	9000acd0 <HAL_FDCAN_RxFifo1Callback>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_FIFO_EMPTY);
9000ae70:	6823      	ldr	r3, [r4, #0]
9000ae72:	e78d      	b.n	9000ad90 <HAL_FDCAN_IRQHandler+0x88>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, ClkCalibrationITs);
9000ae74:	2100      	movs	r1, #0
9000ae76:	ea4f 709b 	mov.w	r0, fp, lsr #30
9000ae7a:	6519      	str	r1, [r3, #80]	; 0x50
    HAL_FDCAN_ClockCalibrationCallback(hfdcan, ClkCalibrationITs);
9000ae7c:	4659      	mov	r1, fp
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, ClkCalibrationITs);
9000ae7e:	4b4d      	ldr	r3, [pc, #308]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
9000ae80:	6118      	str	r0, [r3, #16]
    HAL_FDCAN_ClockCalibrationCallback(hfdcan, ClkCalibrationITs);
9000ae82:	4620      	mov	r0, r4
9000ae84:	f7ff ff20 	bl	9000acc8 <HAL_FDCAN_ClockCalibrationCallback>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, TxEventFifoITs);
9000ae88:	6823      	ldr	r3, [r4, #0]
  if (TxEventFifoITs != 0U)
9000ae8a:	f1ba 0f00 	cmp.w	sl, #0
9000ae8e:	f43f af79 	beq.w	9000ad84 <HAL_FDCAN_IRQHandler+0x7c>
9000ae92:	e7cb      	b.n	9000ae2c <HAL_FDCAN_IRQHandler+0x124>
    HAL_FDCAN_ErrorCallback(hfdcan);
9000ae94:	4620      	mov	r0, r4
9000ae96:	f7ff ff2b 	bl	9000acf0 <HAL_FDCAN_ErrorCallback>
}
9000ae9a:	b003      	add	sp, #12
9000ae9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != 0U)
9000aea0:	6863      	ldr	r3, [r4, #4]
9000aea2:	689a      	ldr	r2, [r3, #8]
9000aea4:	0792      	lsls	r2, r2, #30
9000aea6:	d0b0      	beq.n	9000ae0a <HAL_FDCAN_IRQHandler+0x102>
      TTSchedSyncITs = hfdcan->ttcan->TTIR & FDCAN_TT_SCHEDULE_SYNC_MASK;
9000aea8:	6a18      	ldr	r0, [r3, #32]
      TTSchedSyncITs &= hfdcan->ttcan->TTIE;
9000aeaa:	6a59      	ldr	r1, [r3, #36]	; 0x24
      TTTimeMarkITs = hfdcan->ttcan->TTIR & FDCAN_TT_TIME_MARK_MASK;
9000aeac:	6a1a      	ldr	r2, [r3, #32]
      TTSchedSyncITs &= hfdcan->ttcan->TTIE;
9000aeae:	4001      	ands	r1, r0
      TTTimeMarkITs &= hfdcan->ttcan->TTIE;
9000aeb0:	6a58      	ldr	r0, [r3, #36]	; 0x24
      TTGlobTimeITs = hfdcan->ttcan->TTIR & FDCAN_TT_GLOBAL_TIME_MASK;
9000aeb2:	6a1f      	ldr	r7, [r3, #32]
      TTTimeMarkITs &= hfdcan->ttcan->TTIE;
9000aeb4:	ea02 0800 	and.w	r8, r2, r0
      TTGlobTimeITs &= hfdcan->ttcan->TTIE;
9000aeb8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
      TTDistErrors = hfdcan->ttcan->TTIR & FDCAN_TT_DISTURBING_ERROR_MASK;
9000aeba:	6a1e      	ldr	r6, [r3, #32]
      if (TTSchedSyncITs != 0U)
9000aebc:	f011 010f 	ands.w	r1, r1, #15
      TTGlobTimeITs &= hfdcan->ttcan->TTIE;
9000aec0:	ea07 0702 	and.w	r7, r7, r2
      TTDistErrors &= hfdcan->ttcan->TTIE;
9000aec4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
      TTFatalErrors = hfdcan->ttcan->TTIR & FDCAN_TT_FATAL_ERROR_MASK;
9000aec6:	6a1d      	ldr	r5, [r3, #32]
      TTTimeMarkITs &= hfdcan->ttcan->TTIE;
9000aec8:	f008 0830 	and.w	r8, r8, #48	; 0x30
      TTDistErrors &= hfdcan->ttcan->TTIE;
9000aecc:	ea06 0602 	and.w	r6, r6, r2
      TTFatalErrors &= hfdcan->ttcan->TTIE;
9000aed0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
      TTGlobTimeITs &= hfdcan->ttcan->TTIE;
9000aed2:	f407 77c0 	and.w	r7, r7, #384	; 0x180
      itsourceTTIE = hfdcan->ttcan->TTIE;
9000aed6:	f8d3 9024 	ldr.w	r9, [r3, #36]	; 0x24
      TTFatalErrors &= hfdcan->ttcan->TTIE;
9000aeda:	ea05 0502 	and.w	r5, r5, r2
      TTDistErrors &= hfdcan->ttcan->TTIE;
9000aede:	f406 46fc 	and.w	r6, r6, #32256	; 0x7e00
      itflagTTIR = hfdcan->ttcan->TTIR;
9000aee2:	f8d3 a020 	ldr.w	sl, [r3, #32]
      TTFatalErrors &= hfdcan->ttcan->TTIE;
9000aee6:	f405 25f0 	and.w	r5, r5, #491520	; 0x78000
      if (TTSchedSyncITs != 0U)
9000aeea:	f040 8084 	bne.w	9000aff6 <HAL_FDCAN_IRQHandler+0x2ee>
      if (TTTimeMarkITs != 0U)
9000aeee:	f1b8 0f00 	cmp.w	r8, #0
9000aef2:	f040 8096 	bne.w	9000b022 <HAL_FDCAN_IRQHandler+0x31a>
      if (FDCAN_CHECK_IT_SOURCE(itsourceTTIE, FDCAN_TT_IT_STOP_WATCH) != RESET)
9000aef6:	f019 0f40 	tst.w	r9, #64	; 0x40
9000aefa:	d002      	beq.n	9000af02 <HAL_FDCAN_IRQHandler+0x1fa>
        if (FDCAN_CHECK_FLAG(itflagTTIR, FDCAN_TT_FLAG_STOP_WATCH) != RESET)
9000aefc:	f01a 0f40 	tst.w	sl, #64	; 0x40
9000af00:	d17e      	bne.n	9000b000 <HAL_FDCAN_IRQHandler+0x2f8>
      if (TTGlobTimeITs != 0U)
9000af02:	2f00      	cmp	r7, #0
9000af04:	d170      	bne.n	9000afe8 <HAL_FDCAN_IRQHandler+0x2e0>
      if (TTDistErrors != 0U)
9000af06:	b136      	cbz	r6, 9000af16 <HAL_FDCAN_IRQHandler+0x20e>
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTDistErrors);
9000af08:	6863      	ldr	r3, [r4, #4]
9000af0a:	621e      	str	r6, [r3, #32]
        hfdcan->ErrorCode |= TTDistErrors;
9000af0c:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
9000af10:	431e      	orrs	r6, r3
9000af12:	f8c4 609c 	str.w	r6, [r4, #156]	; 0x9c
      if (TTFatalErrors != 0U)
9000af16:	2d00      	cmp	r5, #0
9000af18:	f43f af77 	beq.w	9000ae0a <HAL_FDCAN_IRQHandler+0x102>
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTFatalErrors);
9000af1c:	6863      	ldr	r3, [r4, #4]
9000af1e:	621d      	str	r5, [r3, #32]
        hfdcan->ErrorCode |= TTFatalErrors;
9000af20:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
9000af24:	431d      	orrs	r5, r3
9000af26:	f8c4 509c 	str.w	r5, [r4, #156]	; 0x9c
9000af2a:	e76e      	b.n	9000ae0a <HAL_FDCAN_IRQHandler+0x102>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMEOUT_OCCURRED);
9000af2c:	f44f 2180 	mov.w	r1, #262144	; 0x40000
      HAL_FDCAN_TimeoutOccurredCallback(hfdcan);
9000af30:	4620      	mov	r0, r4
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMEOUT_OCCURRED);
9000af32:	6519      	str	r1, [r3, #80]	; 0x50
9000af34:	2100      	movs	r1, #0
9000af36:	4b1f      	ldr	r3, [pc, #124]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
9000af38:	6119      	str	r1, [r3, #16]
      HAL_FDCAN_TimeoutOccurredCallback(hfdcan);
9000af3a:	f7ff fed5 	bl	9000ace8 <HAL_FDCAN_TimeoutOccurredCallback>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RAM_ACCESS_FAILURE);
9000af3e:	6823      	ldr	r3, [r4, #0]
9000af40:	e744      	b.n	9000adcc <HAL_FDCAN_IRQHandler+0xc4>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RX_HIGH_PRIORITY_MSG);
9000af42:	f44f 7280 	mov.w	r2, #256	; 0x100
9000af46:	651a      	str	r2, [r3, #80]	; 0x50
9000af48:	2300      	movs	r3, #0
9000af4a:	610b      	str	r3, [r1, #16]
      HAL_FDCAN_HighPriorityMessageCallback(hfdcan);
9000af4c:	f7ff fece 	bl	9000acec <HAL_FDCAN_HighPriorityMessageCallback>
      AbortedBuffers = hfdcan->Instance->TXBCF;
9000af50:	6823      	ldr	r3, [r4, #0]
9000af52:	e70b      	b.n	9000ad6c <HAL_FDCAN_IRQHandler+0x64>
9000af54:	f8d3 00dc 	ldr.w	r0, [r3, #220]	; 0xdc
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_ABORT_COMPLETE);
9000af58:	f44f 6280 	mov.w	r2, #1024	; 0x400
      AbortedBuffers &= hfdcan->Instance->TXBCIE;
9000af5c:	f8d3 10e4 	ldr.w	r1, [r3, #228]	; 0xe4
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_ABORT_COMPLETE);
9000af60:	651a      	str	r2, [r3, #80]	; 0x50
      HAL_FDCAN_TxBufferAbortCallback(hfdcan, AbortedBuffers);
9000af62:	4001      	ands	r1, r0
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_ABORT_COMPLETE);
9000af64:	4b13      	ldr	r3, [pc, #76]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
9000af66:	2000      	movs	r0, #0
9000af68:	6118      	str	r0, [r3, #16]
      HAL_FDCAN_TxBufferAbortCallback(hfdcan, AbortedBuffers);
9000af6a:	4620      	mov	r0, r4
9000af6c:	f7ff feb6 	bl	9000acdc <HAL_FDCAN_TxBufferAbortCallback>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, ClkCalibrationITs);
9000af70:	6823      	ldr	r3, [r4, #0]
  if (ClkCalibrationITs != 0U)
9000af72:	f1bb 0f00 	cmp.w	fp, #0
9000af76:	f43f af02 	beq.w	9000ad7e <HAL_FDCAN_IRQHandler+0x76>
9000af7a:	e77b      	b.n	9000ae74 <HAL_FDCAN_IRQHandler+0x16c>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_FIFO_EMPTY);
9000af7c:	f44f 6100 	mov.w	r1, #2048	; 0x800
      HAL_FDCAN_TxFifoEmptyCallback(hfdcan);
9000af80:	4620      	mov	r0, r4
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_FIFO_EMPTY);
9000af82:	6519      	str	r1, [r3, #80]	; 0x50
9000af84:	2100      	movs	r1, #0
9000af86:	4b0b      	ldr	r3, [pc, #44]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
9000af88:	6119      	str	r1, [r3, #16]
      HAL_FDCAN_TxFifoEmptyCallback(hfdcan);
9000af8a:	f7ff fea3 	bl	9000acd4 <HAL_FDCAN_TxFifoEmptyCallback>
      TransmittedBuffers = hfdcan->Instance->TXBTO;
9000af8e:	6823      	ldr	r3, [r4, #0]
9000af90:	e704      	b.n	9000ad9c <HAL_FDCAN_IRQHandler+0x94>
9000af92:	f8d3 00d8 	ldr.w	r0, [r3, #216]	; 0xd8
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_COMPLETE);
9000af96:	f44f 7200 	mov.w	r2, #512	; 0x200
      TransmittedBuffers &= hfdcan->Instance->TXBTIE;
9000af9a:	f8d3 10e0 	ldr.w	r1, [r3, #224]	; 0xe0
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_COMPLETE);
9000af9e:	651a      	str	r2, [r3, #80]	; 0x50
      HAL_FDCAN_TxBufferCompleteCallback(hfdcan, TransmittedBuffers);
9000afa0:	4001      	ands	r1, r0
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_COMPLETE);
9000afa2:	4b04      	ldr	r3, [pc, #16]	; (9000afb4 <HAL_FDCAN_IRQHandler+0x2ac>)
9000afa4:	2000      	movs	r0, #0
9000afa6:	6118      	str	r0, [r3, #16]
      HAL_FDCAN_TxBufferCompleteCallback(hfdcan, TransmittedBuffers);
9000afa8:	4620      	mov	r0, r4
9000afaa:	f7ff fe95 	bl	9000acd8 <HAL_FDCAN_TxBufferCompleteCallback>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RX_BUFFER_NEW_MESSAGE);
9000afae:	6823      	ldr	r3, [r4, #0]
9000afb0:	e6fa      	b.n	9000ada8 <HAL_FDCAN_IRQHandler+0xa0>
9000afb2:	bf00      	nop
9000afb4:	4000a800 	.word	0x4000a800
9000afb8:	4000a000 	.word	0x4000a000
9000afbc:	f44f 2100 	mov.w	r1, #524288	; 0x80000
      HAL_FDCAN_RxBufferNewMessageCallback(hfdcan);
9000afc0:	4620      	mov	r0, r4
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RX_BUFFER_NEW_MESSAGE);
9000afc2:	6519      	str	r1, [r3, #80]	; 0x50
9000afc4:	2100      	movs	r1, #0
9000afc6:	4b1b      	ldr	r3, [pc, #108]	; (9000b034 <HAL_FDCAN_IRQHandler+0x32c>)
9000afc8:	6119      	str	r1, [r3, #16]
      HAL_FDCAN_RxBufferNewMessageCallback(hfdcan);
9000afca:	f7ff fe89 	bl	9000ace0 <HAL_FDCAN_RxBufferNewMessageCallback>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMESTAMP_WRAPAROUND);
9000afce:	6823      	ldr	r3, [r4, #0]
9000afd0:	e6f0      	b.n	9000adb4 <HAL_FDCAN_IRQHandler+0xac>
9000afd2:	f44f 3180 	mov.w	r1, #65536	; 0x10000
      HAL_FDCAN_TimestampWraparoundCallback(hfdcan);
9000afd6:	4620      	mov	r0, r4
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMESTAMP_WRAPAROUND);
9000afd8:	6519      	str	r1, [r3, #80]	; 0x50
9000afda:	2100      	movs	r1, #0
9000afdc:	4b15      	ldr	r3, [pc, #84]	; (9000b034 <HAL_FDCAN_IRQHandler+0x32c>)
9000afde:	6119      	str	r1, [r3, #16]
      HAL_FDCAN_TimestampWraparoundCallback(hfdcan);
9000afe0:	f7ff fe80 	bl	9000ace4 <HAL_FDCAN_TimestampWraparoundCallback>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMEOUT_OCCURRED);
9000afe4:	6823      	ldr	r3, [r4, #0]
9000afe6:	e6eb      	b.n	9000adc0 <HAL_FDCAN_IRQHandler+0xb8>
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTGlobTimeITs);
9000afe8:	6863      	ldr	r3, [r4, #4]
        HAL_FDCAN_TT_GlobalTimeCallback(hfdcan, TTGlobTimeITs);
9000afea:	4639      	mov	r1, r7
9000afec:	4620      	mov	r0, r4
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTGlobTimeITs);
9000afee:	621f      	str	r7, [r3, #32]
        HAL_FDCAN_TT_GlobalTimeCallback(hfdcan, TTGlobTimeITs);
9000aff0:	f7ff fe88 	bl	9000ad04 <HAL_FDCAN_TT_GlobalTimeCallback>
9000aff4:	e787      	b.n	9000af06 <HAL_FDCAN_IRQHandler+0x1fe>
        HAL_FDCAN_TT_ScheduleSyncCallback(hfdcan, TTSchedSyncITs);
9000aff6:	4620      	mov	r0, r4
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTSchedSyncITs);
9000aff8:	6219      	str	r1, [r3, #32]
        HAL_FDCAN_TT_ScheduleSyncCallback(hfdcan, TTSchedSyncITs);
9000affa:	f7ff fe7d 	bl	9000acf8 <HAL_FDCAN_TT_ScheduleSyncCallback>
9000affe:	e776      	b.n	9000aeee <HAL_FDCAN_IRQHandler+0x1e6>
          SWTime = ((hfdcan->ttcan->TTCPT & FDCAN_TTCPT_SWV) >> FDCAN_TTCPT_SWV_Pos);
9000b000:	6863      	ldr	r3, [r4, #4]
          __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, FDCAN_TT_FLAG_STOP_WATCH);
9000b002:	f04f 0c40 	mov.w	ip, #64	; 0x40
          HAL_FDCAN_TT_StopWatchCallback(hfdcan, SWTime, SWCycleCount);
9000b006:	4620      	mov	r0, r4
          SWTime = ((hfdcan->ttcan->TTCPT & FDCAN_TTCPT_SWV) >> FDCAN_TTCPT_SWV_Pos);
9000b008:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
          SWCycleCount = ((hfdcan->ttcan->TTCPT & FDCAN_TTCPT_CCV) >> FDCAN_TTCPT_CCV_Pos);
9000b00a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
          HAL_FDCAN_TT_StopWatchCallback(hfdcan, SWTime, SWCycleCount);
9000b00c:	0c09      	lsrs	r1, r1, #16
          __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, FDCAN_TT_FLAG_STOP_WATCH);
9000b00e:	f8c3 c020 	str.w	ip, [r3, #32]
          HAL_FDCAN_TT_StopWatchCallback(hfdcan, SWTime, SWCycleCount);
9000b012:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9000b016:	f7ff fe73 	bl	9000ad00 <HAL_FDCAN_TT_StopWatchCallback>
      if (TTGlobTimeITs != 0U)
9000b01a:	2f00      	cmp	r7, #0
9000b01c:	f43f af73 	beq.w	9000af06 <HAL_FDCAN_IRQHandler+0x1fe>
9000b020:	e7e2      	b.n	9000afe8 <HAL_FDCAN_IRQHandler+0x2e0>
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTTimeMarkITs);
9000b022:	6863      	ldr	r3, [r4, #4]
        HAL_FDCAN_TT_TimeMarkCallback(hfdcan, TTTimeMarkITs);
9000b024:	4641      	mov	r1, r8
9000b026:	4620      	mov	r0, r4
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTTimeMarkITs);
9000b028:	f8c3 8020 	str.w	r8, [r3, #32]
        HAL_FDCAN_TT_TimeMarkCallback(hfdcan, TTTimeMarkITs);
9000b02c:	f7ff fe66 	bl	9000acfc <HAL_FDCAN_TT_TimeMarkCallback>
9000b030:	e761      	b.n	9000aef6 <HAL_FDCAN_IRQHandler+0x1ee>
9000b032:	bf00      	nop
9000b034:	4000a800 	.word	0x4000a800

9000b038 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
9000b038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000b03c:	680c      	ldr	r4, [r1, #0]
{
9000b03e:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000b040:	2c00      	cmp	r4, #0
9000b042:	f000 80a6 	beq.w	9000b192 <HAL_GPIO_Init+0x15a>
9000b046:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000b04a:	4f8e      	ldr	r7, [pc, #568]	; (9000b284 <HAL_GPIO_Init+0x24c>)
  uint32_t position = 0x00U;
9000b04c:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000b04e:	2201      	movs	r2, #1
9000b050:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
9000b052:	ea12 0e04 	ands.w	lr, r2, r4
9000b056:	f000 8095 	beq.w	9000b184 <HAL_GPIO_Init+0x14c>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000b05a:	684d      	ldr	r5, [r1, #4]
9000b05c:	f005 0903 	and.w	r9, r5, #3
9000b060:	f109 36ff 	add.w	r6, r9, #4294967295
9000b064:	2e01      	cmp	r6, #1
9000b066:	f240 8097 	bls.w	9000b198 <HAL_GPIO_Init+0x160>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
9000b06a:	f1b9 0f03 	cmp.w	r9, #3
9000b06e:	f040 80d1 	bne.w	9000b214 <HAL_GPIO_Init+0x1dc>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b072:	fa09 f20c 	lsl.w	r2, r9, ip
9000b076:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
9000b07a:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000b07c:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
9000b080:	ea06 0808 	and.w	r8, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000b084:	ea42 0208 	orr.w	r2, r2, r8
      GPIOx->MODER = temp;
9000b088:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000b08a:	d07b      	beq.n	9000b184 <HAL_GPIO_Init+0x14c>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000b08c:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
9000b090:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000b094:	f003 0903 	and.w	r9, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000b098:	f042 0202 	orr.w	r2, r2, #2
9000b09c:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000b0a0:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000b0a4:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
9000b0a8:	f508 6880 	add.w	r8, r8, #1024	; 0x400
9000b0ac:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
9000b0b0:	f002 0202 	and.w	r2, r2, #2
9000b0b4:	9201      	str	r2, [sp, #4]
9000b0b6:	9a01      	ldr	r2, [sp, #4]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000b0b8:	220f      	movs	r2, #15
        temp = SYSCFG->EXTICR[position >> 2U];
9000b0ba:	f8d8 6008 	ldr.w	r6, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000b0be:	fa02 f209 	lsl.w	r2, r2, r9
9000b0c2:	ea26 0202 	bic.w	r2, r6, r2
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000b0c6:	4e70      	ldr	r6, [pc, #448]	; (9000b288 <HAL_GPIO_Init+0x250>)
9000b0c8:	42b0      	cmp	r0, r6
9000b0ca:	d029      	beq.n	9000b120 <HAL_GPIO_Init+0xe8>
9000b0cc:	f506 6680 	add.w	r6, r6, #1024	; 0x400
9000b0d0:	42b0      	cmp	r0, r6
9000b0d2:	f000 80ac 	beq.w	9000b22e <HAL_GPIO_Init+0x1f6>
9000b0d6:	4e6d      	ldr	r6, [pc, #436]	; (9000b28c <HAL_GPIO_Init+0x254>)
9000b0d8:	42b0      	cmp	r0, r6
9000b0da:	f000 80ae 	beq.w	9000b23a <HAL_GPIO_Init+0x202>
9000b0de:	4e6c      	ldr	r6, [pc, #432]	; (9000b290 <HAL_GPIO_Init+0x258>)
9000b0e0:	42b0      	cmp	r0, r6
9000b0e2:	f000 809e 	beq.w	9000b222 <HAL_GPIO_Init+0x1ea>
9000b0e6:	4e6b      	ldr	r6, [pc, #428]	; (9000b294 <HAL_GPIO_Init+0x25c>)
9000b0e8:	42b0      	cmp	r0, r6
9000b0ea:	f000 80b2 	beq.w	9000b252 <HAL_GPIO_Init+0x21a>
9000b0ee:	4e6a      	ldr	r6, [pc, #424]	; (9000b298 <HAL_GPIO_Init+0x260>)
9000b0f0:	42b0      	cmp	r0, r6
9000b0f2:	f000 80b4 	beq.w	9000b25e <HAL_GPIO_Init+0x226>
9000b0f6:	4e69      	ldr	r6, [pc, #420]	; (9000b29c <HAL_GPIO_Init+0x264>)
9000b0f8:	42b0      	cmp	r0, r6
9000b0fa:	f000 80a4 	beq.w	9000b246 <HAL_GPIO_Init+0x20e>
9000b0fe:	4e68      	ldr	r6, [pc, #416]	; (9000b2a0 <HAL_GPIO_Init+0x268>)
9000b100:	42b0      	cmp	r0, r6
9000b102:	f000 80b2 	beq.w	9000b26a <HAL_GPIO_Init+0x232>
9000b106:	4e67      	ldr	r6, [pc, #412]	; (9000b2a4 <HAL_GPIO_Init+0x26c>)
9000b108:	42b0      	cmp	r0, r6
9000b10a:	f000 80b4 	beq.w	9000b276 <HAL_GPIO_Init+0x23e>
9000b10e:	4e66      	ldr	r6, [pc, #408]	; (9000b2a8 <HAL_GPIO_Init+0x270>)
9000b110:	42b0      	cmp	r0, r6
9000b112:	bf0c      	ite	eq
9000b114:	2609      	moveq	r6, #9
9000b116:	260a      	movne	r6, #10
9000b118:	fa06 f909 	lsl.w	r9, r6, r9
9000b11c:	ea42 0209 	orr.w	r2, r2, r9
        SYSCFG->EXTICR[position >> 2U] = temp;
9000b120:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
9000b124:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000b128:	02ee      	lsls	r6, r5, #11
        temp &= ~(iocurrent);
9000b12a:	ea6f 080e 	mvn.w	r8, lr
        temp = EXTI->RTSR1;
9000b12e:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
9000b130:	f04f 46b0 	mov.w	r6, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000b134:	bf54      	ite	pl
9000b136:	ea08 0202 	andpl.w	r2, r8, r2
          temp |= iocurrent;
9000b13a:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI->RTSR1 = temp;
9000b13e:	6032      	str	r2, [r6, #0]

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000b140:	02aa      	lsls	r2, r5, #10
        temp = EXTI->FTSR1;
9000b142:	6876      	ldr	r6, [r6, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
9000b144:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000b148:	bf54      	ite	pl
9000b14a:	ea08 0606 	andpl.w	r6, r8, r6
          temp |= iocurrent;
9000b14e:	ea4e 0606 	orrmi.w	r6, lr, r6
        EXTI->FTSR1 = temp;
9000b152:	6056      	str	r6, [r2, #4]

        temp = EXTI_CurrentCPU->EMR1;
9000b154:	f8d2 6084 	ldr.w	r6, [r2, #132]	; 0x84
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
9000b158:	03aa      	lsls	r2, r5, #14
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
9000b15a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000b15e:	bf54      	ite	pl
9000b160:	ea08 0606 	andpl.w	r6, r8, r6
          temp |= iocurrent;
9000b164:	ea4e 0606 	orrmi.w	r6, lr, r6

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000b168:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000b16a:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
9000b16e:	f8c2 6084 	str.w	r6, [r2, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000b172:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
        temp &= ~(iocurrent);
9000b176:	bf54      	ite	pl
9000b178:	ea08 0202 	andpl.w	r2, r8, r2
          temp |= iocurrent;
9000b17c:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
9000b180:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
9000b184:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000b186:	f10c 0c02 	add.w	ip, ip, #2
9000b18a:	fa34 f203 	lsrs.w	r2, r4, r3
9000b18e:	f47f af5e 	bne.w	9000b04e <HAL_GPIO_Init+0x16>
  }
}
9000b192:	b003      	add	sp, #12
9000b194:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b198:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
9000b19c:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b19e:	fa08 f80c 	lsl.w	r8, r8, ip
9000b1a2:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000b1a6:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b1a8:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000b1ac:	fa06 f60c 	lsl.w	r6, r6, ip
9000b1b0:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
9000b1b4:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000b1b6:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
9000b1ba:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000b1be:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
9000b1c0:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000b1c4:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
9000b1c6:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
9000b1c8:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000b1ca:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000b1ce:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000b1d0:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000b1d4:	fa06 f60c 	lsl.w	r6, r6, ip
9000b1d8:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
9000b1dc:	fa09 f20c 	lsl.w	r2, r9, ip
9000b1e0:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000b1e2:	f47f af4a 	bne.w	9000b07a <HAL_GPIO_Init+0x42>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000b1e6:	f003 0607 	and.w	r6, r3, #7
        temp = GPIOx->AFR[position >> 3U];
9000b1ea:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000b1ee:	ea4f 0b86 	mov.w	fp, r6, lsl #2
9000b1f2:	260f      	movs	r6, #15
9000b1f4:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000b1f8:	fa06 f60b 	lsl.w	r6, r6, fp
        temp = GPIOx->AFR[position >> 3U];
9000b1fc:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000b200:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000b204:	690e      	ldr	r6, [r1, #16]
9000b206:	fa06 f60b 	lsl.w	r6, r6, fp
9000b20a:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
9000b20e:	f8c9 6020 	str.w	r6, [r9, #32]
9000b212:	e732      	b.n	9000b07a <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b214:	f04f 0803 	mov.w	r8, #3
9000b218:	fa08 f80c 	lsl.w	r8, r8, ip
9000b21c:	ea6f 0808 	mvn.w	r8, r8
9000b220:	e7d2      	b.n	9000b1c8 <HAL_GPIO_Init+0x190>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000b222:	2603      	movs	r6, #3
9000b224:	fa06 f909 	lsl.w	r9, r6, r9
9000b228:	ea42 0209 	orr.w	r2, r2, r9
9000b22c:	e778      	b.n	9000b120 <HAL_GPIO_Init+0xe8>
9000b22e:	2601      	movs	r6, #1
9000b230:	fa06 f909 	lsl.w	r9, r6, r9
9000b234:	ea42 0209 	orr.w	r2, r2, r9
9000b238:	e772      	b.n	9000b120 <HAL_GPIO_Init+0xe8>
9000b23a:	2602      	movs	r6, #2
9000b23c:	fa06 f909 	lsl.w	r9, r6, r9
9000b240:	ea42 0209 	orr.w	r2, r2, r9
9000b244:	e76c      	b.n	9000b120 <HAL_GPIO_Init+0xe8>
9000b246:	2606      	movs	r6, #6
9000b248:	fa06 f909 	lsl.w	r9, r6, r9
9000b24c:	ea42 0209 	orr.w	r2, r2, r9
9000b250:	e766      	b.n	9000b120 <HAL_GPIO_Init+0xe8>
9000b252:	2604      	movs	r6, #4
9000b254:	fa06 f909 	lsl.w	r9, r6, r9
9000b258:	ea42 0209 	orr.w	r2, r2, r9
9000b25c:	e760      	b.n	9000b120 <HAL_GPIO_Init+0xe8>
9000b25e:	2605      	movs	r6, #5
9000b260:	fa06 f909 	lsl.w	r9, r6, r9
9000b264:	ea42 0209 	orr.w	r2, r2, r9
9000b268:	e75a      	b.n	9000b120 <HAL_GPIO_Init+0xe8>
9000b26a:	2607      	movs	r6, #7
9000b26c:	fa06 f909 	lsl.w	r9, r6, r9
9000b270:	ea42 0209 	orr.w	r2, r2, r9
9000b274:	e754      	b.n	9000b120 <HAL_GPIO_Init+0xe8>
9000b276:	2608      	movs	r6, #8
9000b278:	fa06 f909 	lsl.w	r9, r6, r9
9000b27c:	ea42 0209 	orr.w	r2, r2, r9
9000b280:	e74e      	b.n	9000b120 <HAL_GPIO_Init+0xe8>
9000b282:	bf00      	nop
9000b284:	58024400 	.word	0x58024400
9000b288:	58020000 	.word	0x58020000
9000b28c:	58020800 	.word	0x58020800
9000b290:	58020c00 	.word	0x58020c00
9000b294:	58021000 	.word	0x58021000
9000b298:	58021400 	.word	0x58021400
9000b29c:	58021800 	.word	0x58021800
9000b2a0:	58021c00 	.word	0x58021c00
9000b2a4:	58022000 	.word	0x58022000
9000b2a8:	58022400 	.word	0x58022400

9000b2ac <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
9000b2ac:	2900      	cmp	r1, #0
9000b2ae:	f000 80a8 	beq.w	9000b402 <HAL_GPIO_DeInit+0x156>
  uint32_t position = 0x00U;
9000b2b2:	2300      	movs	r3, #0
{
9000b2b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000b2b8:	f8df 9168 	ldr.w	r9, [pc, #360]	; 9000b424 <HAL_GPIO_DeInit+0x178>
9000b2bc:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000b2be:	f8df 8168 	ldr.w	r8, [pc, #360]	; 9000b428 <HAL_GPIO_DeInit+0x17c>
9000b2c2:	f8df a168 	ldr.w	sl, [pc, #360]	; 9000b42c <HAL_GPIO_DeInit+0x180>
9000b2c6:	f8df b168 	ldr.w	fp, [pc, #360]	; 9000b430 <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
9000b2ca:	f04f 0e01 	mov.w	lr, #1
9000b2ce:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
9000b2d2:	ea12 0c01 	ands.w	ip, r2, r1
9000b2d6:	d06f      	beq.n	9000b3b8 <HAL_GPIO_DeInit+0x10c>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000b2d8:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000b2dc:	f003 0403 	and.w	r4, r3, #3
9000b2e0:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000b2e2:	4540      	cmp	r0, r8
9000b2e4:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000b2e6:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000b2ea:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000b2ec:	fa06 f604 	lsl.w	r6, r6, r4
9000b2f0:	ea07 0706 	and.w	r7, r7, r6
9000b2f4:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000b2f6:	d021      	beq.n	9000b33c <HAL_GPIO_DeInit+0x90>
9000b2f8:	4550      	cmp	r0, sl
9000b2fa:	d066      	beq.n	9000b3ca <HAL_GPIO_DeInit+0x11e>
9000b2fc:	4558      	cmp	r0, fp
9000b2fe:	d067      	beq.n	9000b3d0 <HAL_GPIO_DeInit+0x124>
9000b300:	4f43      	ldr	r7, [pc, #268]	; (9000b410 <HAL_GPIO_DeInit+0x164>)
9000b302:	42b8      	cmp	r0, r7
9000b304:	d06e      	beq.n	9000b3e4 <HAL_GPIO_DeInit+0x138>
9000b306:	4f43      	ldr	r7, [pc, #268]	; (9000b414 <HAL_GPIO_DeInit+0x168>)
9000b308:	42b8      	cmp	r0, r7
9000b30a:	d070      	beq.n	9000b3ee <HAL_GPIO_DeInit+0x142>
9000b30c:	4f42      	ldr	r7, [pc, #264]	; (9000b418 <HAL_GPIO_DeInit+0x16c>)
9000b30e:	42b8      	cmp	r0, r7
9000b310:	d063      	beq.n	9000b3da <HAL_GPIO_DeInit+0x12e>
9000b312:	4f42      	ldr	r7, [pc, #264]	; (9000b41c <HAL_GPIO_DeInit+0x170>)
9000b314:	42b8      	cmp	r0, r7
9000b316:	d056      	beq.n	9000b3c6 <HAL_GPIO_DeInit+0x11a>
9000b318:	4f41      	ldr	r7, [pc, #260]	; (9000b420 <HAL_GPIO_DeInit+0x174>)
9000b31a:	42b8      	cmp	r0, r7
9000b31c:	d072      	beq.n	9000b404 <HAL_GPIO_DeInit+0x158>
9000b31e:	f8df e114 	ldr.w	lr, [pc, #276]	; 9000b434 <HAL_GPIO_DeInit+0x188>
9000b322:	4570      	cmp	r0, lr
9000b324:	d068      	beq.n	9000b3f8 <HAL_GPIO_DeInit+0x14c>
9000b326:	f8df e110 	ldr.w	lr, [pc, #272]	; 9000b438 <HAL_GPIO_DeInit+0x18c>
9000b32a:	4570      	cmp	r0, lr
9000b32c:	bf14      	ite	ne
9000b32e:	f04f 0e0a 	movne.w	lr, #10
9000b332:	f04f 0e09 	moveq.w	lr, #9
9000b336:	fa0e f404 	lsl.w	r4, lr, r4
9000b33a:	e000      	b.n	9000b33e <HAL_GPIO_DeInit+0x92>
9000b33c:	2400      	movs	r4, #0
9000b33e:	9f01      	ldr	r7, [sp, #4]
9000b340:	42a7      	cmp	r7, r4
9000b342:	d119      	bne.n	9000b378 <HAL_GPIO_DeInit+0xcc>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000b344:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
9000b348:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
9000b34c:	ea27 070c 	bic.w	r7, r7, ip
9000b350:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
9000b354:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
9000b358:	ea27 070c 	bic.w	r7, r7, ip
9000b35c:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
9000b360:	6867      	ldr	r7, [r4, #4]
9000b362:	ea27 070c 	bic.w	r7, r7, ip
9000b366:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
9000b368:	6827      	ldr	r7, [r4, #0]
9000b36a:	ea27 070c 	bic.w	r7, r7, ip
9000b36e:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000b370:	68ac      	ldr	r4, [r5, #8]
9000b372:	ea24 0606 	bic.w	r6, r4, r6
9000b376:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b378:	2503      	movs	r5, #3
9000b37a:	005c      	lsls	r4, r3, #1

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b37c:	f003 0707 	and.w	r7, r3, #7
9000b380:	260f      	movs	r6, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b382:	fa05 f404 	lsl.w	r4, r5, r4
9000b386:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b388:	00bf      	lsls	r7, r7, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b38a:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b38c:	fa06 f707 	lsl.w	r7, r6, r7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b390:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b392:	08dd      	lsrs	r5, r3, #3
9000b394:	eb00 0585 	add.w	r5, r0, r5, lsl #2
9000b398:	6a2e      	ldr	r6, [r5, #32]
9000b39a:	ea26 0607 	bic.w	r6, r6, r7
9000b39e:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000b3a0:	68c5      	ldr	r5, [r0, #12]
9000b3a2:	ea25 0504 	bic.w	r5, r5, r4
9000b3a6:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000b3a8:	6845      	ldr	r5, [r0, #4]
9000b3aa:	ea25 0202 	bic.w	r2, r5, r2
9000b3ae:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b3b0:	6882      	ldr	r2, [r0, #8]
9000b3b2:	ea22 0404 	bic.w	r4, r2, r4
9000b3b6:	6084      	str	r4, [r0, #8]
    }

    position++;
9000b3b8:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
9000b3ba:	fa31 f203 	lsrs.w	r2, r1, r3
9000b3be:	d184      	bne.n	9000b2ca <HAL_GPIO_DeInit+0x1e>
  }
}
9000b3c0:	b003      	add	sp, #12
9000b3c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000b3c6:	f04f 0e06 	mov.w	lr, #6
9000b3ca:	fa0e f404 	lsl.w	r4, lr, r4
9000b3ce:	e7b6      	b.n	9000b33e <HAL_GPIO_DeInit+0x92>
9000b3d0:	f04f 0e02 	mov.w	lr, #2
9000b3d4:	fa0e f404 	lsl.w	r4, lr, r4
9000b3d8:	e7b1      	b.n	9000b33e <HAL_GPIO_DeInit+0x92>
9000b3da:	f04f 0e05 	mov.w	lr, #5
9000b3de:	fa0e f404 	lsl.w	r4, lr, r4
9000b3e2:	e7ac      	b.n	9000b33e <HAL_GPIO_DeInit+0x92>
9000b3e4:	f04f 0e03 	mov.w	lr, #3
9000b3e8:	fa0e f404 	lsl.w	r4, lr, r4
9000b3ec:	e7a7      	b.n	9000b33e <HAL_GPIO_DeInit+0x92>
9000b3ee:	f04f 0e04 	mov.w	lr, #4
9000b3f2:	fa0e f404 	lsl.w	r4, lr, r4
9000b3f6:	e7a2      	b.n	9000b33e <HAL_GPIO_DeInit+0x92>
9000b3f8:	f04f 0e08 	mov.w	lr, #8
9000b3fc:	fa0e f404 	lsl.w	r4, lr, r4
9000b400:	e79d      	b.n	9000b33e <HAL_GPIO_DeInit+0x92>
9000b402:	4770      	bx	lr
9000b404:	f04f 0e07 	mov.w	lr, #7
9000b408:	fa0e f404 	lsl.w	r4, lr, r4
9000b40c:	e797      	b.n	9000b33e <HAL_GPIO_DeInit+0x92>
9000b40e:	bf00      	nop
9000b410:	58020c00 	.word	0x58020c00
9000b414:	58021000 	.word	0x58021000
9000b418:	58021400 	.word	0x58021400
9000b41c:	58021800 	.word	0x58021800
9000b420:	58021c00 	.word	0x58021c00
9000b424:	58000400 	.word	0x58000400
9000b428:	58020000 	.word	0x58020000
9000b42c:	58020400 	.word	0x58020400
9000b430:	58020800 	.word	0x58020800
9000b434:	58022000 	.word	0x58022000
9000b438:	58022400 	.word	0x58022400

9000b43c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
9000b43c:	6903      	ldr	r3, [r0, #16]
9000b43e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000b440:	bf14      	ite	ne
9000b442:	2001      	movne	r0, #1
9000b444:	2000      	moveq	r0, #0
9000b446:	4770      	bx	lr

9000b448 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
9000b448:	b902      	cbnz	r2, 9000b44c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000b44a:	0409      	lsls	r1, r1, #16
9000b44c:	6181      	str	r1, [r0, #24]
  }
}
9000b44e:	4770      	bx	lr

9000b450 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000b450:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
9000b452:	ea01 0203 	and.w	r2, r1, r3
9000b456:	ea21 0103 	bic.w	r1, r1, r3
9000b45a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000b45e:	6181      	str	r1, [r0, #24]
}
9000b460:	4770      	bx	lr
9000b462:	bf00      	nop

9000b464 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
9000b464:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000b468:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b46a:	f04f 0820 	mov.w	r8, #32
{
9000b46e:	4605      	mov	r5, r0
9000b470:	460e      	mov	r6, r1
9000b472:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000b474:	6998      	ldr	r0, [r3, #24]
9000b476:	f010 0902 	ands.w	r9, r0, #2
9000b47a:	f040 809e 	bne.w	9000b5ba <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
9000b47e:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000b480:	f014 0410 	ands.w	r4, r4, #16
9000b484:	d068      	beq.n	9000b558 <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b486:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
9000b488:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
9000b48a:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b48c:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b48e:	1c71      	adds	r1, r6, #1
9000b490:	699a      	ldr	r2, [r3, #24]
9000b492:	d163      	bne.n	9000b55c <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
9000b494:	0690      	lsls	r0, r2, #26
9000b496:	f100 8093 	bmi.w	9000b5c0 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000b49a:	f1ba 0f00 	cmp.w	sl, #0
9000b49e:	d104      	bne.n	9000b4aa <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000b4a0:	699c      	ldr	r4, [r3, #24]
9000b4a2:	06a1      	lsls	r1, r4, #26
9000b4a4:	d5fc      	bpl.n	9000b4a0 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b4a6:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
9000b4aa:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
9000b4ae:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
9000b4b0:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000b4b2:	05d0      	lsls	r0, r2, #23
9000b4b4:	d530      	bpl.n	9000b518 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b4b6:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b4ba:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000b4bc:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b4c0:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b4c2:	d504      	bpl.n	9000b4ce <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b4c4:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000b4c8:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b4cc:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b4ce:	0591      	lsls	r1, r2, #22
9000b4d0:	d504      	bpl.n	9000b4dc <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b4d2:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000b4d6:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b4da:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000b4dc:	699a      	ldr	r2, [r3, #24]
9000b4de:	0790      	lsls	r0, r2, #30
9000b4e0:	d501      	bpl.n	9000b4e6 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
9000b4e2:	2200      	movs	r2, #0
9000b4e4:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000b4e6:	699a      	ldr	r2, [r3, #24]
9000b4e8:	07d1      	lsls	r1, r2, #31
9000b4ea:	d403      	bmi.n	9000b4f4 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000b4ec:	699a      	ldr	r2, [r3, #24]
9000b4ee:	f042 0201 	orr.w	r2, r2, #1
9000b4f2:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
9000b4f4:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b4f6:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000b4f8:	4834      	ldr	r0, [pc, #208]	; (9000b5cc <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
9000b4fa:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
9000b4fc:	4002      	ands	r2, r0
      return HAL_ERROR;
9000b4fe:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000b500:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000b502:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000b504:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000b508:	431c      	orrs	r4, r3
9000b50a:	646c      	str	r4, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000b50c:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b510:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
9000b514:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b518:	0550      	lsls	r0, r2, #21
9000b51a:	d4d3      	bmi.n	9000b4c4 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b51c:	0592      	lsls	r2, r2, #22
9000b51e:	d4d8      	bmi.n	9000b4d2 <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
9000b520:	2900      	cmp	r1, #0
9000b522:	d1db      	bne.n	9000b4dc <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
9000b524:	1c72      	adds	r2, r6, #1
9000b526:	d0a5      	beq.n	9000b474 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b528:	f7fe fd4c 	bl	90009fc4 <HAL_GetTick>
9000b52c:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000b52e:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b530:	42b0      	cmp	r0, r6
9000b532:	d801      	bhi.n	9000b538 <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
9000b534:	2e00      	cmp	r6, #0
9000b536:	d19d      	bne.n	9000b474 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000b538:	699a      	ldr	r2, [r3, #24]
9000b53a:	f012 0202 	ands.w	r2, r2, #2
9000b53e:	d199      	bne.n	9000b474 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b540:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b542:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
9000b544:	2001      	movs	r0, #1
9000b546:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b54a:	430b      	orrs	r3, r1
9000b54c:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b54e:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b552:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
9000b556:	e7dd      	b.n	9000b514 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
9000b558:	4621      	mov	r1, r4
9000b55a:	e7a9      	b.n	9000b4b0 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b55c:	0692      	lsls	r2, r2, #26
9000b55e:	d42f      	bmi.n	9000b5c0 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000b560:	f1ba 0f00 	cmp.w	sl, #0
9000b564:	d1a1      	bne.n	9000b4aa <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b566:	f7fe fd2d 	bl	90009fc4 <HAL_GetTick>
9000b56a:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b56c:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b56e:	4286      	cmp	r6, r0
9000b570:	d301      	bcc.n	9000b576 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
9000b572:	2e00      	cmp	r6, #0
9000b574:	d18b      	bne.n	9000b48e <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b576:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000b578:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b57c:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000b57e:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b580:	0409      	lsls	r1, r1, #16
9000b582:	d50b      	bpl.n	9000b59c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
9000b584:	0441      	lsls	r1, r0, #17
9000b586:	d409      	bmi.n	9000b59c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
9000b588:	2a20      	cmp	r2, #32
9000b58a:	d007      	beq.n	9000b59c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000b58c:	685a      	ldr	r2, [r3, #4]
9000b58e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000b592:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000b594:	f7fe fd16 	bl	90009fc4 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b598:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000b59a:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b59c:	699a      	ldr	r2, [r3, #24]
9000b59e:	0690      	lsls	r0, r2, #26
9000b5a0:	f53f af75 	bmi.w	9000b48e <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b5a4:	f7fe fd0e 	bl	90009fc4 <HAL_GetTick>
9000b5a8:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b5aa:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b5ac:	2819      	cmp	r0, #25
9000b5ae:	d9f5      	bls.n	9000b59c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b5b0:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
9000b5b4:	f04f 0a01 	mov.w	sl, #1
9000b5b8:	e769      	b.n	9000b48e <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
9000b5ba:	2000      	movs	r0, #0
}
9000b5bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
9000b5c0:	f1ba 0f00 	cmp.w	sl, #0
9000b5c4:	f43f af6f 	beq.w	9000b4a6 <I2C_WaitOnTXISFlagUntilTimeout+0x42>
9000b5c8:	e76f      	b.n	9000b4aa <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000b5ca:	bf00      	nop
9000b5cc:	fe00e800 	.word	0xfe00e800

9000b5d0 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b5d0:	6803      	ldr	r3, [r0, #0]
{
9000b5d2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000b5d6:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b5d8:	699a      	ldr	r2, [r3, #24]
9000b5da:	0694      	lsls	r4, r2, #26
9000b5dc:	d465      	bmi.n	9000b6aa <I2C_WaitOnSTOPFlagUntilTimeout+0xda>
9000b5de:	4606      	mov	r6, r0
9000b5e0:	460f      	mov	r7, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b5e2:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
9000b5e6:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000b5e8:	f014 0410 	ands.w	r4, r4, #16
9000b5ec:	d060      	beq.n	9000b6b0 <I2C_WaitOnSTOPFlagUntilTimeout+0xe0>
  uint32_t error_code = 0;
9000b5ee:	2500      	movs	r5, #0
  uint32_t tickstart = Tickstart;
9000b5f0:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b5f2:	f8c3 901c 	str.w	r9, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
9000b5f6:	46aa      	mov	sl, r5
9000b5f8:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b5fa:	699a      	ldr	r2, [r3, #24]
9000b5fc:	d15a      	bne.n	9000b6b4 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
9000b5fe:	0690      	lsls	r0, r2, #26
9000b600:	d47d      	bmi.n	9000b6fe <I2C_WaitOnSTOPFlagUntilTimeout+0x12e>
9000b602:	f1ba 0f00 	cmp.w	sl, #0
9000b606:	d104      	bne.n	9000b612 <I2C_WaitOnSTOPFlagUntilTimeout+0x42>
9000b608:	699c      	ldr	r4, [r3, #24]
9000b60a:	06a1      	lsls	r1, r4, #26
9000b60c:	d5fc      	bpl.n	9000b608 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b60e:	2220      	movs	r2, #32
9000b610:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
9000b612:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
9000b616:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000b618:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000b61a:	05d0      	lsls	r0, r2, #23
9000b61c:	d530      	bpl.n	9000b680 <I2C_WaitOnSTOPFlagUntilTimeout+0xb0>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b61e:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b622:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000b624:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b628:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b62a:	d504      	bpl.n	9000b636 <I2C_WaitOnSTOPFlagUntilTimeout+0x66>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b62c:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000b630:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b634:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b636:	0597      	lsls	r7, r2, #22
9000b638:	d504      	bpl.n	9000b644 <I2C_WaitOnSTOPFlagUntilTimeout+0x74>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b63a:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000b63e:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b642:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000b644:	699a      	ldr	r2, [r3, #24]
9000b646:	0790      	lsls	r0, r2, #30
9000b648:	d501      	bpl.n	9000b64e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
    hi2c->Instance->TXDR = 0x00U;
9000b64a:	2200      	movs	r2, #0
9000b64c:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000b64e:	699a      	ldr	r2, [r3, #24]
9000b650:	07d1      	lsls	r1, r2, #31
9000b652:	d403      	bmi.n	9000b65c <I2C_WaitOnSTOPFlagUntilTimeout+0x8c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000b654:	699a      	ldr	r2, [r3, #24]
9000b656:	f042 0201 	orr.w	r2, r2, #1
9000b65a:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
9000b65c:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b65e:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000b660:	4834      	ldr	r0, [pc, #208]	; (9000b734 <I2C_WaitOnSTOPFlagUntilTimeout+0x164>)
    hi2c->State = HAL_I2C_STATE_READY;
9000b662:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
9000b664:	4002      	ands	r2, r0
      return HAL_ERROR;
9000b666:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000b668:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000b66a:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
9000b66c:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000b670:	431c      	orrs	r4, r3
9000b672:	6474      	str	r4, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000b674:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b678:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000b67c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b680:	0550      	lsls	r0, r2, #21
9000b682:	d4d3      	bmi.n	9000b62c <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b684:	0595      	lsls	r5, r2, #22
9000b686:	d4d8      	bmi.n	9000b63a <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
  if (status != HAL_OK)
9000b688:	2900      	cmp	r1, #0
9000b68a:	d1db      	bne.n	9000b644 <I2C_WaitOnSTOPFlagUntilTimeout+0x74>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b68c:	f7fe fc9a 	bl	90009fc4 <HAL_GetTick>
9000b690:	eba0 0008 	sub.w	r0, r0, r8
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000b694:	6833      	ldr	r3, [r6, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b696:	42b8      	cmp	r0, r7
9000b698:	d800      	bhi.n	9000b69c <I2C_WaitOnSTOPFlagUntilTimeout+0xcc>
9000b69a:	b91f      	cbnz	r7, 9000b6a4 <I2C_WaitOnSTOPFlagUntilTimeout+0xd4>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000b69c:	699a      	ldr	r2, [r3, #24]
9000b69e:	f012 0220 	ands.w	r2, r2, #32
9000b6a2:	d030      	beq.n	9000b706 <I2C_WaitOnSTOPFlagUntilTimeout+0x136>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b6a4:	699a      	ldr	r2, [r3, #24]
9000b6a6:	0692      	lsls	r2, r2, #26
9000b6a8:	d59d      	bpl.n	9000b5e6 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
9000b6aa:	2000      	movs	r0, #0
}
9000b6ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
9000b6b0:	4621      	mov	r1, r4
9000b6b2:	e7b1      	b.n	9000b618 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b6b4:	0692      	lsls	r2, r2, #26
9000b6b6:	d422      	bmi.n	9000b6fe <I2C_WaitOnSTOPFlagUntilTimeout+0x12e>
9000b6b8:	f1ba 0f00 	cmp.w	sl, #0
9000b6bc:	d1a9      	bne.n	9000b612 <I2C_WaitOnSTOPFlagUntilTimeout+0x42>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b6be:	f7fe fc81 	bl	90009fc4 <HAL_GetTick>
9000b6c2:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b6c4:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b6c6:	4287      	cmp	r7, r0
9000b6c8:	d301      	bcc.n	9000b6ce <I2C_WaitOnSTOPFlagUntilTimeout+0xfe>
9000b6ca:	2f00      	cmp	r7, #0
9000b6cc:	d194      	bne.n	9000b5f8 <I2C_WaitOnSTOPFlagUntilTimeout+0x28>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b6ce:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000b6d0:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b6d4:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000b6d6:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b6d8:	0409      	lsls	r1, r1, #16
9000b6da:	d503      	bpl.n	9000b6e4 <I2C_WaitOnSTOPFlagUntilTimeout+0x114>
              (tmp1 != I2C_CR2_STOP) && \
9000b6dc:	0441      	lsls	r1, r0, #17
9000b6de:	d401      	bmi.n	9000b6e4 <I2C_WaitOnSTOPFlagUntilTimeout+0x114>
9000b6e0:	2a20      	cmp	r2, #32
9000b6e2:	d11d      	bne.n	9000b720 <I2C_WaitOnSTOPFlagUntilTimeout+0x150>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b6e4:	699a      	ldr	r2, [r3, #24]
9000b6e6:	0690      	lsls	r0, r2, #26
9000b6e8:	d486      	bmi.n	9000b5f8 <I2C_WaitOnSTOPFlagUntilTimeout+0x28>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b6ea:	f7fe fc6b 	bl	90009fc4 <HAL_GetTick>
9000b6ee:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b6f0:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b6f2:	2819      	cmp	r0, #25
9000b6f4:	d9f6      	bls.n	9000b6e4 <I2C_WaitOnSTOPFlagUntilTimeout+0x114>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b6f6:	2520      	movs	r5, #32
              status = HAL_ERROR;
9000b6f8:	f04f 0a01 	mov.w	sl, #1
9000b6fc:	e77c      	b.n	9000b5f8 <I2C_WaitOnSTOPFlagUntilTimeout+0x28>
    if (status == HAL_OK)
9000b6fe:	f1ba 0f00 	cmp.w	sl, #0
9000b702:	d084      	beq.n	9000b60e <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
9000b704:	e785      	b.n	9000b612 <I2C_WaitOnSTOPFlagUntilTimeout+0x42>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b706:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b708:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
9000b70a:	2001      	movs	r0, #1
9000b70c:	f886 2040 	strb.w	r2, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b710:	430b      	orrs	r3, r1
9000b712:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b714:	f886 1041 	strb.w	r1, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b718:	f886 2042 	strb.w	r2, [r6, #66]	; 0x42
}
9000b71c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000b720:	685a      	ldr	r2, [r3, #4]
9000b722:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000b726:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000b728:	f7fe fc4c 	bl	90009fc4 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b72c:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
9000b72e:	4604      	mov	r4, r0
9000b730:	e7d8      	b.n	9000b6e4 <I2C_WaitOnSTOPFlagUntilTimeout+0x114>
9000b732:	bf00      	nop
9000b734:	fe00e800 	.word	0xfe00e800

9000b738 <HAL_I2C_MspInit>:
}
9000b738:	4770      	bx	lr
9000b73a:	bf00      	nop

9000b73c <HAL_I2C_Init>:
  if (hi2c == NULL)
9000b73c:	2800      	cmp	r0, #0
9000b73e:	d04e      	beq.n	9000b7de <HAL_I2C_Init+0xa2>
{
9000b740:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
9000b742:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
9000b746:	4604      	mov	r4, r0
9000b748:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000b74c:	2b00      	cmp	r3, #0
9000b74e:	d041      	beq.n	9000b7d4 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
9000b750:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b752:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b754:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b756:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
9000b75a:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b75c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b760:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
9000b762:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b766:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
9000b768:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b76a:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000b76c:	689a      	ldr	r2, [r3, #8]
9000b76e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
9000b772:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000b774:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b776:	d029      	beq.n	9000b7cc <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000b778:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b77c:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000b77e:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b780:	d102      	bne.n	9000b788 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
9000b782:	f44f 6200 	mov.w	r2, #2048	; 0x800
9000b786:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b788:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000b78a:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b78e:	4915      	ldr	r1, [pc, #84]	; (9000b7e4 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b790:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b792:	4301      	orrs	r1, r0
9000b794:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000b796:	68d9      	ldr	r1, [r3, #12]
9000b798:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
9000b79c:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
9000b79e:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b7a2:	4302      	orrs	r2, r0
9000b7a4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b7a8:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b7ac:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b7ae:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b7b0:	4301      	orrs	r1, r0
  return HAL_OK;
9000b7b2:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b7b4:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000b7b6:	6819      	ldr	r1, [r3, #0]
9000b7b8:	f041 0101 	orr.w	r1, r1, #1
9000b7bc:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b7be:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
9000b7c0:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000b7c4:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000b7c6:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000b7ca:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000b7cc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000b7d0:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b7d2:	e7d9      	b.n	9000b788 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
9000b7d4:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
9000b7d8:	f7ff ffae 	bl	9000b738 <HAL_I2C_MspInit>
9000b7dc:	e7b8      	b.n	9000b750 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000b7de:	2001      	movs	r0, #1
}
9000b7e0:	4770      	bx	lr
9000b7e2:	bf00      	nop
9000b7e4:	02008000 	.word	0x02008000

9000b7e8 <HAL_I2C_MspDeInit>:
9000b7e8:	4770      	bx	lr
9000b7ea:	bf00      	nop

9000b7ec <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000b7ec:	b1b0      	cbz	r0, 9000b81c <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000b7ee:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b7f0:	2324      	movs	r3, #36	; 0x24
{
9000b7f2:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b7f4:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
9000b7f8:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000b7fa:	6813      	ldr	r3, [r2, #0]
9000b7fc:	f023 0301 	bic.w	r3, r3, #1
9000b800:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000b802:	f7ff fff1 	bl	9000b7e8 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b806:	2300      	movs	r3, #0
9000b808:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
9000b80a:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
9000b80c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
9000b810:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000b814:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000b816:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
9000b81a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9000b81c:	2001      	movs	r0, #1
}
9000b81e:	4770      	bx	lr

9000b820 <HAL_I2C_Mem_Write>:
{
9000b820:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000b824:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b826:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000b82a:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b82e:	2b20      	cmp	r3, #32
{
9000b830:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b832:	d132      	bne.n	9000b89a <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
9000b834:	9b08      	ldr	r3, [sp, #32]
9000b836:	4604      	mov	r4, r0
9000b838:	b34b      	cbz	r3, 9000b88e <HAL_I2C_Mem_Write+0x6e>
9000b83a:	f1ba 0f00 	cmp.w	sl, #0
9000b83e:	d026      	beq.n	9000b88e <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
9000b840:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000b844:	2b01      	cmp	r3, #1
9000b846:	d028      	beq.n	9000b89a <HAL_I2C_Mem_Write+0x7a>
9000b848:	2301      	movs	r3, #1
9000b84a:	460e      	mov	r6, r1
9000b84c:	4691      	mov	r9, r2
9000b84e:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000b852:	f7fe fbb7 	bl	90009fc4 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b856:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
9000b858:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b85a:	699a      	ldr	r2, [r3, #24]
9000b85c:	0411      	lsls	r1, r2, #16
9000b85e:	d51f      	bpl.n	9000b8a0 <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b860:	f7fe fbb0 	bl	90009fc4 <HAL_GetTick>
9000b864:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b866:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b868:	2819      	cmp	r0, #25
9000b86a:	d9f6      	bls.n	9000b85a <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b86c:	699a      	ldr	r2, [r3, #24]
9000b86e:	0412      	lsls	r2, r2, #16
9000b870:	d5f3      	bpl.n	9000b85a <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b872:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b874:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b876:	2200      	movs	r2, #0
      return HAL_ERROR;
9000b878:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b87a:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000b87c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b880:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b882:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b886:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000b88a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b88e:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000b892:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b894:	6463      	str	r3, [r4, #68]	; 0x44
}
9000b896:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
9000b89a:	2002      	movs	r0, #2
}
9000b89c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
9000b8a0:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000b8a2:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000b8a4:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b8a8:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000b8aa:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b8ae:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000b8b0:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b8b2:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b8b4:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000b8b8:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b8ba:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000b8bc:	496d      	ldr	r1, [pc, #436]	; (9000ba74 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
9000b8be:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b8c2:	685a      	ldr	r2, [r3, #4]
9000b8c4:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b8c6:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000b8ca:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b8ce:	496a      	ldr	r1, [pc, #424]	; (9000ba78 <HAL_I2C_Mem_Write+0x258>)
9000b8d0:	4332      	orrs	r2, r6
9000b8d2:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b8d4:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000b8d6:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b8d8:	4639      	mov	r1, r7
9000b8da:	f7ff fdc3 	bl	9000b464 <I2C_WaitOnTXISFlagUntilTimeout>
9000b8de:	2800      	cmp	r0, #0
9000b8e0:	d175      	bne.n	9000b9ce <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000b8e2:	f1b8 0f01 	cmp.w	r8, #1
9000b8e6:	d00a      	beq.n	9000b8fe <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b8e8:	ea4f 2219 	mov.w	r2, r9, lsr #8
9000b8ec:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b8ee:	4639      	mov	r1, r7
9000b8f0:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b8f2:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b8f4:	462a      	mov	r2, r5
9000b8f6:	f7ff fdb5 	bl	9000b464 <I2C_WaitOnTXISFlagUntilTimeout>
9000b8fa:	2800      	cmp	r0, #0
9000b8fc:	d167      	bne.n	9000b9ce <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000b8fe:	fa5f f389 	uxtb.w	r3, r9
9000b902:	6822      	ldr	r2, [r4, #0]
9000b904:	6293      	str	r3, [r2, #40]	; 0x28
9000b906:	1c78      	adds	r0, r7, #1
9000b908:	d14a      	bne.n	9000b9a0 <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b90a:	6993      	ldr	r3, [r2, #24]
9000b90c:	0619      	lsls	r1, r3, #24
9000b90e:	d5fc      	bpl.n	9000b90a <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b910:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b912:	b29b      	uxth	r3, r3
9000b914:	2bff      	cmp	r3, #255	; 0xff
9000b916:	f240 808a 	bls.w	9000ba2e <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b91a:	6853      	ldr	r3, [r2, #4]
9000b91c:	4957      	ldr	r1, [pc, #348]	; (9000ba7c <HAL_I2C_Mem_Write+0x25c>)
9000b91e:	400b      	ands	r3, r1
9000b920:	4957      	ldr	r1, [pc, #348]	; (9000ba80 <HAL_I2C_Mem_Write+0x260>)
9000b922:	4333      	orrs	r3, r6
9000b924:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000b926:	23ff      	movs	r3, #255	; 0xff
9000b928:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b92a:	6051      	str	r1, [r2, #4]
9000b92c:	f8df 814c 	ldr.w	r8, [pc, #332]	; 9000ba7c <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b930:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000b934:	f8df 9148 	ldr.w	r9, [pc, #328]	; 9000ba80 <HAL_I2C_Mem_Write+0x260>
9000b938:	e004      	b.n	9000b944 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
9000b93a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b93c:	b29b      	uxth	r3, r3
9000b93e:	2b00      	cmp	r3, #0
9000b940:	f000 8083 	beq.w	9000ba4a <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000b944:	462a      	mov	r2, r5
9000b946:	4639      	mov	r1, r7
9000b948:	4620      	mov	r0, r4
9000b94a:	f7ff fd8b 	bl	9000b464 <I2C_WaitOnTXISFlagUntilTimeout>
9000b94e:	2800      	cmp	r0, #0
9000b950:	d16b      	bne.n	9000ba2a <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000b952:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b954:	6821      	ldr	r1, [r4, #0]
9000b956:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
9000b95a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000b95c:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
9000b95e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
9000b960:	3b01      	subs	r3, #1
      hi2c->XferCount--;
9000b962:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
9000b964:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000b966:	3a01      	subs	r2, #1
      hi2c->XferSize--;
9000b968:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
9000b96a:	b292      	uxth	r2, r2
9000b96c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b96e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
9000b970:	b292      	uxth	r2, r2
9000b972:	2a00      	cmp	r2, #0
9000b974:	d0e1      	beq.n	9000b93a <HAL_I2C_Mem_Write+0x11a>
9000b976:	2b00      	cmp	r3, #0
9000b978:	d1df      	bne.n	9000b93a <HAL_I2C_Mem_Write+0x11a>
9000b97a:	1c78      	adds	r0, r7, #1
9000b97c:	d12c      	bne.n	9000b9d8 <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b97e:	698b      	ldr	r3, [r1, #24]
9000b980:	061a      	lsls	r2, r3, #24
9000b982:	d5fc      	bpl.n	9000b97e <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b984:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b986:	b29b      	uxth	r3, r3
9000b988:	2bff      	cmp	r3, #255	; 0xff
9000b98a:	d940      	bls.n	9000ba0e <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b98c:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b98e:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b992:	ea03 0308 	and.w	r3, r3, r8
9000b996:	4333      	orrs	r3, r6
9000b998:	ea43 0309 	orr.w	r3, r3, r9
9000b99c:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000b99e:	e7cc      	b.n	9000b93a <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b9a0:	6993      	ldr	r3, [r2, #24]
9000b9a2:	061b      	lsls	r3, r3, #24
9000b9a4:	d4b4      	bmi.n	9000b910 <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b9a6:	f7fe fb0d 	bl	90009fc4 <HAL_GetTick>
9000b9aa:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b9ac:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b9ae:	4287      	cmp	r7, r0
9000b9b0:	d301      	bcc.n	9000b9b6 <HAL_I2C_Mem_Write+0x196>
9000b9b2:	2f00      	cmp	r7, #0
9000b9b4:	d1a7      	bne.n	9000b906 <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b9b6:	6993      	ldr	r3, [r2, #24]
9000b9b8:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b9bc:	d1a3      	bne.n	9000b906 <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b9be:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b9c0:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b9c2:	430a      	orrs	r2, r1
9000b9c4:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b9c6:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b9ca:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000b9ce:	2300      	movs	r3, #0
      return HAL_ERROR;
9000b9d0:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000b9d2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
9000b9d6:	e75e      	b.n	9000b896 <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b9d8:	698b      	ldr	r3, [r1, #24]
9000b9da:	061b      	lsls	r3, r3, #24
9000b9dc:	d4d2      	bmi.n	9000b984 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b9de:	f7fe faf1 	bl	90009fc4 <HAL_GetTick>
9000b9e2:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b9e4:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b9e6:	4287      	cmp	r7, r0
9000b9e8:	d301      	bcc.n	9000b9ee <HAL_I2C_Mem_Write+0x1ce>
9000b9ea:	2f00      	cmp	r7, #0
9000b9ec:	d1c5      	bne.n	9000b97a <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b9ee:	698b      	ldr	r3, [r1, #24]
9000b9f0:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b9f4:	d1c1      	bne.n	9000b97a <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b9f6:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b9f8:	2120      	movs	r1, #32
          return HAL_ERROR;
9000b9fa:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000b9fc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000ba00:	430a      	orrs	r2, r1
9000ba02:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000ba04:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000ba08:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
9000ba0c:	e743      	b.n	9000b896 <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
9000ba0e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000ba10:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000ba12:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
9000ba14:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000ba16:	684b      	ldr	r3, [r1, #4]
9000ba18:	ea03 0308 	and.w	r3, r3, r8
9000ba1c:	4333      	orrs	r3, r6
9000ba1e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000ba22:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000ba26:	604b      	str	r3, [r1, #4]
}
9000ba28:	e787      	b.n	9000b93a <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
9000ba2a:	2001      	movs	r0, #1
9000ba2c:	e733      	b.n	9000b896 <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
9000ba2e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000ba30:	4812      	ldr	r0, [pc, #72]	; (9000ba7c <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
9000ba32:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000ba34:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
9000ba36:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000ba38:	6853      	ldr	r3, [r2, #4]
9000ba3a:	4003      	ands	r3, r0
9000ba3c:	4333      	orrs	r3, r6
9000ba3e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000ba42:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000ba46:	6053      	str	r3, [r2, #4]
}
9000ba48:	e770      	b.n	9000b92c <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000ba4a:	462a      	mov	r2, r5
9000ba4c:	4639      	mov	r1, r7
9000ba4e:	4620      	mov	r0, r4
9000ba50:	f7ff fdbe 	bl	9000b5d0 <I2C_WaitOnSTOPFlagUntilTimeout>
9000ba54:	2800      	cmp	r0, #0
9000ba56:	d1e8      	bne.n	9000ba2a <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000ba58:	6823      	ldr	r3, [r4, #0]
9000ba5a:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000ba5c:	4d09      	ldr	r5, [pc, #36]	; (9000ba84 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000ba5e:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000ba60:	685a      	ldr	r2, [r3, #4]
9000ba62:	402a      	ands	r2, r5
9000ba64:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000ba66:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000ba6a:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000ba6e:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
9000ba72:	e710      	b.n	9000b896 <HAL_I2C_Mem_Write+0x76>
9000ba74:	fc009800 	.word	0xfc009800
9000ba78:	01002000 	.word	0x01002000
9000ba7c:	fc009c00 	.word	0xfc009c00
9000ba80:	01ff0000 	.word	0x01ff0000
9000ba84:	fe00e800 	.word	0xfe00e800

9000ba88 <HAL_I2C_Mem_Read>:
{
9000ba88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000ba8c:	461f      	mov	r7, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000ba8e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000ba92:	f8bd 9024 	ldrh.w	r9, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000ba96:	2b20      	cmp	r3, #32
{
9000ba98:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000ba9a:	d137      	bne.n	9000bb0c <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
9000ba9c:	9b08      	ldr	r3, [sp, #32]
9000ba9e:	4682      	mov	sl, r0
9000baa0:	b36b      	cbz	r3, 9000bafe <HAL_I2C_Mem_Read+0x76>
9000baa2:	f1b9 0f00 	cmp.w	r9, #0
9000baa6:	d02a      	beq.n	9000bafe <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
9000baa8:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000baac:	2b01      	cmp	r3, #1
9000baae:	d02d      	beq.n	9000bb0c <HAL_I2C_Mem_Read+0x84>
9000bab0:	2301      	movs	r3, #1
9000bab2:	460e      	mov	r6, r1
9000bab4:	4690      	mov	r8, r2
9000bab6:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000baba:	f7fe fa83 	bl	90009fc4 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000babe:	f8da 3000 	ldr.w	r3, [sl]
    tickstart = HAL_GetTick();
9000bac2:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000bac4:	699a      	ldr	r2, [r3, #24]
9000bac6:	0412      	lsls	r2, r2, #16
9000bac8:	d523      	bpl.n	9000bb12 <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000baca:	f7fe fa7b 	bl	90009fc4 <HAL_GetTick>
9000bace:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000bad0:	f8da 3000 	ldr.w	r3, [sl]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000bad4:	2819      	cmp	r0, #25
9000bad6:	d9f5      	bls.n	9000bac4 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000bad8:	699a      	ldr	r2, [r3, #24]
9000bada:	0410      	lsls	r0, r2, #16
9000badc:	d5f2      	bpl.n	9000bac4 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000bade:	f8da 3044 	ldr.w	r3, [sl, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000bae2:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000bae4:	2200      	movs	r2, #0
      return HAL_ERROR;
9000bae6:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000bae8:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000baea:	f88a 2040 	strb.w	r2, [sl, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000baee:	f8ca 3044 	str.w	r3, [sl, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000baf2:	f88a 1041 	strb.w	r1, [sl, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000baf6:	f88a 2042 	strb.w	r2, [sl, #66]	; 0x42
}
9000bafa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000bafe:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000bb02:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000bb04:	f8ca 3044 	str.w	r3, [sl, #68]	; 0x44
}
9000bb08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
9000bb0c:	2002      	movs	r0, #2
}
9000bb0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
9000bb12:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000bb14:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000bb16:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000bb1a:	4650      	mov	r0, sl
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000bb1c:	f88a 1041 	strb.w	r1, [sl, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000bb20:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000bb22:	f8ca 2024 	str.w	r2, [sl, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000bb26:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000bb28:	f88a 1042 	strb.w	r1, [sl, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000bb2c:	f8ca 2034 	str.w	r2, [sl, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000bb30:	f8ca 2044 	str.w	r2, [sl, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
9000bb34:	4981      	ldr	r1, [pc, #516]	; (9000bd3c <HAL_I2C_Mem_Read+0x2b4>)
    hi2c->XferCount = Size;
9000bb36:	f8aa 902a 	strh.w	r9, [sl, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000bb3a:	685a      	ldr	r2, [r3, #4]
9000bb3c:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000bb3e:	b2f9      	uxtb	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
9000bb40:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000bb44:	4621      	mov	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
9000bb46:	4332      	orrs	r2, r6
9000bb48:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000bb4c:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000bb4e:	462a      	mov	r2, r5
9000bb50:	f7ff fc88 	bl	9000b464 <I2C_WaitOnTXISFlagUntilTimeout>
9000bb54:	2800      	cmp	r0, #0
9000bb56:	f040 8090 	bne.w	9000bc7a <HAL_I2C_Mem_Read+0x1f2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000bb5a:	2f01      	cmp	r7, #1
9000bb5c:	d00c      	beq.n	9000bb78 <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000bb5e:	ea4f 2218 	mov.w	r2, r8, lsr #8
9000bb62:	f8da 3000 	ldr.w	r3, [sl]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000bb66:	4621      	mov	r1, r4
9000bb68:	4650      	mov	r0, sl
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000bb6a:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000bb6c:	462a      	mov	r2, r5
9000bb6e:	f7ff fc79 	bl	9000b464 <I2C_WaitOnTXISFlagUntilTimeout>
9000bb72:	2800      	cmp	r0, #0
9000bb74:	f040 8081 	bne.w	9000bc7a <HAL_I2C_Mem_Read+0x1f2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000bb78:	fa5f f388 	uxtb.w	r3, r8
9000bb7c:	f8da 2000 	ldr.w	r2, [sl]
9000bb80:	6293      	str	r3, [r2, #40]	; 0x28
9000bb82:	1c61      	adds	r1, r4, #1
9000bb84:	d15f      	bne.n	9000bc46 <HAL_I2C_Mem_Read+0x1be>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000bb86:	6993      	ldr	r3, [r2, #24]
9000bb88:	065b      	lsls	r3, r3, #25
9000bb8a:	d5fc      	bpl.n	9000bb86 <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000bb8c:	f8ba 302a 	ldrh.w	r3, [sl, #42]	; 0x2a
9000bb90:	b29b      	uxth	r3, r3
9000bb92:	2bff      	cmp	r3, #255	; 0xff
9000bb94:	f240 80ab 	bls.w	9000bcee <HAL_I2C_Mem_Read+0x266>
  MODIFY_REG(hi2c->Instance->CR2, \
9000bb98:	6853      	ldr	r3, [r2, #4]
9000bb9a:	4968      	ldr	r1, [pc, #416]	; (9000bd3c <HAL_I2C_Mem_Read+0x2b4>)
9000bb9c:	400b      	ands	r3, r1
9000bb9e:	4968      	ldr	r1, [pc, #416]	; (9000bd40 <HAL_I2C_Mem_Read+0x2b8>)
9000bba0:	4333      	orrs	r3, r6
9000bba2:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000bba4:	23ff      	movs	r3, #255	; 0xff
9000bba6:	f8aa 3028 	strh.w	r3, [sl, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000bbaa:	6051      	str	r1, [r2, #4]
9000bbac:	4f65      	ldr	r7, [pc, #404]	; (9000bd44 <HAL_I2C_Mem_Read+0x2bc>)
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000bbae:	f04f 09ff 	mov.w	r9, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000bbb2:	f8df 819c 	ldr.w	r8, [pc, #412]	; 9000bd50 <HAL_I2C_Mem_Read+0x2c8>
9000bbb6:	1c60      	adds	r0, r4, #1
9000bbb8:	d127      	bne.n	9000bc0a <HAL_I2C_Mem_Read+0x182>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000bbba:	6993      	ldr	r3, [r2, #24]
9000bbbc:	0759      	lsls	r1, r3, #29
9000bbbe:	d5fc      	bpl.n	9000bbba <HAL_I2C_Mem_Read+0x132>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000bbc0:	6a52      	ldr	r2, [r2, #36]	; 0x24
9000bbc2:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
9000bbc6:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
9000bbc8:	f8ba 202a 	ldrh.w	r2, [sl, #42]	; 0x2a
      hi2c->pBuffPtr++;
9000bbcc:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
      hi2c->XferCount--;
9000bbd0:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
9000bbd2:	3301      	adds	r3, #1
      hi2c->XferCount--;
9000bbd4:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
9000bbd6:	f8ca 3024 	str.w	r3, [sl, #36]	; 0x24
      hi2c->XferSize--;
9000bbda:	f8ba 3028 	ldrh.w	r3, [sl, #40]	; 0x28
      hi2c->XferCount--;
9000bbde:	f8aa 202a 	strh.w	r2, [sl, #42]	; 0x2a
      hi2c->XferSize--;
9000bbe2:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000bbe4:	f8ba 202a 	ldrh.w	r2, [sl, #42]	; 0x2a
      hi2c->XferSize--;
9000bbe8:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000bbea:	b292      	uxth	r2, r2
      hi2c->XferSize--;
9000bbec:	f8aa 3028 	strh.w	r3, [sl, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000bbf0:	b10a      	cbz	r2, 9000bbf6 <HAL_I2C_Mem_Read+0x16e>
9000bbf2:	2b00      	cmp	r3, #0
9000bbf4:	d046      	beq.n	9000bc84 <HAL_I2C_Mem_Read+0x1fc>
    } while (hi2c->XferCount > 0U);
9000bbf6:	f8ba 302a 	ldrh.w	r3, [sl, #42]	; 0x2a
9000bbfa:	b29b      	uxth	r3, r3
9000bbfc:	2b00      	cmp	r3, #0
9000bbfe:	f000 8086 	beq.w	9000bd0e <HAL_I2C_Mem_Read+0x286>
9000bc02:	1c60      	adds	r0, r4, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000bc04:	f8da 2000 	ldr.w	r2, [sl]
9000bc08:	d0d7      	beq.n	9000bbba <HAL_I2C_Mem_Read+0x132>
9000bc0a:	6993      	ldr	r3, [r2, #24]
9000bc0c:	075b      	lsls	r3, r3, #29
9000bc0e:	d4d7      	bmi.n	9000bbc0 <HAL_I2C_Mem_Read+0x138>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000bc10:	f7fe f9d8 	bl	90009fc4 <HAL_GetTick>
9000bc14:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000bc16:	f8da 2000 	ldr.w	r2, [sl]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000bc1a:	4284      	cmp	r4, r0
9000bc1c:	d301      	bcc.n	9000bc22 <HAL_I2C_Mem_Read+0x19a>
9000bc1e:	2c00      	cmp	r4, #0
9000bc20:	d1c9      	bne.n	9000bbb6 <HAL_I2C_Mem_Read+0x12e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000bc22:	6993      	ldr	r3, [r2, #24]
9000bc24:	f013 0304 	ands.w	r3, r3, #4
9000bc28:	d1c5      	bne.n	9000bbb6 <HAL_I2C_Mem_Read+0x12e>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000bc2a:	f8da 2044 	ldr.w	r2, [sl, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000bc2e:	2120      	movs	r1, #32
          return HAL_ERROR;
9000bc30:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000bc32:	f88a 3040 	strb.w	r3, [sl, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000bc36:	430a      	orrs	r2, r1
9000bc38:	f8ca 2044 	str.w	r2, [sl, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000bc3c:	f88a 1041 	strb.w	r1, [sl, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000bc40:	f88a 3042 	strb.w	r3, [sl, #66]	; 0x42
          return HAL_ERROR;
9000bc44:	e760      	b.n	9000bb08 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000bc46:	6993      	ldr	r3, [r2, #24]
9000bc48:	065f      	lsls	r7, r3, #25
9000bc4a:	d49f      	bmi.n	9000bb8c <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000bc4c:	f7fe f9ba 	bl	90009fc4 <HAL_GetTick>
9000bc50:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000bc52:	f8da 2000 	ldr.w	r2, [sl]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000bc56:	4284      	cmp	r4, r0
9000bc58:	d301      	bcc.n	9000bc5e <HAL_I2C_Mem_Read+0x1d6>
9000bc5a:	2c00      	cmp	r4, #0
9000bc5c:	d191      	bne.n	9000bb82 <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000bc5e:	6993      	ldr	r3, [r2, #24]
9000bc60:	f013 0340 	ands.w	r3, r3, #64	; 0x40
9000bc64:	d18d      	bne.n	9000bb82 <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000bc66:	f8da 2044 	ldr.w	r2, [sl, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000bc6a:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000bc6c:	430a      	orrs	r2, r1
9000bc6e:	f8ca 2044 	str.w	r2, [sl, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000bc72:	f88a 1041 	strb.w	r1, [sl, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000bc76:	f88a 3042 	strb.w	r3, [sl, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000bc7a:	2300      	movs	r3, #0
      return HAL_ERROR;
9000bc7c:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000bc7e:	f88a 3040 	strb.w	r3, [sl, #64]	; 0x40
      return HAL_ERROR;
9000bc82:	e741      	b.n	9000bb08 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000bc84:	f8da 2000 	ldr.w	r2, [sl]
9000bc88:	1c60      	adds	r0, r4, #1
9000bc8a:	d110      	bne.n	9000bcae <HAL_I2C_Mem_Read+0x226>
9000bc8c:	6993      	ldr	r3, [r2, #24]
9000bc8e:	0619      	lsls	r1, r3, #24
9000bc90:	d5fc      	bpl.n	9000bc8c <HAL_I2C_Mem_Read+0x204>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000bc92:	f8ba 302a 	ldrh.w	r3, [sl, #42]	; 0x2a
9000bc96:	b29b      	uxth	r3, r3
9000bc98:	2bff      	cmp	r3, #255	; 0xff
9000bc9a:	d919      	bls.n	9000bcd0 <HAL_I2C_Mem_Read+0x248>
  MODIFY_REG(hi2c->Instance->CR2, \
9000bc9c:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000bc9e:	f8aa 9028 	strh.w	r9, [sl, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000bca2:	403b      	ands	r3, r7
9000bca4:	4333      	orrs	r3, r6
9000bca6:	ea43 0308 	orr.w	r3, r3, r8
9000bcaa:	6053      	str	r3, [r2, #4]
}
9000bcac:	e7a3      	b.n	9000bbf6 <HAL_I2C_Mem_Read+0x16e>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000bcae:	6993      	ldr	r3, [r2, #24]
9000bcb0:	061b      	lsls	r3, r3, #24
9000bcb2:	d4ee      	bmi.n	9000bc92 <HAL_I2C_Mem_Read+0x20a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000bcb4:	f7fe f986 	bl	90009fc4 <HAL_GetTick>
9000bcb8:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000bcba:	f8da 2000 	ldr.w	r2, [sl]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000bcbe:	4284      	cmp	r4, r0
9000bcc0:	d301      	bcc.n	9000bcc6 <HAL_I2C_Mem_Read+0x23e>
9000bcc2:	2c00      	cmp	r4, #0
9000bcc4:	d1e0      	bne.n	9000bc88 <HAL_I2C_Mem_Read+0x200>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000bcc6:	6993      	ldr	r3, [r2, #24]
9000bcc8:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000bccc:	d1dc      	bne.n	9000bc88 <HAL_I2C_Mem_Read+0x200>
9000bcce:	e7ac      	b.n	9000bc2a <HAL_I2C_Mem_Read+0x1a2>
          hi2c->XferSize = hi2c->XferCount;
9000bcd0:	f8ba 302a 	ldrh.w	r3, [sl, #42]	; 0x2a
9000bcd4:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000bcd6:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
9000bcd8:	f8aa 3028 	strh.w	r3, [sl, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000bcdc:	6853      	ldr	r3, [r2, #4]
9000bcde:	403b      	ands	r3, r7
9000bce0:	4333      	orrs	r3, r6
9000bce2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000bce6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000bcea:	6053      	str	r3, [r2, #4]
}
9000bcec:	e783      	b.n	9000bbf6 <HAL_I2C_Mem_Read+0x16e>
      hi2c->XferSize = hi2c->XferCount;
9000bcee:	f8ba 302a 	ldrh.w	r3, [sl, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000bcf2:	4812      	ldr	r0, [pc, #72]	; (9000bd3c <HAL_I2C_Mem_Read+0x2b4>)
      hi2c->XferSize = hi2c->XferCount;
9000bcf4:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000bcf6:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
9000bcf8:	f8aa 3028 	strh.w	r3, [sl, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000bcfc:	6853      	ldr	r3, [r2, #4]
9000bcfe:	4003      	ands	r3, r0
9000bd00:	4333      	orrs	r3, r6
9000bd02:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000bd06:	4910      	ldr	r1, [pc, #64]	; (9000bd48 <HAL_I2C_Mem_Read+0x2c0>)
9000bd08:	4319      	orrs	r1, r3
9000bd0a:	6051      	str	r1, [r2, #4]
}
9000bd0c:	e74e      	b.n	9000bbac <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000bd0e:	462a      	mov	r2, r5
9000bd10:	4621      	mov	r1, r4
9000bd12:	4650      	mov	r0, sl
9000bd14:	f7ff fc5c 	bl	9000b5d0 <I2C_WaitOnSTOPFlagUntilTimeout>
9000bd18:	b970      	cbnz	r0, 9000bd38 <HAL_I2C_Mem_Read+0x2b0>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000bd1a:	f8da 3000 	ldr.w	r3, [sl]
9000bd1e:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000bd20:	4c0a      	ldr	r4, [pc, #40]	; (9000bd4c <HAL_I2C_Mem_Read+0x2c4>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000bd22:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000bd24:	685a      	ldr	r2, [r3, #4]
9000bd26:	4022      	ands	r2, r4
9000bd28:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000bd2a:	f88a 1041 	strb.w	r1, [sl, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000bd2e:	f88a 0040 	strb.w	r0, [sl, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000bd32:	f88a 0042 	strb.w	r0, [sl, #66]	; 0x42
    return HAL_OK;
9000bd36:	e6e7      	b.n	9000bb08 <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
9000bd38:	2001      	movs	r0, #1
9000bd3a:	e6e5      	b.n	9000bb08 <HAL_I2C_Mem_Read+0x80>
9000bd3c:	fc009800 	.word	0xfc009800
9000bd40:	01ff2400 	.word	0x01ff2400
9000bd44:	fc009c00 	.word	0xfc009c00
9000bd48:	02002400 	.word	0x02002400
9000bd4c:	fe00e800 	.word	0xfe00e800
9000bd50:	01ff0000 	.word	0x01ff0000

9000bd54 <HAL_I2C_GetState>:
  return hi2c->State;
9000bd54:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
9000bd58:	4770      	bx	lr
9000bd5a:	bf00      	nop

9000bd5c <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
9000bd5c:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
9000bd5e:	4770      	bx	lr

9000bd60 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000bd60:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000bd64:	2a20      	cmp	r2, #32
9000bd66:	d123      	bne.n	9000bdb0 <HAL_I2CEx_ConfigAnalogFilter+0x50>
9000bd68:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000bd6c:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000bd70:	4603      	mov	r3, r0
9000bd72:	2a01      	cmp	r2, #1
9000bd74:	d01c      	beq.n	9000bdb0 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000bd76:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000bd78:	2024      	movs	r0, #36	; 0x24
{
9000bd7a:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
9000bd7c:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000bd80:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
9000bd84:	6810      	ldr	r0, [r2, #0]
9000bd86:	f020 0001 	bic.w	r0, r0, #1
9000bd8a:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
9000bd8c:	6810      	ldr	r0, [r2, #0]
9000bd8e:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
9000bd92:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
9000bd94:	6810      	ldr	r0, [r2, #0]
9000bd96:	4301      	orrs	r1, r0

    return HAL_OK;
9000bd98:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000bd9a:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000bd9c:	6811      	ldr	r1, [r2, #0]
9000bd9e:	f041 0101 	orr.w	r1, r1, #1
9000bda2:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000bda4:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000bda8:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000bdac:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000bdb0:	2002      	movs	r0, #2
}
9000bdb2:	4770      	bx	lr

9000bdb4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000bdb4:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000bdb8:	2a20      	cmp	r2, #32
9000bdba:	d122      	bne.n	9000be02 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
9000bdbc:	4603      	mov	r3, r0
{
9000bdbe:	b500      	push	{lr}
9000bdc0:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000bdc4:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000bdc8:	2a01      	cmp	r2, #1
9000bdca:	d01c      	beq.n	9000be06 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000bdcc:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000bdce:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000bdd0:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
9000bdd4:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
9000bdd8:	6810      	ldr	r0, [r2, #0]
9000bdda:	f020 0001 	bic.w	r0, r0, #1
9000bdde:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
9000bde0:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000bde2:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
9000bde6:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
9000bdea:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
9000bdec:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000bdee:	6811      	ldr	r1, [r2, #0]
9000bdf0:	f041 0101 	orr.w	r1, r1, #1
9000bdf4:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000bdf6:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000bdfa:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000bdfe:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000be02:	2002      	movs	r0, #2
}
9000be04:	4770      	bx	lr
    return HAL_BUSY;
9000be06:	2002      	movs	r0, #2
}
9000be08:	f85d fb04 	ldr.w	pc, [sp], #4

9000be0c <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
9000be0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000be10:	460d      	mov	r5, r1
9000be12:	4614      	mov	r4, r2
9000be14:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
9000be16:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
9000be18:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
9000be1a:	2701      	movs	r7, #1
  p = 0;
9000be1c:	f04f 0800 	mov.w	r8, #0
9000be20:	e006      	b.n	9000be30 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000be22:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
9000be26:	eb06 0308 	add.w	r3, r6, r8
9000be2a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000be2e:	d837      	bhi.n	9000bea0 <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
9000be30:	eb05 0008 	add.w	r0, r5, r8
9000be34:	4632      	mov	r2, r6
9000be36:	4639      	mov	r1, r7
    while (i != 0UL)
9000be38:	b116      	cbz	r6, 9000be40 <JPEG_Bits_To_SizeCodes+0x34>
      p++;
9000be3a:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
9000be3c:	f01f fe4e 	bl	9002badc <memset>
  for (l = 0; l < 16UL; l++)
9000be40:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
9000be42:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
9000be46:	d1ec      	bne.n	9000be22 <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
9000be48:	2300      	movs	r3, #0
9000be4a:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
9000be4e:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
9000be52:	7828      	ldrb	r0, [r5, #0]
9000be54:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
9000be56:	b300      	cbz	r0, 9000be9a <JPEG_Bits_To_SizeCodes+0x8e>
9000be58:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000be5c:	2701      	movs	r7, #1
  p = 0;
9000be5e:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
9000be60:	4288      	cmp	r0, r1
9000be62:	d10f      	bne.n	9000be84 <JPEG_Bits_To_SizeCodes+0x78>
9000be64:	eb02 0008 	add.w	r0, r2, r8
9000be68:	1c56      	adds	r6, r2, #1
9000be6a:	eb05 0c02 	add.w	ip, r5, r2
9000be6e:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000be72:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
9000be74:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
9000be78:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
9000be7a:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000be7e:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
9000be80:	458e      	cmp	lr, r1
9000be82:	d0f7      	beq.n	9000be74 <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
9000be84:	291f      	cmp	r1, #31
9000be86:	d80b      	bhi.n	9000bea0 <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000be88:	fa07 f001 	lsl.w	r0, r7, r1
9000be8c:	4298      	cmp	r0, r3
9000be8e:	d907      	bls.n	9000bea0 <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
9000be90:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000be92:	005b      	lsls	r3, r3, #1
    si++;
9000be94:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
9000be96:	2800      	cmp	r0, #0
9000be98:	d1e2      	bne.n	9000be60 <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
9000be9a:	2000      	movs	r0, #0
}
9000be9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
9000bea0:	2001      	movs	r0, #1
}
9000bea2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000bea6:	bf00      	nop

9000bea8 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
9000bea8:	b5f0      	push	{r4, r5, r6, r7, lr}
9000beaa:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
9000beae:	460d      	mov	r5, r1
9000beb0:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000beb2:	ab01      	add	r3, sp, #4
9000beb4:	aa43      	add	r2, sp, #268	; 0x10c
9000beb6:	a902      	add	r1, sp, #8
9000beb8:	f7ff ffa8 	bl	9000be0c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000bebc:	b9d0      	cbnz	r0, 9000bef4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000bebe:	9f01      	ldr	r7, [sp, #4]
9000bec0:	b1c7      	cbz	r7, 9000bef4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000bec2:	370f      	adds	r7, #15
9000bec4:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
9000bec8:	a902      	add	r1, sp, #8
9000beca:	f104 0c0f 	add.w	ip, r4, #15
9000bece:	4427      	add	r7, r4
9000bed0:	e009      	b.n	9000bee6 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bed2:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000bed6:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bed8:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bedc:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bee0:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bee2:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
9000bee4:	d006      	beq.n	9000bef4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000bee6:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000beea:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000beec:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000bef0:	d9ef      	bls.n	9000bed2 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000bef2:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000bef4:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
9000bef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000befa:	bf00      	nop

9000befc <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
9000befc:	b510      	push	{r4, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000befe:	6804      	ldr	r4, [r0, #0]
{
9000bf00:	4608      	mov	r0, r1
9000bf02:	b090      	sub	sp, #64	; 0x40
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000bf04:	f504 61f8 	add.w	r1, r4, #1984	; 0x7c0
9000bf08:	428a      	cmp	r2, r1
9000bf0a:	f000 808c 	beq.w	9000c026 <JPEG_Set_HuffDC_Mem+0x12a>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
9000bf0e:	f504 61fc 	add.w	r1, r4, #2016	; 0x7e0
9000bf12:	428a      	cmp	r2, r1
9000bf14:	d002      	beq.n	9000bf1c <JPEG_Set_HuffDC_Mem+0x20>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000bf16:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000bf18:	b010      	add	sp, #64	; 0x40
9000bf1a:	bd10      	pop	{r4, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000bf1c:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
9000bf20:	a901      	add	r1, sp, #4
9000bf22:	f7ff ffc1 	bl	9000bea8 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
9000bf26:	2800      	cmp	r0, #0
9000bf28:	d1f6      	bne.n	9000bf18 <JPEG_Set_HuffDC_Mem+0x1c>
    *addressDef = 0x0FFF0FFF;
9000bf2a:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
9000bf2e:	6023      	str	r3, [r4, #0]
    *addressDef = 0x0FFF0FFF;
9000bf30:	6063      	str	r3, [r4, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf32:	f89d 200f 	ldrb.w	r2, [sp, #15]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf36:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf3a:	0212      	lsls	r2, r2, #8
9000bf3c:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf40:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf42:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf46:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf4a:	430a      	orrs	r2, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf4c:	f89d 1038 	ldrb.w	r1, [sp, #56]	; 0x38
9000bf50:	430b      	orrs	r3, r1
      *address = lsb | (msb << 16);
9000bf52:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000bf56:	f844 3c04 	str.w	r3, [r4, #-4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf5a:	f89d 200d 	ldrb.w	r2, [sp, #13]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf5e:	f89d 300c 	ldrb.w	r3, [sp, #12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf62:	0212      	lsls	r2, r2, #8
9000bf64:	f89d 1034 	ldrb.w	r1, [sp, #52]	; 0x34
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf68:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf6a:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf6e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf72:	430a      	orrs	r2, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf74:	f89d 1030 	ldrb.w	r1, [sp, #48]	; 0x30
9000bf78:	430b      	orrs	r3, r1
      *address = lsb | (msb << 16);
9000bf7a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000bf7e:	f844 3c08 	str.w	r3, [r4, #-8]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf82:	f89d 200b 	ldrb.w	r2, [sp, #11]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf86:	f89d 300a 	ldrb.w	r3, [sp, #10]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf8a:	0212      	lsls	r2, r2, #8
9000bf8c:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf90:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf92:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf96:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf9a:	430a      	orrs	r2, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bf9c:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
9000bfa0:	430b      	orrs	r3, r1
      *address = lsb | (msb << 16);
9000bfa2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000bfa6:	f844 3c0c 	str.w	r3, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfaa:	f89d 2009 	ldrb.w	r2, [sp, #9]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfae:	f89d 3008 	ldrb.w	r3, [sp, #8]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfb2:	0212      	lsls	r2, r2, #8
9000bfb4:	f89d 1024 	ldrb.w	r1, [sp, #36]	; 0x24
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfb8:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfba:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfbe:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfc2:	430a      	orrs	r2, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfc4:	f89d 1020 	ldrb.w	r1, [sp, #32]
9000bfc8:	430b      	orrs	r3, r1
      *address = lsb | (msb << 16);
9000bfca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000bfce:	f844 3c10 	str.w	r3, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfd2:	f89d 2007 	ldrb.w	r2, [sp, #7]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfd6:	f89d 3006 	ldrb.w	r3, [sp, #6]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfda:	0212      	lsls	r2, r2, #8
9000bfdc:	f89d 101c 	ldrb.w	r1, [sp, #28]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfe0:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfe2:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfe6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfea:	430a      	orrs	r2, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bfec:	f89d 1018 	ldrb.w	r1, [sp, #24]
9000bff0:	430b      	orrs	r3, r1
      *address = lsb | (msb << 16);
9000bff2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000bff6:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bffa:	f89d 2005 	ldrb.w	r2, [sp, #5]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bffe:	f89d 3004 	ldrb.w	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c002:	0212      	lsls	r2, r2, #8
9000c004:	f89d 1014 	ldrb.w	r1, [sp, #20]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c008:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c00a:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c00e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c012:	430a      	orrs	r2, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c014:	f89d 1010 	ldrb.w	r1, [sp, #16]
9000c018:	430b      	orrs	r3, r1
      *address = lsb | (msb << 16);
9000c01a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000c01e:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000c022:	b010      	add	sp, #64	; 0x40
9000c024:	bd10      	pop	{r4, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000c026:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
9000c02a:	e779      	b.n	9000bf20 <JPEG_Set_HuffDC_Mem+0x24>

9000c02c <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
9000c02c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000c030:	6804      	ldr	r4, [r0, #0]
{
9000c032:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
9000c036:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000c038:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
9000c03c:	429a      	cmp	r2, r3
9000c03e:	d041      	beq.n	9000c0c4 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000c040:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
9000c044:	429a      	cmp	r2, r3
9000c046:	d004      	beq.n	9000c052 <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000c048:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000c04a:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000c04e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000c052:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000c056:	4628      	mov	r0, r5
9000c058:	466b      	mov	r3, sp
9000c05a:	f20d 4234 	addw	r2, sp, #1076	; 0x434
9000c05e:	a901      	add	r1, sp, #4
9000c060:	f7ff fed4 	bl	9000be0c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000c064:	2800      	cmp	r0, #0
9000c066:	d1f0      	bne.n	9000c04a <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000c068:	9b00      	ldr	r3, [sp, #0]
9000c06a:	b373      	cbz	r3, 9000c0ca <JPEG_Set_HuffAC_Mem+0x9e>
9000c06c:	330f      	adds	r3, #15
9000c06e:	f20d 4734 	addw	r7, sp, #1076	; 0x434
9000c072:	f10d 0c04 	add.w	ip, sp, #4
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000c076:	ae42      	add	r6, sp, #264	; 0x108
9000c078:	eb05 0e03 	add.w	lr, r5, r3
9000c07c:	350f      	adds	r5, #15
9000c07e:	e011      	b.n	9000c0a4 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
9000c080:	eb02 0343 	add.w	r3, r2, r3, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000c084:	2ba1      	cmp	r3, #161	; 0xa1
9000c086:	d8df      	bhi.n	9000c048 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000c088:	f81c 2b01 	ldrb.w	r2, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000c08c:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000c090:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
9000c094:	45ae      	cmp	lr, r5
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000c096:	f102 32ff 	add.w	r2, r2, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000c09a:	4631      	mov	r1, r6
9000c09c:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000c0a0:	54f2      	strb	r2, [r6, r3]
  while (k < lastK)
9000c0a2:	d013      	beq.n	9000c0cc <JPEG_Set_HuffAC_Mem+0xa0>
    l = AC_BitsValsTable->HuffVal[k];
9000c0a4:	f815 1f01 	ldrb.w	r1, [r5, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000c0a8:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
9000c0aa:	2900      	cmp	r1, #0
9000c0ac:	d0ec      	beq.n	9000c088 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
9000c0ae:	090b      	lsrs	r3, r1, #4
      lsb = (l & 0x0FUL);
9000c0b0:	f001 020f 	and.w	r2, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000c0b4:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000c0b6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000c0ba:	f102 32ff 	add.w	r2, r2, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000c0be:	d1df      	bne.n	9000c080 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
9000c0c0:	23a1      	movs	r3, #161	; 0xa1
9000c0c2:	e7e1      	b.n	9000c088 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000c0c4:	f204 6444 	addw	r4, r4, #1604	; 0x644
9000c0c8:	e7c5      	b.n	9000c056 <JPEG_Set_HuffAC_Mem+0x2a>
9000c0ca:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
9000c0cc:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
9000c0d0:	4a19      	ldr	r2, [pc, #100]	; (9000c138 <JPEG_Set_HuffAC_Mem+0x10c>)
9000c0d2:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
9000c0d6:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
9000c0da:	6023      	str	r3, [r4, #0]
9000c0dc:	6063      	str	r3, [r4, #4]
9000c0de:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
9000c0e2:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000c0e4:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000c0e8:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000c0ea:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
9000c0ee:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
9000c0f2:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000c0f4:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000c0f8:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000c0fa:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000c0fe:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c100:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c104:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c108:	0212      	lsls	r2, r2, #8
9000c10a:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c10e:	021b      	lsls	r3, r3, #8
9000c110:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c114:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
9000c118:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c11a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c11e:	433a      	orrs	r2, r7
    while (i > 1UL)
9000c120:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c122:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000c126:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000c12a:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000c12e:	d1e7      	bne.n	9000c100 <JPEG_Set_HuffAC_Mem+0xd4>
}
9000c130:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000c134:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000c138:	0fd10fd0 	.word	0x0fd10fd0

9000c13c <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000c13c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c13e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
9000c142:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c144:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c146:	f003 0303 	and.w	r3, r3, #3
9000c14a:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000c14c:	6803      	ldr	r3, [r0, #0]
9000c14e:	685a      	ldr	r2, [r3, #4]
9000c150:	bf0c      	ite	eq
9000c152:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000c156:	f022 0208 	bicne.w	r2, r2, #8
9000c15a:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c15c:	681a      	ldr	r2, [r3, #0]
9000c15e:	f022 0201 	bic.w	r2, r2, #1
9000c162:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c164:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c166:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c16a:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000c16c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c16e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000c172:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000c174:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c176:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000c17a:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000c17c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c17e:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000c182:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000c184:	681a      	ldr	r2, [r3, #0]
9000c186:	f042 0201 	orr.w	r2, r2, #1
9000c18a:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c18c:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000c18e:	f002 020c 	and.w	r2, r2, #12
9000c192:	2a08      	cmp	r2, #8
9000c194:	d00a      	beq.n	9000c1ac <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c196:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000c198:	f002 020c 	and.w	r2, r2, #12
9000c19c:	2a0c      	cmp	r2, #12
9000c19e:	d000      	beq.n	9000c1a2 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000c1a0:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c1a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c1a4:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000c1a8:	631a      	str	r2, [r3, #48]	; 0x30
}
9000c1aa:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000c1ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c1ae:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000c1b2:	631a      	str	r2, [r3, #48]	; 0x30
9000c1b4:	4770      	bx	lr
9000c1b6:	bf00      	nop

9000c1b8 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c1b8:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000c1ba:	6a82      	ldr	r2, [r0, #40]	; 0x28
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c1bc:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000c1be:	429a      	cmp	r2, r3
9000c1c0:	d332      	bcc.n	9000c228 <JPEG_DMA_StartProcess+0x70>
{
9000c1c2:	b5f0      	push	{r4, r5, r6, r7, lr}
9000c1c4:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000c1c6:	6b40      	ldr	r0, [r0, #52]	; 0x34
{
9000c1c8:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000c1ca:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000c1cc:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000c1ce:	42b5      	cmp	r5, r6
9000c1d0:	d327      	bcc.n	9000c222 <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000c1d2:	4f1c      	ldr	r7, [pc, #112]	; (9000c244 <JPEG_DMA_StartProcess+0x8c>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000c1d4:	f8df c078 	ldr.w	ip, [pc, #120]	; 9000c250 <JPEG_DMA_StartProcess+0x98>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000c1d8:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000c1da:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000c1de:	491a      	ldr	r1, [pc, #104]	; (9000c248 <JPEG_DMA_StartProcess+0x90>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000c1e0:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000c1e2:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000c1e4:	4919      	ldr	r1, [pc, #100]	; (9000c24c <JPEG_DMA_StartProcess+0x94>)
9000c1e6:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000c1e8:	b1a3      	cbz	r3, 9000c214 <JPEG_DMA_StartProcess+0x5c>
9000c1ea:	b19e      	cbz	r6, 9000c214 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c1ec:	fbb2 f1f3 	udiv	r1, r2, r3
9000c1f0:	fb03 2311 	mls	r3, r3, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c1f4:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c1f6:	1ad2      	subs	r2, r2, r3
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c1f8:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000c1fa:	fbb5 f3f6 	udiv	r3, r5, r6
9000c1fe:	fb06 5313 	mls	r3, r6, r3, r5
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c202:	62a2      	str	r2, [r4, #40]	; 0x28
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000c204:	1aeb      	subs	r3, r5, r3
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c206:	2501      	movs	r5, #1
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000c208:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c20a:	9500      	str	r5, [sp, #0]
9000c20c:	69e2      	ldr	r2, [r4, #28]
9000c20e:	f001 fbdd 	bl	9000d9cc <HAL_MDMA_Start_IT>
9000c212:	b158      	cbz	r0, 9000c22c <JPEG_DMA_StartProcess+0x74>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c214:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
9000c216:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c218:	f043 0304 	orr.w	r3, r3, #4
9000c21c:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000c21e:	b003      	add	sp, #12
9000c220:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000c222:	2001      	movs	r0, #1
}
9000c224:	b003      	add	sp, #12
9000c226:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000c228:	2001      	movs	r0, #1
}
9000c22a:	4770      	bx	lr
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000c22c:	6822      	ldr	r2, [r4, #0]
9000c22e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c230:	69a1      	ldr	r1, [r4, #24]
9000c232:	3240      	adds	r2, #64	; 0x40
9000c234:	9500      	str	r5, [sp, #0]
9000c236:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000c238:	f001 fbc8 	bl	9000d9cc <HAL_MDMA_Start_IT>
9000c23c:	2800      	cmp	r0, #0
9000c23e:	d0f1      	beq.n	9000c224 <JPEG_DMA_StartProcess+0x6c>
9000c240:	e7e8      	b.n	9000c214 <JPEG_DMA_StartProcess+0x5c>
9000c242:	bf00      	nop
9000c244:	9000c77d 	.word	0x9000c77d
9000c248:	9000c9f9 	.word	0x9000c9f9
9000c24c:	9000ca7d 	.word	0x9000ca7d
9000c250:	9000c7a9 	.word	0x9000c7a9

9000c254 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000c254:	6803      	ldr	r3, [r0, #0]
9000c256:	685a      	ldr	r2, [r3, #4]
9000c258:	f002 0203 	and.w	r2, r2, #3
9000c25c:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000c25e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000c262:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000c264:	f000 809d 	beq.w	9000c3a2 <HAL_JPEG_GetInfo.part.0+0x14e>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000c268:	685a      	ldr	r2, [r3, #4]
9000c26a:	f012 0203 	ands.w	r2, r2, #3
9000c26e:	d174      	bne.n	9000c35a <HAL_JPEG_GetInfo.part.0+0x106>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c270:	685c      	ldr	r4, [r3, #4]
    pInfo->ColorSpace = JPEG_GRAYSCALE_COLORSPACE;
9000c272:	600a      	str	r2, [r1, #0]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c274:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c276:	0c24      	lsrs	r4, r4, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c278:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c27a:	608c      	str	r4, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c27c:	60ca      	str	r2, [r1, #12]
      pInfo->ChromaSubsampling = JPEG_444_SUBSAMPLING;
9000c27e:	2200      	movs	r2, #0
9000c280:	f8c9 2004 	str.w	r2, [r9, #4]
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000c284:	4a5f      	ldr	r2, [pc, #380]	; (9000c404 <HAL_JPEG_GetInfo.part.0+0x1b0>)
9000c286:	f103 0c50 	add.w	ip, r3, #80	; 0x50
  uint32_t quality = 0;
9000c28a:	2600      	movs	r6, #0
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000c28c:	f04f 0e64 	mov.w	lr, #100	; 0x64
9000c290:	f102 0540 	add.w	r5, r2, #64	; 0x40
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000c294:	f241 3488 	movw	r4, #5000	; 0x1388
9000c298:	e033      	b.n	9000c302 <HAL_JPEG_GetInfo.part.0+0xae>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000c29a:	f892 8001 	ldrb.w	r8, [r2, #1]
9000c29e:	fb0e f707 	mul.w	r7, lr, r7
9000c2a2:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000c2a4:	f811 8008 	ldrb.w	r8, [r1, r8]
9000c2a8:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000c2ac:	2f64      	cmp	r7, #100	; 0x64
9000c2ae:	d969      	bls.n	9000c384 <HAL_JPEG_GetInfo.part.0+0x130>
          quality += 5000UL / scale;
9000c2b0:	fbb4 f7f7 	udiv	r7, r4, r7
9000c2b4:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c2b6:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000c2ba:	2f01      	cmp	r7, #1
9000c2bc:	d03d      	beq.n	9000c33a <HAL_JPEG_GetInfo.part.0+0xe6>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000c2be:	f892 8002 	ldrb.w	r8, [r2, #2]
9000c2c2:	fb0e f707 	mul.w	r7, lr, r7
9000c2c6:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000c2c8:	f811 8008 	ldrb.w	r8, [r1, r8]
9000c2cc:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000c2d0:	2f64      	cmp	r7, #100	; 0x64
9000c2d2:	d952      	bls.n	9000c37a <HAL_JPEG_GetInfo.part.0+0x126>
          quality += 5000UL / scale;
9000c2d4:	fbb4 f7f7 	udiv	r7, r4, r7
9000c2d8:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c2da:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000c2dc:	2b01      	cmp	r3, #1
9000c2de:	d030      	beq.n	9000c342 <HAL_JPEG_GetInfo.part.0+0xee>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000c2e0:	78d7      	ldrb	r7, [r2, #3]
9000c2e2:	fb0e f303 	mul.w	r3, lr, r3
9000c2e6:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000c2e8:	5dcf      	ldrb	r7, [r1, r7]
9000c2ea:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000c2ee:	2b64      	cmp	r3, #100	; 0x64
9000c2f0:	d952      	bls.n	9000c398 <HAL_JPEG_GetInfo.part.0+0x144>
          quality += 5000UL / scale;
9000c2f2:	fbb4 f3f3 	udiv	r3, r4, r3
9000c2f6:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000c2f8:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000c2fa:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000c2fe:	4295      	cmp	r5, r2
9000c300:	d025      	beq.n	9000c34e <HAL_JPEG_GetInfo.part.0+0xfa>
    quantRow = *tableAddress;
9000c302:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c306:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000c308:	2f01      	cmp	r7, #1
9000c30a:	d034      	beq.n	9000c376 <HAL_JPEG_GetInfo.part.0+0x122>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000c30c:	f892 8000 	ldrb.w	r8, [r2]
9000c310:	fb0e f707 	mul.w	r7, lr, r7
9000c314:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000c316:	f811 8008 	ldrb.w	r8, [r1, r8]
9000c31a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000c31e:	2f64      	cmp	r7, #100	; 0x64
9000c320:	d935      	bls.n	9000c38e <HAL_JPEG_GetInfo.part.0+0x13a>
          quality += 5000UL / scale;
9000c322:	fbb4 f7f7 	udiv	r7, r4, r7
9000c326:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c328:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000c32c:	2f01      	cmp	r7, #1
9000c32e:	d1b4      	bne.n	9000c29a <HAL_JPEG_GetInfo.part.0+0x46>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c330:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000c334:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000c336:	2f01      	cmp	r7, #1
9000c338:	d1c1      	bne.n	9000c2be <HAL_JPEG_GetInfo.part.0+0x6a>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c33a:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000c33c:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000c33e:	2b01      	cmp	r3, #1
9000c340:	d1ce      	bne.n	9000c2e0 <HAL_JPEG_GetInfo.part.0+0x8c>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000c342:	3204      	adds	r2, #4
        quality += 100UL;
9000c344:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
9000c346:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000c34a:	4295      	cmp	r5, r2
9000c34c:	d1d9      	bne.n	9000c302 <HAL_JPEG_GetInfo.part.0+0xae>
  }

  return (quality / 64UL);
9000c34e:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000c350:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000c352:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000c356:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000c35a:	685a      	ldr	r2, [r3, #4]
9000c35c:	f002 0203 	and.w	r2, r2, #3
9000c360:	2a03      	cmp	r2, #3
9000c362:	d14b      	bne.n	9000c3fc <HAL_JPEG_GetInfo.part.0+0x1a8>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c364:	685c      	ldr	r4, [r3, #4]
    pInfo->ColorSpace = JPEG_CMYK_COLORSPACE;
9000c366:	2530      	movs	r5, #48	; 0x30
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c368:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c36a:	0c24      	lsrs	r4, r4, #16
    pInfo->ColorSpace = JPEG_CMYK_COLORSPACE;
9000c36c:	600d      	str	r5, [r1, #0]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c36e:	0c12      	lsrs	r2, r2, #16
9000c370:	e9c1 4202 	strd	r4, r2, [r1, #8]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000c374:	e01d      	b.n	9000c3b2 <HAL_JPEG_GetInfo.part.0+0x15e>
        quality += 100UL;
9000c376:	3664      	adds	r6, #100	; 0x64
9000c378:	e7d6      	b.n	9000c328 <HAL_JPEG_GetInfo.part.0+0xd4>
          quality += (200UL - scale) / 2UL;
9000c37a:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000c37e:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000c382:	e7aa      	b.n	9000c2da <HAL_JPEG_GetInfo.part.0+0x86>
9000c384:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000c388:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000c38c:	e793      	b.n	9000c2b6 <HAL_JPEG_GetInfo.part.0+0x62>
9000c38e:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000c392:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000c396:	e7c7      	b.n	9000c328 <HAL_JPEG_GetInfo.part.0+0xd4>
9000c398:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000c39c:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000c3a0:	e7aa      	b.n	9000c2f8 <HAL_JPEG_GetInfo.part.0+0xa4>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c3a2:	685c      	ldr	r4, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000c3a4:	2510      	movs	r5, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c3a6:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c3a8:	40ec      	lsrs	r4, r5
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000c3aa:	600d      	str	r5, [r1, #0]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c3ac:	40ea      	lsrs	r2, r5
9000c3ae:	e9c1 4202 	strd	r4, r2, [r1, #8]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000c3b2:	691a      	ldr	r2, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000c3b4:	695d      	ldr	r5, [r3, #20]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000c3b6:	699c      	ldr	r4, [r3, #24]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000c3b8:	0916      	lsrs	r6, r2, #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c3ba:	f015 0ff0 	tst.w	r5, #240	; 0xf0
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000c3be:	f3c2 1203 	ubfx	r2, r2, #4, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000c3c2:	ea4f 1414 	mov.w	r4, r4, lsr #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000c3c6:	ea4f 1715 	mov.w	r7, r5, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c3ca:	d108      	bne.n	9000c3de <HAL_JPEG_GetInfo.part.0+0x18a>
9000c3cc:	2a01      	cmp	r2, #1
9000c3ce:	d106      	bne.n	9000c3de <HAL_JPEG_GetInfo.part.0+0x18a>
9000c3d0:	0726      	lsls	r6, r4, #28
9000c3d2:	f47f af54 	bne.w	9000c27e <HAL_JPEG_GetInfo.part.0+0x2a>
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000c3d6:	2202      	movs	r2, #2
9000c3d8:	f8c9 2004 	str.w	r2, [r9, #4]
9000c3dc:	e752      	b.n	9000c284 <HAL_JPEG_GetInfo.part.0+0x30>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c3de:	433e      	orrs	r6, r7
9000c3e0:	0735      	lsls	r5, r6, #28
9000c3e2:	f43f af4c 	beq.w	9000c27e <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c3e6:	433c      	orrs	r4, r7
9000c3e8:	0721      	lsls	r1, r4, #28
9000c3ea:	f47f af48 	bne.w	9000c27e <HAL_JPEG_GetInfo.part.0+0x2a>
9000c3ee:	2a03      	cmp	r2, #3
9000c3f0:	f47f af45 	bne.w	9000c27e <HAL_JPEG_GetInfo.part.0+0x2a>
      pInfo->ChromaSubsampling = JPEG_420_SUBSAMPLING;
9000c3f4:	2201      	movs	r2, #1
9000c3f6:	f8c9 2004 	str.w	r2, [r9, #4]
9000c3fa:	e743      	b.n	9000c284 <HAL_JPEG_GetInfo.part.0+0x30>
    return HAL_ERROR;
9000c3fc:	2001      	movs	r0, #1
}
9000c3fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000c402:	bf00      	nop
9000c404:	9002fcf4 	.word	0x9002fcf4

9000c408 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000c408:	2800      	cmp	r0, #0
9000c40a:	f000 810b 	beq.w	9000c624 <HAL_JPEG_Init+0x21c>
{
9000c40e:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000c410:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000c414:	4604      	mov	r4, r0
9000c416:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c41a:	2b00      	cmp	r3, #0
9000c41c:	f000 80fd 	beq.w	9000c61a <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
9000c420:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000c422:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
9000c424:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000c426:	4880      	ldr	r0, [pc, #512]	; (9000c628 <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000c428:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000c42c:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c42e:	f041 0101 	orr.w	r1, r1, #1
9000c432:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c434:	6811      	ldr	r1, [r2, #0]
9000c436:	f021 0101 	bic.w	r1, r1, #1
9000c43a:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c43c:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c43e:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
9000c442:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000c444:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c446:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
9000c44a:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000c44c:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c44e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
9000c452:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000c454:	6b91      	ldr	r1, [r2, #56]	; 0x38
9000c456:	f041 0160 	orr.w	r1, r1, #96	; 0x60
9000c45a:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000c45c:	4973      	ldr	r1, [pc, #460]	; (9000c62c <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000c45e:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c460:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
9000c462:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000c464:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c468:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
9000c46c:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
9000c470:	4b6f      	ldr	r3, [pc, #444]	; (9000c630 <HAL_JPEG_Init+0x228>)
9000c472:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
9000c476:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c47a:	486e      	ldr	r0, [pc, #440]	; (9000c634 <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c47c:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c480:	4b6d      	ldr	r3, [pc, #436]	; (9000c638 <HAL_JPEG_Init+0x230>)
9000c482:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
9000c486:	496d      	ldr	r1, [pc, #436]	; (9000c63c <HAL_JPEG_Init+0x234>)
9000c488:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c48c:	4b6c      	ldr	r3, [pc, #432]	; (9000c640 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c48e:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c492:	486c      	ldr	r0, [pc, #432]	; (9000c644 <HAL_JPEG_Init+0x23c>)
9000c494:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
9000c498:	496b      	ldr	r1, [pc, #428]	; (9000c648 <HAL_JPEG_Init+0x240>)
9000c49a:	4b6c      	ldr	r3, [pc, #432]	; (9000c64c <HAL_JPEG_Init+0x244>)
9000c49c:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000c4a0:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
9000c4a4:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000c4a8:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
9000c4ac:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000c4b0:	4967      	ldr	r1, [pc, #412]	; (9000c650 <HAL_JPEG_Init+0x248>)
9000c4b2:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000c4b4:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000c4b8:	430b      	orrs	r3, r1
  *address = value;
9000c4ba:	4966      	ldr	r1, [pc, #408]	; (9000c654 <HAL_JPEG_Init+0x24c>)
9000c4bc:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000c4c0:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000c4c4:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
9000c4c8:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c4ca:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000c4ce:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000c4d0:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000c4d4:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
9000c4d8:	428e      	cmp	r6, r1
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c4da:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000c4de:	ea43 030c 	orr.w	r3, r3, ip
9000c4e2:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c4e6:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000c4ea:	d1eb      	bne.n	9000c4c4 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000c4ec:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c4f0:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
9000c4f4:	4856      	ldr	r0, [pc, #344]	; (9000c650 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c4f6:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
9000c4f8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000c4fa:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000c4fe:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
9000c502:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000c506:	4003      	ands	r3, r0
  *address = value;
9000c508:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c50c:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
9000c510:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
9000c514:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000c518:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
9000c51c:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000c520:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000c522:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000c526:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000c52a:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000c52e:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000c530:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c532:	4b49      	ldr	r3, [pc, #292]	; (9000c658 <HAL_JPEG_Init+0x250>)
  *address = value;
9000c534:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000c538:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c53c:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
9000c540:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
9000c544:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
9000c548:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000c54c:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000c54e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
9000c552:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
9000c556:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
9000c55a:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c55c:	483f      	ldr	r0, [pc, #252]	; (9000c65c <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000c55e:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c560:	4b3f      	ldr	r3, [pc, #252]	; (9000c660 <HAL_JPEG_Init+0x258>)
  *address = value;
9000c562:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c566:	493f      	ldr	r1, [pc, #252]	; (9000c664 <HAL_JPEG_Init+0x25c>)
9000c568:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000c56c:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c570:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
9000c574:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
9000c578:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000c57c:	493a      	ldr	r1, [pc, #232]	; (9000c668 <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000c57e:	b29b      	uxth	r3, r3
9000c580:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000c584:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000c588:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000c58c:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000c590:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c592:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000c596:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000c598:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000c59c:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000c5a0:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000c5a2:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
9000c5a6:	ea43 030e 	orr.w	r3, r3, lr
9000c5aa:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c5ae:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000c5b2:	d1eb      	bne.n	9000c58c <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000c5b4:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
9000c5b8:	4926      	ldr	r1, [pc, #152]	; (9000c654 <HAL_JPEG_Init+0x24c>)
9000c5ba:	4620      	mov	r0, r4
9000c5bc:	f7ff fd36 	bl	9000c02c <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000c5c0:	b118      	cbz	r0, 9000c5ca <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000c5c2:	2301      	movs	r3, #1
    return HAL_ERROR;
9000c5c4:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000c5c6:	6523      	str	r3, [r4, #80]	; 0x50
}
9000c5c8:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
9000c5ca:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000c5cc:	4620      	mov	r0, r4
9000c5ce:	4926      	ldr	r1, [pc, #152]	; (9000c668 <HAL_JPEG_Init+0x260>)
9000c5d0:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
9000c5d4:	f7ff fd2a 	bl	9000c02c <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000c5d8:	2800      	cmp	r0, #0
9000c5da:	d1f2      	bne.n	9000c5c2 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
9000c5dc:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000c5de:	4620      	mov	r0, r4
9000c5e0:	4922      	ldr	r1, [pc, #136]	; (9000c66c <HAL_JPEG_Init+0x264>)
9000c5e2:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
9000c5e6:	f7ff fc89 	bl	9000befc <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000c5ea:	2800      	cmp	r0, #0
9000c5ec:	d1e9      	bne.n	9000c5c2 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000c5ee:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000c5f0:	4620      	mov	r0, r4
9000c5f2:	491f      	ldr	r1, [pc, #124]	; (9000c670 <HAL_JPEG_Init+0x268>)
9000c5f4:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
9000c5f8:	f7ff fc80 	bl	9000befc <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000c5fc:	2800      	cmp	r0, #0
9000c5fe:	d1e0      	bne.n	9000c5c2 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000c600:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c602:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000c604:	6853      	ldr	r3, [r2, #4]
9000c606:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c60a:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
9000c60c:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000c60e:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c610:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000c614:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
9000c616:	6560      	str	r0, [r4, #84]	; 0x54
}
9000c618:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000c61a:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000c61e:	f7f8 fc81 	bl	90004f24 <HAL_JPEG_MspInit>
9000c622:	e6fd      	b.n	9000c420 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000c624:	2001      	movs	r0, #1
}
9000c626:	4770      	bx	lr
9000c628:	9002fcb4 	.word	0x9002fcb4
9000c62c:	9002fc3c 	.word	0x9002fc3c
9000c630:	01050100 	.word	0x01050100
9000c634:	0b0a0908 	.word	0x0b0a0908
9000c638:	07060504 	.word	0x07060504
9000c63c:	03020100 	.word	0x03020100
9000c640:	7d010000 	.word	0x7d010000
9000c644:	04040505 	.word	0x04040505
9000c648:	03040203 	.word	0x03040203
9000c64c:	03010200 	.word	0x03010200
9000c650:	ffff0000 	.word	0xffff0000
9000c654:	9002fb88 	.word	0x9002fb88
9000c658:	09080706 	.word	0x09080706
9000c65c:	01000404 	.word	0x01000404
9000c660:	04040201 	.word	0x04040201
9000c664:	05070403 	.word	0x05070403
9000c668:	9002fad4 	.word	0x9002fad4
9000c66c:	9002fc98 	.word	0x9002fc98
9000c670:	9002fc7c 	.word	0x9002fc7c

9000c674 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000c674:	2b00      	cmp	r3, #0
9000c676:	bf18      	it	ne
9000c678:	2900      	cmpne	r1, #0
9000c67a:	d03b      	beq.n	9000c6f4 <HAL_JPEG_Decode_DMA+0x80>
{
9000c67c:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000c67e:	fab0 f580 	clz	r5, r0
9000c682:	4604      	mov	r4, r0
9000c684:	096d      	lsrs	r5, r5, #5
9000c686:	b330      	cbz	r0, 9000c6d6 <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
9000c688:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
9000c68c:	f1bc 0f01 	cmp.w	ip, #1
9000c690:	d02e      	beq.n	9000c6f0 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c692:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
9000c696:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c69a:	45f4      	cmp	ip, lr
9000c69c:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000c6a0:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c6a4:	d119      	bne.n	9000c6da <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
9000c6a6:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000c6a8:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000c6ac:	9b04      	ldr	r3, [sp, #16]
9000c6ae:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000c6b0:	2304      	movs	r3, #4
9000c6b2:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000c6b6:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c6b8:	f023 030f 	bic.w	r3, r3, #15
9000c6bc:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000c6be:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c6c0:	f043 030e 	orr.w	r3, r3, #14
9000c6c4:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
9000c6c6:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000c6c8:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
9000c6ca:	f7ff fd37 	bl	9000c13c <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000c6ce:	f7ff fd73 	bl	9000c1b8 <JPEG_DMA_StartProcess>
9000c6d2:	b930      	cbnz	r0, 9000c6e2 <HAL_JPEG_Decode_DMA+0x6e>
}
9000c6d4:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000c6d6:	2001      	movs	r0, #1
}
9000c6d8:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
9000c6da:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
9000c6dc:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000c6e0:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c6e2:	2306      	movs	r3, #6
      return HAL_ERROR;
9000c6e4:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
9000c6e6:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c6ea:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000c6ee:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000c6f0:	2002      	movs	r0, #2
}
9000c6f2:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000c6f4:	2001      	movs	r0, #1
}
9000c6f6:	4770      	bx	lr

9000c6f8 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c6f8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c6fa:	f003 030c 	and.w	r3, r3, #12
9000c6fe:	2b0c      	cmp	r3, #12
9000c700:	d01a      	beq.n	9000c738 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c702:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c704:	f003 030c 	and.w	r3, r3, #12
9000c708:	2b08      	cmp	r3, #8
9000c70a:	d001      	beq.n	9000c710 <HAL_JPEG_Pause+0x18>
}
9000c70c:	2000      	movs	r0, #0
9000c70e:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c710:	07ca      	lsls	r2, r1, #31
9000c712:	d41f      	bmi.n	9000c754 <HAL_JPEG_Pause+0x5c>
9000c714:	f06f 0228 	mvn.w	r2, #40	; 0x28
9000c718:	f04f 3cff 	mov.w	ip, #4294967295
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c71c:	078b      	lsls	r3, r1, #30
9000c71e:	d504      	bpl.n	9000c72a <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000c720:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c722:	4694      	mov	ip, r2
9000c724:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000c728:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000c72a:	6802      	ldr	r2, [r0, #0]
}
9000c72c:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000c72e:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c730:	ea03 030c 	and.w	r3, r3, ip
9000c734:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c736:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c738:	07cb      	lsls	r3, r1, #31
9000c73a:	d503      	bpl.n	9000c744 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c73c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c73e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000c742:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c744:	0789      	lsls	r1, r1, #30
9000c746:	d5e1      	bpl.n	9000c70c <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000c748:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c74a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000c74e:	6543      	str	r3, [r0, #84]	; 0x54
}
9000c750:	2000      	movs	r0, #0
9000c752:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c754:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c756:	f06f 022e 	mvn.w	r2, #46	; 0x2e
9000c75a:	f06f 0c06 	mvn.w	ip, #6
9000c75e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000c762:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000c764:	e7da      	b.n	9000c71c <HAL_JPEG_Pause+0x24>
9000c766:	bf00      	nop

9000c768 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000c768:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000c76a:	6282      	str	r2, [r0, #40]	; 0x28
}
9000c76c:	4770      	bx	lr
9000c76e:	bf00      	nop

9000c770 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000c770:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000c772:	62c2      	str	r2, [r0, #44]	; 0x2c
}
9000c774:	4770      	bx	lr
9000c776:	bf00      	nop

9000c778 <HAL_JPEG_EncodeCpltCallback>:
9000c778:	4770      	bx	lr
9000c77a:	bf00      	nop

9000c77c <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c77c:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c77e:	2101      	movs	r1, #1
{
9000c780:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c782:	6803      	ldr	r3, [r0, #0]
9000c784:	681a      	ldr	r2, [r3, #0]
9000c786:	f022 0201 	bic.w	r2, r2, #1
9000c78a:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c78c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c78e:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c792:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c794:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c798:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000c79a:	f043 0304 	orr.w	r3, r3, #4
9000c79e:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000c7a0:	f7f5 fb94 	bl	90001ecc <HAL_JPEG_ErrorCallback>
}
9000c7a4:	bd08      	pop	{r3, pc}
9000c7a6:	bf00      	nop

9000c7a8 <JPEG_MDMAInCpltCallback>:
{
9000c7a8:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c7aa:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000c7ac:	f248 0c0c 	movw	ip, #32780	; 0x800c
{
9000c7b0:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c7b2:	6821      	ldr	r1, [r4, #0]
9000c7b4:	6b0a      	ldr	r2, [r1, #48]	; 0x30
9000c7b6:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c7ba:	630a      	str	r2, [r1, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000c7bc:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c7be:	ea03 030c 	and.w	r3, r3, ip
9000c7c2:	2b0c      	cmp	r3, #12
9000c7c4:	d001      	beq.n	9000c7ca <JPEG_MDMAInCpltCallback+0x22>
}
9000c7c6:	b003      	add	sp, #12
9000c7c8:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c7ca:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000c7cc:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c7ce:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c7d0:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c7d2:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c7d4:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c7d8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c7da:	1a9b      	subs	r3, r3, r2
9000c7dc:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000c7de:	6a21      	ldr	r1, [r4, #32]
9000c7e0:	f7f5 fb0c 	bl	90001dfc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000c7e4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c7e6:	42ab      	cmp	r3, r5
9000c7e8:	d311      	bcc.n	9000c80e <JPEG_MDMAInCpltCallback+0x66>
      if (inXfrSize == 0UL)
9000c7ea:	b305      	cbz	r5, 9000c82e <JPEG_MDMAInCpltCallback+0x86>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c7ec:	fbb3 f2f5 	udiv	r2, r3, r5
9000c7f0:	fb05 3512 	mls	r5, r5, r2, r3
9000c7f4:	1b5b      	subs	r3, r3, r5
9000c7f6:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c7f8:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c7fa:	04d1      	lsls	r1, r2, #19
9000c7fc:	d400      	bmi.n	9000c800 <JPEG_MDMAInCpltCallback+0x58>
9000c7fe:	b963      	cbnz	r3, 9000c81a <JPEG_MDMAInCpltCallback+0x72>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c800:	6822      	ldr	r2, [r4, #0]
9000c802:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c804:	f043 0360 	orr.w	r3, r3, #96	; 0x60
9000c808:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c80a:	b003      	add	sp, #12
9000c80c:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000c80e:	b1cb      	cbz	r3, 9000c844 <JPEG_MDMAInCpltCallback+0x9c>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000c810:	0798      	lsls	r0, r3, #30
9000c812:	d119      	bne.n	9000c848 <JPEG_MDMAInCpltCallback+0xa0>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c814:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c816:	04d2      	lsls	r2, r2, #19
9000c818:	d4f2      	bmi.n	9000c800 <JPEG_MDMAInCpltCallback+0x58>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000c81a:	6822      	ldr	r2, [r4, #0]
9000c81c:	2501      	movs	r5, #1
9000c81e:	69a1      	ldr	r1, [r4, #24]
9000c820:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000c822:	3240      	adds	r2, #64	; 0x40
9000c824:	9500      	str	r5, [sp, #0]
9000c826:	f001 f8d1 	bl	9000d9cc <HAL_MDMA_Start_IT>
9000c82a:	2800      	cmp	r0, #0
9000c82c:	d0e8      	beq.n	9000c800 <JPEG_MDMAInCpltCallback+0x58>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c82e:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c830:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000c832:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c834:	f043 0304 	orr.w	r3, r3, #4
9000c838:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c83a:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000c83e:	f7f5 fb45 	bl	90001ecc <HAL_JPEG_ErrorCallback>
        return;
9000c842:	e7c0      	b.n	9000c7c6 <JPEG_MDMAInCpltCallback+0x1e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c844:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c846:	e7db      	b.n	9000c800 <JPEG_MDMAInCpltCallback+0x58>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000c848:	f023 0303 	bic.w	r3, r3, #3
9000c84c:	3304      	adds	r3, #4
9000c84e:	62a3      	str	r3, [r4, #40]	; 0x28
9000c850:	e7d2      	b.n	9000c7f8 <JPEG_MDMAInCpltCallback+0x50>
9000c852:	bf00      	nop

9000c854 <JPEG_DMA_PollResidualData>:
{
9000c854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c856:	6802      	ldr	r2, [r0, #0]
9000c858:	2610      	movs	r6, #16
{
9000c85a:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c85c:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000c85e:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000c862:	d11d      	bne.n	9000c8a0 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c864:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000c866:	06df      	lsls	r7, r3, #27
9000c868:	d51a      	bpl.n	9000c8a0 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000c86a:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000c86c:	69e7      	ldr	r7, [r4, #28]
9000c86e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000c870:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000c872:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000c874:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000c876:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000c878:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000c87a:	69e2      	ldr	r2, [r4, #28]
9000c87c:	443a      	add	r2, r7
9000c87e:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000c880:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000c882:	69e2      	ldr	r2, [r4, #28]
9000c884:	4402      	add	r2, r0
9000c886:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000c888:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c88a:	69e2      	ldr	r2, [r4, #28]
9000c88c:	440a      	add	r2, r1
9000c88e:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000c890:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c892:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
9000c894:	3304      	adds	r3, #4
9000c896:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c898:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c89a:	4293      	cmp	r3, r2
9000c89c:	d021      	beq.n	9000c8e2 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c89e:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000c8a0:	3e01      	subs	r6, #1
9000c8a2:	d1db      	bne.n	9000c85c <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000c8a4:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c8a6:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000c8a8:	06d8      	lsls	r0, r3, #27
9000c8aa:	d501      	bpl.n	9000c8b0 <JPEG_DMA_PollResidualData+0x5c>
9000c8ac:	048b      	lsls	r3, r1, #18
9000c8ae:	d417      	bmi.n	9000c8e0 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c8b0:	6813      	ldr	r3, [r2, #0]
9000c8b2:	f023 0301 	bic.w	r3, r3, #1
9000c8b6:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000c8b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c8ba:	b9eb      	cbnz	r3, 9000c8f8 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000c8bc:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000c8be:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c8c0:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c8c2:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c8c4:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000c8c8:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c8cc:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c8d0:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c8d2:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c8d4:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c8d6:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c8da:	d00a      	beq.n	9000c8f2 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c8dc:	f7ff ff4c 	bl	9000c778 <HAL_JPEG_EncodeCpltCallback>
}
9000c8e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c8e2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c8e4:	4620      	mov	r0, r4
9000c8e6:	69e1      	ldr	r1, [r4, #28]
9000c8e8:	f7f5 faa8 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c8ec:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000c8ee:	6265      	str	r5, [r4, #36]	; 0x24
9000c8f0:	e7d6      	b.n	9000c8a0 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c8f2:	f7f5 faed 	bl	90001ed0 <HAL_JPEG_DecodeCpltCallback>
}
9000c8f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c8f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c8fa:	4620      	mov	r0, r4
9000c8fc:	69e1      	ldr	r1, [r4, #28]
9000c8fe:	f7f5 fa9d 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000c902:	2300      	movs	r3, #0
9000c904:	6263      	str	r3, [r4, #36]	; 0x24
9000c906:	e7d9      	b.n	9000c8bc <JPEG_DMA_PollResidualData+0x68>

9000c908 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000c908:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c90a:	f413 5f40 	tst.w	r3, #12288	; 0x3000
9000c90e:	d028      	beq.n	9000c962 <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c910:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c912:	f003 030c 	and.w	r3, r3, #12
9000c916:	2b0c      	cmp	r3, #12
{
9000c918:	b570      	push	{r4, r5, r6, lr}
9000c91a:	4604      	mov	r4, r0
9000c91c:	b082      	sub	sp, #8
9000c91e:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c920:	d007      	beq.n	9000c932 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c922:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c924:	f003 030c 	and.w	r3, r3, #12
9000c928:	2b08      	cmp	r3, #8
9000c92a:	d037      	beq.n	9000c99c <HAL_JPEG_Resume+0x94>
  return HAL_OK;
9000c92c:	2000      	movs	r0, #0
}
9000c92e:	b002      	add	sp, #8
9000c930:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c932:	07c8      	lsls	r0, r1, #31
9000c934:	d417      	bmi.n	9000c966 <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c936:	07a9      	lsls	r1, r5, #30
9000c938:	d5f8      	bpl.n	9000c92c <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c93a:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c93c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000c940:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000c942:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c944:	041a      	lsls	r2, r3, #16
9000c946:	d453      	bmi.n	9000c9f0 <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000c948:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000c94a:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
9000c94c:	2a00      	cmp	r2, #0
9000c94e:	d13e      	bne.n	9000c9ce <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c950:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c952:	2206      	movs	r2, #6
          return HAL_ERROR;
9000c954:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c956:	f043 0304 	orr.w	r3, r3, #4
9000c95a:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c95c:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
9000c960:	e7e5      	b.n	9000c92e <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
9000c962:	2001      	movs	r0, #1
}
9000c964:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c966:	6d62      	ldr	r2, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c968:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c96a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c96e:	6a81      	ldr	r1, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c970:	6562      	str	r2, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
9000c972:	2900      	cmp	r1, #0
9000c974:	d0ec      	beq.n	9000c950 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000c976:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c978:	fbb3 f2f1 	udiv	r2, r3, r1
9000c97c:	fb01 3112 	mls	r1, r1, r2, r3
9000c980:	1a5b      	subs	r3, r3, r1
9000c982:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
9000c984:	2b00      	cmp	r3, #0
9000c986:	d0d6      	beq.n	9000c936 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000c988:	6822      	ldr	r2, [r4, #0]
9000c98a:	2601      	movs	r6, #1
9000c98c:	3240      	adds	r2, #64	; 0x40
9000c98e:	9600      	str	r6, [sp, #0]
9000c990:	69a1      	ldr	r1, [r4, #24]
9000c992:	f001 f81b 	bl	9000d9cc <HAL_MDMA_Start_IT>
9000c996:	2800      	cmp	r0, #0
9000c998:	d0cd      	beq.n	9000c936 <HAL_JPEG_Resume+0x2e>
9000c99a:	e7d9      	b.n	9000c950 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c99c:	f011 0101 	ands.w	r1, r1, #1
9000c9a0:	d013      	beq.n	9000c9ca <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c9a2:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c9a4:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000c9a6:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c9a8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000c9ac:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c9ae:	07ab      	lsls	r3, r5, #30
9000c9b0:	d504      	bpl.n	9000c9bc <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c9b2:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000c9b4:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c9b6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000c9ba:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000c9bc:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
9000c9be:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000c9c0:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c9c2:	430b      	orrs	r3, r1
9000c9c4:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c9c6:	b002      	add	sp, #8
9000c9c8:	bd70      	pop	{r4, r5, r6, pc}
9000c9ca:	2228      	movs	r2, #40	; 0x28
9000c9cc:	e7ef      	b.n	9000c9ae <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c9ce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c9d0:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c9d2:	fbb3 f1f2 	udiv	r1, r3, r2
9000c9d6:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c9da:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c9dc:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c9de:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c9e0:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c9e2:	9500      	str	r5, [sp, #0]
9000c9e4:	69e2      	ldr	r2, [r4, #28]
9000c9e6:	f000 fff1 	bl	9000d9cc <HAL_MDMA_Start_IT>
9000c9ea:	2800      	cmp	r0, #0
9000c9ec:	d09e      	beq.n	9000c92c <HAL_JPEG_Resume+0x24>
9000c9ee:	e7af      	b.n	9000c950 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000c9f0:	4620      	mov	r0, r4
9000c9f2:	f7ff ff2f 	bl	9000c854 <JPEG_DMA_PollResidualData>
9000c9f6:	e799      	b.n	9000c92c <HAL_JPEG_Resume+0x24>

9000c9f8 <JPEG_MDMAOutCpltCallback>:
{
9000c9f8:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c9fa:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000c9fc:	f248 0c0c 	movw	ip, #32780	; 0x800c
{
9000ca00:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000ca02:	6823      	ldr	r3, [r4, #0]
9000ca04:	6b19      	ldr	r1, [r3, #48]	; 0x30
9000ca06:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
9000ca0a:	6319      	str	r1, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000ca0c:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000ca0e:	ea02 020c 	and.w	r2, r2, ip
9000ca12:	2a0c      	cmp	r2, #12
9000ca14:	d001      	beq.n	9000ca1a <JPEG_MDMAOutCpltCallback+0x22>
}
9000ca16:	b003      	add	sp, #12
9000ca18:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000ca1a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000ca1c:	0692      	lsls	r2, r2, #26
9000ca1e:	d505      	bpl.n	9000ca2c <JPEG_MDMAOutCpltCallback+0x34>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000ca20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000ca22:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000ca26:	631a      	str	r2, [r3, #48]	; 0x30
}
9000ca28:	b003      	add	sp, #12
9000ca2a:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000ca2c:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ca2e:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000ca30:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ca32:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ca34:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000ca36:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000ca3a:	1a9b      	subs	r3, r3, r2
9000ca3c:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ca3e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ca40:	f7f5 f9fc 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000ca44:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000ca46:	049b      	lsls	r3, r3, #18
9000ca48:	d501      	bpl.n	9000ca4e <JPEG_MDMAOutCpltCallback+0x56>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000ca4a:	6823      	ldr	r3, [r4, #0]
9000ca4c:	e7e8      	b.n	9000ca20 <JPEG_MDMAOutCpltCallback+0x28>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000ca4e:	6821      	ldr	r1, [r4, #0]
9000ca50:	2501      	movs	r5, #1
9000ca52:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ca54:	69e2      	ldr	r2, [r4, #28]
9000ca56:	3144      	adds	r1, #68	; 0x44
9000ca58:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000ca5a:	9500      	str	r5, [sp, #0]
9000ca5c:	f000 ffb6 	bl	9000d9cc <HAL_MDMA_Start_IT>
9000ca60:	2800      	cmp	r0, #0
9000ca62:	d0f2      	beq.n	9000ca4a <JPEG_MDMAOutCpltCallback+0x52>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000ca64:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000ca66:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000ca68:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000ca6a:	f043 0304 	orr.w	r3, r3, #4
9000ca6e:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000ca70:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000ca74:	f7f5 fa2a 	bl	90001ecc <HAL_JPEG_ErrorCallback>
          return;
9000ca78:	e7cd      	b.n	9000ca16 <JPEG_MDMAOutCpltCallback+0x1e>
9000ca7a:	bf00      	nop

9000ca7c <JPEG_MDMAOutAbortCallback>:
{
9000ca7c:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000ca7e:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000ca80:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000ca82:	041a      	lsls	r2, r3, #16
9000ca84:	d400      	bmi.n	9000ca88 <JPEG_MDMAOutAbortCallback+0xc>
}
9000ca86:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000ca88:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000ca8a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ca8c:	681b      	ldr	r3, [r3, #0]
9000ca8e:	695b      	ldr	r3, [r3, #20]
9000ca90:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000ca94:	1ad3      	subs	r3, r2, r3
9000ca96:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000ca98:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ca9a:	429a      	cmp	r2, r3
9000ca9c:	d025      	beq.n	9000caea <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000ca9e:	6822      	ldr	r2, [r4, #0]
9000caa0:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000caa2:	f015 0510 	ands.w	r5, r5, #16
9000caa6:	d118      	bne.n	9000cada <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000caa8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000caaa:	bb4b      	cbnz	r3, 9000cb00 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000caac:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000caae:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000cab0:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000cab2:	f023 0301 	bic.w	r3, r3, #1
9000cab6:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000cab8:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000caba:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cabc:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000cac0:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000cac4:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000cac8:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000caca:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000cacc:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000cace:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cad2:	d012      	beq.n	9000cafa <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000cad4:	f7ff fe50 	bl	9000c778 <HAL_JPEG_EncodeCpltCallback>
}
9000cad8:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000cada:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000cadc:	049b      	lsls	r3, r3, #18
9000cade:	d4d2      	bmi.n	9000ca86 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000cae0:	4620      	mov	r0, r4
}
9000cae2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000cae6:	f7ff beb5 	b.w	9000c854 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000caea:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000caec:	4620      	mov	r0, r4
9000caee:	69e1      	ldr	r1, [r4, #28]
9000caf0:	f7f5 f9a4 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000caf4:	2300      	movs	r3, #0
9000caf6:	6263      	str	r3, [r4, #36]	; 0x24
9000caf8:	e7d1      	b.n	9000ca9e <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000cafa:	f7f5 f9e9 	bl	90001ed0 <HAL_JPEG_DecodeCpltCallback>
}
9000cafe:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cb00:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cb02:	4620      	mov	r0, r4
9000cb04:	69e1      	ldr	r1, [r4, #28]
9000cb06:	f7f5 f999 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000cb0a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000cb0c:	6265      	str	r5, [r4, #36]	; 0x24
9000cb0e:	e7cd      	b.n	9000caac <JPEG_MDMAOutAbortCallback+0x30>

9000cb10 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cb10:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000cb12:	f003 0303 	and.w	r3, r3, #3
9000cb16:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000cb18:	6803      	ldr	r3, [r0, #0]
{
9000cb1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000cb1e:	4604      	mov	r4, r0
9000cb20:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cb22:	d01f      	beq.n	9000cb64 <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000cb24:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cb26:	04d7      	lsls	r7, r2, #19
9000cb28:	d407      	bmi.n	9000cb3a <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000cb2a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cb2c:	0796      	lsls	r6, r2, #30
9000cb2e:	f100 811d 	bmi.w	9000cd6c <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000cb32:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cb34:	0750      	lsls	r0, r2, #29
9000cb36:	f100 81b1 	bmi.w	9000ce9c <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000cb3a:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000cb3c:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000cb40:	d107      	bne.n	9000cb52 <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000cb42:	6b5e      	ldr	r6, [r3, #52]	; 0x34
9000cb44:	f016 0608 	ands.w	r6, r6, #8
9000cb48:	d14c      	bne.n	9000cbe4 <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000cb4a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cb4c:	06d2      	lsls	r2, r2, #27
9000cb4e:	f100 81e3 	bmi.w	9000cf18 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cb52:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cb54:	f002 0238 	and.w	r2, r2, #56	; 0x38
9000cb58:	2a20      	cmp	r2, #32
9000cb5a:	d01a      	beq.n	9000cb92 <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
9000cb5c:	2000      	movs	r0, #0
}
9000cb5e:	b002      	add	sp, #8
9000cb60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000cb64:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cb66:	0652      	lsls	r2, r2, #25
9000cb68:	d5dc      	bpl.n	9000cb24 <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000cb6a:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000cb6c:	9101      	str	r1, [sp, #4]
9000cb6e:	f7ff fb71 	bl	9000c254 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000cb72:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000cb74:	9901      	ldr	r1, [sp, #4]
9000cb76:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000cb78:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000cb7a:	f7f5 f8ed 	bl	90001d58 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000cb7e:	6823      	ldr	r3, [r4, #0]
9000cb80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cb82:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000cb86:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000cb88:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000cb8a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000cb8e:	639a      	str	r2, [r3, #56]	; 0x38
9000cb90:	e7c8      	b.n	9000cb24 <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000cb92:	681a      	ldr	r2, [r3, #0]
9000cb94:	f022 0201 	bic.w	r2, r2, #1
9000cb98:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cb9a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cb9c:	f002 020c 	and.w	r2, r2, #12
9000cba0:	2a08      	cmp	r2, #8
9000cba2:	f000 81e6 	beq.w	9000cf72 <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000cba6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000cba8:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000cbac:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000cbae:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cbb0:	2b00      	cmp	r3, #0
9000cbb2:	f040 81e3 	bne.w	9000cf7c <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
9000cbb6:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000cbb8:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000cbba:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000cbbc:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cbbe:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000cbc2:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000cbc4:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
9000cbc8:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cbcc:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000cbce:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000cbd0:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cbd4:	f000 81c9 	beq.w	9000cf6a <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000cbd8:	f7ff fdce 	bl	9000c778 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000cbdc:	4628      	mov	r0, r5
}
9000cbde:	b002      	add	sp, #8
9000cbe0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000cbe4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cbe6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000cbe8:	3220      	adds	r2, #32
9000cbea:	4296      	cmp	r6, r2
9000cbec:	f0c0 81e4 	bcc.w	9000cfb8 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
9000cbf0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cbf2:	69e1      	ldr	r1, [r4, #28]
9000cbf4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cbf6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cbf8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cbfa:	69e2      	ldr	r2, [r4, #28]
9000cbfc:	440a      	add	r2, r1
9000cbfe:	0a19      	lsrs	r1, r3, #8
9000cc00:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cc02:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc04:	69e2      	ldr	r2, [r4, #28]
9000cc06:	440a      	add	r2, r1
9000cc08:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cc0a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cc0c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cc0e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc10:	69e2      	ldr	r2, [r4, #28]
9000cc12:	440a      	add	r2, r1
9000cc14:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cc16:	6a63      	ldr	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cc18:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000cc1a:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cc1c:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000cc1e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cc20:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cc22:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc24:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cc26:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc28:	69e2      	ldr	r2, [r4, #28]
9000cc2a:	440a      	add	r2, r1
9000cc2c:	0a19      	lsrs	r1, r3, #8
9000cc2e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cc30:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc32:	69e2      	ldr	r2, [r4, #28]
9000cc34:	440a      	add	r2, r1
9000cc36:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cc38:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cc3a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cc3c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc3e:	69e2      	ldr	r2, [r4, #28]
9000cc40:	440a      	add	r2, r1
9000cc42:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cc44:	6a63      	ldr	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cc46:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000cc48:	3304      	adds	r3, #4
9000cc4a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cc4c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cc4e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc50:	69e1      	ldr	r1, [r4, #28]
9000cc52:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cc54:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc56:	69e2      	ldr	r2, [r4, #28]
9000cc58:	440a      	add	r2, r1
9000cc5a:	0a19      	lsrs	r1, r3, #8
9000cc5c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cc5e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc60:	69e2      	ldr	r2, [r4, #28]
9000cc62:	440a      	add	r2, r1
9000cc64:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cc66:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cc68:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cc6a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc6c:	69e2      	ldr	r2, [r4, #28]
9000cc6e:	440a      	add	r2, r1
9000cc70:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cc72:	6a63      	ldr	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cc74:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000cc76:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cc78:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000cc7a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cc7c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cc7e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc80:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cc82:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc84:	69e2      	ldr	r2, [r4, #28]
9000cc86:	440a      	add	r2, r1
9000cc88:	0a19      	lsrs	r1, r3, #8
9000cc8a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cc8c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc8e:	69e2      	ldr	r2, [r4, #28]
9000cc90:	440a      	add	r2, r1
9000cc92:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cc94:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cc96:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cc98:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc9a:	69e2      	ldr	r2, [r4, #28]
9000cc9c:	440a      	add	r2, r1
9000cc9e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cca0:	6a63      	ldr	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cca2:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000cca4:	3304      	adds	r3, #4
9000cca6:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cca8:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ccaa:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ccac:	69e1      	ldr	r1, [r4, #28]
9000ccae:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ccb0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ccb2:	69e2      	ldr	r2, [r4, #28]
9000ccb4:	440a      	add	r2, r1
9000ccb6:	0a19      	lsrs	r1, r3, #8
9000ccb8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ccba:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ccbc:	69e2      	ldr	r2, [r4, #28]
9000ccbe:	440a      	add	r2, r1
9000ccc0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ccc2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ccc4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ccc6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ccc8:	69e2      	ldr	r2, [r4, #28]
9000ccca:	440a      	add	r2, r1
9000cccc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ccce:	6a63      	ldr	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ccd0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ccd2:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ccd4:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ccd6:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ccd8:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ccda:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ccdc:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ccde:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cce0:	69e2      	ldr	r2, [r4, #28]
9000cce2:	440a      	add	r2, r1
9000cce4:	0a19      	lsrs	r1, r3, #8
9000cce6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cce8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ccea:	69e2      	ldr	r2, [r4, #28]
9000ccec:	440a      	add	r2, r1
9000ccee:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ccf0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ccf2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ccf4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ccf6:	69e2      	ldr	r2, [r4, #28]
9000ccf8:	440a      	add	r2, r1
9000ccfa:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ccfc:	6a63      	ldr	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ccfe:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000cd00:	3304      	adds	r3, #4
9000cd02:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cd04:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cd06:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cd08:	69e1      	ldr	r1, [r4, #28]
9000cd0a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cd0c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd0e:	69e2      	ldr	r2, [r4, #28]
9000cd10:	440a      	add	r2, r1
9000cd12:	0a19      	lsrs	r1, r3, #8
9000cd14:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cd16:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd18:	69e2      	ldr	r2, [r4, #28]
9000cd1a:	440a      	add	r2, r1
9000cd1c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cd1e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cd20:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cd22:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd24:	69e2      	ldr	r2, [r4, #28]
9000cd26:	440a      	add	r2, r1
9000cd28:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cd2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cd2c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000cd2e:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cd30:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000cd32:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cd34:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cd36:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cd38:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cd3a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd3c:	69e2      	ldr	r2, [r4, #28]
9000cd3e:	440a      	add	r2, r1
9000cd40:	0a19      	lsrs	r1, r3, #8
9000cd42:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cd44:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd46:	69e2      	ldr	r2, [r4, #28]
9000cd48:	440a      	add	r2, r1
9000cd4a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cd4c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cd4e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cd50:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd52:	69e2      	ldr	r2, [r4, #28]
9000cd54:	440a      	add	r2, r1
9000cd56:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cd58:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cd5a:	3304      	adds	r3, #4
9000cd5c:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cd5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cd60:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000cd62:	429a      	cmp	r2, r3
9000cd64:	f000 82c7 	beq.w	9000d2f6 <JPEG_Process+0x7e6>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cd68:	6823      	ldr	r3, [r4, #0]
9000cd6a:	e6f2      	b.n	9000cb52 <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000cd6c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000cd6e:	2a00      	cmp	r2, #0
9000cd70:	f000 810c 	beq.w	9000cf8c <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000cd74:	6a21      	ldr	r1, [r4, #32]
9000cd76:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000cd78:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000cd7a:	f240 81a1 	bls.w	9000d0c0 <JPEG_Process+0x5b0>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000cd7e:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cd80:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000cd82:	04cd      	lsls	r5, r1, #19
9000cd84:	f53f aed9 	bmi.w	9000cb3a <JPEG_Process+0x2a>
9000cd88:	2a00      	cmp	r2, #0
9000cd8a:	f43f aed6 	beq.w	9000cb3a <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000cd8e:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000cd90:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000cd94:	f240 821d 	bls.w	9000d1d2 <JPEG_Process+0x6c2>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cd98:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000cd9a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cd9c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cd9e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cda0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cda2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cda4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cda6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cda8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cdac:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cdae:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cdb2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cdb4:	6a21      	ldr	r1, [r4, #32]
9000cdb6:	3104      	adds	r1, #4
9000cdb8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cdba:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cdbc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cdbe:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cdc0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cdc2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cdc4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cdc6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cdc8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cdcc:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cdce:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cdd2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cdd4:	6a21      	ldr	r1, [r4, #32]
9000cdd6:	3104      	adds	r1, #4
9000cdd8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cdda:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cddc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cdde:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cde0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cde2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cde4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cde6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cde8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cdec:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cdee:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cdf2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cdf4:	6a21      	ldr	r1, [r4, #32]
9000cdf6:	3104      	adds	r1, #4
9000cdf8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cdfa:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cdfc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cdfe:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce00:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce02:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce04:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ce06:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce08:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ce0c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce0e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce12:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ce14:	6a21      	ldr	r1, [r4, #32]
9000ce16:	3104      	adds	r1, #4
9000ce18:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ce1a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce1c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce1e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce20:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce22:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce24:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ce26:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce28:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ce2c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce2e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce32:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ce34:	6a21      	ldr	r1, [r4, #32]
9000ce36:	3104      	adds	r1, #4
9000ce38:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ce3a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce3c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce3e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce40:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce42:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce44:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ce46:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce48:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ce4c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce4e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce52:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ce54:	6a21      	ldr	r1, [r4, #32]
9000ce56:	3104      	adds	r1, #4
9000ce58:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ce5a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce5c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce5e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce60:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce62:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce64:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ce66:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce68:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ce6c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce6e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce72:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ce74:	6a21      	ldr	r1, [r4, #32]
9000ce76:	3104      	adds	r1, #4
9000ce78:	6221      	str	r1, [r4, #32]
          input_count = hjpeg->JpegInCount;
9000ce7a:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce7c:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce7e:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce80:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ce82:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce84:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce86:	7849      	ldrb	r1, [r1, #1]
9000ce88:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000ce8c:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce8e:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce92:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ce94:	6a22      	ldr	r2, [r4, #32]
9000ce96:	3204      	adds	r2, #4
9000ce98:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000ce9a:	e64e      	b.n	9000cb3a <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000ce9c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ce9e:	2a00      	cmp	r2, #0
9000cea0:	d074      	beq.n	9000cf8c <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000cea2:	6a21      	ldr	r1, [r4, #32]
9000cea4:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000cea6:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000cea8:	f200 817e 	bhi.w	9000d1a8 <JPEG_Process+0x698>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000ceac:	428a      	cmp	r2, r1
9000ceae:	f040 8109 	bne.w	9000d0c4 <JPEG_Process+0x5b4>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000ceb2:	6a21      	ldr	r1, [r4, #32]
9000ceb4:	4620      	mov	r0, r4
9000ceb6:	f7f4 ffa1 	bl	90001dfc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000ceba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000cebc:	2a04      	cmp	r2, #4
9000cebe:	d902      	bls.n	9000cec6 <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000cec0:	f022 0203 	bic.w	r2, r2, #3
9000cec4:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000cec6:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cec8:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000ceca:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cecc:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000cece:	04c9      	lsls	r1, r1, #19
9000ced0:	f53f ae33 	bmi.w	9000cb3a <JPEG_Process+0x2a>
9000ced4:	2a00      	cmp	r2, #0
9000ced6:	f43f ae30 	beq.w	9000cb3a <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000ceda:	0891      	lsrs	r1, r2, #2
9000cedc:	f040 821c 	bne.w	9000d318 <JPEG_Process+0x808>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cee0:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cee2:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000cee4:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cee6:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000cee8:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ceec:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
9000ceee:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cef0:	d010      	beq.n	9000cf14 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cef2:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cef4:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cef6:	5c69      	ldrb	r1, [r5, r1]
9000cef8:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
9000cefc:	6a21      	ldr	r1, [r4, #32]
9000cefe:	f101 0101 	add.w	r1, r1, #1
9000cf02:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cf04:	d106      	bne.n	9000cf14 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cf06:	6a22      	ldr	r2, [r4, #32]
9000cf08:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
9000cf0a:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cf0c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000cf10:	3201      	adds	r2, #1
9000cf12:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000cf14:	6418      	str	r0, [r3, #64]	; 0x40
9000cf16:	e610      	b.n	9000cb3a <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000cf18:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cf1a:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000cf1c:	3204      	adds	r2, #4
9000cf1e:	4295      	cmp	r5, r2
9000cf20:	f0c0 80d2 	bcc.w	9000d0c8 <JPEG_Process+0x5b8>
      dataword = hjpeg->Instance->DOR;
9000cf24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cf26:	69e1      	ldr	r1, [r4, #28]
9000cf28:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cf2a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cf2c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cf2e:	69e2      	ldr	r2, [r4, #28]
9000cf30:	440a      	add	r2, r1
9000cf32:	0a19      	lsrs	r1, r3, #8
9000cf34:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cf36:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cf38:	69e2      	ldr	r2, [r4, #28]
9000cf3a:	440a      	add	r2, r1
9000cf3c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cf3e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cf40:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cf42:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cf44:	69e2      	ldr	r2, [r4, #28]
9000cf46:	440a      	add	r2, r1
9000cf48:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cf4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cf4c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000cf4e:	3304      	adds	r3, #4
9000cf50:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cf52:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cf54:	429a      	cmp	r2, r3
9000cf56:	f47f af07 	bne.w	9000cd68 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cf5a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cf5c:	4620      	mov	r0, r4
9000cf5e:	69e1      	ldr	r1, [r4, #28]
9000cf60:	f7f4 ff6c 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cf64:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000cf66:	6266      	str	r6, [r4, #36]	; 0x24
9000cf68:	e5f3      	b.n	9000cb52 <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000cf6a:	f7f4 ffb1 	bl	90001ed0 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000cf6e:	4628      	mov	r0, r5
9000cf70:	e5f5      	b.n	9000cb5e <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000cf72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cf74:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000cf78:	631a      	str	r2, [r3, #48]	; 0x30
9000cf7a:	e614      	b.n	9000cba6 <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cf7c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cf7e:	4620      	mov	r0, r4
9000cf80:	69e1      	ldr	r1, [r4, #28]
9000cf82:	f7f4 ff5b 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000cf86:	2300      	movs	r3, #0
9000cf88:	6263      	str	r3, [r4, #36]	; 0x24
9000cf8a:	e614      	b.n	9000cbb6 <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cf8c:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cf8e:	f002 020c 	and.w	r2, r2, #12
9000cf92:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cf94:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cf96:	f000 8117 	beq.w	9000d1c8 <JPEG_Process+0x6b8>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cf9a:	f002 020c 	and.w	r2, r2, #12
9000cf9e:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cfa0:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cfa2:	f47f adca 	bne.w	9000cb3a <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cfa6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000cfaa:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000cfac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cfae:	f022 0206 	bic.w	r2, r2, #6
9000cfb2:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cfb4:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cfb6:	e5c0      	b.n	9000cb3a <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000cfb8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cfba:	4296      	cmp	r6, r2
9000cfbc:	f67f adc9 	bls.w	9000cb52 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000cfc0:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000cfc2:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000cfc4:	0880      	lsrs	r0, r0, #2
9000cfc6:	d020      	beq.n	9000d00a <JPEG_Process+0x4fa>
9000cfc8:	4629      	mov	r1, r5
9000cfca:	e000      	b.n	9000cfce <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000cfcc:	6823      	ldr	r3, [r4, #0]
9000cfce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000cfd0:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cfd2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cfd4:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000cfd6:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cfd8:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cfda:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000cfdc:	69e2      	ldr	r2, [r4, #28]
9000cfde:	4432      	add	r2, r6
9000cfe0:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000cfe4:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cfe6:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000cfe8:	69e2      	ldr	r2, [r4, #28]
9000cfea:	4432      	add	r2, r6
9000cfec:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cff0:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cff4:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cff6:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000cff8:	69e2      	ldr	r2, [r4, #28]
9000cffa:	4432      	add	r2, r6
9000cffc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cffe:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d000:	f103 0304 	add.w	r3, r3, #4
9000d004:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000d006:	d1e1      	bne.n	9000cfcc <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000d008:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000d00a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d00c:	42b3      	cmp	r3, r6
9000d00e:	f000 817a 	beq.w	9000d306 <JPEG_Process+0x7f6>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000d012:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000d016:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000d018:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000d01c:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000d01e:	d00e      	beq.n	9000d03e <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000d020:	f005 0303 	and.w	r3, r5, #3
9000d024:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d026:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000d028:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000d02a:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000d02c:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000d02e:	fa27 f303 	lsr.w	r3, r7, r3
9000d032:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000d034:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d036:	f103 0301 	add.w	r3, r3, #1
9000d03a:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000d03c:	d1f0      	bne.n	9000d020 <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000d03e:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d042:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d044:	69e1      	ldr	r1, [r4, #28]
9000d046:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000d048:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d04c:	f7f4 fef6 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000d050:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000d052:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000d054:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d056:	f63f ae87 	bhi.w	9000cd68 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d05a:	00f3      	lsls	r3, r6, #3
9000d05c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d05e:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000d060:	2e03      	cmp	r6, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d062:	fa27 f303 	lsr.w	r3, r7, r3
9000d066:	548b      	strb	r3, [r1, r2]
      for (index = nb_bytes; index < 4UL; index++)
9000d068:	f106 0301 	add.w	r3, r6, #1
        hjpeg->JpegOutCount++;
9000d06c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d06e:	f102 0201 	add.w	r2, r2, #1
9000d072:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d074:	f43f ae78 	beq.w	9000cd68 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d078:	00db      	lsls	r3, r3, #3
9000d07a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d07c:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000d07e:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d080:	fa27 f303 	lsr.w	r3, r7, r3
9000d084:	548b      	strb	r3, [r1, r2]
      for (index = nb_bytes; index < 4UL; index++)
9000d086:	f106 0202 	add.w	r2, r6, #2
        hjpeg->JpegOutCount++;
9000d08a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d08c:	f103 0301 	add.w	r3, r3, #1
9000d090:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d092:	f43f ae69 	beq.w	9000cd68 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d096:	00d3      	lsls	r3, r2, #3
9000d098:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000d09a:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000d09c:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d09e:	fa27 f303 	lsr.w	r3, r7, r3
9000d0a2:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000d0a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d0a6:	f103 0301 	add.w	r3, r3, #1
9000d0aa:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d0ac:	f47f ae5c 	bne.w	9000cd68 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d0b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d0b2:	0e3f      	lsrs	r7, r7, #24
9000d0b4:	69e2      	ldr	r2, [r4, #28]
9000d0b6:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000d0b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d0ba:	3301      	adds	r3, #1
9000d0bc:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d0be:	e653      	b.n	9000cd68 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000d0c0:	428a      	cmp	r2, r1
9000d0c2:	d073      	beq.n	9000d1ac <JPEG_Process+0x69c>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000d0c4:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000d0c6:	e538      	b.n	9000cb3a <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000d0c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d0ca:	4295      	cmp	r5, r2
9000d0cc:	f67f ad41 	bls.w	9000cb52 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000d0d0:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000d0d2:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000d0d4:	0880      	lsrs	r0, r0, #2
9000d0d6:	d020      	beq.n	9000d11a <JPEG_Process+0x60a>
9000d0d8:	4631      	mov	r1, r6
9000d0da:	e000      	b.n	9000d0de <JPEG_Process+0x5ce>
      dataword = hjpeg->Instance->DOR;
9000d0dc:	6823      	ldr	r3, [r4, #0]
9000d0de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000d0e0:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d0e2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d0e4:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000d0e6:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d0e8:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d0ea:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000d0ec:	69e2      	ldr	r2, [r4, #28]
9000d0ee:	442a      	add	r2, r5
9000d0f0:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000d0f4:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d0f6:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000d0f8:	69e2      	ldr	r2, [r4, #28]
9000d0fa:	442a      	add	r2, r5
9000d0fc:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d100:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d104:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d106:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000d108:	69e2      	ldr	r2, [r4, #28]
9000d10a:	442a      	add	r2, r5
9000d10c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d10e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d110:	f103 0304 	add.w	r3, r3, #4
9000d114:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000d116:	d1e1      	bne.n	9000d0dc <JPEG_Process+0x5cc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000d118:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000d11a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d11c:	429d      	cmp	r5, r3
9000d11e:	f000 80f2 	beq.w	9000d306 <JPEG_Process+0x7f6>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000d122:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000d126:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000d128:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000d12c:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000d12e:	d00e      	beq.n	9000d14e <JPEG_Process+0x63e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000d130:	f006 0303 	and.w	r3, r6, #3
9000d134:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d136:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000d138:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000d13a:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000d13c:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000d13e:	fa27 f303 	lsr.w	r3, r7, r3
9000d142:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000d144:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d146:	f103 0301 	add.w	r3, r3, #1
9000d14a:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000d14c:	d1f0      	bne.n	9000d130 <JPEG_Process+0x620>
      nb_bytes = 4UL - nb_bytes;
9000d14e:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d152:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d154:	69e1      	ldr	r1, [r4, #28]
9000d156:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000d158:	eba8 0505 	sub.w	r5, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d15c:	f7f4 fe6e 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000d160:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000d162:	2d03      	cmp	r5, #3
      hjpeg->JpegOutCount = 0;
9000d164:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d166:	f63f adff 	bhi.w	9000cd68 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d16a:	00eb      	lsls	r3, r5, #3
9000d16c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d16e:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000d170:	2d03      	cmp	r5, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d172:	fa27 f303 	lsr.w	r3, r7, r3
9000d176:	548b      	strb	r3, [r1, r2]
      for (index = nb_bytes; index < 4UL; index++)
9000d178:	f105 0301 	add.w	r3, r5, #1
        hjpeg->JpegOutCount++;
9000d17c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d17e:	f102 0201 	add.w	r2, r2, #1
9000d182:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d184:	f43f adf0 	beq.w	9000cd68 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d188:	00db      	lsls	r3, r3, #3
9000d18a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d18c:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000d18e:	2d02      	cmp	r5, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d190:	fa27 f303 	lsr.w	r3, r7, r3
9000d194:	548b      	strb	r3, [r1, r2]
      for (index = nb_bytes; index < 4UL; index++)
9000d196:	f105 0202 	add.w	r2, r5, #2
        hjpeg->JpegOutCount++;
9000d19a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d19c:	f103 0301 	add.w	r3, r3, #1
9000d1a0:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d1a2:	f47f af78 	bne.w	9000d096 <JPEG_Process+0x586>
9000d1a6:	e5df      	b.n	9000cd68 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000d1a8:	1a52      	subs	r2, r2, r1
9000d1aa:	e68f      	b.n	9000cecc <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000d1ac:	6a21      	ldr	r1, [r4, #32]
9000d1ae:	4620      	mov	r0, r4
9000d1b0:	f7f4 fe24 	bl	90001dfc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000d1b4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000d1b6:	2a04      	cmp	r2, #4
9000d1b8:	d902      	bls.n	9000d1c0 <JPEG_Process+0x6b0>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000d1ba:	f022 0203 	bic.w	r2, r2, #3
9000d1be:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000d1c0:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d1c2:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000d1c4:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000d1c6:	e5db      	b.n	9000cd80 <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000d1c8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000d1cc:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000d1ce:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000d1d0:	e4b3      	b.n	9000cb3a <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000d1d2:	2a03      	cmp	r2, #3
9000d1d4:	f240 80a3 	bls.w	9000d31e <JPEG_Process+0x80e>
        for (index = 0; index < nb_words; index++)
9000d1d8:	2900      	cmp	r1, #0
9000d1da:	f43f acae 	beq.w	9000cb3a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d1de:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d1e0:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d1e2:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d1e4:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d1e8:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d1ea:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d1ec:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d1ee:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d1f2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d1f4:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d1f8:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d1fc:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d200:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d202:	6a20      	ldr	r0, [r4, #32]
9000d204:	f100 0004 	add.w	r0, r0, #4
9000d208:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d20a:	f43f ac96 	beq.w	9000cb3a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d20e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d210:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d212:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d216:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d218:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d21a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d21c:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d220:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d222:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d226:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d22a:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d22e:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d230:	6a20      	ldr	r0, [r4, #32]
9000d232:	f100 0004 	add.w	r0, r0, #4
9000d236:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d238:	f43f ac7f 	beq.w	9000cb3a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d23c:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d23e:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d240:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d244:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d246:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d248:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d24a:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d24e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d250:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d254:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d258:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d25c:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d25e:	6a20      	ldr	r0, [r4, #32]
9000d260:	f100 0004 	add.w	r0, r0, #4
9000d264:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d266:	f43f ac68 	beq.w	9000cb3a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d26a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d26c:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d26e:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d272:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d274:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d276:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d278:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d27c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d27e:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d282:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d286:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d28a:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d28c:	6a20      	ldr	r0, [r4, #32]
9000d28e:	f100 0004 	add.w	r0, r0, #4
9000d292:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d294:	f43f ac51 	beq.w	9000cb3a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d298:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d29a:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d29c:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d2a0:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d2a2:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d2a4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d2a6:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d2aa:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d2ac:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d2b0:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d2b4:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d2b8:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d2ba:	6a20      	ldr	r0, [r4, #32]
9000d2bc:	f100 0004 	add.w	r0, r0, #4
9000d2c0:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d2c2:	f43f ac3a 	beq.w	9000cb3a <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000d2c6:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d2c8:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d2ca:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d2ce:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d2d0:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d2d2:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d2d4:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d2d8:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d2da:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000d2de:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d2e2:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d2e6:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000d2e8:	6a20      	ldr	r0, [r4, #32]
9000d2ea:	f100 0004 	add.w	r0, r0, #4
9000d2ee:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d2f0:	f43f adc3 	beq.w	9000ce7a <JPEG_Process+0x36a>
9000d2f4:	e421      	b.n	9000cb3a <JPEG_Process+0x2a>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d2f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d2f8:	4620      	mov	r0, r4
9000d2fa:	69e1      	ldr	r1, [r4, #28]
9000d2fc:	f7f4 fd9e 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d300:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000d302:	6265      	str	r5, [r4, #36]	; 0x24
9000d304:	e425      	b.n	9000cb52 <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d306:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d308:	4620      	mov	r0, r4
9000d30a:	69e1      	ldr	r1, [r4, #28]
9000d30c:	f7f4 fd96 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000d310:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d312:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000d314:	6262      	str	r2, [r4, #36]	; 0x24
9000d316:	e41c      	b.n	9000cb52 <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000d318:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d31a:	69a0      	ldr	r0, [r4, #24]
9000d31c:	e5ae      	b.n	9000ce7c <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d31e:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d320:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000d322:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d324:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000d326:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d32a:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000d32c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d32e:	d010      	beq.n	9000d352 <JPEG_Process+0x842>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d330:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d332:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d334:	5c28      	ldrb	r0, [r5, r0]
9000d336:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000d33a:	6a20      	ldr	r0, [r4, #32]
9000d33c:	f100 0001 	add.w	r0, r0, #1
9000d340:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d342:	d106      	bne.n	9000d352 <JPEG_Process+0x842>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d344:	6a22      	ldr	r2, [r4, #32]
9000d346:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000d348:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d34a:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000d34e:	3201      	adds	r2, #1
9000d350:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000d352:	6419      	str	r1, [r3, #64]	; 0x40
9000d354:	f7ff bbf1 	b.w	9000cb3a <JPEG_Process+0x2a>

9000d358 <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000d358:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000d35c:	3b03      	subs	r3, #3
9000d35e:	2b01      	cmp	r3, #1
9000d360:	d900      	bls.n	9000d364 <HAL_JPEG_IRQHandler+0xc>
9000d362:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000d364:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000d366:	f003 030c 	and.w	r3, r3, #12
9000d36a:	2b08      	cmp	r3, #8
{
9000d36c:	b530      	push	{r4, r5, lr}
9000d36e:	4604      	mov	r4, r0
9000d370:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000d372:	d006      	beq.n	9000d382 <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000d374:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000d376:	f003 030c 	and.w	r3, r3, #12
9000d37a:	2b0c      	cmp	r3, #12
9000d37c:	d006      	beq.n	9000d38c <HAL_JPEG_IRQHandler+0x34>
}
9000d37e:	b003      	add	sp, #12
9000d380:	bd30      	pop	{r4, r5, pc}
9000d382:	b003      	add	sp, #12
9000d384:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000d388:	f7ff bbc2 	b.w	9000cb10 <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d38c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000d38e:	f003 0303 	and.w	r3, r3, #3
9000d392:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000d394:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d396:	d045      	beq.n	9000d424 <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000d398:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d39a:	0692      	lsls	r2, r2, #26
9000d39c:	d5ef      	bpl.n	9000d37e <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000d39e:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000d3a0:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000d3a2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000d3a6:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d3a8:	681a      	ldr	r2, [r3, #0]
9000d3aa:	f022 0201 	bic.w	r2, r2, #1
9000d3ae:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000d3b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000d3b2:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000d3b6:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000d3b8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000d3ba:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000d3be:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000d3c0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000d3c4:	2b02      	cmp	r3, #2
9000d3c6:	d052      	beq.n	9000d46e <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000d3c8:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000d3ca:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000d3ce:	2b02      	cmp	r3, #2
9000d3d0:	d03f      	beq.n	9000d452 <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d3d2:	6803      	ldr	r3, [r0, #0]
9000d3d4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000d3d6:	695b      	ldr	r3, [r3, #20]
9000d3d8:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000d3dc:	1ad3      	subs	r3, r2, r3
9000d3de:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000d3e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d3e2:	429a      	cmp	r2, r3
9000d3e4:	d046      	beq.n	9000d474 <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000d3e6:	6822      	ldr	r2, [r4, #0]
9000d3e8:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000d3ea:	f015 0510 	ands.w	r5, r5, #16
9000d3ee:	d135      	bne.n	9000d45c <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000d3f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d3f2:	2b00      	cmp	r3, #0
9000d3f4:	d149      	bne.n	9000d48a <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d3f6:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000d3f8:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d3fa:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d3fc:	f023 0301 	bic.w	r3, r3, #1
9000d400:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000d402:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d404:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d406:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000d40a:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d40e:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d412:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d414:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d416:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d418:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d41c:	d032      	beq.n	9000d484 <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000d41e:	f7ff f9ab 	bl	9000c778 <HAL_JPEG_EncodeCpltCallback>
9000d422:	e7ac      	b.n	9000d37e <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000d424:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d426:	0651      	lsls	r1, r2, #25
9000d428:	d5b6      	bpl.n	9000d398 <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000d42a:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000d42c:	9101      	str	r1, [sp, #4]
9000d42e:	f7fe ff11 	bl	9000c254 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000d432:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000d434:	9901      	ldr	r1, [sp, #4]
9000d436:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000d438:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000d43a:	f7f4 fc8d 	bl	90001d58 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000d43e:	6823      	ldr	r3, [r4, #0]
9000d440:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000d442:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000d446:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000d448:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000d44a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000d44e:	639a      	str	r2, [r3, #56]	; 0x38
9000d450:	e7a2      	b.n	9000d398 <HAL_JPEG_IRQHandler+0x40>
}
9000d452:	b003      	add	sp, #12
9000d454:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000d458:	f000 bb34 	b.w	9000dac4 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000d45c:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000d45e:	049b      	lsls	r3, r3, #18
9000d460:	d48d      	bmi.n	9000d37e <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000d462:	4620      	mov	r0, r4
}
9000d464:	b003      	add	sp, #12
9000d466:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000d46a:	f7ff b9f3 	b.w	9000c854 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000d46e:	f000 fb29 	bl	9000dac4 <HAL_MDMA_Abort_IT>
9000d472:	e7a9      	b.n	9000d3c8 <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d474:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d476:	4620      	mov	r0, r4
9000d478:	69e1      	ldr	r1, [r4, #28]
9000d47a:	f7f4 fcdf 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000d47e:	2300      	movs	r3, #0
9000d480:	6263      	str	r3, [r4, #36]	; 0x24
9000d482:	e7b0      	b.n	9000d3e6 <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d484:	f7f4 fd24 	bl	90001ed0 <HAL_JPEG_DecodeCpltCallback>
9000d488:	e779      	b.n	9000d37e <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d48a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d48c:	4620      	mov	r0, r4
9000d48e:	69e1      	ldr	r1, [r4, #28]
9000d490:	f7f4 fcd4 	bl	90001e3c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d494:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000d496:	6265      	str	r5, [r4, #36]	; 0x24
9000d498:	e7ad      	b.n	9000d3f6 <HAL_JPEG_IRQHandler+0x9e>
9000d49a:	bf00      	nop

9000d49c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000d49c:	2800      	cmp	r0, #0
9000d49e:	d067      	beq.n	9000d570 <HAL_LTDC_Init+0xd4>
{
9000d4a0:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000d4a2:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000d4a6:	4604      	mov	r4, r0
9000d4a8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000d4ac:	2b00      	cmp	r3, #0
9000d4ae:	d05a      	beq.n	9000d566 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d4b0:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d4b2:	2102      	movs	r1, #2
  tmp = (hltdc->Init.HorizontalSync << 16U);
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000d4b4:	69e5      	ldr	r5, [r4, #28]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d4b6:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d4ba:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d4be:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d4c0:	4302      	orrs	r2, r0
9000d4c2:	68e0      	ldr	r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d4c4:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d4c8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000d4ca:	6920      	ldr	r0, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d4cc:	6199      	str	r1, [r3, #24]
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000d4ce:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d4d0:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000d4d2:	4828      	ldr	r0, [pc, #160]	; (9000d574 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d4d4:	430a      	orrs	r2, r1
9000d4d6:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000d4d8:	689a      	ldr	r2, [r3, #8]
9000d4da:	4002      	ands	r2, r0
9000d4dc:	609a      	str	r2, [r3, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000d4de:	6962      	ldr	r2, [r4, #20]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000d4e0:	6899      	ldr	r1, [r3, #8]
9000d4e2:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000d4e6:	69a2      	ldr	r2, [r4, #24]
9000d4e8:	4311      	orrs	r1, r2
9000d4ea:	6099      	str	r1, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000d4ec:	68d9      	ldr	r1, [r3, #12]
9000d4ee:	4001      	ands	r1, r0
9000d4f0:	60d9      	str	r1, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000d4f2:	68da      	ldr	r2, [r3, #12]
9000d4f4:	6a21      	ldr	r1, [r4, #32]
9000d4f6:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000d4fa:	6a65      	ldr	r5, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000d4fc:	430a      	orrs	r2, r1
9000d4fe:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000d500:	691a      	ldr	r2, [r3, #16]
9000d502:	4002      	ands	r2, r0
9000d504:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000d506:	6919      	ldr	r1, [r3, #16]
9000d508:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000d50a:	ea41 4105 	orr.w	r1, r1, r5, lsl #16

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000d50e:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000d510:	4311      	orrs	r1, r2
9000d512:	6119      	str	r1, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000d514:	6959      	ldr	r1, [r3, #20]
9000d516:	4008      	ands	r0, r1
9000d518:	6158      	str	r0, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000d51a:	695a      	ldr	r2, [r3, #20]
9000d51c:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000d51e:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
9000d522:	430a      	orrs	r2, r1
9000d524:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d526:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000d528:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d52c:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000d530:	f894 c036 	ldrb.w	ip, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d534:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000d536:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
9000d538:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000d53c:	430a      	orrs	r2, r1
9000d53e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000d542:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000d544:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
9000d548:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000d54a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d54c:	f042 0206 	orr.w	r2, r2, #6
9000d550:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000d552:	699a      	ldr	r2, [r3, #24]
9000d554:	f042 0201 	orr.w	r2, r2, #1
9000d558:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000d55a:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000d55c:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000d560:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000d564:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000d566:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000d56a:	f7f7 fd67 	bl	9000503c <HAL_LTDC_MspInit>
9000d56e:	e79f      	b.n	9000d4b0 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000d570:	2001      	movs	r0, #1
}
9000d572:	4770      	bx	lr
9000d574:	f000f800 	.word	0xf000f800

9000d578 <HAL_LTDC_ErrorCallback>:
9000d578:	4770      	bx	lr
9000d57a:	bf00      	nop

9000d57c <HAL_LTDC_ReloadEventCallback>:
9000d57c:	4770      	bx	lr
9000d57e:	bf00      	nop

9000d580 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000d580:	6803      	ldr	r3, [r0, #0]
{
9000d582:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000d584:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000d586:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000d588:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000d58a:	076a      	lsls	r2, r5, #29
9000d58c:	d501      	bpl.n	9000d592 <HAL_LTDC_IRQHandler+0x12>
9000d58e:	0771      	lsls	r1, r6, #29
9000d590:	d41d      	bmi.n	9000d5ce <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000d592:	07aa      	lsls	r2, r5, #30
9000d594:	d501      	bpl.n	9000d59a <HAL_LTDC_IRQHandler+0x1a>
9000d596:	07b3      	lsls	r3, r6, #30
9000d598:	d42d      	bmi.n	9000d5f6 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000d59a:	07e8      	lsls	r0, r5, #31
9000d59c:	d501      	bpl.n	9000d5a2 <HAL_LTDC_IRQHandler+0x22>
9000d59e:	07f1      	lsls	r1, r6, #31
9000d5a0:	d440      	bmi.n	9000d624 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000d5a2:	072a      	lsls	r2, r5, #28
9000d5a4:	d501      	bpl.n	9000d5aa <HAL_LTDC_IRQHandler+0x2a>
9000d5a6:	0733      	lsls	r3, r6, #28
9000d5a8:	d400      	bmi.n	9000d5ac <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000d5aa:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000d5ac:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000d5ae:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000d5b0:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000d5b2:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000d5b4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d5b6:	f022 0208 	bic.w	r2, r2, #8
9000d5ba:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000d5bc:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000d5be:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000d5c0:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d5c4:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000d5c8:	f7ff ffd8 	bl	9000d57c <HAL_LTDC_ReloadEventCallback>
}
9000d5cc:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000d5ce:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d5d0:	f022 0204 	bic.w	r2, r2, #4
9000d5d4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000d5d6:	2204      	movs	r2, #4
9000d5d8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000d5da:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000d5de:	f043 0301 	orr.w	r3, r3, #1
9000d5e2:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000d5e6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d5e8:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d5ec:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000d5f0:	f7ff ffc2 	bl	9000d578 <HAL_LTDC_ErrorCallback>
9000d5f4:	e7cd      	b.n	9000d592 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000d5f6:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000d5f8:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000d5fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d5fc:	f022 0202 	bic.w	r2, r2, #2
9000d600:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000d602:	2202      	movs	r2, #2
9000d604:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d606:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000d608:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000d60c:	f043 0302 	orr.w	r3, r3, #2
9000d610:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000d614:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d616:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d61a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000d61e:	f7ff ffab 	bl	9000d578 <HAL_LTDC_ErrorCallback>
9000d622:	e7ba      	b.n	9000d59a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d624:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000d626:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d628:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d62a:	f022 0201 	bic.w	r2, r2, #1
9000d62e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000d630:	2201      	movs	r2, #1
9000d632:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000d634:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000d636:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d63a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000d63e:	f7f5 fc99 	bl	90002f74 <HAL_LTDC_LineEventCallback>
9000d642:	e7ae      	b.n	9000d5a2 <HAL_LTDC_IRQHandler+0x22>

9000d644 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000d644:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000d648:	2b01      	cmp	r3, #1
9000d64a:	f000 80c6 	beq.w	9000d7da <HAL_LTDC_ConfigLayer+0x196>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d64e:	2302      	movs	r3, #2
{
9000d650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d654:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d658:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d65c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000d660:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d662:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d666:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d668:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d66c:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d66e:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000d672:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d674:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000d678:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d67a:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d67e:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d682:	f8df a164 	ldr.w	sl, [pc, #356]	; 9000d7e8 <HAL_LTDC_ConfigLayer+0x1a4>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d686:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000d68a:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000d68e:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d690:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000d692:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d696:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d698:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d69a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d69e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000d6a0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d6a4:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d6a6:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d6a8:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d6ac:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000d6ae:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d6b0:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d6b4:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000d6b8:	1c51      	adds	r1, r2, #1
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000d6ba:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d6be:	f3c3 430b 	ubfx	r3, r3, #16, #12
9000d6c2:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d6c4:	68e9      	ldr	r1, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d6c6:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000d6ca:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d6ce:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d6d2:	f8dc 0008 	ldr.w	r0, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d6d6:	f3c3 030a 	ubfx	r3, r3, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d6da:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d6de:	4419      	add	r1, r3
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000d6e0:	68ab      	ldr	r3, [r5, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d6e2:	f8cc 0008 	str.w	r0, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000d6e6:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000d6ea:	3301      	adds	r3, #1
9000d6ec:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000d6f0:	4403      	add	r3, r0
9000d6f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000d6f6:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000d6f8:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000d6fc:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000d700:	f023 0307 	bic.w	r3, r3, #7
9000d704:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000d708:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000d70c:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000d710:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000d712:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000d716:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000d71a:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000d71e:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000d722:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000d726:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000d72a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000d72e:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000d732:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000d736:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000d73a:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000d73e:	696b      	ldr	r3, [r5, #20]
9000d740:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d744:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d748:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d74a:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d74e:	6a28      	ldr	r0, [r5, #32]
9000d750:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d752:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d756:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000d75a:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000d75e:	2300      	movs	r3, #0
9000d760:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000d764:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000d766:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000d76a:	bb59      	cbnz	r1, 9000d7c4 <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000d76c:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d76e:	1abf      	subs	r7, r7, r2
9000d770:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000d772:	fb03 f707 	mul.w	r7, r3, r7
9000d776:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000d77a:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d77c:	3707      	adds	r7, #7
9000d77e:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000d782:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000d786:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000d78a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d78e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000d792:	4b14      	ldr	r3, [pc, #80]	; (9000d7e4 <HAL_LTDC_ConfigLayer+0x1a0>)
9000d794:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000d798:	400b      	ands	r3, r1
9000d79a:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000d79e:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000d7a2:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000d7a4:	f859 3006 	ldr.w	r3, [r9, r6]
9000d7a8:	4313      	orrs	r3, r2
9000d7aa:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000d7ae:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000d7b0:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000d7b4:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000d7b6:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000d7ba:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000d7be:	b003      	add	sp, #12
9000d7c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000d7c4:	2901      	cmp	r1, #1
9000d7c6:	d00a      	beq.n	9000d7de <HAL_LTDC_ConfigLayer+0x19a>
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
9000d7c8:	1e8b      	subs	r3, r1, #2
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
9000d7ca:	2b02      	cmp	r3, #2
9000d7cc:	d903      	bls.n	9000d7d6 <HAL_LTDC_ConfigLayer+0x192>
9000d7ce:	2907      	cmp	r1, #7
9000d7d0:	d001      	beq.n	9000d7d6 <HAL_LTDC_ConfigLayer+0x192>
    tmp = 1U;
9000d7d2:	2301      	movs	r3, #1
9000d7d4:	e7cb      	b.n	9000d76e <HAL_LTDC_ConfigLayer+0x12a>
    tmp = 2U;
9000d7d6:	2302      	movs	r3, #2
9000d7d8:	e7c9      	b.n	9000d76e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000d7da:	2002      	movs	r0, #2
}
9000d7dc:	4770      	bx	lr
    tmp = 3U;
9000d7de:	2303      	movs	r3, #3
9000d7e0:	e7c5      	b.n	9000d76e <HAL_LTDC_ConfigLayer+0x12a>
9000d7e2:	bf00      	nop
9000d7e4:	fffff800 	.word	0xfffff800
9000d7e8:	fffff8f8 	.word	0xfffff8f8

9000d7ec <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000d7ec:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000d7f0:	2a01      	cmp	r2, #1
9000d7f2:	d019      	beq.n	9000d828 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d7f4:	6802      	ldr	r2, [r0, #0]
9000d7f6:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d7f8:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000d7fa:	f04f 0c00 	mov.w	ip, #0
{
9000d7fe:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d800:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d804:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000d806:	4c09      	ldr	r4, [pc, #36]	; (9000d82c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d808:	f020 0001 	bic.w	r0, r0, #1
9000d80c:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000d80e:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000d810:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000d812:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000d814:	4301      	orrs	r1, r0
9000d816:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000d818:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000d81c:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000d81e:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000d822:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d826:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000d828:	2002      	movs	r0, #2
}
9000d82a:	4770      	bx	lr
9000d82c:	50001000 	.word	0x50001000

9000d830 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000d830:	b538      	push	{r3, r4, r5, lr}
9000d832:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000d834:	f7fc fbc6 	bl	90009fc4 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000d838:	2c00      	cmp	r4, #0
9000d83a:	d05a      	beq.n	9000d8f2 <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000d83c:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000d83e:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000d840:	2100      	movs	r1, #0
9000d842:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000d844:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000d848:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000d84c:	68da      	ldr	r2, [r3, #12]
9000d84e:	f022 0201 	bic.w	r2, r2, #1
9000d852:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d854:	e005      	b.n	9000d862 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000d856:	f7fc fbb5 	bl	90009fc4 <HAL_GetTick>
9000d85a:	1b43      	subs	r3, r0, r5
9000d85c:	2b05      	cmp	r3, #5
9000d85e:	d841      	bhi.n	9000d8e4 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d860:	6823      	ldr	r3, [r4, #0]
9000d862:	68da      	ldr	r2, [r3, #12]
9000d864:	07d2      	lsls	r2, r2, #31
9000d866:	d4f6      	bmi.n	9000d856 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d868:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000d86c:	69e0      	ldr	r0, [r4, #28]
9000d86e:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d870:	68e1      	ldr	r1, [r4, #12]
9000d872:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d874:	4302      	orrs	r2, r0
9000d876:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d878:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d87a:	4302      	orrs	r2, r0
9000d87c:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000d87e:	4302      	orrs	r2, r0
9000d880:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000d882:	4302      	orrs	r2, r0
9000d884:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000d886:	4302      	orrs	r2, r0
9000d888:	68a0      	ldr	r0, [r4, #8]
9000d88a:	4302      	orrs	r2, r0
9000d88c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000d88e:	3801      	subs	r0, #1
9000d890:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d894:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d896:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d898:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000d89c:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d89e:	d103      	bne.n	9000d8a8 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000d8a0:	691a      	ldr	r2, [r3, #16]
9000d8a2:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000d8a6:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000d8a8:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000d8aa:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000d8ac:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000d8ae:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000d8b0:	db30      	blt.n	9000d914 <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000d8b2:	b292      	uxth	r2, r2
9000d8b4:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000d8b6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000d8b8:	2a00      	cmp	r2, #0
9000d8ba:	db1c      	blt.n	9000d8f6 <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d8bc:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d8be:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d8c2:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000d8c6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d8c8:	d021      	beq.n	9000d90e <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000d8ca:	b2c0      	uxtb	r0, r0
9000d8cc:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000d8ce:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000d8d0:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000d8d2:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000d8d4:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d8d6:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000d8d8:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000d8da:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000d8de:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000d8e2:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000d8e4:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d8e6:	2303      	movs	r3, #3
      return HAL_ERROR;
9000d8e8:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000d8ea:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d8ec:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000d8f0:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000d8f2:	2001      	movs	r0, #1
}
9000d8f4:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000d8f6:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000d8f8:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d8fa:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000d8fe:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000d902:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d904:	6a19      	ldr	r1, [r3, #32]
9000d906:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000d90a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d90c:	d1dd      	bne.n	9000d8ca <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000d90e:	2200      	movs	r2, #0
9000d910:	629a      	str	r2, [r3, #40]	; 0x28
9000d912:	e7dc      	b.n	9000d8ce <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d914:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000d916:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d918:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000d91c:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d91e:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000d920:	621a      	str	r2, [r3, #32]
9000d922:	e7c8      	b.n	9000d8b6 <HAL_MDMA_Init+0x86>

9000d924 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000d924:	b1f8      	cbz	r0, 9000d966 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000d926:	6802      	ldr	r2, [r0, #0]
9000d928:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000d92a:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000d92c:	68d0      	ldr	r0, [r2, #12]
{
9000d92e:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000d930:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000d934:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000d936:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000d938:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000d93a:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000d93c:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000d93e:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000d940:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000d942:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000d944:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000d946:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000d948:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000d94a:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000d94c:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000d94e:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d950:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000d952:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000d956:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000d95a:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000d95e:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000d960:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000d964:	4770      	bx	lr
    return HAL_ERROR;
9000d966:	2001      	movs	r0, #1
}
9000d968:	4770      	bx	lr
9000d96a:	bf00      	nop

9000d96c <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000d96c:	b310      	cbz	r0, 9000d9b4 <HAL_MDMA_ConfigPostRequestMask+0x48>
  __HAL_LOCK(hmdma);
9000d96e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
9000d972:	2b01      	cmp	r3, #1
9000d974:	d021      	beq.n	9000d9ba <HAL_MDMA_ConfigPostRequestMask+0x4e>
{
9000d976:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000d978:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d97c:	f890 c03d 	ldrb.w	ip, [r0, #61]	; 0x3d
9000d980:	45f4      	cmp	ip, lr
9000d982:	fa5f f38c 	uxtb.w	r3, ip
  __HAL_LOCK(hmdma);
9000d986:	f880 e03c 	strb.w	lr, [r0, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d98a:	d005      	beq.n	9000d998 <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000d98c:	4673      	mov	r3, lr
  __HAL_UNLOCK(hmdma);
9000d98e:	2200      	movs	r2, #0
9000d990:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
}
9000d994:	4618      	mov	r0, r3
9000d996:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000d998:	6805      	ldr	r5, [r0, #0]
9000d99a:	692c      	ldr	r4, [r5, #16]
9000d99c:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000d9a0:	d1f5      	bne.n	9000d98e <HAL_MDMA_ConfigPostRequestMask+0x22>
      hmdma->Instance->CMAR = MaskAddress;
9000d9a2:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000d9a4:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d9a6:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000d9a8:	b951      	cbnz	r1, 9000d9c0 <HAL_MDMA_ConfigPostRequestMask+0x54>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d9aa:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000d9ae:	460b      	mov	r3, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d9b0:	612a      	str	r2, [r5, #16]
9000d9b2:	e7ec      	b.n	9000d98e <HAL_MDMA_ConfigPostRequestMask+0x22>
    return HAL_ERROR;
9000d9b4:	2301      	movs	r3, #1
}
9000d9b6:	4618      	mov	r0, r3
9000d9b8:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000d9ba:	2302      	movs	r3, #2
}
9000d9bc:	4618      	mov	r0, r3
9000d9be:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000d9c0:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000d9c4:	4623      	mov	r3, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000d9c6:	612a      	str	r2, [r5, #16]
9000d9c8:	e7e1      	b.n	9000d98e <HAL_MDMA_ConfigPostRequestMask+0x22>
9000d9ca:	bf00      	nop

9000d9cc <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000d9cc:	2800      	cmp	r0, #0
9000d9ce:	d06e      	beq.n	9000daae <HAL_MDMA_Start_IT+0xe2>
9000d9d0:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000d9d2:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000d9d6:	2801      	cmp	r0, #1
9000d9d8:	d071      	beq.n	9000dabe <HAL_MDMA_Start_IT+0xf2>
9000d9da:	2001      	movs	r0, #1
9000d9dc:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d9e0:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000d9e4:	2801      	cmp	r0, #1
9000d9e6:	d004      	beq.n	9000d9f2 <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000d9e8:	2300      	movs	r3, #0
    return HAL_BUSY;
9000d9ea:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000d9ec:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000d9f0:	4770      	bx	lr
{
9000d9f2:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000d9f4:	f3c3 0010 	ubfx	r0, r3, #0, #17
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000d9f8:	2402      	movs	r4, #2
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d9fa:	2300      	movs	r3, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000d9fc:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000d9fe:	f88c 403d 	strb.w	r4, [ip, #61]	; 0x3d
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000da02:	f1a4 1402 	sub.w	r4, r4, #131074	; 0x20002
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000da06:	f8cc 3068 	str.w	r3, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000da0a:	f105 3eff 	add.w	lr, r5, #4294967295
    __HAL_MDMA_DISABLE(hmdma);
9000da0e:	f8dc 3000 	ldr.w	r3, [ip]
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000da12:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
    __HAL_MDMA_DISABLE(hmdma);
9000da16:	68dd      	ldr	r5, [r3, #12]
9000da18:	f025 0501 	bic.w	r5, r5, #1
9000da1c:	60dd      	str	r5, [r3, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000da1e:	695d      	ldr	r5, [r3, #20]
9000da20:	ea04 0405 	and.w	r4, r4, r5
9000da24:	ea44 0400 	orr.w	r4, r4, r0
9000da28:	615c      	str	r4, [r3, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000da2a:	6958      	ldr	r0, [r3, #20]
9000da2c:	f3c0 0013 	ubfx	r0, r0, #0, #20
9000da30:	ea40 500e 	orr.w	r0, r0, lr, lsl #20
9000da34:	6158      	str	r0, [r3, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000da36:	f04f 001f 	mov.w	r0, #31
9000da3a:	6058      	str	r0, [r3, #4]
  hmdma->Instance->CDAR = DstAddress;
9000da3c:	61da      	str	r2, [r3, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000da3e:	6199      	str	r1, [r3, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000da40:	6a99      	ldr	r1, [r3, #40]	; 0x28
9000da42:	bf0c      	ite	eq
9000da44:	f441 3180 	orreq.w	r1, r1, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000da48:	f421 3180 	bicne.w	r1, r1, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000da4c:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000da50:	6299      	str	r1, [r3, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000da52:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    if(hmdma->XferBlockCpltCallback != NULL)
9000da54:	f8dc 104c 	ldr.w	r1, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000da58:	bf0c      	ite	eq
9000da5a:	f442 3200 	orreq.w	r2, r2, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000da5e:	f422 3200 	bicne.w	r2, r2, #131072	; 0x20000
9000da62:	629a      	str	r2, [r3, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000da64:	f8dc 205c 	ldr.w	r2, [ip, #92]	; 0x5c
9000da68:	625a      	str	r2, [r3, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000da6a:	68da      	ldr	r2, [r3, #12]
9000da6c:	f042 0206 	orr.w	r2, r2, #6
9000da70:	60da      	str	r2, [r3, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000da72:	b119      	cbz	r1, 9000da7c <HAL_MDMA_Start_IT+0xb0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000da74:	68da      	ldr	r2, [r3, #12]
9000da76:	f042 0210 	orr.w	r2, r2, #16
9000da7a:	60da      	str	r2, [r3, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000da7c:	f8dc 2050 	ldr.w	r2, [ip, #80]	; 0x50
9000da80:	b11a      	cbz	r2, 9000da8a <HAL_MDMA_Start_IT+0xbe>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000da82:	68da      	ldr	r2, [r3, #12]
9000da84:	f042 0208 	orr.w	r2, r2, #8
9000da88:	60da      	str	r2, [r3, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000da8a:	f8dc 2048 	ldr.w	r2, [ip, #72]	; 0x48
9000da8e:	b11a      	cbz	r2, 9000da98 <HAL_MDMA_Start_IT+0xcc>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000da90:	68da      	ldr	r2, [r3, #12]
9000da92:	f042 0220 	orr.w	r2, r2, #32
9000da96:	60da      	str	r2, [r3, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000da98:	68da      	ldr	r2, [r3, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000da9a:	f8dc 1004 	ldr.w	r1, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000da9e:	f042 0201 	orr.w	r2, r2, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000daa2:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000daa6:	60da      	str	r2, [r3, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000daa8:	d003      	beq.n	9000dab2 <HAL_MDMA_Start_IT+0xe6>
  return HAL_OK;
9000daaa:	2000      	movs	r0, #0
}
9000daac:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000daae:	2001      	movs	r0, #1
9000dab0:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000dab2:	68da      	ldr	r2, [r3, #12]
  return HAL_OK;
9000dab4:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000dab6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000daba:	60da      	str	r2, [r3, #12]
}
9000dabc:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000dabe:	2002      	movs	r0, #2
}
9000dac0:	4770      	bx	lr
9000dac2:	bf00      	nop

9000dac4 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000dac4:	4603      	mov	r3, r0
9000dac6:	b188      	cbz	r0, 9000daec <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000dac8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000dacc:	2a02      	cmp	r2, #2
9000dace:	d003      	beq.n	9000dad8 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000dad0:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000dad2:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000dad4:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000dad6:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000dad8:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000dada:	2104      	movs	r1, #4
  return HAL_OK;
9000dadc:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000dade:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000dae2:	68d3      	ldr	r3, [r2, #12]
9000dae4:	f023 0301 	bic.w	r3, r3, #1
9000dae8:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000daea:	4770      	bx	lr
    return HAL_ERROR;
9000daec:	2001      	movs	r0, #1
}
9000daee:	4770      	bx	lr

9000daf0 <HAL_MDMA_IRQHandler>:
{
9000daf0:	b530      	push	{r4, r5, lr}
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000daf2:	f04f 43a4 	mov.w	r3, #1375731712	; 0x52000000
{
9000daf6:	4604      	mov	r4, r0
9000daf8:	b083      	sub	sp, #12
  __IO uint32_t count = 0;
9000dafa:	2500      	movs	r5, #0
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000dafc:	4a58      	ldr	r2, [pc, #352]	; (9000dc60 <HAL_MDMA_IRQHandler+0x170>)
9000dafe:	2101      	movs	r1, #1
  __IO uint32_t count = 0;
9000db00:	9501      	str	r5, [sp, #4]
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000db02:	6818      	ldr	r0, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000db04:	6823      	ldr	r3, [r4, #0]
9000db06:	441a      	add	r2, r3
9000db08:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000db0c:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000db10:	4202      	tst	r2, r0
9000db12:	f000 80a2 	beq.w	9000dc5a <HAL_MDMA_IRQHandler+0x16a>
  uint32_t timeout = SystemCoreClock / 9600U;
9000db16:	4953      	ldr	r1, [pc, #332]	; (9000dc64 <HAL_MDMA_IRQHandler+0x174>)
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000db18:	681a      	ldr	r2, [r3, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
9000db1a:	680d      	ldr	r5, [r1, #0]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000db1c:	07d1      	lsls	r1, r2, #31
9000db1e:	d529      	bpl.n	9000db74 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000db20:	68da      	ldr	r2, [r3, #12]
9000db22:	0792      	lsls	r2, r2, #30
9000db24:	d526      	bpl.n	9000db74 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000db26:	68da      	ldr	r2, [r3, #12]
9000db28:	f022 0202 	bic.w	r2, r2, #2
9000db2c:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000db2e:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000db30:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000db32:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000db34:	bf54      	ite	pl
9000db36:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000db3a:	f041 0102 	orrmi.w	r1, r1, #2
9000db3e:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000db40:	0591      	lsls	r1, r2, #22
9000db42:	d503      	bpl.n	9000db4c <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000db44:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000db46:	f041 0104 	orr.w	r1, r1, #4
9000db4a:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000db4c:	05d0      	lsls	r0, r2, #23
9000db4e:	d503      	bpl.n	9000db58 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000db50:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000db52:	f041 0108 	orr.w	r1, r1, #8
9000db56:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000db58:	0551      	lsls	r1, r2, #21
9000db5a:	d503      	bpl.n	9000db64 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000db5c:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000db5e:	f041 0110 	orr.w	r1, r1, #16
9000db62:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000db64:	0510      	lsls	r0, r2, #20
9000db66:	d503      	bpl.n	9000db70 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000db68:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000db6a:	f042 0220 	orr.w	r2, r2, #32
9000db6e:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000db70:	2201      	movs	r2, #1
9000db72:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000db74:	681a      	ldr	r2, [r3, #0]
9000db76:	06d1      	lsls	r1, r2, #27
9000db78:	d509      	bpl.n	9000db8e <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000db7a:	68da      	ldr	r2, [r3, #12]
9000db7c:	0692      	lsls	r2, r2, #26
9000db7e:	d506      	bpl.n	9000db8e <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000db80:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000db82:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000db84:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000db86:	b112      	cbz	r2, 9000db8e <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000db88:	4620      	mov	r0, r4
9000db8a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000db8c:	6823      	ldr	r3, [r4, #0]
9000db8e:	681a      	ldr	r2, [r3, #0]
9000db90:	0710      	lsls	r0, r2, #28
9000db92:	d509      	bpl.n	9000dba8 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000db94:	68da      	ldr	r2, [r3, #12]
9000db96:	06d1      	lsls	r1, r2, #27
9000db98:	d506      	bpl.n	9000dba8 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000db9a:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000db9c:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000db9e:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000dba0:	b112      	cbz	r2, 9000dba8 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000dba2:	4620      	mov	r0, r4
9000dba4:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000dba6:	6823      	ldr	r3, [r4, #0]
9000dba8:	681a      	ldr	r2, [r3, #0]
9000dbaa:	0752      	lsls	r2, r2, #29
9000dbac:	d509      	bpl.n	9000dbc2 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000dbae:	68da      	ldr	r2, [r3, #12]
9000dbb0:	0710      	lsls	r0, r2, #28
9000dbb2:	d506      	bpl.n	9000dbc2 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000dbb4:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000dbb6:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000dbb8:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000dbba:	b112      	cbz	r2, 9000dbc2 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000dbbc:	4620      	mov	r0, r4
9000dbbe:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000dbc0:	6823      	ldr	r3, [r4, #0]
9000dbc2:	681a      	ldr	r2, [r3, #0]
9000dbc4:	0791      	lsls	r1, r2, #30
9000dbc6:	d516      	bpl.n	9000dbf6 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000dbc8:	68da      	ldr	r2, [r3, #12]
9000dbca:	0752      	lsls	r2, r2, #29
9000dbcc:	d513      	bpl.n	9000dbf6 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000dbce:	68da      	ldr	r2, [r3, #12]
9000dbd0:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000dbd4:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000dbd6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000dbda:	2a04      	cmp	r2, #4
9000dbdc:	d034      	beq.n	9000dc48 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000dbde:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000dbe0:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000dbe2:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000dbe4:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000dbe6:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000dbe8:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000dbec:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000dbf0:	b10b      	cbz	r3, 9000dbf6 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000dbf2:	4620      	mov	r0, r4
9000dbf4:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000dbf6:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000dbf8:	2b00      	cmp	r3, #0
9000dbfa:	d02e      	beq.n	9000dc5a <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000dbfc:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000dbfe:	2304      	movs	r3, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000dc00:	4a19      	ldr	r2, [pc, #100]	; (9000dc68 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000dc02:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000dc06:	68cb      	ldr	r3, [r1, #12]
  uint32_t timeout = SystemCoreClock / 9600U;
9000dc08:	fba2 0205 	umull	r0, r2, r2, r5
    __HAL_MDMA_DISABLE(hmdma);
9000dc0c:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000dc10:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000dc12:	60cb      	str	r3, [r1, #12]
9000dc14:	e002      	b.n	9000dc1c <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000dc16:	68cb      	ldr	r3, [r1, #12]
9000dc18:	07d8      	lsls	r0, r3, #31
9000dc1a:	d504      	bpl.n	9000dc26 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000dc1c:	9b01      	ldr	r3, [sp, #4]
9000dc1e:	3301      	adds	r3, #1
9000dc20:	4293      	cmp	r3, r2
9000dc22:	9301      	str	r3, [sp, #4]
9000dc24:	d9f7      	bls.n	9000dc16 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000dc26:	2300      	movs	r3, #0
9000dc28:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000dc2c:	68cb      	ldr	r3, [r1, #12]
9000dc2e:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000dc30:	bf4c      	ite	mi
9000dc32:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000dc34:	2301      	movpl	r3, #1
9000dc36:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000dc3a:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000dc3c:	b16b      	cbz	r3, 9000dc5a <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000dc3e:	4620      	mov	r0, r4
}
9000dc40:	b003      	add	sp, #12
9000dc42:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000dc46:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000dc48:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000dc4a:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000dc4c:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000dc4e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000dc52:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000dc56:	2b00      	cmp	r3, #0
9000dc58:	d1f1      	bne.n	9000dc3e <HAL_MDMA_IRQHandler+0x14e>
}
9000dc5a:	b003      	add	sp, #12
9000dc5c:	bd30      	pop	{r4, r5, pc}
9000dc5e:	bf00      	nop
9000dc60:	adffffc0 	.word	0xadffffc0
9000dc64:	24000054 	.word	0x24000054
9000dc68:	1b4e81b5 	.word	0x1b4e81b5

9000dc6c <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000dc6c:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000dc6e:	4c10      	ldr	r4, [pc, #64]	; (9000dcb0 <HAL_PWREx_ConfigSupply+0x44>)
9000dc70:	68e3      	ldr	r3, [r4, #12]
9000dc72:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000dc76:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000dc78:	d105      	bne.n	9000dc86 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000dc7a:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000dc7e:	1a18      	subs	r0, r3, r0
9000dc80:	bf18      	it	ne
9000dc82:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000dc84:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000dc86:	f023 0307 	bic.w	r3, r3, #7
9000dc8a:	4318      	orrs	r0, r3
9000dc8c:	60e0      	str	r0, [r4, #12]
  tickstart = HAL_GetTick ();
9000dc8e:	f7fc f999 	bl	90009fc4 <HAL_GetTick>
9000dc92:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000dc94:	e005      	b.n	9000dca2 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000dc96:	f7fc f995 	bl	90009fc4 <HAL_GetTick>
9000dc9a:	1b40      	subs	r0, r0, r5
9000dc9c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000dca0:	d804      	bhi.n	9000dcac <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000dca2:	6863      	ldr	r3, [r4, #4]
9000dca4:	049b      	lsls	r3, r3, #18
9000dca6:	d5f6      	bpl.n	9000dc96 <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000dca8:	2000      	movs	r0, #0
}
9000dcaa:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000dcac:	2001      	movs	r0, #1
}
9000dcae:	bd38      	pop	{r3, r4, r5, pc}
9000dcb0:	58024800 	.word	0x58024800

9000dcb4 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000dcb4:	4b45      	ldr	r3, [pc, #276]	; (9000ddcc <HAL_RCC_GetSysClockFreq.part.0+0x118>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000dcb6:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000dcb8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000dcba:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000dcbc:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000dcbe:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000dcc2:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000dcc4:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000dcc8:	d038      	beq.n	9000dd3c <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000dcca:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000dcce:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000dcd2:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000dcd6:	fb05 f101 	mul.w	r1, r5, r1
9000dcda:	2a01      	cmp	r2, #1
9000dcdc:	ee07 1a90 	vmov	s15, r1
9000dce0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000dce4:	d002      	beq.n	9000dcec <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000dce6:	2a02      	cmp	r2, #2
9000dce8:	d04e      	beq.n	9000dd88 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000dcea:	b34a      	cbz	r2, 9000dd40 <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dcec:	ee07 0a90 	vmov	s15, r0
9000dcf0:	eddf 6a37 	vldr	s13, [pc, #220]	; 9000ddd0 <HAL_RCC_GetSysClockFreq.part.0+0x11c>
9000dcf4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dcf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000dcfa:	ee86 6aa7 	vdiv.f32	s12, s13, s15
9000dcfe:	ed9f 5a35 	vldr	s10, [pc, #212]	; 9000ddd4 <HAL_RCC_GetSysClockFreq.part.0+0x120>
9000dd02:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000dd06:	ee06 3a90 	vmov	s13, r3
9000dd0a:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000dd0e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000dd12:	eee7 6a05 	vfma.f32	s13, s14, s10
9000dd16:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000dd1a:	ee66 6a26 	vmul.f32	s13, s12, s13
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000dd1e:	4b2b      	ldr	r3, [pc, #172]	; (9000ddcc <HAL_RCC_GetSysClockFreq.part.0+0x118>)
9000dd20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000dd22:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000dd26:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000dd28:	ee07 3a90 	vmov	s15, r3
9000dd2c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000dd30:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000dd34:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000dd38:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000dd3c:	bc30      	pop	{r4, r5}
9000dd3e:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000dd40:	681a      	ldr	r2, [r3, #0]
9000dd42:	0692      	lsls	r2, r2, #26
9000dd44:	d527      	bpl.n	9000dd96 <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dd46:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dd48:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dd4c:	4a22      	ldr	r2, [pc, #136]	; (9000ddd8 <HAL_RCC_GetSysClockFreq.part.0+0x124>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dd4e:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000dd52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dd54:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dd58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dd5c:	ed9f 5a1d 	vldr	s10, [pc, #116]	; 9000ddd4 <HAL_RCC_GetSysClockFreq.part.0+0x120>
9000dd60:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dd64:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dd66:	ee06 3a90 	vmov	s13, r3
9000dd6a:	ee06 2a10 	vmov	s12, r2
9000dd6e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000dd72:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000dd76:	eee7 6a05 	vfma.f32	s13, s14, s10
9000dd7a:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000dd7e:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000dd82:	ee66 6a87 	vmul.f32	s13, s13, s14
9000dd86:	e7ca      	b.n	9000dd1e <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dd88:	ee07 0a90 	vmov	s15, r0
9000dd8c:	eddf 6a13 	vldr	s13, [pc, #76]	; 9000dddc <HAL_RCC_GetSysClockFreq.part.0+0x128>
9000dd90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dd94:	e7b0      	b.n	9000dcf8 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dd96:	ee07 0a90 	vmov	s15, r0
9000dd9a:	ed9f 5a11 	vldr	s10, [pc, #68]	; 9000dde0 <HAL_RCC_GetSysClockFreq.part.0+0x12c>
9000dd9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000dda0:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000dda4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dda8:	eddf 5a0a 	vldr	s11, [pc, #40]	; 9000ddd4 <HAL_RCC_GetSysClockFreq.part.0+0x120>
9000ddac:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ddb0:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000ddb4:	ee07 3a90 	vmov	s15, r3
9000ddb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ddbc:	eee7 7a25 	vfma.f32	s15, s14, s11
9000ddc0:	ee77 7a86 	vadd.f32	s15, s15, s12
9000ddc4:	ee66 6aa7 	vmul.f32	s13, s13, s15
9000ddc8:	e7a9      	b.n	9000dd1e <HAL_RCC_GetSysClockFreq.part.0+0x6a>
9000ddca:	bf00      	nop
9000ddcc:	58024400 	.word	0x58024400
9000ddd0:	4a742400 	.word	0x4a742400
9000ddd4:	39000000 	.word	0x39000000
9000ddd8:	03d09000 	.word	0x03d09000
9000dddc:	4bbebc20 	.word	0x4bbebc20
9000dde0:	4c742400 	.word	0x4c742400

9000dde4 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000dde4:	2800      	cmp	r0, #0
9000dde6:	f000 81e8 	beq.w	9000e1ba <HAL_RCC_OscConfig+0x3d6>
{
9000ddea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000ddec:	6803      	ldr	r3, [r0, #0]
9000ddee:	4604      	mov	r4, r0
9000ddf0:	07d9      	lsls	r1, r3, #31
9000ddf2:	d52e      	bpl.n	9000de52 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ddf4:	49a4      	ldr	r1, [pc, #656]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000ddf6:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000ddf8:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ddfa:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000ddfe:	2a10      	cmp	r2, #16
9000de00:	f000 8107 	beq.w	9000e012 <HAL_RCC_OscConfig+0x22e>
9000de04:	2a18      	cmp	r2, #24
9000de06:	f000 80ff 	beq.w	9000e008 <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000de0a:	6863      	ldr	r3, [r4, #4]
9000de0c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000de10:	f000 812a 	beq.w	9000e068 <HAL_RCC_OscConfig+0x284>
9000de14:	2b00      	cmp	r3, #0
9000de16:	f000 8168 	beq.w	9000e0ea <HAL_RCC_OscConfig+0x306>
9000de1a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000de1e:	4b9a      	ldr	r3, [pc, #616]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000de20:	681a      	ldr	r2, [r3, #0]
9000de22:	f000 8289 	beq.w	9000e338 <HAL_RCC_OscConfig+0x554>
9000de26:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000de2a:	601a      	str	r2, [r3, #0]
9000de2c:	681a      	ldr	r2, [r3, #0]
9000de2e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000de32:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000de34:	f7fc f8c6 	bl	90009fc4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000de38:	4e93      	ldr	r6, [pc, #588]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000de3a:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000de3c:	e005      	b.n	9000de4a <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000de3e:	f7fc f8c1 	bl	90009fc4 <HAL_GetTick>
9000de42:	1b40      	subs	r0, r0, r5
9000de44:	2864      	cmp	r0, #100	; 0x64
9000de46:	f200 814e 	bhi.w	9000e0e6 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000de4a:	6833      	ldr	r3, [r6, #0]
9000de4c:	039b      	lsls	r3, r3, #14
9000de4e:	d5f6      	bpl.n	9000de3e <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000de50:	6823      	ldr	r3, [r4, #0]
9000de52:	079d      	lsls	r5, r3, #30
9000de54:	f100 808a 	bmi.w	9000df6c <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000de58:	06d9      	lsls	r1, r3, #27
9000de5a:	d533      	bpl.n	9000dec4 <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000de5c:	4a8a      	ldr	r2, [pc, #552]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000de5e:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000de60:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000de62:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000de66:	2b08      	cmp	r3, #8
9000de68:	f000 80e3 	beq.w	9000e032 <HAL_RCC_OscConfig+0x24e>
9000de6c:	2b18      	cmp	r3, #24
9000de6e:	f000 80db 	beq.w	9000e028 <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000de72:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000de74:	4d84      	ldr	r5, [pc, #528]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000de76:	2b00      	cmp	r3, #0
9000de78:	f000 816f 	beq.w	9000e15a <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000de7c:	682b      	ldr	r3, [r5, #0]
9000de7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000de82:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000de84:	f7fc f89e 	bl	90009fc4 <HAL_GetTick>
9000de88:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000de8a:	e005      	b.n	9000de98 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000de8c:	f7fc f89a 	bl	90009fc4 <HAL_GetTick>
9000de90:	1b80      	subs	r0, r0, r6
9000de92:	2802      	cmp	r0, #2
9000de94:	f200 8127 	bhi.w	9000e0e6 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000de98:	682b      	ldr	r3, [r5, #0]
9000de9a:	05db      	lsls	r3, r3, #23
9000de9c:	d5f6      	bpl.n	9000de8c <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000de9e:	f7fc f897 	bl	90009fd0 <HAL_GetREVID>
9000dea2:	f241 0303 	movw	r3, #4099	; 0x1003
9000dea6:	4298      	cmp	r0, r3
9000dea8:	f200 826d 	bhi.w	9000e386 <HAL_RCC_OscConfig+0x5a2>
9000deac:	6a22      	ldr	r2, [r4, #32]
9000deae:	686b      	ldr	r3, [r5, #4]
9000deb0:	2a20      	cmp	r2, #32
9000deb2:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000deb6:	bf0c      	ite	eq
9000deb8:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000debc:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000dec0:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000dec2:	6823      	ldr	r3, [r4, #0]
9000dec4:	071d      	lsls	r5, r3, #28
9000dec6:	d516      	bpl.n	9000def6 <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000dec8:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000deca:	4d6f      	ldr	r5, [pc, #444]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000decc:	2b00      	cmp	r3, #0
9000dece:	f000 8122 	beq.w	9000e116 <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000ded2:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000ded4:	f043 0301 	orr.w	r3, r3, #1
9000ded8:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000deda:	f7fc f873 	bl	90009fc4 <HAL_GetTick>
9000dede:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000dee0:	e005      	b.n	9000deee <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000dee2:	f7fc f86f 	bl	90009fc4 <HAL_GetTick>
9000dee6:	1b80      	subs	r0, r0, r6
9000dee8:	2802      	cmp	r0, #2
9000deea:	f200 80fc 	bhi.w	9000e0e6 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000deee:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000def0:	0798      	lsls	r0, r3, #30
9000def2:	d5f6      	bpl.n	9000dee2 <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000def4:	6823      	ldr	r3, [r4, #0]
9000def6:	069a      	lsls	r2, r3, #26
9000def8:	d516      	bpl.n	9000df28 <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000defa:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000defc:	4d62      	ldr	r5, [pc, #392]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000defe:	2b00      	cmp	r3, #0
9000df00:	f000 811a 	beq.w	9000e138 <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000df04:	682b      	ldr	r3, [r5, #0]
9000df06:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000df0a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000df0c:	f7fc f85a 	bl	90009fc4 <HAL_GetTick>
9000df10:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000df12:	e005      	b.n	9000df20 <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000df14:	f7fc f856 	bl	90009fc4 <HAL_GetTick>
9000df18:	1b80      	subs	r0, r0, r6
9000df1a:	2802      	cmp	r0, #2
9000df1c:	f200 80e3 	bhi.w	9000e0e6 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000df20:	682b      	ldr	r3, [r5, #0]
9000df22:	049f      	lsls	r7, r3, #18
9000df24:	d5f6      	bpl.n	9000df14 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000df26:	6823      	ldr	r3, [r4, #0]
9000df28:	0759      	lsls	r1, r3, #29
9000df2a:	f100 80a3 	bmi.w	9000e074 <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000df2e:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000df30:	b1d0      	cbz	r0, 9000df68 <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000df32:	4d55      	ldr	r5, [pc, #340]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000df34:	692b      	ldr	r3, [r5, #16]
9000df36:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000df3a:	2b18      	cmp	r3, #24
9000df3c:	f000 81ae 	beq.w	9000e29c <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000df40:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000df42:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000df44:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000df48:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000df4a:	f000 8142 	beq.w	9000e1d2 <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000df4e:	f7fc f839 	bl	90009fc4 <HAL_GetTick>
9000df52:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000df54:	e005      	b.n	9000df62 <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000df56:	f7fc f835 	bl	90009fc4 <HAL_GetTick>
9000df5a:	1b00      	subs	r0, r0, r4
9000df5c:	2802      	cmp	r0, #2
9000df5e:	f200 80c2 	bhi.w	9000e0e6 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000df62:	682b      	ldr	r3, [r5, #0]
9000df64:	019b      	lsls	r3, r3, #6
9000df66:	d4f6      	bmi.n	9000df56 <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000df68:	2000      	movs	r0, #0
}
9000df6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000df6c:	4a46      	ldr	r2, [pc, #280]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000df6e:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000df70:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000df72:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000df76:	d12d      	bne.n	9000dfd4 <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000df78:	4b43      	ldr	r3, [pc, #268]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000df7a:	68e2      	ldr	r2, [r4, #12]
9000df7c:	681b      	ldr	r3, [r3, #0]
9000df7e:	0759      	lsls	r1, r3, #29
9000df80:	d501      	bpl.n	9000df86 <HAL_RCC_OscConfig+0x1a2>
9000df82:	2a00      	cmp	r2, #0
9000df84:	d04e      	beq.n	9000e024 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000df86:	4d40      	ldr	r5, [pc, #256]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000df88:	682b      	ldr	r3, [r5, #0]
9000df8a:	f023 0319 	bic.w	r3, r3, #25
9000df8e:	4313      	orrs	r3, r2
9000df90:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000df92:	f7fc f817 	bl	90009fc4 <HAL_GetTick>
9000df96:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000df98:	e005      	b.n	9000dfa6 <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000df9a:	f7fc f813 	bl	90009fc4 <HAL_GetTick>
9000df9e:	1b80      	subs	r0, r0, r6
9000dfa0:	2802      	cmp	r0, #2
9000dfa2:	f200 80a0 	bhi.w	9000e0e6 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000dfa6:	682b      	ldr	r3, [r5, #0]
9000dfa8:	075b      	lsls	r3, r3, #29
9000dfaa:	d5f6      	bpl.n	9000df9a <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000dfac:	f7fc f810 	bl	90009fd0 <HAL_GetREVID>
9000dfb0:	f241 0303 	movw	r3, #4099	; 0x1003
9000dfb4:	4298      	cmp	r0, r3
9000dfb6:	f200 80f7 	bhi.w	9000e1a8 <HAL_RCC_OscConfig+0x3c4>
9000dfba:	6922      	ldr	r2, [r4, #16]
9000dfbc:	686b      	ldr	r3, [r5, #4]
9000dfbe:	2a40      	cmp	r2, #64	; 0x40
9000dfc0:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000dfc4:	bf0c      	ite	eq
9000dfc6:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000dfca:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000dfce:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000dfd0:	6823      	ldr	r3, [r4, #0]
9000dfd2:	e741      	b.n	9000de58 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000dfd4:	2b18      	cmp	r3, #24
9000dfd6:	f000 80e3 	beq.w	9000e1a0 <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000dfda:	4d2b      	ldr	r5, [pc, #172]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000dfdc:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000dfde:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000dfe0:	2a00      	cmp	r2, #0
9000dfe2:	f000 80cc 	beq.w	9000e17e <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000dfe6:	f023 0319 	bic.w	r3, r3, #25
9000dfea:	4313      	orrs	r3, r2
9000dfec:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dfee:	f7fb ffe9 	bl	90009fc4 <HAL_GetTick>
9000dff2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000dff4:	e004      	b.n	9000e000 <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000dff6:	f7fb ffe5 	bl	90009fc4 <HAL_GetTick>
9000dffa:	1b80      	subs	r0, r0, r6
9000dffc:	2802      	cmp	r0, #2
9000dffe:	d872      	bhi.n	9000e0e6 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000e000:	682b      	ldr	r3, [r5, #0]
9000e002:	075f      	lsls	r7, r3, #29
9000e004:	d5f7      	bpl.n	9000dff6 <HAL_RCC_OscConfig+0x212>
9000e006:	e7d1      	b.n	9000dfac <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000e008:	f001 0103 	and.w	r1, r1, #3
9000e00c:	2902      	cmp	r1, #2
9000e00e:	f47f aefc 	bne.w	9000de0a <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000e012:	4a1d      	ldr	r2, [pc, #116]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000e014:	6812      	ldr	r2, [r2, #0]
9000e016:	0392      	lsls	r2, r2, #14
9000e018:	f57f af1b 	bpl.w	9000de52 <HAL_RCC_OscConfig+0x6e>
9000e01c:	6862      	ldr	r2, [r4, #4]
9000e01e:	2a00      	cmp	r2, #0
9000e020:	f47f af17 	bne.w	9000de52 <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000e024:	2001      	movs	r0, #1
}
9000e026:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000e028:	f002 0203 	and.w	r2, r2, #3
9000e02c:	2a01      	cmp	r2, #1
9000e02e:	f47f af20 	bne.w	9000de72 <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000e032:	4b15      	ldr	r3, [pc, #84]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000e034:	681b      	ldr	r3, [r3, #0]
9000e036:	05da      	lsls	r2, r3, #23
9000e038:	d502      	bpl.n	9000e040 <HAL_RCC_OscConfig+0x25c>
9000e03a:	69e3      	ldr	r3, [r4, #28]
9000e03c:	2b80      	cmp	r3, #128	; 0x80
9000e03e:	d1f1      	bne.n	9000e024 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000e040:	f7fb ffc6 	bl	90009fd0 <HAL_GetREVID>
9000e044:	f241 0303 	movw	r3, #4099	; 0x1003
9000e048:	4298      	cmp	r0, r3
9000e04a:	f200 80b8 	bhi.w	9000e1be <HAL_RCC_OscConfig+0x3da>
9000e04e:	6a22      	ldr	r2, [r4, #32]
9000e050:	2a20      	cmp	r2, #32
9000e052:	f000 81a7 	beq.w	9000e3a4 <HAL_RCC_OscConfig+0x5c0>
9000e056:	490c      	ldr	r1, [pc, #48]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000e058:	684b      	ldr	r3, [r1, #4]
9000e05a:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000e05e:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000e062:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e064:	6823      	ldr	r3, [r4, #0]
9000e066:	e72d      	b.n	9000dec4 <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000e068:	4a07      	ldr	r2, [pc, #28]	; (9000e088 <HAL_RCC_OscConfig+0x2a4>)
9000e06a:	6813      	ldr	r3, [r2, #0]
9000e06c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000e070:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000e072:	e6df      	b.n	9000de34 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000e074:	4d05      	ldr	r5, [pc, #20]	; (9000e08c <HAL_RCC_OscConfig+0x2a8>)
9000e076:	682b      	ldr	r3, [r5, #0]
9000e078:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000e07c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000e07e:	f7fb ffa1 	bl	90009fc4 <HAL_GetTick>
9000e082:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000e084:	e009      	b.n	9000e09a <HAL_RCC_OscConfig+0x2b6>
9000e086:	bf00      	nop
9000e088:	58024400 	.word	0x58024400
9000e08c:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000e090:	f7fb ff98 	bl	90009fc4 <HAL_GetTick>
9000e094:	1b80      	subs	r0, r0, r6
9000e096:	2864      	cmp	r0, #100	; 0x64
9000e098:	d825      	bhi.n	9000e0e6 <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000e09a:	682b      	ldr	r3, [r5, #0]
9000e09c:	05da      	lsls	r2, r3, #23
9000e09e:	d5f7      	bpl.n	9000e090 <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e0a0:	68a3      	ldr	r3, [r4, #8]
9000e0a2:	2b01      	cmp	r3, #1
9000e0a4:	f000 8178 	beq.w	9000e398 <HAL_RCC_OscConfig+0x5b4>
9000e0a8:	2b00      	cmp	r3, #0
9000e0aa:	f000 8153 	beq.w	9000e354 <HAL_RCC_OscConfig+0x570>
9000e0ae:	2b05      	cmp	r3, #5
9000e0b0:	4ba5      	ldr	r3, [pc, #660]	; (9000e348 <HAL_RCC_OscConfig+0x564>)
9000e0b2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000e0b4:	f000 817f 	beq.w	9000e3b6 <HAL_RCC_OscConfig+0x5d2>
9000e0b8:	f022 0201 	bic.w	r2, r2, #1
9000e0bc:	671a      	str	r2, [r3, #112]	; 0x70
9000e0be:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000e0c0:	f022 0204 	bic.w	r2, r2, #4
9000e0c4:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000e0c6:	f7fb ff7d 	bl	90009fc4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e0ca:	4e9f      	ldr	r6, [pc, #636]	; (9000e348 <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e0cc:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000e0d0:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e0d2:	e004      	b.n	9000e0de <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e0d4:	f7fb ff76 	bl	90009fc4 <HAL_GetTick>
9000e0d8:	1b40      	subs	r0, r0, r5
9000e0da:	42b8      	cmp	r0, r7
9000e0dc:	d803      	bhi.n	9000e0e6 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e0de:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000e0e0:	079b      	lsls	r3, r3, #30
9000e0e2:	d5f7      	bpl.n	9000e0d4 <HAL_RCC_OscConfig+0x2f0>
9000e0e4:	e723      	b.n	9000df2e <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000e0e6:	2003      	movs	r0, #3
}
9000e0e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000e0ea:	4d97      	ldr	r5, [pc, #604]	; (9000e348 <HAL_RCC_OscConfig+0x564>)
9000e0ec:	682b      	ldr	r3, [r5, #0]
9000e0ee:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000e0f2:	602b      	str	r3, [r5, #0]
9000e0f4:	682b      	ldr	r3, [r5, #0]
9000e0f6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000e0fa:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e0fc:	f7fb ff62 	bl	90009fc4 <HAL_GetTick>
9000e100:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000e102:	e004      	b.n	9000e10e <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000e104:	f7fb ff5e 	bl	90009fc4 <HAL_GetTick>
9000e108:	1b80      	subs	r0, r0, r6
9000e10a:	2864      	cmp	r0, #100	; 0x64
9000e10c:	d8eb      	bhi.n	9000e0e6 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000e10e:	682b      	ldr	r3, [r5, #0]
9000e110:	039f      	lsls	r7, r3, #14
9000e112:	d4f7      	bmi.n	9000e104 <HAL_RCC_OscConfig+0x320>
9000e114:	e69c      	b.n	9000de50 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000e116:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000e118:	f023 0301 	bic.w	r3, r3, #1
9000e11c:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000e11e:	f7fb ff51 	bl	90009fc4 <HAL_GetTick>
9000e122:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000e124:	e004      	b.n	9000e130 <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000e126:	f7fb ff4d 	bl	90009fc4 <HAL_GetTick>
9000e12a:	1b80      	subs	r0, r0, r6
9000e12c:	2802      	cmp	r0, #2
9000e12e:	d8da      	bhi.n	9000e0e6 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000e130:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000e132:	0799      	lsls	r1, r3, #30
9000e134:	d4f7      	bmi.n	9000e126 <HAL_RCC_OscConfig+0x342>
9000e136:	e6dd      	b.n	9000def4 <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000e138:	682b      	ldr	r3, [r5, #0]
9000e13a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000e13e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000e140:	f7fb ff40 	bl	90009fc4 <HAL_GetTick>
9000e144:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000e146:	e004      	b.n	9000e152 <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000e148:	f7fb ff3c 	bl	90009fc4 <HAL_GetTick>
9000e14c:	1b80      	subs	r0, r0, r6
9000e14e:	2802      	cmp	r0, #2
9000e150:	d8c9      	bhi.n	9000e0e6 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000e152:	682b      	ldr	r3, [r5, #0]
9000e154:	0498      	lsls	r0, r3, #18
9000e156:	d4f7      	bmi.n	9000e148 <HAL_RCC_OscConfig+0x364>
9000e158:	e6e5      	b.n	9000df26 <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000e15a:	682b      	ldr	r3, [r5, #0]
9000e15c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000e160:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e162:	f7fb ff2f 	bl	90009fc4 <HAL_GetTick>
9000e166:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000e168:	e004      	b.n	9000e174 <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000e16a:	f7fb ff2b 	bl	90009fc4 <HAL_GetTick>
9000e16e:	1b80      	subs	r0, r0, r6
9000e170:	2802      	cmp	r0, #2
9000e172:	d8b8      	bhi.n	9000e0e6 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000e174:	682b      	ldr	r3, [r5, #0]
9000e176:	05df      	lsls	r7, r3, #23
9000e178:	d4f7      	bmi.n	9000e16a <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e17a:	6823      	ldr	r3, [r4, #0]
9000e17c:	e6a2      	b.n	9000dec4 <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000e17e:	f023 0301 	bic.w	r3, r3, #1
9000e182:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e184:	f7fb ff1e 	bl	90009fc4 <HAL_GetTick>
9000e188:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000e18a:	e004      	b.n	9000e196 <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000e18c:	f7fb ff1a 	bl	90009fc4 <HAL_GetTick>
9000e190:	1b80      	subs	r0, r0, r6
9000e192:	2802      	cmp	r0, #2
9000e194:	d8a7      	bhi.n	9000e0e6 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000e196:	682b      	ldr	r3, [r5, #0]
9000e198:	0758      	lsls	r0, r3, #29
9000e19a:	d4f7      	bmi.n	9000e18c <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000e19c:	6823      	ldr	r3, [r4, #0]
9000e19e:	e65b      	b.n	9000de58 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000e1a0:	0790      	lsls	r0, r2, #30
9000e1a2:	f47f af1a 	bne.w	9000dfda <HAL_RCC_OscConfig+0x1f6>
9000e1a6:	e6e7      	b.n	9000df78 <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000e1a8:	686b      	ldr	r3, [r5, #4]
9000e1aa:	6922      	ldr	r2, [r4, #16]
9000e1ac:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000e1b0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000e1b4:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000e1b6:	6823      	ldr	r3, [r4, #0]
9000e1b8:	e64e      	b.n	9000de58 <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000e1ba:	2001      	movs	r0, #1
}
9000e1bc:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000e1be:	4a62      	ldr	r2, [pc, #392]	; (9000e348 <HAL_RCC_OscConfig+0x564>)
9000e1c0:	6a21      	ldr	r1, [r4, #32]
9000e1c2:	68d3      	ldr	r3, [r2, #12]
9000e1c4:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000e1c8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000e1cc:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e1ce:	6823      	ldr	r3, [r4, #0]
9000e1d0:	e678      	b.n	9000dec4 <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000e1d2:	f7fb fef7 	bl	90009fc4 <HAL_GetTick>
9000e1d6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000e1d8:	e004      	b.n	9000e1e4 <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000e1da:	f7fb fef3 	bl	90009fc4 <HAL_GetTick>
9000e1de:	1b80      	subs	r0, r0, r6
9000e1e0:	2802      	cmp	r0, #2
9000e1e2:	d880      	bhi.n	9000e0e6 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000e1e4:	682b      	ldr	r3, [r5, #0]
9000e1e6:	0199      	lsls	r1, r3, #6
9000e1e8:	d4f7      	bmi.n	9000e1da <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000e1ea:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000e1ec:	4b57      	ldr	r3, [pc, #348]	; (9000e34c <HAL_RCC_OscConfig+0x568>)
9000e1ee:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000e1f0:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000e1f2:	4957      	ldr	r1, [pc, #348]	; (9000e350 <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000e1f4:	4e54      	ldr	r6, [pc, #336]	; (9000e348 <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000e1f6:	4313      	orrs	r3, r2
9000e1f8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e1fa:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000e1fe:	62ab      	str	r3, [r5, #40]	; 0x28
9000e200:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000e204:	3b01      	subs	r3, #1
9000e206:	3a01      	subs	r2, #1
9000e208:	025b      	lsls	r3, r3, #9
9000e20a:	0412      	lsls	r2, r2, #16
9000e20c:	b29b      	uxth	r3, r3
9000e20e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000e212:	4313      	orrs	r3, r2
9000e214:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000e216:	3a01      	subs	r2, #1
9000e218:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000e21c:	4313      	orrs	r3, r2
9000e21e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000e220:	3a01      	subs	r2, #1
9000e222:	0612      	lsls	r2, r2, #24
9000e224:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000e228:	4313      	orrs	r3, r2
9000e22a:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000e22c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e22e:	f023 0301 	bic.w	r3, r3, #1
9000e232:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000e234:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000e236:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000e238:	4011      	ands	r1, r2
9000e23a:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000e23e:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000e240:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e242:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000e244:	f023 030c 	bic.w	r3, r3, #12
9000e248:	4313      	orrs	r3, r2
9000e24a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000e24c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e24e:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000e250:	f023 0302 	bic.w	r3, r3, #2
9000e254:	4313      	orrs	r3, r2
9000e256:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000e258:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e25a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000e25e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e260:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e262:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000e266:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000e268:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e26a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000e26e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000e270:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e272:	f043 0301 	orr.w	r3, r3, #1
9000e276:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000e278:	682b      	ldr	r3, [r5, #0]
9000e27a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000e27e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e280:	f7fb fea0 	bl	90009fc4 <HAL_GetTick>
9000e284:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000e286:	e005      	b.n	9000e294 <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000e288:	f7fb fe9c 	bl	90009fc4 <HAL_GetTick>
9000e28c:	1b00      	subs	r0, r0, r4
9000e28e:	2802      	cmp	r0, #2
9000e290:	f63f af29 	bhi.w	9000e0e6 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000e294:	6833      	ldr	r3, [r6, #0]
9000e296:	019a      	lsls	r2, r3, #6
9000e298:	d5f6      	bpl.n	9000e288 <HAL_RCC_OscConfig+0x4a4>
9000e29a:	e665      	b.n	9000df68 <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000e29c:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000e29e:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000e2a0:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000e2a2:	f43f ae62 	beq.w	9000df6a <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000e2a6:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000e2aa:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000e2ac:	428b      	cmp	r3, r1
9000e2ae:	f47f aeb9 	bne.w	9000e024 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000e2b2:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000e2b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e2b8:	429a      	cmp	r2, r3
9000e2ba:	f47f aeb3 	bne.w	9000e024 <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000e2be:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000e2c0:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000e2c4:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000e2c6:	429a      	cmp	r2, r3
9000e2c8:	f47f aeac 	bne.w	9000e024 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000e2cc:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000e2ce:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000e2d2:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000e2d4:	429a      	cmp	r2, r3
9000e2d6:	f47f aea5 	bne.w	9000e024 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000e2da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e2dc:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000e2e0:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000e2e2:	429a      	cmp	r2, r3
9000e2e4:	f47f ae9e 	bne.w	9000e024 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000e2e8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000e2ea:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000e2ee:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000e2f0:	429e      	cmp	r6, r3
9000e2f2:	f47f ae97 	bne.w	9000e024 <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000e2f6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000e2f8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000e2fa:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000e2fe:	429a      	cmp	r2, r3
9000e300:	f43f ae32 	beq.w	9000df68 <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000e304:	4a10      	ldr	r2, [pc, #64]	; (9000e348 <HAL_RCC_OscConfig+0x564>)
9000e306:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000e308:	f023 0301 	bic.w	r3, r3, #1
9000e30c:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000e30e:	f7fb fe59 	bl	90009fc4 <HAL_GetTick>
9000e312:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000e314:	f7fb fe56 	bl	90009fc4 <HAL_GetTick>
9000e318:	42a8      	cmp	r0, r5
9000e31a:	d0fb      	beq.n	9000e314 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000e31c:	4a0a      	ldr	r2, [pc, #40]	; (9000e348 <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000e31e:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000e320:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000e322:	4b0b      	ldr	r3, [pc, #44]	; (9000e350 <HAL_RCC_OscConfig+0x56c>)
9000e324:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000e326:	4023      	ands	r3, r4
9000e328:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000e32c:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000e32e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000e330:	f043 0301 	orr.w	r3, r3, #1
9000e334:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000e336:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000e338:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000e33c:	601a      	str	r2, [r3, #0]
9000e33e:	681a      	ldr	r2, [r3, #0]
9000e340:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000e344:	601a      	str	r2, [r3, #0]
9000e346:	e575      	b.n	9000de34 <HAL_RCC_OscConfig+0x50>
9000e348:	58024400 	.word	0x58024400
9000e34c:	fffffc0c 	.word	0xfffffc0c
9000e350:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e354:	4d1c      	ldr	r5, [pc, #112]	; (9000e3c8 <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e356:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e35a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000e35c:	f023 0301 	bic.w	r3, r3, #1
9000e360:	672b      	str	r3, [r5, #112]	; 0x70
9000e362:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000e364:	f023 0304 	bic.w	r3, r3, #4
9000e368:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000e36a:	f7fb fe2b 	bl	90009fc4 <HAL_GetTick>
9000e36e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000e370:	e005      	b.n	9000e37e <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e372:	f7fb fe27 	bl	90009fc4 <HAL_GetTick>
9000e376:	1b80      	subs	r0, r0, r6
9000e378:	42b8      	cmp	r0, r7
9000e37a:	f63f aeb4 	bhi.w	9000e0e6 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000e37e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000e380:	0798      	lsls	r0, r3, #30
9000e382:	d4f6      	bmi.n	9000e372 <HAL_RCC_OscConfig+0x58e>
9000e384:	e5d3      	b.n	9000df2e <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000e386:	68eb      	ldr	r3, [r5, #12]
9000e388:	6a22      	ldr	r2, [r4, #32]
9000e38a:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000e38e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000e392:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e394:	6823      	ldr	r3, [r4, #0]
9000e396:	e595      	b.n	9000dec4 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e398:	4a0b      	ldr	r2, [pc, #44]	; (9000e3c8 <HAL_RCC_OscConfig+0x5e4>)
9000e39a:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000e39c:	f043 0301 	orr.w	r3, r3, #1
9000e3a0:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000e3a2:	e690      	b.n	9000e0c6 <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000e3a4:	4a08      	ldr	r2, [pc, #32]	; (9000e3c8 <HAL_RCC_OscConfig+0x5e4>)
9000e3a6:	6853      	ldr	r3, [r2, #4]
9000e3a8:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000e3ac:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000e3b0:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e3b2:	6823      	ldr	r3, [r4, #0]
9000e3b4:	e586      	b.n	9000dec4 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e3b6:	f042 0204 	orr.w	r2, r2, #4
9000e3ba:	671a      	str	r2, [r3, #112]	; 0x70
9000e3bc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000e3be:	f042 0201 	orr.w	r2, r2, #1
9000e3c2:	671a      	str	r2, [r3, #112]	; 0x70
9000e3c4:	e67f      	b.n	9000e0c6 <HAL_RCC_OscConfig+0x2e2>
9000e3c6:	bf00      	nop
9000e3c8:	58024400 	.word	0x58024400

9000e3cc <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e3cc:	4a47      	ldr	r2, [pc, #284]	; (9000e4ec <HAL_RCC_GetSysClockFreq+0x120>)
9000e3ce:	6913      	ldr	r3, [r2, #16]
9000e3d0:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e3d4:	2b10      	cmp	r3, #16
9000e3d6:	d004      	beq.n	9000e3e2 <HAL_RCC_GetSysClockFreq+0x16>
9000e3d8:	2b18      	cmp	r3, #24
9000e3da:	d00d      	beq.n	9000e3f8 <HAL_RCC_GetSysClockFreq+0x2c>
9000e3dc:	b11b      	cbz	r3, 9000e3e6 <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000e3de:	4844      	ldr	r0, [pc, #272]	; (9000e4f0 <HAL_RCC_GetSysClockFreq+0x124>)
9000e3e0:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e3e2:	4844      	ldr	r0, [pc, #272]	; (9000e4f4 <HAL_RCC_GetSysClockFreq+0x128>)
9000e3e4:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e3e6:	6813      	ldr	r3, [r2, #0]
9000e3e8:	0699      	lsls	r1, r3, #26
9000e3ea:	d54a      	bpl.n	9000e482 <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e3ec:	6813      	ldr	r3, [r2, #0]
9000e3ee:	4842      	ldr	r0, [pc, #264]	; (9000e4f8 <HAL_RCC_GetSysClockFreq+0x12c>)
9000e3f0:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e3f4:	40d8      	lsrs	r0, r3
9000e3f6:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000e3f8:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000e3fa:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000e3fc:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000e3fe:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000e400:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e404:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000e406:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000e40a:	d038      	beq.n	9000e47e <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e40c:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000e410:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000e414:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e418:	fb05 f101 	mul.w	r1, r5, r1
9000e41c:	2b01      	cmp	r3, #1
9000e41e:	ee07 1a90 	vmov	s15, r1
9000e422:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000e426:	d002      	beq.n	9000e42e <HAL_RCC_GetSysClockFreq+0x62>
9000e428:	2b02      	cmp	r3, #2
9000e42a:	d02c      	beq.n	9000e486 <HAL_RCC_GetSysClockFreq+0xba>
9000e42c:	b393      	cbz	r3, 9000e494 <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e42e:	ee07 0a90 	vmov	s15, r0
9000e432:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000e4fc <HAL_RCC_GetSysClockFreq+0x130>
9000e436:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e43a:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000e43c:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000e440:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000e500 <HAL_RCC_GetSysClockFreq+0x134>
9000e444:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000e448:	ee07 3a90 	vmov	s15, r3
9000e44c:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000e450:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e454:	eee7 7a25 	vfma.f32	s15, s14, s11
9000e458:	ee77 7a86 	vadd.f32	s15, s15, s12
9000e45c:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000e460:	4b22      	ldr	r3, [pc, #136]	; (9000e4ec <HAL_RCC_GetSysClockFreq+0x120>)
9000e462:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000e464:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000e468:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000e46a:	ee07 3a90 	vmov	s15, r3
9000e46e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000e472:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000e476:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000e47a:	ee17 0a90 	vmov	r0, s15
}
9000e47e:	bc30      	pop	{r4, r5}
9000e480:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e482:	481d      	ldr	r0, [pc, #116]	; (9000e4f8 <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000e484:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e486:	ee07 0a90 	vmov	s15, r0
9000e48a:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000e504 <HAL_RCC_GetSysClockFreq+0x138>
9000e48e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e492:	e7d2      	b.n	9000e43a <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e494:	6813      	ldr	r3, [r2, #0]
9000e496:	069b      	lsls	r3, r3, #26
9000e498:	d520      	bpl.n	9000e4dc <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e49a:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e49c:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e4a0:	4915      	ldr	r1, [pc, #84]	; (9000e4f8 <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e4a2:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000e4a6:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e4a8:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e4ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e4b0:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000e500 <HAL_RCC_GetSysClockFreq+0x134>
9000e4b4:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e4b8:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e4ba:	ee06 3a90 	vmov	s13, r3
9000e4be:	ee06 1a10 	vmov	s12, r1
9000e4c2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000e4c6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000e4ca:	eee7 6a05 	vfma.f32	s13, s14, s10
9000e4ce:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000e4d2:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000e4d6:	ee66 6a87 	vmul.f32	s13, s13, s14
9000e4da:	e7c1      	b.n	9000e460 <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e4dc:	ee07 0a90 	vmov	s15, r0
9000e4e0:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000e508 <HAL_RCC_GetSysClockFreq+0x13c>
9000e4e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e4e8:	e7a7      	b.n	9000e43a <HAL_RCC_GetSysClockFreq+0x6e>
9000e4ea:	bf00      	nop
9000e4ec:	58024400 	.word	0x58024400
9000e4f0:	003d0900 	.word	0x003d0900
9000e4f4:	017d7840 	.word	0x017d7840
9000e4f8:	03d09000 	.word	0x03d09000
9000e4fc:	4a742400 	.word	0x4a742400
9000e500:	39000000 	.word	0x39000000
9000e504:	4bbebc20 	.word	0x4bbebc20
9000e508:	4c742400 	.word	0x4c742400

9000e50c <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000e50c:	2800      	cmp	r0, #0
9000e50e:	f000 810c 	beq.w	9000e72a <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000e512:	4a8c      	ldr	r2, [pc, #560]	; (9000e744 <HAL_RCC_ClockConfig+0x238>)
9000e514:	6813      	ldr	r3, [r2, #0]
9000e516:	f003 030f 	and.w	r3, r3, #15
9000e51a:	428b      	cmp	r3, r1
{
9000e51c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e520:	4604      	mov	r4, r0
9000e522:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000e524:	d20c      	bcs.n	9000e540 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000e526:	6813      	ldr	r3, [r2, #0]
9000e528:	f023 030f 	bic.w	r3, r3, #15
9000e52c:	430b      	orrs	r3, r1
9000e52e:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000e530:	6813      	ldr	r3, [r2, #0]
9000e532:	f003 030f 	and.w	r3, r3, #15
9000e536:	428b      	cmp	r3, r1
9000e538:	d002      	beq.n	9000e540 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000e53a:	2001      	movs	r0, #1
}
9000e53c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000e540:	6823      	ldr	r3, [r4, #0]
9000e542:	075f      	lsls	r7, r3, #29
9000e544:	d50b      	bpl.n	9000e55e <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000e546:	4980      	ldr	r1, [pc, #512]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e548:	6920      	ldr	r0, [r4, #16]
9000e54a:	698a      	ldr	r2, [r1, #24]
9000e54c:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e550:	4290      	cmp	r0, r2
9000e552:	d904      	bls.n	9000e55e <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000e554:	698a      	ldr	r2, [r1, #24]
9000e556:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e55a:	4302      	orrs	r2, r0
9000e55c:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000e55e:	071e      	lsls	r6, r3, #28
9000e560:	d50b      	bpl.n	9000e57a <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000e562:	4979      	ldr	r1, [pc, #484]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e564:	6960      	ldr	r0, [r4, #20]
9000e566:	69ca      	ldr	r2, [r1, #28]
9000e568:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e56c:	4290      	cmp	r0, r2
9000e56e:	d904      	bls.n	9000e57a <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000e570:	69ca      	ldr	r2, [r1, #28]
9000e572:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e576:	4302      	orrs	r2, r0
9000e578:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000e57a:	06d8      	lsls	r0, r3, #27
9000e57c:	d50b      	bpl.n	9000e596 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000e57e:	4972      	ldr	r1, [pc, #456]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e580:	69a0      	ldr	r0, [r4, #24]
9000e582:	69ca      	ldr	r2, [r1, #28]
9000e584:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e588:	4290      	cmp	r0, r2
9000e58a:	d904      	bls.n	9000e596 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000e58c:	69ca      	ldr	r2, [r1, #28]
9000e58e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000e592:	4302      	orrs	r2, r0
9000e594:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000e596:	0699      	lsls	r1, r3, #26
9000e598:	d50b      	bpl.n	9000e5b2 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000e59a:	496b      	ldr	r1, [pc, #428]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e59c:	69e0      	ldr	r0, [r4, #28]
9000e59e:	6a0a      	ldr	r2, [r1, #32]
9000e5a0:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e5a4:	4290      	cmp	r0, r2
9000e5a6:	d904      	bls.n	9000e5b2 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000e5a8:	6a0a      	ldr	r2, [r1, #32]
9000e5aa:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e5ae:	4302      	orrs	r2, r0
9000e5b0:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000e5b2:	079a      	lsls	r2, r3, #30
9000e5b4:	f140 80ab 	bpl.w	9000e70e <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000e5b8:	4863      	ldr	r0, [pc, #396]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e5ba:	68e1      	ldr	r1, [r4, #12]
9000e5bc:	6982      	ldr	r2, [r0, #24]
9000e5be:	f002 020f 	and.w	r2, r2, #15
9000e5c2:	4291      	cmp	r1, r2
9000e5c4:	d904      	bls.n	9000e5d0 <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000e5c6:	6982      	ldr	r2, [r0, #24]
9000e5c8:	f022 020f 	bic.w	r2, r2, #15
9000e5cc:	430a      	orrs	r2, r1
9000e5ce:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000e5d0:	07d8      	lsls	r0, r3, #31
9000e5d2:	d530      	bpl.n	9000e636 <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000e5d4:	4a5c      	ldr	r2, [pc, #368]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e5d6:	68a1      	ldr	r1, [r4, #8]
9000e5d8:	6993      	ldr	r3, [r2, #24]
9000e5da:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000e5de:	430b      	orrs	r3, r1
9000e5e0:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000e5e2:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e5e4:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000e5e6:	2902      	cmp	r1, #2
9000e5e8:	f000 80a1 	beq.w	9000e72e <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000e5ec:	2903      	cmp	r1, #3
9000e5ee:	f000 8098 	beq.w	9000e722 <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000e5f2:	2901      	cmp	r1, #1
9000e5f4:	f000 80a1 	beq.w	9000e73a <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000e5f8:	0758      	lsls	r0, r3, #29
9000e5fa:	d59e      	bpl.n	9000e53a <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000e5fc:	4e52      	ldr	r6, [pc, #328]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000e5fe:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000e602:	6933      	ldr	r3, [r6, #16]
9000e604:	f023 0307 	bic.w	r3, r3, #7
9000e608:	430b      	orrs	r3, r1
9000e60a:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000e60c:	f7fb fcda 	bl	90009fc4 <HAL_GetTick>
9000e610:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000e612:	e005      	b.n	9000e620 <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000e614:	f7fb fcd6 	bl	90009fc4 <HAL_GetTick>
9000e618:	1bc0      	subs	r0, r0, r7
9000e61a:	4540      	cmp	r0, r8
9000e61c:	f200 808b 	bhi.w	9000e736 <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000e620:	6933      	ldr	r3, [r6, #16]
9000e622:	6862      	ldr	r2, [r4, #4]
9000e624:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e628:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000e62c:	d1f2      	bne.n	9000e614 <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000e62e:	6823      	ldr	r3, [r4, #0]
9000e630:	0799      	lsls	r1, r3, #30
9000e632:	d506      	bpl.n	9000e642 <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000e634:	68e1      	ldr	r1, [r4, #12]
9000e636:	4844      	ldr	r0, [pc, #272]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e638:	6982      	ldr	r2, [r0, #24]
9000e63a:	f002 020f 	and.w	r2, r2, #15
9000e63e:	428a      	cmp	r2, r1
9000e640:	d869      	bhi.n	9000e716 <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000e642:	4940      	ldr	r1, [pc, #256]	; (9000e744 <HAL_RCC_ClockConfig+0x238>)
9000e644:	680a      	ldr	r2, [r1, #0]
9000e646:	f002 020f 	and.w	r2, r2, #15
9000e64a:	42aa      	cmp	r2, r5
9000e64c:	d90a      	bls.n	9000e664 <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000e64e:	680a      	ldr	r2, [r1, #0]
9000e650:	f022 020f 	bic.w	r2, r2, #15
9000e654:	432a      	orrs	r2, r5
9000e656:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000e658:	680a      	ldr	r2, [r1, #0]
9000e65a:	f002 020f 	and.w	r2, r2, #15
9000e65e:	42aa      	cmp	r2, r5
9000e660:	f47f af6b 	bne.w	9000e53a <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000e664:	075a      	lsls	r2, r3, #29
9000e666:	d50b      	bpl.n	9000e680 <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000e668:	4937      	ldr	r1, [pc, #220]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e66a:	6920      	ldr	r0, [r4, #16]
9000e66c:	698a      	ldr	r2, [r1, #24]
9000e66e:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e672:	4290      	cmp	r0, r2
9000e674:	d204      	bcs.n	9000e680 <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000e676:	698a      	ldr	r2, [r1, #24]
9000e678:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e67c:	4302      	orrs	r2, r0
9000e67e:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000e680:	071f      	lsls	r7, r3, #28
9000e682:	d50b      	bpl.n	9000e69c <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000e684:	4930      	ldr	r1, [pc, #192]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e686:	6960      	ldr	r0, [r4, #20]
9000e688:	69ca      	ldr	r2, [r1, #28]
9000e68a:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e68e:	4290      	cmp	r0, r2
9000e690:	d204      	bcs.n	9000e69c <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000e692:	69ca      	ldr	r2, [r1, #28]
9000e694:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e698:	4302      	orrs	r2, r0
9000e69a:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000e69c:	06de      	lsls	r6, r3, #27
9000e69e:	d50b      	bpl.n	9000e6b8 <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000e6a0:	4929      	ldr	r1, [pc, #164]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e6a2:	69a0      	ldr	r0, [r4, #24]
9000e6a4:	69ca      	ldr	r2, [r1, #28]
9000e6a6:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e6aa:	4290      	cmp	r0, r2
9000e6ac:	d204      	bcs.n	9000e6b8 <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000e6ae:	69ca      	ldr	r2, [r1, #28]
9000e6b0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000e6b4:	4302      	orrs	r2, r0
9000e6b6:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000e6b8:	069d      	lsls	r5, r3, #26
9000e6ba:	d50b      	bpl.n	9000e6d4 <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000e6bc:	4a22      	ldr	r2, [pc, #136]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e6be:	69e1      	ldr	r1, [r4, #28]
9000e6c0:	6a13      	ldr	r3, [r2, #32]
9000e6c2:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000e6c6:	4299      	cmp	r1, r3
9000e6c8:	d204      	bcs.n	9000e6d4 <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000e6ca:	6a13      	ldr	r3, [r2, #32]
9000e6cc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000e6d0:	430b      	orrs	r3, r1
9000e6d2:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e6d4:	f7ff fe7a 	bl	9000e3cc <HAL_RCC_GetSysClockFreq>
9000e6d8:	4a1b      	ldr	r2, [pc, #108]	; (9000e748 <HAL_RCC_ClockConfig+0x23c>)
9000e6da:	4603      	mov	r3, r0
9000e6dc:	481b      	ldr	r0, [pc, #108]	; (9000e74c <HAL_RCC_ClockConfig+0x240>)
9000e6de:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e6e0:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e6e2:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000e6e6:	4d1a      	ldr	r5, [pc, #104]	; (9000e750 <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e6e8:	f002 020f 	and.w	r2, r2, #15
9000e6ec:	4c19      	ldr	r4, [pc, #100]	; (9000e754 <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e6ee:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e6f0:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e6f2:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000e6f6:	4818      	ldr	r0, [pc, #96]	; (9000e758 <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e6f8:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e6fc:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000e6fe:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000e700:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e702:	40d3      	lsrs	r3, r2
9000e704:	6023      	str	r3, [r4, #0]
}
9000e706:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000e70a:	f7f6 be51 	b.w	900053b0 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000e70e:	07da      	lsls	r2, r3, #31
9000e710:	f53f af60 	bmi.w	9000e5d4 <HAL_RCC_ClockConfig+0xc8>
9000e714:	e795      	b.n	9000e642 <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000e716:	6982      	ldr	r2, [r0, #24]
9000e718:	f022 020f 	bic.w	r2, r2, #15
9000e71c:	4311      	orrs	r1, r2
9000e71e:	6181      	str	r1, [r0, #24]
9000e720:	e78f      	b.n	9000e642 <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000e722:	019f      	lsls	r7, r3, #6
9000e724:	f53f af6a 	bmi.w	9000e5fc <HAL_RCC_ClockConfig+0xf0>
9000e728:	e707      	b.n	9000e53a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000e72a:	2001      	movs	r0, #1
}
9000e72c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e72e:	039b      	lsls	r3, r3, #14
9000e730:	f53f af64 	bmi.w	9000e5fc <HAL_RCC_ClockConfig+0xf0>
9000e734:	e701      	b.n	9000e53a <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000e736:	2003      	movs	r0, #3
9000e738:	e700      	b.n	9000e53c <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000e73a:	05de      	lsls	r6, r3, #23
9000e73c:	f53f af5e 	bmi.w	9000e5fc <HAL_RCC_ClockConfig+0xf0>
9000e740:	e6fb      	b.n	9000e53a <HAL_RCC_ClockConfig+0x2e>
9000e742:	bf00      	nop
9000e744:	52002000 	.word	0x52002000
9000e748:	58024400 	.word	0x58024400
9000e74c:	9002fab4 	.word	0x9002fab4
9000e750:	24000054 	.word	0x24000054
9000e754:	24000058 	.word	0x24000058
9000e758:	24000060 	.word	0x24000060

9000e75c <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e75c:	4a18      	ldr	r2, [pc, #96]	; (9000e7c0 <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000e75e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e760:	6913      	ldr	r3, [r2, #16]
9000e762:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e766:	2b10      	cmp	r3, #16
9000e768:	d01a      	beq.n	9000e7a0 <HAL_RCC_GetHCLKFreq+0x44>
9000e76a:	2b18      	cmp	r3, #24
9000e76c:	d023      	beq.n	9000e7b6 <HAL_RCC_GetHCLKFreq+0x5a>
9000e76e:	b1cb      	cbz	r3, 9000e7a4 <HAL_RCC_GetHCLKFreq+0x48>
      sysclockfreq = CSI_VALUE;
9000e770:	4814      	ldr	r0, [pc, #80]	; (9000e7c4 <HAL_RCC_GetHCLKFreq+0x68>)
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e772:	4b13      	ldr	r3, [pc, #76]	; (9000e7c0 <HAL_RCC_GetHCLKFreq+0x64>)
9000e774:	4914      	ldr	r1, [pc, #80]	; (9000e7c8 <HAL_RCC_GetHCLKFreq+0x6c>)
9000e776:	699a      	ldr	r2, [r3, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e778:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e77a:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e77e:	4c13      	ldr	r4, [pc, #76]	; (9000e7cc <HAL_RCC_GetHCLKFreq+0x70>)
9000e780:	f003 030f 	and.w	r3, r3, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000e784:	4d12      	ldr	r5, [pc, #72]	; (9000e7d0 <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e786:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e788:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e78a:	f002 021f 	and.w	r2, r2, #31
9000e78e:	fa20 f202 	lsr.w	r2, r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e792:	f003 001f 	and.w	r0, r3, #31
9000e796:	fa22 f000 	lsr.w	r0, r2, r0
  SystemCoreClock = common_system_clock;
9000e79a:	602a      	str	r2, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e79c:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000e79e:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e7a0:	480c      	ldr	r0, [pc, #48]	; (9000e7d4 <HAL_RCC_GetHCLKFreq+0x78>)
9000e7a2:	e7e6      	b.n	9000e772 <HAL_RCC_GetHCLKFreq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e7a4:	6813      	ldr	r3, [r2, #0]
9000e7a6:	069b      	lsls	r3, r3, #26
9000e7a8:	d508      	bpl.n	9000e7bc <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e7aa:	6812      	ldr	r2, [r2, #0]
9000e7ac:	480a      	ldr	r0, [pc, #40]	; (9000e7d8 <HAL_RCC_GetHCLKFreq+0x7c>)
9000e7ae:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000e7b2:	40d0      	lsrs	r0, r2
9000e7b4:	e7dd      	b.n	9000e772 <HAL_RCC_GetHCLKFreq+0x16>
9000e7b6:	f7ff fa7d 	bl	9000dcb4 <HAL_RCC_GetSysClockFreq.part.0>
9000e7ba:	e7da      	b.n	9000e772 <HAL_RCC_GetHCLKFreq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e7bc:	4806      	ldr	r0, [pc, #24]	; (9000e7d8 <HAL_RCC_GetHCLKFreq+0x7c>)
9000e7be:	e7d8      	b.n	9000e772 <HAL_RCC_GetHCLKFreq+0x16>
9000e7c0:	58024400 	.word	0x58024400
9000e7c4:	003d0900 	.word	0x003d0900
9000e7c8:	9002fab4 	.word	0x9002fab4
9000e7cc:	24000058 	.word	0x24000058
9000e7d0:	24000054 	.word	0x24000054
9000e7d4:	017d7840 	.word	0x017d7840
9000e7d8:	03d09000 	.word	0x03d09000

9000e7dc <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e7dc:	4a1c      	ldr	r2, [pc, #112]	; (9000e850 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000e7de:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e7e0:	6913      	ldr	r3, [r2, #16]
9000e7e2:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e7e6:	2b10      	cmp	r3, #16
9000e7e8:	d021      	beq.n	9000e82e <HAL_RCC_GetPCLK1Freq+0x52>
9000e7ea:	2b18      	cmp	r3, #24
9000e7ec:	d02b      	beq.n	9000e846 <HAL_RCC_GetPCLK1Freq+0x6a>
9000e7ee:	b303      	cbz	r3, 9000e832 <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000e7f0:	4818      	ldr	r0, [pc, #96]	; (9000e854 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e7f2:	4a17      	ldr	r2, [pc, #92]	; (9000e850 <HAL_RCC_GetPCLK1Freq+0x74>)
9000e7f4:	4918      	ldr	r1, [pc, #96]	; (9000e858 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000e7f6:	6993      	ldr	r3, [r2, #24]
  SystemCoreClock = common_system_clock;
9000e7f8:	4d18      	ldr	r5, [pc, #96]	; (9000e85c <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e7fa:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e7fe:	4c18      	ldr	r4, [pc, #96]	; (9000e860 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e800:	5ccb      	ldrb	r3, [r1, r3]
9000e802:	f003 031f 	and.w	r3, r3, #31
9000e806:	fa20 f303 	lsr.w	r3, r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e80a:	6990      	ldr	r0, [r2, #24]
9000e80c:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000e810:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e812:	5c08      	ldrb	r0, [r1, r0]
9000e814:	f000 001f 	and.w	r0, r0, #31
9000e818:	40c3      	lsrs	r3, r0
9000e81a:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000e81c:	69d2      	ldr	r2, [r2, #28]
9000e81e:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000e822:	5c88      	ldrb	r0, [r1, r2]
9000e824:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000e828:	fa23 f000 	lsr.w	r0, r3, r0
9000e82c:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e82e:	480d      	ldr	r0, [pc, #52]	; (9000e864 <HAL_RCC_GetPCLK1Freq+0x88>)
9000e830:	e7df      	b.n	9000e7f2 <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e832:	6813      	ldr	r3, [r2, #0]
9000e834:	069b      	lsls	r3, r3, #26
9000e836:	d509      	bpl.n	9000e84c <HAL_RCC_GetPCLK1Freq+0x70>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e838:	6810      	ldr	r0, [r2, #0]
9000e83a:	4b0b      	ldr	r3, [pc, #44]	; (9000e868 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000e83c:	f3c0 00c1 	ubfx	r0, r0, #3, #2
9000e840:	fa23 f000 	lsr.w	r0, r3, r0
9000e844:	e7d5      	b.n	9000e7f2 <HAL_RCC_GetPCLK1Freq+0x16>
9000e846:	f7ff fa35 	bl	9000dcb4 <HAL_RCC_GetSysClockFreq.part.0>
9000e84a:	e7d2      	b.n	9000e7f2 <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e84c:	4806      	ldr	r0, [pc, #24]	; (9000e868 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000e84e:	e7d0      	b.n	9000e7f2 <HAL_RCC_GetPCLK1Freq+0x16>
9000e850:	58024400 	.word	0x58024400
9000e854:	003d0900 	.word	0x003d0900
9000e858:	9002fab4 	.word	0x9002fab4
9000e85c:	24000054 	.word	0x24000054
9000e860:	24000058 	.word	0x24000058
9000e864:	017d7840 	.word	0x017d7840
9000e868:	03d09000 	.word	0x03d09000

9000e86c <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e86c:	4a1c      	ldr	r2, [pc, #112]	; (9000e8e0 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000e86e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e870:	6913      	ldr	r3, [r2, #16]
9000e872:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e876:	2b10      	cmp	r3, #16
9000e878:	d021      	beq.n	9000e8be <HAL_RCC_GetPCLK2Freq+0x52>
9000e87a:	2b18      	cmp	r3, #24
9000e87c:	d02b      	beq.n	9000e8d6 <HAL_RCC_GetPCLK2Freq+0x6a>
9000e87e:	b303      	cbz	r3, 9000e8c2 <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000e880:	4818      	ldr	r0, [pc, #96]	; (9000e8e4 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e882:	4a17      	ldr	r2, [pc, #92]	; (9000e8e0 <HAL_RCC_GetPCLK2Freq+0x74>)
9000e884:	4918      	ldr	r1, [pc, #96]	; (9000e8e8 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000e886:	6993      	ldr	r3, [r2, #24]
  SystemCoreClock = common_system_clock;
9000e888:	4d18      	ldr	r5, [pc, #96]	; (9000e8ec <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e88a:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e88e:	4c18      	ldr	r4, [pc, #96]	; (9000e8f0 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e890:	5ccb      	ldrb	r3, [r1, r3]
9000e892:	f003 031f 	and.w	r3, r3, #31
9000e896:	fa20 f303 	lsr.w	r3, r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e89a:	6990      	ldr	r0, [r2, #24]
9000e89c:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000e8a0:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e8a2:	5c08      	ldrb	r0, [r1, r0]
9000e8a4:	f000 001f 	and.w	r0, r0, #31
9000e8a8:	40c3      	lsrs	r3, r0
9000e8aa:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000e8ac:	69d2      	ldr	r2, [r2, #28]
9000e8ae:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000e8b2:	5c88      	ldrb	r0, [r1, r2]
9000e8b4:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000e8b8:	fa23 f000 	lsr.w	r0, r3, r0
9000e8bc:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e8be:	480d      	ldr	r0, [pc, #52]	; (9000e8f4 <HAL_RCC_GetPCLK2Freq+0x88>)
9000e8c0:	e7df      	b.n	9000e882 <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e8c2:	6813      	ldr	r3, [r2, #0]
9000e8c4:	069b      	lsls	r3, r3, #26
9000e8c6:	d509      	bpl.n	9000e8dc <HAL_RCC_GetPCLK2Freq+0x70>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e8c8:	6810      	ldr	r0, [r2, #0]
9000e8ca:	4b0b      	ldr	r3, [pc, #44]	; (9000e8f8 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000e8cc:	f3c0 00c1 	ubfx	r0, r0, #3, #2
9000e8d0:	fa23 f000 	lsr.w	r0, r3, r0
9000e8d4:	e7d5      	b.n	9000e882 <HAL_RCC_GetPCLK2Freq+0x16>
9000e8d6:	f7ff f9ed 	bl	9000dcb4 <HAL_RCC_GetSysClockFreq.part.0>
9000e8da:	e7d2      	b.n	9000e882 <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e8dc:	4806      	ldr	r0, [pc, #24]	; (9000e8f8 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000e8de:	e7d0      	b.n	9000e882 <HAL_RCC_GetPCLK2Freq+0x16>
9000e8e0:	58024400 	.word	0x58024400
9000e8e4:	003d0900 	.word	0x003d0900
9000e8e8:	9002fab4 	.word	0x9002fab4
9000e8ec:	24000054 	.word	0x24000054
9000e8f0:	24000058 	.word	0x24000058
9000e8f4:	017d7840 	.word	0x017d7840
9000e8f8:	03d09000 	.word	0x03d09000

9000e8fc <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000e8fc:	4b13      	ldr	r3, [pc, #76]	; (9000e94c <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000e8fe:	223f      	movs	r2, #63	; 0x3f
9000e900:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000e902:	691a      	ldr	r2, [r3, #16]
9000e904:	f002 0207 	and.w	r2, r2, #7
9000e908:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000e90a:	699a      	ldr	r2, [r3, #24]
9000e90c:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000e910:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000e912:	699a      	ldr	r2, [r3, #24]
9000e914:	f002 020f 	and.w	r2, r2, #15
9000e918:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000e91a:	699a      	ldr	r2, [r3, #24]
9000e91c:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e920:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000e922:	69da      	ldr	r2, [r3, #28]
9000e924:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e928:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000e92a:	69da      	ldr	r2, [r3, #28]
9000e92c:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e930:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e932:	6a1b      	ldr	r3, [r3, #32]
{
9000e934:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e936:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e93a:	4c05      	ldr	r4, [pc, #20]	; (9000e950 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e93c:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e93e:	6823      	ldr	r3, [r4, #0]
}
9000e940:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e944:	f003 030f 	and.w	r3, r3, #15
9000e948:	600b      	str	r3, [r1, #0]
}
9000e94a:	4770      	bx	lr
9000e94c:	58024400 	.word	0x58024400
9000e950:	52002000 	.word	0x52002000

9000e954 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000e954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e956:	4c3a      	ldr	r4, [pc, #232]	; (9000ea40 <RCCEx_PLL2_Config+0xec>)
9000e958:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e95a:	f003 0303 	and.w	r3, r3, #3
9000e95e:	2b03      	cmp	r3, #3
9000e960:	d067      	beq.n	9000ea32 <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000e962:	6823      	ldr	r3, [r4, #0]
9000e964:	4606      	mov	r6, r0
9000e966:	460f      	mov	r7, r1
9000e968:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000e96c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e96e:	f7fb fb29 	bl	90009fc4 <HAL_GetTick>
9000e972:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000e974:	e004      	b.n	9000e980 <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000e976:	f7fb fb25 	bl	90009fc4 <HAL_GetTick>
9000e97a:	1b43      	subs	r3, r0, r5
9000e97c:	2b02      	cmp	r3, #2
9000e97e:	d856      	bhi.n	9000ea2e <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000e980:	6823      	ldr	r3, [r4, #0]
9000e982:	011a      	lsls	r2, r3, #4
9000e984:	d4f7      	bmi.n	9000e976 <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000e986:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e988:	6832      	ldr	r2, [r6, #0]
9000e98a:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000e98e:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000e992:	62a3      	str	r3, [r4, #40]	; 0x28
9000e994:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000e998:	3b01      	subs	r3, #1
9000e99a:	3a01      	subs	r2, #1
9000e99c:	025b      	lsls	r3, r3, #9
9000e99e:	0412      	lsls	r2, r2, #16
9000e9a0:	b29b      	uxth	r3, r3
9000e9a2:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000e9a6:	4313      	orrs	r3, r2
9000e9a8:	6872      	ldr	r2, [r6, #4]
9000e9aa:	3a01      	subs	r2, #1
9000e9ac:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000e9b0:	4313      	orrs	r3, r2
9000e9b2:	6932      	ldr	r2, [r6, #16]
9000e9b4:	3a01      	subs	r2, #1
9000e9b6:	0612      	lsls	r2, r2, #24
9000e9b8:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000e9bc:	4313      	orrs	r3, r2
9000e9be:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000e9c0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e9c2:	6972      	ldr	r2, [r6, #20]
9000e9c4:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000e9c8:	4313      	orrs	r3, r2
9000e9ca:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000e9cc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e9ce:	69b3      	ldr	r3, [r6, #24]
9000e9d0:	f022 0220 	bic.w	r2, r2, #32
9000e9d4:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000e9d6:	4b1b      	ldr	r3, [pc, #108]	; (9000ea44 <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000e9d8:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000e9da:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e9dc:	f022 0210 	bic.w	r2, r2, #16
9000e9e0:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000e9e2:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000e9e4:	69f2      	ldr	r2, [r6, #28]
9000e9e6:	400b      	ands	r3, r1
9000e9e8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000e9ec:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000e9ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e9f0:	f043 0310 	orr.w	r3, r3, #16
9000e9f4:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000e9f6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000e9f8:	b1ef      	cbz	r7, 9000ea36 <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000e9fa:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000e9fc:	bf0c      	ite	eq
9000e9fe:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000ea02:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000ea06:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000ea08:	4c0d      	ldr	r4, [pc, #52]	; (9000ea40 <RCCEx_PLL2_Config+0xec>)
9000ea0a:	6823      	ldr	r3, [r4, #0]
9000ea0c:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000ea10:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ea12:	f7fb fad7 	bl	90009fc4 <HAL_GetTick>
9000ea16:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000ea18:	e004      	b.n	9000ea24 <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000ea1a:	f7fb fad3 	bl	90009fc4 <HAL_GetTick>
9000ea1e:	1b40      	subs	r0, r0, r5
9000ea20:	2802      	cmp	r0, #2
9000ea22:	d804      	bhi.n	9000ea2e <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000ea24:	6823      	ldr	r3, [r4, #0]
9000ea26:	011b      	lsls	r3, r3, #4
9000ea28:	d5f7      	bpl.n	9000ea1a <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000ea2a:	2000      	movs	r0, #0
}
9000ea2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000ea2e:	2003      	movs	r0, #3
}
9000ea30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000ea32:	2001      	movs	r0, #1
}
9000ea34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000ea36:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000ea3a:	62e3      	str	r3, [r4, #44]	; 0x2c
9000ea3c:	e7e4      	b.n	9000ea08 <RCCEx_PLL2_Config+0xb4>
9000ea3e:	bf00      	nop
9000ea40:	58024400 	.word	0x58024400
9000ea44:	ffff0007 	.word	0xffff0007

9000ea48 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000ea48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ea4a:	4c3a      	ldr	r4, [pc, #232]	; (9000eb34 <RCCEx_PLL3_Config+0xec>)
9000ea4c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ea4e:	f003 0303 	and.w	r3, r3, #3
9000ea52:	2b03      	cmp	r3, #3
9000ea54:	d067      	beq.n	9000eb26 <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000ea56:	6823      	ldr	r3, [r4, #0]
9000ea58:	4606      	mov	r6, r0
9000ea5a:	460f      	mov	r7, r1
9000ea5c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000ea60:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ea62:	f7fb faaf 	bl	90009fc4 <HAL_GetTick>
9000ea66:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000ea68:	e004      	b.n	9000ea74 <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000ea6a:	f7fb faab 	bl	90009fc4 <HAL_GetTick>
9000ea6e:	1b43      	subs	r3, r0, r5
9000ea70:	2b02      	cmp	r3, #2
9000ea72:	d856      	bhi.n	9000eb22 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000ea74:	6823      	ldr	r3, [r4, #0]
9000ea76:	009a      	lsls	r2, r3, #2
9000ea78:	d4f7      	bmi.n	9000ea6a <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000ea7a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ea7c:	6832      	ldr	r2, [r6, #0]
9000ea7e:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000ea82:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000ea86:	62a3      	str	r3, [r4, #40]	; 0x28
9000ea88:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000ea8c:	3b01      	subs	r3, #1
9000ea8e:	3a01      	subs	r2, #1
9000ea90:	025b      	lsls	r3, r3, #9
9000ea92:	0412      	lsls	r2, r2, #16
9000ea94:	b29b      	uxth	r3, r3
9000ea96:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000ea9a:	4313      	orrs	r3, r2
9000ea9c:	6872      	ldr	r2, [r6, #4]
9000ea9e:	3a01      	subs	r2, #1
9000eaa0:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000eaa4:	4313      	orrs	r3, r2
9000eaa6:	6932      	ldr	r2, [r6, #16]
9000eaa8:	3a01      	subs	r2, #1
9000eaaa:	0612      	lsls	r2, r2, #24
9000eaac:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000eab0:	4313      	orrs	r3, r2
9000eab2:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000eab4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000eab6:	6972      	ldr	r2, [r6, #20]
9000eab8:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000eabc:	4313      	orrs	r3, r2
9000eabe:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000eac0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000eac2:	69b3      	ldr	r3, [r6, #24]
9000eac4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000eac8:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000eaca:	4b1b      	ldr	r3, [pc, #108]	; (9000eb38 <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000eacc:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000eace:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ead0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000ead4:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000ead6:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000ead8:	69f2      	ldr	r2, [r6, #28]
9000eada:	400b      	ands	r3, r1
9000eadc:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000eae0:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000eae2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000eae4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000eae8:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000eaea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000eaec:	b1ef      	cbz	r7, 9000eb2a <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000eaee:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000eaf0:	bf0c      	ite	eq
9000eaf2:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000eaf6:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000eafa:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000eafc:	4c0d      	ldr	r4, [pc, #52]	; (9000eb34 <RCCEx_PLL3_Config+0xec>)
9000eafe:	6823      	ldr	r3, [r4, #0]
9000eb00:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000eb04:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000eb06:	f7fb fa5d 	bl	90009fc4 <HAL_GetTick>
9000eb0a:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000eb0c:	e004      	b.n	9000eb18 <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000eb0e:	f7fb fa59 	bl	90009fc4 <HAL_GetTick>
9000eb12:	1b40      	subs	r0, r0, r5
9000eb14:	2802      	cmp	r0, #2
9000eb16:	d804      	bhi.n	9000eb22 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000eb18:	6823      	ldr	r3, [r4, #0]
9000eb1a:	009b      	lsls	r3, r3, #2
9000eb1c:	d5f7      	bpl.n	9000eb0e <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000eb1e:	2000      	movs	r0, #0
}
9000eb20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000eb22:	2003      	movs	r0, #3
}
9000eb24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000eb26:	2001      	movs	r0, #1
}
9000eb28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000eb2a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000eb2e:	62e3      	str	r3, [r4, #44]	; 0x2c
9000eb30:	e7e4      	b.n	9000eafc <RCCEx_PLL3_Config+0xb4>
9000eb32:	bf00      	nop
9000eb34:	58024400 	.word	0x58024400
9000eb38:	ffff0007 	.word	0xffff0007

9000eb3c <HAL_RCCEx_PeriphCLKConfig>:
{
9000eb3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000eb40:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000eb44:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000eb46:	011d      	lsls	r5, r3, #4
9000eb48:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000eb4c:	d523      	bpl.n	9000eb96 <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000eb4e:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000eb50:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000eb54:	f000 854f 	beq.w	9000f5f6 <HAL_RCCEx_PeriphCLKConfig+0xaba>
9000eb58:	d812      	bhi.n	9000eb80 <HAL_RCCEx_PeriphCLKConfig+0x44>
9000eb5a:	2900      	cmp	r1, #0
9000eb5c:	f000 85a5 	beq.w	9000f6aa <HAL_RCCEx_PeriphCLKConfig+0xb6e>
9000eb60:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000eb64:	f040 859e 	bne.w	9000f6a4 <HAL_RCCEx_PeriphCLKConfig+0xb68>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000eb68:	2102      	movs	r1, #2
9000eb6a:	3008      	adds	r0, #8
9000eb6c:	f7ff fef2 	bl	9000e954 <RCCEx_PLL2_Config>
9000eb70:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000eb72:	2e00      	cmp	r6, #0
9000eb74:	f040 851e 	bne.w	9000f5b4 <HAL_RCCEx_PeriphCLKConfig+0xa78>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000eb78:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000eb7a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000eb7e:	e003      	b.n	9000eb88 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000eb80:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000eb84:	f040 858e 	bne.w	9000f6a4 <HAL_RCCEx_PeriphCLKConfig+0xb68>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000eb88:	4dae      	ldr	r5, [pc, #696]	; (9000ee44 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000eb8a:	2600      	movs	r6, #0
9000eb8c:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000eb8e:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000eb92:	4301      	orrs	r1, r0
9000eb94:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000eb96:	05d8      	lsls	r0, r3, #23
9000eb98:	d50a      	bpl.n	9000ebb0 <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000eb9a:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000eb9c:	2904      	cmp	r1, #4
9000eb9e:	d806      	bhi.n	9000ebae <HAL_RCCEx_PeriphCLKConfig+0x72>
9000eba0:	e8df f011 	tbh	[pc, r1, lsl #1]
9000eba4:	05390532 	.word	0x05390532
9000eba8:	03100516 	.word	0x03100516
9000ebac:	0310      	.short	0x0310
9000ebae:	2601      	movs	r6, #1
9000ebb0:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000ebb2:	0599      	lsls	r1, r3, #22
9000ebb4:	d51d      	bpl.n	9000ebf2 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000ebb6:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000ebb8:	2980      	cmp	r1, #128	; 0x80
9000ebba:	f000 8512 	beq.w	9000f5e2 <HAL_RCCEx_PeriphCLKConfig+0xaa6>
9000ebbe:	f200 80f9 	bhi.w	9000edb4 <HAL_RCCEx_PeriphCLKConfig+0x278>
9000ebc2:	2900      	cmp	r1, #0
9000ebc4:	f000 8420 	beq.w	9000f408 <HAL_RCCEx_PeriphCLKConfig+0x8cc>
9000ebc8:	2940      	cmp	r1, #64	; 0x40
9000ebca:	f040 80fa 	bne.w	9000edc2 <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ebce:	2100      	movs	r1, #0
9000ebd0:	f104 0008 	add.w	r0, r4, #8
9000ebd4:	f7ff febe 	bl	9000e954 <RCCEx_PLL2_Config>
9000ebd8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000ebda:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ebde:	2d00      	cmp	r5, #0
9000ebe0:	f040 83eb 	bne.w	9000f3ba <HAL_RCCEx_PeriphCLKConfig+0x87e>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000ebe4:	4f97      	ldr	r7, [pc, #604]	; (9000ee44 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ebe6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000ebe8:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000ebea:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000ebee:	4301      	orrs	r1, r0
9000ebf0:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000ebf2:	055f      	lsls	r7, r3, #21
9000ebf4:	d521      	bpl.n	9000ec3a <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000ebf6:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000ebfa:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000ebfe:	f000 851d 	beq.w	9000f63c <HAL_RCCEx_PeriphCLKConfig+0xb00>
9000ec02:	f200 80e1 	bhi.w	9000edc8 <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000ec06:	2900      	cmp	r1, #0
9000ec08:	f000 8405 	beq.w	9000f416 <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000ec0c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000ec10:	f040 80e2 	bne.w	9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ec14:	2100      	movs	r1, #0
9000ec16:	f104 0008 	add.w	r0, r4, #8
9000ec1a:	f7ff fe9b 	bl	9000e954 <RCCEx_PLL2_Config>
9000ec1e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000ec20:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ec24:	2d00      	cmp	r5, #0
9000ec26:	f040 83cf 	bne.w	9000f3c8 <HAL_RCCEx_PeriphCLKConfig+0x88c>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000ec2a:	4f86      	ldr	r7, [pc, #536]	; (9000ee44 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ec2c:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000ec30:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ec32:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000ec36:	4301      	orrs	r1, r0
9000ec38:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000ec3a:	0518      	lsls	r0, r3, #20
9000ec3c:	d521      	bpl.n	9000ec82 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000ec3e:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000ec42:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000ec46:	f000 84b9 	beq.w	9000f5bc <HAL_RCCEx_PeriphCLKConfig+0xa80>
9000ec4a:	f200 80c8 	bhi.w	9000edde <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000ec4e:	2900      	cmp	r1, #0
9000ec50:	f000 83d4 	beq.w	9000f3fc <HAL_RCCEx_PeriphCLKConfig+0x8c0>
9000ec54:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000ec58:	f040 80c9 	bne.w	9000edee <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ec5c:	2100      	movs	r1, #0
9000ec5e:	f104 0008 	add.w	r0, r4, #8
9000ec62:	f7ff fe77 	bl	9000e954 <RCCEx_PLL2_Config>
9000ec66:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000ec68:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ec6c:	2d00      	cmp	r5, #0
9000ec6e:	f040 83a2 	bne.w	9000f3b6 <HAL_RCCEx_PeriphCLKConfig+0x87a>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000ec72:	4f74      	ldr	r7, [pc, #464]	; (9000ee44 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ec74:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000ec78:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ec7a:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000ec7e:	4301      	orrs	r1, r0
9000ec80:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000ec82:	0199      	lsls	r1, r3, #6
9000ec84:	d518      	bpl.n	9000ecb8 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000ec86:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000ec88:	2920      	cmp	r1, #32
9000ec8a:	f000 841e 	beq.w	9000f4ca <HAL_RCCEx_PeriphCLKConfig+0x98e>
9000ec8e:	f200 80b1 	bhi.w	9000edf4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000ec92:	b139      	cbz	r1, 9000eca4 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000ec94:	2910      	cmp	r1, #16
9000ec96:	f040 80b0 	bne.w	9000edfa <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ec9a:	486a      	ldr	r0, [pc, #424]	; (9000ee44 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ec9c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000ec9e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000eca2:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000eca4:	2d00      	cmp	r5, #0
9000eca6:	f040 83d3 	bne.w	9000f450 <HAL_RCCEx_PeriphCLKConfig+0x914>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000ecaa:	4f66      	ldr	r7, [pc, #408]	; (9000ee44 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ecac:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000ecae:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000ecb0:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000ecb4:	4301      	orrs	r1, r0
9000ecb6:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000ecb8:	04df      	lsls	r7, r3, #19
9000ecba:	d51f      	bpl.n	9000ecfc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000ecbc:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000ecbe:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000ecc2:	f000 84b1 	beq.w	9000f628 <HAL_RCCEx_PeriphCLKConfig+0xaec>
9000ecc6:	f200 809b 	bhi.w	9000ee00 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000ecca:	2900      	cmp	r1, #0
9000eccc:	f000 8390 	beq.w	9000f3f0 <HAL_RCCEx_PeriphCLKConfig+0x8b4>
9000ecd0:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000ecd4:	f040 809c 	bne.w	9000ee10 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ecd8:	2100      	movs	r1, #0
9000ecda:	f104 0008 	add.w	r0, r4, #8
9000ecde:	f7ff fe39 	bl	9000e954 <RCCEx_PLL2_Config>
9000ece2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000ece4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ece8:	2d00      	cmp	r5, #0
9000ecea:	f040 8368 	bne.w	9000f3be <HAL_RCCEx_PeriphCLKConfig+0x882>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000ecee:	4f55      	ldr	r7, [pc, #340]	; (9000ee44 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ecf0:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000ecf2:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000ecf4:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000ecf8:	4301      	orrs	r1, r0
9000ecfa:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000ecfc:	0498      	lsls	r0, r3, #18
9000ecfe:	d51d      	bpl.n	9000ed3c <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000ed00:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000ed02:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000ed06:	f000 840f 	beq.w	9000f528 <HAL_RCCEx_PeriphCLKConfig+0x9ec>
9000ed0a:	f200 8084 	bhi.w	9000ee16 <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000ed0e:	b159      	cbz	r1, 9000ed28 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000ed10:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000ed14:	f040 8087 	bne.w	9000ee26 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ed18:	2101      	movs	r1, #1
9000ed1a:	f104 0008 	add.w	r0, r4, #8
9000ed1e:	f7ff fe19 	bl	9000e954 <RCCEx_PLL2_Config>
9000ed22:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000ed24:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ed28:	2d00      	cmp	r5, #0
9000ed2a:	f040 839b 	bne.w	9000f464 <HAL_RCCEx_PeriphCLKConfig+0x928>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000ed2e:	4f45      	ldr	r7, [pc, #276]	; (9000ee44 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ed30:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000ed32:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000ed34:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000ed38:	4301      	orrs	r1, r0
9000ed3a:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000ed3c:	0459      	lsls	r1, r3, #17
9000ed3e:	d51d      	bpl.n	9000ed7c <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000ed40:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000ed44:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000ed48:	f000 83fa 	beq.w	9000f540 <HAL_RCCEx_PeriphCLKConfig+0xa04>
9000ed4c:	d86e      	bhi.n	9000ee2c <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000ed4e:	b151      	cbz	r1, 9000ed66 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000ed50:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000ed54:	d172      	bne.n	9000ee3c <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ed56:	2101      	movs	r1, #1
9000ed58:	f104 0008 	add.w	r0, r4, #8
9000ed5c:	f7ff fdfa 	bl	9000e954 <RCCEx_PLL2_Config>
9000ed60:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000ed62:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ed66:	2d00      	cmp	r5, #0
9000ed68:	f040 8380 	bne.w	9000f46c <HAL_RCCEx_PeriphCLKConfig+0x930>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000ed6c:	4f35      	ldr	r7, [pc, #212]	; (9000ee44 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ed6e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000ed72:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ed74:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000ed78:	4301      	orrs	r1, r0
9000ed7a:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000ed7c:	041f      	lsls	r7, r3, #16
9000ed7e:	d50d      	bpl.n	9000ed9c <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000ed80:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000ed82:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000ed86:	f000 83c7 	beq.w	9000f518 <HAL_RCCEx_PeriphCLKConfig+0x9dc>
9000ed8a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000ed8e:	f000 8225 	beq.w	9000f1dc <HAL_RCCEx_PeriphCLKConfig+0x6a0>
9000ed92:	2900      	cmp	r1, #0
9000ed94:	f000 822a 	beq.w	9000f1ec <HAL_RCCEx_PeriphCLKConfig+0x6b0>
9000ed98:	2601      	movs	r6, #1
9000ed9a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000ed9c:	01d8      	lsls	r0, r3, #7
9000ed9e:	d55f      	bpl.n	9000ee60 <HAL_RCCEx_PeriphCLKConfig+0x324>
    switch (PeriphClkInit->FmcClockSelection)
9000eda0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000eda2:	2903      	cmp	r1, #3
9000eda4:	f200 84bb 	bhi.w	9000f71e <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000eda8:	e8df f011 	tbh	[pc, r1, lsl #1]
9000edac:	03e10056 	.word	0x03e10056
9000edb0:	0056004e 	.word	0x0056004e
    switch (PeriphClkInit->Sai23ClockSelection)
9000edb4:	29c0      	cmp	r1, #192	; 0xc0
9000edb6:	f43f af12 	beq.w	9000ebde <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000edba:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000edbe:	f43f af0e 	beq.w	9000ebde <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000edc2:	2601      	movs	r6, #1
9000edc4:	4635      	mov	r5, r6
9000edc6:	e714      	b.n	9000ebf2 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000edc8:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000edcc:	f43f af2a 	beq.w	9000ec24 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000edd0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000edd4:	f43f af26 	beq.w	9000ec24 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000edd8:	2601      	movs	r6, #1
9000edda:	4635      	mov	r5, r6
9000eddc:	e72d      	b.n	9000ec3a <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000edde:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000ede2:	f43f af43 	beq.w	9000ec6c <HAL_RCCEx_PeriphCLKConfig+0x130>
9000ede6:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000edea:	f43f af3f 	beq.w	9000ec6c <HAL_RCCEx_PeriphCLKConfig+0x130>
9000edee:	2601      	movs	r6, #1
9000edf0:	4635      	mov	r5, r6
9000edf2:	e746      	b.n	9000ec82 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000edf4:	2930      	cmp	r1, #48	; 0x30
9000edf6:	f43f af55 	beq.w	9000eca4 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000edfa:	2601      	movs	r6, #1
9000edfc:	4635      	mov	r5, r6
9000edfe:	e75b      	b.n	9000ecb8 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000ee00:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000ee04:	f43f af70 	beq.w	9000ece8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000ee08:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000ee0c:	f43f af6c 	beq.w	9000ece8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000ee10:	2601      	movs	r6, #1
9000ee12:	4635      	mov	r5, r6
9000ee14:	e772      	b.n	9000ecfc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000ee16:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000ee1a:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000ee1e:	d083      	beq.n	9000ed28 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000ee20:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000ee24:	d080      	beq.n	9000ed28 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000ee26:	2601      	movs	r6, #1
9000ee28:	4635      	mov	r5, r6
9000ee2a:	e787      	b.n	9000ed3c <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000ee2c:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000ee30:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000ee34:	d097      	beq.n	9000ed66 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000ee36:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000ee3a:	d094      	beq.n	9000ed66 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000ee3c:	2601      	movs	r6, #1
9000ee3e:	4635      	mov	r5, r6
9000ee40:	e79c      	b.n	9000ed7c <HAL_RCCEx_PeriphCLKConfig+0x240>
9000ee42:	bf00      	nop
9000ee44:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000ee48:	2102      	movs	r1, #2
9000ee4a:	f104 0008 	add.w	r0, r4, #8
9000ee4e:	f7ff fd81 	bl	9000e954 <RCCEx_PLL2_Config>
9000ee52:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000ee54:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ee58:	2d00      	cmp	r5, #0
9000ee5a:	f000 82fb 	beq.w	9000f454 <HAL_RCCEx_PeriphCLKConfig+0x918>
9000ee5e:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000ee60:	0259      	lsls	r1, r3, #9
9000ee62:	f100 825a 	bmi.w	9000f31a <HAL_RCCEx_PeriphCLKConfig+0x7de>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000ee66:	07d8      	lsls	r0, r3, #31
9000ee68:	d52f      	bpl.n	9000eeca <HAL_RCCEx_PeriphCLKConfig+0x38e>
    switch (PeriphClkInit->Usart16ClockSelection)
9000ee6a:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000ee6c:	2928      	cmp	r1, #40	; 0x28
9000ee6e:	d82a      	bhi.n	9000eec6 <HAL_RCCEx_PeriphCLKConfig+0x38a>
9000ee70:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ee74:	002901fa 	.word	0x002901fa
9000ee78:	00290029 	.word	0x00290029
9000ee7c:	00290029 	.word	0x00290029
9000ee80:	00290029 	.word	0x00290029
9000ee84:	00290406 	.word	0x00290406
9000ee88:	00290029 	.word	0x00290029
9000ee8c:	00290029 	.word	0x00290029
9000ee90:	00290029 	.word	0x00290029
9000ee94:	002901f2 	.word	0x002901f2
9000ee98:	00290029 	.word	0x00290029
9000ee9c:	00290029 	.word	0x00290029
9000eea0:	00290029 	.word	0x00290029
9000eea4:	002901fa 	.word	0x002901fa
9000eea8:	00290029 	.word	0x00290029
9000eeac:	00290029 	.word	0x00290029
9000eeb0:	00290029 	.word	0x00290029
9000eeb4:	002901fa 	.word	0x002901fa
9000eeb8:	00290029 	.word	0x00290029
9000eebc:	00290029 	.word	0x00290029
9000eec0:	00290029 	.word	0x00290029
9000eec4:	01fa      	.short	0x01fa
9000eec6:	2601      	movs	r6, #1
9000eec8:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000eeca:	0799      	lsls	r1, r3, #30
9000eecc:	d517      	bpl.n	9000eefe <HAL_RCCEx_PeriphCLKConfig+0x3c2>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000eece:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000eed0:	2905      	cmp	r1, #5
9000eed2:	f200 8420 	bhi.w	9000f716 <HAL_RCCEx_PeriphCLKConfig+0xbda>
9000eed6:	e8df f011 	tbh	[pc, r1, lsl #1]
9000eeda:	000e      	.short	0x000e
9000eedc:	000603bb 	.word	0x000603bb
9000eee0:	000e000e 	.word	0x000e000e
9000eee4:	000e      	.short	0x000e
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000eee6:	2101      	movs	r1, #1
9000eee8:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eeec:	f7ff fdac 	bl	9000ea48 <RCCEx_PLL3_Config>
9000eef0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000eef2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000eef6:	2d00      	cmp	r5, #0
9000eef8:	f000 8299 	beq.w	9000f42e <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000eefc:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000eefe:	075f      	lsls	r7, r3, #29
9000ef00:	d518      	bpl.n	9000ef34 <HAL_RCCEx_PeriphCLKConfig+0x3f8>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000ef02:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000ef06:	2905      	cmp	r1, #5
9000ef08:	f200 840d 	bhi.w	9000f726 <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000ef0c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ef10:	03ac000e 	.word	0x03ac000e
9000ef14:	000e0006 	.word	0x000e0006
9000ef18:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000ef1c:	2101      	movs	r1, #1
9000ef1e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ef22:	f7ff fd91 	bl	9000ea48 <RCCEx_PLL3_Config>
9000ef26:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000ef28:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ef2c:	2d00      	cmp	r5, #0
9000ef2e:	f000 8286 	beq.w	9000f43e <HAL_RCCEx_PeriphCLKConfig+0x902>
9000ef32:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000ef34:	0698      	lsls	r0, r3, #26
9000ef36:	d51f      	bpl.n	9000ef78 <HAL_RCCEx_PeriphCLKConfig+0x43c>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000ef38:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000ef3c:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000ef40:	f000 8309 	beq.w	9000f556 <HAL_RCCEx_PeriphCLKConfig+0xa1a>
9000ef44:	f200 810b 	bhi.w	9000f15e <HAL_RCCEx_PeriphCLKConfig+0x622>
9000ef48:	b159      	cbz	r1, 9000ef62 <HAL_RCCEx_PeriphCLKConfig+0x426>
9000ef4a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000ef4e:	f040 8110 	bne.w	9000f172 <HAL_RCCEx_PeriphCLKConfig+0x636>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ef52:	2100      	movs	r1, #0
9000ef54:	f104 0008 	add.w	r0, r4, #8
9000ef58:	f7ff fcfc 	bl	9000e954 <RCCEx_PLL2_Config>
9000ef5c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000ef5e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ef62:	2d00      	cmp	r5, #0
9000ef64:	f040 825f 	bne.w	9000f426 <HAL_RCCEx_PeriphCLKConfig+0x8ea>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000ef68:	4fa6      	ldr	r7, [pc, #664]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ef6a:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000ef6e:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ef70:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000ef74:	4301      	orrs	r1, r0
9000ef76:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000ef78:	0659      	lsls	r1, r3, #25
9000ef7a:	d51f      	bpl.n	9000efbc <HAL_RCCEx_PeriphCLKConfig+0x480>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000ef7c:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000ef80:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000ef84:	f000 82b2 	beq.w	9000f4ec <HAL_RCCEx_PeriphCLKConfig+0x9b0>
9000ef88:	f200 80f6 	bhi.w	9000f178 <HAL_RCCEx_PeriphCLKConfig+0x63c>
9000ef8c:	b159      	cbz	r1, 9000efa6 <HAL_RCCEx_PeriphCLKConfig+0x46a>
9000ef8e:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000ef92:	f040 80fb 	bne.w	9000f18c <HAL_RCCEx_PeriphCLKConfig+0x650>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ef96:	2100      	movs	r1, #0
9000ef98:	f104 0008 	add.w	r0, r4, #8
9000ef9c:	f7ff fcda 	bl	9000e954 <RCCEx_PLL2_Config>
9000efa0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000efa2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000efa6:	2d00      	cmp	r5, #0
9000efa8:	f040 8262 	bne.w	9000f470 <HAL_RCCEx_PeriphCLKConfig+0x934>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000efac:	4f95      	ldr	r7, [pc, #596]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000efae:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000efb2:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000efb4:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000efb8:	4301      	orrs	r1, r0
9000efba:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000efbc:	061f      	lsls	r7, r3, #24
9000efbe:	d51f      	bpl.n	9000f000 <HAL_RCCEx_PeriphCLKConfig+0x4c4>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000efc0:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000efc4:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000efc8:	f000 829b 	beq.w	9000f502 <HAL_RCCEx_PeriphCLKConfig+0x9c6>
9000efcc:	f200 80e1 	bhi.w	9000f192 <HAL_RCCEx_PeriphCLKConfig+0x656>
9000efd0:	b159      	cbz	r1, 9000efea <HAL_RCCEx_PeriphCLKConfig+0x4ae>
9000efd2:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000efd6:	f040 80e6 	bne.w	9000f1a6 <HAL_RCCEx_PeriphCLKConfig+0x66a>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000efda:	2100      	movs	r1, #0
9000efdc:	f104 0008 	add.w	r0, r4, #8
9000efe0:	f7ff fcb8 	bl	9000e954 <RCCEx_PLL2_Config>
9000efe4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000efe6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000efea:	2d00      	cmp	r5, #0
9000efec:	f040 823c 	bne.w	9000f468 <HAL_RCCEx_PeriphCLKConfig+0x92c>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000eff0:	4f84      	ldr	r7, [pc, #528]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000eff2:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000eff6:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000eff8:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000effc:	4301      	orrs	r1, r0
9000effe:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000f000:	0718      	lsls	r0, r3, #28
9000f002:	d50b      	bpl.n	9000f01c <HAL_RCCEx_PeriphCLKConfig+0x4e0>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000f004:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000f008:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000f00c:	f000 82b8 	beq.w	9000f580 <HAL_RCCEx_PeriphCLKConfig+0xa44>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000f010:	4f7c      	ldr	r7, [pc, #496]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f012:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000f014:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000f018:	4301      	orrs	r1, r0
9000f01a:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000f01c:	06d9      	lsls	r1, r3, #27
9000f01e:	d50b      	bpl.n	9000f038 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000f020:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000f024:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000f028:	f000 82b7 	beq.w	9000f59a <HAL_RCCEx_PeriphCLKConfig+0xa5e>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000f02c:	4f75      	ldr	r7, [pc, #468]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f02e:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000f030:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000f034:	4301      	orrs	r1, r0
9000f036:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000f038:	031f      	lsls	r7, r3, #12
9000f03a:	d50e      	bpl.n	9000f05a <HAL_RCCEx_PeriphCLKConfig+0x51e>
    switch (PeriphClkInit->AdcClockSelection)
9000f03c:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000f040:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000f044:	f000 80f4 	beq.w	9000f230 <HAL_RCCEx_PeriphCLKConfig+0x6f4>
9000f048:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000f04c:	f000 80f8 	beq.w	9000f240 <HAL_RCCEx_PeriphCLKConfig+0x704>
9000f050:	2900      	cmp	r1, #0
9000f052:	f000 822e 	beq.w	9000f4b2 <HAL_RCCEx_PeriphCLKConfig+0x976>
9000f056:	2601      	movs	r6, #1
9000f058:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000f05a:	0358      	lsls	r0, r3, #13
9000f05c:	d50f      	bpl.n	9000f07e <HAL_RCCEx_PeriphCLKConfig+0x542>
    switch (PeriphClkInit->UsbClockSelection)
9000f05e:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000f062:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000f066:	f000 80cf 	beq.w	9000f208 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000f06a:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000f06e:	f000 80d3 	beq.w	9000f218 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000f072:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000f076:	f000 8214 	beq.w	9000f4a2 <HAL_RCCEx_PeriphCLKConfig+0x966>
9000f07a:	2601      	movs	r6, #1
9000f07c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000f07e:	03d9      	lsls	r1, r3, #15
9000f080:	d509      	bpl.n	9000f096 <HAL_RCCEx_PeriphCLKConfig+0x55a>
    switch (PeriphClkInit->SdmmcClockSelection)
9000f082:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000f084:	2900      	cmp	r1, #0
9000f086:	f000 8203 	beq.w	9000f490 <HAL_RCCEx_PeriphCLKConfig+0x954>
9000f08a:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000f08e:	f000 819d 	beq.w	9000f3cc <HAL_RCCEx_PeriphCLKConfig+0x890>
9000f092:	2601      	movs	r6, #1
9000f094:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000f096:	009f      	lsls	r7, r3, #2
9000f098:	f100 80f1 	bmi.w	9000f27e <HAL_RCCEx_PeriphCLKConfig+0x742>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000f09c:	0398      	lsls	r0, r3, #14
9000f09e:	d50c      	bpl.n	9000f0ba <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->RngClockSelection)
9000f0a0:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000f0a4:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000f0a8:	f000 81ea 	beq.w	9000f480 <HAL_RCCEx_PeriphCLKConfig+0x944>
9000f0ac:	d97e      	bls.n	9000f1ac <HAL_RCCEx_PeriphCLKConfig+0x670>
9000f0ae:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000f0b2:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000f0b6:	d07b      	beq.n	9000f1b0 <HAL_RCCEx_PeriphCLKConfig+0x674>
9000f0b8:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000f0ba:	02d9      	lsls	r1, r3, #11
9000f0bc:	d506      	bpl.n	9000f0cc <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000f0be:	4851      	ldr	r0, [pc, #324]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f0c0:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000f0c2:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000f0c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000f0c8:	4329      	orrs	r1, r5
9000f0ca:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000f0cc:	00df      	lsls	r7, r3, #3
9000f0ce:	d507      	bpl.n	9000f0e0 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000f0d0:	484c      	ldr	r0, [pc, #304]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f0d2:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000f0d6:	6901      	ldr	r1, [r0, #16]
9000f0d8:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000f0dc:	4329      	orrs	r1, r5
9000f0de:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000f0e0:	029d      	lsls	r5, r3, #10
9000f0e2:	d506      	bpl.n	9000f0f2 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000f0e4:	4847      	ldr	r0, [pc, #284]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f0e6:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000f0e8:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000f0ea:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000f0ee:	4329      	orrs	r1, r5
9000f0f0:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000f0f2:	0058      	lsls	r0, r3, #1
9000f0f4:	d509      	bpl.n	9000f10a <HAL_RCCEx_PeriphCLKConfig+0x5ce>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000f0f6:	4943      	ldr	r1, [pc, #268]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f0f8:	6908      	ldr	r0, [r1, #16]
9000f0fa:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000f0fe:	6108      	str	r0, [r1, #16]
9000f100:	6908      	ldr	r0, [r1, #16]
9000f102:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000f106:	4328      	orrs	r0, r5
9000f108:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000f10a:	2b00      	cmp	r3, #0
9000f10c:	da06      	bge.n	9000f11c <HAL_RCCEx_PeriphCLKConfig+0x5e0>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000f10e:	483d      	ldr	r0, [pc, #244]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f110:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000f112:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000f114:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000f118:	4329      	orrs	r1, r5
9000f11a:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000f11c:	0219      	lsls	r1, r3, #8
9000f11e:	d507      	bpl.n	9000f130 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000f120:	4938      	ldr	r1, [pc, #224]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f122:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000f126:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000f128:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000f12c:	4303      	orrs	r3, r0
9000f12e:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000f130:	07d3      	lsls	r3, r2, #31
9000f132:	f100 80b0 	bmi.w	9000f296 <HAL_RCCEx_PeriphCLKConfig+0x75a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000f136:	0797      	lsls	r7, r2, #30
9000f138:	f100 80ba 	bmi.w	9000f2b0 <HAL_RCCEx_PeriphCLKConfig+0x774>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000f13c:	0755      	lsls	r5, r2, #29
9000f13e:	f100 80c4 	bmi.w	9000f2ca <HAL_RCCEx_PeriphCLKConfig+0x78e>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000f142:	0710      	lsls	r0, r2, #28
9000f144:	f100 80ce 	bmi.w	9000f2e4 <HAL_RCCEx_PeriphCLKConfig+0x7a8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000f148:	06d1      	lsls	r1, r2, #27
9000f14a:	f100 80d8 	bmi.w	9000f2fe <HAL_RCCEx_PeriphCLKConfig+0x7c2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000f14e:	0692      	lsls	r2, r2, #26
9000f150:	f100 8125 	bmi.w	9000f39e <HAL_RCCEx_PeriphCLKConfig+0x862>
    return HAL_OK;
9000f154:	1e30      	subs	r0, r6, #0
9000f156:	bf18      	it	ne
9000f158:	2001      	movne	r0, #1
}
9000f15a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000f15e:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000f162:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000f166:	f43f aefc 	beq.w	9000ef62 <HAL_RCCEx_PeriphCLKConfig+0x426>
9000f16a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000f16e:	f43f aef8 	beq.w	9000ef62 <HAL_RCCEx_PeriphCLKConfig+0x426>
9000f172:	2601      	movs	r6, #1
9000f174:	4635      	mov	r5, r6
9000f176:	e6ff      	b.n	9000ef78 <HAL_RCCEx_PeriphCLKConfig+0x43c>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000f178:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000f17c:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000f180:	f43f af11 	beq.w	9000efa6 <HAL_RCCEx_PeriphCLKConfig+0x46a>
9000f184:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000f188:	f43f af0d 	beq.w	9000efa6 <HAL_RCCEx_PeriphCLKConfig+0x46a>
9000f18c:	2601      	movs	r6, #1
9000f18e:	4635      	mov	r5, r6
9000f190:	e714      	b.n	9000efbc <HAL_RCCEx_PeriphCLKConfig+0x480>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000f192:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000f196:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000f19a:	f43f af26 	beq.w	9000efea <HAL_RCCEx_PeriphCLKConfig+0x4ae>
9000f19e:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000f1a2:	f43f af22 	beq.w	9000efea <HAL_RCCEx_PeriphCLKConfig+0x4ae>
9000f1a6:	2601      	movs	r6, #1
9000f1a8:	4635      	mov	r5, r6
9000f1aa:	e729      	b.n	9000f000 <HAL_RCCEx_PeriphCLKConfig+0x4c4>
    switch (PeriphClkInit->RngClockSelection)
9000f1ac:	2900      	cmp	r1, #0
9000f1ae:	d183      	bne.n	9000f0b8 <HAL_RCCEx_PeriphCLKConfig+0x57c>
    if (ret == HAL_OK)
9000f1b0:	2d00      	cmp	r5, #0
9000f1b2:	f040 8163 	bne.w	9000f47c <HAL_RCCEx_PeriphCLKConfig+0x940>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000f1b6:	4d13      	ldr	r5, [pc, #76]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f1b8:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000f1ba:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000f1be:	4301      	orrs	r1, r0
9000f1c0:	6569      	str	r1, [r5, #84]	; 0x54
9000f1c2:	e77a      	b.n	9000f0ba <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->Sai1ClockSelection)
9000f1c4:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000f1c6:	2d00      	cmp	r5, #0
9000f1c8:	f040 80fb 	bne.w	9000f3c2 <HAL_RCCEx_PeriphCLKConfig+0x886>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000f1cc:	4f0d      	ldr	r7, [pc, #52]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f1ce:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000f1d0:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000f1d2:	f021 0107 	bic.w	r1, r1, #7
9000f1d6:	4301      	orrs	r1, r0
9000f1d8:	6539      	str	r1, [r7, #80]	; 0x50
9000f1da:	e4ea      	b.n	9000ebb2 <HAL_RCCEx_PeriphCLKConfig+0x76>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000f1dc:	2101      	movs	r1, #1
9000f1de:	f104 0008 	add.w	r0, r4, #8
9000f1e2:	f7ff fbb7 	bl	9000e954 <RCCEx_PLL2_Config>
9000f1e6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000f1e8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f1ec:	2d00      	cmp	r5, #0
9000f1ee:	f040 811c 	bne.w	9000f42a <HAL_RCCEx_PeriphCLKConfig+0x8ee>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000f1f2:	4f04      	ldr	r7, [pc, #16]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000f1f4:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000f1f6:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000f1f8:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000f1fc:	4301      	orrs	r1, r0
9000f1fe:	6539      	str	r1, [r7, #80]	; 0x50
9000f200:	e5cc      	b.n	9000ed9c <HAL_RCCEx_PeriphCLKConfig+0x260>
9000f202:	bf00      	nop
9000f204:	58024400 	.word	0x58024400
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f208:	2101      	movs	r1, #1
9000f20a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f20e:	f7ff fc1b 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f212:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000f214:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f218:	2d00      	cmp	r5, #0
9000f21a:	f040 812d 	bne.w	9000f478 <HAL_RCCEx_PeriphCLKConfig+0x93c>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000f21e:	4fb1      	ldr	r7, [pc, #708]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f220:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000f224:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000f226:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000f22a:	4301      	orrs	r1, r0
9000f22c:	6579      	str	r1, [r7, #84]	; 0x54
9000f22e:	e726      	b.n	9000f07e <HAL_RCCEx_PeriphCLKConfig+0x542>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f230:	2102      	movs	r1, #2
9000f232:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f236:	f7ff fc07 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f23a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000f23c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f240:	2d00      	cmp	r5, #0
9000f242:	f040 8117 	bne.w	9000f474 <HAL_RCCEx_PeriphCLKConfig+0x938>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000f246:	4fa7      	ldr	r7, [pc, #668]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f248:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000f24c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000f24e:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000f252:	4301      	orrs	r1, r0
9000f254:	65b9      	str	r1, [r7, #88]	; 0x58
9000f256:	e700      	b.n	9000f05a <HAL_RCCEx_PeriphCLKConfig+0x51e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f258:	2101      	movs	r1, #1
9000f25a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f25e:	f7ff fbf3 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f262:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000f264:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f268:	2d00      	cmp	r5, #0
9000f26a:	f040 80da 	bne.w	9000f422 <HAL_RCCEx_PeriphCLKConfig+0x8e6>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000f26e:	4f9d      	ldr	r7, [pc, #628]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f270:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000f272:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000f274:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000f278:	4301      	orrs	r1, r0
9000f27a:	6579      	str	r1, [r7, #84]	; 0x54
9000f27c:	e625      	b.n	9000eeca <HAL_RCCEx_PeriphCLKConfig+0x38e>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f27e:	2102      	movs	r1, #2
9000f280:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f284:	f7ff fbe0 	bl	9000ea48 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000f288:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f28c:	2800      	cmp	r0, #0
9000f28e:	f43f af05 	beq.w	9000f09c <HAL_RCCEx_PeriphCLKConfig+0x560>
      status = HAL_ERROR;
9000f292:	2601      	movs	r6, #1
9000f294:	e702      	b.n	9000f09c <HAL_RCCEx_PeriphCLKConfig+0x560>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000f296:	2100      	movs	r1, #0
9000f298:	f104 0008 	add.w	r0, r4, #8
9000f29c:	f7ff fb5a 	bl	9000e954 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000f2a0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000f2a2:	2800      	cmp	r0, #0
9000f2a4:	f43f af47 	beq.w	9000f136 <HAL_RCCEx_PeriphCLKConfig+0x5fa>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000f2a8:	0797      	lsls	r7, r2, #30
9000f2aa:	4606      	mov	r6, r0
9000f2ac:	f57f af46 	bpl.w	9000f13c <HAL_RCCEx_PeriphCLKConfig+0x600>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000f2b0:	2101      	movs	r1, #1
9000f2b2:	f104 0008 	add.w	r0, r4, #8
9000f2b6:	f7ff fb4d 	bl	9000e954 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000f2ba:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000f2bc:	2800      	cmp	r0, #0
9000f2be:	f43f af3d 	beq.w	9000f13c <HAL_RCCEx_PeriphCLKConfig+0x600>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000f2c2:	0755      	lsls	r5, r2, #29
9000f2c4:	4606      	mov	r6, r0
9000f2c6:	f57f af3c 	bpl.w	9000f142 <HAL_RCCEx_PeriphCLKConfig+0x606>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000f2ca:	2102      	movs	r1, #2
9000f2cc:	f104 0008 	add.w	r0, r4, #8
9000f2d0:	f7ff fb40 	bl	9000e954 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000f2d4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000f2d6:	2800      	cmp	r0, #0
9000f2d8:	f43f af33 	beq.w	9000f142 <HAL_RCCEx_PeriphCLKConfig+0x606>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000f2dc:	4606      	mov	r6, r0
9000f2de:	0710      	lsls	r0, r2, #28
9000f2e0:	f57f af32 	bpl.w	9000f148 <HAL_RCCEx_PeriphCLKConfig+0x60c>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f2e4:	2100      	movs	r1, #0
9000f2e6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f2ea:	f7ff fbad 	bl	9000ea48 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000f2ee:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000f2f0:	2800      	cmp	r0, #0
9000f2f2:	f43f af29 	beq.w	9000f148 <HAL_RCCEx_PeriphCLKConfig+0x60c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000f2f6:	06d1      	lsls	r1, r2, #27
9000f2f8:	4606      	mov	r6, r0
9000f2fa:	f57f af28 	bpl.w	9000f14e <HAL_RCCEx_PeriphCLKConfig+0x612>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f2fe:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000f302:	2101      	movs	r1, #1
9000f304:	4628      	mov	r0, r5
9000f306:	f7ff fb9f 	bl	9000ea48 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000f30a:	2800      	cmp	r0, #0
9000f30c:	f000 80db 	beq.w	9000f4c6 <HAL_RCCEx_PeriphCLKConfig+0x98a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000f310:	6863      	ldr	r3, [r4, #4]
9000f312:	069b      	lsls	r3, r3, #26
9000f314:	d54c      	bpl.n	9000f3b0 <HAL_RCCEx_PeriphCLKConfig+0x874>
9000f316:	4606      	mov	r6, r0
9000f318:	e043      	b.n	9000f3a2 <HAL_RCCEx_PeriphCLKConfig+0x866>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000f31a:	4f73      	ldr	r7, [pc, #460]	; (9000f4e8 <HAL_RCCEx_PeriphCLKConfig+0x9ac>)
9000f31c:	683b      	ldr	r3, [r7, #0]
9000f31e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000f322:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000f324:	f7fa fe4e 	bl	90009fc4 <HAL_GetTick>
9000f328:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000f32a:	e006      	b.n	9000f33a <HAL_RCCEx_PeriphCLKConfig+0x7fe>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000f32c:	f7fa fe4a 	bl	90009fc4 <HAL_GetTick>
9000f330:	eba0 0008 	sub.w	r0, r0, r8
9000f334:	2864      	cmp	r0, #100	; 0x64
9000f336:	f200 81af 	bhi.w	9000f698 <HAL_RCCEx_PeriphCLKConfig+0xb5c>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000f33a:	683b      	ldr	r3, [r7, #0]
9000f33c:	05da      	lsls	r2, r3, #23
9000f33e:	d5f5      	bpl.n	9000f32c <HAL_RCCEx_PeriphCLKConfig+0x7f0>
    if (ret == HAL_OK)
9000f340:	2d00      	cmp	r5, #0
9000f342:	f040 81e3 	bne.w	9000f70c <HAL_RCCEx_PeriphCLKConfig+0xbd0>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000f346:	4a67      	ldr	r2, [pc, #412]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f348:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000f34c:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000f34e:	4059      	eors	r1, r3
9000f350:	f411 7f40 	tst.w	r1, #768	; 0x300
9000f354:	d00b      	beq.n	9000f36e <HAL_RCCEx_PeriphCLKConfig+0x832>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000f356:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000f358:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000f35a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000f35e:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000f362:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000f364:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000f366:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000f36a:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000f36c:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000f36e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000f372:	f000 81ad 	beq.w	9000f6d0 <HAL_RCCEx_PeriphCLKConfig+0xb94>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000f376:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000f37a:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000f37e:	f000 81bb 	beq.w	9000f6f8 <HAL_RCCEx_PeriphCLKConfig+0xbbc>
9000f382:	4958      	ldr	r1, [pc, #352]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f384:	690a      	ldr	r2, [r1, #16]
9000f386:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000f38a:	610a      	str	r2, [r1, #16]
9000f38c:	4855      	ldr	r0, [pc, #340]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f38e:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000f392:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000f394:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f396:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000f39a:	6701      	str	r1, [r0, #112]	; 0x70
9000f39c:	e563      	b.n	9000ee66 <HAL_RCCEx_PeriphCLKConfig+0x32a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f39e:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f3a2:	2102      	movs	r1, #2
9000f3a4:	4628      	mov	r0, r5
9000f3a6:	f7ff fb4f 	bl	9000ea48 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000f3aa:	2800      	cmp	r0, #0
9000f3ac:	f43f aed2 	beq.w	9000f154 <HAL_RCCEx_PeriphCLKConfig+0x618>
  return HAL_ERROR;
9000f3b0:	2001      	movs	r0, #1
}
9000f3b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000f3b6:	462e      	mov	r6, r5
9000f3b8:	e463      	b.n	9000ec82 <HAL_RCCEx_PeriphCLKConfig+0x146>
9000f3ba:	462e      	mov	r6, r5
9000f3bc:	e419      	b.n	9000ebf2 <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000f3be:	462e      	mov	r6, r5
9000f3c0:	e49c      	b.n	9000ecfc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000f3c2:	462e      	mov	r6, r5
9000f3c4:	f7ff bbf5 	b.w	9000ebb2 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000f3c8:	462e      	mov	r6, r5
9000f3ca:	e436      	b.n	9000ec3a <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000f3cc:	2102      	movs	r1, #2
9000f3ce:	f104 0008 	add.w	r0, r4, #8
9000f3d2:	f7ff fabf 	bl	9000e954 <RCCEx_PLL2_Config>
9000f3d6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000f3d8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f3dc:	2d00      	cmp	r5, #0
9000f3de:	d15e      	bne.n	9000f49e <HAL_RCCEx_PeriphCLKConfig+0x962>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000f3e0:	4f40      	ldr	r7, [pc, #256]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f3e2:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000f3e4:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000f3e6:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000f3ea:	4301      	orrs	r1, r0
9000f3ec:	64f9      	str	r1, [r7, #76]	; 0x4c
9000f3ee:	e652      	b.n	9000f096 <HAL_RCCEx_PeriphCLKConfig+0x55a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f3f0:	483c      	ldr	r0, [pc, #240]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f3f2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f3f4:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f3f8:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f3fa:	e475      	b.n	9000ece8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f3fc:	4839      	ldr	r0, [pc, #228]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f3fe:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f400:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f404:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f406:	e431      	b.n	9000ec6c <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f408:	4836      	ldr	r0, [pc, #216]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f40a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f40c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f410:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f412:	f7ff bbe4 	b.w	9000ebde <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f416:	4833      	ldr	r0, [pc, #204]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f418:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f41a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f41e:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f420:	e400      	b.n	9000ec24 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000f422:	462e      	mov	r6, r5
9000f424:	e551      	b.n	9000eeca <HAL_RCCEx_PeriphCLKConfig+0x38e>
9000f426:	462e      	mov	r6, r5
9000f428:	e5a6      	b.n	9000ef78 <HAL_RCCEx_PeriphCLKConfig+0x43c>
9000f42a:	462e      	mov	r6, r5
9000f42c:	e4b6      	b.n	9000ed9c <HAL_RCCEx_PeriphCLKConfig+0x260>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000f42e:	4f2d      	ldr	r7, [pc, #180]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f430:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000f432:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000f434:	f021 0107 	bic.w	r1, r1, #7
9000f438:	4301      	orrs	r1, r0
9000f43a:	6579      	str	r1, [r7, #84]	; 0x54
9000f43c:	e55f      	b.n	9000eefe <HAL_RCCEx_PeriphCLKConfig+0x3c2>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000f43e:	4f29      	ldr	r7, [pc, #164]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f440:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000f444:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000f446:	f021 0107 	bic.w	r1, r1, #7
9000f44a:	4301      	orrs	r1, r0
9000f44c:	65b9      	str	r1, [r7, #88]	; 0x58
9000f44e:	e571      	b.n	9000ef34 <HAL_RCCEx_PeriphCLKConfig+0x3f8>
9000f450:	462e      	mov	r6, r5
9000f452:	e431      	b.n	9000ecb8 <HAL_RCCEx_PeriphCLKConfig+0x17c>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000f454:	4f23      	ldr	r7, [pc, #140]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f456:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000f458:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000f45a:	f021 0103 	bic.w	r1, r1, #3
9000f45e:	4301      	orrs	r1, r0
9000f460:	64f9      	str	r1, [r7, #76]	; 0x4c
9000f462:	e4fd      	b.n	9000ee60 <HAL_RCCEx_PeriphCLKConfig+0x324>
9000f464:	462e      	mov	r6, r5
9000f466:	e469      	b.n	9000ed3c <HAL_RCCEx_PeriphCLKConfig+0x200>
9000f468:	462e      	mov	r6, r5
9000f46a:	e5c9      	b.n	9000f000 <HAL_RCCEx_PeriphCLKConfig+0x4c4>
9000f46c:	462e      	mov	r6, r5
9000f46e:	e485      	b.n	9000ed7c <HAL_RCCEx_PeriphCLKConfig+0x240>
9000f470:	462e      	mov	r6, r5
9000f472:	e5a3      	b.n	9000efbc <HAL_RCCEx_PeriphCLKConfig+0x480>
9000f474:	462e      	mov	r6, r5
9000f476:	e5f0      	b.n	9000f05a <HAL_RCCEx_PeriphCLKConfig+0x51e>
9000f478:	462e      	mov	r6, r5
9000f47a:	e600      	b.n	9000f07e <HAL_RCCEx_PeriphCLKConfig+0x542>
9000f47c:	462e      	mov	r6, r5
9000f47e:	e61c      	b.n	9000f0ba <HAL_RCCEx_PeriphCLKConfig+0x57e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f480:	4f18      	ldr	r7, [pc, #96]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f482:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000f484:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000f488:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000f48a:	2d00      	cmp	r5, #0
9000f48c:	d1f6      	bne.n	9000f47c <HAL_RCCEx_PeriphCLKConfig+0x940>
9000f48e:	e692      	b.n	9000f1b6 <HAL_RCCEx_PeriphCLKConfig+0x67a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f490:	4814      	ldr	r0, [pc, #80]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f492:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f494:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f498:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000f49a:	2d00      	cmp	r5, #0
9000f49c:	d0a0      	beq.n	9000f3e0 <HAL_RCCEx_PeriphCLKConfig+0x8a4>
9000f49e:	462e      	mov	r6, r5
9000f4a0:	e5f9      	b.n	9000f096 <HAL_RCCEx_PeriphCLKConfig+0x55a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f4a2:	4810      	ldr	r0, [pc, #64]	; (9000f4e4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
9000f4a4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f4a6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f4aa:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000f4ac:	2d00      	cmp	r5, #0
9000f4ae:	d1e3      	bne.n	9000f478 <HAL_RCCEx_PeriphCLKConfig+0x93c>
9000f4b0:	e6b5      	b.n	9000f21e <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000f4b2:	f104 0008 	add.w	r0, r4, #8
9000f4b6:	f7ff fa4d 	bl	9000e954 <RCCEx_PLL2_Config>
9000f4ba:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000f4bc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f4c0:	2d00      	cmp	r5, #0
9000f4c2:	d1d7      	bne.n	9000f474 <HAL_RCCEx_PeriphCLKConfig+0x938>
9000f4c4:	e6bf      	b.n	9000f246 <HAL_RCCEx_PeriphCLKConfig+0x70a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000f4c6:	6862      	ldr	r2, [r4, #4]
9000f4c8:	e641      	b.n	9000f14e <HAL_RCCEx_PeriphCLKConfig+0x612>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000f4ca:	2102      	movs	r1, #2
9000f4cc:	f104 0008 	add.w	r0, r4, #8
9000f4d0:	f7ff fa40 	bl	9000e954 <RCCEx_PLL2_Config>
9000f4d4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000f4d6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f4da:	2d00      	cmp	r5, #0
9000f4dc:	d1b8      	bne.n	9000f450 <HAL_RCCEx_PeriphCLKConfig+0x914>
9000f4de:	f7ff bbe4 	b.w	9000ecaa <HAL_RCCEx_PeriphCLKConfig+0x16e>
9000f4e2:	bf00      	nop
9000f4e4:	58024400 	.word	0x58024400
9000f4e8:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f4ec:	2102      	movs	r1, #2
9000f4ee:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f4f2:	f7ff faa9 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f4f6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000f4f8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f4fc:	2d00      	cmp	r5, #0
9000f4fe:	d1b7      	bne.n	9000f470 <HAL_RCCEx_PeriphCLKConfig+0x934>
9000f500:	e554      	b.n	9000efac <HAL_RCCEx_PeriphCLKConfig+0x470>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f502:	2102      	movs	r1, #2
9000f504:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f508:	f7ff fa9e 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f50c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000f50e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f512:	2d00      	cmp	r5, #0
9000f514:	d1a8      	bne.n	9000f468 <HAL_RCCEx_PeriphCLKConfig+0x92c>
9000f516:	e56b      	b.n	9000eff0 <HAL_RCCEx_PeriphCLKConfig+0x4b4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f518:	4884      	ldr	r0, [pc, #528]	; (9000f72c <HAL_RCCEx_PeriphCLKConfig+0xbf0>)
9000f51a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f51c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f520:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000f522:	2d00      	cmp	r5, #0
9000f524:	d181      	bne.n	9000f42a <HAL_RCCEx_PeriphCLKConfig+0x8ee>
9000f526:	e664      	b.n	9000f1f2 <HAL_RCCEx_PeriphCLKConfig+0x6b6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f528:	2101      	movs	r1, #1
9000f52a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f52e:	f7ff fa8b 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f532:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000f534:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f538:	2d00      	cmp	r5, #0
9000f53a:	d193      	bne.n	9000f464 <HAL_RCCEx_PeriphCLKConfig+0x928>
9000f53c:	f7ff bbf7 	b.w	9000ed2e <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f540:	2101      	movs	r1, #1
9000f542:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f546:	f7ff fa7f 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f54a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000f54c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f550:	2d00      	cmp	r5, #0
9000f552:	d18b      	bne.n	9000f46c <HAL_RCCEx_PeriphCLKConfig+0x930>
9000f554:	e40a      	b.n	9000ed6c <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f556:	2102      	movs	r1, #2
9000f558:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f55c:	f7ff fa74 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f560:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000f562:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f566:	2d00      	cmp	r5, #0
9000f568:	f47f af5d 	bne.w	9000f426 <HAL_RCCEx_PeriphCLKConfig+0x8ea>
9000f56c:	e4fc      	b.n	9000ef68 <HAL_RCCEx_PeriphCLKConfig+0x42c>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f56e:	486f      	ldr	r0, [pc, #444]	; (9000f72c <HAL_RCCEx_PeriphCLKConfig+0xbf0>)
9000f570:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f572:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f576:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000f578:	2d00      	cmp	r5, #0
9000f57a:	f47f ac70 	bne.w	9000ee5e <HAL_RCCEx_PeriphCLKConfig+0x322>
9000f57e:	e769      	b.n	9000f454 <HAL_RCCEx_PeriphCLKConfig+0x918>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f580:	2102      	movs	r1, #2
9000f582:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f586:	f7ff fa5f 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f58a:	2800      	cmp	r0, #0
9000f58c:	f040 8094 	bne.w	9000f6b8 <HAL_RCCEx_PeriphCLKConfig+0xb7c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000f590:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000f594:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f598:	e53a      	b.n	9000f010 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f59a:	2102      	movs	r1, #2
9000f59c:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f5a0:	f7ff fa52 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f5a4:	2800      	cmp	r0, #0
9000f5a6:	f040 808d 	bne.w	9000f6c4 <HAL_RCCEx_PeriphCLKConfig+0xb88>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000f5aa:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000f5ae:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f5b2:	e53b      	b.n	9000f02c <HAL_RCCEx_PeriphCLKConfig+0x4f0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000f5b4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f5b8:	f7ff baed 	b.w	9000eb96 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f5bc:	2100      	movs	r1, #0
9000f5be:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f5c2:	f7ff fa41 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f5c6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000f5c8:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f5cc:	f7ff bb4e 	b.w	9000ec6c <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f5d0:	2100      	movs	r1, #0
9000f5d2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f5d6:	f7ff fa37 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f5da:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000f5dc:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f5e0:	e5f1      	b.n	9000f1c6 <HAL_RCCEx_PeriphCLKConfig+0x68a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f5e2:	2100      	movs	r1, #0
9000f5e4:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f5e8:	f7ff fa2e 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f5ec:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000f5ee:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f5f2:	f7ff baf4 	b.w	9000ebde <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f5f6:	2102      	movs	r1, #2
9000f5f8:	3028      	adds	r0, #40	; 0x28
9000f5fa:	f7ff fa25 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f5fe:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000f600:	2e00      	cmp	r6, #0
9000f602:	f43f aab9 	beq.w	9000eb78 <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000f606:	e7d5      	b.n	9000f5b4 <HAL_RCCEx_PeriphCLKConfig+0xa78>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f608:	4848      	ldr	r0, [pc, #288]	; (9000f72c <HAL_RCCEx_PeriphCLKConfig+0xbf0>)
        break;
9000f60a:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f60c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f60e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f612:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f614:	e5d7      	b.n	9000f1c6 <HAL_RCCEx_PeriphCLKConfig+0x68a>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000f616:	2100      	movs	r1, #0
9000f618:	f104 0008 	add.w	r0, r4, #8
9000f61c:	f7ff f99a 	bl	9000e954 <RCCEx_PLL2_Config>
9000f620:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000f622:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f626:	e5ce      	b.n	9000f1c6 <HAL_RCCEx_PeriphCLKConfig+0x68a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f628:	2100      	movs	r1, #0
9000f62a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f62e:	f7ff fa0b 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f632:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000f634:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f638:	f7ff bb56 	b.w	9000ece8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f63c:	2100      	movs	r1, #0
9000f63e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f642:	f7ff fa01 	bl	9000ea48 <RCCEx_PLL3_Config>
9000f646:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000f648:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f64c:	f7ff baea 	b.w	9000ec24 <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000f650:	2101      	movs	r1, #1
9000f652:	f104 0008 	add.w	r0, r4, #8
9000f656:	f7ff f97d 	bl	9000e954 <RCCEx_PLL2_Config>
9000f65a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000f65c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f660:	2d00      	cmp	r5, #0
9000f662:	f47f ac4b 	bne.w	9000eefc <HAL_RCCEx_PeriphCLKConfig+0x3c0>
9000f666:	e6e2      	b.n	9000f42e <HAL_RCCEx_PeriphCLKConfig+0x8f2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000f668:	2101      	movs	r1, #1
9000f66a:	f104 0008 	add.w	r0, r4, #8
9000f66e:	f7ff f971 	bl	9000e954 <RCCEx_PLL2_Config>
9000f672:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000f674:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f678:	2d00      	cmp	r5, #0
9000f67a:	f47f ac5a 	bne.w	9000ef32 <HAL_RCCEx_PeriphCLKConfig+0x3f6>
9000f67e:	e6de      	b.n	9000f43e <HAL_RCCEx_PeriphCLKConfig+0x902>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000f680:	2101      	movs	r1, #1
9000f682:	f104 0008 	add.w	r0, r4, #8
9000f686:	f7ff f965 	bl	9000e954 <RCCEx_PLL2_Config>
9000f68a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000f68c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f690:	2d00      	cmp	r5, #0
9000f692:	f47f aec6 	bne.w	9000f422 <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000f696:	e5ea      	b.n	9000f26e <HAL_RCCEx_PeriphCLKConfig+0x732>
            ret = HAL_TIMEOUT;
9000f698:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f69a:	e9d4 3200 	ldrd	r3, r2, [r4]
            ret = HAL_TIMEOUT;
9000f69e:	4635      	mov	r5, r6
9000f6a0:	f7ff bbe1 	b.w	9000ee66 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000f6a4:	2601      	movs	r6, #1
9000f6a6:	f7ff ba76 	b.w	9000eb96 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f6aa:	4d20      	ldr	r5, [pc, #128]	; (9000f72c <HAL_RCCEx_PeriphCLKConfig+0xbf0>)
9000f6ac:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000f6ae:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000f6b2:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000f6b4:	f7ff ba68 	b.w	9000eb88 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000f6b8:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000f6bc:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000f6be:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f6c2:	e4a5      	b.n	9000f010 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000f6c4:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000f6c8:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000f6ca:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f6ce:	e4ad      	b.n	9000f02c <HAL_RCCEx_PeriphCLKConfig+0x4f0>
        tickstart = HAL_GetTick();
9000f6d0:	f7fa fc78 	bl	90009fc4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f6d4:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000f72c <HAL_RCCEx_PeriphCLKConfig+0xbf0>
        tickstart = HAL_GetTick();
9000f6d8:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000f6da:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f6de:	e004      	b.n	9000f6ea <HAL_RCCEx_PeriphCLKConfig+0xbae>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000f6e0:	f7fa fc70 	bl	90009fc4 <HAL_GetTick>
9000f6e4:	1bc0      	subs	r0, r0, r7
9000f6e6:	4548      	cmp	r0, r9
9000f6e8:	d8d6      	bhi.n	9000f698 <HAL_RCCEx_PeriphCLKConfig+0xb5c>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f6ea:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000f6ee:	079b      	lsls	r3, r3, #30
9000f6f0:	d5f6      	bpl.n	9000f6e0 <HAL_RCCEx_PeriphCLKConfig+0xba4>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000f6f2:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000f6f6:	e63e      	b.n	9000f376 <HAL_RCCEx_PeriphCLKConfig+0x83a>
9000f6f8:	480c      	ldr	r0, [pc, #48]	; (9000f72c <HAL_RCCEx_PeriphCLKConfig+0xbf0>)
9000f6fa:	4a0d      	ldr	r2, [pc, #52]	; (9000f730 <HAL_RCCEx_PeriphCLKConfig+0xbf4>)
9000f6fc:	6901      	ldr	r1, [r0, #16]
9000f6fe:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000f702:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000f706:	430a      	orrs	r2, r1
9000f708:	6102      	str	r2, [r0, #16]
9000f70a:	e63f      	b.n	9000f38c <HAL_RCCEx_PeriphCLKConfig+0x850>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f70c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f710:	462e      	mov	r6, r5
9000f712:	f7ff bba8 	b.w	9000ee66 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000f716:	2601      	movs	r6, #1
9000f718:	4635      	mov	r5, r6
9000f71a:	f7ff bbf0 	b.w	9000eefe <HAL_RCCEx_PeriphCLKConfig+0x3c2>
    switch (PeriphClkInit->FmcClockSelection)
9000f71e:	2601      	movs	r6, #1
9000f720:	4635      	mov	r5, r6
9000f722:	f7ff bb9d 	b.w	9000ee60 <HAL_RCCEx_PeriphCLKConfig+0x324>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000f726:	2601      	movs	r6, #1
9000f728:	4635      	mov	r5, r6
9000f72a:	e403      	b.n	9000ef34 <HAL_RCCEx_PeriphCLKConfig+0x3f8>
9000f72c:	58024400 	.word	0x58024400
9000f730:	00ffffcf 	.word	0x00ffffcf

9000f734 <HAL_RCCEx_GetD3PCLK1Freq>:
{
9000f734:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9000f736:	f7ff f811 	bl	9000e75c <HAL_RCC_GetHCLKFreq>
9000f73a:	4b05      	ldr	r3, [pc, #20]	; (9000f750 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9000f73c:	4a05      	ldr	r2, [pc, #20]	; (9000f754 <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9000f73e:	6a1b      	ldr	r3, [r3, #32]
9000f740:	f3c3 1302 	ubfx	r3, r3, #4, #3
9000f744:	5cd3      	ldrb	r3, [r2, r3]
9000f746:	f003 031f 	and.w	r3, r3, #31
}
9000f74a:	40d8      	lsrs	r0, r3
9000f74c:	bd08      	pop	{r3, pc}
9000f74e:	bf00      	nop
9000f750:	58024400 	.word	0x58024400
9000f754:	9002fab4 	.word	0x9002fab4

9000f758 <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000f758:	4b58      	ldr	r3, [pc, #352]	; (9000f8bc <HAL_RCCEx_GetPLL2ClockFreq+0x164>)
{
9000f75a:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000f75c:	6a99      	ldr	r1, [r3, #40]	; 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000f75e:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000f760:	6ade      	ldr	r6, [r3, #44]	; 0x2c
  if (pll2m != 0U)
9000f762:	f415 3f7c 	tst.w	r5, #258048	; 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000f766:	f3c5 3205 	ubfx	r2, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000f76a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
  if (pll2m != 0U)
9000f76c:	d05c      	beq.n	9000f828 <HAL_RCCEx_GetPLL2ClockFreq+0xd0>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000f76e:	f3c4 04cc 	ubfx	r4, r4, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000f772:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000f776:	f001 0103 	and.w	r1, r1, #3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000f77a:	fb06 f404 	mul.w	r4, r6, r4
    switch (pllsource)
9000f77e:	2901      	cmp	r1, #1
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000f780:	ee07 4a90 	vmov	s15, r4
9000f784:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    switch (pllsource)
9000f788:	d003      	beq.n	9000f792 <HAL_RCCEx_GetPLL2ClockFreq+0x3a>
9000f78a:	2902      	cmp	r1, #2
9000f78c:	d075      	beq.n	9000f87a <HAL_RCCEx_GetPLL2ClockFreq+0x122>
9000f78e:	2900      	cmp	r1, #0
9000f790:	d04f      	beq.n	9000f832 <HAL_RCCEx_GetPLL2ClockFreq+0xda>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000f792:	ee07 2a90 	vmov	s15, r2
9000f796:	eddf 6a4a 	vldr	s13, [pc, #296]	; 9000f8c0 <HAL_RCCEx_GetPLL2ClockFreq+0x168>
9000f79a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f79e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000f7a0:	ee86 6aa7 	vdiv.f32	s12, s13, s15
9000f7a4:	ed9f 5a47 	vldr	s10, [pc, #284]	; 9000f8c4 <HAL_RCCEx_GetPLL2ClockFreq+0x16c>
9000f7a8:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000f7ac:	ee06 3a90 	vmov	s13, r3
9000f7b0:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000f7b4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000f7b8:	eee7 6a05 	vfma.f32	s13, s14, s10
9000f7bc:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000f7c0:	ee66 6a26 	vmul.f32	s13, s12, s13
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000f7c4:	4a3d      	ldr	r2, [pc, #244]	; (9000f8bc <HAL_RCCEx_GetPLL2ClockFreq+0x164>)
9000f7c6:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000f7ca:	6b93      	ldr	r3, [r2, #56]	; 0x38
9000f7cc:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000f7d0:	ee07 3a10 	vmov	s14, r3
9000f7d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000f7d8:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000f7da:	ee37 7a06 	vadd.f32	s14, s14, s12
9000f7de:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000f7e2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000f7e6:	edc0 7a00 	vstr	s15, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9000f7ea:	6b93      	ldr	r3, [r2, #56]	; 0x38
9000f7ec:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000f7f0:	ee07 3a10 	vmov	s14, r3
9000f7f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000f7f8:	ee37 7a06 	vadd.f32	s14, s14, s12
9000f7fc:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000f800:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000f804:	edc0 7a01 	vstr	s15, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000f808:	6b93      	ldr	r3, [r2, #56]	; 0x38
9000f80a:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000f80e:	ee07 3a90 	vmov	s15, r3
9000f812:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f816:	ee77 7a86 	vadd.f32	s15, s15, s12
9000f81a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9000f81e:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9000f822:	ed80 7a02 	vstr	s14, [r0, #8]
}
9000f826:	4770      	bx	lr
9000f828:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
9000f82a:	e9c0 2200 	strd	r2, r2, [r0]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
9000f82e:	6082      	str	r2, [r0, #8]
}
9000f830:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000f832:	6819      	ldr	r1, [r3, #0]
9000f834:	0689      	lsls	r1, r1, #26
9000f836:	d527      	bpl.n	9000f888 <HAL_RCCEx_GetPLL2ClockFreq+0x130>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000f838:	681c      	ldr	r4, [r3, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000f83a:	ee07 2a90 	vmov	s15, r2
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000f83e:	4922      	ldr	r1, [pc, #136]	; (9000f8c8 <HAL_RCCEx_GetPLL2ClockFreq+0x170>)
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000f840:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000f844:	6b9b      	ldr	r3, [r3, #56]	; 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000f846:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000f84a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f84e:	ed9f 5a1d 	vldr	s10, [pc, #116]	; 9000f8c4 <HAL_RCCEx_GetPLL2ClockFreq+0x16c>
9000f852:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000f856:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000f858:	ee06 3a90 	vmov	s13, r3
9000f85c:	ee06 1a10 	vmov	s12, r1
9000f860:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000f864:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000f868:	eee7 6a05 	vfma.f32	s13, s14, s10
9000f86c:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000f870:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000f874:	ee66 6a87 	vmul.f32	s13, s13, s14
9000f878:	e7a4      	b.n	9000f7c4 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000f87a:	ee07 2a90 	vmov	s15, r2
9000f87e:	eddf 6a13 	vldr	s13, [pc, #76]	; 9000f8cc <HAL_RCCEx_GetPLL2ClockFreq+0x174>
9000f882:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f886:	e78a      	b.n	9000f79e <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000f888:	ee07 2a90 	vmov	s15, r2
9000f88c:	ed9f 5a10 	vldr	s10, [pc, #64]	; 9000f8d0 <HAL_RCCEx_GetPLL2ClockFreq+0x178>
9000f890:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000f892:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000f896:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f89a:	eddf 5a0a 	vldr	s11, [pc, #40]	; 9000f8c4 <HAL_RCCEx_GetPLL2ClockFreq+0x16c>
9000f89e:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000f8a2:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000f8a6:	ee07 3a90 	vmov	s15, r3
9000f8aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f8ae:	eee7 7a25 	vfma.f32	s15, s14, s11
9000f8b2:	ee77 7a86 	vadd.f32	s15, s15, s12
9000f8b6:	ee66 6aa7 	vmul.f32	s13, s13, s15
9000f8ba:	e783      	b.n	9000f7c4 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
9000f8bc:	58024400 	.word	0x58024400
9000f8c0:	4a742400 	.word	0x4a742400
9000f8c4:	39000000 	.word	0x39000000
9000f8c8:	03d09000 	.word	0x03d09000
9000f8cc:	4bbebc20 	.word	0x4bbebc20
9000f8d0:	4c742400 	.word	0x4c742400

9000f8d4 <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000f8d4:	4b58      	ldr	r3, [pc, #352]	; (9000fa38 <HAL_RCCEx_GetPLL3ClockFreq+0x164>)
{
9000f8d6:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000f8d8:	6a99      	ldr	r1, [r3, #40]	; 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000f8da:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000f8dc:	6ade      	ldr	r6, [r3, #44]	; 0x2c
  if (pll3m != 0U)
9000f8de:	f015 7f7c 	tst.w	r5, #66060288	; 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000f8e2:	f3c5 5205 	ubfx	r2, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000f8e6:	6c5c      	ldr	r4, [r3, #68]	; 0x44
  if (pll3m != 0U)
9000f8e8:	d05c      	beq.n	9000f9a4 <HAL_RCCEx_GetPLL3ClockFreq+0xd0>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000f8ea:	f3c4 04cc 	ubfx	r4, r4, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000f8ee:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000f8f2:	f001 0103 	and.w	r1, r1, #3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000f8f6:	fb06 f404 	mul.w	r4, r6, r4
    switch (pllsource)
9000f8fa:	2901      	cmp	r1, #1
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000f8fc:	ee07 4a90 	vmov	s15, r4
9000f900:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    switch (pllsource)
9000f904:	d003      	beq.n	9000f90e <HAL_RCCEx_GetPLL3ClockFreq+0x3a>
9000f906:	2902      	cmp	r1, #2
9000f908:	d075      	beq.n	9000f9f6 <HAL_RCCEx_GetPLL3ClockFreq+0x122>
9000f90a:	2900      	cmp	r1, #0
9000f90c:	d04f      	beq.n	9000f9ae <HAL_RCCEx_GetPLL3ClockFreq+0xda>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000f90e:	ee07 2a90 	vmov	s15, r2
9000f912:	eddf 6a4a 	vldr	s13, [pc, #296]	; 9000fa3c <HAL_RCCEx_GetPLL3ClockFreq+0x168>
9000f916:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f91a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9000f91c:	ee86 6aa7 	vdiv.f32	s12, s13, s15
9000f920:	ed9f 5a47 	vldr	s10, [pc, #284]	; 9000fa40 <HAL_RCCEx_GetPLL3ClockFreq+0x16c>
9000f924:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000f928:	ee06 3a90 	vmov	s13, r3
9000f92c:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000f930:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000f934:	eee7 6a05 	vfma.f32	s13, s14, s10
9000f938:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000f93c:	ee66 6a26 	vmul.f32	s13, s12, s13
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000f940:	4a3d      	ldr	r2, [pc, #244]	; (9000fa38 <HAL_RCCEx_GetPLL3ClockFreq+0x164>)
9000f942:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000f946:	6c13      	ldr	r3, [r2, #64]	; 0x40
9000f948:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000f94c:	ee07 3a10 	vmov	s14, r3
9000f950:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000f954:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000f956:	ee37 7a06 	vadd.f32	s14, s14, s12
9000f95a:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000f95e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000f962:	edc0 7a00 	vstr	s15, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
9000f966:	6c13      	ldr	r3, [r2, #64]	; 0x40
9000f968:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000f96c:	ee07 3a10 	vmov	s14, r3
9000f970:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000f974:	ee37 7a06 	vadd.f32	s14, s14, s12
9000f978:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000f97c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000f980:	edc0 7a01 	vstr	s15, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000f984:	6c13      	ldr	r3, [r2, #64]	; 0x40
9000f986:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000f98a:	ee07 3a90 	vmov	s15, r3
9000f98e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f992:	ee77 7a86 	vadd.f32	s15, s15, s12
9000f996:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9000f99a:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9000f99e:	ed80 7a02 	vstr	s14, [r0, #8]
}
9000f9a2:	4770      	bx	lr
9000f9a4:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
9000f9a6:	e9c0 2200 	strd	r2, r2, [r0]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
9000f9aa:	6082      	str	r2, [r0, #8]
}
9000f9ac:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000f9ae:	6819      	ldr	r1, [r3, #0]
9000f9b0:	0689      	lsls	r1, r1, #26
9000f9b2:	d527      	bpl.n	9000fa04 <HAL_RCCEx_GetPLL3ClockFreq+0x130>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000f9b4:	681c      	ldr	r4, [r3, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000f9b6:	ee07 2a90 	vmov	s15, r2
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000f9ba:	4922      	ldr	r1, [pc, #136]	; (9000fa44 <HAL_RCCEx_GetPLL3ClockFreq+0x170>)
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000f9bc:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000f9c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000f9c2:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000f9c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f9ca:	ed9f 5a1d 	vldr	s10, [pc, #116]	; 9000fa40 <HAL_RCCEx_GetPLL3ClockFreq+0x16c>
9000f9ce:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000f9d2:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000f9d4:	ee06 3a90 	vmov	s13, r3
9000f9d8:	ee06 1a10 	vmov	s12, r1
9000f9dc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000f9e0:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000f9e4:	eee7 6a05 	vfma.f32	s13, s14, s10
9000f9e8:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000f9ec:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000f9f0:	ee66 6a87 	vmul.f32	s13, s13, s14
9000f9f4:	e7a4      	b.n	9000f940 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000f9f6:	ee07 2a90 	vmov	s15, r2
9000f9fa:	eddf 6a13 	vldr	s13, [pc, #76]	; 9000fa48 <HAL_RCCEx_GetPLL3ClockFreq+0x174>
9000f9fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000fa02:	e78a      	b.n	9000f91a <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000fa04:	ee07 2a90 	vmov	s15, r2
9000fa08:	ed9f 5a10 	vldr	s10, [pc, #64]	; 9000fa4c <HAL_RCCEx_GetPLL3ClockFreq+0x178>
9000fa0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9000fa0e:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000fa12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000fa16:	eddf 5a0a 	vldr	s11, [pc, #40]	; 9000fa40 <HAL_RCCEx_GetPLL3ClockFreq+0x16c>
9000fa1a:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000fa1e:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000fa22:	ee07 3a90 	vmov	s15, r3
9000fa26:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000fa2a:	eee7 7a25 	vfma.f32	s15, s14, s11
9000fa2e:	ee77 7a86 	vadd.f32	s15, s15, s12
9000fa32:	ee66 6aa7 	vmul.f32	s13, s13, s15
9000fa36:	e783      	b.n	9000f940 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
9000fa38:	58024400 	.word	0x58024400
9000fa3c:	4a742400 	.word	0x4a742400
9000fa40:	39000000 	.word	0x39000000
9000fa44:	03d09000 	.word	0x03d09000
9000fa48:	4bbebc20 	.word	0x4bbebc20
9000fa4c:	4c742400 	.word	0x4c742400

9000fa50 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000fa50:	b318      	cbz	r0, 9000fa9a <HAL_SDRAM_Init+0x4a>
{
9000fa52:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000fa54:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000fa58:	4604      	mov	r4, r0
9000fa5a:	460d      	mov	r5, r1
9000fa5c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000fa60:	b1b3      	cbz	r3, 9000fa90 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000fa62:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000fa64:	2302      	movs	r3, #2
9000fa66:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000fa6a:	f851 0b04 	ldr.w	r0, [r1], #4
9000fa6e:	f001 f86f 	bl	90010b50 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000fa72:	6862      	ldr	r2, [r4, #4]
9000fa74:	4629      	mov	r1, r5
9000fa76:	6820      	ldr	r0, [r4, #0]
9000fa78:	f001 f8a8 	bl	90010bcc <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000fa7c:	4a08      	ldr	r2, [pc, #32]	; (9000faa0 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000fa7e:	2101      	movs	r1, #1

  return HAL_OK;
9000fa80:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000fa82:	6813      	ldr	r3, [r2, #0]
9000fa84:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000fa88:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000fa8a:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000fa8e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000fa90:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000fa94:	f7f5 fbda 	bl	9000524c <HAL_SDRAM_MspInit>
9000fa98:	e7e3      	b.n	9000fa62 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000fa9a:	2001      	movs	r0, #1
}
9000fa9c:	4770      	bx	lr
9000fa9e:	bf00      	nop
9000faa0:	52004000 	.word	0x52004000

9000faa4 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000faa4:	b510      	push	{r4, lr}
9000faa6:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000faa8:	f7f5 fc4c 	bl	90005344 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000faac:	e9d4 0100 	ldrd	r0, r1, [r4]
9000fab0:	f001 f8d8 	bl	90010c64 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000fab4:	2000      	movs	r0, #0
9000fab6:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000faba:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000fabe:	bd10      	pop	{r4, pc}

9000fac0 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000fac0:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000fac2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000fac6:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000fac8:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000faca:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000facc:	d004      	beq.n	9000fad8 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000face:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000fad2:	2e01      	cmp	r6, #1
9000fad4:	d001      	beq.n	9000fada <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000fad6:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000fad8:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000fada:	2302      	movs	r3, #2
9000fadc:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000fade:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000fae0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000fae4:	f001 f8d2 	bl	90010c8c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000fae8:	682b      	ldr	r3, [r5, #0]
9000faea:	2b02      	cmp	r3, #2
9000faec:	d003      	beq.n	9000faf6 <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000faee:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000faf0:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000faf4:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000faf6:	2305      	movs	r3, #5
  return HAL_OK;
9000faf8:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000fafa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000fafe:	bd70      	pop	{r4, r5, r6, pc}

9000fb00 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000fb00:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000fb02:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000fb06:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000fb08:	2b02      	cmp	r3, #2
9000fb0a:	b2d8      	uxtb	r0, r3
9000fb0c:	d005      	beq.n	9000fb1a <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000fb0e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000fb12:	2b01      	cmp	r3, #1
9000fb14:	b2dd      	uxtb	r5, r3
9000fb16:	d001      	beq.n	9000fb1c <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000fb18:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000fb1a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000fb1c:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000fb1e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000fb20:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000fb24:	f001 f8ca 	bl	90010cbc <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000fb28:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000fb2a:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000fb2e:	bd38      	pop	{r3, r4, r5, pc}

9000fb30 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000fb30:	4770      	bx	lr
9000fb32:	bf00      	nop

9000fb34 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000fb34:	2800      	cmp	r0, #0
9000fb36:	f000 80a5 	beq.w	9000fc84 <HAL_TIM_Base_Init+0x150>
{
9000fb3a:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000fb3c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000fb40:	4604      	mov	r4, r0
9000fb42:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000fb46:	2b00      	cmp	r3, #0
9000fb48:	d076      	beq.n	9000fc38 <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000fb4a:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000fb4c:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000fb4e:	494e      	ldr	r1, [pc, #312]	; (9000fc88 <HAL_TIM_Base_Init+0x154>)
9000fb50:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000fb54:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000fb58:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000fb5c:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000fb5e:	fab1 f181 	clz	r1, r1
9000fb62:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000fb66:	d027      	beq.n	9000fbb8 <HAL_TIM_Base_Init+0x84>
9000fb68:	bb31      	cbnz	r1, 9000fbb8 <HAL_TIM_Base_Init+0x84>
9000fb6a:	4848      	ldr	r0, [pc, #288]	; (9000fc8c <HAL_TIM_Base_Init+0x158>)
9000fb6c:	4d48      	ldr	r5, [pc, #288]	; (9000fc90 <HAL_TIM_Base_Init+0x15c>)
9000fb6e:	4282      	cmp	r2, r0
9000fb70:	d067      	beq.n	9000fc42 <HAL_TIM_Base_Init+0x10e>
9000fb72:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000fb76:	4282      	cmp	r2, r0
9000fb78:	d063      	beq.n	9000fc42 <HAL_TIM_Base_Init+0x10e>
9000fb7a:	1b55      	subs	r5, r2, r5
9000fb7c:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000fb80:	fab5 f585 	clz	r5, r5
9000fb84:	4282      	cmp	r2, r0
9000fb86:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000fb8a:	d063      	beq.n	9000fc54 <HAL_TIM_Base_Init+0x120>
9000fb8c:	2d00      	cmp	r5, #0
9000fb8e:	d161      	bne.n	9000fc54 <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000fb90:	4840      	ldr	r0, [pc, #256]	; (9000fc94 <HAL_TIM_Base_Init+0x160>)
9000fb92:	4941      	ldr	r1, [pc, #260]	; (9000fc98 <HAL_TIM_Base_Init+0x164>)
9000fb94:	428a      	cmp	r2, r1
9000fb96:	bf18      	it	ne
9000fb98:	4282      	cmpne	r2, r0
9000fb9a:	d065      	beq.n	9000fc68 <HAL_TIM_Base_Init+0x134>
9000fb9c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000fba0:	428a      	cmp	r2, r1
9000fba2:	d061      	beq.n	9000fc68 <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000fba4:	69a0      	ldr	r0, [r4, #24]
9000fba6:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000fbaa:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000fbac:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000fbae:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000fbb0:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000fbb2:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000fbb4:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000fbb6:	e023      	b.n	9000fc00 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000fbb8:	4d35      	ldr	r5, [pc, #212]	; (9000fc90 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000fbba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000fbbe:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000fbc0:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000fbc2:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000fbc4:	fab5 f585 	clz	r5, r5
9000fbc8:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000fbca:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000fbcc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000fbd0:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000fbd2:	69a0      	ldr	r0, [r4, #24]
9000fbd4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000fbd8:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000fbda:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000fbdc:	68e3      	ldr	r3, [r4, #12]
9000fbde:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000fbe0:	6863      	ldr	r3, [r4, #4]
9000fbe2:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000fbe4:	b951      	cbnz	r1, 9000fbfc <HAL_TIM_Base_Init+0xc8>
9000fbe6:	b94d      	cbnz	r5, 9000fbfc <HAL_TIM_Base_Init+0xc8>
9000fbe8:	492a      	ldr	r1, [pc, #168]	; (9000fc94 <HAL_TIM_Base_Init+0x160>)
9000fbea:	4b2b      	ldr	r3, [pc, #172]	; (9000fc98 <HAL_TIM_Base_Init+0x164>)
9000fbec:	429a      	cmp	r2, r3
9000fbee:	bf18      	it	ne
9000fbf0:	428a      	cmpne	r2, r1
9000fbf2:	d003      	beq.n	9000fbfc <HAL_TIM_Base_Init+0xc8>
9000fbf4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000fbf8:	429a      	cmp	r2, r3
9000fbfa:	d101      	bne.n	9000fc00 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000fbfc:	6963      	ldr	r3, [r4, #20]
9000fbfe:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000fc00:	2301      	movs	r3, #1
  return HAL_OK;
9000fc02:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000fc04:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000fc06:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000fc0a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000fc0e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000fc12:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000fc16:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000fc1a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000fc1e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000fc22:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000fc26:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000fc2a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000fc2e:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000fc32:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000fc36:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000fc38:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000fc3c:	f7ff ff78 	bl	9000fb30 <HAL_TIM_Base_MspInit>
9000fc40:	e783      	b.n	9000fb4a <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000fc42:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000fc44:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000fc48:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000fc4a:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000fc4e:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000fc50:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000fc52:	e7ba      	b.n	9000fbca <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000fc54:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000fc56:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000fc5a:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000fc5c:	480f      	ldr	r0, [pc, #60]	; (9000fc9c <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000fc5e:	4282      	cmp	r2, r0
9000fc60:	d0b3      	beq.n	9000fbca <HAL_TIM_Base_Init+0x96>
9000fc62:	2d00      	cmp	r5, #0
9000fc64:	d1b1      	bne.n	9000fbca <HAL_TIM_Base_Init+0x96>
9000fc66:	e793      	b.n	9000fb90 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000fc68:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000fc6a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000fc6e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000fc70:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000fc72:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000fc74:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000fc78:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000fc7a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000fc7c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000fc7e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000fc80:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000fc82:	e7b1      	b.n	9000fbe8 <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000fc84:	2001      	movs	r0, #1
}
9000fc86:	4770      	bx	lr
9000fc88:	40010000 	.word	0x40010000
9000fc8c:	40000400 	.word	0x40000400
9000fc90:	40010400 	.word	0x40010400
9000fc94:	40014000 	.word	0x40014000
9000fc98:	40014400 	.word	0x40014400
9000fc9c:	40000c00 	.word	0x40000c00

9000fca0 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000fca0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000fca4:	2b01      	cmp	r3, #1
9000fca6:	d141      	bne.n	9000fd2c <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000fca8:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000fcaa:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000fcac:	4b24      	ldr	r3, [pc, #144]	; (9000fd40 <HAL_TIM_Base_Start_IT+0xa0>)
9000fcae:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000fcb2:	bf18      	it	ne
9000fcb4:	429a      	cmpne	r2, r3
{
9000fcb6:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000fcb8:	bf0c      	ite	eq
9000fcba:	2301      	moveq	r3, #1
9000fcbc:	2300      	movne	r3, #0
9000fcbe:	4d21      	ldr	r5, [pc, #132]	; (9000fd44 <HAL_TIM_Base_Start_IT+0xa4>)
9000fcc0:	4c21      	ldr	r4, [pc, #132]	; (9000fd48 <HAL_TIM_Base_Start_IT+0xa8>)
9000fcc2:	42aa      	cmp	r2, r5
9000fcc4:	bf08      	it	eq
9000fcc6:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000fcca:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000fcce:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000fcd0:	42a2      	cmp	r2, r4
9000fcd2:	bf08      	it	eq
9000fcd4:	f043 0301 	orreq.w	r3, r3, #1
9000fcd8:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000fcdc:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000fce0:	481a      	ldr	r0, [pc, #104]	; (9000fd4c <HAL_TIM_Base_Start_IT+0xac>)
9000fce2:	42a2      	cmp	r2, r4
9000fce4:	bf08      	it	eq
9000fce6:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000fcea:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000fcec:	4282      	cmp	r2, r0
9000fcee:	bf08      	it	eq
9000fcf0:	f043 0301 	orreq.w	r3, r3, #1
9000fcf4:	4916      	ldr	r1, [pc, #88]	; (9000fd50 <HAL_TIM_Base_Start_IT+0xb0>)
9000fcf6:	428a      	cmp	r2, r1
9000fcf8:	bf08      	it	eq
9000fcfa:	f043 0301 	orreq.w	r3, r3, #1
9000fcfe:	b933      	cbnz	r3, 9000fd0e <HAL_TIM_Base_Start_IT+0x6e>
9000fd00:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000fd04:	1a10      	subs	r0, r2, r0
9000fd06:	fab0 f080 	clz	r0, r0
9000fd0a:	0940      	lsrs	r0, r0, #5
9000fd0c:	b198      	cbz	r0, 9000fd36 <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000fd0e:	6891      	ldr	r1, [r2, #8]
9000fd10:	4b10      	ldr	r3, [pc, #64]	; (9000fd54 <HAL_TIM_Base_Start_IT+0xb4>)
9000fd12:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000fd14:	2b06      	cmp	r3, #6
9000fd16:	d00b      	beq.n	9000fd30 <HAL_TIM_Base_Start_IT+0x90>
9000fd18:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000fd1c:	d008      	beq.n	9000fd30 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000fd1e:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000fd20:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000fd22:	f043 0301 	orr.w	r3, r3, #1
9000fd26:	6013      	str	r3, [r2, #0]
}
9000fd28:	bc30      	pop	{r4, r5}
9000fd2a:	4770      	bx	lr
    return HAL_ERROR;
9000fd2c:	2001      	movs	r0, #1
}
9000fd2e:	4770      	bx	lr
  return HAL_OK;
9000fd30:	2000      	movs	r0, #0
}
9000fd32:	bc30      	pop	{r4, r5}
9000fd34:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000fd36:	6813      	ldr	r3, [r2, #0]
9000fd38:	f043 0301 	orr.w	r3, r3, #1
9000fd3c:	6013      	str	r3, [r2, #0]
9000fd3e:	e7f3      	b.n	9000fd28 <HAL_TIM_Base_Start_IT+0x88>
9000fd40:	40010000 	.word	0x40010000
9000fd44:	40000400 	.word	0x40000400
9000fd48:	40000800 	.word	0x40000800
9000fd4c:	40010400 	.word	0x40010400
9000fd50:	40001800 	.word	0x40001800
9000fd54:	00010007 	.word	0x00010007

9000fd58 <HAL_TIM_OC_DelayElapsedCallback>:
9000fd58:	4770      	bx	lr
9000fd5a:	bf00      	nop

9000fd5c <HAL_TIM_IC_CaptureCallback>:
9000fd5c:	4770      	bx	lr
9000fd5e:	bf00      	nop

9000fd60 <HAL_TIM_PWM_PulseFinishedCallback>:
9000fd60:	4770      	bx	lr
9000fd62:	bf00      	nop

9000fd64 <HAL_TIM_TriggerCallback>:
9000fd64:	4770      	bx	lr
9000fd66:	bf00      	nop

9000fd68 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000fd68:	6803      	ldr	r3, [r0, #0]
9000fd6a:	691a      	ldr	r2, [r3, #16]
9000fd6c:	0791      	lsls	r1, r2, #30
{
9000fd6e:	b510      	push	{r4, lr}
9000fd70:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000fd72:	d502      	bpl.n	9000fd7a <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000fd74:	68da      	ldr	r2, [r3, #12]
9000fd76:	0792      	lsls	r2, r2, #30
9000fd78:	d468      	bmi.n	9000fe4c <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000fd7a:	691a      	ldr	r2, [r3, #16]
9000fd7c:	0752      	lsls	r2, r2, #29
9000fd7e:	d502      	bpl.n	9000fd86 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000fd80:	68da      	ldr	r2, [r3, #12]
9000fd82:	0750      	lsls	r0, r2, #29
9000fd84:	d44f      	bmi.n	9000fe26 <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000fd86:	691a      	ldr	r2, [r3, #16]
9000fd88:	0711      	lsls	r1, r2, #28
9000fd8a:	d502      	bpl.n	9000fd92 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000fd8c:	68da      	ldr	r2, [r3, #12]
9000fd8e:	0712      	lsls	r2, r2, #28
9000fd90:	d437      	bmi.n	9000fe02 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000fd92:	691a      	ldr	r2, [r3, #16]
9000fd94:	06d0      	lsls	r0, r2, #27
9000fd96:	d502      	bpl.n	9000fd9e <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000fd98:	68da      	ldr	r2, [r3, #12]
9000fd9a:	06d1      	lsls	r1, r2, #27
9000fd9c:	d41e      	bmi.n	9000fddc <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000fd9e:	691a      	ldr	r2, [r3, #16]
9000fda0:	07d2      	lsls	r2, r2, #31
9000fda2:	d502      	bpl.n	9000fdaa <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000fda4:	68da      	ldr	r2, [r3, #12]
9000fda6:	07d0      	lsls	r0, r2, #31
9000fda8:	d469      	bmi.n	9000fe7e <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000fdaa:	691a      	ldr	r2, [r3, #16]
9000fdac:	0611      	lsls	r1, r2, #24
9000fdae:	d502      	bpl.n	9000fdb6 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000fdb0:	68da      	ldr	r2, [r3, #12]
9000fdb2:	0612      	lsls	r2, r2, #24
9000fdb4:	d46b      	bmi.n	9000fe8e <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000fdb6:	691a      	ldr	r2, [r3, #16]
9000fdb8:	05d0      	lsls	r0, r2, #23
9000fdba:	d502      	bpl.n	9000fdc2 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000fdbc:	68da      	ldr	r2, [r3, #12]
9000fdbe:	0611      	lsls	r1, r2, #24
9000fdc0:	d46d      	bmi.n	9000fe9e <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000fdc2:	691a      	ldr	r2, [r3, #16]
9000fdc4:	0652      	lsls	r2, r2, #25
9000fdc6:	d502      	bpl.n	9000fdce <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000fdc8:	68da      	ldr	r2, [r3, #12]
9000fdca:	0650      	lsls	r0, r2, #25
9000fdcc:	d46f      	bmi.n	9000feae <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000fdce:	691a      	ldr	r2, [r3, #16]
9000fdd0:	0691      	lsls	r1, r2, #26
9000fdd2:	d502      	bpl.n	9000fdda <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000fdd4:	68da      	ldr	r2, [r3, #12]
9000fdd6:	0692      	lsls	r2, r2, #26
9000fdd8:	d449      	bmi.n	9000fe6e <HAL_TIM_IRQHandler+0x106>
}
9000fdda:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000fddc:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000fde0:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000fde2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000fde4:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000fde6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000fde8:	69db      	ldr	r3, [r3, #28]
9000fdea:	f413 7f40 	tst.w	r3, #768	; 0x300
9000fdee:	d16f      	bne.n	9000fed0 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000fdf0:	f7ff ffb2 	bl	9000fd58 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000fdf4:	4620      	mov	r0, r4
9000fdf6:	f7ff ffb3 	bl	9000fd60 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000fdfa:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000fdfc:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000fdfe:	7722      	strb	r2, [r4, #28]
9000fe00:	e7cd      	b.n	9000fd9e <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000fe02:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000fe06:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000fe08:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000fe0a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000fe0c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000fe0e:	69db      	ldr	r3, [r3, #28]
9000fe10:	079b      	lsls	r3, r3, #30
9000fe12:	d15a      	bne.n	9000feca <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000fe14:	f7ff ffa0 	bl	9000fd58 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000fe18:	4620      	mov	r0, r4
9000fe1a:	f7ff ffa1 	bl	9000fd60 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000fe1e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000fe20:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000fe22:	7722      	strb	r2, [r4, #28]
9000fe24:	e7b5      	b.n	9000fd92 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000fe26:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000fe2a:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000fe2c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000fe2e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000fe30:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000fe32:	699b      	ldr	r3, [r3, #24]
9000fe34:	f413 7f40 	tst.w	r3, #768	; 0x300
9000fe38:	d144      	bne.n	9000fec4 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000fe3a:	f7ff ff8d 	bl	9000fd58 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000fe3e:	4620      	mov	r0, r4
9000fe40:	f7ff ff8e 	bl	9000fd60 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000fe44:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000fe46:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000fe48:	7722      	strb	r2, [r4, #28]
9000fe4a:	e79c      	b.n	9000fd86 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000fe4c:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000fe50:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000fe52:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000fe54:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000fe56:	699b      	ldr	r3, [r3, #24]
9000fe58:	0799      	lsls	r1, r3, #30
9000fe5a:	d130      	bne.n	9000febe <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000fe5c:	f7ff ff7c 	bl	9000fd58 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000fe60:	4620      	mov	r0, r4
9000fe62:	f7ff ff7d 	bl	9000fd60 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000fe66:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000fe68:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000fe6a:	7722      	strb	r2, [r4, #28]
9000fe6c:	e785      	b.n	9000fd7a <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000fe6e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000fe72:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000fe74:	611a      	str	r2, [r3, #16]
}
9000fe76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000fe7a:	f000 b82d 	b.w	9000fed8 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000fe7e:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000fe82:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000fe84:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000fe86:	f7f4 ff83 	bl	90004d90 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000fe8a:	6823      	ldr	r3, [r4, #0]
9000fe8c:	e78d      	b.n	9000fdaa <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000fe8e:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000fe92:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000fe94:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000fe96:	f000 f821 	bl	9000fedc <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000fe9a:	6823      	ldr	r3, [r4, #0]
9000fe9c:	e78b      	b.n	9000fdb6 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000fe9e:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000fea2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000fea4:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000fea6:	f000 f81b 	bl	9000fee0 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000feaa:	6823      	ldr	r3, [r4, #0]
9000feac:	e789      	b.n	9000fdc2 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000feae:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000feb2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000feb4:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000feb6:	f7ff ff55 	bl	9000fd64 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000feba:	6823      	ldr	r3, [r4, #0]
9000febc:	e787      	b.n	9000fdce <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000febe:	f7ff ff4d 	bl	9000fd5c <HAL_TIM_IC_CaptureCallback>
9000fec2:	e7d0      	b.n	9000fe66 <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000fec4:	f7ff ff4a 	bl	9000fd5c <HAL_TIM_IC_CaptureCallback>
9000fec8:	e7bc      	b.n	9000fe44 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000feca:	f7ff ff47 	bl	9000fd5c <HAL_TIM_IC_CaptureCallback>
9000fece:	e7a6      	b.n	9000fe1e <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000fed0:	f7ff ff44 	bl	9000fd5c <HAL_TIM_IC_CaptureCallback>
9000fed4:	e791      	b.n	9000fdfa <HAL_TIM_IRQHandler+0x92>
9000fed6:	bf00      	nop

9000fed8 <HAL_TIMEx_CommutCallback>:
9000fed8:	4770      	bx	lr
9000feda:	bf00      	nop

9000fedc <HAL_TIMEx_BreakCallback>:
9000fedc:	4770      	bx	lr
9000fede:	bf00      	nop

9000fee0 <HAL_TIMEx_Break2Callback>:
9000fee0:	4770      	bx	lr
9000fee2:	bf00      	nop

9000fee4 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
9000fee4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000fee8:	461d      	mov	r5, r3
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
9000feea:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
9000feee:	2b20      	cmp	r3, #32
9000fef0:	f040 8091 	bne.w	90010016 <HAL_UART_Transmit+0x132>
  {
    if ((pData == NULL) || (Size == 0U))
9000fef4:	4688      	mov	r8, r1
9000fef6:	2900      	cmp	r1, #0
9000fef8:	d03e      	beq.n	9000ff78 <HAL_UART_Transmit+0x94>
9000fefa:	fab2 f982 	clz	r9, r2
9000fefe:	4616      	mov	r6, r2
9000ff00:	ea4f 1959 	mov.w	r9, r9, lsr #5
9000ff04:	2a00      	cmp	r2, #0
9000ff06:	d037      	beq.n	9000ff78 <HAL_UART_Transmit+0x94>
    {
      return  HAL_ERROR;
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000ff08:	2321      	movs	r3, #33	; 0x21
9000ff0a:	4604      	mov	r4, r0
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ff0c:	f8c0 9090 	str.w	r9, [r0, #144]	; 0x90
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000ff10:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
9000ff14:	f7fa f856 	bl	90009fc4 <HAL_GetTick>

    huart->TxXferSize  = Size;
    huart->TxXferCount = Size;

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000ff18:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
9000ff1a:	4607      	mov	r7, r0
    huart->TxXferSize  = Size;
9000ff1c:	f8a4 6054 	strh.w	r6, [r4, #84]	; 0x54
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000ff20:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    huart->TxXferCount = Size;
9000ff24:	f8a4 6056 	strh.w	r6, [r4, #86]	; 0x56
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000ff28:	f000 80b7 	beq.w	9001009a <HAL_UART_Transmit+0x1b6>
    {
      pdata8bits  = pData;
      pdata16bits = NULL;
    }

    while (huart->TxXferCount > 0U)
9000ff2c:	f8b4 3056 	ldrh.w	r3, [r4, #86]	; 0x56
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000ff30:	6820      	ldr	r0, [r4, #0]
    while (huart->TxXferCount > 0U)
9000ff32:	b29b      	uxth	r3, r3
9000ff34:	b1ab      	cbz	r3, 9000ff62 <HAL_UART_Transmit+0x7e>
9000ff36:	1c6a      	adds	r2, r5, #1
9000ff38:	d121      	bne.n	9000ff7e <HAL_UART_Transmit+0x9a>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000ff3a:	69c2      	ldr	r2, [r0, #28]
9000ff3c:	0613      	lsls	r3, r2, #24
9000ff3e:	d5fc      	bpl.n	9000ff3a <HAL_UART_Transmit+0x56>
      if (pdata8bits == NULL)
9000ff40:	f1b8 0f00 	cmp.w	r8, #0
9000ff44:	d062      	beq.n	9001000c <HAL_UART_Transmit+0x128>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
9000ff46:	f818 3b01 	ldrb.w	r3, [r8], #1
9000ff4a:	6283      	str	r3, [r0, #40]	; 0x28
      huart->TxXferCount--;
9000ff4c:	f8b4 3056 	ldrh.w	r3, [r4, #86]	; 0x56
9000ff50:	3b01      	subs	r3, #1
9000ff52:	b29b      	uxth	r3, r3
9000ff54:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
    while (huart->TxXferCount > 0U)
9000ff58:	f8b4 3056 	ldrh.w	r3, [r4, #86]	; 0x56
9000ff5c:	b29b      	uxth	r3, r3
9000ff5e:	2b00      	cmp	r3, #0
9000ff60:	d1e9      	bne.n	9000ff36 <HAL_UART_Transmit+0x52>
9000ff62:	1c69      	adds	r1, r5, #1
9000ff64:	d15a      	bne.n	9001001c <HAL_UART_Transmit+0x138>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000ff66:	69c3      	ldr	r3, [r0, #28]
9000ff68:	065a      	lsls	r2, r3, #25
9000ff6a:	d5fc      	bpl.n	9000ff66 <HAL_UART_Transmit+0x82>
    huart->gState = HAL_UART_STATE_READY;
9000ff6c:	2320      	movs	r3, #32
    return HAL_OK;
9000ff6e:	2000      	movs	r0, #0
    huart->gState = HAL_UART_STATE_READY;
9000ff70:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
}
9000ff74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return  HAL_ERROR;
9000ff78:	2001      	movs	r0, #1
}
9000ff7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000ff7e:	69c3      	ldr	r3, [r0, #28]
9000ff80:	061e      	lsls	r6, r3, #24
9000ff82:	d4dd      	bmi.n	9000ff40 <HAL_UART_Transmit+0x5c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000ff84:	f7fa f81e 	bl	90009fc4 <HAL_GetTick>
9000ff88:	1bc0      	subs	r0, r0, r7
9000ff8a:	4285      	cmp	r5, r0
9000ff8c:	d338      	bcc.n	90010000 <HAL_UART_Transmit+0x11c>
9000ff8e:	2d00      	cmp	r5, #0
9000ff90:	d036      	beq.n	90010000 <HAL_UART_Transmit+0x11c>
      {

        return HAL_TIMEOUT;
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
9000ff92:	6823      	ldr	r3, [r4, #0]
9000ff94:	681a      	ldr	r2, [r3, #0]
9000ff96:	4618      	mov	r0, r3
9000ff98:	0752      	lsls	r2, r2, #29
9000ff9a:	d5cc      	bpl.n	9000ff36 <HAL_UART_Transmit+0x52>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000ff9c:	69da      	ldr	r2, [r3, #28]
9000ff9e:	0716      	lsls	r6, r2, #28
9000ffa0:	f100 808b 	bmi.w	900100ba <HAL_UART_Transmit+0x1d6>
           /* Process Unlocked */
           __HAL_UNLOCK(huart);

           return HAL_ERROR;
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000ffa4:	69da      	ldr	r2, [r3, #28]
9000ffa6:	0511      	lsls	r1, r2, #20
9000ffa8:	d5c5      	bpl.n	9000ff36 <HAL_UART_Transmit+0x52>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000ffaa:	f44f 6200 	mov.w	r2, #2048	; 0x800
9000ffae:	621a      	str	r2, [r3, #32]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ffb0:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000ffb4:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ffb8:	e843 2100 	strex	r1, r2, [r3]
9000ffbc:	b139      	cbz	r1, 9000ffce <HAL_UART_Transmit+0xea>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ffbe:	e853 2f00 	ldrex	r2, [r3]
9000ffc2:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ffc6:	e843 2100 	strex	r1, r2, [r3]
9000ffca:	2900      	cmp	r1, #0
9000ffcc:	d1f7      	bne.n	9000ffbe <HAL_UART_Transmit+0xda>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000ffce:	4863      	ldr	r0, [pc, #396]	; (9001015c <HAL_UART_Transmit+0x278>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ffd0:	f103 0208 	add.w	r2, r3, #8
9000ffd4:	e852 2f00 	ldrex	r2, [r2]
9000ffd8:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ffda:	f103 0508 	add.w	r5, r3, #8
9000ffde:	e845 2100 	strex	r1, r2, [r5]
9000ffe2:	2900      	cmp	r1, #0
9000ffe4:	d1f4      	bne.n	9000ffd0 <HAL_UART_Transmit+0xec>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000ffe6:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
9000ffe8:	2a01      	cmp	r2, #1
9000ffea:	d05d      	beq.n	900100a8 <HAL_UART_Transmit+0x1c4>
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ffec:	2300      	movs	r3, #0
  huart->RxState = HAL_UART_STATE_READY;
9000ffee:	2220      	movs	r2, #32

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
9000fff0:	6763      	str	r3, [r4, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000fff2:	f8c4 208c 	str.w	r2, [r4, #140]	; 0x8c
          __HAL_UNLOCK(huart);
9000fff6:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000fffa:	66e3      	str	r3, [r4, #108]	; 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000fffc:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
      huart->gState = HAL_UART_STATE_READY;
90010000:	2320      	movs	r3, #32
      return HAL_TIMEOUT;
90010002:	2003      	movs	r0, #3
      huart->gState = HAL_UART_STATE_READY;
90010004:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
}
90010008:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
9001000c:	f839 3b02 	ldrh.w	r3, [r9], #2
90010010:	f3c3 0308 	ubfx	r3, r3, #0, #9
90010014:	e799      	b.n	9000ff4a <HAL_UART_Transmit+0x66>
    return HAL_BUSY;
90010016:	2002      	movs	r0, #2
}
90010018:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9001001c:	69c3      	ldr	r3, [r0, #28]
9001001e:	065b      	lsls	r3, r3, #25
90010020:	d4a4      	bmi.n	9000ff6c <HAL_UART_Transmit+0x88>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90010022:	f7f9 ffcf 	bl	90009fc4 <HAL_GetTick>
90010026:	1bc0      	subs	r0, r0, r7
90010028:	4285      	cmp	r5, r0
9001002a:	d3e9      	bcc.n	90010000 <HAL_UART_Transmit+0x11c>
9001002c:	2d00      	cmp	r5, #0
9001002e:	d0e7      	beq.n	90010000 <HAL_UART_Transmit+0x11c>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
90010030:	6823      	ldr	r3, [r4, #0]
90010032:	681a      	ldr	r2, [r3, #0]
90010034:	4618      	mov	r0, r3
90010036:	0751      	lsls	r1, r2, #29
90010038:	d593      	bpl.n	9000ff62 <HAL_UART_Transmit+0x7e>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9001003a:	69da      	ldr	r2, [r3, #28]
9001003c:	0712      	lsls	r2, r2, #28
9001003e:	d46a      	bmi.n	90010116 <HAL_UART_Transmit+0x232>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
90010040:	69da      	ldr	r2, [r3, #28]
90010042:	0516      	lsls	r6, r2, #20
90010044:	d58d      	bpl.n	9000ff62 <HAL_UART_Transmit+0x7e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
90010046:	f44f 6200 	mov.w	r2, #2048	; 0x800
9001004a:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001004c:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90010050:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010054:	e843 2100 	strex	r1, r2, [r3]
90010058:	b139      	cbz	r1, 9001006a <HAL_UART_Transmit+0x186>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001005a:	e853 2f00 	ldrex	r2, [r3]
9001005e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010062:	e843 2100 	strex	r1, r2, [r3]
90010066:	2900      	cmp	r1, #0
90010068:	d1f7      	bne.n	9001005a <HAL_UART_Transmit+0x176>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9001006a:	493c      	ldr	r1, [pc, #240]	; (9001015c <HAL_UART_Transmit+0x278>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001006c:	f103 0208 	add.w	r2, r3, #8
90010070:	e852 2f00 	ldrex	r2, [r2]
90010074:	400a      	ands	r2, r1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010076:	f103 0508 	add.w	r5, r3, #8
9001007a:	e845 2000 	strex	r0, r2, [r5]
9001007e:	2800      	cmp	r0, #0
90010080:	d1f4      	bne.n	9001006c <HAL_UART_Transmit+0x188>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
90010082:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
90010084:	2a01      	cmp	r2, #1
90010086:	d1b1      	bne.n	9000ffec <HAL_UART_Transmit+0x108>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010088:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9001008c:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010090:	e843 2100 	strex	r1, r2, [r3]
90010094:	2900      	cmp	r1, #0
90010096:	d1f7      	bne.n	90010088 <HAL_UART_Transmit+0x1a4>
90010098:	e7a8      	b.n	9000ffec <HAL_UART_Transmit+0x108>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9001009a:	6923      	ldr	r3, [r4, #16]
9001009c:	2b00      	cmp	r3, #0
9001009e:	f47f af45 	bne.w	9000ff2c <HAL_UART_Transmit+0x48>
900100a2:	46c1      	mov	r9, r8
      pdata8bits  = NULL;
900100a4:	4698      	mov	r8, r3
900100a6:	e741      	b.n	9000ff2c <HAL_UART_Transmit+0x48>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900100a8:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
900100ac:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900100b0:	e843 2100 	strex	r1, r2, [r3]
900100b4:	2900      	cmp	r1, #0
900100b6:	d1f7      	bne.n	900100a8 <HAL_UART_Transmit+0x1c4>
900100b8:	e798      	b.n	9000ffec <HAL_UART_Transmit+0x108>
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
900100ba:	2208      	movs	r2, #8
900100bc:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900100be:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
900100c2:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900100c6:	e843 2100 	strex	r1, r2, [r3]
900100ca:	2900      	cmp	r1, #0
900100cc:	d1f7      	bne.n	900100be <HAL_UART_Transmit+0x1da>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
900100ce:	4823      	ldr	r0, [pc, #140]	; (9001015c <HAL_UART_Transmit+0x278>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900100d0:	f103 0208 	add.w	r2, r3, #8
900100d4:	e852 2f00 	ldrex	r2, [r2]
900100d8:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900100da:	f103 0508 	add.w	r5, r3, #8
900100de:	e845 2100 	strex	r1, r2, [r5]
900100e2:	2900      	cmp	r1, #0
900100e4:	d1f4      	bne.n	900100d0 <HAL_UART_Transmit+0x1ec>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
900100e6:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
900100e8:	2a01      	cmp	r2, #1
900100ea:	d00b      	beq.n	90010104 <HAL_UART_Transmit+0x220>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900100ec:	2300      	movs	r3, #0
  huart->RxState = HAL_UART_STATE_READY;
900100ee:	2120      	movs	r1, #32
           huart->ErrorCode = HAL_UART_ERROR_ORE;
900100f0:	2208      	movs	r2, #8
  huart->RxState = HAL_UART_STATE_READY;
900100f2:	f8c4 108c 	str.w	r1, [r4, #140]	; 0x8c
  huart->RxISR = NULL;
900100f6:	6763      	str	r3, [r4, #116]	; 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900100f8:	66e3      	str	r3, [r4, #108]	; 0x6c
           __HAL_UNLOCK(huart);
900100fa:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
           huart->ErrorCode = HAL_UART_ERROR_ORE;
900100fe:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
           return HAL_ERROR;
90010102:	e77d      	b.n	90010000 <HAL_UART_Transmit+0x11c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010104:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90010108:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9001010c:	e843 2100 	strex	r1, r2, [r3]
90010110:	2900      	cmp	r1, #0
90010112:	d1f7      	bne.n	90010104 <HAL_UART_Transmit+0x220>
90010114:	e7ea      	b.n	900100ec <HAL_UART_Transmit+0x208>
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
90010116:	2208      	movs	r2, #8
90010118:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001011a:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9001011e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010122:	e843 2100 	strex	r1, r2, [r3]
90010126:	2900      	cmp	r1, #0
90010128:	d1f7      	bne.n	9001011a <HAL_UART_Transmit+0x236>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9001012a:	490c      	ldr	r1, [pc, #48]	; (9001015c <HAL_UART_Transmit+0x278>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001012c:	f103 0208 	add.w	r2, r3, #8
90010130:	e852 2f00 	ldrex	r2, [r2]
90010134:	400a      	ands	r2, r1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010136:	f103 0508 	add.w	r5, r3, #8
9001013a:	e845 2000 	strex	r0, r2, [r5]
9001013e:	2800      	cmp	r0, #0
90010140:	d1f4      	bne.n	9001012c <HAL_UART_Transmit+0x248>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
90010142:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
90010144:	2a01      	cmp	r2, #1
90010146:	d1d1      	bne.n	900100ec <HAL_UART_Transmit+0x208>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010148:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9001014c:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010150:	e843 2100 	strex	r1, r2, [r3]
90010154:	2900      	cmp	r1, #0
90010156:	d1f7      	bne.n	90010148 <HAL_UART_Transmit+0x264>
90010158:	e7c8      	b.n	900100ec <HAL_UART_Transmit+0x208>
9001015a:	bf00      	nop
9001015c:	effffffe 	.word	0xeffffffe

90010160 <UART_SetConfig>:
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010160:	6901      	ldr	r1, [r0, #16]
90010162:	6882      	ldr	r2, [r0, #8]
  if (UART_INSTANCE_LOWPOWER(huart))
90010164:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010166:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90010168:	49c0      	ldr	r1, [pc, #768]	; (9001046c <UART_SetConfig+0x30c>)
{
9001016a:	b530      	push	{r4, r5, lr}
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9001016c:	6945      	ldr	r5, [r0, #20]
{
9001016e:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010170:	69c0      	ldr	r0, [r0, #28]
{
90010172:	b087      	sub	sp, #28
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010174:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90010176:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010178:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9001017a:	4029      	ands	r1, r5
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9001017c:	4dbc      	ldr	r5, [pc, #752]	; (90010470 <UART_SetConfig+0x310>)
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9001017e:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
90010180:	68e1      	ldr	r1, [r4, #12]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
90010182:	42ab      	cmp	r3, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90010184:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
90010186:	685a      	ldr	r2, [r3, #4]
90010188:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
9001018c:	ea42 0201 	orr.w	r2, r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
90010190:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
90010192:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
90010194:	f000 80e0 	beq.w	90010358 <UART_SetConfig+0x1f8>
    tmpreg |= huart->Init.OneBitSampling;
90010198:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9001019a:	689d      	ldr	r5, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
9001019c:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9001019e:	4ab5      	ldr	r2, [pc, #724]	; (90010474 <UART_SetConfig+0x314>)
900101a0:	402a      	ands	r2, r5
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
900101a2:	6a65      	ldr	r5, [r4, #36]	; 0x24
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
900101a4:	4311      	orrs	r1, r2
900101a6:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
900101a8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900101aa:	f022 020f 	bic.w	r2, r2, #15
900101ae:	432a      	orrs	r2, r5
900101b0:	62da      	str	r2, [r3, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
900101b2:	4ab1      	ldr	r2, [pc, #708]	; (90010478 <UART_SetConfig+0x318>)
900101b4:	4293      	cmp	r3, r2
900101b6:	d023      	beq.n	90010200 <UART_SetConfig+0xa0>
900101b8:	4ab0      	ldr	r2, [pc, #704]	; (9001047c <UART_SetConfig+0x31c>)
900101ba:	4293      	cmp	r3, r2
900101bc:	d076      	beq.n	900102ac <UART_SetConfig+0x14c>
900101be:	4ab0      	ldr	r2, [pc, #704]	; (90010480 <UART_SetConfig+0x320>)
900101c0:	4293      	cmp	r3, r2
900101c2:	f000 818f 	beq.w	900104e4 <UART_SetConfig+0x384>
900101c6:	4aaf      	ldr	r2, [pc, #700]	; (90010484 <UART_SetConfig+0x324>)
900101c8:	4293      	cmp	r3, r2
900101ca:	f000 81e1 	beq.w	90010590 <UART_SetConfig+0x430>
900101ce:	4aae      	ldr	r2, [pc, #696]	; (90010488 <UART_SetConfig+0x328>)
900101d0:	4293      	cmp	r3, r2
900101d2:	f000 8121 	beq.w	90010418 <UART_SetConfig+0x2b8>
900101d6:	4aad      	ldr	r2, [pc, #692]	; (9001048c <UART_SetConfig+0x32c>)
900101d8:	4293      	cmp	r3, r2
900101da:	f000 81e3 	beq.w	900105a4 <UART_SetConfig+0x444>
900101de:	4aac      	ldr	r2, [pc, #688]	; (90010490 <UART_SetConfig+0x330>)
900101e0:	4293      	cmp	r3, r2
900101e2:	f000 8234 	beq.w	9001064e <UART_SetConfig+0x4ee>
900101e6:	4aab      	ldr	r2, [pc, #684]	; (90010494 <UART_SetConfig+0x334>)
900101e8:	4293      	cmp	r3, r2
900101ea:	f000 81e7 	beq.w	900105bc <UART_SetConfig+0x45c>
        ret = HAL_ERROR;
900101ee:	2001      	movs	r0, #1
  huart->RxISR = NULL;
900101f0:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
900101f2:	f04f 1201 	mov.w	r2, #65537	; 0x10001
  huart->RxISR = NULL;
900101f6:	6763      	str	r3, [r4, #116]	; 0x74
  huart->NbRxDataToProcess = 1;
900101f8:	66a2      	str	r2, [r4, #104]	; 0x68
  huart->TxISR = NULL;
900101fa:	67a3      	str	r3, [r4, #120]	; 0x78
}
900101fc:	b007      	add	sp, #28
900101fe:	bd30      	pop	{r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
90010200:	4ba5      	ldr	r3, [pc, #660]	; (90010498 <UART_SetConfig+0x338>)
90010202:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010204:	f003 0338 	and.w	r3, r3, #56	; 0x38
90010208:	2b28      	cmp	r3, #40	; 0x28
9001020a:	d8f0      	bhi.n	900101ee <UART_SetConfig+0x8e>
9001020c:	4aa3      	ldr	r2, [pc, #652]	; (9001049c <UART_SetConfig+0x33c>)
9001020e:	5cd3      	ldrb	r3, [r2, r3]
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90010210:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
90010214:	d055      	beq.n	900102c2 <UART_SetConfig+0x162>
    switch (clocksource)
90010216:	2b20      	cmp	r3, #32
90010218:	f200 814a 	bhi.w	900104b0 <UART_SetConfig+0x350>
9001021c:	2b20      	cmp	r3, #32
9001021e:	d8e6      	bhi.n	900101ee <UART_SetConfig+0x8e>
90010220:	a201      	add	r2, pc, #4	; (adr r2, 90010228 <UART_SetConfig+0xc8>)
90010222:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90010226:	bf00      	nop
90010228:	90010467 	.word	0x90010467
9001022c:	90010461 	.word	0x90010461
90010230:	900101ef 	.word	0x900101ef
90010234:	900101ef 	.word	0x900101ef
90010238:	90010451 	.word	0x90010451
9001023c:	900101ef 	.word	0x900101ef
90010240:	900101ef 	.word	0x900101ef
90010244:	900101ef 	.word	0x900101ef
90010248:	90010443 	.word	0x90010443
9001024c:	900101ef 	.word	0x900101ef
90010250:	900101ef 	.word	0x900101ef
90010254:	900101ef 	.word	0x900101ef
90010258:	900101ef 	.word	0x900101ef
9001025c:	900101ef 	.word	0x900101ef
90010260:	900101ef 	.word	0x900101ef
90010264:	900101ef 	.word	0x900101ef
90010268:	9001042d 	.word	0x9001042d
9001026c:	900101ef 	.word	0x900101ef
90010270:	900101ef 	.word	0x900101ef
90010274:	900101ef 	.word	0x900101ef
90010278:	900101ef 	.word	0x900101ef
9001027c:	900101ef 	.word	0x900101ef
90010280:	900101ef 	.word	0x900101ef
90010284:	900101ef 	.word	0x900101ef
90010288:	900101ef 	.word	0x900101ef
9001028c:	900101ef 	.word	0x900101ef
90010290:	900101ef 	.word	0x900101ef
90010294:	900101ef 	.word	0x900101ef
90010298:	900101ef 	.word	0x900101ef
9001029c:	900101ef 	.word	0x900101ef
900102a0:	900101ef 	.word	0x900101ef
900102a4:	900101ef 	.word	0x900101ef
900102a8:	900105d1 	.word	0x900105d1
  UART_GETCLOCKSOURCE(huart, clocksource);
900102ac:	4b7a      	ldr	r3, [pc, #488]	; (90010498 <UART_SetConfig+0x338>)
900102ae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900102b0:	f003 0307 	and.w	r3, r3, #7
900102b4:	2b05      	cmp	r3, #5
900102b6:	d89a      	bhi.n	900101ee <UART_SetConfig+0x8e>
900102b8:	4a79      	ldr	r2, [pc, #484]	; (900104a0 <UART_SetConfig+0x340>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
900102ba:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
900102be:	5cd3      	ldrb	r3, [r2, r3]
900102c0:	d1a9      	bne.n	90010216 <UART_SetConfig+0xb6>
    switch (clocksource)
900102c2:	2b20      	cmp	r3, #32
900102c4:	f200 8145 	bhi.w	90010552 <UART_SetConfig+0x3f2>
900102c8:	2b20      	cmp	r3, #32
900102ca:	d890      	bhi.n	900101ee <UART_SetConfig+0x8e>
900102cc:	a201      	add	r2, pc, #4	; (adr r2, 900102d4 <UART_SetConfig+0x174>)
900102ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
900102d2:	bf00      	nop
900102d4:	9001063b 	.word	0x9001063b
900102d8:	90010635 	.word	0x90010635
900102dc:	900101ef 	.word	0x900101ef
900102e0:	900101ef 	.word	0x900101ef
900102e4:	90010641 	.word	0x90010641
900102e8:	900101ef 	.word	0x900101ef
900102ec:	900101ef 	.word	0x900101ef
900102f0:	900101ef 	.word	0x900101ef
900102f4:	90010623 	.word	0x90010623
900102f8:	900101ef 	.word	0x900101ef
900102fc:	900101ef 	.word	0x900101ef
90010300:	900101ef 	.word	0x900101ef
90010304:	900101ef 	.word	0x900101ef
90010308:	900101ef 	.word	0x900101ef
9001030c:	900101ef 	.word	0x900101ef
90010310:	900101ef 	.word	0x900101ef
90010314:	9001060f 	.word	0x9001060f
90010318:	900101ef 	.word	0x900101ef
9001031c:	900101ef 	.word	0x900101ef
90010320:	900101ef 	.word	0x900101ef
90010324:	900101ef 	.word	0x900101ef
90010328:	900101ef 	.word	0x900101ef
9001032c:	900101ef 	.word	0x900101ef
90010330:	900101ef 	.word	0x900101ef
90010334:	900101ef 	.word	0x900101ef
90010338:	900101ef 	.word	0x900101ef
9001033c:	900101ef 	.word	0x900101ef
90010340:	900101ef 	.word	0x900101ef
90010344:	900101ef 	.word	0x900101ef
90010348:	900101ef 	.word	0x900101ef
9001034c:	900101ef 	.word	0x900101ef
90010350:	900101ef 	.word	0x900101ef
90010354:	9001064b 	.word	0x9001064b
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
90010358:	6898      	ldr	r0, [r3, #8]
9001035a:	4a46      	ldr	r2, [pc, #280]	; (90010474 <UART_SetConfig+0x314>)
9001035c:	4002      	ands	r2, r0
  UART_GETCLOCKSOURCE(huart, clocksource);
9001035e:	484e      	ldr	r0, [pc, #312]	; (90010498 <UART_SetConfig+0x338>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
90010360:	430a      	orrs	r2, r1
90010362:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
90010364:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90010366:	6a61      	ldr	r1, [r4, #36]	; 0x24
90010368:	f022 020f 	bic.w	r2, r2, #15
9001036c:	430a      	orrs	r2, r1
9001036e:	62da      	str	r2, [r3, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
90010370:	6d83      	ldr	r3, [r0, #88]	; 0x58
90010372:	f003 0307 	and.w	r3, r3, #7
90010376:	2b05      	cmp	r3, #5
90010378:	f63f af39 	bhi.w	900101ee <UART_SetConfig+0x8e>
9001037c:	4a49      	ldr	r2, [pc, #292]	; (900104a4 <UART_SetConfig+0x344>)
9001037e:	5cd3      	ldrb	r3, [r2, r3]
    switch (clocksource)
90010380:	2b20      	cmp	r3, #32
90010382:	f200 80b9 	bhi.w	900104f8 <UART_SetConfig+0x398>
90010386:	2b01      	cmp	r3, #1
90010388:	f67f af31 	bls.w	900101ee <UART_SetConfig+0x8e>
9001038c:	3b02      	subs	r3, #2
9001038e:	2b1e      	cmp	r3, #30
90010390:	f63f af2d 	bhi.w	900101ee <UART_SetConfig+0x8e>
90010394:	a201      	add	r2, pc, #4	; (adr r2, 9001039c <UART_SetConfig+0x23c>)
90010396:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9001039a:	bf00      	nop
9001039c:	90010605 	.word	0x90010605
900103a0:	900101ef 	.word	0x900101ef
900103a4:	900105fb 	.word	0x900105fb
900103a8:	900101ef 	.word	0x900101ef
900103ac:	900101ef 	.word	0x900101ef
900103b0:	900101ef 	.word	0x900101ef
900103b4:	900105e9 	.word	0x900105e9
900103b8:	900101ef 	.word	0x900101ef
900103bc:	900101ef 	.word	0x900101ef
900103c0:	900101ef 	.word	0x900101ef
900103c4:	900101ef 	.word	0x900101ef
900103c8:	900101ef 	.word	0x900101ef
900103cc:	900101ef 	.word	0x900101ef
900103d0:	900101ef 	.word	0x900101ef
900103d4:	900105d5 	.word	0x900105d5
900103d8:	900101ef 	.word	0x900101ef
900103dc:	900101ef 	.word	0x900101ef
900103e0:	900101ef 	.word	0x900101ef
900103e4:	900101ef 	.word	0x900101ef
900103e8:	900101ef 	.word	0x900101ef
900103ec:	900101ef 	.word	0x900101ef
900103f0:	900101ef 	.word	0x900101ef
900103f4:	900101ef 	.word	0x900101ef
900103f8:	900101ef 	.word	0x900101ef
900103fc:	900101ef 	.word	0x900101ef
90010400:	900101ef 	.word	0x900101ef
90010404:	900101ef 	.word	0x900101ef
90010408:	900101ef 	.word	0x900101ef
9001040c:	900101ef 	.word	0x900101ef
90010410:	900101ef 	.word	0x900101ef
90010414:	9001060b 	.word	0x9001060b
  UART_GETCLOCKSOURCE(huart, clocksource);
90010418:	4b1f      	ldr	r3, [pc, #124]	; (90010498 <UART_SetConfig+0x338>)
9001041a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001041c:	f003 0307 	and.w	r3, r3, #7
90010420:	2b05      	cmp	r3, #5
90010422:	f63f aee4 	bhi.w	900101ee <UART_SetConfig+0x8e>
90010426:	4a20      	ldr	r2, [pc, #128]	; (900104a8 <UART_SetConfig+0x348>)
90010428:	5cd3      	ldrb	r3, [r2, r3]
9001042a:	e6f1      	b.n	90010210 <UART_SetConfig+0xb0>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9001042c:	4b1a      	ldr	r3, [pc, #104]	; (90010498 <UART_SetConfig+0x338>)
9001042e:	681a      	ldr	r2, [r3, #0]
90010430:	0692      	lsls	r2, r2, #26
90010432:	f140 80c1 	bpl.w	900105b8 <UART_SetConfig+0x458>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
90010436:	681b      	ldr	r3, [r3, #0]
90010438:	481c      	ldr	r0, [pc, #112]	; (900104ac <UART_SetConfig+0x34c>)
9001043a:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9001043e:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
90010440:	e03b      	b.n	900104ba <UART_SetConfig+0x35a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
90010442:	a803      	add	r0, sp, #12
90010444:	f7ff fa46 	bl	9000f8d4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
90010448:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9001044a:	b938      	cbnz	r0, 9001045c <UART_SetConfig+0x2fc>
          pclk = (uint32_t) HSI_VALUE;
9001044c:	2000      	movs	r0, #0
9001044e:	e6cf      	b.n	900101f0 <UART_SetConfig+0x90>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
90010450:	4668      	mov	r0, sp
90010452:	f7ff f981 	bl	9000f758 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
90010456:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
90010458:	2800      	cmp	r0, #0
9001045a:	d0f7      	beq.n	9001044c <UART_SetConfig+0x2ec>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9001045c:	6a65      	ldr	r5, [r4, #36]	; 0x24
9001045e:	e02c      	b.n	900104ba <UART_SetConfig+0x35a>
        pclk = HAL_RCC_GetPCLK2Freq();
90010460:	f7fe fa04 	bl	9000e86c <HAL_RCC_GetPCLK2Freq>
        break;
90010464:	e7f1      	b.n	9001044a <UART_SetConfig+0x2ea>
        pclk = HAL_RCC_GetPCLK1Freq();
90010466:	f7fe f9b9 	bl	9000e7dc <HAL_RCC_GetPCLK1Freq>
        break;
9001046a:	e7ee      	b.n	9001044a <UART_SetConfig+0x2ea>
9001046c:	cfff69f3 	.word	0xcfff69f3
90010470:	58000c00 	.word	0x58000c00
90010474:	11fff4ff 	.word	0x11fff4ff
90010478:	40011000 	.word	0x40011000
9001047c:	40004400 	.word	0x40004400
90010480:	40004800 	.word	0x40004800
90010484:	40004c00 	.word	0x40004c00
90010488:	40005000 	.word	0x40005000
9001048c:	40011400 	.word	0x40011400
90010490:	40007800 	.word	0x40007800
90010494:	40007c00 	.word	0x40007c00
90010498:	58024400 	.word	0x58024400
9001049c:	9002fd34 	.word	0x9002fd34
900104a0:	9002fd60 	.word	0x9002fd60
900104a4:	9002fd68 	.word	0x9002fd68
900104a8:	9002fd60 	.word	0x9002fd60
900104ac:	03d09000 	.word	0x03d09000
    switch (clocksource)
900104b0:	2b40      	cmp	r3, #64	; 0x40
900104b2:	f47f ae9c 	bne.w	900101ee <UART_SetConfig+0x8e>
900104b6:	f44f 4000 	mov.w	r0, #32768	; 0x8000
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
900104ba:	4b6c      	ldr	r3, [pc, #432]	; (9001066c <UART_SetConfig+0x50c>)
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
900104bc:	f64f 71ef 	movw	r1, #65519	; 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
900104c0:	6862      	ldr	r2, [r4, #4]
900104c2:	f833 3015 	ldrh.w	r3, [r3, r5, lsl #1]
900104c6:	fbb0 f3f3 	udiv	r3, r0, r3
900104ca:	eb03 0352 	add.w	r3, r3, r2, lsr #1
900104ce:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
900104d2:	f1a3 0210 	sub.w	r2, r3, #16
900104d6:	428a      	cmp	r2, r1
900104d8:	f63f ae89 	bhi.w	900101ee <UART_SetConfig+0x8e>
        huart->Instance->BRR = (uint16_t)usartdiv;
900104dc:	6822      	ldr	r2, [r4, #0]
900104de:	2000      	movs	r0, #0
900104e0:	60d3      	str	r3, [r2, #12]
900104e2:	e685      	b.n	900101f0 <UART_SetConfig+0x90>
  UART_GETCLOCKSOURCE(huart, clocksource);
900104e4:	4b62      	ldr	r3, [pc, #392]	; (90010670 <UART_SetConfig+0x510>)
900104e6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900104e8:	f003 0307 	and.w	r3, r3, #7
900104ec:	2b05      	cmp	r3, #5
900104ee:	f63f ae7e 	bhi.w	900101ee <UART_SetConfig+0x8e>
900104f2:	4a60      	ldr	r2, [pc, #384]	; (90010674 <UART_SetConfig+0x514>)
900104f4:	5cd3      	ldrb	r3, [r2, r3]
900104f6:	e68b      	b.n	90010210 <UART_SetConfig+0xb0>
    switch (clocksource)
900104f8:	2b40      	cmp	r3, #64	; 0x40
900104fa:	f47f ae78 	bne.w	900101ee <UART_SetConfig+0x8e>
900104fe:	f44f 4000 	mov.w	r0, #32768	; 0x8000
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
90010502:	4b5a      	ldr	r3, [pc, #360]	; (9001066c <UART_SetConfig+0x50c>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
90010504:	6865      	ldr	r5, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
90010506:	f833 2011 	ldrh.w	r2, [r3, r1, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9001050a:	eb05 0145 	add.w	r1, r5, r5, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9001050e:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
90010512:	4299      	cmp	r1, r3
90010514:	f63f ae6b 	bhi.w	900101ee <UART_SetConfig+0x8e>
90010518:	ebb3 3f05 	cmp.w	r3, r5, lsl #12
9001051c:	f63f ae67 	bhi.w	900101ee <UART_SetConfig+0x8e>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010520:	2300      	movs	r3, #0
90010522:	4619      	mov	r1, r3
90010524:	f7f0 f8e8 	bl	900006f8 <__aeabi_uldivmod>
90010528:	462a      	mov	r2, r5
9001052a:	0209      	lsls	r1, r1, #8
9001052c:	0203      	lsls	r3, r0, #8
9001052e:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
90010532:	0868      	lsrs	r0, r5, #1
90010534:	1818      	adds	r0, r3, r0
90010536:	f04f 0300 	mov.w	r3, #0
9001053a:	f141 0100 	adc.w	r1, r1, #0
9001053e:	f7f0 f8db 	bl	900006f8 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
90010542:	4a4d      	ldr	r2, [pc, #308]	; (90010678 <UART_SetConfig+0x518>)
90010544:	f5a0 7140 	sub.w	r1, r0, #768	; 0x300
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010548:	4603      	mov	r3, r0
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9001054a:	4291      	cmp	r1, r2
9001054c:	f63f ae4f 	bhi.w	900101ee <UART_SetConfig+0x8e>
90010550:	e7c4      	b.n	900104dc <UART_SetConfig+0x37c>
    switch (clocksource)
90010552:	2b40      	cmp	r3, #64	; 0x40
90010554:	f47f ae4b 	bne.w	900101ee <UART_SetConfig+0x8e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010558:	4b44      	ldr	r3, [pc, #272]	; (9001066c <UART_SetConfig+0x50c>)
9001055a:	6862      	ldr	r2, [r4, #4]
9001055c:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
90010560:	0853      	lsrs	r3, r2, #1
90010562:	fbb0 f0f1 	udiv	r0, r0, r1
90010566:	eb03 0040 	add.w	r0, r3, r0, lsl #1
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9001056a:	f64f 73ef 	movw	r3, #65519	; 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9001056e:	fbb0 f0f2 	udiv	r0, r0, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
90010572:	f1a0 0210 	sub.w	r2, r0, #16
90010576:	429a      	cmp	r2, r3
90010578:	f63f ae39 	bhi.w	900101ee <UART_SetConfig+0x8e>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9001057c:	f020 030f 	bic.w	r3, r0, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
90010580:	f3c0 0042 	ubfx	r0, r0, #1, #3
        huart->Instance->BRR = brrtemp;
90010584:	6822      	ldr	r2, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
90010586:	b29b      	uxth	r3, r3
        huart->Instance->BRR = brrtemp;
90010588:	4303      	orrs	r3, r0
9001058a:	2000      	movs	r0, #0
9001058c:	60d3      	str	r3, [r2, #12]
9001058e:	e62f      	b.n	900101f0 <UART_SetConfig+0x90>
  UART_GETCLOCKSOURCE(huart, clocksource);
90010590:	4b37      	ldr	r3, [pc, #220]	; (90010670 <UART_SetConfig+0x510>)
90010592:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010594:	f003 0307 	and.w	r3, r3, #7
90010598:	2b05      	cmp	r3, #5
9001059a:	f63f ae28 	bhi.w	900101ee <UART_SetConfig+0x8e>
9001059e:	4a37      	ldr	r2, [pc, #220]	; (9001067c <UART_SetConfig+0x51c>)
900105a0:	5cd3      	ldrb	r3, [r2, r3]
900105a2:	e635      	b.n	90010210 <UART_SetConfig+0xb0>
900105a4:	4b32      	ldr	r3, [pc, #200]	; (90010670 <UART_SetConfig+0x510>)
900105a6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900105a8:	f003 0338 	and.w	r3, r3, #56	; 0x38
900105ac:	2b28      	cmp	r3, #40	; 0x28
900105ae:	f63f ae1e 	bhi.w	900101ee <UART_SetConfig+0x8e>
900105b2:	4a33      	ldr	r2, [pc, #204]	; (90010680 <UART_SetConfig+0x520>)
900105b4:	5cd3      	ldrb	r3, [r2, r3]
900105b6:	e62b      	b.n	90010210 <UART_SetConfig+0xb0>
          pclk = (uint32_t) HSI_VALUE;
900105b8:	4832      	ldr	r0, [pc, #200]	; (90010684 <UART_SetConfig+0x524>)
900105ba:	e77e      	b.n	900104ba <UART_SetConfig+0x35a>
  UART_GETCLOCKSOURCE(huart, clocksource);
900105bc:	4b2c      	ldr	r3, [pc, #176]	; (90010670 <UART_SetConfig+0x510>)
900105be:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900105c0:	f003 0307 	and.w	r3, r3, #7
900105c4:	2b05      	cmp	r3, #5
900105c6:	f63f ae12 	bhi.w	900101ee <UART_SetConfig+0x8e>
900105ca:	4a2f      	ldr	r2, [pc, #188]	; (90010688 <UART_SetConfig+0x528>)
900105cc:	5cd3      	ldrb	r3, [r2, r3]
900105ce:	e61f      	b.n	90010210 <UART_SetConfig+0xb0>
        pclk = (uint32_t) CSI_VALUE;
900105d0:	482e      	ldr	r0, [pc, #184]	; (9001068c <UART_SetConfig+0x52c>)
900105d2:	e772      	b.n	900104ba <UART_SetConfig+0x35a>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
900105d4:	4b26      	ldr	r3, [pc, #152]	; (90010670 <UART_SetConfig+0x510>)
900105d6:	681a      	ldr	r2, [r3, #0]
900105d8:	0690      	lsls	r0, r2, #26
900105da:	d542      	bpl.n	90010662 <UART_SetConfig+0x502>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
900105dc:	681b      	ldr	r3, [r3, #0]
900105de:	4829      	ldr	r0, [pc, #164]	; (90010684 <UART_SetConfig+0x524>)
900105e0:	f3c3 03c1 	ubfx	r3, r3, #3, #2
900105e4:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
900105e6:	e78c      	b.n	90010502 <UART_SetConfig+0x3a2>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
900105e8:	a803      	add	r0, sp, #12
900105ea:	f7ff f973 	bl	9000f8d4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
900105ee:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
900105f0:	2800      	cmp	r0, #0
900105f2:	f43f af2b 	beq.w	9001044c <UART_SetConfig+0x2ec>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
900105f6:	6a61      	ldr	r1, [r4, #36]	; 0x24
900105f8:	e783      	b.n	90010502 <UART_SetConfig+0x3a2>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
900105fa:	4668      	mov	r0, sp
900105fc:	f7ff f8ac 	bl	9000f758 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
90010600:	9801      	ldr	r0, [sp, #4]
        break;
90010602:	e7f5      	b.n	900105f0 <UART_SetConfig+0x490>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
90010604:	f7ff f896 	bl	9000f734 <HAL_RCCEx_GetD3PCLK1Freq>
        break;
90010608:	e7f2      	b.n	900105f0 <UART_SetConfig+0x490>
        pclk = (uint32_t) CSI_VALUE;
9001060a:	4820      	ldr	r0, [pc, #128]	; (9001068c <UART_SetConfig+0x52c>)
9001060c:	e779      	b.n	90010502 <UART_SetConfig+0x3a2>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9001060e:	4b18      	ldr	r3, [pc, #96]	; (90010670 <UART_SetConfig+0x510>)
90010610:	681a      	ldr	r2, [r3, #0]
90010612:	0691      	lsls	r1, r2, #26
90010614:	d527      	bpl.n	90010666 <UART_SetConfig+0x506>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
90010616:	681b      	ldr	r3, [r3, #0]
90010618:	481a      	ldr	r0, [pc, #104]	; (90010684 <UART_SetConfig+0x524>)
9001061a:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9001061e:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
90010620:	e79a      	b.n	90010558 <UART_SetConfig+0x3f8>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
90010622:	a803      	add	r0, sp, #12
90010624:	f7ff f956 	bl	9000f8d4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
90010628:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9001062a:	2800      	cmp	r0, #0
9001062c:	f43f af0e 	beq.w	9001044c <UART_SetConfig+0x2ec>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010630:	6a65      	ldr	r5, [r4, #36]	; 0x24
90010632:	e791      	b.n	90010558 <UART_SetConfig+0x3f8>
        pclk = HAL_RCC_GetPCLK2Freq();
90010634:	f7fe f91a 	bl	9000e86c <HAL_RCC_GetPCLK2Freq>
        break;
90010638:	e7f7      	b.n	9001062a <UART_SetConfig+0x4ca>
        pclk = HAL_RCC_GetPCLK1Freq();
9001063a:	f7fe f8cf 	bl	9000e7dc <HAL_RCC_GetPCLK1Freq>
        break;
9001063e:	e7f4      	b.n	9001062a <UART_SetConfig+0x4ca>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
90010640:	4668      	mov	r0, sp
90010642:	f7ff f889 	bl	9000f758 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
90010646:	9801      	ldr	r0, [sp, #4]
        break;
90010648:	e7ef      	b.n	9001062a <UART_SetConfig+0x4ca>
        pclk = (uint32_t) CSI_VALUE;
9001064a:	4810      	ldr	r0, [pc, #64]	; (9001068c <UART_SetConfig+0x52c>)
9001064c:	e784      	b.n	90010558 <UART_SetConfig+0x3f8>
  UART_GETCLOCKSOURCE(huart, clocksource);
9001064e:	4b08      	ldr	r3, [pc, #32]	; (90010670 <UART_SetConfig+0x510>)
90010650:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010652:	f003 0307 	and.w	r3, r3, #7
90010656:	2b05      	cmp	r3, #5
90010658:	f63f adc9 	bhi.w	900101ee <UART_SetConfig+0x8e>
9001065c:	4a0c      	ldr	r2, [pc, #48]	; (90010690 <UART_SetConfig+0x530>)
9001065e:	5cd3      	ldrb	r3, [r2, r3]
90010660:	e5d6      	b.n	90010210 <UART_SetConfig+0xb0>
          pclk = (uint32_t) HSI_VALUE;
90010662:	4808      	ldr	r0, [pc, #32]	; (90010684 <UART_SetConfig+0x524>)
90010664:	e74d      	b.n	90010502 <UART_SetConfig+0x3a2>
          pclk = (uint32_t) HSI_VALUE;
90010666:	4807      	ldr	r0, [pc, #28]	; (90010684 <UART_SetConfig+0x524>)
90010668:	e776      	b.n	90010558 <UART_SetConfig+0x3f8>
9001066a:	bf00      	nop
9001066c:	9002fd70 	.word	0x9002fd70
90010670:	58024400 	.word	0x58024400
90010674:	9002fd60 	.word	0x9002fd60
90010678:	000ffcff 	.word	0x000ffcff
9001067c:	9002fd60 	.word	0x9002fd60
90010680:	9002fd34 	.word	0x9002fd34
90010684:	03d09000 	.word	0x03d09000
90010688:	9002fd60 	.word	0x9002fd60
9001068c:	003d0900 	.word	0x003d0900
90010690:	9002fd60 	.word	0x9002fd60

90010694 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
90010694:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010696:	07da      	lsls	r2, r3, #31
{
90010698:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9001069a:	d506      	bpl.n	900106aa <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
9001069c:	6801      	ldr	r1, [r0, #0]
9001069e:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
900106a0:	684a      	ldr	r2, [r1, #4]
900106a2:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
900106a6:	4322      	orrs	r2, r4
900106a8:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
900106aa:	079c      	lsls	r4, r3, #30
900106ac:	d506      	bpl.n	900106bc <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
900106ae:	6801      	ldr	r1, [r0, #0]
900106b0:	6b04      	ldr	r4, [r0, #48]	; 0x30
900106b2:	684a      	ldr	r2, [r1, #4]
900106b4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
900106b8:	4322      	orrs	r2, r4
900106ba:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
900106bc:	0759      	lsls	r1, r3, #29
900106be:	d506      	bpl.n	900106ce <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
900106c0:	6801      	ldr	r1, [r0, #0]
900106c2:	6b44      	ldr	r4, [r0, #52]	; 0x34
900106c4:	684a      	ldr	r2, [r1, #4]
900106c6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
900106ca:	4322      	orrs	r2, r4
900106cc:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
900106ce:	071a      	lsls	r2, r3, #28
900106d0:	d506      	bpl.n	900106e0 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
900106d2:	6801      	ldr	r1, [r0, #0]
900106d4:	6b84      	ldr	r4, [r0, #56]	; 0x38
900106d6:	684a      	ldr	r2, [r1, #4]
900106d8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
900106dc:	4322      	orrs	r2, r4
900106de:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
900106e0:	06dc      	lsls	r4, r3, #27
900106e2:	d506      	bpl.n	900106f2 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
900106e4:	6801      	ldr	r1, [r0, #0]
900106e6:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
900106e8:	688a      	ldr	r2, [r1, #8]
900106ea:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
900106ee:	4322      	orrs	r2, r4
900106f0:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
900106f2:	0699      	lsls	r1, r3, #26
900106f4:	d506      	bpl.n	90010704 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
900106f6:	6801      	ldr	r1, [r0, #0]
900106f8:	6c04      	ldr	r4, [r0, #64]	; 0x40
900106fa:	688a      	ldr	r2, [r1, #8]
900106fc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
90010700:	4322      	orrs	r2, r4
90010702:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
90010704:	065a      	lsls	r2, r3, #25
90010706:	d50a      	bpl.n	9001071e <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
90010708:	6801      	ldr	r1, [r0, #0]
9001070a:	6c44      	ldr	r4, [r0, #68]	; 0x44
9001070c:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9001070e:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
90010712:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
90010716:	ea42 0204 	orr.w	r2, r2, r4
9001071a:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9001071c:	d00b      	beq.n	90010736 <UART_AdvFeatureConfig+0xa2>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
9001071e:	061b      	lsls	r3, r3, #24
90010720:	d506      	bpl.n	90010730 <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
90010722:	6802      	ldr	r2, [r0, #0]
90010724:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
90010726:	6853      	ldr	r3, [r2, #4]
90010728:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
9001072c:	430b      	orrs	r3, r1
9001072e:	6053      	str	r3, [r2, #4]
}
90010730:	f85d 4b04 	ldr.w	r4, [sp], #4
90010734:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
90010736:	684a      	ldr	r2, [r1, #4]
90010738:	6c84      	ldr	r4, [r0, #72]	; 0x48
9001073a:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
9001073e:	4322      	orrs	r2, r4
90010740:	604a      	str	r2, [r1, #4]
90010742:	e7ec      	b.n	9001071e <UART_AdvFeatureConfig+0x8a>

90010744 <UART_CheckIdleState>:
{
90010744:	b538      	push	{r3, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
90010746:	2300      	movs	r3, #0
{
90010748:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9001074a:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
  tickstart = HAL_GetTick();
9001074e:	f7f9 fc39 	bl	90009fc4 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
90010752:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
90010754:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
90010756:	6813      	ldr	r3, [r2, #0]
90010758:	071b      	lsls	r3, r3, #28
9001075a:	d40e      	bmi.n	9001077a <UART_CheckIdleState+0x36>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9001075c:	6813      	ldr	r3, [r2, #0]
9001075e:	0759      	lsls	r1, r3, #29
90010760:	d432      	bmi.n	900107c8 <UART_CheckIdleState+0x84>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010762:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
90010764:	2220      	movs	r2, #32
  return HAL_OK;
90010766:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
90010768:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
  __HAL_UNLOCK(huart);
9001076c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
  huart->RxState = HAL_UART_STATE_READY;
90010770:	f8c4 208c 	str.w	r2, [r4, #140]	; 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010774:	66e3      	str	r3, [r4, #108]	; 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
90010776:	6723      	str	r3, [r4, #112]	; 0x70
}
90010778:	bd38      	pop	{r3, r4, r5, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9001077a:	69d3      	ldr	r3, [r2, #28]
9001077c:	0298      	lsls	r0, r3, #10
9001077e:	d4ed      	bmi.n	9001075c <UART_CheckIdleState+0x18>
90010780:	e00c      	b.n	9001079c <UART_CheckIdleState+0x58>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
90010782:	6819      	ldr	r1, [r3, #0]
90010784:	461a      	mov	r2, r3
90010786:	0749      	lsls	r1, r1, #29
90010788:	d505      	bpl.n	90010796 <UART_CheckIdleState+0x52>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9001078a:	69d9      	ldr	r1, [r3, #28]
9001078c:	0708      	lsls	r0, r1, #28
9001078e:	d44f      	bmi.n	90010830 <UART_CheckIdleState+0xec>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
90010790:	69d9      	ldr	r1, [r3, #28]
90010792:	0509      	lsls	r1, r1, #20
90010794:	d47a      	bmi.n	9001088c <UART_CheckIdleState+0x148>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
90010796:	69db      	ldr	r3, [r3, #28]
90010798:	0298      	lsls	r0, r3, #10
9001079a:	d4df      	bmi.n	9001075c <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9001079c:	f7f9 fc12 	bl	90009fc4 <HAL_GetTick>
900107a0:	1b43      	subs	r3, r0, r5
900107a2:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
900107a6:	6823      	ldr	r3, [r4, #0]
900107a8:	d3eb      	bcc.n	90010782 <UART_CheckIdleState+0x3e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900107aa:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
900107ae:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900107b2:	e843 2100 	strex	r1, r2, [r3]
900107b6:	2900      	cmp	r1, #0
900107b8:	d1f7      	bne.n	900107aa <UART_CheckIdleState+0x66>
      huart->gState = HAL_UART_STATE_READY;
900107ba:	2320      	movs	r3, #32
      return HAL_TIMEOUT;
900107bc:	2003      	movs	r0, #3
      __HAL_UNLOCK(huart);
900107be:	f884 1084 	strb.w	r1, [r4, #132]	; 0x84
      huart->gState = HAL_UART_STATE_READY;
900107c2:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
}
900107c6:	bd38      	pop	{r3, r4, r5, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
900107c8:	69d3      	ldr	r3, [r2, #28]
900107ca:	025b      	lsls	r3, r3, #9
900107cc:	d4c9      	bmi.n	90010762 <UART_CheckIdleState+0x1e>
900107ce:	e00d      	b.n	900107ec <UART_CheckIdleState+0xa8>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
900107d0:	681a      	ldr	r2, [r3, #0]
900107d2:	0750      	lsls	r0, r2, #29
900107d4:	d507      	bpl.n	900107e6 <UART_CheckIdleState+0xa2>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
900107d6:	69da      	ldr	r2, [r3, #28]
900107d8:	0711      	lsls	r1, r2, #28
900107da:	f100 8085 	bmi.w	900108e8 <UART_CheckIdleState+0x1a4>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
900107de:	69da      	ldr	r2, [r3, #28]
900107e0:	0512      	lsls	r2, r2, #20
900107e2:	f100 80af 	bmi.w	90010944 <UART_CheckIdleState+0x200>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
900107e6:	69db      	ldr	r3, [r3, #28]
900107e8:	025b      	lsls	r3, r3, #9
900107ea:	d4ba      	bmi.n	90010762 <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900107ec:	f7f9 fbea 	bl	90009fc4 <HAL_GetTick>
900107f0:	1b43      	subs	r3, r0, r5
900107f2:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
900107f6:	6823      	ldr	r3, [r4, #0]
900107f8:	d3ea      	bcc.n	900107d0 <UART_CheckIdleState+0x8c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900107fa:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
900107fe:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010802:	e843 2100 	strex	r1, r2, [r3]
90010806:	2900      	cmp	r1, #0
90010808:	d1f7      	bne.n	900107fa <UART_CheckIdleState+0xb6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001080a:	f103 0208 	add.w	r2, r3, #8
9001080e:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
90010812:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010816:	f103 0008 	add.w	r0, r3, #8
9001081a:	e840 2100 	strex	r1, r2, [r0]
9001081e:	2900      	cmp	r1, #0
90010820:	d1f3      	bne.n	9001080a <UART_CheckIdleState+0xc6>
      huart->RxState = HAL_UART_STATE_READY;
90010822:	2320      	movs	r3, #32
      return HAL_TIMEOUT;
90010824:	2003      	movs	r0, #3
      __HAL_UNLOCK(huart);
90010826:	f884 1084 	strb.w	r1, [r4, #132]	; 0x84
      huart->RxState = HAL_UART_STATE_READY;
9001082a:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
}
9001082e:	bd38      	pop	{r3, r4, r5, pc}
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
90010830:	2208      	movs	r2, #8
90010832:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010834:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90010838:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9001083c:	e843 2100 	strex	r1, r2, [r3]
90010840:	2900      	cmp	r1, #0
90010842:	d1f7      	bne.n	90010834 <UART_CheckIdleState+0xf0>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
90010844:	4856      	ldr	r0, [pc, #344]	; (900109a0 <UART_CheckIdleState+0x25c>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010846:	f103 0208 	add.w	r2, r3, #8
9001084a:	e852 2f00 	ldrex	r2, [r2]
9001084e:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010850:	f103 0508 	add.w	r5, r3, #8
90010854:	e845 2100 	strex	r1, r2, [r5]
90010858:	2900      	cmp	r1, #0
9001085a:	d1f4      	bne.n	90010846 <UART_CheckIdleState+0x102>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9001085c:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
9001085e:	2a01      	cmp	r2, #1
90010860:	d00b      	beq.n	9001087a <UART_CheckIdleState+0x136>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010862:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
90010864:	2020      	movs	r0, #32
           huart->ErrorCode = HAL_UART_ERROR_ORE;
90010866:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
90010868:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
  huart->RxISR = NULL;
9001086c:	6762      	str	r2, [r4, #116]	; 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9001086e:	66e2      	str	r2, [r4, #108]	; 0x6c
           __HAL_UNLOCK(huart);
90010870:	f884 2084 	strb.w	r2, [r4, #132]	; 0x84
           huart->ErrorCode = HAL_UART_ERROR_ORE;
90010874:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
           return HAL_ERROR;
90010878:	e797      	b.n	900107aa <UART_CheckIdleState+0x66>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001087a:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9001087e:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010882:	e843 2100 	strex	r1, r2, [r3]
90010886:	2900      	cmp	r1, #0
90010888:	d1f7      	bne.n	9001087a <UART_CheckIdleState+0x136>
9001088a:	e7ea      	b.n	90010862 <UART_CheckIdleState+0x11e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9001088c:	f44f 6200 	mov.w	r2, #2048	; 0x800
90010890:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010892:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90010896:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9001089a:	e843 2100 	strex	r1, r2, [r3]
9001089e:	2900      	cmp	r1, #0
900108a0:	d1f7      	bne.n	90010892 <UART_CheckIdleState+0x14e>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
900108a2:	483f      	ldr	r0, [pc, #252]	; (900109a0 <UART_CheckIdleState+0x25c>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900108a4:	f103 0208 	add.w	r2, r3, #8
900108a8:	e852 2f00 	ldrex	r2, [r2]
900108ac:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900108ae:	f103 0508 	add.w	r5, r3, #8
900108b2:	e845 2100 	strex	r1, r2, [r5]
900108b6:	2900      	cmp	r1, #0
900108b8:	d1f4      	bne.n	900108a4 <UART_CheckIdleState+0x160>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
900108ba:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
900108bc:	2a01      	cmp	r2, #1
900108be:	d00a      	beq.n	900108d6 <UART_CheckIdleState+0x192>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900108c0:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
900108c2:	2120      	movs	r1, #32
  huart->RxISR = NULL;
900108c4:	6762      	str	r2, [r4, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
900108c6:	f8c4 108c 	str.w	r1, [r4, #140]	; 0x8c
          __HAL_UNLOCK(huart);
900108ca:	f884 2084 	strb.w	r2, [r4, #132]	; 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900108ce:	66e2      	str	r2, [r4, #108]	; 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
900108d0:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
          return HAL_TIMEOUT;
900108d4:	e769      	b.n	900107aa <UART_CheckIdleState+0x66>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900108d6:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
900108da:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900108de:	e843 2100 	strex	r1, r2, [r3]
900108e2:	2900      	cmp	r1, #0
900108e4:	d1f7      	bne.n	900108d6 <UART_CheckIdleState+0x192>
900108e6:	e7eb      	b.n	900108c0 <UART_CheckIdleState+0x17c>
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
900108e8:	2208      	movs	r2, #8
900108ea:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900108ec:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
900108f0:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900108f4:	e843 2100 	strex	r1, r2, [r3]
900108f8:	2900      	cmp	r1, #0
900108fa:	d1f7      	bne.n	900108ec <UART_CheckIdleState+0x1a8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
900108fc:	4828      	ldr	r0, [pc, #160]	; (900109a0 <UART_CheckIdleState+0x25c>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900108fe:	f103 0208 	add.w	r2, r3, #8
90010902:	e852 2f00 	ldrex	r2, [r2]
90010906:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010908:	f103 0508 	add.w	r5, r3, #8
9001090c:	e845 2100 	strex	r1, r2, [r5]
90010910:	2900      	cmp	r1, #0
90010912:	d1f4      	bne.n	900108fe <UART_CheckIdleState+0x1ba>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
90010914:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
90010916:	2a01      	cmp	r2, #1
90010918:	d00b      	beq.n	90010932 <UART_CheckIdleState+0x1ee>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9001091a:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9001091c:	2020      	movs	r0, #32
           huart->ErrorCode = HAL_UART_ERROR_ORE;
9001091e:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
90010920:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
  huart->RxISR = NULL;
90010924:	6762      	str	r2, [r4, #116]	; 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010926:	66e2      	str	r2, [r4, #108]	; 0x6c
           __HAL_UNLOCK(huart);
90010928:	f884 2084 	strb.w	r2, [r4, #132]	; 0x84
           huart->ErrorCode = HAL_UART_ERROR_ORE;
9001092c:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
           return HAL_ERROR;
90010930:	e763      	b.n	900107fa <UART_CheckIdleState+0xb6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010932:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90010936:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9001093a:	e843 2100 	strex	r1, r2, [r3]
9001093e:	2900      	cmp	r1, #0
90010940:	d1f7      	bne.n	90010932 <UART_CheckIdleState+0x1ee>
90010942:	e7ea      	b.n	9001091a <UART_CheckIdleState+0x1d6>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
90010944:	f44f 6200 	mov.w	r2, #2048	; 0x800
90010948:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001094a:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9001094e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010952:	e843 2100 	strex	r1, r2, [r3]
90010956:	2900      	cmp	r1, #0
90010958:	d1f7      	bne.n	9001094a <UART_CheckIdleState+0x206>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9001095a:	4811      	ldr	r0, [pc, #68]	; (900109a0 <UART_CheckIdleState+0x25c>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001095c:	f103 0208 	add.w	r2, r3, #8
90010960:	e852 2f00 	ldrex	r2, [r2]
90010964:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010966:	f103 0508 	add.w	r5, r3, #8
9001096a:	e845 2100 	strex	r1, r2, [r5]
9001096e:	2900      	cmp	r1, #0
90010970:	d1f4      	bne.n	9001095c <UART_CheckIdleState+0x218>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
90010972:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
90010974:	2a01      	cmp	r2, #1
90010976:	d00a      	beq.n	9001098e <UART_CheckIdleState+0x24a>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010978:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9001097a:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9001097c:	6762      	str	r2, [r4, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
9001097e:	f8c4 108c 	str.w	r1, [r4, #140]	; 0x8c
          __HAL_UNLOCK(huart);
90010982:	f884 2084 	strb.w	r2, [r4, #132]	; 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010986:	66e2      	str	r2, [r4, #108]	; 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
90010988:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
          return HAL_TIMEOUT;
9001098c:	e735      	b.n	900107fa <UART_CheckIdleState+0xb6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001098e:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90010992:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010996:	e843 2100 	strex	r1, r2, [r3]
9001099a:	2900      	cmp	r1, #0
9001099c:	d1f7      	bne.n	9001098e <UART_CheckIdleState+0x24a>
9001099e:	e7eb      	b.n	90010978 <UART_CheckIdleState+0x234>
900109a0:	effffffe 	.word	0xeffffffe

900109a4 <HAL_UART_Init>:
  if (huart == NULL)
900109a4:	b380      	cbz	r0, 90010a08 <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
900109a6:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
{
900109aa:	b510      	push	{r4, lr}
900109ac:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
900109ae:	b333      	cbz	r3, 900109fe <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
900109b0:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
900109b2:	2324      	movs	r3, #36	; 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
900109b4:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
900109b6:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  __HAL_UART_DISABLE(huart);
900109ba:	6813      	ldr	r3, [r2, #0]
900109bc:	f023 0301 	bic.w	r3, r3, #1
900109c0:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
900109c2:	f7ff fbcd 	bl	90010160 <UART_SetConfig>
900109c6:	2801      	cmp	r0, #1
900109c8:	d017      	beq.n	900109fa <HAL_UART_Init+0x56>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
900109ca:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900109cc:	b98b      	cbnz	r3, 900109f2 <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
900109ce:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
900109d0:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
900109d2:	685a      	ldr	r2, [r3, #4]
900109d4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
900109d8:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
900109da:	689a      	ldr	r2, [r3, #8]
900109dc:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
900109e0:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
900109e2:	681a      	ldr	r2, [r3, #0]
900109e4:	f042 0201 	orr.w	r2, r2, #1
}
900109e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
900109ec:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
900109ee:	f7ff bea9 	b.w	90010744 <UART_CheckIdleState>
    UART_AdvFeatureConfig(huart);
900109f2:	4620      	mov	r0, r4
900109f4:	f7ff fe4e 	bl	90010694 <UART_AdvFeatureConfig>
900109f8:	e7e9      	b.n	900109ce <HAL_UART_Init+0x2a>
}
900109fa:	2001      	movs	r0, #1
900109fc:	bd10      	pop	{r4, pc}
    huart->Lock = HAL_UNLOCKED;
900109fe:	f880 3084 	strb.w	r3, [r0, #132]	; 0x84
    HAL_UART_MspInit(huart);
90010a02:	f7f4 fbcd 	bl	900051a0 <HAL_UART_MspInit>
90010a06:	e7d3      	b.n	900109b0 <HAL_UART_Init+0xc>
}
90010a08:	2001      	movs	r0, #1
90010a0a:	4770      	bx	lr

90010a0c <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
90010a0c:	f890 2084 	ldrb.w	r2, [r0, #132]	; 0x84
90010a10:	2a01      	cmp	r2, #1
90010a12:	d017      	beq.n	90010a44 <HAL_UARTEx_DisableFifoMode+0x38>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
90010a14:	6802      	ldr	r2, [r0, #0]
90010a16:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
90010a18:	2024      	movs	r0, #36	; 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Enable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
90010a1a:	2100      	movs	r1, #0
{
90010a1c:	b430      	push	{r4, r5}
  huart->gState = HAL_UART_STATE_BUSY;
90010a1e:	f8c3 0088 	str.w	r0, [r3, #136]	; 0x88

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
90010a22:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
90010a24:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
90010a26:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
90010a28:	f020 5000 	bic.w	r0, r0, #536870912	; 0x20000000
  __HAL_UART_DISABLE(huart);
90010a2c:	f024 0401 	bic.w	r4, r4, #1
90010a30:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
90010a32:	6659      	str	r1, [r3, #100]	; 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
90010a34:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);

  return HAL_OK;
90010a36:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
90010a38:	f8c3 5088 	str.w	r5, [r3, #136]	; 0x88
  __HAL_UNLOCK(huart);
90010a3c:	f883 1084 	strb.w	r1, [r3, #132]	; 0x84
}
90010a40:	bc30      	pop	{r4, r5}
90010a42:	4770      	bx	lr
  __HAL_LOCK(huart);
90010a44:	2002      	movs	r0, #2
}
90010a46:	4770      	bx	lr

90010a48 <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
90010a48:	f890 2084 	ldrb.w	r2, [r0, #132]	; 0x84
90010a4c:	2a01      	cmp	r2, #1
90010a4e:	d037      	beq.n	90010ac0 <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
90010a50:	6802      	ldr	r2, [r0, #0]
90010a52:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
90010a54:	2024      	movs	r0, #36	; 0x24
{
90010a56:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
90010a58:	f8c3 0088 	str.w	r0, [r3, #136]	; 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
90010a5c:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
90010a5e:	6810      	ldr	r0, [r2, #0]
90010a60:	f020 0001 	bic.w	r0, r0, #1
90010a64:	6010      	str	r0, [r2, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
90010a66:	6890      	ldr	r0, [r2, #8]
90010a68:	f020 4060 	bic.w	r0, r0, #3758096384	; 0xe0000000
90010a6c:	4301      	orrs	r1, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
90010a6e:	6e58      	ldr	r0, [r3, #100]	; 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
90010a70:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
90010a72:	b310      	cbz	r0, 90010aba <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
90010a74:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
90010a76:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010a78:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010a7c:	4911      	ldr	r1, [pc, #68]	; (90010ac4 <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
90010a7e:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
90010a82:	4d11      	ldr	r5, [pc, #68]	; (90010ac8 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010a84:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010a88:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
90010a8c:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010a90:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
90010a92:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010a96:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010a98:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010a9c:	fbb1 f1f5 	udiv	r1, r1, r5
90010aa0:	f8a3 1068 	strh.w	r1, [r3, #104]	; 0x68
  huart->gState = HAL_UART_STATE_READY;
90010aa4:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
90010aa6:	2100      	movs	r1, #0
90010aa8:	f8a3 006a 	strh.w	r0, [r3, #106]	; 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
90010aac:	6014      	str	r4, [r2, #0]
  return HAL_OK;
90010aae:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
90010ab0:	f8c3 5088 	str.w	r5, [r3, #136]	; 0x88
  __HAL_UNLOCK(huart);
90010ab4:	f883 1084 	strb.w	r1, [r3, #132]	; 0x84
}
90010ab8:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
90010aba:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
90010abc:	4608      	mov	r0, r1
90010abe:	e7ef      	b.n	90010aa0 <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
90010ac0:	2002      	movs	r0, #2
}
90010ac2:	4770      	bx	lr
90010ac4:	9002fd90 	.word	0x9002fd90
90010ac8:	9002fd88 	.word	0x9002fd88

90010acc <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
90010acc:	f890 2084 	ldrb.w	r2, [r0, #132]	; 0x84
90010ad0:	2a01      	cmp	r2, #1
90010ad2:	d037      	beq.n	90010b44 <HAL_UARTEx_SetRxFifoThreshold+0x78>
  tmpcr1 = READ_REG(huart->Instance->CR1);
90010ad4:	6802      	ldr	r2, [r0, #0]
90010ad6:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
90010ad8:	2024      	movs	r0, #36	; 0x24
{
90010ada:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
90010adc:	f8c3 0088 	str.w	r0, [r3, #136]	; 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
90010ae0:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
90010ae2:	6810      	ldr	r0, [r2, #0]
90010ae4:	f020 0001 	bic.w	r0, r0, #1
90010ae8:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
90010aea:	6890      	ldr	r0, [r2, #8]
90010aec:	f020 6060 	bic.w	r0, r0, #234881024	; 0xe000000
90010af0:	4301      	orrs	r1, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
90010af2:	6e58      	ldr	r0, [r3, #100]	; 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
90010af4:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
90010af6:	b310      	cbz	r0, 90010b3e <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
90010af8:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
90010afa:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010afc:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010b00:	4911      	ldr	r1, [pc, #68]	; (90010b48 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
90010b02:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
90010b06:	4d11      	ldr	r5, [pc, #68]	; (90010b4c <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010b08:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010b0c:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
90010b10:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010b14:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
90010b16:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010b1a:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010b1c:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010b20:	fbb1 f1f5 	udiv	r1, r1, r5
90010b24:	f8a3 1068 	strh.w	r1, [r3, #104]	; 0x68
  huart->gState = HAL_UART_STATE_READY;
90010b28:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
90010b2a:	2100      	movs	r1, #0
90010b2c:	f8a3 006a 	strh.w	r0, [r3, #106]	; 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
90010b30:	6014      	str	r4, [r2, #0]
  return HAL_OK;
90010b32:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
90010b34:	f8c3 5088 	str.w	r5, [r3, #136]	; 0x88
  __HAL_UNLOCK(huart);
90010b38:	f883 1084 	strb.w	r1, [r3, #132]	; 0x84
}
90010b3c:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
90010b3e:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
90010b40:	4608      	mov	r0, r1
90010b42:	e7ef      	b.n	90010b24 <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
90010b44:	2002      	movs	r0, #2
}
90010b46:	4770      	bx	lr
90010b48:	9002fd90 	.word	0x9002fd90
90010b4c:	9002fd88 	.word	0x9002fd88

90010b50 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
90010b50:	680b      	ldr	r3, [r1, #0]
{
90010b52:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
90010b54:	b9d3      	cbnz	r3, 90010b8c <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
90010b56:	6804      	ldr	r4, [r0, #0]
90010b58:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
90010b5c:	684a      	ldr	r2, [r1, #4]
90010b5e:	4023      	ands	r3, r4
90010b60:	4313      	orrs	r3, r2
90010b62:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
90010b66:	4323      	orrs	r3, r4
90010b68:	4313      	orrs	r3, r2
90010b6a:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
90010b6e:	4323      	orrs	r3, r4
90010b70:	4313      	orrs	r3, r2
90010b72:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
90010b76:	4323      	orrs	r3, r4
90010b78:	4313      	orrs	r3, r2
90010b7a:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
90010b7e:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
90010b80:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
90010b84:	4313      	orrs	r3, r2
90010b86:	6003      	str	r3, [r0, #0]
}
90010b88:	2000      	movs	r0, #0
90010b8a:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
90010b8c:	6802      	ldr	r2, [r0, #0]
90010b8e:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
90010b92:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
90010b96:	4322      	orrs	r2, r4
90010b98:	6a4c      	ldr	r4, [r1, #36]	; 0x24
90010b9a:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
90010b9c:	4b0a      	ldr	r3, [pc, #40]	; (90010bc8 <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
90010b9e:	4322      	orrs	r2, r4
90010ba0:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
90010ba2:	6842      	ldr	r2, [r0, #4]
90010ba4:	4013      	ands	r3, r2
90010ba6:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
90010baa:	4323      	orrs	r3, r4
90010bac:	4313      	orrs	r3, r2
90010bae:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
90010bb2:	4323      	orrs	r3, r4
90010bb4:	4313      	orrs	r3, r2
90010bb6:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
90010bba:	4323      	orrs	r3, r4
}
90010bbc:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
90010bc0:	4313      	orrs	r3, r2
90010bc2:	6043      	str	r3, [r0, #4]
}
90010bc4:	2000      	movs	r0, #0
90010bc6:	4770      	bx	lr
90010bc8:	ffff8000 	.word	0xffff8000

90010bcc <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
90010bcc:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
90010bce:	bb0a      	cbnz	r2, 90010c14 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90010bd0:	6883      	ldr	r3, [r0, #8]
90010bd2:	e9d1 2400 	ldrd	r2, r4, [r1]
90010bd6:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
90010bda:	3c01      	subs	r4, #1
90010bdc:	3a01      	subs	r2, #1
90010bde:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
90010be2:	4313      	orrs	r3, r2
90010be4:	e9d1 2402 	ldrd	r2, r4, [r1, #8]
90010be8:	3a01      	subs	r2, #1
90010bea:	3c01      	subs	r4, #1
90010bec:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
90010bf0:	ea43 3204 	orr.w	r2, r3, r4, lsl #12
90010bf4:	e9d1 3404 	ldrd	r3, r4, [r1, #16]
90010bf8:	6989      	ldr	r1, [r1, #24]
90010bfa:	3b01      	subs	r3, #1
90010bfc:	3c01      	subs	r4, #1
90010bfe:	3901      	subs	r1, #1
90010c00:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
90010c04:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
90010c08:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
90010c0c:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90010c0e:	6083      	str	r3, [r0, #8]
}
90010c10:	2000      	movs	r0, #0
90010c12:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90010c14:	6882      	ldr	r2, [r0, #8]
90010c16:	68cc      	ldr	r4, [r1, #12]
90010c18:	4b11      	ldr	r3, [pc, #68]	; (90010c60 <FMC_SDRAM_Timing_Init+0x94>)
90010c1a:	3c01      	subs	r4, #1
90010c1c:	4013      	ands	r3, r2
90010c1e:	694a      	ldr	r2, [r1, #20]
90010c20:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
90010c24:	1e54      	subs	r4, r2, #1
90010c26:	ea43 5404 	orr.w	r4, r3, r4, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
90010c2a:	e9d1 2500 	ldrd	r2, r5, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90010c2e:	6084      	str	r4, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
90010c30:	68c3      	ldr	r3, [r0, #12]
90010c32:	1e6c      	subs	r4, r5, #1
90010c34:	3a01      	subs	r2, #1
90010c36:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
90010c3a:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
90010c3e:	690c      	ldr	r4, [r1, #16]
90010c40:	431a      	orrs	r2, r3
90010c42:	688b      	ldr	r3, [r1, #8]
90010c44:	3c01      	subs	r4, #1
90010c46:	6989      	ldr	r1, [r1, #24]
90010c48:	3b01      	subs	r3, #1
90010c4a:	3901      	subs	r1, #1
90010c4c:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
90010c50:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
90010c54:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
}
90010c58:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
90010c5a:	60c3      	str	r3, [r0, #12]
}
90010c5c:	2000      	movs	r0, #0
90010c5e:	4770      	bx	lr
90010c60:	ff0f0fff 	.word	0xff0f0fff

90010c64 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
90010c64:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
90010c66:	2200      	movs	r2, #0
{
90010c68:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
90010c6a:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
90010c6e:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
90010c72:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
90010c76:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
90010c7a:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
90010c7c:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
90010c80:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
90010c82:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
90010c84:	619a      	str	r2, [r3, #24]
}
90010c86:	bc30      	pop	{r4, r5}
90010c88:	4770      	bx	lr
90010c8a:	bf00      	nop

90010c8c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
90010c8c:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
90010c8e:	e9d1 3400 	ldrd	r3, r4, [r1]
{
90010c92:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
90010c94:	6900      	ldr	r0, [r0, #16]
90010c96:	4323      	orrs	r3, r4
90010c98:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
90010c9c:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
90010ca0:	4c05      	ldr	r4, [pc, #20]	; (90010cb8 <FMC_SDRAM_SendCommand+0x2c>)
90010ca2:	3901      	subs	r1, #1
90010ca4:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
90010ca6:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
90010ca8:	4323      	orrs	r3, r4
}
90010caa:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
90010cae:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
90010cb2:	6113      	str	r3, [r2, #16]
}
90010cb4:	4770      	bx	lr
90010cb6:	bf00      	nop
90010cb8:	ffc00000 	.word	0xffc00000

90010cbc <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
90010cbc:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
90010cbe:	4b05      	ldr	r3, [pc, #20]	; (90010cd4 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
90010cc0:	2000      	movs	r0, #0
{
90010cc2:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
90010cc4:	6954      	ldr	r4, [r2, #20]
90010cc6:	4023      	ands	r3, r4
}
90010cc8:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
90010ccc:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
90010cd0:	6151      	str	r1, [r2, #20]
}
90010cd2:	4770      	bx	lr
90010cd4:	ffffc001 	.word	0xffffc001

90010cd8 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
90010cd8:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
90010cda:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010cde:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
90010ce0:	f002 fc90 	bl	90013604 <xTaskGetSchedulerState>
90010ce4:	2801      	cmp	r0, #1
90010ce6:	d100      	bne.n	90010cea <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
90010ce8:	bd08      	pop	{r3, pc}
90010cea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
90010cee:	f000 bcc9 	b.w	90011684 <xPortSysTickHandler>
90010cf2:	bf00      	nop

90010cf4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
90010cf4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
90010cf8:	b92b      	cbnz	r3, 90010d06 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
90010cfa:	4b06      	ldr	r3, [pc, #24]	; (90010d14 <osKernelInitialize+0x20>)
90010cfc:	6818      	ldr	r0, [r3, #0]
90010cfe:	b928      	cbnz	r0, 90010d0c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
90010d00:	2201      	movs	r2, #1
90010d02:	601a      	str	r2, [r3, #0]
      stat = osOK;
90010d04:	4770      	bx	lr
    stat = osErrorISR;
90010d06:	f06f 0005 	mvn.w	r0, #5
90010d0a:	4770      	bx	lr
    } else {
      stat = osError;
90010d0c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
90010d10:	4770      	bx	lr
90010d12:	bf00      	nop
90010d14:	2400ebec 	.word	0x2400ebec

90010d18 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
90010d18:	b510      	push	{r4, lr}
90010d1a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
90010d1e:	b974      	cbnz	r4, 90010d3e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
90010d20:	4b08      	ldr	r3, [pc, #32]	; (90010d44 <osKernelStart+0x2c>)
90010d22:	681a      	ldr	r2, [r3, #0]
90010d24:	2a01      	cmp	r2, #1
90010d26:	d107      	bne.n	90010d38 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90010d28:	4907      	ldr	r1, [pc, #28]	; (90010d48 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
90010d2a:	2202      	movs	r2, #2
90010d2c:	77cc      	strb	r4, [r1, #31]
90010d2e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
90010d30:	f002 fa0c 	bl	9001314c <vTaskStartScheduler>
      stat = osOK;
90010d34:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
90010d36:	bd10      	pop	{r4, pc}
      stat = osError;
90010d38:	f04f 30ff 	mov.w	r0, #4294967295
}
90010d3c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
90010d3e:	f06f 0005 	mvn.w	r0, #5
}
90010d42:	bd10      	pop	{r4, pc}
90010d44:	2400ebec 	.word	0x2400ebec
90010d48:	e000ed00 	.word	0xe000ed00

90010d4c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
90010d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
90010d4e:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
90010d50:	b087      	sub	sp, #28
90010d52:	4614      	mov	r4, r2
  hTask = NULL;
90010d54:	9505      	str	r5, [sp, #20]
90010d56:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
90010d5a:	bb4a      	cbnz	r2, 90010db0 <osThreadNew+0x64>
90010d5c:	b340      	cbz	r0, 90010db0 <osThreadNew+0x64>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
90010d5e:	b1e4      	cbz	r4, 90010d9a <osThreadNew+0x4e>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
90010d60:	69a6      	ldr	r6, [r4, #24]
90010d62:	bb4e      	cbnz	r6, 90010db8 <osThreadNew+0x6c>
90010d64:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
90010d66:	6863      	ldr	r3, [r4, #4]
90010d68:	07db      	lsls	r3, r3, #31
90010d6a:	d421      	bmi.n	90010db0 <osThreadNew+0x64>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
90010d6c:	6963      	ldr	r3, [r4, #20]
90010d6e:	b33b      	cbz	r3, 90010dc0 <osThreadNew+0x74>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
90010d70:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
90010d74:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
90010d76:	6827      	ldr	r7, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
90010d78:	b33d      	cbz	r5, 90010dca <osThreadNew+0x7e>
90010d7a:	68e2      	ldr	r2, [r4, #12]
90010d7c:	2abf      	cmp	r2, #191	; 0xbf
90010d7e:	d917      	bls.n	90010db0 <osThreadNew+0x64>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
90010d80:	6924      	ldr	r4, [r4, #16]
90010d82:	b1ab      	cbz	r3, 90010db0 <osThreadNew+0x64>
90010d84:	b1a4      	cbz	r4, 90010db0 <osThreadNew+0x64>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
90010d86:	460b      	mov	r3, r1
90010d88:	4662      	mov	r2, ip
90010d8a:	4639      	mov	r1, r7
90010d8c:	9600      	str	r6, [sp, #0]
90010d8e:	e9cd 4501 	strd	r4, r5, [sp, #4]
90010d92:	f002 f919 	bl	90012fc8 <xTaskCreateStatic>
90010d96:	4605      	mov	r5, r0
90010d98:	e00b      	b.n	90010db2 <osThreadNew+0x66>
90010d9a:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
90010d9c:	2618      	movs	r6, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
90010d9e:	460b      	mov	r3, r1
90010da0:	4621      	mov	r1, r4
90010da2:	ac05      	add	r4, sp, #20
90010da4:	9600      	str	r6, [sp, #0]
90010da6:	9401      	str	r4, [sp, #4]
90010da8:	f002 f948 	bl	9001303c <xTaskCreate>
90010dac:	2801      	cmp	r0, #1
90010dae:	d00a      	beq.n	90010dc6 <osThreadNew+0x7a>
        return (NULL);
90010db0:	2500      	movs	r5, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
90010db2:	4628      	mov	r0, r5
90010db4:	b007      	add	sp, #28
90010db6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
90010db8:	1e72      	subs	r2, r6, #1
90010dba:	2a37      	cmp	r2, #55	; 0x37
90010dbc:	d9d3      	bls.n	90010d66 <osThreadNew+0x1a>
90010dbe:	e7f8      	b.n	90010db2 <osThreadNew+0x66>
    stack = configMINIMAL_STACK_SIZE;
90010dc0:	f04f 0c80 	mov.w	ip, #128	; 0x80
90010dc4:	e7d6      	b.n	90010d74 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
90010dc6:	9d05      	ldr	r5, [sp, #20]
90010dc8:	e7f3      	b.n	90010db2 <osThreadNew+0x66>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
90010dca:	68e3      	ldr	r3, [r4, #12]
90010dcc:	2b00      	cmp	r3, #0
90010dce:	d1f0      	bne.n	90010db2 <osThreadNew+0x66>
90010dd0:	6923      	ldr	r3, [r4, #16]
90010dd2:	2b00      	cmp	r3, #0
90010dd4:	d1ed      	bne.n	90010db2 <osThreadNew+0x66>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
90010dd6:	fa1f f28c 	uxth.w	r2, ip
90010dda:	463c      	mov	r4, r7
90010ddc:	e7df      	b.n	90010d9e <osThreadNew+0x52>
90010dde:	bf00      	nop

90010de0 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
90010de0:	b510      	push	{r4, lr}
90010de2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
90010de6:	b92c      	cbnz	r4, 90010df4 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
90010de8:	b900      	cbnz	r0, 90010dec <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
90010dea:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
90010dec:	f002 f958 	bl	900130a0 <vTaskDelay>
    stat = osOK;
90010df0:	4620      	mov	r0, r4
}
90010df2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
90010df4:	f06f 0005 	mvn.w	r0, #5
}
90010df8:	bd10      	pop	{r4, pc}
90010dfa:	bf00      	nop

90010dfc <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
90010dfc:	b530      	push	{r4, r5, lr}
90010dfe:	b083      	sub	sp, #12
90010e00:	f3ef 8505 	mrs	r5, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
90010e04:	b99d      	cbnz	r5, 90010e2e <osMutexNew+0x32>
    if (attr != NULL) {
90010e06:	4604      	mov	r4, r0
90010e08:	b1a0      	cbz	r0, 90010e34 <osMutexNew+0x38>
      type = attr->attr_bits;
90010e0a:	6845      	ldr	r5, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
90010e0c:	072b      	lsls	r3, r5, #28
90010e0e:	d40e      	bmi.n	90010e2e <osMutexNew+0x32>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
90010e10:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
90010e12:	f005 0501 	and.w	r5, r5, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
90010e16:	68c3      	ldr	r3, [r0, #12]
90010e18:	b141      	cbz	r1, 90010e2c <osMutexNew+0x30>
90010e1a:	2b4f      	cmp	r3, #79	; 0x4f
90010e1c:	d907      	bls.n	90010e2e <osMutexNew+0x32>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
90010e1e:	b1d5      	cbz	r5, 90010e56 <osMutexNew+0x5a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
90010e20:	2004      	movs	r0, #4
90010e22:	f001 f841 	bl	90011ea8 <xQueueCreateMutexStatic>
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
90010e26:	b110      	cbz	r0, 90010e2e <osMutexNew+0x32>
        if (attr != NULL) {
          name = attr->name;
90010e28:	6824      	ldr	r4, [r4, #0]
90010e2a:	e009      	b.n	90010e40 <osMutexNew+0x44>
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
90010e2c:	b1bb      	cbz	r3, 90010e5e <osMutexNew+0x62>
  hMutex = NULL;
90010e2e:	2000      	movs	r0, #0
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
90010e30:	b003      	add	sp, #12
90010e32:	bd30      	pop	{r4, r5, pc}
              hMutex = xSemaphoreCreateMutex ();
90010e34:	2001      	movs	r0, #1
90010e36:	f001 f8a7 	bl	90011f88 <xQueueCreateMutex>
      if (hMutex != NULL) {
90010e3a:	2800      	cmp	r0, #0
90010e3c:	d0f7      	beq.n	90010e2e <osMutexNew+0x32>
90010e3e:	4625      	mov	r5, r4
        vQueueAddToRegistry (hMutex, name);
90010e40:	4621      	mov	r1, r4
90010e42:	9001      	str	r0, [sp, #4]
90010e44:	f001 fd6a 	bl	9001291c <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
90010e48:	9801      	ldr	r0, [sp, #4]
90010e4a:	2d00      	cmp	r5, #0
90010e4c:	d0f0      	beq.n	90010e30 <osMutexNew+0x34>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
90010e4e:	f040 0001 	orr.w	r0, r0, #1
}
90010e52:	b003      	add	sp, #12
90010e54:	bd30      	pop	{r4, r5, pc}
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
90010e56:	2001      	movs	r0, #1
90010e58:	f001 f826 	bl	90011ea8 <xQueueCreateMutexStatic>
90010e5c:	e7e3      	b.n	90010e26 <osMutexNew+0x2a>
            if (rmtx != 0U) {
90010e5e:	b91d      	cbnz	r5, 90010e68 <osMutexNew+0x6c>
              hMutex = xSemaphoreCreateMutex ();
90010e60:	2001      	movs	r0, #1
90010e62:	f001 f891 	bl	90011f88 <xQueueCreateMutex>
      if (hMutex != NULL) {
90010e66:	e7de      	b.n	90010e26 <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateRecursiveMutex ();
90010e68:	2004      	movs	r0, #4
90010e6a:	f001 f88d 	bl	90011f88 <xQueueCreateMutex>
90010e6e:	e7da      	b.n	90010e26 <osMutexNew+0x2a>

90010e70 <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
90010e70:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
90010e74:	f000 0301 	and.w	r3, r0, #1
90010e78:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
90010e7c:	b9a8      	cbnz	r0, 90010eaa <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
90010e7e:	b1ba      	cbz	r2, 90010eb0 <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
90010e80:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
90010e82:	b510      	push	{r4, lr}
90010e84:	460c      	mov	r4, r1
    if (rmtx != 0U) {
90010e86:	b953      	cbnz	r3, 90010e9e <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
90010e88:	f001 fafa 	bl	90012480 <xQueueSemaphoreTake>
90010e8c:	2801      	cmp	r0, #1
90010e8e:	d00a      	beq.n	90010ea6 <osMutexAcquire+0x36>
          stat = osErrorResource;
90010e90:	2c00      	cmp	r4, #0
90010e92:	bf14      	ite	ne
90010e94:	f06f 0001 	mvnne.w	r0, #1
90010e98:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
90010e9c:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
90010e9e:	f001 fc77 	bl	90012790 <xQueueTakeMutexRecursive>
90010ea2:	2801      	cmp	r0, #1
90010ea4:	d1f4      	bne.n	90010e90 <osMutexAcquire+0x20>
  stat = osOK;
90010ea6:	2000      	movs	r0, #0
}
90010ea8:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
90010eaa:	f06f 0005 	mvn.w	r0, #5
90010eae:	4770      	bx	lr
    stat = osErrorParameter;
90010eb0:	f06f 0003 	mvn.w	r0, #3
}
90010eb4:	4770      	bx	lr
90010eb6:	bf00      	nop

90010eb8 <osMutexRelease>:
90010eb8:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
90010ebc:	b9ba      	cbnz	r2, 90010eee <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
90010ebe:	b510      	push	{r4, lr}
90010ec0:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
90010ec4:	b1b4      	cbz	r4, 90010ef4 <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
90010ec6:	f000 0301 	and.w	r3, r0, #1
90010eca:	b943      	cbnz	r3, 90010ede <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
90010ecc:	461a      	mov	r2, r3
90010ece:	4619      	mov	r1, r3
90010ed0:	4620      	mov	r0, r4
90010ed2:	f000 fe67 	bl	90011ba4 <xQueueGenericSend>
90010ed6:	2801      	cmp	r0, #1
90010ed8:	d106      	bne.n	90010ee8 <osMutexRelease+0x30>
  stat = osOK;
90010eda:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
90010edc:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
90010ede:	4620      	mov	r0, r4
90010ee0:	f001 f832 	bl	90011f48 <xQueueGiveMutexRecursive>
90010ee4:	2801      	cmp	r0, #1
90010ee6:	d0f8      	beq.n	90010eda <osMutexRelease+0x22>
        stat = osErrorResource;
90010ee8:	f06f 0002 	mvn.w	r0, #2
}
90010eec:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
90010eee:	f06f 0005 	mvn.w	r0, #5
}
90010ef2:	4770      	bx	lr
    stat = osErrorParameter;
90010ef4:	f06f 0003 	mvn.w	r0, #3
}
90010ef8:	bd10      	pop	{r4, pc}
90010efa:	bf00      	nop

90010efc <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
90010efc:	b5f0      	push	{r4, r5, r6, r7, lr}
90010efe:	b083      	sub	sp, #12
90010f00:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
90010f04:	b98e      	cbnz	r6, 90010f2a <osSemaphoreNew+0x2e>
90010f06:	4605      	mov	r5, r0
90010f08:	b178      	cbz	r0, 90010f2a <osSemaphoreNew+0x2e>
90010f0a:	4288      	cmp	r0, r1
90010f0c:	460f      	mov	r7, r1
90010f0e:	d30c      	bcc.n	90010f2a <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
90010f10:	4614      	mov	r4, r2
90010f12:	b182      	cbz	r2, 90010f36 <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
90010f14:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
90010f18:	b15a      	cbz	r2, 90010f32 <osSemaphoreNew+0x36>
90010f1a:	2b4f      	cmp	r3, #79	; 0x4f
90010f1c:	d905      	bls.n	90010f2a <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
90010f1e:	2801      	cmp	r0, #1
90010f20:	d032      	beq.n	90010f88 <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
90010f22:	f000 fd97 	bl	90011a54 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
90010f26:	4605      	mov	r5, r0
90010f28:	b978      	cbnz	r0, 90010f4a <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
90010f2a:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
90010f2c:	4628      	mov	r0, r5
90010f2e:	b003      	add	sp, #12
90010f30:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
90010f32:	2b00      	cmp	r3, #0
90010f34:	d1f9      	bne.n	90010f2a <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
90010f36:	2d01      	cmp	r5, #1
90010f38:	d00f      	beq.n	90010f5a <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
90010f3a:	4628      	mov	r0, r5
90010f3c:	4639      	mov	r1, r7
90010f3e:	f000 fdeb 	bl	90011b18 <xQueueCreateCountingSemaphore>
90010f42:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
90010f44:	2d00      	cmp	r5, #0
90010f46:	d0f0      	beq.n	90010f2a <osSemaphoreNew+0x2e>
        if (attr != NULL) {
90010f48:	b104      	cbz	r4, 90010f4c <osSemaphoreNew+0x50>
          name = attr->name;
90010f4a:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
90010f4c:	4628      	mov	r0, r5
90010f4e:	4621      	mov	r1, r4
90010f50:	f001 fce4 	bl	9001291c <vQueueAddToRegistry>
}
90010f54:	4628      	mov	r0, r5
90010f56:	b003      	add	sp, #12
90010f58:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
90010f5a:	4628      	mov	r0, r5
90010f5c:	2203      	movs	r2, #3
90010f5e:	2100      	movs	r1, #0
90010f60:	f000 fd36 	bl	900119d0 <xQueueGenericCreate>
90010f64:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
90010f66:	2d00      	cmp	r5, #0
90010f68:	d0df      	beq.n	90010f2a <osSemaphoreNew+0x2e>
90010f6a:	2f00      	cmp	r7, #0
90010f6c:	d0ea      	beq.n	90010f44 <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
90010f6e:	2300      	movs	r3, #0
90010f70:	4628      	mov	r0, r5
90010f72:	461a      	mov	r2, r3
90010f74:	4619      	mov	r1, r3
90010f76:	f000 fe15 	bl	90011ba4 <xQueueGenericSend>
90010f7a:	2801      	cmp	r0, #1
90010f7c:	d0e4      	beq.n	90010f48 <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
90010f7e:	4628      	mov	r0, r5
            hSemaphore = NULL;
90010f80:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
90010f82:	f001 fc85 	bl	90012890 <vQueueDelete>
      if (hSemaphore != NULL) {
90010f86:	e7d1      	b.n	90010f2c <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
90010f88:	4613      	mov	r3, r2
90010f8a:	2203      	movs	r2, #3
90010f8c:	4631      	mov	r1, r6
90010f8e:	9200      	str	r2, [sp, #0]
90010f90:	4632      	mov	r2, r6
90010f92:	f000 fcb1 	bl	900118f8 <xQueueGenericCreateStatic>
90010f96:	4605      	mov	r5, r0
90010f98:	e7e5      	b.n	90010f66 <osSemaphoreNew+0x6a>
90010f9a:	bf00      	nop

90010f9c <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
90010f9c:	b370      	cbz	r0, 90010ffc <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
90010f9e:	b510      	push	{r4, lr}
90010fa0:	460c      	mov	r4, r1
90010fa2:	b082      	sub	sp, #8
90010fa4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
90010fa8:	b1c3      	cbz	r3, 90010fdc <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
90010faa:	bb21      	cbnz	r1, 90010ff6 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
90010fac:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
90010fae:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
90010fb0:	f001 fc0e 	bl	900127d0 <xQueueReceiveFromISR>
90010fb4:	2801      	cmp	r0, #1
90010fb6:	d11a      	bne.n	90010fee <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
90010fb8:	9b01      	ldr	r3, [sp, #4]
90010fba:	b913      	cbnz	r3, 90010fc2 <osSemaphoreAcquire+0x26>
  stat = osOK;
90010fbc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
90010fbe:	b002      	add	sp, #8
90010fc0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
90010fc2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010fc6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010fca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010fce:	f3bf 8f4f 	dsb	sy
90010fd2:	f3bf 8f6f 	isb	sy
  stat = osOK;
90010fd6:	4620      	mov	r0, r4
}
90010fd8:	b002      	add	sp, #8
90010fda:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
90010fdc:	f001 fa50 	bl	90012480 <xQueueSemaphoreTake>
90010fe0:	2801      	cmp	r0, #1
90010fe2:	d0eb      	beq.n	90010fbc <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
90010fe4:	b11c      	cbz	r4, 90010fee <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
90010fe6:	f06f 0001 	mvn.w	r0, #1
}
90010fea:	b002      	add	sp, #8
90010fec:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
90010fee:	f06f 0002 	mvn.w	r0, #2
}
90010ff2:	b002      	add	sp, #8
90010ff4:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
90010ff6:	f06f 0003 	mvn.w	r0, #3
90010ffa:	e7e0      	b.n	90010fbe <osSemaphoreAcquire+0x22>
90010ffc:	f06f 0003 	mvn.w	r0, #3
}
90011000:	4770      	bx	lr
90011002:	bf00      	nop

90011004 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
90011004:	b330      	cbz	r0, 90011054 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
90011006:	b510      	push	{r4, lr}
90011008:	b082      	sub	sp, #8
9001100a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9001100e:	b1ab      	cbz	r3, 9001103c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
90011010:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
90011012:	a901      	add	r1, sp, #4
    yield = pdFALSE;
90011014:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
90011016:	f001 f859 	bl	900120cc <xQueueGiveFromISR>
9001101a:	2801      	cmp	r0, #1
9001101c:	d117      	bne.n	9001104e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9001101e:	9b01      	ldr	r3, [sp, #4]
90011020:	b193      	cbz	r3, 90011048 <osSemaphoreRelease+0x44>
90011022:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011026:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9001102a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9001102e:	f3bf 8f4f 	dsb	sy
90011032:	f3bf 8f6f 	isb	sy
  stat = osOK;
90011036:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
90011038:	b002      	add	sp, #8
9001103a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9001103c:	461a      	mov	r2, r3
9001103e:	4619      	mov	r1, r3
90011040:	f000 fdb0 	bl	90011ba4 <xQueueGenericSend>
90011044:	2801      	cmp	r0, #1
90011046:	d102      	bne.n	9001104e <osSemaphoreRelease+0x4a>
  stat = osOK;
90011048:	2000      	movs	r0, #0
}
9001104a:	b002      	add	sp, #8
9001104c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9001104e:	f06f 0002 	mvn.w	r0, #2
90011052:	e7fa      	b.n	9001104a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
90011054:	f06f 0003 	mvn.w	r0, #3
}
90011058:	4770      	bx	lr
9001105a:	bf00      	nop

9001105c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9001105c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001105e:	b085      	sub	sp, #20
90011060:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
90011064:	b987      	cbnz	r7, 90011088 <osMessageQueueNew+0x2c>
90011066:	4605      	mov	r5, r0
90011068:	b170      	cbz	r0, 90011088 <osMessageQueueNew+0x2c>
9001106a:	b169      	cbz	r1, 90011088 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9001106c:	4614      	mov	r4, r2
9001106e:	b172      	cbz	r2, 9001108e <osMessageQueueNew+0x32>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
90011070:	6893      	ldr	r3, [r2, #8]
90011072:	b1bb      	cbz	r3, 900110a4 <osMessageQueueNew+0x48>
90011074:	68d2      	ldr	r2, [r2, #12]
90011076:	2a4f      	cmp	r2, #79	; 0x4f
90011078:	d906      	bls.n	90011088 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9001107a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9001107c:	b122      	cbz	r2, 90011088 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9001107e:	fb01 f505 	mul.w	r5, r1, r5
90011082:	6966      	ldr	r6, [r4, #20]
90011084:	42ae      	cmp	r6, r5
90011086:	d21c      	bcs.n	900110c2 <osMessageQueueNew+0x66>
  hQueue = NULL;
90011088:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9001108a:	b005      	add	sp, #20
9001108c:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9001108e:	f000 fc9f 	bl	900119d0 <xQueueGenericCreate>
    if (hQueue != NULL) {
90011092:	2800      	cmp	r0, #0
90011094:	d0f8      	beq.n	90011088 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
90011096:	4621      	mov	r1, r4
90011098:	9003      	str	r0, [sp, #12]
9001109a:	f001 fc3f 	bl	9001291c <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
9001109e:	9803      	ldr	r0, [sp, #12]
}
900110a0:	b005      	add	sp, #20
900110a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
900110a4:	68d3      	ldr	r3, [r2, #12]
900110a6:	2b00      	cmp	r3, #0
900110a8:	d1ee      	bne.n	90011088 <osMessageQueueNew+0x2c>
900110aa:	6913      	ldr	r3, [r2, #16]
900110ac:	2b00      	cmp	r3, #0
900110ae:	d1eb      	bne.n	90011088 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
900110b0:	6952      	ldr	r2, [r2, #20]
900110b2:	2a00      	cmp	r2, #0
900110b4:	d1e8      	bne.n	90011088 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
900110b6:	f000 fc8b 	bl	900119d0 <xQueueGenericCreate>
    if (hQueue != NULL) {
900110ba:	2800      	cmp	r0, #0
900110bc:	d0e4      	beq.n	90011088 <osMessageQueueNew+0x2c>
        name = attr->name;
900110be:	6824      	ldr	r4, [r4, #0]
900110c0:	e7e9      	b.n	90011096 <osMessageQueueNew+0x3a>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
900110c2:	9700      	str	r7, [sp, #0]
900110c4:	f000 fc18 	bl	900118f8 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
900110c8:	2800      	cmp	r0, #0
900110ca:	d1f8      	bne.n	900110be <osMessageQueueNew+0x62>
900110cc:	e7dc      	b.n	90011088 <osMessageQueueNew+0x2c>
900110ce:	bf00      	nop

900110d0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
900110d0:	b530      	push	{r4, r5, lr}
900110d2:	461c      	mov	r4, r3
900110d4:	b083      	sub	sp, #12
900110d6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
900110da:	b30b      	cbz	r3, 90011120 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
900110dc:	3c00      	subs	r4, #0
900110de:	bf18      	it	ne
900110e0:	2401      	movne	r4, #1
900110e2:	2900      	cmp	r1, #0
900110e4:	bf08      	it	eq
900110e6:	f044 0401 	orreq.w	r4, r4, #1
900110ea:	bb7c      	cbnz	r4, 9001114c <osMessageQueuePut+0x7c>
900110ec:	fab0 f480 	clz	r4, r0
900110f0:	0964      	lsrs	r4, r4, #5
900110f2:	b358      	cbz	r0, 9001114c <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
900110f4:	4623      	mov	r3, r4
900110f6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
900110f8:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
900110fa:	f000 ff7d 	bl	90011ff8 <xQueueGenericSendFromISR>
900110fe:	2801      	cmp	r0, #1
90011100:	d120      	bne.n	90011144 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
90011102:	9b01      	ldr	r3, [sp, #4]
90011104:	b1db      	cbz	r3, 9001113e <osMessageQueuePut+0x6e>
90011106:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001110a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9001110e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011112:	f3bf 8f4f 	dsb	sy
90011116:	f3bf 8f6f 	isb	sy
  stat = osOK;
9001111a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9001111c:	b003      	add	sp, #12
9001111e:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
90011120:	b1a0      	cbz	r0, 9001114c <osMessageQueuePut+0x7c>
90011122:	fab1 f381 	clz	r3, r1
90011126:	095b      	lsrs	r3, r3, #5
90011128:	b181      	cbz	r1, 9001114c <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9001112a:	4622      	mov	r2, r4
9001112c:	f000 fd3a 	bl	90011ba4 <xQueueGenericSend>
90011130:	2801      	cmp	r0, #1
90011132:	d004      	beq.n	9001113e <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
90011134:	b134      	cbz	r4, 90011144 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
90011136:	f06f 0001 	mvn.w	r0, #1
}
9001113a:	b003      	add	sp, #12
9001113c:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9001113e:	2000      	movs	r0, #0
}
90011140:	b003      	add	sp, #12
90011142:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
90011144:	f06f 0002 	mvn.w	r0, #2
}
90011148:	b003      	add	sp, #12
9001114a:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9001114c:	f06f 0003 	mvn.w	r0, #3
90011150:	e7e4      	b.n	9001111c <osMessageQueuePut+0x4c>
90011152:	bf00      	nop

90011154 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
90011154:	b530      	push	{r4, r5, lr}
90011156:	461c      	mov	r4, r3
90011158:	b083      	sub	sp, #12
9001115a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9001115e:	b303      	cbz	r3, 900111a2 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
90011160:	3c00      	subs	r4, #0
90011162:	bf18      	it	ne
90011164:	2401      	movne	r4, #1
90011166:	2900      	cmp	r1, #0
90011168:	bf08      	it	eq
9001116a:	f044 0401 	orreq.w	r4, r4, #1
9001116e:	bb5c      	cbnz	r4, 900111c8 <osMessageQueueGet+0x74>
90011170:	fab0 f480 	clz	r4, r0
90011174:	0964      	lsrs	r4, r4, #5
90011176:	b338      	cbz	r0, 900111c8 <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
90011178:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9001117a:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9001117c:	f001 fb28 	bl	900127d0 <xQueueReceiveFromISR>
90011180:	2801      	cmp	r0, #1
90011182:	d11d      	bne.n	900111c0 <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
90011184:	9b01      	ldr	r3, [sp, #4]
90011186:	b1c3      	cbz	r3, 900111ba <osMessageQueueGet+0x66>
90011188:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001118c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011190:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011194:	f3bf 8f4f 	dsb	sy
90011198:	f3bf 8f6f 	isb	sy
  stat = osOK;
9001119c:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9001119e:	b003      	add	sp, #12
900111a0:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
900111a2:	b188      	cbz	r0, 900111c8 <osMessageQueueGet+0x74>
900111a4:	b181      	cbz	r1, 900111c8 <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
900111a6:	4622      	mov	r2, r4
900111a8:	f000 ffe8 	bl	9001217c <xQueueReceive>
900111ac:	2801      	cmp	r0, #1
900111ae:	d004      	beq.n	900111ba <osMessageQueueGet+0x66>
        if (timeout != 0U) {
900111b0:	b134      	cbz	r4, 900111c0 <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
900111b2:	f06f 0001 	mvn.w	r0, #1
}
900111b6:	b003      	add	sp, #12
900111b8:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
900111ba:	2000      	movs	r0, #0
}
900111bc:	b003      	add	sp, #12
900111be:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
900111c0:	f06f 0002 	mvn.w	r0, #2
}
900111c4:	b003      	add	sp, #12
900111c6:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
900111c8:	f06f 0003 	mvn.w	r0, #3
900111cc:	e7e7      	b.n	9001119e <osMessageQueueGet+0x4a>
900111ce:	bf00      	nop

900111d0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
900111d0:	4b04      	ldr	r3, [pc, #16]	; (900111e4 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
900111d2:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
900111d4:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
900111d6:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
900111d8:	4c03      	ldr	r4, [pc, #12]	; (900111e8 <vApplicationGetIdleTaskMemory+0x18>)
900111da:	600c      	str	r4, [r1, #0]
}
900111dc:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
900111e0:	6013      	str	r3, [r2, #0]
}
900111e2:	4770      	bx	lr
900111e4:	2400eb2c 	.word	0x2400eb2c
900111e8:	2400e92c 	.word	0x2400e92c

900111ec <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
900111ec:	4b05      	ldr	r3, [pc, #20]	; (90011204 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
900111ee:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
900111f0:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
900111f2:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
900111f6:	4c04      	ldr	r4, [pc, #16]	; (90011208 <vApplicationGetTimerTaskMemory+0x1c>)
900111f8:	600c      	str	r4, [r1, #0]
}
900111fa:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
900111fe:	6013      	str	r3, [r2, #0]
}
90011200:	4770      	bx	lr
90011202:	bf00      	nop
90011204:	2400eff0 	.word	0x2400eff0
90011208:	2400ebf0 	.word	0x2400ebf0

9001120c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9001120c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011210:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
90011212:	f002 f81f 	bl	90013254 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
90011216:	4a52      	ldr	r2, [pc, #328]	; (90011360 <pvPortMalloc+0x154>)
90011218:	6816      	ldr	r6, [r2, #0]
9001121a:	2e00      	cmp	r6, #0
9001121c:	d06f      	beq.n	900112fe <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9001121e:	4b51      	ldr	r3, [pc, #324]	; (90011364 <pvPortMalloc+0x158>)
90011220:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
90011222:	423d      	tst	r5, r7
90011224:	d12e      	bne.n	90011284 <pvPortMalloc+0x78>
90011226:	b36d      	cbz	r5, 90011284 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
90011228:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9001122c:	076d      	lsls	r5, r5, #29
9001122e:	d002      	beq.n	90011236 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
90011230:	f024 0407 	bic.w	r4, r4, #7
90011234:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
90011236:	b32c      	cbz	r4, 90011284 <pvPortMalloc+0x78>
90011238:	f8df c140 	ldr.w	ip, [pc, #320]	; 9001137c <pvPortMalloc+0x170>
9001123c:	f8dc 5000 	ldr.w	r5, [ip]
90011240:	42a5      	cmp	r5, r4
90011242:	d31f      	bcc.n	90011284 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
90011244:	4848      	ldr	r0, [pc, #288]	; (90011368 <pvPortMalloc+0x15c>)
90011246:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
90011248:	e003      	b.n	90011252 <pvPortMalloc+0x46>
9001124a:	681a      	ldr	r2, [r3, #0]
9001124c:	b122      	cbz	r2, 90011258 <pvPortMalloc+0x4c>
9001124e:	4618      	mov	r0, r3
90011250:	4613      	mov	r3, r2
90011252:	6859      	ldr	r1, [r3, #4]
90011254:	42a1      	cmp	r1, r4
90011256:	d3f8      	bcc.n	9001124a <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
90011258:	42b3      	cmp	r3, r6
9001125a:	d013      	beq.n	90011284 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9001125c:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9001125e:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
90011260:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
90011264:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
90011266:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9001126a:	d929      	bls.n	900112c0 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9001126c:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9001126e:	0748      	lsls	r0, r1, #29
90011270:	d00f      	beq.n	90011292 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
90011272:	f04f 0350 	mov.w	r3, #80	; 0x50
90011276:	f383 8811 	msr	BASEPRI, r3
9001127a:	f3bf 8f6f 	isb	sy
9001127e:	f3bf 8f4f 	dsb	sy
90011282:	e7fe      	b.n	90011282 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
90011284:	f04f 0800 	mov.w	r8, #0
90011288:	f001 ffec 	bl	90013264 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9001128c:	4640      	mov	r0, r8
9001128e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
90011292:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90011294:	4a34      	ldr	r2, [pc, #208]	; (90011368 <pvPortMalloc+0x15c>)
						pxBlock->xBlockSize = xWantedSize;
90011296:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90011298:	4614      	mov	r4, r2
9001129a:	6812      	ldr	r2, [r2, #0]
9001129c:	4291      	cmp	r1, r2
9001129e:	d8fb      	bhi.n	90011298 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
900112a0:	6860      	ldr	r0, [r4, #4]
900112a2:	eb04 0e00 	add.w	lr, r4, r0
900112a6:	4571      	cmp	r1, lr
900112a8:	d04a      	beq.n	90011340 <pvPortMalloc+0x134>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
900112aa:	f8d1 e004 	ldr.w	lr, [r1, #4]
900112ae:	eb01 000e 	add.w	r0, r1, lr
900112b2:	4282      	cmp	r2, r0
900112b4:	d04b      	beq.n	9001134e <pvPortMalloc+0x142>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
900112b6:	600a      	str	r2, [r1, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
900112b8:	428c      	cmp	r4, r1
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
900112ba:	bf18      	it	ne
900112bc:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
900112be:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
900112c0:	4a2a      	ldr	r2, [pc, #168]	; (9001136c <pvPortMalloc+0x160>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
900112c2:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
900112c4:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
900112c6:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
900112c8:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
900112cc:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
900112ce:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
900112d2:	bf38      	it	cc
900112d4:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
900112d6:	4a26      	ldr	r2, [pc, #152]	; (90011370 <pvPortMalloc+0x164>)
					pxBlock->pxNextFreeBlock = NULL;
900112d8:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
900112dc:	6813      	ldr	r3, [r2, #0]
900112de:	3301      	adds	r3, #1
900112e0:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
900112e2:	f001 ffbf 	bl	90013264 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
900112e6:	f018 0f07 	tst.w	r8, #7
900112ea:	d0cf      	beq.n	9001128c <pvPortMalloc+0x80>
900112ec:	f04f 0350 	mov.w	r3, #80	; 0x50
900112f0:	f383 8811 	msr	BASEPRI, r3
900112f4:	f3bf 8f6f 	isb	sy
900112f8:	f3bf 8f4f 	dsb	sy
900112fc:	e7fe      	b.n	900112fc <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
900112fe:	4b1d      	ldr	r3, [pc, #116]	; (90011374 <pvPortMalloc+0x168>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
90011300:	075e      	lsls	r6, r3, #29
90011302:	d117      	bne.n	90011334 <pvPortMalloc+0x128>
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
90011304:	4e1c      	ldr	r6, [pc, #112]	; (90011378 <pvPortMalloc+0x16c>)
90011306:	4618      	mov	r0, r3
	uxAddress -= xHeapStructSize;
90011308:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9001130a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9001130e:	4916      	ldr	r1, [pc, #88]	; (90011368 <pvPortMalloc+0x15c>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
90011310:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
90011314:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
90011316:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
90011318:	4a14      	ldr	r2, [pc, #80]	; (9001136c <pvPortMalloc+0x160>)
9001131a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9001131c:	4a17      	ldr	r2, [pc, #92]	; (9001137c <pvPortMalloc+0x170>)
9001131e:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
90011320:	4a10      	ldr	r2, [pc, #64]	; (90011364 <pvPortMalloc+0x158>)
90011322:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
90011324:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
90011326:	e9c1 0200 	strd	r0, r2, [r1]
	pxEnd->pxNextFreeBlock = NULL;
9001132a:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9001132e:	e9c0 6300 	strd	r6, r3, [r0]
}
90011332:	e776      	b.n	90011222 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
90011334:	3307      	adds	r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
90011336:	4e10      	ldr	r6, [pc, #64]	; (90011378 <pvPortMalloc+0x16c>)
90011338:	f023 0307 	bic.w	r3, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9001133c:	4618      	mov	r0, r3
9001133e:	e7e3      	b.n	90011308 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90011340:	6849      	ldr	r1, [r1, #4]
90011342:	eb00 0e01 	add.w	lr, r0, r1
90011346:	4621      	mov	r1, r4
90011348:	f8c4 e004 	str.w	lr, [r4, #4]
		pxBlockToInsert = pxIterator;
9001134c:	e7af      	b.n	900112ae <pvPortMalloc+0xa2>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9001134e:	42b2      	cmp	r2, r6
90011350:	d0b1      	beq.n	900112b6 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90011352:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90011354:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90011356:	4470      	add	r0, lr
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90011358:	600a      	str	r2, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9001135a:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9001135c:	e7ac      	b.n	900112b8 <pvPortMalloc+0xac>
9001135e:	bf00      	nop
90011360:	2400f0b0 	.word	0x2400f0b0
90011364:	24027754 	.word	0x24027754
90011368:	24027768 	.word	0x24027768
9001136c:	2402775c 	.word	0x2402775c
90011370:	24027760 	.word	0x24027760
90011374:	2400f0b4 	.word	0x2400f0b4
90011378:	24027754 	.word	0x24027754
9001137c:	24027758 	.word	0x24027758

90011380 <vPortFree>:
	if( pv != NULL )
90011380:	b1d0      	cbz	r0, 900113b8 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
90011382:	4a2b      	ldr	r2, [pc, #172]	; (90011430 <vPortFree+0xb0>)
90011384:	f850 3c04 	ldr.w	r3, [r0, #-4]
90011388:	6812      	ldr	r2, [r2, #0]
9001138a:	4213      	tst	r3, r2
9001138c:	d00b      	beq.n	900113a6 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9001138e:	f850 1c08 	ldr.w	r1, [r0, #-8]
90011392:	b191      	cbz	r1, 900113ba <vPortFree+0x3a>
90011394:	f04f 0350 	mov.w	r3, #80	; 0x50
90011398:	f383 8811 	msr	BASEPRI, r3
9001139c:	f3bf 8f6f 	isb	sy
900113a0:	f3bf 8f4f 	dsb	sy
900113a4:	e7fe      	b.n	900113a4 <vPortFree+0x24>
900113a6:	f04f 0350 	mov.w	r3, #80	; 0x50
900113aa:	f383 8811 	msr	BASEPRI, r3
900113ae:	f3bf 8f6f 	isb	sy
900113b2:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
900113b6:	e7fe      	b.n	900113b6 <vPortFree+0x36>
900113b8:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
900113ba:	ea23 0302 	bic.w	r3, r3, r2
{
900113be:	b530      	push	{r4, r5, lr}
900113c0:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
900113c2:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
900113c6:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
900113ca:	4d1a      	ldr	r5, [pc, #104]	; (90011434 <vPortFree+0xb4>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
900113cc:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
900113ce:	f001 ff41 	bl	90013254 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
900113d2:	9801      	ldr	r0, [sp, #4]
900113d4:	682a      	ldr	r2, [r5, #0]
900113d6:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
900113da:	4b17      	ldr	r3, [pc, #92]	; (90011438 <vPortFree+0xb8>)
					xFreeBytesRemaining += pxLink->xBlockSize;
900113dc:	440a      	add	r2, r1
900113de:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
900113e0:	461a      	mov	r2, r3
900113e2:	681b      	ldr	r3, [r3, #0]
900113e4:	429c      	cmp	r4, r3
900113e6:	d8fb      	bhi.n	900113e0 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
900113e8:	6850      	ldr	r0, [r2, #4]
900113ea:	eb02 0c00 	add.w	ip, r2, r0
900113ee:	4564      	cmp	r4, ip
900113f0:	d019      	beq.n	90011426 <vPortFree+0xa6>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
900113f2:	1860      	adds	r0, r4, r1
900113f4:	4283      	cmp	r3, r0
900113f6:	d00c      	beq.n	90011412 <vPortFree+0x92>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
900113f8:	6023      	str	r3, [r4, #0]
	if( pxIterator != pxBlockToInsert )
900113fa:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
900113fc:	bf18      	it	ne
900113fe:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
90011400:	4a0e      	ldr	r2, [pc, #56]	; (9001143c <vPortFree+0xbc>)
90011402:	6813      	ldr	r3, [r2, #0]
90011404:	3301      	adds	r3, #1
90011406:	6013      	str	r3, [r2, #0]
}
90011408:	b003      	add	sp, #12
9001140a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9001140e:	f001 bf29 	b.w	90013264 <xTaskResumeAll>
		if( pxIterator->pxNextFreeBlock != pxEnd )
90011412:	480b      	ldr	r0, [pc, #44]	; (90011440 <vPortFree+0xc0>)
90011414:	6800      	ldr	r0, [r0, #0]
90011416:	4283      	cmp	r3, r0
90011418:	d0ee      	beq.n	900113f8 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9001141a:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9001141e:	4401      	add	r1, r0
90011420:	e9c4 3100 	strd	r3, r1, [r4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90011424:	e7e9      	b.n	900113fa <vPortFree+0x7a>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90011426:	4401      	add	r1, r0
90011428:	4614      	mov	r4, r2
9001142a:	6051      	str	r1, [r2, #4]
		pxBlockToInsert = pxIterator;
9001142c:	e7e1      	b.n	900113f2 <vPortFree+0x72>
9001142e:	bf00      	nop
90011430:	24027754 	.word	0x24027754
90011434:	24027758 	.word	0x24027758
90011438:	24027768 	.word	0x24027768
9001143c:	24027764 	.word	0x24027764
90011440:	2400f0b0 	.word	0x2400f0b0

90011444 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90011444:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
90011448:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9001144c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9001144e:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
90011450:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90011452:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90011454:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
90011458:	4770      	bx	lr
9001145a:	bf00      	nop

9001145c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9001145c:	2300      	movs	r3, #0
9001145e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
90011460:	4770      	bx	lr
90011462:	bf00      	nop

90011464 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
90011464:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
90011466:	6802      	ldr	r2, [r0, #0]
{
90011468:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9001146a:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9001146c:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9001146e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
90011470:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
90011472:	689c      	ldr	r4, [r3, #8]
90011474:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
90011476:	6099      	str	r1, [r3, #8]
}
90011478:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9001147c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9001147e:	6002      	str	r2, [r0, #0]
}
90011480:	4770      	bx	lr
90011482:	bf00      	nop

90011484 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
90011484:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
90011486:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
90011488:	1c6b      	adds	r3, r5, #1
9001148a:	d010      	beq.n	900114ae <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9001148c:	f100 0308 	add.w	r3, r0, #8
90011490:	461c      	mov	r4, r3
90011492:	685b      	ldr	r3, [r3, #4]
90011494:	681a      	ldr	r2, [r3, #0]
90011496:	42aa      	cmp	r2, r5
90011498:	d9fa      	bls.n	90011490 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9001149a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9001149c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9001149e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
900114a0:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
900114a2:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
900114a4:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
900114a6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
900114a8:	6002      	str	r2, [r0, #0]
}
900114aa:	bc30      	pop	{r4, r5}
900114ac:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
900114ae:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
900114b0:	6863      	ldr	r3, [r4, #4]
900114b2:	e7f2      	b.n	9001149a <vListInsert+0x16>

900114b4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
900114b4:	6903      	ldr	r3, [r0, #16]
{
900114b6:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
900114b8:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
900114ba:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
900114be:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
900114c0:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
900114c4:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
900114c6:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
900114c8:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
900114cc:	bf08      	it	eq
900114ce:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
900114d0:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
900114d2:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
900114d4:	3a01      	subs	r2, #1
900114d6:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
900114d8:	6818      	ldr	r0, [r3, #0]
}
900114da:	4770      	bx	lr

900114dc <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
900114dc:	4808      	ldr	r0, [pc, #32]	; (90011500 <prvPortStartFirstTask+0x24>)
900114de:	6800      	ldr	r0, [r0, #0]
900114e0:	6800      	ldr	r0, [r0, #0]
900114e2:	f380 8808 	msr	MSP, r0
900114e6:	f04f 0000 	mov.w	r0, #0
900114ea:	f380 8814 	msr	CONTROL, r0
900114ee:	b662      	cpsie	i
900114f0:	b661      	cpsie	f
900114f2:	f3bf 8f4f 	dsb	sy
900114f6:	f3bf 8f6f 	isb	sy
900114fa:	df00      	svc	0
900114fc:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
900114fe:	0000      	.short	0x0000
90011500:	e000ed08 	.word	0xe000ed08

90011504 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
90011504:	f8df 000c 	ldr.w	r0, [pc, #12]	; 90011514 <vPortEnableVFP+0x10>
90011508:	6801      	ldr	r1, [r0, #0]
9001150a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9001150e:	6001      	str	r1, [r0, #0]
90011510:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
90011512:	0000      	.short	0x0000
90011514:	e000ed88 	.word	0xe000ed88

90011518 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
90011518:	4b0e      	ldr	r3, [pc, #56]	; (90011554 <prvTaskExitError+0x3c>)
{
9001151a:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9001151c:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9001151e:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
90011520:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
90011522:	3301      	adds	r3, #1
90011524:	d008      	beq.n	90011538 <prvTaskExitError+0x20>
90011526:	f04f 0350 	mov.w	r3, #80	; 0x50
9001152a:	f383 8811 	msr	BASEPRI, r3
9001152e:	f3bf 8f6f 	isb	sy
90011532:	f3bf 8f4f 	dsb	sy
90011536:	e7fe      	b.n	90011536 <prvTaskExitError+0x1e>
90011538:	f04f 0350 	mov.w	r3, #80	; 0x50
9001153c:	f383 8811 	msr	BASEPRI, r3
90011540:	f3bf 8f6f 	isb	sy
90011544:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
90011548:	9b01      	ldr	r3, [sp, #4]
9001154a:	2b00      	cmp	r3, #0
9001154c:	d0fc      	beq.n	90011548 <prvTaskExitError+0x30>
}
9001154e:	b002      	add	sp, #8
90011550:	4770      	bx	lr
90011552:	bf00      	nop
90011554:	24000064 	.word	0x24000064

90011558 <pxPortInitialiseStack>:
{
90011558:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9001155a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9001155e:	4809      	ldr	r0, [pc, #36]	; (90011584 <pxPortInitialiseStack+0x2c>)
{
90011560:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
90011562:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
90011566:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9001156a:	f843 2c20 	str.w	r2, [r3, #-32]
}
9001156e:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
90011572:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
90011576:	f06f 0102 	mvn.w	r1, #2
}
9001157a:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9001157e:	f843 1c24 	str.w	r1, [r3, #-36]
}
90011582:	4770      	bx	lr
90011584:	90011519 	.word	0x90011519
	...

90011590 <SVC_Handler>:
	__asm volatile (
90011590:	4b07      	ldr	r3, [pc, #28]	; (900115b0 <pxCurrentTCBConst2>)
90011592:	6819      	ldr	r1, [r3, #0]
90011594:	6808      	ldr	r0, [r1, #0]
90011596:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001159a:	f380 8809 	msr	PSP, r0
9001159e:	f3bf 8f6f 	isb	sy
900115a2:	f04f 0000 	mov.w	r0, #0
900115a6:	f380 8811 	msr	BASEPRI, r0
900115aa:	4770      	bx	lr
900115ac:	f3af 8000 	nop.w

900115b0 <pxCurrentTCBConst2>:
900115b0:	240277b8 	.word	0x240277b8

900115b4 <vPortEnterCritical>:
900115b4:	f04f 0350 	mov.w	r3, #80	; 0x50
900115b8:	f383 8811 	msr	BASEPRI, r3
900115bc:	f3bf 8f6f 	isb	sy
900115c0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
900115c4:	4a0b      	ldr	r2, [pc, #44]	; (900115f4 <vPortEnterCritical+0x40>)
900115c6:	6813      	ldr	r3, [r2, #0]
900115c8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
900115ca:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
900115cc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
900115ce:	d000      	beq.n	900115d2 <vPortEnterCritical+0x1e>
}
900115d0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
900115d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900115d6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
900115da:	b2db      	uxtb	r3, r3
900115dc:	2b00      	cmp	r3, #0
900115de:	d0f7      	beq.n	900115d0 <vPortEnterCritical+0x1c>
900115e0:	f04f 0350 	mov.w	r3, #80	; 0x50
900115e4:	f383 8811 	msr	BASEPRI, r3
900115e8:	f3bf 8f6f 	isb	sy
900115ec:	f3bf 8f4f 	dsb	sy
900115f0:	e7fe      	b.n	900115f0 <vPortEnterCritical+0x3c>
900115f2:	bf00      	nop
900115f4:	24000064 	.word	0x24000064

900115f8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
900115f8:	4a08      	ldr	r2, [pc, #32]	; (9001161c <vPortExitCritical+0x24>)
900115fa:	6813      	ldr	r3, [r2, #0]
900115fc:	b943      	cbnz	r3, 90011610 <vPortExitCritical+0x18>
900115fe:	f04f 0350 	mov.w	r3, #80	; 0x50
90011602:	f383 8811 	msr	BASEPRI, r3
90011606:	f3bf 8f6f 	isb	sy
9001160a:	f3bf 8f4f 	dsb	sy
9001160e:	e7fe      	b.n	9001160e <vPortExitCritical+0x16>
	uxCriticalNesting--;
90011610:	3b01      	subs	r3, #1
90011612:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
90011614:	b90b      	cbnz	r3, 9001161a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
90011616:	f383 8811 	msr	BASEPRI, r3
}
9001161a:	4770      	bx	lr
9001161c:	24000064 	.word	0x24000064

90011620 <PendSV_Handler>:
	__asm volatile
90011620:	f3ef 8009 	mrs	r0, PSP
90011624:	f3bf 8f6f 	isb	sy
90011628:	4b15      	ldr	r3, [pc, #84]	; (90011680 <pxCurrentTCBConst>)
9001162a:	681a      	ldr	r2, [r3, #0]
9001162c:	f01e 0f10 	tst.w	lr, #16
90011630:	bf08      	it	eq
90011632:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
90011636:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001163a:	6010      	str	r0, [r2, #0]
9001163c:	e92d 0009 	stmdb	sp!, {r0, r3}
90011640:	f04f 0050 	mov.w	r0, #80	; 0x50
90011644:	f380 8811 	msr	BASEPRI, r0
90011648:	f3bf 8f4f 	dsb	sy
9001164c:	f3bf 8f6f 	isb	sy
90011650:	f001 fe44 	bl	900132dc <vTaskSwitchContext>
90011654:	f04f 0000 	mov.w	r0, #0
90011658:	f380 8811 	msr	BASEPRI, r0
9001165c:	bc09      	pop	{r0, r3}
9001165e:	6819      	ldr	r1, [r3, #0]
90011660:	6808      	ldr	r0, [r1, #0]
90011662:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011666:	f01e 0f10 	tst.w	lr, #16
9001166a:	bf08      	it	eq
9001166c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
90011670:	f380 8809 	msr	PSP, r0
90011674:	f3bf 8f6f 	isb	sy
90011678:	4770      	bx	lr
9001167a:	bf00      	nop
9001167c:	f3af 8000 	nop.w

90011680 <pxCurrentTCBConst>:
90011680:	240277b8 	.word	0x240277b8

90011684 <xPortSysTickHandler>:
{
90011684:	b508      	push	{r3, lr}
	__asm volatile
90011686:	f04f 0350 	mov.w	r3, #80	; 0x50
9001168a:	f383 8811 	msr	BASEPRI, r3
9001168e:	f3bf 8f6f 	isb	sy
90011692:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
90011696:	f001 fdfb 	bl	90013290 <xTaskIncrementTick>
9001169a:	b128      	cbz	r0, 900116a8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9001169c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900116a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900116a4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
900116a8:	2300      	movs	r3, #0
900116aa:	f383 8811 	msr	BASEPRI, r3
}
900116ae:	bd08      	pop	{r3, pc}

900116b0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
900116b0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
900116b4:	2100      	movs	r1, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
900116b6:	4b06      	ldr	r3, [pc, #24]	; (900116d0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
900116b8:	6111      	str	r1, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
900116ba:	4806      	ldr	r0, [pc, #24]	; (900116d4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
900116bc:	6191      	str	r1, [r2, #24]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
900116be:	2107      	movs	r1, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
900116c0:	681b      	ldr	r3, [r3, #0]
900116c2:	fba0 0303 	umull	r0, r3, r0, r3
900116c6:	099b      	lsrs	r3, r3, #6
900116c8:	3b01      	subs	r3, #1
900116ca:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
900116cc:	6111      	str	r1, [r2, #16]
}
900116ce:	4770      	bx	lr
900116d0:	24000054 	.word	0x24000054
900116d4:	10624dd3 	.word	0x10624dd3

900116d8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
900116d8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900116dc:	4a48      	ldr	r2, [pc, #288]	; (90011800 <xPortStartScheduler+0x128>)
900116de:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
900116e2:	4291      	cmp	r1, r2
900116e4:	d041      	beq.n	9001176a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
900116e6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
900116ea:	4b46      	ldr	r3, [pc, #280]	; (90011804 <xPortStartScheduler+0x12c>)
900116ec:	429a      	cmp	r2, r3
900116ee:	d033      	beq.n	90011758 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
900116f0:	4b45      	ldr	r3, [pc, #276]	; (90011808 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
900116f2:	f04f 0cff 	mov.w	ip, #255	; 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
900116f6:	4845      	ldr	r0, [pc, #276]	; (9001180c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
900116f8:	4945      	ldr	r1, [pc, #276]	; (90011810 <xPortStartScheduler+0x138>)
{
900116fa:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
900116fc:	781a      	ldrb	r2, [r3, #0]
{
900116fe:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90011700:	b2d2      	uxtb	r2, r2
90011702:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90011704:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90011706:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001170a:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9001170c:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001170e:	b2db      	uxtb	r3, r3
90011710:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90011714:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90011718:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9001171c:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90011720:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90011722:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90011724:	d50f      	bpl.n	90011746 <xPortStartScheduler+0x6e>
90011726:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90011728:	f89d 3007 	ldrb.w	r3, [sp, #7]
9001172c:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001172e:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90011730:	005b      	lsls	r3, r3, #1
90011732:	b2db      	uxtb	r3, r3
90011734:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90011738:	f89d 3007 	ldrb.w	r3, [sp, #7]
9001173c:	061b      	lsls	r3, r3, #24
9001173e:	d4f3      	bmi.n	90011728 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
90011740:	2903      	cmp	r1, #3
90011742:	d01b      	beq.n	9001177c <xPortStartScheduler+0xa4>
90011744:	6001      	str	r1, [r0, #0]
	__asm volatile
90011746:	f04f 0350 	mov.w	r3, #80	; 0x50
9001174a:	f383 8811 	msr	BASEPRI, r3
9001174e:	f3bf 8f6f 	isb	sy
90011752:	f3bf 8f4f 	dsb	sy
90011756:	e7fe      	b.n	90011756 <xPortStartScheduler+0x7e>
90011758:	f04f 0350 	mov.w	r3, #80	; 0x50
9001175c:	f383 8811 	msr	BASEPRI, r3
90011760:	f3bf 8f6f 	isb	sy
90011764:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
90011768:	e7fe      	b.n	90011768 <xPortStartScheduler+0x90>
9001176a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001176e:	f383 8811 	msr	BASEPRI, r3
90011772:	f3bf 8f6f 	isb	sy
90011776:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9001177a:	e7fe      	b.n	9001177a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9001177c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9001177e:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
90011782:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
90011786:	4a20      	ldr	r2, [pc, #128]	; (90011808 <xPortStartScheduler+0x130>)
90011788:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9001178a:	4e22      	ldr	r6, [pc, #136]	; (90011814 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9001178c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9001178e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
90011790:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
90011792:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
90011796:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9001179a:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9001179e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
900117a2:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
900117a6:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
900117aa:	f7ff ff81 	bl	900116b0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
900117ae:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
900117b0:	f7ff fea8 	bl	90011504 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
900117b4:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
900117b8:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
900117bc:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
900117c0:	f7ff fe8c 	bl	900114dc <prvPortStartFirstTask>
	vTaskSwitchContext();
900117c4:	f001 fd8a 	bl	900132dc <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
900117c8:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
900117ca:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
900117cc:	3301      	adds	r3, #1
900117ce:	d008      	beq.n	900117e2 <xPortStartScheduler+0x10a>
900117d0:	f04f 0350 	mov.w	r3, #80	; 0x50
900117d4:	f383 8811 	msr	BASEPRI, r3
900117d8:	f3bf 8f6f 	isb	sy
900117dc:	f3bf 8f4f 	dsb	sy
900117e0:	e7fe      	b.n	900117e0 <xPortStartScheduler+0x108>
900117e2:	f04f 0350 	mov.w	r3, #80	; 0x50
900117e6:	f383 8811 	msr	BASEPRI, r3
900117ea:	f3bf 8f6f 	isb	sy
900117ee:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
900117f2:	9b03      	ldr	r3, [sp, #12]
900117f4:	2b00      	cmp	r3, #0
900117f6:	d0fc      	beq.n	900117f2 <xPortStartScheduler+0x11a>
}
900117f8:	2000      	movs	r0, #0
900117fa:	b004      	add	sp, #16
900117fc:	bd70      	pop	{r4, r5, r6, pc}
900117fe:	bf00      	nop
90011800:	410fc271 	.word	0x410fc271
90011804:	410fc270 	.word	0x410fc270
90011808:	e000e400 	.word	0xe000e400
9001180c:	24027774 	.word	0x24027774
90011810:	24027770 	.word	0x24027770
90011814:	24000064 	.word	0x24000064

90011818 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
90011818:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9001181c:	2b0f      	cmp	r3, #15
9001181e:	d90e      	bls.n	9001183e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90011820:	4911      	ldr	r1, [pc, #68]	; (90011868 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90011822:	4a12      	ldr	r2, [pc, #72]	; (9001186c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90011824:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90011826:	7812      	ldrb	r2, [r2, #0]
90011828:	429a      	cmp	r2, r3
9001182a:	d908      	bls.n	9001183e <vPortValidateInterruptPriority+0x26>
9001182c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011830:	f383 8811 	msr	BASEPRI, r3
90011834:	f3bf 8f6f 	isb	sy
90011838:	f3bf 8f4f 	dsb	sy
9001183c:	e7fe      	b.n	9001183c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9001183e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011842:	4a0b      	ldr	r2, [pc, #44]	; (90011870 <vPortValidateInterruptPriority+0x58>)
90011844:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
90011848:	6812      	ldr	r2, [r2, #0]
9001184a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9001184e:	4293      	cmp	r3, r2
90011850:	d908      	bls.n	90011864 <vPortValidateInterruptPriority+0x4c>
90011852:	f04f 0350 	mov.w	r3, #80	; 0x50
90011856:	f383 8811 	msr	BASEPRI, r3
9001185a:	f3bf 8f6f 	isb	sy
9001185e:	f3bf 8f4f 	dsb	sy
90011862:	e7fe      	b.n	90011862 <vPortValidateInterruptPriority+0x4a>
	}
90011864:	4770      	bx	lr
90011866:	bf00      	nop
90011868:	e000e3f0 	.word	0xe000e3f0
9001186c:	24027770 	.word	0x24027770
90011870:	24027774 	.word	0x24027774

90011874 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
90011874:	b570      	push	{r4, r5, r6, lr}
90011876:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
90011878:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9001187a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001187c:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9001187e:	b92a      	cbnz	r2, 9001188c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90011880:	6805      	ldr	r5, [r0, #0]
90011882:	b365      	cbz	r5, 900118de <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011884:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90011886:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011888:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9001188a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9001188c:	b97d      	cbnz	r5, 900118ae <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001188e:	6840      	ldr	r0, [r0, #4]
90011890:	f01a f916 	bl	9002bac0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011894:	6863      	ldr	r3, [r4, #4]
90011896:	6c22      	ldr	r2, [r4, #64]	; 0x40
90011898:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9001189a:	68a2      	ldr	r2, [r4, #8]
9001189c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001189e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900118a0:	d319      	bcc.n	900118d6 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
900118a2:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900118a4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
900118a6:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
900118a8:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900118aa:	63a6      	str	r6, [r4, #56]	; 0x38
}
900118ac:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
900118ae:	68c0      	ldr	r0, [r0, #12]
900118b0:	f01a f906 	bl	9002bac0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
900118b4:	6c22      	ldr	r2, [r4, #64]	; 0x40
900118b6:	68e3      	ldr	r3, [r4, #12]
900118b8:	4251      	negs	r1, r2
900118ba:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900118bc:	6822      	ldr	r2, [r4, #0]
900118be:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
900118c0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900118c2:	d202      	bcs.n	900118ca <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
900118c4:	68a3      	ldr	r3, [r4, #8]
900118c6:	440b      	add	r3, r1
900118c8:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
900118ca:	2d02      	cmp	r5, #2
900118cc:	d00d      	beq.n	900118ea <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900118ce:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
900118d0:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900118d2:	63a6      	str	r6, [r4, #56]	; 0x38
}
900118d4:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900118d6:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
900118d8:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900118da:	63a6      	str	r6, [r4, #56]	; 0x38
}
900118dc:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
900118de:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900118e0:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
900118e2:	f001 fee5 	bl	900136b0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
900118e6:	60a5      	str	r5, [r4, #8]
900118e8:	e7ce      	b.n	90011888 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
900118ea:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
900118ec:	f04f 0000 	mov.w	r0, #0
900118f0:	bf38      	it	cc
900118f2:	2601      	movcc	r6, #1
900118f4:	e7c8      	b.n	90011888 <prvCopyDataToQueue+0x14>
900118f6:	bf00      	nop

900118f8 <xQueueGenericCreateStatic>:
	{
900118f8:	b530      	push	{r4, r5, lr}
900118fa:	b083      	sub	sp, #12
900118fc:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90011900:	b940      	cbnz	r0, 90011914 <xQueueGenericCreateStatic+0x1c>
90011902:	f04f 0350 	mov.w	r3, #80	; 0x50
90011906:	f383 8811 	msr	BASEPRI, r3
9001190a:	f3bf 8f6f 	isb	sy
9001190e:	f3bf 8f4f 	dsb	sy
90011912:	e7fe      	b.n	90011912 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
90011914:	461d      	mov	r5, r3
90011916:	b153      	cbz	r3, 9001192e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
90011918:	b30a      	cbz	r2, 9001195e <xQueueGenericCreateStatic+0x66>
9001191a:	b989      	cbnz	r1, 90011940 <xQueueGenericCreateStatic+0x48>
9001191c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011920:	f383 8811 	msr	BASEPRI, r3
90011924:	f3bf 8f6f 	isb	sy
90011928:	f3bf 8f4f 	dsb	sy
9001192c:	e7fe      	b.n	9001192c <xQueueGenericCreateStatic+0x34>
9001192e:	f04f 0350 	mov.w	r3, #80	; 0x50
90011932:	f383 8811 	msr	BASEPRI, r3
90011936:	f3bf 8f6f 	isb	sy
9001193a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9001193e:	e7fe      	b.n	9001193e <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
90011940:	b16a      	cbz	r2, 9001195e <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
90011942:	2350      	movs	r3, #80	; 0x50
90011944:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90011946:	9b01      	ldr	r3, [sp, #4]
90011948:	2b50      	cmp	r3, #80	; 0x50
9001194a:	d013      	beq.n	90011974 <xQueueGenericCreateStatic+0x7c>
9001194c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011950:	f383 8811 	msr	BASEPRI, r3
90011954:	f3bf 8f6f 	isb	sy
90011958:	f3bf 8f4f 	dsb	sy
9001195c:	e7fe      	b.n	9001195c <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9001195e:	2900      	cmp	r1, #0
90011960:	d0ef      	beq.n	90011942 <xQueueGenericCreateStatic+0x4a>
90011962:	f04f 0350 	mov.w	r3, #80	; 0x50
90011966:	f383 8811 	msr	BASEPRI, r3
9001196a:	f3bf 8f6f 	isb	sy
9001196e:	f3bf 8f4f 	dsb	sy
90011972:	e7fe      	b.n	90011972 <xQueueGenericCreateStatic+0x7a>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90011974:	2900      	cmp	r1, #0
90011976:	bf08      	it	eq
90011978:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
9001197a:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9001197c:	6429      	str	r1, [r5, #64]	; 0x40
9001197e:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90011980:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90011982:	2201      	movs	r2, #1
90011984:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
90011988:	f7ff fe14 	bl	900115b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001198c:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001198e:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
90011990:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011992:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011994:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
90011998:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001199c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001199e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900119a0:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900119a2:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
900119a4:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900119a6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900119aa:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
900119ac:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900119b0:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900119b4:	f7ff fd46 	bl	90011444 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900119b8:	f105 0024 	add.w	r0, r5, #36	; 0x24
900119bc:	f7ff fd42 	bl	90011444 <vListInitialise>
	taskEXIT_CRITICAL();
900119c0:	f7ff fe1a 	bl	900115f8 <vPortExitCritical>
	}
900119c4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
900119c6:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
900119ca:	b003      	add	sp, #12
900119cc:	bd30      	pop	{r4, r5, pc}
900119ce:	bf00      	nop

900119d0 <xQueueGenericCreate>:
	{
900119d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
900119d2:	b940      	cbnz	r0, 900119e6 <xQueueGenericCreate+0x16>
900119d4:	f04f 0350 	mov.w	r3, #80	; 0x50
900119d8:	f383 8811 	msr	BASEPRI, r3
900119dc:	f3bf 8f6f 	isb	sy
900119e0:	f3bf 8f4f 	dsb	sy
900119e4:	e7fe      	b.n	900119e4 <xQueueGenericCreate+0x14>
900119e6:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900119e8:	fb01 f000 	mul.w	r0, r1, r0
900119ec:	460e      	mov	r6, r1
900119ee:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
900119f0:	3050      	adds	r0, #80	; 0x50
900119f2:	f7ff fc0b 	bl	9001120c <pvPortMalloc>
		if( pxNewQueue != NULL )
900119f6:	4604      	mov	r4, r0
900119f8:	b340      	cbz	r0, 90011a4c <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900119fa:	2300      	movs	r3, #0
900119fc:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
90011a00:	b336      	cbz	r6, 90011a50 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a02:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
90011a06:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
90011a08:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
90011a0c:	f7ff fdd2 	bl	900115b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a10:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011a12:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90011a16:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a18:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
90011a1c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a20:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a22:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a24:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a26:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011a28:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
90011a2a:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a2c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011a2e:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
90011a30:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011a34:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011a38:	f7ff fd04 	bl	90011444 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90011a3c:	f104 0024 	add.w	r0, r4, #36	; 0x24
90011a40:	f7ff fd00 	bl	90011444 <vListInitialise>
	taskEXIT_CRITICAL();
90011a44:	f7ff fdd8 	bl	900115f8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90011a48:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
90011a4c:	4620      	mov	r0, r4
90011a4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90011a50:	4603      	mov	r3, r0
90011a52:	e7d8      	b.n	90011a06 <xQueueGenericCreate+0x36>

90011a54 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
90011a54:	b940      	cbnz	r0, 90011a68 <xQueueCreateCountingSemaphoreStatic+0x14>
90011a56:	f04f 0350 	mov.w	r3, #80	; 0x50
90011a5a:	f383 8811 	msr	BASEPRI, r3
90011a5e:	f3bf 8f6f 	isb	sy
90011a62:	f3bf 8f4f 	dsb	sy
90011a66:	e7fe      	b.n	90011a66 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
90011a68:	4288      	cmp	r0, r1
90011a6a:	d208      	bcs.n	90011a7e <xQueueCreateCountingSemaphoreStatic+0x2a>
90011a6c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011a70:	f383 8811 	msr	BASEPRI, r3
90011a74:	f3bf 8f6f 	isb	sy
90011a78:	f3bf 8f4f 	dsb	sy
90011a7c:	e7fe      	b.n	90011a7c <xQueueCreateCountingSemaphoreStatic+0x28>
	{
90011a7e:	b530      	push	{r4, r5, lr}
90011a80:	4615      	mov	r5, r2
90011a82:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
90011a84:	2a00      	cmp	r2, #0
90011a86:	d03d      	beq.n	90011b04 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
90011a88:	2350      	movs	r3, #80	; 0x50
90011a8a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
90011a8c:	9b03      	ldr	r3, [sp, #12]
90011a8e:	2b50      	cmp	r3, #80	; 0x50
90011a90:	d008      	beq.n	90011aa4 <xQueueCreateCountingSemaphoreStatic+0x50>
90011a92:	f04f 0350 	mov.w	r3, #80	; 0x50
90011a96:	f383 8811 	msr	BASEPRI, r3
90011a9a:	f3bf 8f6f 	isb	sy
90011a9e:	f3bf 8f4f 	dsb	sy
90011aa2:	e7fe      	b.n	90011aa2 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
90011aa4:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90011aa6:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90011aa8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
90011aaa:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90011aac:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90011ab0:	6414      	str	r4, [r2, #64]	; 0x40
90011ab2:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90011ab4:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
90011ab6:	f7ff fd7d 	bl	900115b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011aba:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011abc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
90011abe:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011ac0:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
90011ac4:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011ac8:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011acc:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011ace:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011ad0:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90011ad2:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011ad4:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011ad8:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
90011adc:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011ae0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011ae4:	f7ff fcae 	bl	90011444 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90011ae8:	f105 0024 	add.w	r0, r5, #36	; 0x24
90011aec:	f7ff fcaa 	bl	90011444 <vListInitialise>
	taskEXIT_CRITICAL();
90011af0:	f7ff fd82 	bl	900115f8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90011af4:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
90011af6:	9901      	ldr	r1, [sp, #4]
	}
90011af8:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
90011afa:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
90011afe:	63a9      	str	r1, [r5, #56]	; 0x38
	}
90011b00:	b005      	add	sp, #20
90011b02:	bd30      	pop	{r4, r5, pc}
90011b04:	f04f 0350 	mov.w	r3, #80	; 0x50
90011b08:	f383 8811 	msr	BASEPRI, r3
90011b0c:	f3bf 8f6f 	isb	sy
90011b10:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90011b14:	e7fe      	b.n	90011b14 <xQueueCreateCountingSemaphoreStatic+0xc0>
90011b16:	bf00      	nop

90011b18 <xQueueCreateCountingSemaphore>:
	{
90011b18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
90011b1a:	b940      	cbnz	r0, 90011b2e <xQueueCreateCountingSemaphore+0x16>
90011b1c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011b20:	f383 8811 	msr	BASEPRI, r3
90011b24:	f3bf 8f6f 	isb	sy
90011b28:	f3bf 8f4f 	dsb	sy
90011b2c:	e7fe      	b.n	90011b2c <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
90011b2e:	4288      	cmp	r0, r1
90011b30:	4604      	mov	r4, r0
90011b32:	460e      	mov	r6, r1
90011b34:	d208      	bcs.n	90011b48 <xQueueCreateCountingSemaphore+0x30>
90011b36:	f04f 0350 	mov.w	r3, #80	; 0x50
90011b3a:	f383 8811 	msr	BASEPRI, r3
90011b3e:	f3bf 8f6f 	isb	sy
90011b42:	f3bf 8f4f 	dsb	sy
90011b46:	e7fe      	b.n	90011b46 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90011b48:	2050      	movs	r0, #80	; 0x50
90011b4a:	f7ff fb5f 	bl	9001120c <pvPortMalloc>
		if( pxNewQueue != NULL )
90011b4e:	4605      	mov	r5, r0
90011b50:	b330      	cbz	r0, 90011ba0 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90011b52:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90011b54:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
90011b56:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90011b58:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90011b5c:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
90011b5e:	f7ff fd29 	bl	900115b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011b62:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011b64:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011b66:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90011b6a:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011b6c:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
90011b70:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011b74:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011b76:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011b78:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011b7a:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90011b7c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011b7e:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
90011b80:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011b84:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011b88:	f7ff fc5c 	bl	90011444 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90011b8c:	f105 0024 	add.w	r0, r5, #36	; 0x24
90011b90:	f7ff fc58 	bl	90011444 <vListInitialise>
	taskEXIT_CRITICAL();
90011b94:	f7ff fd30 	bl	900115f8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90011b98:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
90011b9a:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
90011b9c:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
90011ba0:	4628      	mov	r0, r5
90011ba2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90011ba4 <xQueueGenericSend>:
{
90011ba4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90011ba8:	b084      	sub	sp, #16
90011baa:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
90011bac:	2800      	cmp	r0, #0
90011bae:	f000 8103 	beq.w	90011db8 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90011bb2:	4688      	mov	r8, r1
90011bb4:	4604      	mov	r4, r0
90011bb6:	461f      	mov	r7, r3
90011bb8:	2900      	cmp	r1, #0
90011bba:	f000 8097 	beq.w	90011cec <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
90011bbe:	2f02      	cmp	r7, #2
90011bc0:	d10b      	bne.n	90011bda <xQueueGenericSend+0x36>
90011bc2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90011bc4:	2b01      	cmp	r3, #1
90011bc6:	d008      	beq.n	90011bda <xQueueGenericSend+0x36>
90011bc8:	f04f 0350 	mov.w	r3, #80	; 0x50
90011bcc:	f383 8811 	msr	BASEPRI, r3
90011bd0:	f3bf 8f6f 	isb	sy
90011bd4:	f3bf 8f4f 	dsb	sy
90011bd8:	e7fe      	b.n	90011bd8 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90011bda:	f001 fd13 	bl	90013604 <xTaskGetSchedulerState>
90011bde:	2800      	cmp	r0, #0
90011be0:	f000 80f3 	beq.w	90011dca <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90011be4:	f1a7 0902 	sub.w	r9, r7, #2
90011be8:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011bea:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90011bee:	fab9 f989 	clz	r9, r9
90011bf2:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
90011bf6:	f7ff fcdd 	bl	900115b4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90011bfa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90011bfc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90011bfe:	429a      	cmp	r2, r3
90011c00:	f0c0 80f0 	bcc.w	90011de4 <xQueueGenericSend+0x240>
90011c04:	f1b9 0f00 	cmp.w	r9, #0
90011c08:	f040 80ec 	bne.w	90011de4 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
90011c0c:	9b01      	ldr	r3, [sp, #4]
90011c0e:	2b00      	cmp	r3, #0
90011c10:	f000 8101 	beq.w	90011e16 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
90011c14:	2d00      	cmp	r5, #0
90011c16:	f000 80cb 	beq.w	90011db0 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
90011c1a:	f7ff fced 	bl	900115f8 <vPortExitCritical>
		vTaskSuspendAll();
90011c1e:	f001 fb19 	bl	90013254 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90011c22:	f7ff fcc7 	bl	900115b4 <vPortEnterCritical>
90011c26:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011c2a:	2bff      	cmp	r3, #255	; 0xff
90011c2c:	d102      	bne.n	90011c34 <xQueueGenericSend+0x90>
90011c2e:	2300      	movs	r3, #0
90011c30:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
90011c34:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011c38:	2bff      	cmp	r3, #255	; 0xff
90011c3a:	d102      	bne.n	90011c42 <xQueueGenericSend+0x9e>
90011c3c:	2300      	movs	r3, #0
90011c3e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90011c42:	f7ff fcd9 	bl	900115f8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90011c46:	a901      	add	r1, sp, #4
90011c48:	a802      	add	r0, sp, #8
90011c4a:	f001 fc87 	bl	9001355c <xTaskCheckForTimeOut>
90011c4e:	2800      	cmp	r0, #0
90011c50:	f040 80e5 	bne.w	90011e1e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
90011c54:	f7ff fcae 	bl	900115b4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
90011c58:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90011c5a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90011c5c:	429a      	cmp	r2, r3
90011c5e:	d052      	beq.n	90011d06 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
90011c60:	f7ff fcca 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
90011c64:	f7ff fca6 	bl	900115b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011c68:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
90011c6c:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011c6e:	2d00      	cmp	r5, #0
90011c70:	dc04      	bgt.n	90011c7c <xQueueGenericSend+0xd8>
90011c72:	e011      	b.n	90011c98 <xQueueGenericSend+0xf4>
			--cTxLock;
90011c74:	1e6a      	subs	r2, r5, #1
90011c76:	b2d3      	uxtb	r3, r2
90011c78:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011c7a:	b16b      	cbz	r3, 90011c98 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011c7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011c7e:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011c80:	b153      	cbz	r3, 90011c98 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011c82:	f001 fc15 	bl	900134b0 <xTaskRemoveFromEventList>
90011c86:	2800      	cmp	r0, #0
90011c88:	d0f4      	beq.n	90011c74 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
90011c8a:	f001 fcaf 	bl	900135ec <vTaskMissedYield>
			--cTxLock;
90011c8e:	1e6a      	subs	r2, r5, #1
90011c90:	b2d3      	uxtb	r3, r2
90011c92:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011c94:	2b00      	cmp	r3, #0
90011c96:	d1f1      	bne.n	90011c7c <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
90011c98:	23ff      	movs	r3, #255	; 0xff
90011c9a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011c9e:	f7ff fcab 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
90011ca2:	f7ff fc87 	bl	900115b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011ca6:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
90011caa:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011cac:	2d00      	cmp	r5, #0
90011cae:	dd14      	ble.n	90011cda <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011cb0:	f104 0a10 	add.w	sl, r4, #16
90011cb4:	e003      	b.n	90011cbe <xQueueGenericSend+0x11a>
				--cRxLock;
90011cb6:	1e6a      	subs	r2, r5, #1
90011cb8:	b2d3      	uxtb	r3, r2
90011cba:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011cbc:	b16b      	cbz	r3, 90011cda <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011cbe:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011cc0:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011cc2:	b153      	cbz	r3, 90011cda <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011cc4:	f001 fbf4 	bl	900134b0 <xTaskRemoveFromEventList>
90011cc8:	2800      	cmp	r0, #0
90011cca:	d0f4      	beq.n	90011cb6 <xQueueGenericSend+0x112>
					vTaskMissedYield();
90011ccc:	f001 fc8e 	bl	900135ec <vTaskMissedYield>
				--cRxLock;
90011cd0:	1e6a      	subs	r2, r5, #1
90011cd2:	b2d3      	uxtb	r3, r2
90011cd4:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011cd6:	2b00      	cmp	r3, #0
90011cd8:	d1f1      	bne.n	90011cbe <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
90011cda:	23ff      	movs	r3, #255	; 0xff
90011cdc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011ce0:	f7ff fc8a 	bl	900115f8 <vPortExitCritical>
				( void ) xTaskResumeAll();
90011ce4:	f001 fabe 	bl	90013264 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90011ce8:	2501      	movs	r5, #1
90011cea:	e784      	b.n	90011bf6 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90011cec:	6c03      	ldr	r3, [r0, #64]	; 0x40
90011cee:	2b00      	cmp	r3, #0
90011cf0:	f43f af65 	beq.w	90011bbe <xQueueGenericSend+0x1a>
90011cf4:	f04f 0350 	mov.w	r3, #80	; 0x50
90011cf8:	f383 8811 	msr	BASEPRI, r3
90011cfc:	f3bf 8f6f 	isb	sy
90011d00:	f3bf 8f4f 	dsb	sy
90011d04:	e7fe      	b.n	90011d04 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
90011d06:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
90011d0a:	f7ff fc75 	bl	900115f8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
90011d0e:	9901      	ldr	r1, [sp, #4]
90011d10:	4650      	mov	r0, sl
90011d12:	f001 fb3f 	bl	90013394 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90011d16:	f7ff fc4d 	bl	900115b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011d1a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011d1e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011d20:	2d00      	cmp	r5, #0
90011d22:	dc04      	bgt.n	90011d2e <xQueueGenericSend+0x18a>
90011d24:	e011      	b.n	90011d4a <xQueueGenericSend+0x1a6>
			--cTxLock;
90011d26:	1e6b      	subs	r3, r5, #1
90011d28:	b2da      	uxtb	r2, r3
90011d2a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011d2c:	b16a      	cbz	r2, 90011d4a <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011d2e:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011d30:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011d32:	b153      	cbz	r3, 90011d4a <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011d34:	f001 fbbc 	bl	900134b0 <xTaskRemoveFromEventList>
90011d38:	2800      	cmp	r0, #0
90011d3a:	d0f4      	beq.n	90011d26 <xQueueGenericSend+0x182>
						vTaskMissedYield();
90011d3c:	f001 fc56 	bl	900135ec <vTaskMissedYield>
			--cTxLock;
90011d40:	1e6b      	subs	r3, r5, #1
90011d42:	b2da      	uxtb	r2, r3
90011d44:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011d46:	2a00      	cmp	r2, #0
90011d48:	d1f1      	bne.n	90011d2e <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
90011d4a:	23ff      	movs	r3, #255	; 0xff
90011d4c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011d50:	f7ff fc52 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
90011d54:	f7ff fc2e 	bl	900115b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011d58:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011d5c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011d5e:	2d00      	cmp	r5, #0
90011d60:	dc04      	bgt.n	90011d6c <xQueueGenericSend+0x1c8>
90011d62:	e011      	b.n	90011d88 <xQueueGenericSend+0x1e4>
				--cRxLock;
90011d64:	1e6b      	subs	r3, r5, #1
90011d66:	b2da      	uxtb	r2, r3
90011d68:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011d6a:	b16a      	cbz	r2, 90011d88 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011d6c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011d6e:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011d70:	b153      	cbz	r3, 90011d88 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011d72:	f001 fb9d 	bl	900134b0 <xTaskRemoveFromEventList>
90011d76:	2800      	cmp	r0, #0
90011d78:	d0f4      	beq.n	90011d64 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
90011d7a:	f001 fc37 	bl	900135ec <vTaskMissedYield>
				--cRxLock;
90011d7e:	1e6b      	subs	r3, r5, #1
90011d80:	b2da      	uxtb	r2, r3
90011d82:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011d84:	2a00      	cmp	r2, #0
90011d86:	d1f1      	bne.n	90011d6c <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
90011d88:	23ff      	movs	r3, #255	; 0xff
90011d8a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011d8e:	f7ff fc33 	bl	900115f8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90011d92:	f001 fa67 	bl	90013264 <xTaskResumeAll>
90011d96:	2800      	cmp	r0, #0
90011d98:	d1a6      	bne.n	90011ce8 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
90011d9a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011d9e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011da2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011da6:	f3bf 8f4f 	dsb	sy
90011daa:	f3bf 8f6f 	isb	sy
90011dae:	e79b      	b.n	90011ce8 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
90011db0:	a802      	add	r0, sp, #8
90011db2:	f001 fbc7 	bl	90013544 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90011db6:	e730      	b.n	90011c1a <xQueueGenericSend+0x76>
90011db8:	f04f 0350 	mov.w	r3, #80	; 0x50
90011dbc:	f383 8811 	msr	BASEPRI, r3
90011dc0:	f3bf 8f6f 	isb	sy
90011dc4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011dc8:	e7fe      	b.n	90011dc8 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90011dca:	9b01      	ldr	r3, [sp, #4]
90011dcc:	2b00      	cmp	r3, #0
90011dce:	f43f af09 	beq.w	90011be4 <xQueueGenericSend+0x40>
90011dd2:	f04f 0350 	mov.w	r3, #80	; 0x50
90011dd6:	f383 8811 	msr	BASEPRI, r3
90011dda:	f3bf 8f6f 	isb	sy
90011dde:	f3bf 8f4f 	dsb	sy
90011de2:	e7fe      	b.n	90011de2 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90011de4:	463a      	mov	r2, r7
90011de6:	4641      	mov	r1, r8
90011de8:	4620      	mov	r0, r4
90011dea:	f7ff fd43 	bl	90011874 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011dee:	6a63      	ldr	r3, [r4, #36]	; 0x24
90011df0:	2b00      	cmp	r3, #0
90011df2:	d152      	bne.n	90011e9a <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
90011df4:	b148      	cbz	r0, 90011e0a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
90011df6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011dfa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011dfe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011e02:	f3bf 8f4f 	dsb	sy
90011e06:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
90011e0a:	f7ff fbf5 	bl	900115f8 <vPortExitCritical>
				return pdPASS;
90011e0e:	2001      	movs	r0, #1
}
90011e10:	b004      	add	sp, #16
90011e12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
90011e16:	f7ff fbef 	bl	900115f8 <vPortExitCritical>
					return errQUEUE_FULL;
90011e1a:	4648      	mov	r0, r9
90011e1c:	e7f8      	b.n	90011e10 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
90011e1e:	f7ff fbc9 	bl	900115b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011e22:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011e26:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011e28:	2d00      	cmp	r5, #0
90011e2a:	dd10      	ble.n	90011e4e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011e2c:	f104 0624 	add.w	r6, r4, #36	; 0x24
90011e30:	e003      	b.n	90011e3a <xQueueGenericSend+0x296>
			--cTxLock;
90011e32:	1e6b      	subs	r3, r5, #1
90011e34:	b2da      	uxtb	r2, r3
90011e36:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011e38:	b14a      	cbz	r2, 90011e4e <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011e3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011e3c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011e3e:	b133      	cbz	r3, 90011e4e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011e40:	f001 fb36 	bl	900134b0 <xTaskRemoveFromEventList>
90011e44:	2800      	cmp	r0, #0
90011e46:	d0f4      	beq.n	90011e32 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
90011e48:	f001 fbd0 	bl	900135ec <vTaskMissedYield>
90011e4c:	e7f1      	b.n	90011e32 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
90011e4e:	23ff      	movs	r3, #255	; 0xff
90011e50:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011e54:	f7ff fbd0 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
90011e58:	f7ff fbac 	bl	900115b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011e5c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011e60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011e62:	2d00      	cmp	r5, #0
90011e64:	dd10      	ble.n	90011e88 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011e66:	f104 0610 	add.w	r6, r4, #16
90011e6a:	e003      	b.n	90011e74 <xQueueGenericSend+0x2d0>
				--cRxLock;
90011e6c:	1e6b      	subs	r3, r5, #1
90011e6e:	b2da      	uxtb	r2, r3
90011e70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011e72:	b14a      	cbz	r2, 90011e88 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011e74:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011e76:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011e78:	b133      	cbz	r3, 90011e88 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011e7a:	f001 fb19 	bl	900134b0 <xTaskRemoveFromEventList>
90011e7e:	2800      	cmp	r0, #0
90011e80:	d0f4      	beq.n	90011e6c <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
90011e82:	f001 fbb3 	bl	900135ec <vTaskMissedYield>
90011e86:	e7f1      	b.n	90011e6c <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
90011e88:	23ff      	movs	r3, #255	; 0xff
90011e8a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011e8e:	f7ff fbb3 	bl	900115f8 <vPortExitCritical>
			( void ) xTaskResumeAll();
90011e92:	f001 f9e7 	bl	90013264 <xTaskResumeAll>
			return errQUEUE_FULL;
90011e96:	2000      	movs	r0, #0
90011e98:	e7ba      	b.n	90011e10 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011e9a:	f104 0024 	add.w	r0, r4, #36	; 0x24
90011e9e:	f001 fb07 	bl	900134b0 <xTaskRemoveFromEventList>
90011ea2:	2800      	cmp	r0, #0
90011ea4:	d0b1      	beq.n	90011e0a <xQueueGenericSend+0x266>
90011ea6:	e7a6      	b.n	90011df6 <xQueueGenericSend+0x252>

90011ea8 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
90011ea8:	b179      	cbz	r1, 90011eca <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
90011eaa:	2350      	movs	r3, #80	; 0x50
	{
90011eac:	b570      	push	{r4, r5, r6, lr}
90011eae:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
90011eb0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90011eb2:	9b01      	ldr	r3, [sp, #4]
90011eb4:	2b50      	cmp	r3, #80	; 0x50
90011eb6:	d011      	beq.n	90011edc <xQueueCreateMutexStatic+0x34>
90011eb8:	f04f 0350 	mov.w	r3, #80	; 0x50
90011ebc:	f383 8811 	msr	BASEPRI, r3
90011ec0:	f3bf 8f6f 	isb	sy
90011ec4:	f3bf 8f4f 	dsb	sy
90011ec8:	e7fe      	b.n	90011ec8 <xQueueCreateMutexStatic+0x20>
90011eca:	f04f 0350 	mov.w	r3, #80	; 0x50
90011ece:	f383 8811 	msr	BASEPRI, r3
90011ed2:	f3bf 8f6f 	isb	sy
90011ed6:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90011eda:	e7fe      	b.n	90011eda <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
90011edc:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90011ede:	2301      	movs	r3, #1
90011ee0:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90011ee2:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90011ee4:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
90011ee8:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90011eea:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
90011eec:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
90011ef0:	f7ff fb60 	bl	900115b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011ef4:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
90011ef6:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011ef8:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
90011efa:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
90011efc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011f00:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f04:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
90011f08:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f0c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f0e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f10:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011f12:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f16:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011f1a:	f7ff fa93 	bl	90011444 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90011f1e:	f104 0024 	add.w	r0, r4, #36	; 0x24
90011f22:	f7ff fa8f 	bl	90011444 <vListInitialise>
	taskEXIT_CRITICAL();
90011f26:	f7ff fb67 	bl	900115f8 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90011f2a:	4633      	mov	r3, r6
90011f2c:	4632      	mov	r2, r6
90011f2e:	4631      	mov	r1, r6
90011f30:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90011f32:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
90011f36:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
90011f38:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
90011f3a:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90011f3c:	f7ff fe32 	bl	90011ba4 <xQueueGenericSend>
	}
90011f40:	4620      	mov	r0, r4
90011f42:	b002      	add	sp, #8
90011f44:	bd70      	pop	{r4, r5, r6, pc}
90011f46:	bf00      	nop

90011f48 <xQueueGiveMutexRecursive>:
	{
90011f48:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
90011f4a:	b138      	cbz	r0, 90011f5c <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
90011f4c:	6885      	ldr	r5, [r0, #8]
90011f4e:	4604      	mov	r4, r0
90011f50:	f001 fb52 	bl	900135f8 <xTaskGetCurrentTaskHandle>
90011f54:	4285      	cmp	r5, r0
90011f56:	d00a      	beq.n	90011f6e <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
90011f58:	2000      	movs	r0, #0
	}
90011f5a:	bd38      	pop	{r3, r4, r5, pc}
90011f5c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011f60:	f383 8811 	msr	BASEPRI, r3
90011f64:	f3bf 8f6f 	isb	sy
90011f68:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
90011f6c:	e7fe      	b.n	90011f6c <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
90011f6e:	68e3      	ldr	r3, [r4, #12]
90011f70:	3b01      	subs	r3, #1
90011f72:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
90011f74:	b10b      	cbz	r3, 90011f7a <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
90011f76:	2001      	movs	r0, #1
	}
90011f78:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
90011f7a:	461a      	mov	r2, r3
90011f7c:	4619      	mov	r1, r3
90011f7e:	4620      	mov	r0, r4
90011f80:	f7ff fe10 	bl	90011ba4 <xQueueGenericSend>
			xReturn = pdPASS;
90011f84:	2001      	movs	r0, #1
	}
90011f86:	bd38      	pop	{r3, r4, r5, pc}

90011f88 <xQueueCreateMutex>:
	{
90011f88:	b570      	push	{r4, r5, r6, lr}
90011f8a:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90011f8c:	2050      	movs	r0, #80	; 0x50
90011f8e:	f7ff f93d 	bl	9001120c <pvPortMalloc>
		if( pxNewQueue != NULL )
90011f92:	4604      	mov	r4, r0
90011f94:	b370      	cbz	r0, 90011ff4 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90011f96:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
90011f98:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90011f9a:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90011f9c:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90011fa0:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
90011fa4:	f7ff fb06 	bl	900115b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fa8:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011faa:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011fac:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90011fb0:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fb2:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
90011fb6:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fba:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fbc:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fbe:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
90011fc0:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fc2:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90011fc6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011fca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011fce:	f7ff fa39 	bl	90011444 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90011fd2:	f104 0024 	add.w	r0, r4, #36	; 0x24
90011fd6:	f7ff fa35 	bl	90011444 <vListInitialise>
	taskEXIT_CRITICAL();
90011fda:	f7ff fb0d 	bl	900115f8 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90011fde:	4633      	mov	r3, r6
90011fe0:	4632      	mov	r2, r6
90011fe2:	4631      	mov	r1, r6
90011fe4:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90011fe6:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
90011fea:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
90011fec:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
90011fee:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90011ff0:	f7ff fdd8 	bl	90011ba4 <xQueueGenericSend>
	}
90011ff4:	4620      	mov	r0, r4
90011ff6:	bd70      	pop	{r4, r5, r6, pc}

90011ff8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
90011ff8:	2800      	cmp	r0, #0
90011ffa:	d04e      	beq.n	9001209a <xQueueGenericSendFromISR+0xa2>
{
90011ffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012000:	460e      	mov	r6, r1
90012002:	4604      	mov	r4, r0
90012004:	4617      	mov	r7, r2
90012006:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90012008:	b339      	cbz	r1, 9001205a <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9001200a:	2d02      	cmp	r5, #2
9001200c:	d10b      	bne.n	90012026 <xQueueGenericSendFromISR+0x2e>
9001200e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90012010:	2b01      	cmp	r3, #1
90012012:	d008      	beq.n	90012026 <xQueueGenericSendFromISR+0x2e>
90012014:	f04f 0350 	mov.w	r3, #80	; 0x50
90012018:	f383 8811 	msr	BASEPRI, r3
9001201c:	f3bf 8f6f 	isb	sy
90012020:	f3bf 8f4f 	dsb	sy
90012024:	e7fe      	b.n	90012024 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90012026:	f7ff fbf7 	bl	90011818 <vPortValidateInterruptPriority>
	__asm volatile
9001202a:	f3ef 8811 	mrs	r8, BASEPRI
9001202e:	f04f 0350 	mov.w	r3, #80	; 0x50
90012032:	f383 8811 	msr	BASEPRI, r3
90012036:	f3bf 8f6f 	isb	sy
9001203a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001203e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90012040:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90012042:	429a      	cmp	r2, r3
90012044:	d315      	bcc.n	90012072 <xQueueGenericSendFromISR+0x7a>
90012046:	f1a5 0002 	sub.w	r0, r5, #2
9001204a:	fab0 f080 	clz	r0, r0
9001204e:	0940      	lsrs	r0, r0, #5
90012050:	b978      	cbnz	r0, 90012072 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
90012052:	f388 8811 	msr	BASEPRI, r8
}
90012056:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001205a:	6c03      	ldr	r3, [r0, #64]	; 0x40
9001205c:	2b00      	cmp	r3, #0
9001205e:	d0d4      	beq.n	9001200a <xQueueGenericSendFromISR+0x12>
	__asm volatile
90012060:	f04f 0350 	mov.w	r3, #80	; 0x50
90012064:	f383 8811 	msr	BASEPRI, r3
90012068:	f3bf 8f6f 	isb	sy
9001206c:	f3bf 8f4f 	dsb	sy
90012070:	e7fe      	b.n	90012070 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90012072:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
90012074:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90012078:	4631      	mov	r1, r6
9001207a:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9001207c:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9001207e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90012080:	f7ff fbf8 	bl	90011874 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
90012084:	1c6b      	adds	r3, r5, #1
90012086:	d011      	beq.n	900120ac <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90012088:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
9001208a:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9001208c:	b25b      	sxtb	r3, r3
9001208e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
90012092:	f388 8811 	msr	BASEPRI, r8
}
90012096:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
9001209a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001209e:	f383 8811 	msr	BASEPRI, r3
900120a2:	f3bf 8f6f 	isb	sy
900120a6:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
900120aa:	e7fe      	b.n	900120aa <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900120ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
900120ae:	b90b      	cbnz	r3, 900120b4 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
900120b0:	2001      	movs	r0, #1
900120b2:	e7ce      	b.n	90012052 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900120b4:	f104 0024 	add.w	r0, r4, #36	; 0x24
900120b8:	f001 f9fa 	bl	900134b0 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
900120bc:	2800      	cmp	r0, #0
900120be:	d0f7      	beq.n	900120b0 <xQueueGenericSendFromISR+0xb8>
900120c0:	2f00      	cmp	r7, #0
900120c2:	d0f5      	beq.n	900120b0 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
900120c4:	2301      	movs	r3, #1
			xReturn = pdPASS;
900120c6:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
900120c8:	603b      	str	r3, [r7, #0]
900120ca:	e7c2      	b.n	90012052 <xQueueGenericSendFromISR+0x5a>

900120cc <xQueueGiveFromISR>:
	configASSERT( pxQueue );
900120cc:	b360      	cbz	r0, 90012128 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
900120ce:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
900120d0:	b570      	push	{r4, r5, r6, lr}
900120d2:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
900120d4:	b143      	cbz	r3, 900120e8 <xQueueGiveFromISR+0x1c>
900120d6:	f04f 0350 	mov.w	r3, #80	; 0x50
900120da:	f383 8811 	msr	BASEPRI, r3
900120de:	f3bf 8f6f 	isb	sy
900120e2:	f3bf 8f4f 	dsb	sy
900120e6:	e7fe      	b.n	900120e6 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
900120e8:	6803      	ldr	r3, [r0, #0]
900120ea:	460d      	mov	r5, r1
900120ec:	b32b      	cbz	r3, 9001213a <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900120ee:	f7ff fb93 	bl	90011818 <vPortValidateInterruptPriority>
	__asm volatile
900120f2:	f3ef 8611 	mrs	r6, BASEPRI
900120f6:	f04f 0350 	mov.w	r3, #80	; 0x50
900120fa:	f383 8811 	msr	BASEPRI, r3
900120fe:	f3bf 8f6f 	isb	sy
90012102:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90012106:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
90012108:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9001210a:	429a      	cmp	r2, r3
9001210c:	d921      	bls.n	90012152 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9001210e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90012112:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
90012114:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90012116:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
90012118:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9001211a:	d01e      	beq.n	9001215a <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9001211c:	3301      	adds	r3, #1
			xReturn = pdPASS;
9001211e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90012120:	b25b      	sxtb	r3, r3
90012122:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90012126:	e015      	b.n	90012154 <xQueueGiveFromISR+0x88>
	__asm volatile
90012128:	f04f 0350 	mov.w	r3, #80	; 0x50
9001212c:	f383 8811 	msr	BASEPRI, r3
90012130:	f3bf 8f6f 	isb	sy
90012134:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90012138:	e7fe      	b.n	90012138 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9001213a:	6883      	ldr	r3, [r0, #8]
9001213c:	2b00      	cmp	r3, #0
9001213e:	d0d6      	beq.n	900120ee <xQueueGiveFromISR+0x22>
90012140:	f04f 0350 	mov.w	r3, #80	; 0x50
90012144:	f383 8811 	msr	BASEPRI, r3
90012148:	f3bf 8f6f 	isb	sy
9001214c:	f3bf 8f4f 	dsb	sy
90012150:	e7fe      	b.n	90012150 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
90012152:	2000      	movs	r0, #0
	__asm volatile
90012154:	f386 8811 	msr	BASEPRI, r6
}
90012158:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001215a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001215c:	b90b      	cbnz	r3, 90012162 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
9001215e:	2001      	movs	r0, #1
90012160:	e7f8      	b.n	90012154 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012162:	f104 0024 	add.w	r0, r4, #36	; 0x24
90012166:	f001 f9a3 	bl	900134b0 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9001216a:	2d00      	cmp	r5, #0
9001216c:	d0f7      	beq.n	9001215e <xQueueGiveFromISR+0x92>
9001216e:	2800      	cmp	r0, #0
90012170:	d0f5      	beq.n	9001215e <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
90012172:	2301      	movs	r3, #1
			xReturn = pdPASS;
90012174:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
90012176:	602b      	str	r3, [r5, #0]
90012178:	e7ec      	b.n	90012154 <xQueueGiveFromISR+0x88>
9001217a:	bf00      	nop

9001217c <xQueueReceive>:
{
9001217c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012180:	b085      	sub	sp, #20
90012182:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
90012184:	2800      	cmp	r0, #0
90012186:	f000 815f 	beq.w	90012448 <xQueueReceive+0x2cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001218a:	460f      	mov	r7, r1
9001218c:	4604      	mov	r4, r0
9001218e:	2900      	cmp	r1, #0
90012190:	f000 8094 	beq.w	900122bc <xQueueReceive+0x140>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90012194:	f001 fa36 	bl	90013604 <xTaskGetSchedulerState>
90012198:	2800      	cmp	r0, #0
9001219a:	f000 809c 	beq.w	900122d6 <xQueueReceive+0x15a>
		taskENTER_CRITICAL();
9001219e:	f7ff fa09 	bl	900115b4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900121a2:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
900121a4:	2d00      	cmp	r5, #0
900121a6:	d172      	bne.n	9001228e <xQueueReceive+0x112>
				if( xTicksToWait == ( TickType_t ) 0 )
900121a8:	9b01      	ldr	r3, [sp, #4]
900121aa:	2b00      	cmp	r3, #0
900121ac:	f000 80f1 	beq.w	90012392 <xQueueReceive+0x216>
		prvLockQueue( pxQueue );
900121b0:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900121b2:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
900121b6:	a802      	add	r0, sp, #8
900121b8:	f001 f9c4 	bl	90013544 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
900121bc:	f7ff fa1c 	bl	900115f8 <vPortExitCritical>
		vTaskSuspendAll();
900121c0:	f001 f848 	bl	90013254 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
900121c4:	f7ff f9f6 	bl	900115b4 <vPortEnterCritical>
900121c8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900121cc:	2bff      	cmp	r3, #255	; 0xff
900121ce:	d101      	bne.n	900121d4 <xQueueReceive+0x58>
900121d0:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
900121d4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900121d8:	2bff      	cmp	r3, #255	; 0xff
900121da:	d101      	bne.n	900121e0 <xQueueReceive+0x64>
900121dc:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
900121e0:	f7ff fa0a 	bl	900115f8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
900121e4:	a901      	add	r1, sp, #4
900121e6:	a802      	add	r0, sp, #8
900121e8:	f001 f9b8 	bl	9001355c <xTaskCheckForTimeOut>
900121ec:	2800      	cmp	r0, #0
900121ee:	d17f      	bne.n	900122f0 <xQueueReceive+0x174>
	taskENTER_CRITICAL();
900121f0:	f7ff f9e0 	bl	900115b4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
900121f4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
900121f6:	2b00      	cmp	r3, #0
900121f8:	f000 80d1 	beq.w	9001239e <xQueueReceive+0x222>
	taskEXIT_CRITICAL();
900121fc:	f7ff f9fc 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
90012200:	f7ff f9d8 	bl	900115b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90012204:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90012208:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001220a:	2d00      	cmp	r5, #0
9001220c:	dc04      	bgt.n	90012218 <xQueueReceive+0x9c>
9001220e:	e011      	b.n	90012234 <xQueueReceive+0xb8>
			--cTxLock;
90012210:	1e6b      	subs	r3, r5, #1
90012212:	b2da      	uxtb	r2, r3
90012214:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012216:	b16a      	cbz	r2, 90012234 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012218:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001221a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001221c:	b153      	cbz	r3, 90012234 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001221e:	f001 f947 	bl	900134b0 <xTaskRemoveFromEventList>
90012222:	2800      	cmp	r0, #0
90012224:	d0f4      	beq.n	90012210 <xQueueReceive+0x94>
						vTaskMissedYield();
90012226:	f001 f9e1 	bl	900135ec <vTaskMissedYield>
			--cTxLock;
9001222a:	1e6b      	subs	r3, r5, #1
9001222c:	b2da      	uxtb	r2, r3
9001222e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012230:	2a00      	cmp	r2, #0
90012232:	d1f1      	bne.n	90012218 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
90012234:	23ff      	movs	r3, #255	; 0xff
90012236:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001223a:	f7ff f9dd 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001223e:	f7ff f9b9 	bl	900115b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90012242:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90012246:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012248:	2d00      	cmp	r5, #0
9001224a:	dd14      	ble.n	90012276 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001224c:	f104 0910 	add.w	r9, r4, #16
90012250:	e003      	b.n	9001225a <xQueueReceive+0xde>
				--cRxLock;
90012252:	1e6b      	subs	r3, r5, #1
90012254:	b2da      	uxtb	r2, r3
90012256:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012258:	b16a      	cbz	r2, 90012276 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001225a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001225c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001225e:	b153      	cbz	r3, 90012276 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012260:	f001 f926 	bl	900134b0 <xTaskRemoveFromEventList>
90012264:	2800      	cmp	r0, #0
90012266:	d0f4      	beq.n	90012252 <xQueueReceive+0xd6>
					vTaskMissedYield();
90012268:	f001 f9c0 	bl	900135ec <vTaskMissedYield>
				--cRxLock;
9001226c:	1e6b      	subs	r3, r5, #1
9001226e:	b2da      	uxtb	r2, r3
90012270:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012272:	2a00      	cmp	r2, #0
90012274:	d1f1      	bne.n	9001225a <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
90012276:	23ff      	movs	r3, #255	; 0xff
90012278:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9001227c:	f7ff f9bc 	bl	900115f8 <vPortExitCritical>
				( void ) xTaskResumeAll();
90012280:	f000 fff0 	bl	90013264 <xTaskResumeAll>
		taskENTER_CRITICAL();
90012284:	f7ff f996 	bl	900115b4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90012288:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9001228a:	2d00      	cmp	r5, #0
9001228c:	d07d      	beq.n	9001238a <xQueueReceive+0x20e>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9001228e:	6c22      	ldr	r2, [r4, #64]	; 0x40
90012290:	b152      	cbz	r2, 900122a8 <xQueueReceive+0x12c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90012292:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012294:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90012296:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012298:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001229a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9001229c:	d301      	bcc.n	900122a2 <xQueueReceive+0x126>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9001229e:	6821      	ldr	r1, [r4, #0]
900122a0:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900122a2:	4638      	mov	r0, r7
900122a4:	f019 fc0c 	bl	9002bac0 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
900122a8:	3d01      	subs	r5, #1
900122aa:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900122ac:	6923      	ldr	r3, [r4, #16]
900122ae:	2b00      	cmp	r3, #0
900122b0:	f040 80d3 	bne.w	9001245a <xQueueReceive+0x2de>
				taskEXIT_CRITICAL();
900122b4:	f7ff f9a0 	bl	900115f8 <vPortExitCritical>
				return pdPASS;
900122b8:	2001      	movs	r0, #1
900122ba:	e06d      	b.n	90012398 <xQueueReceive+0x21c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
900122bc:	6c03      	ldr	r3, [r0, #64]	; 0x40
900122be:	2b00      	cmp	r3, #0
900122c0:	f43f af68 	beq.w	90012194 <xQueueReceive+0x18>
	__asm volatile
900122c4:	f04f 0350 	mov.w	r3, #80	; 0x50
900122c8:	f383 8811 	msr	BASEPRI, r3
900122cc:	f3bf 8f6f 	isb	sy
900122d0:	f3bf 8f4f 	dsb	sy
900122d4:	e7fe      	b.n	900122d4 <xQueueReceive+0x158>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900122d6:	9b01      	ldr	r3, [sp, #4]
900122d8:	2b00      	cmp	r3, #0
900122da:	f43f af60 	beq.w	9001219e <xQueueReceive+0x22>
900122de:	f04f 0350 	mov.w	r3, #80	; 0x50
900122e2:	f383 8811 	msr	BASEPRI, r3
900122e6:	f3bf 8f6f 	isb	sy
900122ea:	f3bf 8f4f 	dsb	sy
900122ee:	e7fe      	b.n	900122ee <xQueueReceive+0x172>
	taskENTER_CRITICAL();
900122f0:	f7ff f960 	bl	900115b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900122f4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900122f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900122fa:	2d00      	cmp	r5, #0
900122fc:	dc04      	bgt.n	90012308 <xQueueReceive+0x18c>
900122fe:	e011      	b.n	90012324 <xQueueReceive+0x1a8>
			--cTxLock;
90012300:	1e6b      	subs	r3, r5, #1
90012302:	b2da      	uxtb	r2, r3
90012304:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012306:	b16a      	cbz	r2, 90012324 <xQueueReceive+0x1a8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012308:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001230a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001230c:	b153      	cbz	r3, 90012324 <xQueueReceive+0x1a8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001230e:	f001 f8cf 	bl	900134b0 <xTaskRemoveFromEventList>
90012312:	2800      	cmp	r0, #0
90012314:	d0f4      	beq.n	90012300 <xQueueReceive+0x184>
						vTaskMissedYield();
90012316:	f001 f969 	bl	900135ec <vTaskMissedYield>
			--cTxLock;
9001231a:	1e6b      	subs	r3, r5, #1
9001231c:	b2da      	uxtb	r2, r3
9001231e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012320:	2a00      	cmp	r2, #0
90012322:	d1f1      	bne.n	90012308 <xQueueReceive+0x18c>
		pxQueue->cTxLock = queueUNLOCKED;
90012324:	23ff      	movs	r3, #255	; 0xff
90012326:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001232a:	f7ff f965 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001232e:	f7ff f941 	bl	900115b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90012332:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90012336:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012338:	2d00      	cmp	r5, #0
9001233a:	dd14      	ble.n	90012366 <xQueueReceive+0x1ea>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001233c:	f104 0910 	add.w	r9, r4, #16
90012340:	e003      	b.n	9001234a <xQueueReceive+0x1ce>
				--cRxLock;
90012342:	1e6b      	subs	r3, r5, #1
90012344:	b2da      	uxtb	r2, r3
90012346:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012348:	b16a      	cbz	r2, 90012366 <xQueueReceive+0x1ea>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001234a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001234c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001234e:	b153      	cbz	r3, 90012366 <xQueueReceive+0x1ea>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012350:	f001 f8ae 	bl	900134b0 <xTaskRemoveFromEventList>
90012354:	2800      	cmp	r0, #0
90012356:	d0f4      	beq.n	90012342 <xQueueReceive+0x1c6>
					vTaskMissedYield();
90012358:	f001 f948 	bl	900135ec <vTaskMissedYield>
				--cRxLock;
9001235c:	1e6b      	subs	r3, r5, #1
9001235e:	b2da      	uxtb	r2, r3
90012360:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012362:	2a00      	cmp	r2, #0
90012364:	d1f1      	bne.n	9001234a <xQueueReceive+0x1ce>
		pxQueue->cRxLock = queueUNLOCKED;
90012366:	23ff      	movs	r3, #255	; 0xff
90012368:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9001236c:	f7ff f944 	bl	900115f8 <vPortExitCritical>
			( void ) xTaskResumeAll();
90012370:	f000 ff78 	bl	90013264 <xTaskResumeAll>
	taskENTER_CRITICAL();
90012374:	f7ff f91e 	bl	900115b4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90012378:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9001237a:	b153      	cbz	r3, 90012392 <xQueueReceive+0x216>
	taskEXIT_CRITICAL();
9001237c:	f7ff f93c 	bl	900115f8 <vPortExitCritical>
		taskENTER_CRITICAL();
90012380:	f7ff f918 	bl	900115b4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90012384:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90012386:	2d00      	cmp	r5, #0
90012388:	d181      	bne.n	9001228e <xQueueReceive+0x112>
				if( xTicksToWait == ( TickType_t ) 0 )
9001238a:	9b01      	ldr	r3, [sp, #4]
9001238c:	2b00      	cmp	r3, #0
9001238e:	f47f af15 	bne.w	900121bc <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
90012392:	f7ff f931 	bl	900115f8 <vPortExitCritical>
					return errQUEUE_EMPTY;
90012396:	2000      	movs	r0, #0
}
90012398:	b005      	add	sp, #20
9001239a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9001239e:	f7ff f92b 	bl	900115f8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
900123a2:	9901      	ldr	r1, [sp, #4]
900123a4:	4630      	mov	r0, r6
900123a6:	f000 fff5 	bl	90013394 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
900123aa:	f7ff f903 	bl	900115b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900123ae:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900123b2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900123b4:	2d00      	cmp	r5, #0
900123b6:	dc04      	bgt.n	900123c2 <xQueueReceive+0x246>
900123b8:	e011      	b.n	900123de <xQueueReceive+0x262>
			--cTxLock;
900123ba:	1e6b      	subs	r3, r5, #1
900123bc:	b2da      	uxtb	r2, r3
900123be:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900123c0:	b16a      	cbz	r2, 900123de <xQueueReceive+0x262>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900123c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900123c4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900123c6:	b153      	cbz	r3, 900123de <xQueueReceive+0x262>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900123c8:	f001 f872 	bl	900134b0 <xTaskRemoveFromEventList>
900123cc:	2800      	cmp	r0, #0
900123ce:	d0f4      	beq.n	900123ba <xQueueReceive+0x23e>
						vTaskMissedYield();
900123d0:	f001 f90c 	bl	900135ec <vTaskMissedYield>
			--cTxLock;
900123d4:	1e6b      	subs	r3, r5, #1
900123d6:	b2da      	uxtb	r2, r3
900123d8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900123da:	2a00      	cmp	r2, #0
900123dc:	d1f1      	bne.n	900123c2 <xQueueReceive+0x246>
		pxQueue->cTxLock = queueUNLOCKED;
900123de:	23ff      	movs	r3, #255	; 0xff
900123e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900123e4:	f7ff f908 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
900123e8:	f7ff f8e4 	bl	900115b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900123ec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900123f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900123f2:	2d00      	cmp	r5, #0
900123f4:	dd14      	ble.n	90012420 <xQueueReceive+0x2a4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900123f6:	f104 0910 	add.w	r9, r4, #16
900123fa:	e003      	b.n	90012404 <xQueueReceive+0x288>
				--cRxLock;
900123fc:	1e6b      	subs	r3, r5, #1
900123fe:	b2da      	uxtb	r2, r3
90012400:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012402:	b16a      	cbz	r2, 90012420 <xQueueReceive+0x2a4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012404:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012406:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012408:	b153      	cbz	r3, 90012420 <xQueueReceive+0x2a4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001240a:	f001 f851 	bl	900134b0 <xTaskRemoveFromEventList>
9001240e:	2800      	cmp	r0, #0
90012410:	d0f4      	beq.n	900123fc <xQueueReceive+0x280>
					vTaskMissedYield();
90012412:	f001 f8eb 	bl	900135ec <vTaskMissedYield>
				--cRxLock;
90012416:	1e6b      	subs	r3, r5, #1
90012418:	b2da      	uxtb	r2, r3
9001241a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001241c:	2a00      	cmp	r2, #0
9001241e:	d1f1      	bne.n	90012404 <xQueueReceive+0x288>
		pxQueue->cRxLock = queueUNLOCKED;
90012420:	23ff      	movs	r3, #255	; 0xff
90012422:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90012426:	f7ff f8e7 	bl	900115f8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9001242a:	f000 ff1b 	bl	90013264 <xTaskResumeAll>
9001242e:	2800      	cmp	r0, #0
90012430:	d1a6      	bne.n	90012380 <xQueueReceive+0x204>
					portYIELD_WITHIN_API();
90012432:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90012436:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9001243a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9001243e:	f3bf 8f4f 	dsb	sy
90012442:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
90012446:	e79b      	b.n	90012380 <xQueueReceive+0x204>
90012448:	f04f 0350 	mov.w	r3, #80	; 0x50
9001244c:	f383 8811 	msr	BASEPRI, r3
90012450:	f3bf 8f6f 	isb	sy
90012454:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90012458:	e7fe      	b.n	90012458 <xQueueReceive+0x2dc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001245a:	f104 0010 	add.w	r0, r4, #16
9001245e:	f001 f827 	bl	900134b0 <xTaskRemoveFromEventList>
90012462:	2800      	cmp	r0, #0
90012464:	f43f af26 	beq.w	900122b4 <xQueueReceive+0x138>
						queueYIELD_IF_USING_PREEMPTION();
90012468:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001246c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90012470:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90012474:	f3bf 8f4f 	dsb	sy
90012478:	f3bf 8f6f 	isb	sy
9001247c:	e71a      	b.n	900122b4 <xQueueReceive+0x138>
9001247e:	bf00      	nop

90012480 <xQueueSemaphoreTake>:
{
90012480:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012484:	b084      	sub	sp, #16
90012486:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
90012488:	2800      	cmp	r0, #0
9001248a:	d05c      	beq.n	90012546 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
9001248c:	6c07      	ldr	r7, [r0, #64]	; 0x40
9001248e:	4604      	mov	r4, r0
90012490:	b147      	cbz	r7, 900124a4 <xQueueSemaphoreTake+0x24>
90012492:	f04f 0350 	mov.w	r3, #80	; 0x50
90012496:	f383 8811 	msr	BASEPRI, r3
9001249a:	f3bf 8f6f 	isb	sy
9001249e:	f3bf 8f4f 	dsb	sy
900124a2:	e7fe      	b.n	900124a2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900124a4:	f001 f8ae 	bl	90013604 <xTaskGetSchedulerState>
900124a8:	4605      	mov	r5, r0
900124aa:	2800      	cmp	r0, #0
900124ac:	d054      	beq.n	90012558 <xQueueSemaphoreTake+0xd8>
900124ae:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900124b0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
900124b4:	f7ff f87e 	bl	900115b4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
900124b8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
900124ba:	2b00      	cmp	r3, #0
900124bc:	f040 8149 	bne.w	90012752 <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
900124c0:	9b01      	ldr	r3, [sp, #4]
900124c2:	2b00      	cmp	r3, #0
900124c4:	f000 813a 	beq.w	9001273c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
900124c8:	2d00      	cmp	r5, #0
900124ca:	f000 809d 	beq.w	90012608 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
900124ce:	f7ff f893 	bl	900115f8 <vPortExitCritical>
		vTaskSuspendAll();
900124d2:	f000 febf 	bl	90013254 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
900124d6:	f7ff f86d 	bl	900115b4 <vPortEnterCritical>
900124da:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900124de:	2bff      	cmp	r3, #255	; 0xff
900124e0:	d102      	bne.n	900124e8 <xQueueSemaphoreTake+0x68>
900124e2:	2300      	movs	r3, #0
900124e4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
900124e8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900124ec:	2bff      	cmp	r3, #255	; 0xff
900124ee:	d102      	bne.n	900124f6 <xQueueSemaphoreTake+0x76>
900124f0:	2300      	movs	r3, #0
900124f2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
900124f6:	f7ff f87f 	bl	900115f8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
900124fa:	a901      	add	r1, sp, #4
900124fc:	a802      	add	r0, sp, #8
900124fe:	f001 f82d 	bl	9001355c <xTaskCheckForTimeOut>
90012502:	2800      	cmp	r0, #0
90012504:	d135      	bne.n	90012572 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
90012506:	f7ff f855 	bl	900115b4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9001250a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9001250c:	2b00      	cmp	r3, #0
9001250e:	f000 80a4 	beq.w	9001265a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
90012512:	f7ff f871 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
90012516:	f7ff f84d 	bl	900115b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001251a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9001251e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012520:	2d00      	cmp	r5, #0
90012522:	dc05      	bgt.n	90012530 <xQueueSemaphoreTake+0xb0>
90012524:	e074      	b.n	90012610 <xQueueSemaphoreTake+0x190>
			--cTxLock;
90012526:	1e6b      	subs	r3, r5, #1
90012528:	b2da      	uxtb	r2, r3
9001252a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001252c:	2a00      	cmp	r2, #0
9001252e:	d06f      	beq.n	90012610 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012530:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012532:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012534:	2b00      	cmp	r3, #0
90012536:	d06b      	beq.n	90012610 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012538:	f000 ffba 	bl	900134b0 <xTaskRemoveFromEventList>
9001253c:	2800      	cmp	r0, #0
9001253e:	d0f2      	beq.n	90012526 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
90012540:	f001 f854 	bl	900135ec <vTaskMissedYield>
90012544:	e7ef      	b.n	90012526 <xQueueSemaphoreTake+0xa6>
90012546:	f04f 0350 	mov.w	r3, #80	; 0x50
9001254a:	f383 8811 	msr	BASEPRI, r3
9001254e:	f3bf 8f6f 	isb	sy
90012552:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90012556:	e7fe      	b.n	90012556 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90012558:	9b01      	ldr	r3, [sp, #4]
9001255a:	2b00      	cmp	r3, #0
9001255c:	f000 80d4 	beq.w	90012708 <xQueueSemaphoreTake+0x288>
90012560:	f04f 0350 	mov.w	r3, #80	; 0x50
90012564:	f383 8811 	msr	BASEPRI, r3
90012568:	f3bf 8f6f 	isb	sy
9001256c:	f3bf 8f4f 	dsb	sy
90012570:	e7fe      	b.n	90012570 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
90012572:	f7ff f81f 	bl	900115b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90012576:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9001257a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001257c:	2d00      	cmp	r5, #0
9001257e:	dc04      	bgt.n	9001258a <xQueueSemaphoreTake+0x10a>
90012580:	e011      	b.n	900125a6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
90012582:	1e6b      	subs	r3, r5, #1
90012584:	b2da      	uxtb	r2, r3
90012586:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012588:	b16a      	cbz	r2, 900125a6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001258a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001258c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001258e:	b153      	cbz	r3, 900125a6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012590:	f000 ff8e 	bl	900134b0 <xTaskRemoveFromEventList>
90012594:	2800      	cmp	r0, #0
90012596:	d0f4      	beq.n	90012582 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
90012598:	f001 f828 	bl	900135ec <vTaskMissedYield>
			--cTxLock;
9001259c:	1e6b      	subs	r3, r5, #1
9001259e:	b2da      	uxtb	r2, r3
900125a0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900125a2:	2a00      	cmp	r2, #0
900125a4:	d1f1      	bne.n	9001258a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
900125a6:	23ff      	movs	r3, #255	; 0xff
900125a8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900125ac:	f7ff f824 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
900125b0:	f7ff f800 	bl	900115b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900125b4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900125b8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900125ba:	2d00      	cmp	r5, #0
900125bc:	dd14      	ble.n	900125e8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900125be:	f104 0810 	add.w	r8, r4, #16
900125c2:	e003      	b.n	900125cc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
900125c4:	1e6b      	subs	r3, r5, #1
900125c6:	b2da      	uxtb	r2, r3
900125c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900125ca:	b16a      	cbz	r2, 900125e8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900125cc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900125ce:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900125d0:	b153      	cbz	r3, 900125e8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900125d2:	f000 ff6d 	bl	900134b0 <xTaskRemoveFromEventList>
900125d6:	2800      	cmp	r0, #0
900125d8:	d0f4      	beq.n	900125c4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
900125da:	f001 f807 	bl	900135ec <vTaskMissedYield>
				--cRxLock;
900125de:	1e6b      	subs	r3, r5, #1
900125e0:	b2da      	uxtb	r2, r3
900125e2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900125e4:	2a00      	cmp	r2, #0
900125e6:	d1f1      	bne.n	900125cc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
900125e8:	23ff      	movs	r3, #255	; 0xff
900125ea:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900125ee:	f7ff f803 	bl	900115f8 <vPortExitCritical>
			( void ) xTaskResumeAll();
900125f2:	f000 fe37 	bl	90013264 <xTaskResumeAll>
	taskENTER_CRITICAL();
900125f6:	f7fe ffdd 	bl	900115b4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
900125fa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
900125fc:	2b00      	cmp	r3, #0
900125fe:	d07c      	beq.n	900126fa <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
90012600:	f7fe fffa 	bl	900115f8 <vPortExitCritical>
	return xReturn;
90012604:	2501      	movs	r5, #1
90012606:	e755      	b.n	900124b4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
90012608:	a802      	add	r0, sp, #8
9001260a:	f000 ff9b 	bl	90013544 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9001260e:	e75e      	b.n	900124ce <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
90012610:	23ff      	movs	r3, #255	; 0xff
90012612:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90012616:	f7fe ffef 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001261a:	f7fe ffcb 	bl	900115b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001261e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90012622:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012624:	2d00      	cmp	r5, #0
90012626:	dd10      	ble.n	9001264a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012628:	f104 0810 	add.w	r8, r4, #16
9001262c:	e003      	b.n	90012636 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
9001262e:	1e6b      	subs	r3, r5, #1
90012630:	b2da      	uxtb	r2, r3
90012632:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012634:	b14a      	cbz	r2, 9001264a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012636:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012638:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001263a:	b133      	cbz	r3, 9001264a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001263c:	f000 ff38 	bl	900134b0 <xTaskRemoveFromEventList>
90012640:	2800      	cmp	r0, #0
90012642:	d0f4      	beq.n	9001262e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
90012644:	f000 ffd2 	bl	900135ec <vTaskMissedYield>
90012648:	e7f1      	b.n	9001262e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
9001264a:	23ff      	movs	r3, #255	; 0xff
9001264c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90012650:	f7fe ffd2 	bl	900115f8 <vPortExitCritical>
				( void ) xTaskResumeAll();
90012654:	f000 fe06 	bl	90013264 <xTaskResumeAll>
90012658:	e7d4      	b.n	90012604 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9001265a:	f7fe ffcd 	bl	900115f8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9001265e:	6823      	ldr	r3, [r4, #0]
90012660:	2b00      	cmp	r3, #0
90012662:	d062      	beq.n	9001272a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90012664:	9901      	ldr	r1, [sp, #4]
90012666:	4630      	mov	r0, r6
90012668:	f000 fe94 	bl	90013394 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9001266c:	f7fe ffa2 	bl	900115b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90012670:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90012674:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012676:	2d00      	cmp	r5, #0
90012678:	dc04      	bgt.n	90012684 <xQueueSemaphoreTake+0x204>
9001267a:	e00d      	b.n	90012698 <xQueueSemaphoreTake+0x218>
			--cTxLock;
9001267c:	1e6b      	subs	r3, r5, #1
9001267e:	b2da      	uxtb	r2, r3
90012680:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012682:	b14a      	cbz	r2, 90012698 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012684:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012686:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012688:	b133      	cbz	r3, 90012698 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001268a:	f000 ff11 	bl	900134b0 <xTaskRemoveFromEventList>
9001268e:	2800      	cmp	r0, #0
90012690:	d0f4      	beq.n	9001267c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
90012692:	f000 ffab 	bl	900135ec <vTaskMissedYield>
90012696:	e7f1      	b.n	9001267c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
90012698:	23ff      	movs	r3, #255	; 0xff
9001269a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001269e:	f7fe ffab 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
900126a2:	f7fe ff87 	bl	900115b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900126a6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900126aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900126ac:	2d00      	cmp	r5, #0
900126ae:	dd10      	ble.n	900126d2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900126b0:	f104 0810 	add.w	r8, r4, #16
900126b4:	e003      	b.n	900126be <xQueueSemaphoreTake+0x23e>
				--cRxLock;
900126b6:	1e6b      	subs	r3, r5, #1
900126b8:	b2da      	uxtb	r2, r3
900126ba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900126bc:	b14a      	cbz	r2, 900126d2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900126be:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900126c0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900126c2:	b133      	cbz	r3, 900126d2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900126c4:	f000 fef4 	bl	900134b0 <xTaskRemoveFromEventList>
900126c8:	2800      	cmp	r0, #0
900126ca:	d0f4      	beq.n	900126b6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
900126cc:	f000 ff8e 	bl	900135ec <vTaskMissedYield>
900126d0:	e7f1      	b.n	900126b6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
900126d2:	23ff      	movs	r3, #255	; 0xff
900126d4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900126d8:	f7fe ff8e 	bl	900115f8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
900126dc:	f000 fdc2 	bl	90013264 <xTaskResumeAll>
900126e0:	2800      	cmp	r0, #0
900126e2:	d18f      	bne.n	90012604 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
900126e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900126e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900126ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900126f0:	f3bf 8f4f 	dsb	sy
900126f4:	f3bf 8f6f 	isb	sy
900126f8:	e784      	b.n	90012604 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
900126fa:	f7fe ff7d 	bl	900115f8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
900126fe:	b92f      	cbnz	r7, 9001270c <xQueueSemaphoreTake+0x28c>
}
90012700:	4638      	mov	r0, r7
90012702:	b004      	add	sp, #16
90012704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012708:	4607      	mov	r7, r0
9001270a:	e6d1      	b.n	900124b0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9001270c:	f7fe ff52 	bl	900115b4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
90012710:	6a61      	ldr	r1, [r4, #36]	; 0x24
90012712:	b119      	cbz	r1, 9001271c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
90012714:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012716:	6819      	ldr	r1, [r3, #0]
90012718:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9001271c:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9001271e:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90012720:	f001 f80c 	bl	9001373c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
90012724:	f7fe ff68 	bl	900115f8 <vPortExitCritical>
90012728:	e7ea      	b.n	90012700 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
9001272a:	f7fe ff43 	bl	900115b4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9001272e:	68a0      	ldr	r0, [r4, #8]
90012730:	f000 ff78 	bl	90013624 <xTaskPriorityInherit>
90012734:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
90012736:	f7fe ff5f 	bl	900115f8 <vPortExitCritical>
9001273a:	e793      	b.n	90012664 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
9001273c:	2f00      	cmp	r7, #0
9001273e:	d0f1      	beq.n	90012724 <xQueueSemaphoreTake+0x2a4>
90012740:	f04f 0350 	mov.w	r3, #80	; 0x50
90012744:	f383 8811 	msr	BASEPRI, r3
90012748:	f3bf 8f6f 	isb	sy
9001274c:	f3bf 8f4f 	dsb	sy
90012750:	e7fe      	b.n	90012750 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90012752:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90012754:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90012756:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90012758:	b12a      	cbz	r2, 90012766 <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001275a:	6923      	ldr	r3, [r4, #16]
9001275c:	b93b      	cbnz	r3, 9001276e <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
9001275e:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
90012760:	f7fe ff4a 	bl	900115f8 <vPortExitCritical>
				return pdPASS;
90012764:	e7cc      	b.n	90012700 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
90012766:	f001 f83d 	bl	900137e4 <pvTaskIncrementMutexHeldCount>
9001276a:	60a0      	str	r0, [r4, #8]
9001276c:	e7f5      	b.n	9001275a <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001276e:	f104 0010 	add.w	r0, r4, #16
90012772:	f000 fe9d 	bl	900134b0 <xTaskRemoveFromEventList>
90012776:	2800      	cmp	r0, #0
90012778:	d0f1      	beq.n	9001275e <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
9001277a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001277e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90012782:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90012786:	f3bf 8f4f 	dsb	sy
9001278a:	f3bf 8f6f 	isb	sy
9001278e:	e7e6      	b.n	9001275e <xQueueSemaphoreTake+0x2de>

90012790 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
90012790:	b1a8      	cbz	r0, 900127be <xQueueTakeMutexRecursive+0x2e>
	{
90012792:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
90012794:	6886      	ldr	r6, [r0, #8]
90012796:	4604      	mov	r4, r0
90012798:	460d      	mov	r5, r1
9001279a:	f000 ff2d 	bl	900135f8 <xTaskGetCurrentTaskHandle>
9001279e:	4286      	cmp	r6, r0
900127a0:	d008      	beq.n	900127b4 <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
900127a2:	4629      	mov	r1, r5
900127a4:	4620      	mov	r0, r4
900127a6:	f7ff fe6b 	bl	90012480 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
900127aa:	b110      	cbz	r0, 900127b2 <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
900127ac:	68e3      	ldr	r3, [r4, #12]
900127ae:	3301      	adds	r3, #1
900127b0:	60e3      	str	r3, [r4, #12]
	}
900127b2:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
900127b4:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
900127b6:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
900127b8:	4403      	add	r3, r0
900127ba:	60e3      	str	r3, [r4, #12]
	}
900127bc:	bd70      	pop	{r4, r5, r6, pc}
900127be:	f04f 0350 	mov.w	r3, #80	; 0x50
900127c2:	f383 8811 	msr	BASEPRI, r3
900127c6:	f3bf 8f6f 	isb	sy
900127ca:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
900127ce:	e7fe      	b.n	900127ce <xQueueTakeMutexRecursive+0x3e>

900127d0 <xQueueReceiveFromISR>:
{
900127d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
900127d4:	b310      	cbz	r0, 9001281c <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900127d6:	460e      	mov	r6, r1
900127d8:	4604      	mov	r4, r0
900127da:	4617      	mov	r7, r2
900127dc:	b191      	cbz	r1, 90012804 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900127de:	f7ff f81b 	bl	90011818 <vPortValidateInterruptPriority>
	__asm volatile
900127e2:	f3ef 8911 	mrs	r9, BASEPRI
900127e6:	f04f 0350 	mov.w	r3, #80	; 0x50
900127ea:	f383 8811 	msr	BASEPRI, r3
900127ee:	f3bf 8f6f 	isb	sy
900127f2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900127f6:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
900127f8:	b9cd      	cbnz	r5, 9001282e <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
900127fa:	4628      	mov	r0, r5
	__asm volatile
900127fc:	f389 8811 	msr	BASEPRI, r9
}
90012800:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90012804:	6c03      	ldr	r3, [r0, #64]	; 0x40
90012806:	2b00      	cmp	r3, #0
90012808:	d0e9      	beq.n	900127de <xQueueReceiveFromISR+0xe>
	__asm volatile
9001280a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001280e:	f383 8811 	msr	BASEPRI, r3
90012812:	f3bf 8f6f 	isb	sy
90012816:	f3bf 8f4f 	dsb	sy
9001281a:	e7fe      	b.n	9001281a <xQueueReceiveFromISR+0x4a>
9001281c:	f04f 0350 	mov.w	r3, #80	; 0x50
90012820:	f383 8811 	msr	BASEPRI, r3
90012824:	f3bf 8f6f 	isb	sy
90012828:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9001282c:	e7fe      	b.n	9001282c <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9001282e:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90012832:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
90012834:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90012838:	b142      	cbz	r2, 9001284c <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001283a:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9001283c:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001283e:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012840:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90012842:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012844:	d215      	bcs.n	90012872 <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90012846:	4630      	mov	r0, r6
90012848:	f019 f93a 	bl	9002bac0 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9001284c:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9001284e:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90012852:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
90012854:	d009      	beq.n	9001286a <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
90012856:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
9001285a:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9001285c:	b25b      	sxtb	r3, r3
9001285e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
90012862:	f389 8811 	msr	BASEPRI, r9
}
90012866:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001286a:	6923      	ldr	r3, [r4, #16]
9001286c:	b923      	cbnz	r3, 90012878 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
9001286e:	2001      	movs	r0, #1
90012870:	e7c4      	b.n	900127fc <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90012872:	6821      	ldr	r1, [r4, #0]
90012874:	60e1      	str	r1, [r4, #12]
90012876:	e7e6      	b.n	90012846 <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012878:	f104 0010 	add.w	r0, r4, #16
9001287c:	f000 fe18 	bl	900134b0 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
90012880:	2f00      	cmp	r7, #0
90012882:	d0f4      	beq.n	9001286e <xQueueReceiveFromISR+0x9e>
90012884:	2800      	cmp	r0, #0
90012886:	d0f2      	beq.n	9001286e <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
90012888:	2301      	movs	r3, #1
			xReturn = pdPASS;
9001288a:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
9001288c:	603b      	str	r3, [r7, #0]
9001288e:	e7b5      	b.n	900127fc <xQueueReceiveFromISR+0x2c>

90012890 <vQueueDelete>:
	configASSERT( pxQueue );
90012890:	b1e0      	cbz	r0, 900128cc <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
90012892:	4b21      	ldr	r3, [pc, #132]	; (90012918 <vQueueDelete+0x88>)
90012894:	685a      	ldr	r2, [r3, #4]
90012896:	4290      	cmp	r0, r2
90012898:	d02b      	beq.n	900128f2 <vQueueDelete+0x62>
9001289a:	68da      	ldr	r2, [r3, #12]
9001289c:	4290      	cmp	r0, r2
9001289e:	d02a      	beq.n	900128f6 <vQueueDelete+0x66>
900128a0:	695a      	ldr	r2, [r3, #20]
900128a2:	4290      	cmp	r0, r2
900128a4:	d029      	beq.n	900128fa <vQueueDelete+0x6a>
900128a6:	69da      	ldr	r2, [r3, #28]
900128a8:	4290      	cmp	r0, r2
900128aa:	d028      	beq.n	900128fe <vQueueDelete+0x6e>
900128ac:	6a5a      	ldr	r2, [r3, #36]	; 0x24
900128ae:	4290      	cmp	r0, r2
900128b0:	d027      	beq.n	90012902 <vQueueDelete+0x72>
900128b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900128b4:	4290      	cmp	r0, r2
900128b6:	d014      	beq.n	900128e2 <vQueueDelete+0x52>
900128b8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900128ba:	4290      	cmp	r0, r2
900128bc:	d023      	beq.n	90012906 <vQueueDelete+0x76>
900128be:	6bda      	ldr	r2, [r3, #60]	; 0x3c
900128c0:	4290      	cmp	r0, r2
900128c2:	d022      	beq.n	9001290a <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
900128c4:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
900128c8:	b14b      	cbz	r3, 900128de <vQueueDelete+0x4e>
}
900128ca:	4770      	bx	lr
	__asm volatile
900128cc:	f04f 0350 	mov.w	r3, #80	; 0x50
900128d0:	f383 8811 	msr	BASEPRI, r3
900128d4:	f3bf 8f6f 	isb	sy
900128d8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
900128dc:	e7fe      	b.n	900128dc <vQueueDelete+0x4c>
			vPortFree( pxQueue );
900128de:	f7fe bd4f 	b.w	90011380 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900128e2:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
900128e4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
900128e8:	ed9f 7b09 	vldr	d7, [pc, #36]	; 90012910 <vQueueDelete+0x80>
900128ec:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
900128f0:	e7e8      	b.n	900128c4 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900128f2:	2200      	movs	r2, #0
900128f4:	e7f6      	b.n	900128e4 <vQueueDelete+0x54>
900128f6:	2201      	movs	r2, #1
900128f8:	e7f4      	b.n	900128e4 <vQueueDelete+0x54>
900128fa:	2202      	movs	r2, #2
900128fc:	e7f2      	b.n	900128e4 <vQueueDelete+0x54>
900128fe:	2203      	movs	r2, #3
90012900:	e7f0      	b.n	900128e4 <vQueueDelete+0x54>
90012902:	2204      	movs	r2, #4
90012904:	e7ee      	b.n	900128e4 <vQueueDelete+0x54>
90012906:	2206      	movs	r2, #6
90012908:	e7ec      	b.n	900128e4 <vQueueDelete+0x54>
9001290a:	2207      	movs	r2, #7
9001290c:	e7ea      	b.n	900128e4 <vQueueDelete+0x54>
9001290e:	bf00      	nop
	...
90012918:	24027778 	.word	0x24027778

9001291c <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9001291c:	4b12      	ldr	r3, [pc, #72]	; (90012968 <vQueueAddToRegistry+0x4c>)
9001291e:	681a      	ldr	r2, [r3, #0]
90012920:	b17a      	cbz	r2, 90012942 <vQueueAddToRegistry+0x26>
90012922:	689a      	ldr	r2, [r3, #8]
90012924:	b162      	cbz	r2, 90012940 <vQueueAddToRegistry+0x24>
90012926:	691a      	ldr	r2, [r3, #16]
90012928:	b192      	cbz	r2, 90012950 <vQueueAddToRegistry+0x34>
9001292a:	699a      	ldr	r2, [r3, #24]
9001292c:	b192      	cbz	r2, 90012954 <vQueueAddToRegistry+0x38>
9001292e:	6a1a      	ldr	r2, [r3, #32]
90012930:	b192      	cbz	r2, 90012958 <vQueueAddToRegistry+0x3c>
90012932:	6a9a      	ldr	r2, [r3, #40]	; 0x28
90012934:	b192      	cbz	r2, 9001295c <vQueueAddToRegistry+0x40>
90012936:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90012938:	b192      	cbz	r2, 90012960 <vQueueAddToRegistry+0x44>
9001293a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9001293c:	b192      	cbz	r2, 90012964 <vQueueAddToRegistry+0x48>
	}
9001293e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90012940:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
90012942:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
90012946:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9001294a:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9001294e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90012950:	2202      	movs	r2, #2
90012952:	e7f6      	b.n	90012942 <vQueueAddToRegistry+0x26>
90012954:	2203      	movs	r2, #3
90012956:	e7f4      	b.n	90012942 <vQueueAddToRegistry+0x26>
90012958:	2204      	movs	r2, #4
9001295a:	e7f2      	b.n	90012942 <vQueueAddToRegistry+0x26>
9001295c:	2205      	movs	r2, #5
9001295e:	e7f0      	b.n	90012942 <vQueueAddToRegistry+0x26>
90012960:	2206      	movs	r2, #6
90012962:	e7ee      	b.n	90012942 <vQueueAddToRegistry+0x26>
90012964:	2207      	movs	r2, #7
90012966:	e7ec      	b.n	90012942 <vQueueAddToRegistry+0x26>
90012968:	24027778 	.word	0x24027778

9001296c <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9001296c:	b570      	push	{r4, r5, r6, lr}
9001296e:	4605      	mov	r5, r0
90012970:	460e      	mov	r6, r1
90012972:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
90012974:	f7fe fe1e 	bl	900115b4 <vPortEnterCritical>
90012978:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9001297c:	2bff      	cmp	r3, #255	; 0xff
9001297e:	d102      	bne.n	90012986 <vQueueWaitForMessageRestricted+0x1a>
90012980:	2300      	movs	r3, #0
90012982:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
90012986:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9001298a:	2bff      	cmp	r3, #255	; 0xff
9001298c:	d102      	bne.n	90012994 <vQueueWaitForMessageRestricted+0x28>
9001298e:	2300      	movs	r3, #0
90012990:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
90012994:	f7fe fe30 	bl	900115f8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
90012998:	6bab      	ldr	r3, [r5, #56]	; 0x38
9001299a:	2b00      	cmp	r3, #0
9001299c:	d043      	beq.n	90012a26 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9001299e:	f7fe fe09 	bl	900115b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900129a2:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
900129a6:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900129a8:	2c00      	cmp	r4, #0
900129aa:	dd14      	ble.n	900129d6 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900129ac:	f105 0624 	add.w	r6, r5, #36	; 0x24
900129b0:	e003      	b.n	900129ba <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
900129b2:	1e63      	subs	r3, r4, #1
900129b4:	b2da      	uxtb	r2, r3
900129b6:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900129b8:	b16a      	cbz	r2, 900129d6 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900129ba:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900129bc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900129be:	b153      	cbz	r3, 900129d6 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900129c0:	f000 fd76 	bl	900134b0 <xTaskRemoveFromEventList>
900129c4:	2800      	cmp	r0, #0
900129c6:	d0f4      	beq.n	900129b2 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
900129c8:	f000 fe10 	bl	900135ec <vTaskMissedYield>
			--cTxLock;
900129cc:	1e63      	subs	r3, r4, #1
900129ce:	b2da      	uxtb	r2, r3
900129d0:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900129d2:	2a00      	cmp	r2, #0
900129d4:	d1f1      	bne.n	900129ba <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
900129d6:	23ff      	movs	r3, #255	; 0xff
900129d8:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
900129dc:	f7fe fe0c 	bl	900115f8 <vPortExitCritical>
	taskENTER_CRITICAL();
900129e0:	f7fe fde8 	bl	900115b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900129e4:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
900129e8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900129ea:	2c00      	cmp	r4, #0
900129ec:	dd14      	ble.n	90012a18 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900129ee:	f105 0610 	add.w	r6, r5, #16
900129f2:	e003      	b.n	900129fc <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
900129f4:	1e63      	subs	r3, r4, #1
900129f6:	b2da      	uxtb	r2, r3
900129f8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900129fa:	b16a      	cbz	r2, 90012a18 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900129fc:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900129fe:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012a00:	b153      	cbz	r3, 90012a18 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012a02:	f000 fd55 	bl	900134b0 <xTaskRemoveFromEventList>
90012a06:	2800      	cmp	r0, #0
90012a08:	d0f4      	beq.n	900129f4 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
90012a0a:	f000 fdef 	bl	900135ec <vTaskMissedYield>
				--cRxLock;
90012a0e:	1e63      	subs	r3, r4, #1
90012a10:	b2da      	uxtb	r2, r3
90012a12:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012a14:	2a00      	cmp	r2, #0
90012a16:	d1f1      	bne.n	900129fc <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
90012a18:	23ff      	movs	r3, #255	; 0xff
90012a1a:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
90012a1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
90012a22:	f7fe bde9 	b.w	900115f8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
90012a26:	4622      	mov	r2, r4
90012a28:	4631      	mov	r1, r6
90012a2a:	f105 0024 	add.w	r0, r5, #36	; 0x24
90012a2e:	f000 fcf5 	bl	9001341c <vTaskPlaceOnEventListRestricted>
90012a32:	e7b4      	b.n	9001299e <vQueueWaitForMessageRestricted+0x32>

90012a34 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
90012a34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90012a38:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
90012a3a:	f7fe fdbb 	bl	900115b4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
90012a3e:	4a34      	ldr	r2, [pc, #208]	; (90012b10 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
90012a40:	4e34      	ldr	r6, [pc, #208]	; (90012b14 <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
90012a42:	6813      	ldr	r3, [r2, #0]
90012a44:	3301      	adds	r3, #1
90012a46:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
90012a48:	6833      	ldr	r3, [r6, #0]
90012a4a:	2b00      	cmp	r3, #0
90012a4c:	d032      	beq.n	90012ab4 <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
90012a4e:	4c32      	ldr	r4, [pc, #200]	; (90012b18 <prvAddNewTaskToReadyList+0xe4>)
90012a50:	6823      	ldr	r3, [r4, #0]
90012a52:	b33b      	cbz	r3, 90012aa4 <prvAddNewTaskToReadyList+0x70>
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
90012a54:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90012a56:	4f31      	ldr	r7, [pc, #196]	; (90012b1c <prvAddNewTaskToReadyList+0xe8>)
		uxTaskNumber++;
90012a58:	4a31      	ldr	r2, [pc, #196]	; (90012b20 <prvAddNewTaskToReadyList+0xec>)
		prvAddTaskToReadyList( pxNewTCB );
90012a5a:	4932      	ldr	r1, [pc, #200]	; (90012b24 <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
90012a5c:	6813      	ldr	r3, [r2, #0]
90012a5e:	3301      	adds	r3, #1
90012a60:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
90012a62:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
90012a64:	680b      	ldr	r3, [r1, #0]
90012a66:	4283      	cmp	r3, r0
90012a68:	d200      	bcs.n	90012a6c <prvAddNewTaskToReadyList+0x38>
90012a6a:	6008      	str	r0, [r1, #0]
90012a6c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90012a70:	1d29      	adds	r1, r5, #4
90012a72:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90012a76:	f7fe fcf5 	bl	90011464 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
90012a7a:	f7fe fdbd 	bl	900115f8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
90012a7e:	6823      	ldr	r3, [r4, #0]
90012a80:	b173      	cbz	r3, 90012aa0 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
90012a82:	6832      	ldr	r2, [r6, #0]
90012a84:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90012a86:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90012a88:	429a      	cmp	r2, r3
90012a8a:	d209      	bcs.n	90012aa0 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
90012a8c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90012a90:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90012a94:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90012a98:	f3bf 8f4f 	dsb	sy
90012a9c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
90012aa0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90012aa4:	6833      	ldr	r3, [r6, #0]
90012aa6:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90012aa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012aaa:	4f1c      	ldr	r7, [pc, #112]	; (90012b1c <prvAddNewTaskToReadyList+0xe8>)
90012aac:	4283      	cmp	r3, r0
90012aae:	d8d3      	bhi.n	90012a58 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
90012ab0:	6035      	str	r5, [r6, #0]
90012ab2:	e7d1      	b.n	90012a58 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
90012ab4:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
90012ab6:	6813      	ldr	r3, [r2, #0]
90012ab8:	2b01      	cmp	r3, #1
90012aba:	d003      	beq.n	90012ac4 <prvAddNewTaskToReadyList+0x90>
		prvAddTaskToReadyList( pxNewTCB );
90012abc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90012abe:	4f17      	ldr	r7, [pc, #92]	; (90012b1c <prvAddNewTaskToReadyList+0xe8>)
90012ac0:	4c15      	ldr	r4, [pc, #84]	; (90012b18 <prvAddNewTaskToReadyList+0xe4>)
90012ac2:	e7c9      	b.n	90012a58 <prvAddNewTaskToReadyList+0x24>
90012ac4:	4f15      	ldr	r7, [pc, #84]	; (90012b1c <prvAddNewTaskToReadyList+0xe8>)
90012ac6:	463c      	mov	r4, r7
90012ac8:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90012acc:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90012ace:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90012ad0:	f7fe fcb8 	bl	90011444 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90012ad4:	45a0      	cmp	r8, r4
90012ad6:	d1f9      	bne.n	90012acc <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
90012ad8:	f8df 9060 	ldr.w	r9, [pc, #96]	; 90012b3c <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
90012adc:	f8df 8060 	ldr.w	r8, [pc, #96]	; 90012b40 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
90012ae0:	4648      	mov	r0, r9
90012ae2:	4c0d      	ldr	r4, [pc, #52]	; (90012b18 <prvAddNewTaskToReadyList+0xe4>)
90012ae4:	f7fe fcae 	bl	90011444 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
90012ae8:	4640      	mov	r0, r8
90012aea:	f7fe fcab 	bl	90011444 <vListInitialise>
	vListInitialise( &xPendingReadyList );
90012aee:	480e      	ldr	r0, [pc, #56]	; (90012b28 <prvAddNewTaskToReadyList+0xf4>)
90012af0:	f7fe fca8 	bl	90011444 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
90012af4:	480d      	ldr	r0, [pc, #52]	; (90012b2c <prvAddNewTaskToReadyList+0xf8>)
90012af6:	f7fe fca5 	bl	90011444 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
90012afa:	480d      	ldr	r0, [pc, #52]	; (90012b30 <prvAddNewTaskToReadyList+0xfc>)
90012afc:	f7fe fca2 	bl	90011444 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
90012b00:	4b0c      	ldr	r3, [pc, #48]	; (90012b34 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
90012b02:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
90012b04:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
90012b08:	4b0b      	ldr	r3, [pc, #44]	; (90012b38 <prvAddNewTaskToReadyList+0x104>)
90012b0a:	f8c3 8000 	str.w	r8, [r3]
}
90012b0e:	e7a3      	b.n	90012a58 <prvAddNewTaskToReadyList+0x24>
90012b10:	24027c24 	.word	0x24027c24
90012b14:	240277b8 	.word	0x240277b8
90012b18:	24027c80 	.word	0x24027c80
90012b1c:	240277c4 	.word	0x240277c4
90012b20:	24027c30 	.word	0x24027c30
90012b24:	24027c34 	.word	0x24027c34
90012b28:	24027c6c 	.word	0x24027c6c
90012b2c:	24027c98 	.word	0x24027c98
90012b30:	24027c84 	.word	0x24027c84
90012b34:	240277bc 	.word	0x240277bc
90012b38:	240277c0 	.word	0x240277c0
90012b3c:	24027c38 	.word	0x24027c38
90012b40:	24027c4c 	.word	0x24027c4c

90012b44 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
90012b44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012b48:	9c0a      	ldr	r4, [sp, #40]	; 0x28
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012b4a:	ea4f 0982 	mov.w	r9, r2, lsl #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
90012b4e:	4606      	mov	r6, r0
90012b50:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012b52:	464a      	mov	r2, r9
90012b54:	21a5      	movs	r1, #165	; 0xa5
90012b56:	6b20      	ldr	r0, [r4, #48]	; 0x30
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
90012b58:	461f      	mov	r7, r3
90012b5a:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90012b5e:	f1a9 0904 	sub.w	r9, r9, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012b62:	f018 ffbb 	bl	9002badc <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90012b66:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012b68:	4499      	add	r9, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90012b6a:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
90012b6e:	2d00      	cmp	r5, #0
90012b70:	f000 808c 	beq.w	90012c8c <prvInitialiseNewTask.constprop.0+0x148>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012b74:	782b      	ldrb	r3, [r5, #0]
90012b76:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90012b7a:	782b      	ldrb	r3, [r5, #0]
90012b7c:	2b00      	cmp	r3, #0
90012b7e:	d04d      	beq.n	90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012b80:	786b      	ldrb	r3, [r5, #1]
90012b82:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90012b86:	786b      	ldrb	r3, [r5, #1]
90012b88:	2b00      	cmp	r3, #0
90012b8a:	d047      	beq.n	90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012b8c:	78ab      	ldrb	r3, [r5, #2]
90012b8e:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90012b92:	78ab      	ldrb	r3, [r5, #2]
90012b94:	2b00      	cmp	r3, #0
90012b96:	d041      	beq.n	90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012b98:	78eb      	ldrb	r3, [r5, #3]
90012b9a:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90012b9e:	78eb      	ldrb	r3, [r5, #3]
90012ba0:	2b00      	cmp	r3, #0
90012ba2:	d03b      	beq.n	90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012ba4:	792b      	ldrb	r3, [r5, #4]
90012ba6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90012baa:	792b      	ldrb	r3, [r5, #4]
90012bac:	2b00      	cmp	r3, #0
90012bae:	d035      	beq.n	90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012bb0:	796b      	ldrb	r3, [r5, #5]
90012bb2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90012bb6:	796b      	ldrb	r3, [r5, #5]
90012bb8:	2b00      	cmp	r3, #0
90012bba:	d02f      	beq.n	90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012bbc:	79ab      	ldrb	r3, [r5, #6]
90012bbe:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90012bc2:	79ab      	ldrb	r3, [r5, #6]
90012bc4:	b353      	cbz	r3, 90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012bc6:	79eb      	ldrb	r3, [r5, #7]
90012bc8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90012bcc:	79eb      	ldrb	r3, [r5, #7]
90012bce:	b32b      	cbz	r3, 90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012bd0:	7a2b      	ldrb	r3, [r5, #8]
90012bd2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90012bd6:	7a2b      	ldrb	r3, [r5, #8]
90012bd8:	b303      	cbz	r3, 90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012bda:	7a6b      	ldrb	r3, [r5, #9]
90012bdc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90012be0:	7a6b      	ldrb	r3, [r5, #9]
90012be2:	b1db      	cbz	r3, 90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012be4:	7aab      	ldrb	r3, [r5, #10]
90012be6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90012bea:	7aab      	ldrb	r3, [r5, #10]
90012bec:	b1b3      	cbz	r3, 90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012bee:	7aeb      	ldrb	r3, [r5, #11]
90012bf0:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90012bf4:	7aeb      	ldrb	r3, [r5, #11]
90012bf6:	b18b      	cbz	r3, 90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012bf8:	7b2b      	ldrb	r3, [r5, #12]
90012bfa:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90012bfe:	7b2b      	ldrb	r3, [r5, #12]
90012c00:	b163      	cbz	r3, 90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012c02:	7b6b      	ldrb	r3, [r5, #13]
90012c04:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90012c08:	7b6b      	ldrb	r3, [r5, #13]
90012c0a:	b13b      	cbz	r3, 90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012c0c:	7bab      	ldrb	r3, [r5, #14]
90012c0e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
90012c12:	7bab      	ldrb	r3, [r5, #14]
90012c14:	b113      	cbz	r3, 90012c1c <prvInitialiseNewTask.constprop.0+0xd8>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012c16:	7beb      	ldrb	r3, [r5, #15]
90012c18:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90012c1c:	2300      	movs	r3, #0
90012c1e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90012c22:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
90012c24:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90012c28:	1d20      	adds	r0, r4, #4
90012c2a:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
90012c2c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
90012c30:	bf28      	it	cs
90012c32:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90012c34:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90012c36:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012c38:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90012c3c:	f7fe fc0e 	bl	9001145c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90012c40:	f104 0018 	add.w	r0, r4, #24
90012c44:	f7fe fc0a 	bl	9001145c <vListInitialiseItem>
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
90012c48:	4651      	mov	r1, sl
90012c4a:	2260      	movs	r2, #96	; 0x60
		pxNewTCB->ulNotifiedValue = 0;
90012c4c:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
90012c50:	f104 0058 	add.w	r0, r4, #88	; 0x58
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012c54:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90012c56:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90012c58:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90012c5a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90012c5e:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
90012c62:	f018 ff3b 	bl	9002badc <memset>
90012c66:	4b0b      	ldr	r3, [pc, #44]	; (90012c94 <prvInitialiseNewTask.constprop.0+0x150>)
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012c68:	463a      	mov	r2, r7
90012c6a:	4631      	mov	r1, r6
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
90012c6c:	65e3      	str	r3, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012c6e:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
90012c70:	4b09      	ldr	r3, [pc, #36]	; (90012c98 <prvInitialiseNewTask.constprop.0+0x154>)
90012c72:	6623      	str	r3, [r4, #96]	; 0x60
90012c74:	4b09      	ldr	r3, [pc, #36]	; (90012c9c <prvInitialiseNewTask.constprop.0+0x158>)
90012c76:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012c78:	f7fe fc6e 	bl	90011558 <pxPortInitialiseStack>
90012c7c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
90012c7e:	f1b8 0f00 	cmp.w	r8, #0
90012c82:	d001      	beq.n	90012c88 <prvInitialiseNewTask.constprop.0+0x144>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90012c84:	f8c8 4000 	str.w	r4, [r8]
}
90012c88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90012c8c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90012c90:	e7c7      	b.n	90012c22 <prvInitialiseNewTask.constprop.0+0xde>
90012c92:	bf00      	nop
90012c94:	9003123c 	.word	0x9003123c
90012c98:	9003125c 	.word	0x9003125c
90012c9c:	9003121c 	.word	0x9003121c

90012ca0 <prvIdleTask>:
{
90012ca0:	b580      	push	{r7, lr}
90012ca2:	4d24      	ldr	r5, [pc, #144]	; (90012d34 <prvIdleTask+0x94>)
				taskYIELD();
90012ca4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
90012ca8:	4f23      	ldr	r7, [pc, #140]	; (90012d38 <prvIdleTask+0x98>)
90012caa:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
90012cae:	4e23      	ldr	r6, [pc, #140]	; (90012d3c <prvIdleTask+0x9c>)
90012cb0:	f8df 808c 	ldr.w	r8, [pc, #140]	; 90012d40 <prvIdleTask+0xa0>
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90012cb4:	682b      	ldr	r3, [r5, #0]
90012cb6:	b35b      	cbz	r3, 90012d10 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
90012cb8:	f7fe fc7c 	bl	900115b4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012cbc:	68fb      	ldr	r3, [r7, #12]
90012cbe:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90012cc0:	1d20      	adds	r0, r4, #4
90012cc2:	f7fe fbf7 	bl	900114b4 <uxListRemove>
				--uxCurrentNumberOfTasks;
90012cc6:	6833      	ldr	r3, [r6, #0]
90012cc8:	3b01      	subs	r3, #1
90012cca:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
90012ccc:	682b      	ldr	r3, [r5, #0]
90012cce:	3b01      	subs	r3, #1
90012cd0:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
90012cd2:	f7fe fc91 	bl	900115f8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
90012cd6:	f104 0058 	add.w	r0, r4, #88	; 0x58
90012cda:	f019 fb71 	bl	9002c3c0 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
90012cde:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
90012ce2:	b163      	cbz	r3, 90012cfe <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
90012ce4:	2b01      	cmp	r3, #1
90012ce6:	d020      	beq.n	90012d2a <prvIdleTask+0x8a>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
90012ce8:	2b02      	cmp	r3, #2
90012cea:	d0e3      	beq.n	90012cb4 <prvIdleTask+0x14>
90012cec:	f04f 0350 	mov.w	r3, #80	; 0x50
90012cf0:	f383 8811 	msr	BASEPRI, r3
90012cf4:	f3bf 8f6f 	isb	sy
90012cf8:	f3bf 8f4f 	dsb	sy
90012cfc:	e7fe      	b.n	90012cfc <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
90012cfe:	6b20      	ldr	r0, [r4, #48]	; 0x30
90012d00:	f7fe fb3e 	bl	90011380 <vPortFree>
				vPortFree( pxTCB );
90012d04:	4620      	mov	r0, r4
90012d06:	f7fe fb3b 	bl	90011380 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90012d0a:	682b      	ldr	r3, [r5, #0]
90012d0c:	2b00      	cmp	r3, #0
90012d0e:	d1d3      	bne.n	90012cb8 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90012d10:	f8d8 3000 	ldr.w	r3, [r8]
90012d14:	2b01      	cmp	r3, #1
90012d16:	d905      	bls.n	90012d24 <prvIdleTask+0x84>
				taskYIELD();
90012d18:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
90012d1c:	f3bf 8f4f 	dsb	sy
90012d20:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
90012d24:	f7f1 fc22 	bl	9000456c <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
90012d28:	e7c4      	b.n	90012cb4 <prvIdleTask+0x14>
				vPortFree( pxTCB );
90012d2a:	4620      	mov	r0, r4
90012d2c:	f7fe fb28 	bl	90011380 <vPortFree>
90012d30:	e7c0      	b.n	90012cb4 <prvIdleTask+0x14>
90012d32:	bf00      	nop
90012d34:	24027c28 	.word	0x24027c28
90012d38:	24027c98 	.word	0x24027c98
90012d3c:	24027c24 	.word	0x24027c24
90012d40:	240277c4 	.word	0x240277c4

90012d44 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90012d44:	4b4a      	ldr	r3, [pc, #296]	; (90012e70 <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
90012d46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90012d4a:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90012d4c:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90012d4e:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
90012d50:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90012d52:	2e00      	cmp	r6, #0
90012d54:	d040      	beq.n	90012dd8 <xTaskIncrementTick.part.0+0x94>
90012d56:	f8df b12c 	ldr.w	fp, [pc, #300]	; 90012e84 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
90012d5a:	f8db 3000 	ldr.w	r3, [fp]
90012d5e:	429e      	cmp	r6, r3
90012d60:	d347      	bcc.n	90012df2 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012d62:	4f44      	ldr	r7, [pc, #272]	; (90012e74 <xTaskIncrementTick.part.0+0x130>)
90012d64:	683b      	ldr	r3, [r7, #0]
90012d66:	681d      	ldr	r5, [r3, #0]
90012d68:	2d00      	cmp	r5, #0
90012d6a:	d077      	beq.n	90012e5c <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
90012d6c:	2500      	movs	r5, #0
90012d6e:	f8df 9118 	ldr.w	r9, [pc, #280]	; 90012e88 <xTaskIncrementTick.part.0+0x144>
90012d72:	f8df a118 	ldr.w	sl, [pc, #280]	; 90012e8c <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
90012d76:	f8df 8118 	ldr.w	r8, [pc, #280]	; 90012e90 <xTaskIncrementTick.part.0+0x14c>
90012d7a:	e022      	b.n	90012dc2 <xTaskIncrementTick.part.0+0x7e>
90012d7c:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90012d7e:	f7fe fb99 	bl	900114b4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90012d82:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90012d84:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90012d88:	9901      	ldr	r1, [sp, #4]
90012d8a:	b113      	cbz	r3, 90012d92 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90012d8c:	f7fe fb92 	bl	900114b4 <uxListRemove>
90012d90:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
90012d92:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90012d94:	f8d8 2000 	ldr.w	r2, [r8]
90012d98:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90012d9c:	4293      	cmp	r3, r2
90012d9e:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90012da2:	d901      	bls.n	90012da8 <xTaskIncrementTick.part.0+0x64>
90012da4:	f8c8 3000 	str.w	r3, [r8]
90012da8:	f7fe fb5c 	bl	90011464 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90012dac:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012db0:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90012db2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90012db4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012db6:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
90012db8:	4291      	cmp	r1, r2
90012dba:	bf28      	it	cs
90012dbc:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012dbe:	2b00      	cmp	r3, #0
90012dc0:	d050      	beq.n	90012e64 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012dc2:	683b      	ldr	r3, [r7, #0]
90012dc4:	68db      	ldr	r3, [r3, #12]
90012dc6:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
90012dc8:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90012dca:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
90012dcc:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90012dce:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
90012dd0:	d2d4      	bcs.n	90012d7c <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
90012dd2:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
90012dd6:	e011      	b.n	90012dfc <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
90012dd8:	4b26      	ldr	r3, [pc, #152]	; (90012e74 <xTaskIncrementTick.part.0+0x130>)
90012dda:	681a      	ldr	r2, [r3, #0]
90012ddc:	6812      	ldr	r2, [r2, #0]
90012dde:	b30a      	cbz	r2, 90012e24 <xTaskIncrementTick.part.0+0xe0>
90012de0:	f04f 0350 	mov.w	r3, #80	; 0x50
90012de4:	f383 8811 	msr	BASEPRI, r3
90012de8:	f3bf 8f6f 	isb	sy
90012dec:	f3bf 8f4f 	dsb	sy
90012df0:	e7fe      	b.n	90012df0 <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
90012df2:	2500      	movs	r5, #0
90012df4:	f8df 9090 	ldr.w	r9, [pc, #144]	; 90012e88 <xTaskIncrementTick.part.0+0x144>
90012df8:	f8df a090 	ldr.w	sl, [pc, #144]	; 90012e8c <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90012dfc:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
90012e00:	491d      	ldr	r1, [pc, #116]	; (90012e78 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90012e02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012e04:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90012e08:	009b      	lsls	r3, r3, #2
90012e0a:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
90012e0e:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90012e10:	2a02      	cmp	r2, #2
90012e12:	bf28      	it	cs
90012e14:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
90012e16:	2b00      	cmp	r3, #0
}
90012e18:	bf0c      	ite	eq
90012e1a:	4628      	moveq	r0, r5
90012e1c:	2001      	movne	r0, #1
90012e1e:	b003      	add	sp, #12
90012e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90012e24:	4a15      	ldr	r2, [pc, #84]	; (90012e7c <xTaskIncrementTick.part.0+0x138>)
90012e26:	6818      	ldr	r0, [r3, #0]
90012e28:	6811      	ldr	r1, [r2, #0]
90012e2a:	6019      	str	r1, [r3, #0]
90012e2c:	4914      	ldr	r1, [pc, #80]	; (90012e80 <xTaskIncrementTick.part.0+0x13c>)
90012e2e:	6010      	str	r0, [r2, #0]
90012e30:	680a      	ldr	r2, [r1, #0]
90012e32:	3201      	adds	r2, #1
90012e34:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012e36:	681a      	ldr	r2, [r3, #0]
90012e38:	6812      	ldr	r2, [r2, #0]
90012e3a:	b932      	cbnz	r2, 90012e4a <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90012e3c:	f8df b044 	ldr.w	fp, [pc, #68]	; 90012e84 <xTaskIncrementTick.part.0+0x140>
90012e40:	f04f 33ff 	mov.w	r3, #4294967295
90012e44:	f8cb 3000 	str.w	r3, [fp]
90012e48:	e787      	b.n	90012d5a <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012e4a:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90012e4c:	f8df b034 	ldr.w	fp, [pc, #52]	; 90012e84 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012e50:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90012e52:	68db      	ldr	r3, [r3, #12]
90012e54:	685b      	ldr	r3, [r3, #4]
90012e56:	f8cb 3000 	str.w	r3, [fp]
	}
}
90012e5a:	e77e      	b.n	90012d5a <xTaskIncrementTick.part.0+0x16>
90012e5c:	f8df 9028 	ldr.w	r9, [pc, #40]	; 90012e88 <xTaskIncrementTick.part.0+0x144>
90012e60:	f8df a028 	ldr.w	sl, [pc, #40]	; 90012e8c <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012e64:	f04f 33ff 	mov.w	r3, #4294967295
90012e68:	f8cb 3000 	str.w	r3, [fp]
					break;
90012e6c:	e7c6      	b.n	90012dfc <xTaskIncrementTick.part.0+0xb8>
90012e6e:	bf00      	nop
90012e70:	24027cac 	.word	0x24027cac
90012e74:	240277bc 	.word	0x240277bc
90012e78:	24027cb0 	.word	0x24027cb0
90012e7c:	240277c0 	.word	0x240277c0
90012e80:	24027c64 	.word	0x24027c64
90012e84:	24027c60 	.word	0x24027c60
90012e88:	240277c4 	.word	0x240277c4
90012e8c:	240277b8 	.word	0x240277b8
90012e90:	24027c34 	.word	0x24027c34

90012e94 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
90012e94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
90012e98:	4d41      	ldr	r5, [pc, #260]	; (90012fa0 <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
90012e9a:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
90012e9c:	f7fe fb8a 	bl	900115b4 <vPortEnterCritical>
		--uxSchedulerSuspended;
90012ea0:	682b      	ldr	r3, [r5, #0]
90012ea2:	3b01      	subs	r3, #1
90012ea4:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90012ea6:	682b      	ldr	r3, [r5, #0]
90012ea8:	2b00      	cmp	r3, #0
90012eaa:	d161      	bne.n	90012f70 <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
90012eac:	4b3d      	ldr	r3, [pc, #244]	; (90012fa4 <xTaskResumeAll.part.0+0x110>)
90012eae:	681b      	ldr	r3, [r3, #0]
90012eb0:	2b00      	cmp	r3, #0
90012eb2:	d05d      	beq.n	90012f70 <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90012eb4:	4e3c      	ldr	r6, [pc, #240]	; (90012fa8 <xTaskResumeAll.part.0+0x114>)
90012eb6:	6833      	ldr	r3, [r6, #0]
90012eb8:	2b00      	cmp	r3, #0
90012eba:	d06e      	beq.n	90012f9a <xTaskResumeAll.part.0+0x106>
90012ebc:	4f3b      	ldr	r7, [pc, #236]	; (90012fac <xTaskResumeAll.part.0+0x118>)
90012ebe:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 90012fbc <xTaskResumeAll.part.0+0x128>
90012ec2:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 90012fc0 <xTaskResumeAll.part.0+0x12c>
90012ec6:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 90012fc4 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012eca:	68f3      	ldr	r3, [r6, #12]
90012ecc:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90012ece:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90012ed2:	f104 0018 	add.w	r0, r4, #24
90012ed6:	f7fe faed 	bl	900114b4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90012eda:	4658      	mov	r0, fp
90012edc:	f7fe faea 	bl	900114b4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
90012ee0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90012ee2:	683a      	ldr	r2, [r7, #0]
90012ee4:	4659      	mov	r1, fp
90012ee6:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90012eea:	4293      	cmp	r3, r2
90012eec:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90012ef0:	d900      	bls.n	90012ef4 <xTaskResumeAll.part.0+0x60>
90012ef2:	603b      	str	r3, [r7, #0]
90012ef4:	f7fe fab6 	bl	90011464 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90012ef8:	f8d8 3000 	ldr.w	r3, [r8]
90012efc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012efe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012f00:	429a      	cmp	r2, r3
90012f02:	d33d      	bcc.n	90012f80 <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
90012f04:	2301      	movs	r3, #1
90012f06:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90012f0a:	6833      	ldr	r3, [r6, #0]
90012f0c:	2b00      	cmp	r3, #0
90012f0e:	d1dc      	bne.n	90012eca <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012f10:	4b27      	ldr	r3, [pc, #156]	; (90012fb0 <xTaskResumeAll.part.0+0x11c>)
90012f12:	681a      	ldr	r2, [r3, #0]
90012f14:	6812      	ldr	r2, [r2, #0]
90012f16:	2a00      	cmp	r2, #0
90012f18:	d03a      	beq.n	90012f90 <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012f1a:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90012f1c:	4b25      	ldr	r3, [pc, #148]	; (90012fb4 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012f1e:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90012f20:	68d2      	ldr	r2, [r2, #12]
90012f22:	6852      	ldr	r2, [r2, #4]
90012f24:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
90012f26:	4e24      	ldr	r6, [pc, #144]	; (90012fb8 <xTaskResumeAll.part.0+0x124>)
90012f28:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
90012f2a:	b194      	cbz	r4, 90012f52 <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
90012f2c:	2701      	movs	r7, #1
90012f2e:	e006      	b.n	90012f3e <xTaskResumeAll.part.0+0xaa>
90012f30:	f7ff ff08 	bl	90012d44 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90012f34:	b108      	cbz	r0, 90012f3a <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
90012f36:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
90012f3a:	3c01      	subs	r4, #1
90012f3c:	d008      	beq.n	90012f50 <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90012f3e:	682b      	ldr	r3, [r5, #0]
90012f40:	2b00      	cmp	r3, #0
90012f42:	d0f5      	beq.n	90012f30 <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
90012f44:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90012f46:	3c01      	subs	r4, #1
		++xPendedTicks;
90012f48:	f103 0301 	add.w	r3, r3, #1
90012f4c:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90012f4e:	d1f6      	bne.n	90012f3e <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
90012f50:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90012f52:	f8da 3000 	ldr.w	r3, [sl]
90012f56:	b15b      	cbz	r3, 90012f70 <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
90012f58:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90012f5c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90012f60:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90012f64:	f3bf 8f4f 	dsb	sy
90012f68:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90012f6c:	2001      	movs	r0, #1
90012f6e:	e000      	b.n	90012f72 <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
90012f70:	2000      	movs	r0, #0
90012f72:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90012f74:	f7fe fb40 	bl	900115f8 <vPortExitCritical>
}
90012f78:	9801      	ldr	r0, [sp, #4]
90012f7a:	b003      	add	sp, #12
90012f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90012f80:	6833      	ldr	r3, [r6, #0]
90012f82:	2b00      	cmp	r3, #0
90012f84:	d1a1      	bne.n	90012eca <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012f86:	4b0a      	ldr	r3, [pc, #40]	; (90012fb0 <xTaskResumeAll.part.0+0x11c>)
90012f88:	681a      	ldr	r2, [r3, #0]
90012f8a:	6812      	ldr	r2, [r2, #0]
90012f8c:	2a00      	cmp	r2, #0
90012f8e:	d1c4      	bne.n	90012f1a <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
90012f90:	4b08      	ldr	r3, [pc, #32]	; (90012fb4 <xTaskResumeAll.part.0+0x120>)
90012f92:	f04f 32ff 	mov.w	r2, #4294967295
90012f96:	601a      	str	r2, [r3, #0]
90012f98:	e7c5      	b.n	90012f26 <xTaskResumeAll.part.0+0x92>
90012f9a:	f8df a028 	ldr.w	sl, [pc, #40]	; 90012fc4 <xTaskResumeAll.part.0+0x130>
90012f9e:	e7c2      	b.n	90012f26 <xTaskResumeAll.part.0+0x92>
90012fa0:	24027c2c 	.word	0x24027c2c
90012fa4:	24027c24 	.word	0x24027c24
90012fa8:	24027c6c 	.word	0x24027c6c
90012fac:	24027c34 	.word	0x24027c34
90012fb0:	240277bc 	.word	0x240277bc
90012fb4:	24027c60 	.word	0x24027c60
90012fb8:	24027c68 	.word	0x24027c68
90012fbc:	240277c4 	.word	0x240277c4
90012fc0:	240277b8 	.word	0x240277b8
90012fc4:	24027cb0 	.word	0x24027cb0

90012fc8 <xTaskCreateStatic>:
	{
90012fc8:	b530      	push	{r4, r5, lr}
90012fca:	b087      	sub	sp, #28
90012fcc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
90012fce:	b1c4      	cbz	r4, 90013002 <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
90012fd0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90012fd2:	b16d      	cbz	r5, 90012ff0 <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
90012fd4:	25c0      	movs	r5, #192	; 0xc0
90012fd6:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
90012fd8:	9d05      	ldr	r5, [sp, #20]
90012fda:	2dc0      	cmp	r5, #192	; 0xc0
90012fdc:	d01a      	beq.n	90013014 <xTaskCreateStatic+0x4c>
90012fde:	f04f 0350 	mov.w	r3, #80	; 0x50
90012fe2:	f383 8811 	msr	BASEPRI, r3
90012fe6:	f3bf 8f6f 	isb	sy
90012fea:	f3bf 8f4f 	dsb	sy
90012fee:	e7fe      	b.n	90012fee <xTaskCreateStatic+0x26>
90012ff0:	f04f 0350 	mov.w	r3, #80	; 0x50
90012ff4:	f383 8811 	msr	BASEPRI, r3
90012ff8:	f3bf 8f6f 	isb	sy
90012ffc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90013000:	e7fe      	b.n	90013000 <xTaskCreateStatic+0x38>
90013002:	f04f 0350 	mov.w	r3, #80	; 0x50
90013006:	f383 8811 	msr	BASEPRI, r3
9001300a:	f3bf 8f6f 	isb	sy
9001300e:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90013012:	e7fe      	b.n	90013012 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90013014:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90013016:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90013018:	2402      	movs	r4, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9001301a:	9502      	str	r5, [sp, #8]
9001301c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001301e:	9500      	str	r5, [sp, #0]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90013020:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90013022:	f885 40bd 	strb.w	r4, [r5, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90013026:	ac04      	add	r4, sp, #16
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90013028:	9d05      	ldr	r5, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9001302a:	9401      	str	r4, [sp, #4]
9001302c:	f7ff fd8a 	bl	90012b44 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
90013030:	980c      	ldr	r0, [sp, #48]	; 0x30
90013032:	f7ff fcff 	bl	90012a34 <prvAddNewTaskToReadyList>
	}
90013036:	9804      	ldr	r0, [sp, #16]
90013038:	b007      	add	sp, #28
9001303a:	bd30      	pop	{r4, r5, pc}

9001303c <xTaskCreate>:
	{
9001303c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013040:	4607      	mov	r7, r0
90013042:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90013044:	0090      	lsls	r0, r2, #2
	{
90013046:	4615      	mov	r5, r2
90013048:	4688      	mov	r8, r1
9001304a:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9001304c:	f7fe f8de 	bl	9001120c <pvPortMalloc>
			if( pxStack != NULL )
90013050:	b1d8      	cbz	r0, 9001308a <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
90013052:	4604      	mov	r4, r0
90013054:	20c0      	movs	r0, #192	; 0xc0
90013056:	f7fe f8d9 	bl	9001120c <pvPortMalloc>
				if( pxNewTCB != NULL )
9001305a:	4606      	mov	r6, r0
9001305c:	b1d0      	cbz	r0, 90013094 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
9001305e:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90013060:	2400      	movs	r4, #0
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
90013062:	464b      	mov	r3, r9
90013064:	462a      	mov	r2, r5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90013066:	f886 40bd 	strb.w	r4, [r6, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
9001306a:	4641      	mov	r1, r8
9001306c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001306e:	4638      	mov	r0, r7
90013070:	9602      	str	r6, [sp, #8]
90013072:	9401      	str	r4, [sp, #4]
90013074:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90013076:	9400      	str	r4, [sp, #0]
90013078:	f7ff fd64 	bl	90012b44 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
9001307c:	4630      	mov	r0, r6
9001307e:	f7ff fcd9 	bl	90012a34 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
90013082:	2001      	movs	r0, #1
	}
90013084:	b005      	add	sp, #20
90013086:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9001308a:	f04f 30ff 	mov.w	r0, #4294967295
	}
9001308e:	b005      	add	sp, #20
90013090:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
90013094:	4620      	mov	r0, r4
90013096:	f7fe f973 	bl	90011380 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9001309a:	f04f 30ff 	mov.w	r0, #4294967295
9001309e:	e7f1      	b.n	90013084 <xTaskCreate+0x48>

900130a0 <vTaskDelay>:
	{
900130a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
900130a2:	b950      	cbnz	r0, 900130ba <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
900130a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900130a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900130ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900130b0:	f3bf 8f4f 	dsb	sy
900130b4:	f3bf 8f6f 	isb	sy
	}
900130b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
900130ba:	4d1e      	ldr	r5, [pc, #120]	; (90013134 <vTaskDelay+0x94>)
900130bc:	682b      	ldr	r3, [r5, #0]
900130be:	b143      	cbz	r3, 900130d2 <vTaskDelay+0x32>
900130c0:	f04f 0350 	mov.w	r3, #80	; 0x50
900130c4:	f383 8811 	msr	BASEPRI, r3
900130c8:	f3bf 8f6f 	isb	sy
900130cc:	f3bf 8f4f 	dsb	sy
900130d0:	e7fe      	b.n	900130d0 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
900130d2:	682b      	ldr	r3, [r5, #0]
900130d4:	4604      	mov	r4, r0
900130d6:	3301      	adds	r3, #1
900130d8:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
900130da:	4b17      	ldr	r3, [pc, #92]	; (90013138 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900130dc:	4e17      	ldr	r6, [pc, #92]	; (9001313c <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
900130de:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900130e0:	6830      	ldr	r0, [r6, #0]
900130e2:	3004      	adds	r0, #4
900130e4:	f7fe f9e6 	bl	900114b4 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
900130e8:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900130ea:	6833      	ldr	r3, [r6, #0]
900130ec:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
900130ee:	d315      	bcc.n	9001311c <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900130f0:	4b13      	ldr	r3, [pc, #76]	; (90013140 <vTaskDelay+0xa0>)
900130f2:	6818      	ldr	r0, [r3, #0]
900130f4:	6831      	ldr	r1, [r6, #0]
900130f6:	3104      	adds	r1, #4
900130f8:	f7fe f9c4 	bl	90011484 <vListInsert>
	configASSERT( uxSchedulerSuspended );
900130fc:	682b      	ldr	r3, [r5, #0]
900130fe:	b943      	cbnz	r3, 90013112 <vTaskDelay+0x72>
90013100:	f04f 0350 	mov.w	r3, #80	; 0x50
90013104:	f383 8811 	msr	BASEPRI, r3
90013108:	f3bf 8f6f 	isb	sy
9001310c:	f3bf 8f4f 	dsb	sy
90013110:	e7fe      	b.n	90013110 <vTaskDelay+0x70>
90013112:	f7ff febf 	bl	90012e94 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
90013116:	2800      	cmp	r0, #0
90013118:	d0c4      	beq.n	900130a4 <vTaskDelay+0x4>
	}
9001311a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001311c:	4b09      	ldr	r3, [pc, #36]	; (90013144 <vTaskDelay+0xa4>)
9001311e:	6818      	ldr	r0, [r3, #0]
90013120:	6831      	ldr	r1, [r6, #0]
90013122:	3104      	adds	r1, #4
90013124:	f7fe f9ae 	bl	90011484 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90013128:	4b07      	ldr	r3, [pc, #28]	; (90013148 <vTaskDelay+0xa8>)
9001312a:	681a      	ldr	r2, [r3, #0]
9001312c:	4294      	cmp	r4, r2
9001312e:	d2e5      	bcs.n	900130fc <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
90013130:	601c      	str	r4, [r3, #0]
90013132:	e7e3      	b.n	900130fc <vTaskDelay+0x5c>
90013134:	24027c2c 	.word	0x24027c2c
90013138:	24027cac 	.word	0x24027cac
9001313c:	240277b8 	.word	0x240277b8
90013140:	240277c0 	.word	0x240277c0
90013144:	240277bc 	.word	0x240277bc
90013148:	24027c60 	.word	0x24027c60

9001314c <vTaskStartScheduler>:
{
9001314c:	b530      	push	{r4, r5, lr}
9001314e:	b08b      	sub	sp, #44	; 0x2c
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
90013150:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90013152:	aa07      	add	r2, sp, #28
90013154:	a906      	add	r1, sp, #24
90013156:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
90013158:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9001315c:	f7fe f838 	bl	900111d0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
90013160:	9b06      	ldr	r3, [sp, #24]
		configASSERT( puxStackBuffer != NULL );
90013162:	b1cb      	cbz	r3, 90013198 <vTaskStartScheduler+0x4c>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
90013164:	9d05      	ldr	r5, [sp, #20]
		configASSERT( pxTaskBuffer != NULL );
90013166:	b175      	cbz	r5, 90013186 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90013168:	21c0      	movs	r1, #192	; 0xc0
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9001316a:	9a07      	ldr	r2, [sp, #28]
			volatile size_t xSize = sizeof( StaticTask_t );
9001316c:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
9001316e:	9909      	ldr	r1, [sp, #36]	; 0x24
90013170:	29c0      	cmp	r1, #192	; 0xc0
90013172:	d01a      	beq.n	900131aa <vTaskStartScheduler+0x5e>
90013174:	f04f 0350 	mov.w	r3, #80	; 0x50
90013178:	f383 8811 	msr	BASEPRI, r3
9001317c:	f3bf 8f6f 	isb	sy
90013180:	f3bf 8f4f 	dsb	sy
90013184:	e7fe      	b.n	90013184 <vTaskStartScheduler+0x38>
90013186:	f04f 0350 	mov.w	r3, #80	; 0x50
9001318a:	f383 8811 	msr	BASEPRI, r3
9001318e:	f3bf 8f6f 	isb	sy
90013192:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90013196:	e7fe      	b.n	90013196 <vTaskStartScheduler+0x4a>
90013198:	f04f 0350 	mov.w	r3, #80	; 0x50
9001319c:	f383 8811 	msr	BASEPRI, r3
900131a0:	f3bf 8f6f 	isb	sy
900131a4:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
900131a8:	e7fe      	b.n	900131a8 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
900131aa:	2102      	movs	r1, #2
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
900131ac:	632b      	str	r3, [r5, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
900131ae:	4822      	ldr	r0, [pc, #136]	; (90013238 <vTaskStartScheduler+0xec>)
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
900131b0:	f885 10bd 	strb.w	r1, [r5, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
900131b4:	a908      	add	r1, sp, #32
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
900131b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
900131b8:	4623      	mov	r3, r4
900131ba:	9400      	str	r4, [sp, #0]
900131bc:	e9cd 1501 	strd	r1, r5, [sp, #4]
900131c0:	491e      	ldr	r1, [pc, #120]	; (9001323c <vTaskStartScheduler+0xf0>)
900131c2:	f7ff fcbf 	bl	90012b44 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
900131c6:	4628      	mov	r0, r5
900131c8:	f7ff fc34 	bl	90012a34 <prvAddNewTaskToReadyList>
		return xReturn;
900131cc:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
900131ce:	2b00      	cmp	r3, #0
900131d0:	d02e      	beq.n	90013230 <vTaskStartScheduler+0xe4>
			xReturn = xTimerCreateTimerTask();
900131d2:	f000 fcab 	bl	90013b2c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
900131d6:	2801      	cmp	r0, #1
900131d8:	d11f      	bne.n	9001321a <vTaskStartScheduler+0xce>
900131da:	f04f 0350 	mov.w	r3, #80	; 0x50
900131de:	f383 8811 	msr	BASEPRI, r3
900131e2:	f3bf 8f6f 	isb	sy
900131e6:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
900131ea:	4a15      	ldr	r2, [pc, #84]	; (90013240 <vTaskStartScheduler+0xf4>)
900131ec:	4915      	ldr	r1, [pc, #84]	; (90013244 <vTaskStartScheduler+0xf8>)
900131ee:	6813      	ldr	r3, [r2, #0]
900131f0:	3358      	adds	r3, #88	; 0x58
900131f2:	600b      	str	r3, [r1, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
900131f4:	f04f 31ff 	mov.w	r1, #4294967295
900131f8:	4b13      	ldr	r3, [pc, #76]	; (90013248 <vTaskStartScheduler+0xfc>)
900131fa:	6019      	str	r1, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
900131fc:	4b13      	ldr	r3, [pc, #76]	; (9001324c <vTaskStartScheduler+0x100>)
		xSchedulerRunning = pdTRUE;
900131fe:	4914      	ldr	r1, [pc, #80]	; (90013250 <vTaskStartScheduler+0x104>)
90013200:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90013202:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
90013204:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
90013206:	b1ab      	cbz	r3, 90013234 <vTaskStartScheduler+0xe8>
		if( xTCB->pxTaskTag != NULL )
90013208:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001320a:	b10b      	cbz	r3, 90013210 <vTaskStartScheduler+0xc4>
			xReturn = xTCB->pxTaskTag( pvParameter );
9001320c:	2000      	movs	r0, #0
9001320e:	4798      	blx	r3
}
90013210:	b00b      	add	sp, #44	; 0x2c
90013212:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
90013216:	f7fe ba5f 	b.w	900116d8 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9001321a:	3001      	adds	r0, #1
9001321c:	d108      	bne.n	90013230 <vTaskStartScheduler+0xe4>
9001321e:	f04f 0350 	mov.w	r3, #80	; 0x50
90013222:	f383 8811 	msr	BASEPRI, r3
90013226:	f3bf 8f6f 	isb	sy
9001322a:	f3bf 8f4f 	dsb	sy
9001322e:	e7fe      	b.n	9001322e <vTaskStartScheduler+0xe2>
}
90013230:	b00b      	add	sp, #44	; 0x2c
90013232:	bd30      	pop	{r4, r5, pc}
			xTCB = pxCurrentTCB;
90013234:	6813      	ldr	r3, [r2, #0]
90013236:	e7e7      	b.n	90013208 <vTaskStartScheduler+0xbc>
90013238:	90012ca1 	.word	0x90012ca1
9001323c:	9002fd98 	.word	0x9002fd98
90013240:	240277b8 	.word	0x240277b8
90013244:	240000e0 	.word	0x240000e0
90013248:	24027c60 	.word	0x24027c60
9001324c:	24027cac 	.word	0x24027cac
90013250:	24027c80 	.word	0x24027c80

90013254 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90013254:	4a02      	ldr	r2, [pc, #8]	; (90013260 <vTaskSuspendAll+0xc>)
90013256:	6813      	ldr	r3, [r2, #0]
90013258:	3301      	adds	r3, #1
9001325a:	6013      	str	r3, [r2, #0]
}
9001325c:	4770      	bx	lr
9001325e:	bf00      	nop
90013260:	24027c2c 	.word	0x24027c2c

90013264 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90013264:	4b06      	ldr	r3, [pc, #24]	; (90013280 <xTaskResumeAll+0x1c>)
90013266:	681b      	ldr	r3, [r3, #0]
90013268:	b943      	cbnz	r3, 9001327c <xTaskResumeAll+0x18>
9001326a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001326e:	f383 8811 	msr	BASEPRI, r3
90013272:	f3bf 8f6f 	isb	sy
90013276:	f3bf 8f4f 	dsb	sy
9001327a:	e7fe      	b.n	9001327a <xTaskResumeAll+0x16>
9001327c:	f7ff be0a 	b.w	90012e94 <xTaskResumeAll.part.0>
90013280:	24027c2c 	.word	0x24027c2c

90013284 <xTaskGetTickCount>:
		xTicks = xTickCount;
90013284:	4b01      	ldr	r3, [pc, #4]	; (9001328c <xTaskGetTickCount+0x8>)
90013286:	6818      	ldr	r0, [r3, #0]
}
90013288:	4770      	bx	lr
9001328a:	bf00      	nop
9001328c:	24027cac 	.word	0x24027cac

90013290 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90013290:	4b05      	ldr	r3, [pc, #20]	; (900132a8 <xTaskIncrementTick+0x18>)
90013292:	681b      	ldr	r3, [r3, #0]
90013294:	b90b      	cbnz	r3, 9001329a <xTaskIncrementTick+0xa>
90013296:	f7ff bd55 	b.w	90012d44 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9001329a:	4a04      	ldr	r2, [pc, #16]	; (900132ac <xTaskIncrementTick+0x1c>)
}
9001329c:	2000      	movs	r0, #0
		++xPendedTicks;
9001329e:	6813      	ldr	r3, [r2, #0]
900132a0:	3301      	adds	r3, #1
900132a2:	6013      	str	r3, [r2, #0]
}
900132a4:	4770      	bx	lr
900132a6:	bf00      	nop
900132a8:	24027c2c 	.word	0x24027c2c
900132ac:	24027c68 	.word	0x24027c68

900132b0 <vTaskSetApplicationTaskTag>:
	{
900132b0:	b538      	push	{r3, r4, r5, lr}
900132b2:	460d      	mov	r5, r1
		if( xTask == NULL )
900132b4:	b138      	cbz	r0, 900132c6 <vTaskSetApplicationTaskTag+0x16>
900132b6:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
900132b8:	f7fe f97c 	bl	900115b4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900132bc:	6565      	str	r5, [r4, #84]	; 0x54
	}
900132be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900132c2:	f7fe b999 	b.w	900115f8 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
900132c6:	4b04      	ldr	r3, [pc, #16]	; (900132d8 <vTaskSetApplicationTaskTag+0x28>)
900132c8:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
900132ca:	f7fe f973 	bl	900115b4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900132ce:	6565      	str	r5, [r4, #84]	; 0x54
	}
900132d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900132d4:	f7fe b990 	b.w	900115f8 <vPortExitCritical>
900132d8:	240277b8 	.word	0x240277b8

900132dc <vTaskSwitchContext>:
{
900132dc:	b538      	push	{r3, r4, r5, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
900132de:	4b27      	ldr	r3, [pc, #156]	; (9001337c <vTaskSwitchContext+0xa0>)
900132e0:	681b      	ldr	r3, [r3, #0]
900132e2:	b11b      	cbz	r3, 900132ec <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
900132e4:	4b26      	ldr	r3, [pc, #152]	; (90013380 <vTaskSwitchContext+0xa4>)
900132e6:	2201      	movs	r2, #1
900132e8:	601a      	str	r2, [r3, #0]
}
900132ea:	bd38      	pop	{r3, r4, r5, pc}
		xYieldPending = pdFALSE;
900132ec:	4a24      	ldr	r2, [pc, #144]	; (90013380 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
900132ee:	4c25      	ldr	r4, [pc, #148]	; (90013384 <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
900132f0:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
900132f2:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
900132f4:	2b00      	cmp	r3, #0
900132f6:	d036      	beq.n	90013366 <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
900132f8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900132fa:	b10b      	cbz	r3, 90013300 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
900132fc:	2001      	movs	r0, #1
900132fe:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90013300:	4d21      	ldr	r5, [pc, #132]	; (90013388 <vTaskSwitchContext+0xac>)
90013302:	4922      	ldr	r1, [pc, #136]	; (9001338c <vTaskSwitchContext+0xb0>)
90013304:	682b      	ldr	r3, [r5, #0]
90013306:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9001330a:	0098      	lsls	r0, r3, #2
9001330c:	0092      	lsls	r2, r2, #2
9001330e:	588a      	ldr	r2, [r1, r2]
90013310:	b942      	cbnz	r2, 90013324 <vTaskSwitchContext+0x48>
90013312:	b1fb      	cbz	r3, 90013354 <vTaskSwitchContext+0x78>
90013314:	3b01      	subs	r3, #1
90013316:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9001331a:	0098      	lsls	r0, r3, #2
9001331c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90013320:	2a00      	cmp	r2, #0
90013322:	d0f6      	beq.n	90013312 <vTaskSwitchContext+0x36>
90013324:	18c2      	adds	r2, r0, r3
90013326:	eb01 0082 	add.w	r0, r1, r2, lsl #2
9001332a:	6841      	ldr	r1, [r0, #4]
9001332c:	4602      	mov	r2, r0
9001332e:	6849      	ldr	r1, [r1, #4]
90013330:	3208      	adds	r2, #8
90013332:	4291      	cmp	r1, r2
90013334:	6041      	str	r1, [r0, #4]
90013336:	d01d      	beq.n	90013374 <vTaskSwitchContext+0x98>
90013338:	68ca      	ldr	r2, [r1, #12]
9001333a:	6022      	str	r2, [r4, #0]
9001333c:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9001333e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90013340:	b1b3      	cbz	r3, 90013370 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
90013342:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90013344:	b10b      	cbz	r3, 9001334a <vTaskSwitchContext+0x6e>
			xReturn = xTCB->pxTaskTag( pvParameter );
90013346:	2000      	movs	r0, #0
90013348:	4798      	blx	r3
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
9001334a:	6823      	ldr	r3, [r4, #0]
9001334c:	4a10      	ldr	r2, [pc, #64]	; (90013390 <vTaskSwitchContext+0xb4>)
9001334e:	3358      	adds	r3, #88	; 0x58
90013350:	6013      	str	r3, [r2, #0]
}
90013352:	bd38      	pop	{r3, r4, r5, pc}
90013354:	f04f 0350 	mov.w	r3, #80	; 0x50
90013358:	f383 8811 	msr	BASEPRI, r3
9001335c:	f3bf 8f6f 	isb	sy
90013360:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90013364:	e7fe      	b.n	90013364 <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
90013366:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90013368:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001336a:	2b00      	cmp	r3, #0
9001336c:	d1c6      	bne.n	900132fc <vTaskSwitchContext+0x20>
9001336e:	e7c7      	b.n	90013300 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90013370:	6823      	ldr	r3, [r4, #0]
90013372:	e7e6      	b.n	90013342 <vTaskSwitchContext+0x66>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90013374:	6849      	ldr	r1, [r1, #4]
90013376:	6041      	str	r1, [r0, #4]
90013378:	e7de      	b.n	90013338 <vTaskSwitchContext+0x5c>
9001337a:	bf00      	nop
9001337c:	24027c2c 	.word	0x24027c2c
90013380:	24027cb0 	.word	0x24027cb0
90013384:	240277b8 	.word	0x240277b8
90013388:	24027c34 	.word	0x24027c34
9001338c:	240277c4 	.word	0x240277c4
90013390:	240000e0 	.word	0x240000e0

90013394 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90013394:	b1f0      	cbz	r0, 900133d4 <vTaskPlaceOnEventList+0x40>
{
90013396:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90013398:	4d1a      	ldr	r5, [pc, #104]	; (90013404 <vTaskPlaceOnEventList+0x70>)
9001339a:	460c      	mov	r4, r1
9001339c:	6829      	ldr	r1, [r5, #0]
9001339e:	3118      	adds	r1, #24
900133a0:	f7fe f870 	bl	90011484 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
900133a4:	4b18      	ldr	r3, [pc, #96]	; (90013408 <vTaskPlaceOnEventList+0x74>)
900133a6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900133a8:	6828      	ldr	r0, [r5, #0]
900133aa:	3004      	adds	r0, #4
900133ac:	f7fe f882 	bl	900114b4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
900133b0:	1c63      	adds	r3, r4, #1
900133b2:	d020      	beq.n	900133f6 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
900133b4:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900133b6:	682b      	ldr	r3, [r5, #0]
900133b8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
900133ba:	d214      	bcs.n	900133e6 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900133bc:	4b13      	ldr	r3, [pc, #76]	; (9001340c <vTaskPlaceOnEventList+0x78>)
900133be:	6818      	ldr	r0, [r3, #0]
900133c0:	6829      	ldr	r1, [r5, #0]
900133c2:	3104      	adds	r1, #4
900133c4:	f7fe f85e 	bl	90011484 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
900133c8:	4b11      	ldr	r3, [pc, #68]	; (90013410 <vTaskPlaceOnEventList+0x7c>)
900133ca:	681a      	ldr	r2, [r3, #0]
900133cc:	4294      	cmp	r4, r2
900133ce:	d200      	bcs.n	900133d2 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
900133d0:	601c      	str	r4, [r3, #0]
}
900133d2:	bd70      	pop	{r4, r5, r6, pc}
900133d4:	f04f 0350 	mov.w	r3, #80	; 0x50
900133d8:	f383 8811 	msr	BASEPRI, r3
900133dc:	f3bf 8f6f 	isb	sy
900133e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
900133e4:	e7fe      	b.n	900133e4 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900133e6:	4b0b      	ldr	r3, [pc, #44]	; (90013414 <vTaskPlaceOnEventList+0x80>)
900133e8:	6818      	ldr	r0, [r3, #0]
900133ea:	6829      	ldr	r1, [r5, #0]
}
900133ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900133f0:	3104      	adds	r1, #4
900133f2:	f7fe b847 	b.w	90011484 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900133f6:	6829      	ldr	r1, [r5, #0]
900133f8:	4807      	ldr	r0, [pc, #28]	; (90013418 <vTaskPlaceOnEventList+0x84>)
900133fa:	3104      	adds	r1, #4
}
900133fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90013400:	f7fe b830 	b.w	90011464 <vListInsertEnd>
90013404:	240277b8 	.word	0x240277b8
90013408:	24027cac 	.word	0x24027cac
9001340c:	240277bc 	.word	0x240277bc
90013410:	24027c60 	.word	0x24027c60
90013414:	240277c0 	.word	0x240277c0
90013418:	24027c84 	.word	0x24027c84

9001341c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9001341c:	b358      	cbz	r0, 90013476 <vTaskPlaceOnEventListRestricted+0x5a>
	{
9001341e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90013420:	4e1d      	ldr	r6, [pc, #116]	; (90013498 <vTaskPlaceOnEventListRestricted+0x7c>)
90013422:	460c      	mov	r4, r1
90013424:	4615      	mov	r5, r2
90013426:	6831      	ldr	r1, [r6, #0]
90013428:	3118      	adds	r1, #24
9001342a:	f7fe f81b 	bl	90011464 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
9001342e:	b165      	cbz	r5, 9001344a <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90013430:	4b1a      	ldr	r3, [pc, #104]	; (9001349c <vTaskPlaceOnEventListRestricted+0x80>)
90013432:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90013434:	6830      	ldr	r0, [r6, #0]
90013436:	3004      	adds	r0, #4
90013438:	f7fe f83c 	bl	900114b4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001343c:	6831      	ldr	r1, [r6, #0]
9001343e:	4818      	ldr	r0, [pc, #96]	; (900134a0 <vTaskPlaceOnEventListRestricted+0x84>)
90013440:	3104      	adds	r1, #4
	}
90013442:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90013446:	f7fe b80d 	b.w	90011464 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9001344a:	4b14      	ldr	r3, [pc, #80]	; (9001349c <vTaskPlaceOnEventListRestricted+0x80>)
9001344c:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001344e:	6830      	ldr	r0, [r6, #0]
90013450:	3004      	adds	r0, #4
90013452:	f7fe f82f 	bl	900114b4 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
90013456:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90013458:	6833      	ldr	r3, [r6, #0]
9001345a:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9001345c:	d214      	bcs.n	90013488 <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001345e:	4b11      	ldr	r3, [pc, #68]	; (900134a4 <vTaskPlaceOnEventListRestricted+0x88>)
90013460:	6818      	ldr	r0, [r3, #0]
90013462:	6831      	ldr	r1, [r6, #0]
90013464:	3104      	adds	r1, #4
90013466:	f7fe f80d 	bl	90011484 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9001346a:	4b0f      	ldr	r3, [pc, #60]	; (900134a8 <vTaskPlaceOnEventListRestricted+0x8c>)
9001346c:	681a      	ldr	r2, [r3, #0]
9001346e:	4294      	cmp	r4, r2
90013470:	d200      	bcs.n	90013474 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
90013472:	601c      	str	r4, [r3, #0]
	}
90013474:	bd70      	pop	{r4, r5, r6, pc}
90013476:	f04f 0350 	mov.w	r3, #80	; 0x50
9001347a:	f383 8811 	msr	BASEPRI, r3
9001347e:	f3bf 8f6f 	isb	sy
90013482:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
90013486:	e7fe      	b.n	90013486 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90013488:	4b08      	ldr	r3, [pc, #32]	; (900134ac <vTaskPlaceOnEventListRestricted+0x90>)
9001348a:	6818      	ldr	r0, [r3, #0]
9001348c:	6831      	ldr	r1, [r6, #0]
	}
9001348e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90013492:	3104      	adds	r1, #4
90013494:	f7fd bff6 	b.w	90011484 <vListInsert>
90013498:	240277b8 	.word	0x240277b8
9001349c:	24027cac 	.word	0x24027cac
900134a0:	24027c84 	.word	0x24027c84
900134a4:	240277bc 	.word	0x240277bc
900134a8:	24027c60 	.word	0x24027c60
900134ac:	240277c0 	.word	0x240277c0

900134b0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900134b0:	68c3      	ldr	r3, [r0, #12]
{
900134b2:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900134b4:	68dc      	ldr	r4, [r3, #12]
{
900134b6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
900134b8:	b35c      	cbz	r4, 90013512 <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
900134ba:	f104 0518 	add.w	r5, r4, #24
900134be:	4628      	mov	r0, r5
900134c0:	f7fd fff8 	bl	900114b4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900134c4:	4b19      	ldr	r3, [pc, #100]	; (9001352c <xTaskRemoveFromEventList+0x7c>)
900134c6:	681b      	ldr	r3, [r3, #0]
900134c8:	b17b      	cbz	r3, 900134ea <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
900134ca:	4629      	mov	r1, r5
900134cc:	4818      	ldr	r0, [pc, #96]	; (90013530 <xTaskRemoveFromEventList+0x80>)
900134ce:	f7fd ffc9 	bl	90011464 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
900134d2:	4b18      	ldr	r3, [pc, #96]	; (90013534 <xTaskRemoveFromEventList+0x84>)
900134d4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900134d6:	681b      	ldr	r3, [r3, #0]
900134d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900134da:	429a      	cmp	r2, r3
900134dc:	d922      	bls.n	90013524 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
900134de:	2301      	movs	r3, #1
900134e0:	4a15      	ldr	r2, [pc, #84]	; (90013538 <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
900134e2:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
900134e4:	6013      	str	r3, [r2, #0]
}
900134e6:	b003      	add	sp, #12
900134e8:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
900134ea:	1d21      	adds	r1, r4, #4
900134ec:	4608      	mov	r0, r1
900134ee:	9101      	str	r1, [sp, #4]
900134f0:	f7fd ffe0 	bl	900114b4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
900134f4:	4a11      	ldr	r2, [pc, #68]	; (9001353c <xTaskRemoveFromEventList+0x8c>)
900134f6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900134f8:	6810      	ldr	r0, [r2, #0]
900134fa:	9901      	ldr	r1, [sp, #4]
900134fc:	4283      	cmp	r3, r0
900134fe:	d900      	bls.n	90013502 <xTaskRemoveFromEventList+0x52>
90013500:	6013      	str	r3, [r2, #0]
90013502:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90013506:	480e      	ldr	r0, [pc, #56]	; (90013540 <xTaskRemoveFromEventList+0x90>)
90013508:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9001350c:	f7fd ffaa 	bl	90011464 <vListInsertEnd>
90013510:	e7df      	b.n	900134d2 <xTaskRemoveFromEventList+0x22>
90013512:	f04f 0350 	mov.w	r3, #80	; 0x50
90013516:	f383 8811 	msr	BASEPRI, r3
9001351a:	f3bf 8f6f 	isb	sy
9001351e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90013522:	e7fe      	b.n	90013522 <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
90013524:	2000      	movs	r0, #0
}
90013526:	b003      	add	sp, #12
90013528:	bd30      	pop	{r4, r5, pc}
9001352a:	bf00      	nop
9001352c:	24027c2c 	.word	0x24027c2c
90013530:	24027c6c 	.word	0x24027c6c
90013534:	240277b8 	.word	0x240277b8
90013538:	24027cb0 	.word	0x24027cb0
9001353c:	24027c34 	.word	0x24027c34
90013540:	240277c4 	.word	0x240277c4

90013544 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90013544:	4a03      	ldr	r2, [pc, #12]	; (90013554 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
90013546:	4b04      	ldr	r3, [pc, #16]	; (90013558 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90013548:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001354a:	681b      	ldr	r3, [r3, #0]
9001354c:	e9c0 2300 	strd	r2, r3, [r0]
}
90013550:	4770      	bx	lr
90013552:	bf00      	nop
90013554:	24027c64 	.word	0x24027c64
90013558:	24027cac 	.word	0x24027cac

9001355c <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
9001355c:	b328      	cbz	r0, 900135aa <xTaskCheckForTimeOut+0x4e>
{
9001355e:	b5f0      	push	{r4, r5, r6, r7, lr}
90013560:	460d      	mov	r5, r1
90013562:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
90013564:	b1c1      	cbz	r1, 90013598 <xTaskCheckForTimeOut+0x3c>
90013566:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
90013568:	f7fe f824 	bl	900115b4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9001356c:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9001356e:	4a1d      	ldr	r2, [pc, #116]	; (900135e4 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
90013570:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90013572:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90013574:	d030      	beq.n	900135d8 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90013576:	f8df c070 	ldr.w	ip, [pc, #112]	; 900135e8 <xTaskCheckForTimeOut+0x8c>
9001357a:	6826      	ldr	r6, [r4, #0]
9001357c:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90013580:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90013582:	42be      	cmp	r6, r7
90013584:	d01a      	beq.n	900135bc <xTaskCheckForTimeOut+0x60>
90013586:	4288      	cmp	r0, r1
90013588:	d818      	bhi.n	900135bc <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
9001358a:	2001      	movs	r0, #1
9001358c:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9001358e:	f7fe f833 	bl	900115f8 <vPortExitCritical>
}
90013592:	9801      	ldr	r0, [sp, #4]
90013594:	b003      	add	sp, #12
90013596:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013598:	f04f 0350 	mov.w	r3, #80	; 0x50
9001359c:	f383 8811 	msr	BASEPRI, r3
900135a0:	f3bf 8f6f 	isb	sy
900135a4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
900135a8:	e7fe      	b.n	900135a8 <xTaskCheckForTimeOut+0x4c>
900135aa:	f04f 0350 	mov.w	r3, #80	; 0x50
900135ae:	f383 8811 	msr	BASEPRI, r3
900135b2:	f3bf 8f6f 	isb	sy
900135b6:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
900135ba:	e7fe      	b.n	900135ba <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900135bc:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
900135c0:	4573      	cmp	r3, lr
900135c2:	d90b      	bls.n	900135dc <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
900135c4:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900135c6:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
900135ca:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
900135cc:	4403      	add	r3, r0
			xReturn = pdFALSE;
900135ce:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
900135d0:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900135d2:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
900135d6:	e7d9      	b.n	9001358c <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
900135d8:	2000      	movs	r0, #0
900135da:	e7d7      	b.n	9001358c <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
900135dc:	2300      	movs	r3, #0
			xReturn = pdTRUE;
900135de:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
900135e0:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
900135e2:	e7d3      	b.n	9001358c <xTaskCheckForTimeOut+0x30>
900135e4:	24027cac 	.word	0x24027cac
900135e8:	24027c64 	.word	0x24027c64

900135ec <vTaskMissedYield>:
	xYieldPending = pdTRUE;
900135ec:	4b01      	ldr	r3, [pc, #4]	; (900135f4 <vTaskMissedYield+0x8>)
900135ee:	2201      	movs	r2, #1
900135f0:	601a      	str	r2, [r3, #0]
}
900135f2:	4770      	bx	lr
900135f4:	24027cb0 	.word	0x24027cb0

900135f8 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
900135f8:	4b01      	ldr	r3, [pc, #4]	; (90013600 <xTaskGetCurrentTaskHandle+0x8>)
900135fa:	6818      	ldr	r0, [r3, #0]
	}
900135fc:	4770      	bx	lr
900135fe:	bf00      	nop
90013600:	240277b8 	.word	0x240277b8

90013604 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90013604:	4b05      	ldr	r3, [pc, #20]	; (9001361c <xTaskGetSchedulerState+0x18>)
90013606:	681b      	ldr	r3, [r3, #0]
90013608:	b133      	cbz	r3, 90013618 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001360a:	4b05      	ldr	r3, [pc, #20]	; (90013620 <xTaskGetSchedulerState+0x1c>)
9001360c:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
9001360e:	2b00      	cmp	r3, #0
90013610:	bf0c      	ite	eq
90013612:	2002      	moveq	r0, #2
90013614:	2000      	movne	r0, #0
90013616:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
90013618:	2001      	movs	r0, #1
	}
9001361a:	4770      	bx	lr
9001361c:	24027c80 	.word	0x24027c80
90013620:	24027c2c 	.word	0x24027c2c

90013624 <xTaskPriorityInherit>:
	{
90013624:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
90013626:	4604      	mov	r4, r0
	{
90013628:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
9001362a:	b1c8      	cbz	r0, 90013660 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9001362c:	4d1d      	ldr	r5, [pc, #116]	; (900136a4 <xTaskPriorityInherit+0x80>)
9001362e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90013630:	682a      	ldr	r2, [r5, #0]
90013632:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90013634:	4293      	cmp	r3, r2
90013636:	d215      	bcs.n	90013664 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90013638:	6982      	ldr	r2, [r0, #24]
9001363a:	2a00      	cmp	r2, #0
9001363c:	db04      	blt.n	90013648 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001363e:	682a      	ldr	r2, [r5, #0]
90013640:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90013642:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
90013646:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
90013648:	4e17      	ldr	r6, [pc, #92]	; (900136a8 <xTaskPriorityInherit+0x84>)
9001364a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001364e:	6962      	ldr	r2, [r4, #20]
90013650:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90013654:	429a      	cmp	r2, r3
90013656:	d00e      	beq.n	90013676 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90013658:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
9001365a:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9001365c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001365e:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
90013660:	b002      	add	sp, #8
90013662:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90013664:	682b      	ldr	r3, [r5, #0]
90013666:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
90013668:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001366a:	4298      	cmp	r0, r3
9001366c:	bf2c      	ite	cs
9001366e:	2000      	movcs	r0, #0
90013670:	2001      	movcc	r0, #1
	}
90013672:	b002      	add	sp, #8
90013674:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90013676:	1d21      	adds	r1, r4, #4
90013678:	4608      	mov	r0, r1
9001367a:	9101      	str	r1, [sp, #4]
9001367c:	f7fd ff1a 	bl	900114b4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90013680:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90013682:	4b0a      	ldr	r3, [pc, #40]	; (900136ac <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90013684:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90013686:	681a      	ldr	r2, [r3, #0]
90013688:	9901      	ldr	r1, [sp, #4]
9001368a:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9001368c:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001368e:	d900      	bls.n	90013692 <xTaskPriorityInherit+0x6e>
90013690:	6018      	str	r0, [r3, #0]
90013692:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90013696:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9001369a:	f7fd fee3 	bl	90011464 <vListInsertEnd>
				xReturn = pdTRUE;
9001369e:	2001      	movs	r0, #1
900136a0:	e7de      	b.n	90013660 <xTaskPriorityInherit+0x3c>
900136a2:	bf00      	nop
900136a4:	240277b8 	.word	0x240277b8
900136a8:	240277c4 	.word	0x240277c4
900136ac:	24027c34 	.word	0x24027c34

900136b0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
900136b0:	b318      	cbz	r0, 900136fa <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
900136b2:	4b1f      	ldr	r3, [pc, #124]	; (90013730 <xTaskPriorityDisinherit+0x80>)
	{
900136b4:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
900136b6:	681c      	ldr	r4, [r3, #0]
	{
900136b8:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
900136ba:	4284      	cmp	r4, r0
900136bc:	d008      	beq.n	900136d0 <xTaskPriorityDisinherit+0x20>
900136be:	f04f 0350 	mov.w	r3, #80	; 0x50
900136c2:	f383 8811 	msr	BASEPRI, r3
900136c6:	f3bf 8f6f 	isb	sy
900136ca:	f3bf 8f4f 	dsb	sy
900136ce:	e7fe      	b.n	900136ce <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
900136d0:	6d23      	ldr	r3, [r4, #80]	; 0x50
900136d2:	b14b      	cbz	r3, 900136e8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900136d4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
900136d6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900136d8:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
900136da:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
900136dc:	4291      	cmp	r1, r2
900136de:	d000      	beq.n	900136e2 <xTaskPriorityDisinherit+0x32>
900136e0:	b16b      	cbz	r3, 900136fe <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
900136e2:	2000      	movs	r0, #0
	}
900136e4:	b002      	add	sp, #8
900136e6:	bd10      	pop	{r4, pc}
900136e8:	f04f 0350 	mov.w	r3, #80	; 0x50
900136ec:	f383 8811 	msr	BASEPRI, r3
900136f0:	f3bf 8f6f 	isb	sy
900136f4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900136f8:	e7fe      	b.n	900136f8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
900136fa:	2000      	movs	r0, #0
	}
900136fc:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900136fe:	1d21      	adds	r1, r4, #4
90013700:	4608      	mov	r0, r1
90013702:	9101      	str	r1, [sp, #4]
90013704:	f7fd fed6 	bl	900114b4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90013708:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
9001370a:	4b0a      	ldr	r3, [pc, #40]	; (90013734 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001370c:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
90013710:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90013712:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90013714:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
90013716:	681a      	ldr	r2, [r3, #0]
90013718:	4290      	cmp	r0, r2
9001371a:	d900      	bls.n	9001371e <xTaskPriorityDisinherit+0x6e>
9001371c:	6018      	str	r0, [r3, #0]
9001371e:	4b06      	ldr	r3, [pc, #24]	; (90013738 <xTaskPriorityDisinherit+0x88>)
90013720:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90013724:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90013728:	f7fd fe9c 	bl	90011464 <vListInsertEnd>
					xReturn = pdTRUE;
9001372c:	2001      	movs	r0, #1
		return xReturn;
9001372e:	e7d9      	b.n	900136e4 <xTaskPriorityDisinherit+0x34>
90013730:	240277b8 	.word	0x240277b8
90013734:	24027c34 	.word	0x24027c34
90013738:	240277c4 	.word	0x240277c4

9001373c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9001373c:	2800      	cmp	r0, #0
9001373e:	d040      	beq.n	900137c2 <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
90013740:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
90013742:	b530      	push	{r4, r5, lr}
90013744:	4604      	mov	r4, r0
90013746:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
90013748:	b153      	cbz	r3, 90013760 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9001374a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9001374c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001374e:	4281      	cmp	r1, r0
90013750:	bf38      	it	cc
90013752:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90013754:	2b01      	cmp	r3, #1
90013756:	d101      	bne.n	9001375c <vTaskPriorityDisinheritAfterTimeout+0x20>
90013758:	428a      	cmp	r2, r1
9001375a:	d10a      	bne.n	90013772 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
9001375c:	b003      	add	sp, #12
9001375e:	bd30      	pop	{r4, r5, pc}
90013760:	f04f 0350 	mov.w	r3, #80	; 0x50
90013764:	f383 8811 	msr	BASEPRI, r3
90013768:	f3bf 8f6f 	isb	sy
9001376c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90013770:	e7fe      	b.n	90013770 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
90013772:	4b19      	ldr	r3, [pc, #100]	; (900137d8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90013774:	681b      	ldr	r3, [r3, #0]
90013776:	42a3      	cmp	r3, r4
90013778:	d024      	beq.n	900137c4 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001377a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9001377c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001377e:	2b00      	cmp	r3, #0
90013780:	db02      	blt.n	90013788 <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90013782:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
90013786:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90013788:	4d14      	ldr	r5, [pc, #80]	; (900137dc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9001378a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001378e:	6961      	ldr	r1, [r4, #20]
90013790:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90013794:	4299      	cmp	r1, r3
90013796:	d1e1      	bne.n	9001375c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90013798:	1d21      	adds	r1, r4, #4
9001379a:	4608      	mov	r0, r1
9001379c:	9101      	str	r1, [sp, #4]
9001379e:	f7fd fe89 	bl	900114b4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
900137a2:	4b0f      	ldr	r3, [pc, #60]	; (900137e0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
900137a4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
900137a6:	681a      	ldr	r2, [r3, #0]
900137a8:	9901      	ldr	r1, [sp, #4]
900137aa:	4290      	cmp	r0, r2
900137ac:	d900      	bls.n	900137b0 <vTaskPriorityDisinheritAfterTimeout+0x74>
900137ae:	6018      	str	r0, [r3, #0]
900137b0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900137b4:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
900137b8:	b003      	add	sp, #12
900137ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
900137be:	f7fd be51 	b.w	90011464 <vListInsertEnd>
900137c2:	4770      	bx	lr
900137c4:	f04f 0350 	mov.w	r3, #80	; 0x50
900137c8:	f383 8811 	msr	BASEPRI, r3
900137cc:	f3bf 8f6f 	isb	sy
900137d0:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
900137d4:	e7fe      	b.n	900137d4 <vTaskPriorityDisinheritAfterTimeout+0x98>
900137d6:	bf00      	nop
900137d8:	240277b8 	.word	0x240277b8
900137dc:	240277c4 	.word	0x240277c4
900137e0:	24027c34 	.word	0x24027c34

900137e4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
900137e4:	4b04      	ldr	r3, [pc, #16]	; (900137f8 <pvTaskIncrementMutexHeldCount+0x14>)
900137e6:	681a      	ldr	r2, [r3, #0]
900137e8:	b11a      	cbz	r2, 900137f2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
900137ea:	6819      	ldr	r1, [r3, #0]
900137ec:	6d0a      	ldr	r2, [r1, #80]	; 0x50
900137ee:	3201      	adds	r2, #1
900137f0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
900137f2:	6818      	ldr	r0, [r3, #0]
	}
900137f4:	4770      	bx	lr
900137f6:	bf00      	nop
900137f8:	240277b8 	.word	0x240277b8

900137fc <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
900137fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013800:	4e22      	ldr	r6, [pc, #136]	; (9001388c <prvSwitchTimerLists+0x90>)
90013802:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
90013804:	f8df 908c 	ldr.w	r9, [pc, #140]	; 90013894 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
90013808:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9001380c:	e00d      	b.n	9001382a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9001380e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90013810:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90013812:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90013814:	1d25      	adds	r5, r4, #4
90013816:	4628      	mov	r0, r5
90013818:	f7fd fe4c 	bl	900114b4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9001381c:	6a23      	ldr	r3, [r4, #32]
9001381e:	4620      	mov	r0, r4
90013820:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90013822:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90013826:	075b      	lsls	r3, r3, #29
90013828:	d40a      	bmi.n	90013840 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9001382a:	6833      	ldr	r3, [r6, #0]
9001382c:	681a      	ldr	r2, [r3, #0]
9001382e:	2a00      	cmp	r2, #0
90013830:	d1ed      	bne.n	9001380e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90013832:	4a17      	ldr	r2, [pc, #92]	; (90013890 <prvSwitchTimerLists+0x94>)
90013834:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
90013836:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
90013838:	6031      	str	r1, [r6, #0]
}
9001383a:	b005      	add	sp, #20
9001383c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90013840:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90013842:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90013844:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
90013846:	429f      	cmp	r7, r3
90013848:	d205      	bcs.n	90013856 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001384a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9001384c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001384e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90013850:	f7fd fe18 	bl	90011484 <vListInsert>
90013854:	e7e9      	b.n	9001382a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
90013856:	f8d9 3000 	ldr.w	r3, [r9]
9001385a:	b16b      	cbz	r3, 90013878 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9001385c:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9001385e:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90013862:	f7ff fecf 	bl	90013604 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90013866:	2300      	movs	r3, #0
90013868:	4669      	mov	r1, sp
9001386a:	f8d9 0000 	ldr.w	r0, [r9]
9001386e:	461a      	mov	r2, r3
90013870:	f7fe f998 	bl	90011ba4 <xQueueGenericSend>
				configASSERT( xResult );
90013874:	2800      	cmp	r0, #0
90013876:	d1d8      	bne.n	9001382a <prvSwitchTimerLists+0x2e>
90013878:	f04f 0350 	mov.w	r3, #80	; 0x50
9001387c:	f383 8811 	msr	BASEPRI, r3
90013880:	f3bf 8f6f 	isb	sy
90013884:	f3bf 8f4f 	dsb	sy
90013888:	e7fe      	b.n	90013888 <prvSwitchTimerLists+0x8c>
9001388a:	bf00      	nop
9001388c:	24027cb4 	.word	0x24027cb4
90013890:	24027cb8 	.word	0x24027cb8
90013894:	24027dd8 	.word	0x24027dd8

90013898 <prvTimerTask>:
{
90013898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001389c:	4e9f      	ldr	r6, [pc, #636]	; (90013b1c <prvTimerTask+0x284>)
9001389e:	b089      	sub	sp, #36	; 0x24
900138a0:	4d9f      	ldr	r5, [pc, #636]	; (90013b20 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
900138a2:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
900138a6:	4c9f      	ldr	r4, [pc, #636]	; (90013b24 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
900138a8:	6833      	ldr	r3, [r6, #0]
900138aa:	681f      	ldr	r7, [r3, #0]
900138ac:	2f00      	cmp	r7, #0
900138ae:	f000 80b2 	beq.w	90013a16 <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900138b2:	68db      	ldr	r3, [r3, #12]
900138b4:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
900138b6:	f7ff fccd 	bl	90013254 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900138ba:	f7ff fce3 	bl	90013284 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900138be:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900138c0:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900138c2:	4290      	cmp	r0, r2
900138c4:	f0c0 80af 	bcc.w	90013a26 <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900138c8:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
900138ca:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900138cc:	f200 80d0 	bhi.w	90013a70 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
900138d0:	f7ff fcc8 	bl	90013264 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900138d4:	6832      	ldr	r2, [r6, #0]
900138d6:	68d2      	ldr	r2, [r2, #12]
900138d8:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900138dc:	f10b 0804 	add.w	r8, fp, #4
900138e0:	4640      	mov	r0, r8
900138e2:	f7fd fde7 	bl	900114b4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900138e6:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
900138ea:	0741      	lsls	r1, r0, #29
900138ec:	f100 80d0 	bmi.w	90013a90 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900138f0:	f020 0001 	bic.w	r0, r0, #1
900138f4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900138f8:	f8db 3020 	ldr.w	r3, [fp, #32]
900138fc:	4658      	mov	r0, fp
900138fe:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90013900:	2200      	movs	r2, #0
90013902:	4669      	mov	r1, sp
90013904:	6820      	ldr	r0, [r4, #0]
90013906:	f7fe fc39 	bl	9001217c <xQueueReceive>
9001390a:	2800      	cmp	r0, #0
9001390c:	d0cc      	beq.n	900138a8 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9001390e:	9b00      	ldr	r3, [sp, #0]
90013910:	2b00      	cmp	r3, #0
90013912:	db77      	blt.n	90013a04 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
90013914:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
90013916:	697b      	ldr	r3, [r7, #20]
90013918:	b113      	cbz	r3, 90013920 <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9001391a:	1d38      	adds	r0, r7, #4
9001391c:	f7fd fdca 	bl	900114b4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90013920:	f7ff fcb0 	bl	90013284 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90013924:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90013926:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
90013928:	4298      	cmp	r0, r3
9001392a:	f0c0 8083 	bcc.w	90013a34 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
9001392e:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90013930:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
90013934:	2b09      	cmp	r3, #9
90013936:	d8e3      	bhi.n	90013900 <prvTimerTask+0x68>
90013938:	e8df f003 	tbb	[pc, r3]
9001393c:	54050505 	.word	0x54050505
90013940:	05055b3e 	.word	0x05055b3e
90013944:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90013946:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001394a:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001394c:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90013950:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90013952:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90013956:	9b01      	ldr	r3, [sp, #4]
90013958:	1899      	adds	r1, r3, r2
9001395a:	bf2c      	ite	cs
9001395c:	2001      	movcs	r0, #1
9001395e:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90013960:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90013962:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90013964:	f200 8086 	bhi.w	90013a74 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90013968:	eba8 0303 	sub.w	r3, r8, r3
9001396c:	429a      	cmp	r2, r3
9001396e:	f200 80c0 	bhi.w	90013af2 <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90013972:	6a3b      	ldr	r3, [r7, #32]
90013974:	4638      	mov	r0, r7
90013976:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90013978:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9001397c:	075b      	lsls	r3, r3, #29
9001397e:	d5bf      	bpl.n	90013900 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90013980:	6823      	ldr	r3, [r4, #0]
90013982:	b183      	cbz	r3, 900139a6 <prvTimerTask+0x10e>
		xMessage.xMessageID = xCommandID;
90013984:	2200      	movs	r2, #0
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90013986:	69bb      	ldr	r3, [r7, #24]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90013988:	9706      	str	r7, [sp, #24]
		xMessage.xMessageID = xCommandID;
9001398a:	9204      	str	r2, [sp, #16]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9001398c:	9a01      	ldr	r2, [sp, #4]
9001398e:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90013990:	9305      	str	r3, [sp, #20]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90013992:	f7ff fe37 	bl	90013604 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90013996:	2300      	movs	r3, #0
90013998:	a904      	add	r1, sp, #16
9001399a:	6820      	ldr	r0, [r4, #0]
9001399c:	461a      	mov	r2, r3
9001399e:	f7fe f901 	bl	90011ba4 <xQueueGenericSend>
							configASSERT( xResult );
900139a2:	2800      	cmp	r0, #0
900139a4:	d1ac      	bne.n	90013900 <prvTimerTask+0x68>
900139a6:	f04f 0350 	mov.w	r3, #80	; 0x50
900139aa:	f383 8811 	msr	BASEPRI, r3
900139ae:	f3bf 8f6f 	isb	sy
900139b2:	f3bf 8f4f 	dsb	sy
900139b6:	e7fe      	b.n	900139b6 <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900139b8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900139bc:	f043 0301 	orr.w	r3, r3, #1
900139c0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
900139c4:	9b01      	ldr	r3, [sp, #4]
900139c6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900139c8:	2b00      	cmp	r3, #0
900139ca:	f000 809e 	beq.w	90013b0a <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
900139ce:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900139d0:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900139d2:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
900139d4:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900139d6:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900139d8:	d856      	bhi.n	90013a88 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900139da:	4b53      	ldr	r3, [pc, #332]	; (90013b28 <prvTimerTask+0x290>)
900139dc:	6818      	ldr	r0, [r3, #0]
900139de:	f7fd fd51 	bl	90011484 <vListInsert>
	return xProcessTimerNow;
900139e2:	e78d      	b.n	90013900 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900139e4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900139e8:	f023 0301 	bic.w	r3, r3, #1
900139ec:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
900139f0:	e786      	b.n	90013900 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
900139f2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900139f6:	079a      	lsls	r2, r3, #30
900139f8:	d572      	bpl.n	90013ae0 <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900139fa:	f023 0301 	bic.w	r3, r3, #1
900139fe:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
90013a02:	e77d      	b.n	90013900 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90013a04:	9b01      	ldr	r3, [sp, #4]
90013a06:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
90013a0a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90013a0c:	9b00      	ldr	r3, [sp, #0]
90013a0e:	2b00      	cmp	r3, #0
90013a10:	f6ff af76 	blt.w	90013900 <prvTimerTask+0x68>
90013a14:	e77e      	b.n	90013914 <prvTimerTask+0x7c>
	vTaskSuspendAll();
90013a16:	f7ff fc1d 	bl	90013254 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90013a1a:	f7ff fc33 	bl	90013284 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90013a1e:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90013a20:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90013a22:	4282      	cmp	r2, r0
90013a24:	d909      	bls.n	90013a3a <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
90013a26:	f7ff fee9 	bl	900137fc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
90013a2a:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90013a2e:	f7ff fc19 	bl	90013264 <xTaskResumeAll>
90013a32:	e765      	b.n	90013900 <prvTimerTask+0x68>
		prvSwitchTimerLists();
90013a34:	f7ff fee2 	bl	900137fc <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
90013a38:	e779      	b.n	9001392e <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90013a3a:	4b3b      	ldr	r3, [pc, #236]	; (90013b28 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90013a3c:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90013a40:	681a      	ldr	r2, [r3, #0]
90013a42:	6812      	ldr	r2, [r2, #0]
90013a44:	fab2 f282 	clz	r2, r2
90013a48:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90013a4a:	eba7 010a 	sub.w	r1, r7, sl
90013a4e:	6820      	ldr	r0, [r4, #0]
90013a50:	f7fe ff8c 	bl	9001296c <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90013a54:	f7ff fc06 	bl	90013264 <xTaskResumeAll>
90013a58:	2800      	cmp	r0, #0
90013a5a:	f47f af51 	bne.w	90013900 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90013a5e:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
90013a62:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
90013a66:	f3bf 8f4f 	dsb	sy
90013a6a:	f3bf 8f6f 	isb	sy
90013a6e:	e747      	b.n	90013900 <prvTimerTask+0x68>
90013a70:	2200      	movs	r2, #0
90013a72:	e7ea      	b.n	90013a4a <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90013a74:	4543      	cmp	r3, r8
90013a76:	d902      	bls.n	90013a7e <prvTimerTask+0x1e6>
90013a78:	2800      	cmp	r0, #0
90013a7a:	f43f af7a 	beq.w	90013972 <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90013a7e:	1d39      	adds	r1, r7, #4
90013a80:	6830      	ldr	r0, [r6, #0]
90013a82:	f7fd fcff 	bl	90011484 <vListInsert>
	return xProcessTimerNow;
90013a86:	e73b      	b.n	90013900 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90013a88:	6830      	ldr	r0, [r6, #0]
90013a8a:	f7fd fcfb 	bl	90011484 <vListInsert>
90013a8e:	e737      	b.n	90013900 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90013a90:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90013a94:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90013a98:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
90013a9a:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90013a9c:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90013aa0:	d322      	bcc.n	90013ae8 <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90013aa2:	ebaa 0307 	sub.w	r3, sl, r7
90013aa6:	429a      	cmp	r2, r3
90013aa8:	d829      	bhi.n	90013afe <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
90013aaa:	6823      	ldr	r3, [r4, #0]
90013aac:	b17b      	cbz	r3, 90013ace <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
90013aae:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90013ab0:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90013ab2:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
90013ab6:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90013ab8:	f7ff fda4 	bl	90013604 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90013abc:	2300      	movs	r3, #0
90013abe:	a904      	add	r1, sp, #16
90013ac0:	6820      	ldr	r0, [r4, #0]
90013ac2:	461a      	mov	r2, r3
90013ac4:	f7fe f86e 	bl	90011ba4 <xQueueGenericSend>
			configASSERT( xResult );
90013ac8:	2800      	cmp	r0, #0
90013aca:	f47f af15 	bne.w	900138f8 <prvTimerTask+0x60>
90013ace:	f04f 0350 	mov.w	r3, #80	; 0x50
90013ad2:	f383 8811 	msr	BASEPRI, r3
90013ad6:	f3bf 8f6f 	isb	sy
90013ada:	f3bf 8f4f 	dsb	sy
90013ade:	e7fe      	b.n	90013ade <prvTimerTask+0x246>
							vPortFree( pxTimer );
90013ae0:	4638      	mov	r0, r7
90013ae2:	f7fd fc4d 	bl	90011380 <vPortFree>
90013ae6:	e70b      	b.n	90013900 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90013ae8:	4641      	mov	r1, r8
90013aea:	6830      	ldr	r0, [r6, #0]
90013aec:	f7fd fcca 	bl	90011484 <vListInsert>
	return xProcessTimerNow;
90013af0:	e702      	b.n	900138f8 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90013af2:	4b0d      	ldr	r3, [pc, #52]	; (90013b28 <prvTimerTask+0x290>)
90013af4:	1d39      	adds	r1, r7, #4
90013af6:	6818      	ldr	r0, [r3, #0]
90013af8:	f7fd fcc4 	bl	90011484 <vListInsert>
	return xProcessTimerNow;
90013afc:	e700      	b.n	90013900 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90013afe:	4b0a      	ldr	r3, [pc, #40]	; (90013b28 <prvTimerTask+0x290>)
90013b00:	4641      	mov	r1, r8
90013b02:	6818      	ldr	r0, [r3, #0]
90013b04:	f7fd fcbe 	bl	90011484 <vListInsert>
	return xProcessTimerNow;
90013b08:	e6f6      	b.n	900138f8 <prvTimerTask+0x60>
90013b0a:	f04f 0350 	mov.w	r3, #80	; 0x50
90013b0e:	f383 8811 	msr	BASEPRI, r3
90013b12:	f3bf 8f6f 	isb	sy
90013b16:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90013b1a:	e7fe      	b.n	90013b1a <prvTimerTask+0x282>
90013b1c:	24027cb4 	.word	0x24027cb4
90013b20:	24027d84 	.word	0x24027d84
90013b24:	24027dd8 	.word	0x24027dd8
90013b28:	24027cb8 	.word	0x24027cb8

90013b2c <xTimerCreateTimerTask>:
{
90013b2c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90013b2e:	4c23      	ldr	r4, [pc, #140]	; (90013bbc <xTimerCreateTimerTask+0x90>)
{
90013b30:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
90013b32:	f7fd fd3f 	bl	900115b4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
90013b36:	6825      	ldr	r5, [r4, #0]
90013b38:	b335      	cbz	r5, 90013b88 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90013b3a:	f7fd fd5d 	bl	900115f8 <vPortExitCritical>
	if( xTimerQueue != NULL )
90013b3e:	6823      	ldr	r3, [r4, #0]
90013b40:	b1cb      	cbz	r3, 90013b76 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90013b42:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90013b44:	aa07      	add	r2, sp, #28
90013b46:	a906      	add	r1, sp, #24
90013b48:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90013b4a:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90013b4c:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90013b50:	f7fd fb4c 	bl	900111ec <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90013b54:	4623      	mov	r3, r4
90013b56:	9a07      	ldr	r2, [sp, #28]
90013b58:	9500      	str	r5, [sp, #0]
90013b5a:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90013b5e:	e9cd 1001 	strd	r1, r0, [sp, #4]
90013b62:	4917      	ldr	r1, [pc, #92]	; (90013bc0 <xTimerCreateTimerTask+0x94>)
90013b64:	4817      	ldr	r0, [pc, #92]	; (90013bc4 <xTimerCreateTimerTask+0x98>)
90013b66:	f7ff fa2f 	bl	90012fc8 <xTaskCreateStatic>
90013b6a:	4b17      	ldr	r3, [pc, #92]	; (90013bc8 <xTimerCreateTimerTask+0x9c>)
90013b6c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90013b6e:	b110      	cbz	r0, 90013b76 <xTimerCreateTimerTask+0x4a>
}
90013b70:	2001      	movs	r0, #1
90013b72:	b009      	add	sp, #36	; 0x24
90013b74:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013b76:	f04f 0350 	mov.w	r3, #80	; 0x50
90013b7a:	f383 8811 	msr	BASEPRI, r3
90013b7e:	f3bf 8f6f 	isb	sy
90013b82:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
90013b86:	e7fe      	b.n	90013b86 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90013b88:	4f10      	ldr	r7, [pc, #64]	; (90013bcc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90013b8a:	4e11      	ldr	r6, [pc, #68]	; (90013bd0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90013b8c:	4638      	mov	r0, r7
90013b8e:	f7fd fc59 	bl	90011444 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90013b92:	4630      	mov	r0, r6
90013b94:	f7fd fc56 	bl	90011444 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90013b98:	4a0e      	ldr	r2, [pc, #56]	; (90013bd4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90013b9a:	9500      	str	r5, [sp, #0]
90013b9c:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90013b9e:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90013ba0:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90013ba2:	4a0d      	ldr	r2, [pc, #52]	; (90013bd8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90013ba4:	4b0d      	ldr	r3, [pc, #52]	; (90013bdc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
90013ba6:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90013ba8:	4a0d      	ldr	r2, [pc, #52]	; (90013be0 <xTimerCreateTimerTask+0xb4>)
90013baa:	f7fd fea5 	bl	900118f8 <xQueueGenericCreateStatic>
90013bae:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90013bb0:	2800      	cmp	r0, #0
90013bb2:	d0c2      	beq.n	90013b3a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90013bb4:	490b      	ldr	r1, [pc, #44]	; (90013be4 <xTimerCreateTimerTask+0xb8>)
90013bb6:	f7fe feb1 	bl	9001291c <vQueueAddToRegistry>
90013bba:	e7be      	b.n	90013b3a <xTimerCreateTimerTask+0xe>
90013bbc:	24027dd8 	.word	0x24027dd8
90013bc0:	9002fda8 	.word	0x9002fda8
90013bc4:	90013899 	.word	0x90013899
90013bc8:	24027ddc 	.word	0x24027ddc
90013bcc:	24027d5c 	.word	0x24027d5c
90013bd0:	24027d70 	.word	0x24027d70
90013bd4:	24027cb4 	.word	0x24027cb4
90013bd8:	24027cb8 	.word	0x24027cb8
90013bdc:	24027d88 	.word	0x24027d88
90013be0:	24027cbc 	.word	0x24027cbc
90013be4:	9002fda0 	.word	0x9002fda0

90013be8 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCbCr420_ARGB_ConvertBlocks(uint8_t *pInBuffer, 
                                      uint8_t *pOutBuffer, 
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{  
90013be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int32_t c_red, c_blue, c_green;
  
  uint8_t *pOutAddr, *pOutAddr2;
  uint8_t *pChrom, *pLum;
  
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90013bec:	4c82      	ldr	r4, [pc, #520]	; (90013df8 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x210>)
{  
90013bee:	b091      	sub	sp, #68	; 0x44
90013bf0:	9008      	str	r0, [sp, #32]
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90013bf2:	fba4 0303 	umull	r0, r3, r4, r3
{  
90013bf6:	910d      	str	r1, [sp, #52]	; 0x34
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90013bf8:	0a19      	lsrs	r1, r3, #8
{  
90013bfa:	920b      	str	r2, [sp, #44]	; 0x2c
  currentMCU = BlockIndex;
  

  while(currentMCU < (numberMCU + BlockIndex))
90013bfc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90013c00:	ee07 1a90 	vmov	s15, r1
  while(currentMCU < (numberMCU + BlockIndex))
90013c04:	4293      	cmp	r3, r2
90013c06:	930f      	str	r3, [sp, #60]	; 0x3c
90013c08:	f240 80f1 	bls.w	90013dee <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x206>
  {
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90013c0c:	4b7b      	ldr	r3, [pc, #492]	; (90013dfc <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x214>)
90013c0e:	f8df 81fc 	ldr.w	r8, [pc, #508]	; 90013e0c <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x224>
    
    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);
    
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013c12:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90013c14:	6a59      	ldr	r1, [r3, #36]	; 0x24
      if(i == 8)
      {
        pLum = pInBuffer + 128;
      }
      
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013c16:	691b      	ldr	r3, [r3, #16]
90013c18:	f8df 91f4 	ldr.w	r9, [pc, #500]	; 90013e10 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x228>
90013c1c:	9305      	str	r3, [sp, #20]
          pLum += 64;                      
        }

        pLum = pLum - 128 + 16;
        
        refline += 2*JPEG_ConvertorParams.ScaledWidth;          
90013c1e:	0053      	lsls	r3, r2, #1
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013c20:	920a      	str	r2, [sp, #40]	; 0x28
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90013c22:	910e      	str	r1, [sp, #56]	; 0x38
        refline += 2*JPEG_ConvertorParams.ScaledWidth;          
90013c24:	930c      	str	r3, [sp, #48]	; 0x30
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90013c26:	9a08      	ldr	r2, [sp, #32]
    currentMCU++;
90013c28:	f04f 0e02 	mov.w	lr, #2
90013c2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
90013c2e:	f502 7080 	add.w	r0, r2, #256	; 0x100
90013c32:	9204      	str	r2, [sp, #16]
90013c34:	010b      	lsls	r3, r1, #4
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90013c36:	3101      	adds	r1, #1
90013c38:	9006      	str	r0, [sp, #24]
90013c3a:	980e      	ldr	r0, [sp, #56]	; 0x38
90013c3c:	910b      	str	r1, [sp, #44]	; 0x2c
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013c3e:	990a      	ldr	r1, [sp, #40]	; 0x28
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90013c40:	fbb3 f2f0 	udiv	r2, r3, r0
    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);
90013c44:	fb00 3312 	mls	r3, r0, r2, r3
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013c48:	fb01 f202 	mul.w	r2, r1, r2
90013c4c:	005b      	lsls	r3, r3, #1
90013c4e:	eb03 1302 	add.w	r3, r3, r2, lsl #4
90013c52:	9301      	str	r3, [sp, #4]
    for(i= 0; i <  16; i+=2)
90013c54:	e009      	b.n	90013c6a <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x82>
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013c56:	9b05      	ldr	r3, [sp, #20]
90013c58:	9a01      	ldr	r2, [sp, #4]
90013c5a:	4293      	cmp	r3, r2
90013c5c:	d80f      	bhi.n	90013c7e <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x96>
    for(i= 0; i <  16; i+=2)
90013c5e:	f1be 0f10 	cmp.w	lr, #16
90013c62:	f000 80bb 	beq.w	90013ddc <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1f4>
90013c66:	f10e 0e02 	add.w	lr, lr, #2
      if(i == 8)
90013c6a:	f1be 0f0a 	cmp.w	lr, #10
90013c6e:	d1f2      	bne.n	90013c56 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x6e>
        pLum = pInBuffer + 128;
90013c70:	9b08      	ldr	r3, [sp, #32]
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013c72:	9a01      	ldr	r2, [sp, #4]
90013c74:	3380      	adds	r3, #128	; 0x80
90013c76:	9304      	str	r3, [sp, #16]
90013c78:	9b05      	ldr	r3, [sp, #20]
90013c7a:	4293      	cmp	r3, r2
90013c7c:	d9f3      	bls.n	90013c66 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x7e>
        pOutAddr = pOutBuffer + refline;
90013c7e:	9a01      	ldr	r2, [sp, #4]
        pOutAddr2 = pOutAddr + JPEG_ConvertorParams.ScaledWidth;
90013c80:	9906      	ldr	r1, [sp, #24]
        pOutAddr = pOutBuffer + refline;
90013c82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
        pOutAddr2 = pOutAddr + JPEG_ConvertorParams.ScaledWidth;
90013c84:	9103      	str	r1, [sp, #12]
        pOutAddr = pOutBuffer + refline;
90013c86:	4413      	add	r3, r2
        pOutAddr2 = pOutAddr + JPEG_ConvertorParams.ScaledWidth;
90013c88:	990a      	ldr	r1, [sp, #40]	; 0x28
90013c8a:	9a04      	ldr	r2, [sp, #16]
90013c8c:	1859      	adds	r1, r3, r1
90013c8e:	f103 0c10 	add.w	ip, r3, #16
90013c92:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
90013c96:	3330      	adds	r3, #48	; 0x30
90013c98:	4696      	mov	lr, r2
90013c9a:	9102      	str	r1, [sp, #8]
        for(k= 0; k<2; k++)
90013c9c:	9307      	str	r3, [sp, #28]
90013c9e:	9b03      	ldr	r3, [sp, #12]
90013ca0:	f1ac 0510 	sub.w	r5, ip, #16
          for(j=0; j < 8; j+=2)
90013ca4:	4674      	mov	r4, lr
    currentMCU++;
90013ca6:	9e02      	ldr	r6, [sp, #8]
90013ca8:	1e5f      	subs	r7, r3, #1
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013caa:	f817 1f01 	ldrb.w	r1, [r7, #1]!
            pOutAddr += JPEG_BYTES_PER_PIXEL * 2;
90013cae:	3504      	adds	r5, #4
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013cb0:	4b53      	ldr	r3, [pc, #332]	; (90013e00 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x218>)
          for(j=0; j < 8; j+=2)
90013cb2:	3402      	adds	r4, #2
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013cb4:	f897 2040 	ldrb.w	r2, [r7, #64]	; 0x40
            pOutAddr2 += JPEG_BYTES_PER_PIXEL * 2;
90013cb8:	3604      	adds	r6, #4
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013cba:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
          for(j=0; j < 8; j+=2)
90013cbe:	4565      	cmp	r5, ip
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013cc0:	4b50      	ldr	r3, [pc, #320]	; (90013e04 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x21c>)
            ycomp = (int32_t)(*(pLum +j));
90013cc2:	f814 ac02 	ldrb.w	sl, [r4, #-2]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013cc6:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013cca:	f858 3022 	ldr.w	r3, [r8, r2, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013cce:	4449      	add	r1, r9
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013cd0:	4403      	add	r3, r0
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013cd2:	484d      	ldr	r0, [pc, #308]	; (90013e08 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x220>)
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013cd4:	eb09 4323 	add.w	r3, r9, r3, asr #16
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013cd8:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013cdc:	eb01 020a 	add.w	r2, r1, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013ce0:	4448      	add	r0, r9
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013ce2:	f892 b100 	ldrb.w	fp, [r2, #256]	; 0x100
90013ce6:	eb03 020a 	add.w	r2, r3, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013cea:	4482      	add	sl, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013cec:	f892 2100 	ldrb.w	r2, [r2, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013cf0:	f89a a100 	ldrb.w	sl, [sl, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013cf4:	ea4f 0292 	mov.w	r2, r2, lsr #2
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013cf8:	ea4f 0ada 	mov.w	sl, sl, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013cfc:	ea4f 1242 	mov.w	r2, r2, lsl #5
90013d00:	ea42 22ca 	orr.w	r2, r2, sl, lsl #11
90013d04:	ea42 02db 	orr.w	r2, r2, fp, lsr #3
            *(__IO uint16_t *)pOutAddr = 
90013d08:	f825 2c04 	strh.w	r2, [r5, #-4]
            ycomp = (int32_t)(*(pLum +j +1));
90013d0c:	f814 ac01 	ldrb.w	sl, [r4, #-1]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d10:	eb03 020a 	add.w	r2, r3, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d14:	eb00 0b0a 	add.w	fp, r0, sl
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013d18:	448a      	add	sl, r1
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d1a:	f892 2100 	ldrb.w	r2, [r2, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d1e:	f89b b100 	ldrb.w	fp, [fp, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d22:	ea4f 0292 	mov.w	r2, r2, lsr #2
90013d26:	f89a a100 	ldrb.w	sl, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d2a:	ea4f 0bdb 	mov.w	fp, fp, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d2e:	ea4f 1242 	mov.w	r2, r2, lsl #5
90013d32:	ea42 22cb 	orr.w	r2, r2, fp, lsl #11
90013d36:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
            *((__IO uint16_t *)(pOutAddr + 2)) = 
90013d3a:	f825 2c02 	strh.w	r2, [r5, #-2]
            ycomp = (int32_t)(*(pLum +j +8));
90013d3e:	f894 a006 	ldrb.w	sl, [r4, #6]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d42:	eb03 020a 	add.w	r2, r3, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d46:	eb00 0b0a 	add.w	fp, r0, sl
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013d4a:	448a      	add	sl, r1
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d4c:	f892 2100 	ldrb.w	r2, [r2, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d50:	f89b b100 	ldrb.w	fp, [fp, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d54:	ea4f 0292 	mov.w	r2, r2, lsr #2
90013d58:	f89a a100 	ldrb.w	sl, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d5c:	ea4f 0bdb 	mov.w	fp, fp, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d60:	ea4f 1242 	mov.w	r2, r2, lsl #5
90013d64:	ea42 22cb 	orr.w	r2, r2, fp, lsl #11
90013d68:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
            *(__IO uint16_t *)pOutAddr2 = 
90013d6c:	f826 2c04 	strh.w	r2, [r6, #-4]
            ycomp = (int32_t)(*(pLum +j +8 +1));
90013d70:	79e2      	ldrb	r2, [r4, #7]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d72:	4413      	add	r3, r2
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d74:	4410      	add	r0, r2
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);         
90013d76:	4411      	add	r1, r2
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d78:	f893 3100 	ldrb.w	r3, [r3, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d7c:	f890 2100 	ldrb.w	r2, [r0, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d80:	ea4f 0393 	mov.w	r3, r3, lsr #2
90013d84:	f891 1100 	ldrb.w	r1, [r1, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d88:	ea4f 02d2 	mov.w	r2, r2, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d8c:	ea4f 1343 	mov.w	r3, r3, lsl #5
90013d90:	ea43 23c2 	orr.w	r3, r3, r2, lsl #11
90013d94:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
            *((__IO uint16_t *)(pOutAddr2 +2)) = 
90013d98:	f826 3c02 	strh.w	r3, [r6, #-2]
          for(j=0; j < 8; j+=2)
90013d9c:	d185      	bne.n	90013caa <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0xc2>
            pOutAddr2 += JPEG_BYTES_PER_PIXEL * 2;
90013d9e:	9b02      	ldr	r3, [sp, #8]
        for(k= 0; k<2; k++)
90013da0:	f105 0c10 	add.w	ip, r5, #16
          pLum += 64;                      
90013da4:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
            pOutAddr2 += JPEG_BYTES_PER_PIXEL * 2;
90013da8:	3310      	adds	r3, #16
90013daa:	9302      	str	r3, [sp, #8]
            pChrom++;
90013dac:	9b03      	ldr	r3, [sp, #12]
90013dae:	3304      	adds	r3, #4
90013db0:	9303      	str	r3, [sp, #12]
        for(k= 0; k<2; k++)
90013db2:	9b07      	ldr	r3, [sp, #28]
90013db4:	4563      	cmp	r3, ip
90013db6:	f47f af72 	bne.w	90013c9e <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0xb6>
            pChrom++;
90013dba:	9b06      	ldr	r3, [sp, #24]
90013dbc:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90013dc0:	3308      	adds	r3, #8
        refline += 2*JPEG_ConvertorParams.ScaledWidth;          
90013dc2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    for(i= 0; i <  16; i+=2)
90013dc4:	f1be 0f10 	cmp.w	lr, #16
            pChrom++;
90013dc8:	9306      	str	r3, [sp, #24]
        pLum = pLum - 128 + 16;
90013dca:	9b04      	ldr	r3, [sp, #16]
90013dcc:	f103 0310 	add.w	r3, r3, #16
90013dd0:	9304      	str	r3, [sp, #16]
        refline += 2*JPEG_ConvertorParams.ScaledWidth;          
90013dd2:	9b01      	ldr	r3, [sp, #4]
90013dd4:	4413      	add	r3, r2
90013dd6:	9301      	str	r3, [sp, #4]
    for(i= 0; i <  16; i+=2)
90013dd8:	f47f af45 	bne.w	90013c66 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x7e>
      }
    }   
    
    pInBuffer +=  YCBCR_420_BLOCK_SIZE;
90013ddc:	9b08      	ldr	r3, [sp, #32]
  while(currentMCU < (numberMCU + BlockIndex))
90013dde:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    pInBuffer +=  YCBCR_420_BLOCK_SIZE;
90013de0:	f503 73c0 	add.w	r3, r3, #384	; 0x180
90013de4:	9308      	str	r3, [sp, #32]
  while(currentMCU < (numberMCU + BlockIndex))
90013de6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013de8:	4293      	cmp	r3, r2
90013dea:	f47f af1c 	bne.w	90013c26 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x3e>
  }
  return numberMCU;
}
90013dee:	ee17 0a90 	vmov	r0, s15
90013df2:	b011      	add	sp, #68	; 0x44
90013df4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013df8:	aaaaaaab 	.word	0xaaaaaaab
90013dfc:	24028de0 	.word	0x24028de0
90013e00:	240281e0 	.word	0x240281e0
90013e04:	24027de0 	.word	0x24027de0
90013e08:	240289e0 	.word	0x240289e0
90013e0c:	240285e0 	.word	0x240285e0
90013e10:	9002fdb0 	.word	0x9002fdb0

90013e14 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCbCr422_ARGB_ConvertBlocks(uint8_t *pInBuffer, 
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{  
90013e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int32_t c_red, c_blue, c_green;
  
  uint8_t *pOutAddr;
  uint8_t *pChrom, *pLum;
  
  numberMCU = DataCount / YCBCR_422_BLOCK_SIZE;
90013e18:	0a1c      	lsrs	r4, r3, #8
{  
90013e1a:	b08d      	sub	sp, #52	; 0x34
  currentMCU = BlockIndex;
  

  while(currentMCU < (numberMCU + BlockIndex))
90013e1c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
  numberMCU = DataCount / YCBCR_422_BLOCK_SIZE;
90013e20:	ee07 4a90 	vmov	s15, r4
{  
90013e24:	9208      	str	r2, [sp, #32]
  while(currentMCU < (numberMCU + BlockIndex))
90013e26:	429a      	cmp	r2, r3
{  
90013e28:	9007      	str	r0, [sp, #28]
90013e2a:	9109      	str	r1, [sp, #36]	; 0x24
  while(currentMCU < (numberMCU + BlockIndex))
90013e2c:	930b      	str	r3, [sp, #44]	; 0x2c
90013e2e:	f080 814a 	bcs.w	900140c6 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2b2>
  {
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
90013e32:	4ba7      	ldr	r3, [pc, #668]	; (900140d0 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2bc>)
90013e34:	4da7      	ldr	r5, [pc, #668]	; (900140d4 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2c0>)
90013e36:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90013e38:	f8df 929c 	ldr.w	r9, [pc, #668]	; 900140d8 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2c4>
90013e3c:	920a      	str	r2, [sp, #40]	; 0x28
    
    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);
    
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013e3e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    
    pLum = pInBuffer;
    
    for(i= 0; i <  8; i++)
    {
       if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013e40:	691b      	ldr	r3, [r3, #16]
90013e42:	f8df a298 	ldr.w	sl, [pc, #664]	; 900140dc <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2c8>
90013e46:	f8df b298 	ldr.w	fp, [pc, #664]	; 900140e0 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2cc>
90013e4a:	f8df 8298 	ldr.w	r8, [pc, #664]	; 900140e4 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2d0>
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013e4e:	9206      	str	r2, [sp, #24]
       if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013e50:	9301      	str	r3, [sp, #4]
90013e52:	e008      	b.n	90013e66 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x52>
        
        refline += JPEG_ConvertorParams.ScaledWidth;          
      }
    }   
    
    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
90013e54:	9b07      	ldr	r3, [sp, #28]
  while(currentMCU < (numberMCU + BlockIndex))
90013e56:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
90013e58:	f503 7380 	add.w	r3, r3, #256	; 0x100
90013e5c:	9307      	str	r3, [sp, #28]
  while(currentMCU < (numberMCU + BlockIndex))
90013e5e:	9b08      	ldr	r3, [sp, #32]
90013e60:	4293      	cmp	r3, r2
90013e62:	f000 8130 	beq.w	900140c6 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2b2>
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
90013e66:	9a07      	ldr	r2, [sp, #28]
90013e68:	9908      	ldr	r1, [sp, #32]
90013e6a:	f102 0080 	add.w	r0, r2, #128	; 0x80
90013e6e:	010b      	lsls	r3, r1, #4
90013e70:	3101      	adds	r1, #1
    currentMCU++;
90013e72:	e9cd 0202 	strd	r0, r2, [sp, #8]
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
90013e76:	980a      	ldr	r0, [sp, #40]	; 0x28
90013e78:	9108      	str	r1, [sp, #32]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013e7a:	9906      	ldr	r1, [sp, #24]
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
90013e7c:	fbb3 f2f0 	udiv	r2, r3, r0
    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);
90013e80:	fb00 3312 	mls	r3, r0, r2, r3
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013e84:	fb01 f202 	mul.w	r2, r1, r2
90013e88:	005b      	lsls	r3, r3, #1
90013e8a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
90013e8e:	9300      	str	r3, [sp, #0]
    currentMCU++;
90013e90:	2308      	movs	r3, #8
90013e92:	9305      	str	r3, [sp, #20]
       if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013e94:	e9dd 2300 	ldrd	r2, r3, [sp]
90013e98:	4293      	cmp	r3, r2
90013e9a:	d9db      	bls.n	90013e54 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x40>
        pOutAddr = pOutBuffer + refline;
90013e9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013e9e:	4413      	add	r3, r2
        for(k= 0; k<2; k++)
90013ea0:	9a03      	ldr	r2, [sp, #12]
90013ea2:	f102 0140 	add.w	r1, r2, #64	; 0x40
90013ea6:	9a02      	ldr	r2, [sp, #8]
90013ea8:	f103 0020 	add.w	r0, r3, #32
90013eac:	3204      	adds	r2, #4
90013eae:	9004      	str	r0, [sp, #16]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013eb0:	f892 003c 	ldrb.w	r0, [r2, #60]	; 0x3c
90013eb4:	3310      	adds	r3, #16
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013eb6:	f812 4c04 	ldrb.w	r4, [r2, #-4]
        for(k= 0; k<2; k++)
90013eba:	3140      	adds	r1, #64	; 0x40
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013ebc:	f859 7020 	ldr.w	r7, [r9, r0, lsl #2]
        for(k= 0; k<2; k++)
90013ec0:	3204      	adds	r2, #4
            ycomp = (int32_t)(*(pLum +j));
90013ec2:	f811 cc80 	ldrb.w	ip, [r1, #-128]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013ec6:	f855 6024 	ldr.w	r6, [r5, r4, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013eca:	4447      	add	r7, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013ecc:	f85b 4024 	ldr.w	r4, [fp, r4, lsl #2]
90013ed0:	f85a 0020 	ldr.w	r0, [sl, r0, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013ed4:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013ed6:	4420      	add	r0, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013ed8:	eb07 040c 	add.w	r4, r7, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013edc:	eb08 4020 	add.w	r0, r8, r0, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013ee0:	f894 e100 	ldrb.w	lr, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013ee4:	eb06 040c 	add.w	r4, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013ee8:	4484      	add	ip, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013eea:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013eee:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
90013ef2:	f89c c100 	ldrb.w	ip, [ip, #256]	; 0x100
90013ef6:	08e4      	lsrs	r4, r4, #3
90013ef8:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90013efc:	ea44 24ce 	orr.w	r4, r4, lr, lsl #11
90013f00:	ea44 144c 	orr.w	r4, r4, ip, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013f04:	f823 4c10 	strh.w	r4, [r3, #-16]
            ycomp = (int32_t)(*(pLum +j +1));
90013f08:	f811 4c7f 	ldrb.w	r4, [r1, #-127]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);         
90013f0c:	4426      	add	r6, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013f0e:	4427      	add	r7, r4
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013f10:	4404      	add	r4, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013f12:	f897 7100 	ldrb.w	r7, [r7, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013f16:	f896 0100 	ldrb.w	r0, [r6, #256]	; 0x100
90013f1a:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013f1e:	08fe      	lsrs	r6, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013f20:	08c0      	lsrs	r0, r0, #3
90013f22:	08a4      	lsrs	r4, r4, #2
90013f24:	ea40 20c6 	orr.w	r0, r0, r6, lsl #11
90013f28:	ea40 1044 	orr.w	r0, r0, r4, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) = 
90013f2c:	f823 0c0e 	strh.w	r0, [r3, #-14]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013f30:	f892 0039 	ldrb.w	r0, [r2, #57]	; 0x39
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013f34:	f812 4c07 	ldrb.w	r4, [r2, #-7]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013f38:	f859 7020 	ldr.w	r7, [r9, r0, lsl #2]
            ycomp = (int32_t)(*(pLum +j));
90013f3c:	f811 cc7e 	ldrb.w	ip, [r1, #-126]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013f40:	f855 6024 	ldr.w	r6, [r5, r4, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013f44:	4447      	add	r7, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013f46:	f85b 4024 	ldr.w	r4, [fp, r4, lsl #2]
90013f4a:	f85a 0020 	ldr.w	r0, [sl, r0, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013f4e:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013f50:	4420      	add	r0, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013f52:	eb07 040c 	add.w	r4, r7, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013f56:	eb08 4020 	add.w	r0, r8, r0, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013f5a:	f894 e100 	ldrb.w	lr, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013f5e:	eb06 040c 	add.w	r4, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013f62:	4484      	add	ip, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013f64:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013f68:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
90013f6c:	f89c c100 	ldrb.w	ip, [ip, #256]	; 0x100
90013f70:	08e4      	lsrs	r4, r4, #3
90013f72:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90013f76:	ea44 24ce 	orr.w	r4, r4, lr, lsl #11
90013f7a:	ea44 144c 	orr.w	r4, r4, ip, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013f7e:	f823 4c0c 	strh.w	r4, [r3, #-12]
            ycomp = (int32_t)(*(pLum +j +1));
90013f82:	f811 4c7d 	ldrb.w	r4, [r1, #-125]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);         
90013f86:	4426      	add	r6, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013f88:	4427      	add	r7, r4
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013f8a:	4404      	add	r4, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013f8c:	f897 7100 	ldrb.w	r7, [r7, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013f90:	f896 0100 	ldrb.w	r0, [r6, #256]	; 0x100
90013f94:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013f98:	08fe      	lsrs	r6, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013f9a:	08c0      	lsrs	r0, r0, #3
90013f9c:	08a4      	lsrs	r4, r4, #2
90013f9e:	ea40 20c6 	orr.w	r0, r0, r6, lsl #11
90013fa2:	ea40 1044 	orr.w	r0, r0, r4, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) = 
90013fa6:	f823 0c0a 	strh.w	r0, [r3, #-10]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013faa:	f812 4c06 	ldrb.w	r4, [r2, #-6]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013fae:	f892 003a 	ldrb.w	r0, [r2, #58]	; 0x3a
            ycomp = (int32_t)(*(pLum +j));
90013fb2:	f811 cc7c 	ldrb.w	ip, [r1, #-124]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013fb6:	f859 7020 	ldr.w	r7, [r9, r0, lsl #2]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013fba:	f855 6024 	ldr.w	r6, [r5, r4, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013fbe:	f85a 0020 	ldr.w	r0, [sl, r0, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013fc2:	4447      	add	r7, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013fc4:	f85b 4024 	ldr.w	r4, [fp, r4, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013fc8:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013fca:	4420      	add	r0, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013fcc:	eb07 040c 	add.w	r4, r7, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013fd0:	eb08 4020 	add.w	r0, r8, r0, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013fd4:	f894 e100 	ldrb.w	lr, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013fd8:	eb06 040c 	add.w	r4, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013fdc:	4484      	add	ip, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013fde:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013fe2:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
90013fe6:	f89c c100 	ldrb.w	ip, [ip, #256]	; 0x100
90013fea:	08e4      	lsrs	r4, r4, #3
90013fec:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90013ff0:	ea44 24ce 	orr.w	r4, r4, lr, lsl #11
90013ff4:	ea44 144c 	orr.w	r4, r4, ip, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013ff8:	f823 4c08 	strh.w	r4, [r3, #-8]
            ycomp = (int32_t)(*(pLum +j +1));
90013ffc:	f811 4c7b 	ldrb.w	r4, [r1, #-123]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);         
90014000:	4426      	add	r6, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014002:	4427      	add	r7, r4
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014004:	4404      	add	r4, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014006:	f897 7100 	ldrb.w	r7, [r7, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001400a:	f896 0100 	ldrb.w	r0, [r6, #256]	; 0x100
9001400e:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014012:	08fe      	lsrs	r6, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014014:	08c0      	lsrs	r0, r0, #3
90014016:	08a4      	lsrs	r4, r4, #2
90014018:	ea40 20c6 	orr.w	r0, r0, r6, lsl #11
9001401c:	ea40 1044 	orr.w	r0, r0, r4, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) = 
90014020:	f823 0c06 	strh.w	r0, [r3, #-6]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90014024:	f812 0c05 	ldrb.w	r0, [r2, #-5]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90014028:	f892 403b 	ldrb.w	r4, [r2, #59]	; 0x3b
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001402c:	f85b c020 	ldr.w	ip, [fp, r0, lsl #2]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90014030:	f855 6020 	ldr.w	r6, [r5, r0, lsl #2]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90014034:	f859 7024 	ldr.w	r7, [r9, r4, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014038:	f85a 0024 	ldr.w	r0, [sl, r4, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9001403c:	4446      	add	r6, r8
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001403e:	4447      	add	r7, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014040:	4460      	add	r0, ip
            ycomp = (int32_t)(*(pLum +j));
90014042:	f811 cc7a 	ldrb.w	ip, [r1, #-122]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014046:	eb07 040c 	add.w	r4, r7, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001404a:	eb08 4020 	add.w	r0, r8, r0, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001404e:	f894 e100 	ldrb.w	lr, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90014052:	eb06 040c 	add.w	r4, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014056:	4484      	add	ip, r0
90014058:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001405c:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014060:	f89c c100 	ldrb.w	ip, [ip, #256]	; 0x100
90014064:	08e4      	lsrs	r4, r4, #3
90014066:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
9001406a:	ea44 24ce 	orr.w	r4, r4, lr, lsl #11
9001406e:	ea44 144c 	orr.w	r4, r4, ip, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90014072:	f823 4c04 	strh.w	r4, [r3, #-4]
            ycomp = (int32_t)(*(pLum +j +1));
90014076:	f811 4c79 	ldrb.w	r4, [r1, #-121]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);         
9001407a:	4426      	add	r6, r4
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001407c:	4427      	add	r7, r4
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001407e:	4404      	add	r4, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014080:	f897 7100 	ldrb.w	r7, [r7, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014084:	f896 0100 	ldrb.w	r0, [r6, #256]	; 0x100
90014088:	f894 4100 	ldrb.w	r4, [r4, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001408c:	08fe      	lsrs	r6, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001408e:	08c0      	lsrs	r0, r0, #3
90014090:	08a4      	lsrs	r4, r4, #2
90014092:	ea40 20c6 	orr.w	r0, r0, r6, lsl #11
90014096:	ea40 1044 	orr.w	r0, r0, r4, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) = 
9001409a:	f823 0c02 	strh.w	r0, [r3, #-2]
        for(k= 0; k<2; k++)
9001409e:	9804      	ldr	r0, [sp, #16]
900140a0:	4283      	cmp	r3, r0
900140a2:	f47f af05 	bne.w	90013eb0 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x9c>
            pChrom++;
900140a6:	9b02      	ldr	r3, [sp, #8]
        refline += JPEG_ConvertorParams.ScaledWidth;          
900140a8:	9a06      	ldr	r2, [sp, #24]
            pChrom++;
900140aa:	3308      	adds	r3, #8
900140ac:	9302      	str	r3, [sp, #8]
        pLum = pLum - 128 + 8;
900140ae:	9b03      	ldr	r3, [sp, #12]
900140b0:	3308      	adds	r3, #8
900140b2:	9303      	str	r3, [sp, #12]
        refline += JPEG_ConvertorParams.ScaledWidth;          
900140b4:	9b00      	ldr	r3, [sp, #0]
900140b6:	4413      	add	r3, r2
900140b8:	9300      	str	r3, [sp, #0]
    for(i= 0; i <  8; i++)
900140ba:	9b05      	ldr	r3, [sp, #20]
900140bc:	3b01      	subs	r3, #1
900140be:	9305      	str	r3, [sp, #20]
900140c0:	f47f aee8 	bne.w	90013e94 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x80>
900140c4:	e6c6      	b.n	90013e54 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x40>
  }
  return numberMCU;
}
900140c6:	ee17 0a90 	vmov	r0, s15
900140ca:	b00d      	add	sp, #52	; 0x34
900140cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900140d0:	24028de0 	.word	0x24028de0
900140d4:	24027de0 	.word	0x24027de0
900140d8:	240289e0 	.word	0x240289e0
900140dc:	240285e0 	.word	0x240285e0
900140e0:	240281e0 	.word	0x240281e0
900140e4:	9002fdb0 	.word	0x9002fdb0

900140e8 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCbCr444_ARGB_ConvertBlocks(uint8_t *pInBuffer, 
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{  
900140e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int32_t c_red, c_blue, c_green;
  
  uint8_t *pOutAddr;
  uint8_t *pChrom, *pLum;
  
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
900140ec:	4cb6      	ldr	r4, [pc, #728]	; (900143c8 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2e0>)
{  
900140ee:	b089      	sub	sp, #36	; 0x24
900140f0:	e9cd 0204 	strd	r0, r2, [sp, #16]
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
900140f4:	fba4 0303 	umull	r0, r3, r4, r3
{  
900140f8:	9102      	str	r1, [sp, #8]
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
900140fa:	09d9      	lsrs	r1, r3, #7
  currentMCU = BlockIndex;
  

  while(currentMCU < (numberMCU + BlockIndex))
900140fc:	eb02 13d3 	add.w	r3, r2, r3, lsr #7
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
90014100:	ee07 1a90 	vmov	s15, r1
  while(currentMCU < (numberMCU + BlockIndex))
90014104:	429a      	cmp	r2, r3
90014106:	9306      	str	r3, [sp, #24]
90014108:	f080 8158 	bcs.w	900143bc <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2d4>
  {

    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9001410c:	4baf      	ldr	r3, [pc, #700]	; (900143cc <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2e4>)
#elif (JPEG_RGB_FORMAT == JPEG_RGB565)  
            
            ycomp = (int32_t)(*(pLum +j));
          
            *(__IO uint16_t *)pOutAddr = 
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001410e:	4cb0      	ldr	r4, [pc, #704]	; (900143d0 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2e8>)
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90014110:	6a5a      	ldr	r2, [r3, #36]	; 0x24
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90014112:	f8df e2c4 	ldr.w	lr, [pc, #708]	; 900143d8 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2f0>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90014116:	9207      	str	r2, [sp, #28]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90014118:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
9001411a:	691b      	ldr	r3, [r3, #16]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
9001411c:	f8df c2bc 	ldr.w	ip, [pc, #700]	; 900143dc <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2f4>
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014120:	48ac      	ldr	r0, [pc, #688]	; (900143d4 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2ec>)
90014122:	f8df 82bc 	ldr.w	r8, [pc, #700]	; 900143e0 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2f8>
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90014126:	9203      	str	r2, [sp, #12]
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90014128:	9300      	str	r3, [sp, #0]
9001412a:	e007      	b.n	9001413c <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x54>

        refline += JPEG_ConvertorParams.ScaledWidth;          
      }
    }   
    
    pInBuffer +=  YCBCR_444_BLOCK_SIZE;
9001412c:	9b04      	ldr	r3, [sp, #16]
9001412e:	33c0      	adds	r3, #192	; 0xc0
90014130:	9304      	str	r3, [sp, #16]
  while(currentMCU < (numberMCU + BlockIndex))
90014132:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
90014136:	4293      	cmp	r3, r2
90014138:	f000 8140 	beq.w	900143bc <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2d4>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9001413c:	9e05      	ldr	r6, [sp, #20]
9001413e:	9f07      	ldr	r7, [sp, #28]
90014140:	00f5      	lsls	r5, r6, #3
90014142:	3601      	adds	r6, #1
90014144:	9904      	ldr	r1, [sp, #16]
90014146:	9605      	str	r6, [sp, #20]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90014148:	9e03      	ldr	r6, [sp, #12]
9001414a:	f101 0340 	add.w	r3, r1, #64	; 0x40
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9001414e:	fbb5 f2f7 	udiv	r2, r5, r7
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
90014152:	fb07 5512 	mls	r5, r7, r2, r5
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90014156:	fb06 f202 	mul.w	r2, r6, r2
9001415a:	006d      	lsls	r5, r5, #1
9001415c:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
    currentMCU++;   
90014160:	2508      	movs	r5, #8
90014162:	9501      	str	r5, [sp, #4]
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90014164:	9d00      	ldr	r5, [sp, #0]
90014166:	4295      	cmp	r5, r2
90014168:	d9e0      	bls.n	9001412c <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x44>
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
9001416a:	f893 7040 	ldrb.w	r7, [r3, #64]	; 0x40
          pLum += 8;
9001416e:	3108      	adds	r1, #8
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90014170:	f893 9000 	ldrb.w	r9, [r3]
            pChrom++;
90014174:	3308      	adds	r3, #8
            ycomp = (int32_t)(*(pLum +j));
90014176:	f811 5c08 	ldrb.w	r5, [r1, #-8]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001417a:	f850 a027 	ldr.w	sl, [r0, r7, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001417e:	f85e 6027 	ldr.w	r6, [lr, r7, lsl #2]
90014182:	4425      	add	r5, r4
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90014184:	f85c 7029 	ldr.w	r7, [ip, r9, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014188:	f858 9029 	ldr.w	r9, [r8, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001418c:	442e      	add	r6, r5
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
9001418e:	442f      	add	r7, r5
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014190:	44d1      	add	r9, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014192:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014196:	eb05 4929 	add.w	r9, r5, r9, asr #16
9001419a:	f897 5100 	ldrb.w	r5, [r7, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001419e:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900141a0:	f899 7100 	ldrb.w	r7, [r9, #256]	; 0x100
900141a4:	08ed      	lsrs	r5, r5, #3
900141a6:	08bf      	lsrs	r7, r7, #2
900141a8:	ea45 26c6 	orr.w	r6, r5, r6, lsl #11
            *(__IO uint16_t *)pOutAddr = 
900141ac:	9d02      	ldr	r5, [sp, #8]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900141ae:	ea46 1647 	orr.w	r6, r6, r7, lsl #5
            *(__IO uint16_t *)pOutAddr = 
900141b2:	52ae      	strh	r6, [r5, r2]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
900141b4:	f893 7039 	ldrb.w	r7, [r3, #57]	; 0x39
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900141b8:	f813 9c07 	ldrb.w	r9, [r3, #-7]
            ycomp = (int32_t)(*(pLum +j));
900141bc:	f811 5c07 	ldrb.w	r5, [r1, #-7]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
900141c0:	f850 a027 	ldr.w	sl, [r0, r7, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900141c4:	4425      	add	r5, r4
900141c6:	f85e 6027 	ldr.w	r6, [lr, r7, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
900141ca:	f85c 7029 	ldr.w	r7, [ip, r9, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
900141ce:	f858 9029 	ldr.w	r9, [r8, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900141d2:	442e      	add	r6, r5
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
900141d4:	442f      	add	r7, r5
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
900141d6:	44d1      	add	r9, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900141d8:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900141dc:	eb05 4929 	add.w	r9, r5, r9, asr #16
900141e0:	f897 5100 	ldrb.w	r5, [r7, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900141e4:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900141e6:	f899 7100 	ldrb.w	r7, [r9, #256]	; 0x100
900141ea:	08ed      	lsrs	r5, r5, #3
900141ec:	08bf      	lsrs	r7, r7, #2
900141ee:	ea45 26c6 	orr.w	r6, r5, r6, lsl #11
        pOutAddr = pOutBuffer+ refline;
900141f2:	9d02      	ldr	r5, [sp, #8]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900141f4:	ea46 1647 	orr.w	r6, r6, r7, lsl #5
        pOutAddr = pOutBuffer+ refline;
900141f8:	4415      	add	r5, r2
            *(__IO uint16_t *)pOutAddr = 
900141fa:	806e      	strh	r6, [r5, #2]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
900141fc:	f893 a03a 	ldrb.w	sl, [r3, #58]	; 0x3a
            ycomp = (int32_t)(*(pLum +j));
90014200:	f811 7c06 	ldrb.w	r7, [r1, #-6]
        refline += JPEG_ConvertorParams.ScaledWidth;          
90014204:	9e03      	ldr	r6, [sp, #12]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014206:	4427      	add	r7, r4
90014208:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
        refline += JPEG_ConvertorParams.ScaledWidth;          
9001420c:	4432      	add	r2, r6
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
9001420e:	f813 6c06 	ldrb.w	r6, [r3, #-6]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014212:	44b9      	add	r9, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014214:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90014218:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001421c:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014220:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90014224:	44ba      	add	sl, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014226:	ea4f 09d9 	mov.w	r9, r9, lsr #3
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001422a:	445e      	add	r6, fp
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001422c:	eb07 4626 	add.w	r6, r7, r6, asr #16
90014230:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
90014234:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
90014238:	08ff      	lsrs	r7, r7, #3
9001423a:	08b6      	lsrs	r6, r6, #2
9001423c:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
90014240:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90014244:	f8a5 9004 	strh.w	r9, [r5, #4]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90014248:	f893 a03b 	ldrb.w	sl, [r3, #59]	; 0x3b
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
9001424c:	f813 6c05 	ldrb.w	r6, [r3, #-5]
            ycomp = (int32_t)(*(pLum +j));
90014250:	f811 7c05 	ldrb.w	r7, [r1, #-5]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014254:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014258:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
9001425c:	4427      	add	r7, r4
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
9001425e:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014262:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014266:	44b9      	add	r9, r7
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90014268:	44ba      	add	sl, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001426a:	445e      	add	r6, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001426c:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014270:	eb07 4626 	add.w	r6, r7, r6, asr #16
90014274:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014278:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001427c:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
90014280:	08ff      	lsrs	r7, r7, #3
90014282:	08b6      	lsrs	r6, r6, #2
90014284:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
90014288:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr = 
9001428c:	f8a5 9006 	strh.w	r9, [r5, #6]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90014290:	f893 a03c 	ldrb.w	sl, [r3, #60]	; 0x3c
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90014294:	f813 6c04 	ldrb.w	r6, [r3, #-4]
            ycomp = (int32_t)(*(pLum +j));
90014298:	f811 7c04 	ldrb.w	r7, [r1, #-4]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001429c:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900142a0:	4427      	add	r7, r4
900142a2:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
900142a6:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
900142aa:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900142ae:	44b9      	add	r9, r7
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
900142b0:	44ba      	add	sl, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
900142b2:	445e      	add	r6, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900142b4:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900142b8:	eb07 4626 	add.w	r6, r7, r6, asr #16
900142bc:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900142c0:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900142c4:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
900142c8:	08ff      	lsrs	r7, r7, #3
900142ca:	08b6      	lsrs	r6, r6, #2
900142cc:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
900142d0:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr = 
900142d4:	f8a5 9008 	strh.w	r9, [r5, #8]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
900142d8:	f893 a03d 	ldrb.w	sl, [r3, #61]	; 0x3d
            ycomp = (int32_t)(*(pLum +j));
900142dc:	f811 7c03 	ldrb.w	r7, [r1, #-3]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900142e0:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
900142e4:	4427      	add	r7, r4
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900142e6:	f813 6c03 	ldrb.w	r6, [r3, #-3]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
900142ea:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900142ee:	44b9      	add	r9, r7
900142f0:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
900142f4:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
900142f8:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900142fc:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90014300:	44ba      	add	sl, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014302:	445e      	add	r6, fp
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014304:	eb07 4626 	add.w	r6, r7, r6, asr #16
90014308:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
9001430c:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
90014310:	08ff      	lsrs	r7, r7, #3
90014312:	08b6      	lsrs	r6, r6, #2
90014314:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
90014318:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr = 
9001431c:	f8a5 900a 	strh.w	r9, [r5, #10]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90014320:	f893 a03e 	ldrb.w	sl, [r3, #62]	; 0x3e
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90014324:	f813 6c02 	ldrb.w	r6, [r3, #-2]
            ycomp = (int32_t)(*(pLum +j));
90014328:	f811 7c02 	ldrb.w	r7, [r1, #-2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001432c:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014330:	4427      	add	r7, r4
90014332:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90014336:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001433a:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001433e:	44b9      	add	r9, r7
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90014340:	44ba      	add	sl, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014342:	445e      	add	r6, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014344:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014348:	eb07 4626 	add.w	r6, r7, r6, asr #16
9001434c:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014350:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014354:	08ff      	lsrs	r7, r7, #3
90014356:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
9001435a:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
9001435e:	08b6      	lsrs	r6, r6, #2
90014360:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90014364:	f8a5 900c 	strh.w	r9, [r5, #12]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90014368:	f893 a03f 	ldrb.w	sl, [r3, #63]	; 0x3f
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
9001436c:	f813 6c01 	ldrb.w	r6, [r3, #-1]
            ycomp = (int32_t)(*(pLum +j));
90014370:	f811 7c01 	ldrb.w	r7, [r1, #-1]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014374:	f85e 902a 	ldr.w	r9, [lr, sl, lsl #2]
90014378:	4427      	add	r7, r4
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001437a:	f850 b02a 	ldr.w	fp, [r0, sl, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
9001437e:	f85c a026 	ldr.w	sl, [ip, r6, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90014382:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014386:	44b9      	add	r9, r7
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90014388:	44ba      	add	sl, r7
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001438a:	445e      	add	r6, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001438c:	f899 9100 	ldrb.w	r9, [r9, #256]	; 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90014390:	eb07 4626 	add.w	r6, r7, r6, asr #16
90014394:	f89a 7100 	ldrb.w	r7, [sl, #256]	; 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90014398:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001439c:	f896 6100 	ldrb.w	r6, [r6, #256]	; 0x100
900143a0:	08ff      	lsrs	r7, r7, #3
900143a2:	08b6      	lsrs	r6, r6, #2
900143a4:	ea47 29c9 	orr.w	r9, r7, r9, lsl #11
900143a8:	ea49 1946 	orr.w	r9, r9, r6, lsl #5
            *(__IO uint16_t *)pOutAddr = 
900143ac:	f8a5 900e 	strh.w	r9, [r5, #14]
    for(i= 0; i <  8; i++)
900143b0:	9d01      	ldr	r5, [sp, #4]
900143b2:	3d01      	subs	r5, #1
900143b4:	9501      	str	r5, [sp, #4]
900143b6:	f47f aed5 	bne.w	90014164 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x7c>
900143ba:	e6b7      	b.n	9001412c <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x44>
  }
  return numberMCU;
}
900143bc:	ee17 0a90 	vmov	r0, s15
900143c0:	b009      	add	sp, #36	; 0x24
900143c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900143c6:	bf00      	nop
900143c8:	aaaaaaab 	.word	0xaaaaaaab
900143cc:	24028de0 	.word	0x24028de0
900143d0:	9002fdb0 	.word	0x9002fdb0
900143d4:	240285e0 	.word	0x240285e0
900143d8:	240289e0 	.word	0x240289e0
900143dc:	24027de0 	.word	0x24027de0
900143e0:	240281e0 	.word	0x240281e0

900143e4 <JPEG_MCU_Gray_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_Gray_ARGB_ConvertBlocks(uint8_t *pInBuffer, 
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
900143e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  
  numberMCU = DataCount / GRAY_444_BLOCK_SIZE;
  currentMCU = BlockIndex;
  
  while(currentMCU < (numberMCU + BlockIndex))
900143e8:	eb02 1a93 	add.w	sl, r2, r3, lsr #6
  numberMCU = DataCount / GRAY_444_BLOCK_SIZE;
900143ec:	099c      	lsrs	r4, r3, #6
  while(currentMCU < (numberMCU + BlockIndex))
900143ee:	4552      	cmp	r2, sl
  numberMCU = DataCount / GRAY_444_BLOCK_SIZE;
900143f0:	ee07 4a90 	vmov	s15, r4
  while(currentMCU < (numberMCU + BlockIndex))
900143f4:	f080 8088 	bcs.w	90014508 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x124>
  {
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
900143f8:	4b45      	ldr	r3, [pc, #276]	; (90014510 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x12c>)
    
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
    
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
900143fa:	e9d3 9809 	ldrd	r9, r8, [r3, #36]	; 0x24
    pLum = pInBuffer;
    
    for(i= 0; i <  8; i++)
    { 
      pOutAddr = pOutBuffer + refline;
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
900143fe:	691e      	ldr	r6, [r3, #16]
90014400:	e003      	b.n	9001440a <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x26>
  while(currentMCU < (numberMCU + BlockIndex))
90014402:	4552      	cmp	r2, sl

        refline += JPEG_ConvertorParams.ScaledWidth;        
      }
    }
    
    pInBuffer +=  GRAY_444_BLOCK_SIZE;    
90014404:	f100 0040 	add.w	r0, r0, #64	; 0x40
  while(currentMCU < (numberMCU + BlockIndex))
90014408:	d07e      	beq.n	90014508 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x124>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9001440a:	00d5      	lsls	r5, r2, #3
    currentMCU++;
9001440c:	4604      	mov	r4, r0
9001440e:	f04f 0e08 	mov.w	lr, #8
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90014412:	3201      	adds	r2, #1
90014414:	fbb5 f7f9 	udiv	r7, r5, r9
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
90014418:	fb09 5317 	mls	r3, r9, r7, r5
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9001441c:	fb08 f707 	mul.w	r7, r8, r7
90014420:	005b      	lsls	r3, r3, #1
90014422:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90014426:	429e      	cmp	r6, r3
90014428:	d9eb      	bls.n	90014402 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x1e>
          ySample =   (uint32_t)(*pLum);
9001442a:	f894 c000 	ldrb.w	ip, [r4]
      pOutAddr = pOutBuffer + refline;
9001442e:	18cd      	adds	r5, r1, r3
          pLum++;
90014430:	3408      	adds	r4, #8
    for(i= 0; i <  8; i++)
90014432:	f1be 0e01 	subs.w	lr, lr, #1
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90014436:	ea4f 07dc 	mov.w	r7, ip, lsr #3
9001443a:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
9001443e:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
90014442:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
90014446:	ea47 070c 	orr.w	r7, r7, ip
9001444a:	52cf      	strh	r7, [r1, r3]
        refline += JPEG_ConvertorParams.ScaledWidth;        
9001444c:	4443      	add	r3, r8
          ySample =   (uint32_t)(*pLum);
9001444e:	f814 cc07 	ldrb.w	ip, [r4, #-7]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90014452:	ea4f 07dc 	mov.w	r7, ip, lsr #3
90014456:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
9001445a:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
9001445e:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
90014462:	ea47 070c 	orr.w	r7, r7, ip
90014466:	806f      	strh	r7, [r5, #2]
          ySample =   (uint32_t)(*pLum);
90014468:	f814 cc06 	ldrb.w	ip, [r4, #-6]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
9001446c:	ea4f 07dc 	mov.w	r7, ip, lsr #3
90014470:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90014474:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
90014478:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
9001447c:	ea47 070c 	orr.w	r7, r7, ip
90014480:	80af      	strh	r7, [r5, #4]
          ySample =   (uint32_t)(*pLum);
90014482:	f814 cc05 	ldrb.w	ip, [r4, #-5]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90014486:	ea4f 07dc 	mov.w	r7, ip, lsr #3
9001448a:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
9001448e:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
90014492:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
90014496:	ea47 070c 	orr.w	r7, r7, ip
9001449a:	80ef      	strh	r7, [r5, #6]
          ySample =   (uint32_t)(*pLum);
9001449c:	f814 cc04 	ldrb.w	ip, [r4, #-4]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
900144a0:	ea4f 07dc 	mov.w	r7, ip, lsr #3
900144a4:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900144a8:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
900144ac:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
900144b0:	ea47 070c 	orr.w	r7, r7, ip
900144b4:	812f      	strh	r7, [r5, #8]
          ySample =   (uint32_t)(*pLum);
900144b6:	f814 cc03 	ldrb.w	ip, [r4, #-3]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
900144ba:	ea4f 07dc 	mov.w	r7, ip, lsr #3
900144be:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900144c2:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
900144c6:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
900144ca:	ea47 070c 	orr.w	r7, r7, ip
900144ce:	816f      	strh	r7, [r5, #10]
          ySample =   (uint32_t)(*pLum);
900144d0:	f814 cc02 	ldrb.w	ip, [r4, #-2]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
900144d4:	ea4f 07dc 	mov.w	r7, ip, lsr #3
900144d8:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900144dc:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
900144e0:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
900144e4:	ea47 070c 	orr.w	r7, r7, ip
900144e8:	81af      	strh	r7, [r5, #12]
          ySample =   (uint32_t)(*pLum);
900144ea:	f814 cc01 	ldrb.w	ip, [r4, #-1]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
900144ee:	ea4f 07dc 	mov.w	r7, ip, lsr #3
900144f2:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900144f6:	ea4f 2bc7 	mov.w	fp, r7, lsl #11
900144fa:	ea4b 1c4c 	orr.w	ip, fp, ip, lsl #5
900144fe:	ea47 070c 	orr.w	r7, r7, ip
90014502:	81ef      	strh	r7, [r5, #14]
    for(i= 0; i <  8; i++)
90014504:	d18f      	bne.n	90014426 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x42>
90014506:	e77c      	b.n	90014402 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x1e>
  }
  return numberMCU;
}
90014508:	ee17 0a90 	vmov	r0, s15
9001450c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014510:	24028de0 	.word	0x24028de0

90014514 <JPEG_MCU_YCCK_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCCK_ARGB_ConvertBlocks(uint8_t *pInBuffer, 
                                      uint8_t *pOutBuffer, 
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{  
90014514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  
  int32_t c_red, c_blue, c_green;
  
  uint8_t *pOutAddr, *pChrom;
  
  numberMCU = DataCount / CMYK_444_BLOCK_SIZE;
90014518:	0a1c      	lsrs	r4, r3, #8
{  
9001451a:	b083      	sub	sp, #12
  currentMCU = BlockIndex;
  

  while(currentMCU < (numberMCU + BlockIndex))
9001451c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
  numberMCU = DataCount / CMYK_444_BLOCK_SIZE;
90014520:	ee07 4a90 	vmov	s15, r4
  while(currentMCU < (numberMCU + BlockIndex))
90014524:	429a      	cmp	r2, r3
90014526:	9301      	str	r3, [sp, #4]
90014528:	f080 8128 	bcs.w	9001477c <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x268>
  {

    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9001452c:	4b96      	ldr	r3, [pc, #600]	; (90014788 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x274>)
        pOutAddr = pOutBuffer+ refline;        

          for(j=0; j < 8; j++)
          {           
            color_k = (int32_t)(*(pChrom + 192));
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001452e:	f8df c25c 	ldr.w	ip, [pc, #604]	; 9001478c <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x278>
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90014532:	691f      	ldr	r7, [r3, #16]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90014534:	e9d3 a909 	ldrd	sl, r9, [r3, #36]	; 0x24
90014538:	e006      	b.n	90014548 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x34>

        refline += JPEG_ConvertorParams.ScaledWidth;          
      }
    }   
    
    pInBuffer +=  CMYK_444_BLOCK_SIZE;
9001453a:	9a00      	ldr	r2, [sp, #0]
9001453c:	f500 7080 	add.w	r0, r0, #256	; 0x100
  while(currentMCU < (numberMCU + BlockIndex))
90014540:	9b01      	ldr	r3, [sp, #4]
90014542:	429a      	cmp	r2, r3
90014544:	f000 811a 	beq.w	9001477c <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x268>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90014548:	00d3      	lsls	r3, r2, #3
    currentMCU++;
9001454a:	f04f 0808 	mov.w	r8, #8
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9001454e:	3201      	adds	r2, #1
90014550:	fbb3 f4fa 	udiv	r4, r3, sl
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
90014554:	fb0a 3514 	mls	r5, sl, r4, r3
    currentMCU++;
90014558:	4603      	mov	r3, r0
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9001455a:	fb09 f404 	mul.w	r4, r9, r4
9001455e:	006d      	lsls	r5, r5, #1
    currentMCU++;
90014560:	9200      	str	r2, [sp, #0]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90014562:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90014566:	42af      	cmp	r7, r5
90014568:	d9e7      	bls.n	9001453a <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x26>
            color_k = (int32_t)(*(pChrom + 192));
9001456a:	f893 b0c0 	ldrb.w	fp, [r3, #192]	; 0xc0
        pOutAddr = pOutBuffer+ refline;        
9001456e:	194e      	adds	r6, r1, r5
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014570:	f893 e040 	ldrb.w	lr, [r3, #64]	; 0x40
    for(i= 0; i <  8; i++)
90014574:	f1b8 0801 	subs.w	r8, r8, #1
            pChrom++;
90014578:	f103 0308 	add.w	r3, r3, #8
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001457c:	fb1e fe0b 	smulbb	lr, lr, fp
90014580:	fbac 4e0e 	umull	r4, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014584:	f813 4c08 	ldrb.w	r4, [r3, #-8]
90014588:	fb14 f40b 	smulbb	r4, r4, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001458c:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014590:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014594:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014598:	ea4f 2494 	mov.w	r4, r4, lsr #10
9001459c:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900145a0:	f893 e078 	ldrb.w	lr, [r3, #120]	; 0x78
900145a4:	fb1e fb0b 	smulbb	fp, lr, fp
900145a8:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900145ac:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
900145b0:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr = 
900145b2:	534c      	strh	r4, [r1, r5]
        refline += JPEG_ConvertorParams.ScaledWidth;          
900145b4:	444d      	add	r5, r9
            color_k = (int32_t)(*(pChrom + 192));
900145b6:	f893 b0b9 	ldrb.w	fp, [r3, #185]	; 0xb9
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900145ba:	f893 e039 	ldrb.w	lr, [r3, #57]	; 0x39
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900145be:	f813 4c07 	ldrb.w	r4, [r3, #-7]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900145c2:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900145c6:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900145ca:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900145ce:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900145d2:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900145d6:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900145da:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900145de:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900145e2:	f893 e079 	ldrb.w	lr, [r3, #121]	; 0x79
900145e6:	fb1e fb0b 	smulbb	fp, lr, fp
900145ea:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900145ee:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
900145f2:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr = 
900145f4:	8074      	strh	r4, [r6, #2]
            color_k = (int32_t)(*(pChrom + 192));
900145f6:	f893 b0ba 	ldrb.w	fp, [r3, #186]	; 0xba
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900145fa:	f893 e03a 	ldrb.w	lr, [r3, #58]	; 0x3a
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900145fe:	f813 4c06 	ldrb.w	r4, [r3, #-6]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014602:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014606:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001460a:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001460e:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014612:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014616:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001461a:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
9001461e:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90014622:	f893 e07a 	ldrb.w	lr, [r3, #122]	; 0x7a
90014626:	fb1e fb0b 	smulbb	fp, lr, fp
9001462a:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001462e:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90014632:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr = 
90014634:	80b4      	strh	r4, [r6, #4]
            color_k = (int32_t)(*(pChrom + 192));
90014636:	f893 b0bb 	ldrb.w	fp, [r3, #187]	; 0xbb
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001463a:	f893 e03b 	ldrb.w	lr, [r3, #59]	; 0x3b
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001463e:	f813 4c05 	ldrb.w	r4, [r3, #-5]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014642:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014646:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001464a:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001464e:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014652:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014656:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001465a:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
9001465e:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90014662:	f893 e07b 	ldrb.w	lr, [r3, #123]	; 0x7b
90014666:	fb1e fb0b 	smulbb	fp, lr, fp
9001466a:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001466e:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90014672:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr = 
90014674:	80f4      	strh	r4, [r6, #6]
            color_k = (int32_t)(*(pChrom + 192));
90014676:	f893 b0bc 	ldrb.w	fp, [r3, #188]	; 0xbc
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001467a:	f893 e03c 	ldrb.w	lr, [r3, #60]	; 0x3c
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001467e:	f813 4c04 	ldrb.w	r4, [r3, #-4]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014682:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014686:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001468a:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001468e:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014692:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014696:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001469a:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
9001469e:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900146a2:	f893 e07c 	ldrb.w	lr, [r3, #124]	; 0x7c
900146a6:	fb1e fb0b 	smulbb	fp, lr, fp
900146aa:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900146ae:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
900146b2:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr = 
900146b4:	8134      	strh	r4, [r6, #8]
            color_k = (int32_t)(*(pChrom + 192));
900146b6:	f893 b0bd 	ldrb.w	fp, [r3, #189]	; 0xbd
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900146ba:	f893 e03d 	ldrb.w	lr, [r3, #61]	; 0x3d
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900146be:	f813 4c03 	ldrb.w	r4, [r3, #-3]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900146c2:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900146c6:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900146ca:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900146ce:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900146d2:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900146d6:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900146da:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900146de:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900146e2:	f893 e07d 	ldrb.w	lr, [r3, #125]	; 0x7d
900146e6:	fb1e fb0b 	smulbb	fp, lr, fp
900146ea:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900146ee:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
900146f2:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr = 
900146f4:	8174      	strh	r4, [r6, #10]
            color_k = (int32_t)(*(pChrom + 192));
900146f6:	f893 b0be 	ldrb.w	fp, [r3, #190]	; 0xbe
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900146fa:	f813 ec02 	ldrb.w	lr, [r3, #-2]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900146fe:	f893 403e 	ldrb.w	r4, [r3, #62]	; 0x3e
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014702:	fb1e fe0b 	smulbb	lr, lr, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014706:	fb14 f40b 	smulbb	r4, r4, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001470a:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001470e:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014712:	ea4f 2e9e 	mov.w	lr, lr, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014716:	ea4f 2454 	mov.w	r4, r4, lsr #9
9001471a:	ea4f 1444 	mov.w	r4, r4, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
9001471e:	ea44 24ce 	orr.w	r4, r4, lr, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90014722:	f893 e07e 	ldrb.w	lr, [r3, #126]	; 0x7e
90014726:	fb1e fb0b 	smulbb	fp, lr, fp
9001472a:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001472e:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90014732:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr = 
90014734:	81b4      	strh	r4, [r6, #12]
            color_k = (int32_t)(*(pChrom + 192));
90014736:	f893 b0bf 	ldrb.w	fp, [r3, #191]	; 0xbf
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001473a:	f893 e03f 	ldrb.w	lr, [r3, #63]	; 0x3f
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001473e:	f813 4c01 	ldrb.w	r4, [r3, #-1]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014742:	fb1e fe0b 	smulbb	lr, lr, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014746:	fb14 f40b 	smulbb	r4, r4, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001474a:	fbac 2e0e 	umull	r2, lr, ip, lr
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001474e:	fbac 2404 	umull	r2, r4, ip, r4
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014752:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014756:	ea4f 2494 	mov.w	r4, r4, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001475a:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
9001475e:	ea4e 24c4 	orr.w	r4, lr, r4, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90014762:	f893 e07f 	ldrb.w	lr, [r3, #127]	; 0x7f
90014766:	fb1e fb0b 	smulbb	fp, lr, fp
9001476a:	fbac 2e0b 	umull	r2, lr, ip, fp
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001476e:	ea44 249e 	orr.w	r4, r4, lr, lsr #10
90014772:	b2a4      	uxth	r4, r4
          *(__IO uint16_t *)pOutAddr = 
90014774:	81f4      	strh	r4, [r6, #14]
    for(i= 0; i <  8; i++)
90014776:	f47f aef6 	bne.w	90014566 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x52>
9001477a:	e6de      	b.n	9001453a <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x26>
  }
  return numberMCU;
}
9001477c:	ee17 0a90 	vmov	r0, s15
90014780:	b003      	add	sp, #12
90014782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014786:	bf00      	nop
90014788:	24028de0 	.word	0x24028de0
9001478c:	80808081 	.word	0x80808081

90014790 <JPEG_GetDecodeColorConvertFunc>:
  *                      depending of the jpeg image color space and chroma sampling info. 
  * @param ImageNbMCUs : pointer to uint32_t, used to retrive the total number of MCU blocks in the jpeg image.  
  * @retval HAL status : HAL_OK or HAL_ERROR.
  */
HAL_StatusTypeDef JPEG_GetDecodeColorConvertFunc(JPEG_ConfTypeDef *pJpegInfo, JPEG_YCbCrToRGB_Convert_Function *pFunction, uint32_t *ImageNbMCUs)
{
90014790:	b4f0      	push	{r4, r5, r6, r7}
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
  JPEG_ConvertorParams.ImageHeight = pJpegInfo->ImageHeight;
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
  
  JPEG_ConvertorParams.ChromaSubsampling = pJpegInfo->ChromaSubsampling;  
90014792:	e9d0 7601 	ldrd	r7, r6, [r0, #4]
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
90014796:	68c5      	ldr	r5, [r0, #12]
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
90014798:	6804      	ldr	r4, [r0, #0]
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
9001479a:	fb06 f005 	mul.w	r0, r6, r5
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
9001479e:	4b31      	ldr	r3, [pc, #196]	; (90014864 <JPEG_GetDecodeColorConvertFunc+0xd4>)
  if(JPEG_ConvertorParams.ColorSpace == JPEG_YCBCR_COLORSPACE)
900147a0:	2c10      	cmp	r4, #16
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
900147a2:	ea4f 0040 	mov.w	r0, r0, lsl #1
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
900147a6:	609d      	str	r5, [r3, #8]
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
900147a8:	601c      	str	r4, [r3, #0]
  JPEG_ConvertorParams.ImageHeight = pJpegInfo->ImageHeight;
900147aa:	60de      	str	r6, [r3, #12]
  JPEG_ConvertorParams.ChromaSubsampling = pJpegInfo->ChromaSubsampling;  
900147ac:	605f      	str	r7, [r3, #4]
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
900147ae:	6118      	str	r0, [r3, #16]
  if(JPEG_ConvertorParams.ColorSpace == JPEG_YCBCR_COLORSPACE)
900147b0:	d02b      	beq.n	9001480a <JPEG_GetDecodeColorConvertFunc+0x7a>
      }
      JPEG_ConvertorParams.H_factor = 8;
      JPEG_ConvertorParams.V_factor  = 8;
    }   
  }
  else if(JPEG_ConvertorParams.ColorSpace == JPEG_GRAYSCALE_COLORSPACE)
900147b2:	b9fc      	cbnz	r4, 900147f4 <JPEG_GetDecodeColorConvertFunc+0x64>
  {
    *pFunction =  JPEG_MCU_Gray_ARGB_ConvertBlocks;
900147b4:	482c      	ldr	r0, [pc, #176]	; (90014868 <JPEG_GetDecodeColorConvertFunc+0xd8>)
900147b6:	6008      	str	r0, [r1, #0]

    JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 8;
      
    if(JPEG_ConvertorParams.LineOffset != 0)
900147b8:	f015 0007 	ands.w	r0, r5, #7
900147bc:	d121      	bne.n	90014802 <JPEG_GetDecodeColorConvertFunc+0x72>
  }
  else if(JPEG_ConvertorParams.ColorSpace == JPEG_CMYK_COLORSPACE)
  {
    *pFunction =  JPEG_MCU_YCCK_ARGB_ConvertBlocks;

    JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 8;
900147be:	4607      	mov	r7, r0
900147c0:	6158      	str	r0, [r3, #20]
      
    if(JPEG_ConvertorParams.LineOffset != 0)
    {
      JPEG_ConvertorParams.LineOffset = 8 - JPEG_ConvertorParams.LineOffset;  
    }
    JPEG_ConvertorParams.H_factor = 8;
900147c2:	2108      	movs	r1, #8
900147c4:	460c      	mov	r4, r1
    JPEG_ConvertorParams.V_factor  = 8;
900147c6:	e9c3 1107 	strd	r1, r1, [r3, #28]
  else
  {  
    return HAL_ERROR; /* Color space Not supported*/
  }
 
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
900147ca:	442f      	add	r7, r5
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
  
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
900147cc:	fbb5 f4f4 	udiv	r4, r5, r4
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
900147d0:	006d      	lsls	r5, r5, #1
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
900147d2:	625f      	str	r7, [r3, #36]	; 0x24
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
900147d4:	629d      	str	r5, [r3, #40]	; 0x28
  if((JPEG_ConvertorParams.ImageWidth % JPEG_ConvertorParams.H_factor) != 0)
900147d6:	b100      	cbz	r0, 900147da <JPEG_GetDecodeColorConvertFunc+0x4a>
  {
    hMCU++; /*+1 for horizenatl incomplete MCU */                
900147d8:	3401      	adds	r4, #1
  }

  vMCU = (JPEG_ConvertorParams.ImageHeight / JPEG_ConvertorParams.V_factor);
900147da:	fbb6 f0f1 	udiv	r0, r6, r1
  if((JPEG_ConvertorParams.ImageHeight % JPEG_ConvertorParams.V_factor) != 0)
900147de:	fb01 6110 	mls	r1, r1, r0, r6
900147e2:	b101      	cbz	r1, 900147e6 <JPEG_GetDecodeColorConvertFunc+0x56>
  {
    vMCU++; /*+1 for vertical incomplete MCU */                
900147e4:	3001      	adds	r0, #1
  }
  JPEG_ConvertorParams.MCU_Total_Nb = (hMCU * vMCU);
900147e6:	fb00 f404 	mul.w	r4, r0, r4
  *ImageNbMCUs = JPEG_ConvertorParams.MCU_Total_Nb;

  return HAL_OK;
900147ea:	2000      	movs	r0, #0
  JPEG_ConvertorParams.MCU_Total_Nb = (hMCU * vMCU);
900147ec:	62dc      	str	r4, [r3, #44]	; 0x2c
  *ImageNbMCUs = JPEG_ConvertorParams.MCU_Total_Nb;
900147ee:	6014      	str	r4, [r2, #0]
}
900147f0:	bcf0      	pop	{r4, r5, r6, r7}
900147f2:	4770      	bx	lr
  else if(JPEG_ConvertorParams.ColorSpace == JPEG_CMYK_COLORSPACE)
900147f4:	2c30      	cmp	r4, #48	; 0x30
900147f6:	d112      	bne.n	9001481e <JPEG_GetDecodeColorConvertFunc+0x8e>
    *pFunction =  JPEG_MCU_YCCK_ARGB_ConvertBlocks;
900147f8:	481c      	ldr	r0, [pc, #112]	; (9001486c <JPEG_GetDecodeColorConvertFunc+0xdc>)
900147fa:	6008      	str	r0, [r1, #0]
    if(JPEG_ConvertorParams.LineOffset != 0)
900147fc:	f015 0007 	ands.w	r0, r5, #7
90014800:	d0dd      	beq.n	900147be <JPEG_GetDecodeColorConvertFunc+0x2e>
      JPEG_ConvertorParams.LineOffset = 8 - JPEG_ConvertorParams.LineOffset;  
90014802:	f1c0 0708 	rsb	r7, r0, #8
90014806:	615f      	str	r7, [r3, #20]
90014808:	e7db      	b.n	900147c2 <JPEG_GetDecodeColorConvertFunc+0x32>
    if(JPEG_ConvertorParams.ChromaSubsampling == JPEG_420_SUBSAMPLING)
9001480a:	2f01      	cmp	r7, #1
9001480c:	d017      	beq.n	9001483e <JPEG_GetDecodeColorConvertFunc+0xae>
    else if(JPEG_ConvertorParams.ChromaSubsampling == JPEG_422_SUBSAMPLING)
9001480e:	2f02      	cmp	r7, #2
90014810:	d008      	beq.n	90014824 <JPEG_GetDecodeColorConvertFunc+0x94>
      *pFunction =  JPEG_MCU_YCbCr444_ARGB_ConvertBlocks;
90014812:	4817      	ldr	r0, [pc, #92]	; (90014870 <JPEG_GetDecodeColorConvertFunc+0xe0>)
90014814:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
90014816:	f015 0007 	ands.w	r0, r5, #7
9001481a:	d1f2      	bne.n	90014802 <JPEG_GetDecodeColorConvertFunc+0x72>
9001481c:	e7cf      	b.n	900147be <JPEG_GetDecodeColorConvertFunc+0x2e>
    return HAL_ERROR; /* Color space Not supported*/
9001481e:	2001      	movs	r0, #1
}
90014820:	bcf0      	pop	{r4, r5, r6, r7}
90014822:	4770      	bx	lr
      *pFunction =  JPEG_MCU_YCbCr422_ARGB_ConvertBlocks;
90014824:	4813      	ldr	r0, [pc, #76]	; (90014874 <JPEG_GetDecodeColorConvertFunc+0xe4>)
90014826:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
90014828:	f015 000f 	ands.w	r0, r5, #15
9001482c:	d116      	bne.n	9001485c <JPEG_GetDecodeColorConvertFunc+0xcc>
      JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 16;
9001482e:	4607      	mov	r7, r0
90014830:	6158      	str	r0, [r3, #20]
      JPEG_ConvertorParams.H_factor = 16;
90014832:	f04f 0c10 	mov.w	ip, #16
90014836:	2108      	movs	r1, #8
90014838:	e9c3 c107 	strd	ip, r1, [r3, #28]
      JPEG_ConvertorParams.V_factor  = 8;
9001483c:	e7c5      	b.n	900147ca <JPEG_GetDecodeColorConvertFunc+0x3a>
      *pFunction = JPEG_MCU_YCbCr420_ARGB_ConvertBlocks;
9001483e:	480e      	ldr	r0, [pc, #56]	; (90014878 <JPEG_GetDecodeColorConvertFunc+0xe8>)
90014840:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
90014842:	f015 000f 	ands.w	r0, r5, #15
90014846:	d105      	bne.n	90014854 <JPEG_GetDecodeColorConvertFunc+0xc4>
      JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 16;
90014848:	4607      	mov	r7, r0
9001484a:	6158      	str	r0, [r3, #20]
      JPEG_ConvertorParams.H_factor = 16;
9001484c:	2110      	movs	r1, #16
      JPEG_ConvertorParams.V_factor  = 16;
9001484e:	e9c3 1107 	strd	r1, r1, [r3, #28]
90014852:	e7ba      	b.n	900147ca <JPEG_GetDecodeColorConvertFunc+0x3a>
        JPEG_ConvertorParams.LineOffset = 16 - JPEG_ConvertorParams.LineOffset;  
90014854:	f1c0 0710 	rsb	r7, r0, #16
90014858:	615f      	str	r7, [r3, #20]
9001485a:	e7f7      	b.n	9001484c <JPEG_GetDecodeColorConvertFunc+0xbc>
        JPEG_ConvertorParams.LineOffset = 16 - JPEG_ConvertorParams.LineOffset;  
9001485c:	f1c0 0710 	rsb	r7, r0, #16
90014860:	615f      	str	r7, [r3, #20]
90014862:	e7e6      	b.n	90014832 <JPEG_GetDecodeColorConvertFunc+0xa2>
90014864:	24028de0 	.word	0x24028de0
90014868:	900143e5 	.word	0x900143e5
9001486c:	90014515 	.word	0x90014515
90014870:	900140e9 	.word	0x900140e9
90014874:	90013e15 	.word	0x90013e15
90014878:	90013be9 	.word	0x90013be9

9001487c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9001487c:	8880      	ldrh	r0, [r0, #4]
9001487e:	4770      	bx	lr

90014880 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90014880:	b570      	push	{r4, r5, r6, lr}
90014882:	6803      	ldr	r3, [r0, #0]
90014884:	460c      	mov	r4, r1
90014886:	2100      	movs	r1, #0
90014888:	4605      	mov	r5, r0
9001488a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9001488c:	4798      	blx	r3
9001488e:	4606      	mov	r6, r0
90014890:	682b      	ldr	r3, [r5, #0]
90014892:	4628      	mov	r0, r5
90014894:	1ba4      	subs	r4, r4, r6
90014896:	6a1b      	ldr	r3, [r3, #32]
90014898:	b2a4      	uxth	r4, r4
9001489a:	4798      	blx	r3
9001489c:	fbb4 f0f0 	udiv	r0, r4, r0
900148a0:	bd70      	pop	{r4, r5, r6, pc}

900148a2 <_ZN8touchgfx17AbstractPartition5clearEv>:
900148a2:	2300      	movs	r3, #0
900148a4:	8083      	strh	r3, [r0, #4]
900148a6:	4770      	bx	lr

900148a8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
900148a8:	b510      	push	{r4, lr}
900148aa:	6803      	ldr	r3, [r0, #0]
900148ac:	4604      	mov	r4, r0
900148ae:	8881      	ldrh	r1, [r0, #4]
900148b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900148b2:	4798      	blx	r3
900148b4:	88a3      	ldrh	r3, [r4, #4]
900148b6:	3301      	adds	r3, #1
900148b8:	80a3      	strh	r3, [r4, #4]
900148ba:	bd10      	pop	{r4, pc}

900148bc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
900148bc:	6803      	ldr	r3, [r0, #0]
900148be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900148c0:	4718      	bx	r3

900148c2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
900148c2:	4770      	bx	lr

900148c4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
900148c4:	4a02      	ldr	r2, [pc, #8]	; (900148d0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
900148c6:	6002      	str	r2, [r0, #0]
900148c8:	2200      	movs	r2, #0
900148ca:	8082      	strh	r2, [r0, #4]
900148cc:	4770      	bx	lr
900148ce:	bf00      	nop
900148d0:	900300b8 	.word	0x900300b8

900148d4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
900148d4:	b510      	push	{r4, lr}
900148d6:	6803      	ldr	r3, [r0, #0]
900148d8:	4604      	mov	r4, r0
900148da:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
900148de:	4798      	blx	r3
900148e0:	b110      	cbz	r0, 900148e8 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
900148e2:	4620      	mov	r0, r4
900148e4:	f7ee f880 	bl	900029e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900148e8:	bd10      	pop	{r4, pc}

900148ea <_ZN8touchgfx8TextArea8setWidthEs>:
900148ea:	b530      	push	{r4, r5, lr}
900148ec:	b085      	sub	sp, #20
900148ee:	6803      	ldr	r3, [r0, #0]
900148f0:	4604      	mov	r4, r0
900148f2:	8101      	strh	r1, [r0, #8]
900148f4:	466d      	mov	r5, sp
900148f6:	4601      	mov	r1, r0
900148f8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
900148fc:	343c      	adds	r4, #60	; 0x3c
900148fe:	4628      	mov	r0, r5
90014900:	4798      	blx	r3
90014902:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90014906:	e884 0007 	stmia.w	r4, {r0, r1, r2}
9001490a:	b005      	add	sp, #20
9001490c:	bd30      	pop	{r4, r5, pc}

9001490e <_ZN8touchgfx8TextArea9setHeightEs>:
9001490e:	b530      	push	{r4, r5, lr}
90014910:	b085      	sub	sp, #20
90014912:	6803      	ldr	r3, [r0, #0]
90014914:	4604      	mov	r4, r0
90014916:	8141      	strh	r1, [r0, #10]
90014918:	466d      	mov	r5, sp
9001491a:	4601      	mov	r1, r0
9001491c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90014920:	343c      	adds	r4, #60	; 0x3c
90014922:	4628      	mov	r0, r5
90014924:	4798      	blx	r3
90014926:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9001492a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
9001492e:	b005      	add	sp, #20
90014930:	bd30      	pop	{r4, r5, pc}

90014932 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90014932:	2200      	movs	r2, #0
90014934:	8002      	strh	r2, [r0, #0]
90014936:	8042      	strh	r2, [r0, #2]
90014938:	8082      	strh	r2, [r0, #4]
9001493a:	80c2      	strh	r2, [r0, #6]
9001493c:	4770      	bx	lr

9001493e <_ZN8touchgfx8TextArea8setAlphaEh>:
9001493e:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
90014942:	4770      	bx	lr

90014944 <_ZN8touchgfx8TextArea12setBaselineYEs>:
90014944:	b570      	push	{r4, r5, r6, lr}
90014946:	6803      	ldr	r3, [r0, #0]
90014948:	4604      	mov	r4, r0
9001494a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
9001494c:	460d      	mov	r5, r1
9001494e:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90014950:	4b08      	ldr	r3, [pc, #32]	; (90014974 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
90014952:	681b      	ldr	r3, [r3, #0]
90014954:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90014958:	4b07      	ldr	r3, [pc, #28]	; (90014978 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
9001495a:	681b      	ldr	r3, [r3, #0]
9001495c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90014960:	6803      	ldr	r3, [r0, #0]
90014962:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90014964:	4798      	blx	r3
90014966:	1a29      	subs	r1, r5, r0
90014968:	4633      	mov	r3, r6
9001496a:	4620      	mov	r0, r4
9001496c:	b209      	sxth	r1, r1
9001496e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014972:	4718      	bx	r3
90014974:	24028e84 	.word	0x24028e84
90014978:	24028e8c 	.word	0x24028e8c

9001497c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
9001497c:	b570      	push	{r4, r5, r6, lr}
9001497e:	6803      	ldr	r3, [r0, #0]
90014980:	4604      	mov	r4, r0
90014982:	4615      	mov	r5, r2
90014984:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90014986:	4798      	blx	r3
90014988:	6823      	ldr	r3, [r4, #0]
9001498a:	4629      	mov	r1, r5
9001498c:	4620      	mov	r0, r4
9001498e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90014990:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014994:	4718      	bx	r3

90014996 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
90014996:	2000      	movs	r0, #0
90014998:	4770      	bx	lr

9001499a <_ZN8touchgfx12LineProgress10setPainterERNS_15AbstractPainterE>:
9001499a:	f8c0 10dc 	str.w	r1, [r0, #220]	; 0xdc
9001499e:	4770      	bx	lr

900149a0 <_ZNK8touchgfx12LineProgress8getStartERiS1_>:
900149a0:	b530      	push	{r4, r5, lr}
900149a2:	f8d0 4124 	ldr.w	r4, [r0, #292]	; 0x124
900149a6:	2520      	movs	r5, #32
900149a8:	fb94 f4f5 	sdiv	r4, r4, r5
900149ac:	600c      	str	r4, [r1, #0]
900149ae:	f8d0 3128 	ldr.w	r3, [r0, #296]	; 0x128
900149b2:	fb93 f3f5 	sdiv	r3, r3, r5
900149b6:	6013      	str	r3, [r2, #0]
900149b8:	bd30      	pop	{r4, r5, pc}

900149ba <_ZN8touchgfx12LineProgress6setEndEii>:
900149ba:	0149      	lsls	r1, r1, #5
900149bc:	0152      	lsls	r2, r2, #5
900149be:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
900149c2:	f8c0 2130 	str.w	r2, [r0, #304]	; 0x130
900149c6:	4770      	bx	lr

900149c8 <_ZNK8touchgfx12LineProgress6getEndERiS1_>:
900149c8:	b530      	push	{r4, r5, lr}
900149ca:	f8d0 412c 	ldr.w	r4, [r0, #300]	; 0x12c
900149ce:	2520      	movs	r5, #32
900149d0:	fb94 f4f5 	sdiv	r4, r4, r5
900149d4:	600c      	str	r4, [r1, #0]
900149d6:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
900149da:	fb93 f3f5 	sdiv	r3, r3, r5
900149de:	6013      	str	r3, [r2, #0]
900149e0:	bd30      	pop	{r4, r5, pc}

900149e2 <_ZNK8touchgfx12LineProgress12getLineWidthEv>:
900149e2:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
900149e6:	2320      	movs	r3, #32
900149e8:	fb90 f0f3 	sdiv	r0, r0, r3
900149ec:	4770      	bx	lr

900149ee <_ZN8touchgfx12LineProgressD1Ev>:
900149ee:	4770      	bx	lr

900149f0 <_ZN8touchgfx12LineProgress8setStartEii>:
900149f0:	0149      	lsls	r1, r1, #5
900149f2:	30b4      	adds	r0, #180	; 0xb4
900149f4:	0152      	lsls	r2, r2, #5
900149f6:	6701      	str	r1, [r0, #112]	; 0x70
900149f8:	6742      	str	r2, [r0, #116]	; 0x74
900149fa:	f002 bd4c 	b.w	90017496 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

900149fe <_ZN8touchgfx12LineProgress12setLineWidthEi>:
900149fe:	0149      	lsls	r1, r1, #5
90014a00:	f8d0 30f0 	ldr.w	r3, [r0, #240]	; 0xf0
90014a04:	4299      	cmp	r1, r3
90014a06:	d004      	beq.n	90014a12 <_ZN8touchgfx12LineProgress12setLineWidthEi+0x14>
90014a08:	f8c0 10f0 	str.w	r1, [r0, #240]	; 0xf0
90014a0c:	30b4      	adds	r0, #180	; 0xb4
90014a0e:	f002 bc4c 	b.w	900172aa <_ZN8touchgfx4Line17updateCachedShapeEv>
90014a12:	4770      	bx	lr

90014a14 <_ZN8touchgfx12LineProgress18setLineEndingStyleENS_4Line17LINE_ENDING_STYLEE>:
90014a14:	30b4      	adds	r0, #180	; 0xb4
90014a16:	f002 bd63 	b.w	900174e0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>

90014a1a <_ZNK8touchgfx12LineProgress18getLineEndingStyleEv>:
90014a1a:	30b4      	adds	r0, #180	; 0xb4
90014a1c:	f002 bc42 	b.w	900172a4 <_ZNK8touchgfx4Line18getLineEndingStyleEv>

90014a20 <_ZN8touchgfx12LineProgress8setAlphaEh>:
90014a20:	b538      	push	{r3, r4, r5, lr}
90014a22:	4604      	mov	r4, r0
90014a24:	460d      	mov	r5, r1
90014a26:	f000 f8d1 	bl	90014bcc <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
90014a2a:	f884 50da 	strb.w	r5, [r4, #218]	; 0xda
90014a2e:	bd38      	pop	{r3, r4, r5, pc}

90014a30 <_ZN8touchgfx12LineProgressD0Ev>:
90014a30:	b510      	push	{r4, lr}
90014a32:	4604      	mov	r4, r0
90014a34:	f44f 719a 	mov.w	r1, #308	; 0x134
90014a38:	f016 fced 	bl	9002b416 <_ZdlPvj>
90014a3c:	4620      	mov	r0, r4
90014a3e:	bd10      	pop	{r4, pc}

90014a40 <_ZN8touchgfx12LineProgress8setValueEi>:
90014a40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014a42:	f8b0 3090 	ldrh.w	r3, [r0, #144]	; 0x90
90014a46:	4604      	mov	r4, r0
90014a48:	b33b      	cbz	r3, 90014a9a <_ZN8touchgfx12LineProgress8setValueEi+0x5a>
90014a4a:	f000 f912 	bl	90014c72 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
90014a4e:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
90014a52:	4620      	mov	r0, r4
90014a54:	2720      	movs	r7, #32
90014a56:	f000 f92e 	bl	90014cb6 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
90014a5a:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
90014a5e:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
90014a62:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
90014a66:	f8d4 5130 	ldr.w	r5, [r4, #304]	; 0x130
90014a6a:	1a5b      	subs	r3, r3, r1
90014a6c:	f8b4 6090 	ldrh.w	r6, [r4, #144]	; 0x90
90014a70:	1aad      	subs	r5, r5, r2
90014a72:	015b      	lsls	r3, r3, #5
90014a74:	016d      	lsls	r5, r5, #5
90014a76:	fb93 f3f6 	sdiv	r3, r3, r6
90014a7a:	fb95 f5f6 	sdiv	r5, r5, r6
90014a7e:	4343      	muls	r3, r0
90014a80:	4368      	muls	r0, r5
90014a82:	fb93 f3f7 	sdiv	r3, r3, r7
90014a86:	fb90 f0f7 	sdiv	r0, r0, r7
90014a8a:	4419      	add	r1, r3
90014a8c:	4402      	add	r2, r0
90014a8e:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
90014a92:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
90014a96:	f002 bd09 	b.w	900174ac <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_>
90014a9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90014a9c:	b570      	push	{r4, r5, r6, lr}
90014a9e:	6803      	ldr	r3, [r0, #0]
90014aa0:	4604      	mov	r4, r0
90014aa2:	4615      	mov	r5, r2
90014aa4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014aa6:	4798      	blx	r3
90014aa8:	6823      	ldr	r3, [r4, #0]
90014aaa:	4629      	mov	r1, r5
90014aac:	4620      	mov	r0, r4
90014aae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90014ab0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014ab4:	4718      	bx	r3

90014ab6 <_ZN8touchgfx12LineProgress28setProgressIndicatorPositionEssss>:
90014ab6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014aba:	461d      	mov	r5, r3
90014abc:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
90014ac0:	2300      	movs	r3, #0
90014ac2:	4604      	mov	r4, r0
90014ac4:	460f      	mov	r7, r1
90014ac6:	4690      	mov	r8, r2
90014ac8:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
90014acc:	4632      	mov	r2, r6
90014ace:	4629      	mov	r1, r5
90014ad0:	30b4      	adds	r0, #180	; 0xb4
90014ad2:	f7ff ffe3 	bl	90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90014ad6:	9606      	str	r6, [sp, #24]
90014ad8:	462b      	mov	r3, r5
90014ada:	4642      	mov	r2, r8
90014adc:	4639      	mov	r1, r7
90014ade:	4620      	mov	r0, r4
90014ae0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90014ae4:	f000 b95a 	b.w	90014d9c <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

90014ae8 <_ZN8touchgfx12LineProgressC1Ev>:
90014ae8:	b570      	push	{r4, r5, r6, lr}
90014aea:	4604      	mov	r4, r0
90014aec:	f000 f982 	bl	90014df4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
90014af0:	4b0f      	ldr	r3, [pc, #60]	; (90014b30 <_ZN8touchgfx12LineProgressC1Ev+0x48>)
90014af2:	2600      	movs	r6, #0
90014af4:	4625      	mov	r5, r4
90014af6:	f845 3bb4 	str.w	r3, [r5], #180
90014afa:	4628      	mov	r0, r5
90014afc:	f002 fbb2 	bl	90017264 <_ZN8touchgfx4LineC1Ev>
90014b00:	4629      	mov	r1, r5
90014b02:	f104 0058 	add.w	r0, r4, #88	; 0x58
90014b06:	f8c4 6124 	str.w	r6, [r4, #292]	; 0x124
90014b0a:	f8c4 6128 	str.w	r6, [r4, #296]	; 0x128
90014b0e:	f8c4 612c 	str.w	r6, [r4, #300]	; 0x12c
90014b12:	f8c4 6130 	str.w	r6, [r4, #304]	; 0x130
90014b16:	f000 f9cd 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90014b1a:	4628      	mov	r0, r5
90014b1c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90014b20:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90014b24:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
90014b28:	f7ff ffb8 	bl	90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90014b2c:	4620      	mov	r0, r4
90014b2e:	bd70      	pop	{r4, r5, r6, pc}
90014b30:	900300ec 	.word	0x900300ec

90014b34 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
90014b34:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
90014b38:	4770      	bx	lr

90014b3a <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
90014b3a:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
90014b3e:	4770      	bx	lr

90014b40 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
90014b40:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
90014b44:	4770      	bx	lr

90014b46 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
90014b46:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
90014b4a:	4770      	bx	lr

90014b4c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
90014b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014b4e:	461e      	mov	r6, r3
90014b50:	6803      	ldr	r3, [r0, #0]
90014b52:	460f      	mov	r7, r1
90014b54:	4604      	mov	r4, r0
90014b56:	4615      	mov	r5, r2
90014b58:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
90014b5c:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
90014b60:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90014b64:	4798      	blx	r3
90014b66:	b93e      	cbnz	r6, 90014b78 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
90014b68:	1bed      	subs	r5, r5, r7
90014b6a:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
90014b6e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90014b72:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
90014b76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90014b78:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
90014b7c:	e7f7      	b.n	90014b6e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

90014b7e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
90014b7e:	b510      	push	{r4, lr}
90014b80:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
90014b84:	600c      	str	r4, [r1, #0]
90014b86:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
90014b8a:	6011      	str	r1, [r2, #0]
90014b8c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
90014b90:	801a      	strh	r2, [r3, #0]
90014b92:	9b02      	ldr	r3, [sp, #8]
90014b94:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
90014b98:	801a      	strh	r2, [r3, #0]
90014b9a:	bd10      	pop	{r4, pc}

90014b9c <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
90014b9c:	b510      	push	{r4, lr}
90014b9e:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
90014ba2:	600c      	str	r4, [r1, #0]
90014ba4:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
90014ba8:	6011      	str	r1, [r2, #0]
90014baa:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
90014bae:	801a      	strh	r2, [r3, #0]
90014bb0:	bd10      	pop	{r4, pc}

90014bb2 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
90014bb2:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
90014bb6:	600b      	str	r3, [r1, #0]
90014bb8:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
90014bbc:	6013      	str	r3, [r2, #0]
90014bbe:	4770      	bx	lr

90014bc0 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
90014bc0:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
90014bc4:	4770      	bx	lr

90014bc6 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
90014bc6:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
90014bca:	4770      	bx	lr

90014bcc <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
90014bcc:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
90014bd0:	4770      	bx	lr

90014bd2 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
90014bd2:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
90014bd6:	4770      	bx	lr

90014bd8 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
90014bd8:	4770      	bx	lr

90014bda <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
90014bda:	b510      	push	{r4, lr}
90014bdc:	4604      	mov	r4, r0
90014bde:	21b4      	movs	r1, #180	; 0xb4
90014be0:	f016 fc19 	bl	9002b416 <_ZdlPvj>
90014be4:	4620      	mov	r0, r4
90014be6:	bd10      	pop	{r4, pc}

90014be8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
90014be8:	b570      	push	{r4, r5, r6, lr}
90014bea:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
90014bee:	4604      	mov	r4, r0
90014bf0:	4616      	mov	r6, r2
90014bf2:	428d      	cmp	r5, r1
90014bf4:	bfb8      	it	lt
90014bf6:	460d      	movlt	r5, r1
90014bf8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
90014bfc:	428d      	cmp	r5, r1
90014bfe:	bfa8      	it	ge
90014c00:	460d      	movge	r5, r1
90014c02:	b99a      	cbnz	r2, 90014c2c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
90014c04:	6803      	ldr	r3, [r0, #0]
90014c06:	4629      	mov	r1, r5
90014c08:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90014c0c:	4798      	blx	r3
90014c0e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
90014c12:	b368      	cbz	r0, 90014c70 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
90014c14:	6803      	ldr	r3, [r0, #0]
90014c16:	68db      	ldr	r3, [r3, #12]
90014c18:	4798      	blx	r3
90014c1a:	b348      	cbz	r0, 90014c70 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
90014c1c:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
90014c20:	4621      	mov	r1, r4
90014c22:	6803      	ldr	r3, [r0, #0]
90014c24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014c28:	689b      	ldr	r3, [r3, #8]
90014c2a:	4718      	bx	r3
90014c2c:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
90014c30:	2b00      	cmp	r3, #0
90014c32:	dd08      	ble.n	90014c46 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
90014c34:	f006 f8c6 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90014c38:	4621      	mov	r1, r4
90014c3a:	3004      	adds	r0, #4
90014c3c:	f006 f8e7 	bl	9001ae0e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90014c40:	2300      	movs	r3, #0
90014c42:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
90014c46:	6823      	ldr	r3, [r4, #0]
90014c48:	4620      	mov	r0, r4
90014c4a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
90014c4e:	4798      	blx	r3
90014c50:	2300      	movs	r3, #0
90014c52:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
90014c56:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
90014c5a:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
90014c5e:	f006 f8b1 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90014c62:	4621      	mov	r1, r4
90014c64:	3004      	adds	r0, #4
90014c66:	f006 f97b 	bl	9001af60 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
90014c6a:	2301      	movs	r3, #1
90014c6c:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
90014c70:	bd70      	pop	{r4, r5, r6, pc}

90014c72 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
90014c72:	b510      	push	{r4, lr}
90014c74:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
90014c78:	4604      	mov	r4, r0
90014c7a:	4299      	cmp	r1, r3
90014c7c:	bfb8      	it	lt
90014c7e:	4619      	movlt	r1, r3
90014c80:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
90014c84:	4299      	cmp	r1, r3
90014c86:	bfa8      	it	ge
90014c88:	4619      	movge	r1, r3
90014c8a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
90014c8e:	428b      	cmp	r3, r1
90014c90:	d010      	beq.n	90014cb4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
90014c92:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
90014c96:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
90014c9a:	b158      	cbz	r0, 90014cb4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
90014c9c:	6803      	ldr	r3, [r0, #0]
90014c9e:	68db      	ldr	r3, [r3, #12]
90014ca0:	4798      	blx	r3
90014ca2:	b138      	cbz	r0, 90014cb4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
90014ca4:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
90014ca8:	4621      	mov	r1, r4
90014caa:	6803      	ldr	r3, [r0, #0]
90014cac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014cb0:	689b      	ldr	r3, [r3, #8]
90014cb2:	4718      	bx	r3
90014cb4:	bd10      	pop	{r4, pc}

90014cb6 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
90014cb6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90014cb8:	4604      	mov	r4, r0
90014cba:	460d      	mov	r5, r1
90014cbc:	b1a9      	cbz	r1, 90014cea <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
90014cbe:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
90014cc2:	ab01      	add	r3, sp, #4
90014cc4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
90014cc8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
90014ccc:	1b89      	subs	r1, r1, r6
90014cce:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
90014cd2:	1a12      	subs	r2, r2, r0
90014cd4:	1a38      	subs	r0, r7, r0
90014cd6:	f007 face 	bl	9001c276 <_ZN8touchgfx6muldivElllRl>
90014cda:	4629      	mov	r1, r5
90014cdc:	ab01      	add	r3, sp, #4
90014cde:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
90014ce2:	4430      	add	r0, r6
90014ce4:	f007 fac7 	bl	9001c276 <_ZN8touchgfx6muldivElllRl>
90014ce8:	b285      	uxth	r5, r0
90014cea:	4628      	mov	r0, r5
90014cec:	b003      	add	sp, #12
90014cee:	bdf0      	pop	{r4, r5, r6, r7, pc}

90014cf0 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
90014cf0:	b570      	push	{r4, r5, r6, lr}
90014cf2:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
90014cf6:	4604      	mov	r4, r0
90014cf8:	2b00      	cmp	r3, #0
90014cfa:	d035      	beq.n	90014d68 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
90014cfc:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
90014d00:	2100      	movs	r1, #0
90014d02:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
90014d06:	3001      	adds	r0, #1
90014d08:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
90014d0c:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
90014d10:	b280      	uxth	r0, r0
90014d12:	1ad2      	subs	r2, r2, r3
90014d14:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90014d18:	b212      	sxth	r2, r2
90014d1a:	47a8      	blx	r5
90014d1c:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
90014d20:	6823      	ldr	r3, [r4, #0]
90014d22:	4401      	add	r1, r0
90014d24:	4620      	mov	r0, r4
90014d26:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90014d2a:	4798      	blx	r3
90014d2c:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
90014d30:	429a      	cmp	r2, r3
90014d32:	db19      	blt.n	90014d68 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
90014d34:	2500      	movs	r5, #0
90014d36:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
90014d3a:	f006 f843 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90014d3e:	4621      	mov	r1, r4
90014d40:	3004      	adds	r0, #4
90014d42:	f006 f864 	bl	9001ae0e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90014d46:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
90014d4a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
90014d4e:	b158      	cbz	r0, 90014d68 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
90014d50:	6803      	ldr	r3, [r0, #0]
90014d52:	68db      	ldr	r3, [r3, #12]
90014d54:	4798      	blx	r3
90014d56:	b138      	cbz	r0, 90014d68 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
90014d58:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
90014d5c:	4621      	mov	r1, r4
90014d5e:	6803      	ldr	r3, [r0, #0]
90014d60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014d64:	689b      	ldr	r3, [r3, #8]
90014d66:	4718      	bx	r3
90014d68:	bd70      	pop	{r4, r5, r6, pc}
	...

90014d6c <_ZN8touchgfx8DrawableC1Ev>:
90014d6c:	4a0a      	ldr	r2, [pc, #40]	; (90014d98 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
90014d6e:	6002      	str	r2, [r0, #0]
90014d70:	2200      	movs	r2, #0
90014d72:	8082      	strh	r2, [r0, #4]
90014d74:	80c2      	strh	r2, [r0, #6]
90014d76:	8102      	strh	r2, [r0, #8]
90014d78:	8142      	strh	r2, [r0, #10]
90014d7a:	8182      	strh	r2, [r0, #12]
90014d7c:	81c2      	strh	r2, [r0, #14]
90014d7e:	8202      	strh	r2, [r0, #16]
90014d80:	8242      	strh	r2, [r0, #18]
90014d82:	61c2      	str	r2, [r0, #28]
90014d84:	8402      	strh	r2, [r0, #32]
90014d86:	8442      	strh	r2, [r0, #34]	; 0x22
90014d88:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90014d8c:	e9c0 2205 	strd	r2, r2, [r0, #20]
90014d90:	2201      	movs	r2, #1
90014d92:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
90014d96:	4770      	bx	lr
90014d98:	90030b44 	.word	0x90030b44

90014d9c <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
90014d9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014da0:	4604      	mov	r4, r0
90014da2:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
90014da6:	4698      	mov	r8, r3
90014da8:	460e      	mov	r6, r1
90014daa:	4615      	mov	r5, r2
90014dac:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
90014db0:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
90014db4:	4619      	mov	r1, r3
90014db6:	463a      	mov	r2, r7
90014db8:	3058      	adds	r0, #88	; 0x58
90014dba:	f7ff fe6f 	bl	90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90014dbe:	4446      	add	r6, r8
90014dc0:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
90014dc4:	443d      	add	r5, r7
90014dc6:	42b3      	cmp	r3, r6
90014dc8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90014dcc:	bfb8      	it	lt
90014dce:	8126      	strhlt	r6, [r4, #8]
90014dd0:	42ab      	cmp	r3, r5
90014dd2:	bfb8      	it	lt
90014dd4:	8165      	strhlt	r5, [r4, #10]
90014dd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90014dda <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
90014dda:	b510      	push	{r4, lr}
90014ddc:	4604      	mov	r4, r0
90014dde:	302c      	adds	r0, #44	; 0x2c
90014de0:	f003 fc13 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90014de4:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
90014de8:	4620      	mov	r0, r4
90014dea:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
90014dee:	f7ff fe55 	bl	90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90014df2:	bd10      	pop	{r4, pc}

90014df4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
90014df4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90014df6:	4604      	mov	r4, r0
90014df8:	2500      	movs	r5, #0
90014dfa:	f7ff ffb7 	bl	90014d6c <_ZN8touchgfx8DrawableC1Ev>
90014dfe:	4b24      	ldr	r3, [pc, #144]	; (90014e90 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
90014e00:	4626      	mov	r6, r4
90014e02:	f64f 77ff 	movw	r7, #65535	; 0xffff
90014e06:	2226      	movs	r2, #38	; 0x26
90014e08:	4629      	mov	r1, r5
90014e0a:	62a5      	str	r5, [r4, #40]	; 0x28
90014e0c:	f846 3b2c 	str.w	r3, [r6], #44
90014e10:	4630      	mov	r0, r6
90014e12:	f8ad 7004 	strh.w	r7, [sp, #4]
90014e16:	f016 fe61 	bl	9002badc <memset>
90014e1a:	4630      	mov	r0, r6
90014e1c:	f7ff ffa6 	bl	90014d6c <_ZN8touchgfx8DrawableC1Ev>
90014e20:	a902      	add	r1, sp, #8
90014e22:	4b1c      	ldr	r3, [pc, #112]	; (90014e94 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
90014e24:	4630      	mov	r0, r6
90014e26:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
90014e2a:	f104 0758 	add.w	r7, r4, #88	; 0x58
90014e2e:	62e3      	str	r3, [r4, #44]	; 0x2c
90014e30:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
90014e34:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
90014e38:	f003 fbe7 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90014e3c:	4638      	mov	r0, r7
90014e3e:	f7ff ff95 	bl	90014d6c <_ZN8touchgfx8DrawableC1Ev>
90014e42:	4b15      	ldr	r3, [pc, #84]	; (90014e98 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
90014e44:	4629      	mov	r1, r5
90014e46:	4630      	mov	r0, r6
90014e48:	65a3      	str	r3, [r4, #88]	; 0x58
90014e4a:	2364      	movs	r3, #100	; 0x64
90014e4c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
90014e50:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
90014e54:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
90014e58:	4b10      	ldr	r3, [pc, #64]	; (90014e9c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
90014e5a:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
90014e5e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
90014e62:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
90014e66:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
90014e6a:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
90014e6e:	f7ed fdc5 	bl	900029fc <_ZN8touchgfx8Drawable4setXEs>
90014e72:	4629      	mov	r1, r5
90014e74:	4630      	mov	r0, r6
90014e76:	f7ed fdc3 	bl	90002a00 <_ZN8touchgfx8Drawable4setYEs>
90014e7a:	4631      	mov	r1, r6
90014e7c:	4620      	mov	r0, r4
90014e7e:	f000 f819 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90014e82:	4620      	mov	r0, r4
90014e84:	4639      	mov	r1, r7
90014e86:	f000 f815 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90014e8a:	4620      	mov	r0, r4
90014e8c:	b003      	add	sp, #12
90014e8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90014e90:	900301e4 	.word	0x900301e4
90014e94:	90030a7c 	.word	0x90030a7c
90014e98:	900302b8 	.word	0x900302b8
90014e9c:	9001ca53 	.word	0x9001ca53

90014ea0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90014ea0:	6a83      	ldr	r3, [r0, #40]	; 0x28
90014ea2:	2000      	movs	r0, #0
90014ea4:	b12b      	cbz	r3, 90014eb2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90014ea6:	b920      	cbnz	r0, 90014eb2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90014ea8:	1a5a      	subs	r2, r3, r1
90014eaa:	699b      	ldr	r3, [r3, #24]
90014eac:	4250      	negs	r0, r2
90014eae:	4150      	adcs	r0, r2
90014eb0:	e7f8      	b.n	90014ea4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90014eb2:	4770      	bx	lr

90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90014eb4:	2300      	movs	r3, #0
90014eb6:	6148      	str	r0, [r1, #20]
90014eb8:	618b      	str	r3, [r1, #24]
90014eba:	6a83      	ldr	r3, [r0, #40]	; 0x28
90014ebc:	b913      	cbnz	r3, 90014ec4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90014ebe:	6281      	str	r1, [r0, #40]	; 0x28
90014ec0:	4770      	bx	lr
90014ec2:	4613      	mov	r3, r2
90014ec4:	699a      	ldr	r2, [r3, #24]
90014ec6:	2a00      	cmp	r2, #0
90014ec8:	d1fb      	bne.n	90014ec2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90014eca:	6199      	str	r1, [r3, #24]
90014ecc:	4770      	bx	lr

90014ece <_ZN8touchgfx9Container9removeAllEv>:
90014ece:	2200      	movs	r2, #0
90014ed0:	6a83      	ldr	r3, [r0, #40]	; 0x28
90014ed2:	b123      	cbz	r3, 90014ede <_ZN8touchgfx9Container9removeAllEv+0x10>
90014ed4:	6999      	ldr	r1, [r3, #24]
90014ed6:	6281      	str	r1, [r0, #40]	; 0x28
90014ed8:	e9c3 2205 	strd	r2, r2, [r3, #20]
90014edc:	e7f8      	b.n	90014ed0 <_ZN8touchgfx9Container9removeAllEv+0x2>
90014ede:	4770      	bx	lr

90014ee0 <_ZN8touchgfx9Container6unlinkEv>:
90014ee0:	2300      	movs	r3, #0
90014ee2:	6283      	str	r3, [r0, #40]	; 0x28
90014ee4:	4770      	bx	lr

90014ee6 <_ZNK8touchgfx9Container12getSolidRectEv>:
90014ee6:	2200      	movs	r2, #0
90014ee8:	8002      	strh	r2, [r0, #0]
90014eea:	8042      	strh	r2, [r0, #2]
90014eec:	8082      	strh	r2, [r0, #4]
90014eee:	80c2      	strh	r2, [r0, #6]
90014ef0:	4770      	bx	lr

90014ef2 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90014ef2:	b570      	push	{r4, r5, r6, lr}
90014ef4:	460d      	mov	r5, r1
90014ef6:	4616      	mov	r6, r2
90014ef8:	6a84      	ldr	r4, [r0, #40]	; 0x28
90014efa:	b13c      	cbz	r4, 90014f0c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90014efc:	6823      	ldr	r3, [r4, #0]
90014efe:	4620      	mov	r0, r4
90014f00:	4632      	mov	r2, r6
90014f02:	4629      	mov	r1, r5
90014f04:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90014f06:	4798      	blx	r3
90014f08:	69a4      	ldr	r4, [r4, #24]
90014f0a:	e7f6      	b.n	90014efa <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90014f0c:	bd70      	pop	{r4, r5, r6, pc}

90014f0e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90014f0e:	b538      	push	{r3, r4, r5, lr}
90014f10:	460d      	mov	r5, r1
90014f12:	6a84      	ldr	r4, [r0, #40]	; 0x28
90014f14:	b134      	cbz	r4, 90014f24 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
90014f16:	682b      	ldr	r3, [r5, #0]
90014f18:	4621      	mov	r1, r4
90014f1a:	4628      	mov	r0, r5
90014f1c:	689b      	ldr	r3, [r3, #8]
90014f1e:	4798      	blx	r3
90014f20:	69a4      	ldr	r4, [r4, #24]
90014f22:	e7f7      	b.n	90014f14 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90014f24:	bd38      	pop	{r3, r4, r5, pc}

90014f26 <_ZN8touchgfx9ContainerD1Ev>:
90014f26:	4770      	bx	lr

90014f28 <_ZN8touchgfx9ContainerD0Ev>:
90014f28:	b510      	push	{r4, lr}
90014f2a:	4604      	mov	r4, r0
90014f2c:	212c      	movs	r1, #44	; 0x2c
90014f2e:	f016 fa72 	bl	9002b416 <_ZdlPvj>
90014f32:	4620      	mov	r0, r4
90014f34:	bd10      	pop	{r4, pc}

90014f36 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90014f36:	6a83      	ldr	r3, [r0, #40]	; 0x28
90014f38:	b19b      	cbz	r3, 90014f62 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90014f3a:	428b      	cmp	r3, r1
90014f3c:	d109      	bne.n	90014f52 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90014f3e:	699a      	ldr	r2, [r3, #24]
90014f40:	2100      	movs	r1, #0
90014f42:	6159      	str	r1, [r3, #20]
90014f44:	6282      	str	r2, [r0, #40]	; 0x28
90014f46:	b902      	cbnz	r2, 90014f4a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90014f48:	4770      	bx	lr
90014f4a:	6199      	str	r1, [r3, #24]
90014f4c:	4770      	bx	lr
90014f4e:	4613      	mov	r3, r2
90014f50:	b13a      	cbz	r2, 90014f62 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90014f52:	699a      	ldr	r2, [r3, #24]
90014f54:	428a      	cmp	r2, r1
90014f56:	d1fa      	bne.n	90014f4e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90014f58:	698a      	ldr	r2, [r1, #24]
90014f5a:	619a      	str	r2, [r3, #24]
90014f5c:	2300      	movs	r3, #0
90014f5e:	e9c1 3305 	strd	r3, r3, [r1, #20]
90014f62:	4770      	bx	lr

90014f64 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90014f64:	b410      	push	{r4}
90014f66:	6a83      	ldr	r3, [r0, #40]	; 0x28
90014f68:	4604      	mov	r4, r0
90014f6a:	b92b      	cbnz	r3, 90014f78 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90014f6c:	6803      	ldr	r3, [r0, #0]
90014f6e:	4611      	mov	r1, r2
90014f70:	f85d 4b04 	ldr.w	r4, [sp], #4
90014f74:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90014f76:	4718      	bx	r3
90014f78:	b941      	cbnz	r1, 90014f8c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90014f7a:	6193      	str	r3, [r2, #24]
90014f7c:	6282      	str	r2, [r0, #40]	; 0x28
90014f7e:	6154      	str	r4, [r2, #20]
90014f80:	f85d 4b04 	ldr.w	r4, [sp], #4
90014f84:	4770      	bx	lr
90014f86:	4603      	mov	r3, r0
90014f88:	2800      	cmp	r0, #0
90014f8a:	d0f9      	beq.n	90014f80 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90014f8c:	4299      	cmp	r1, r3
90014f8e:	6998      	ldr	r0, [r3, #24]
90014f90:	d1f9      	bne.n	90014f86 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90014f92:	6190      	str	r0, [r2, #24]
90014f94:	618a      	str	r2, [r1, #24]
90014f96:	e7f2      	b.n	90014f7e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90014f98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90014f98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014f9c:	461f      	mov	r7, r3
90014f9e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90014fa2:	460d      	mov	r5, r1
90014fa4:	4616      	mov	r6, r2
90014fa6:	b103      	cbz	r3, 90014faa <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90014fa8:	6038      	str	r0, [r7, #0]
90014faa:	6a84      	ldr	r4, [r0, #40]	; 0x28
90014fac:	b314      	cbz	r4, 90014ff4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90014fae:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90014fb2:	b1eb      	cbz	r3, 90014ff0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90014fb4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90014fb8:	428d      	cmp	r5, r1
90014fba:	db19      	blt.n	90014ff0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90014fbc:	b289      	uxth	r1, r1
90014fbe:	8923      	ldrh	r3, [r4, #8]
90014fc0:	440b      	add	r3, r1
90014fc2:	b21b      	sxth	r3, r3
90014fc4:	429d      	cmp	r5, r3
90014fc6:	da13      	bge.n	90014ff0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90014fc8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90014fcc:	4296      	cmp	r6, r2
90014fce:	db0f      	blt.n	90014ff0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90014fd0:	b292      	uxth	r2, r2
90014fd2:	8963      	ldrh	r3, [r4, #10]
90014fd4:	4413      	add	r3, r2
90014fd6:	b21b      	sxth	r3, r3
90014fd8:	429e      	cmp	r6, r3
90014fda:	da09      	bge.n	90014ff0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90014fdc:	6823      	ldr	r3, [r4, #0]
90014fde:	1ab2      	subs	r2, r6, r2
90014fe0:	1a69      	subs	r1, r5, r1
90014fe2:	4620      	mov	r0, r4
90014fe4:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
90014fe8:	b212      	sxth	r2, r2
90014fea:	463b      	mov	r3, r7
90014fec:	b209      	sxth	r1, r1
90014fee:	47c0      	blx	r8
90014ff0:	69a4      	ldr	r4, [r4, #24]
90014ff2:	e7db      	b.n	90014fac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90014ff4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90014ff8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90014ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014ffc:	4c6d      	ldr	r4, [pc, #436]	; (900151b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90014ffe:	b0a1      	sub	sp, #132	; 0x84
90015000:	4606      	mov	r6, r0
90015002:	6824      	ldr	r4, [r4, #0]
90015004:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90015006:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
9001500a:	2400      	movs	r4, #0
9001500c:	9303      	str	r3, [sp, #12]
9001500e:	802c      	strh	r4, [r5, #0]
90015010:	9d2b      	ldr	r5, [sp, #172]	; 0xac
90015012:	802c      	strh	r4, [r5, #0]
90015014:	601c      	str	r4, [r3, #0]
90015016:	e9cd 1201 	strd	r1, r2, [sp, #4]
9001501a:	f7ff ffbd 	bl	90014f98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9001501e:	f1b9 0f03 	cmp.w	r9, #3
90015022:	f340 80c1 	ble.w	900151a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90015026:	4631      	mov	r1, r6
90015028:	a80c      	add	r0, sp, #48	; 0x30
9001502a:	f006 fff5 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001502e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
90015032:	9306      	str	r3, [sp, #24]
90015034:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90015038:	9307      	str	r3, [sp, #28]
9001503a:	9b03      	ldr	r3, [sp, #12]
9001503c:	f8d3 a000 	ldr.w	sl, [r3]
90015040:	f1ba 0f00 	cmp.w	sl, #0
90015044:	f000 80b3 	beq.w	900151ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90015048:	4651      	mov	r1, sl
9001504a:	a810      	add	r0, sp, #64	; 0x40
9001504c:	f006 ffe4 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015050:	2002      	movs	r0, #2
90015052:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
90015056:	9b01      	ldr	r3, [sp, #4]
90015058:	9a06      	ldr	r2, [sp, #24]
9001505a:	fb91 f1f0 	sdiv	r1, r1, r0
9001505e:	189d      	adds	r5, r3, r2
90015060:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
90015064:	9a07      	ldr	r2, [sp, #28]
90015066:	4419      	add	r1, r3
90015068:	9b02      	ldr	r3, [sp, #8]
9001506a:	4413      	add	r3, r2
9001506c:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
90015070:	1a6d      	subs	r5, r5, r1
90015072:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
90015076:	fb92 f2f0 	sdiv	r2, r2, r0
9001507a:	440a      	add	r2, r1
9001507c:	1a9b      	subs	r3, r3, r2
9001507e:	435b      	muls	r3, r3
90015080:	fb05 3505 	mla	r5, r5, r5, r3
90015084:	4f4c      	ldr	r7, [pc, #304]	; (900151b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90015086:	ac10      	add	r4, sp, #64	; 0x40
90015088:	f1b9 0f0c 	cmp.w	r9, #12
9001508c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001508e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90015090:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90015092:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90015094:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90015096:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90015098:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9001509c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
900150a0:	f04f 0303 	mov.w	r3, #3
900150a4:	bfd8      	it	le
900150a6:	f109 32ff 	addle.w	r2, r9, #4294967295
900150aa:	f04f 0400 	mov.w	r4, #0
900150ae:	f8cd 9000 	str.w	r9, [sp]
900150b2:	bfcc      	ite	gt
900150b4:	4698      	movgt	r8, r3
900150b6:	fb92 f8f3 	sdivle	r8, r2, r3
900150ba:	1c63      	adds	r3, r4, #1
900150bc:	aa10      	add	r2, sp, #64	; 0x40
900150be:	f004 0401 	and.w	r4, r4, #1
900150c2:	f04f 0b00 	mov.w	fp, #0
900150c6:	9308      	str	r3, [sp, #32]
900150c8:	9b00      	ldr	r3, [sp, #0]
900150ca:	eb02 1444 	add.w	r4, r2, r4, lsl #5
900150ce:	fb93 f3f8 	sdiv	r3, r3, r8
900150d2:	3404      	adds	r4, #4
900150d4:	b29b      	uxth	r3, r3
900150d6:	9304      	str	r3, [sp, #16]
900150d8:	9a04      	ldr	r2, [sp, #16]
900150da:	f854 3c04 	ldr.w	r3, [r4, #-4]
900150de:	fb13 f302 	smulbb	r3, r3, r2
900150e2:	9a01      	ldr	r2, [sp, #4]
900150e4:	b29b      	uxth	r3, r3
900150e6:	1899      	adds	r1, r3, r2
900150e8:	9305      	str	r3, [sp, #20]
900150ea:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900150ee:	b209      	sxth	r1, r1
900150f0:	4299      	cmp	r1, r3
900150f2:	db4d      	blt.n	90015190 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900150f4:	8932      	ldrh	r2, [r6, #8]
900150f6:	4413      	add	r3, r2
900150f8:	b21b      	sxth	r3, r3
900150fa:	4299      	cmp	r1, r3
900150fc:	da48      	bge.n	90015190 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900150fe:	9b04      	ldr	r3, [sp, #16]
90015100:	6827      	ldr	r7, [r4, #0]
90015102:	fb17 f703 	smulbb	r7, r7, r3
90015106:	9b02      	ldr	r3, [sp, #8]
90015108:	b2bf      	uxth	r7, r7
9001510a:	18fa      	adds	r2, r7, r3
9001510c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90015110:	b212      	sxth	r2, r2
90015112:	429a      	cmp	r2, r3
90015114:	db3c      	blt.n	90015190 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90015116:	8970      	ldrh	r0, [r6, #10]
90015118:	4403      	add	r3, r0
9001511a:	b21b      	sxth	r3, r3
9001511c:	429a      	cmp	r2, r3
9001511e:	da37      	bge.n	90015190 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90015120:	2300      	movs	r3, #0
90015122:	4630      	mov	r0, r6
90015124:	930b      	str	r3, [sp, #44]	; 0x2c
90015126:	ab0b      	add	r3, sp, #44	; 0x2c
90015128:	f7ff ff36 	bl	90014f98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9001512c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001512e:	b37a      	cbz	r2, 90015190 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90015130:	4552      	cmp	r2, sl
90015132:	d02d      	beq.n	90015190 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90015134:	4611      	mov	r1, r2
90015136:	a80e      	add	r0, sp, #56	; 0x38
90015138:	9209      	str	r2, [sp, #36]	; 0x24
9001513a:	f006 ff6d 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001513e:	f04f 0e02 	mov.w	lr, #2
90015142:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
90015146:	9a06      	ldr	r2, [sp, #24]
90015148:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
9001514c:	9b01      	ldr	r3, [sp, #4]
9001514e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
90015152:	4413      	add	r3, r2
90015154:	9a07      	ldr	r2, [sp, #28]
90015156:	fb91 f1fe 	sdiv	r1, r1, lr
9001515a:	fb9c fcfe 	sdiv	ip, ip, lr
9001515e:	4401      	add	r1, r0
90015160:	1a58      	subs	r0, r3, r1
90015162:	9b02      	ldr	r3, [sp, #8]
90015164:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
90015168:	4413      	add	r3, r2
9001516a:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001516c:	448c      	add	ip, r1
9001516e:	eba3 030c 	sub.w	r3, r3, ip
90015172:	435b      	muls	r3, r3
90015174:	fb00 3300 	mla	r3, r0, r0, r3
90015178:	42ab      	cmp	r3, r5
9001517a:	d208      	bcs.n	9001518e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
9001517c:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001517e:	461d      	mov	r5, r3
90015180:	9803      	ldr	r0, [sp, #12]
90015182:	6001      	str	r1, [r0, #0]
90015184:	992a      	ldr	r1, [sp, #168]	; 0xa8
90015186:	9805      	ldr	r0, [sp, #20]
90015188:	8008      	strh	r0, [r1, #0]
9001518a:	992b      	ldr	r1, [sp, #172]	; 0xac
9001518c:	800f      	strh	r7, [r1, #0]
9001518e:	4692      	mov	sl, r2
90015190:	f10b 0b01 	add.w	fp, fp, #1
90015194:	3408      	adds	r4, #8
90015196:	f1bb 0f04 	cmp.w	fp, #4
9001519a:	d19d      	bne.n	900150d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
9001519c:	9b00      	ldr	r3, [sp, #0]
9001519e:	9c08      	ldr	r4, [sp, #32]
900151a0:	444b      	add	r3, r9
900151a2:	4544      	cmp	r4, r8
900151a4:	9300      	str	r3, [sp, #0]
900151a6:	d188      	bne.n	900150ba <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
900151a8:	b021      	add	sp, #132	; 0x84
900151aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900151ae:	f04f 35ff 	mov.w	r5, #4294967295
900151b2:	e767      	b.n	90015084 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
900151b4:	24028e2c 	.word	0x24028e2c
900151b8:	9002cbb4 	.word	0x9002cbb4

900151bc <_ZN8touchgfx4RectaNERKS0_>:
900151bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900151c0:	f9b1 7000 	ldrsh.w	r7, [r1]
900151c4:	888c      	ldrh	r4, [r1, #4]
900151c6:	f9b0 9000 	ldrsh.w	r9, [r0]
900151ca:	443c      	add	r4, r7
900151cc:	b2a4      	uxth	r4, r4
900151ce:	fa0f f884 	sxth.w	r8, r4
900151d2:	45c1      	cmp	r9, r8
900151d4:	da2f      	bge.n	90015236 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900151d6:	8882      	ldrh	r2, [r0, #4]
900151d8:	444a      	add	r2, r9
900151da:	b292      	uxth	r2, r2
900151dc:	fa0f fe82 	sxth.w	lr, r2
900151e0:	4577      	cmp	r7, lr
900151e2:	da28      	bge.n	90015236 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900151e4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
900151e8:	88cb      	ldrh	r3, [r1, #6]
900151ea:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900151ee:	442b      	add	r3, r5
900151f0:	b21b      	sxth	r3, r3
900151f2:	429e      	cmp	r6, r3
900151f4:	da1f      	bge.n	90015236 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900151f6:	88c3      	ldrh	r3, [r0, #6]
900151f8:	4433      	add	r3, r6
900151fa:	b29b      	uxth	r3, r3
900151fc:	fa0f fc83 	sxth.w	ip, r3
90015200:	4565      	cmp	r5, ip
90015202:	da18      	bge.n	90015236 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90015204:	454f      	cmp	r7, r9
90015206:	bfb8      	it	lt
90015208:	464f      	movlt	r7, r9
9001520a:	42b5      	cmp	r5, r6
9001520c:	bfb8      	it	lt
9001520e:	4635      	movlt	r5, r6
90015210:	45f0      	cmp	r8, lr
90015212:	bfd8      	it	le
90015214:	4622      	movle	r2, r4
90015216:	1bd2      	subs	r2, r2, r7
90015218:	8082      	strh	r2, [r0, #4]
9001521a:	884a      	ldrh	r2, [r1, #2]
9001521c:	88c9      	ldrh	r1, [r1, #6]
9001521e:	8007      	strh	r7, [r0, #0]
90015220:	440a      	add	r2, r1
90015222:	8045      	strh	r5, [r0, #2]
90015224:	b292      	uxth	r2, r2
90015226:	b211      	sxth	r1, r2
90015228:	458c      	cmp	ip, r1
9001522a:	bfa8      	it	ge
9001522c:	4613      	movge	r3, r2
9001522e:	1b5b      	subs	r3, r3, r5
90015230:	80c3      	strh	r3, [r0, #6]
90015232:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015236:	2300      	movs	r3, #0
90015238:	8003      	strh	r3, [r0, #0]
9001523a:	8043      	strh	r3, [r0, #2]
9001523c:	8083      	strh	r3, [r0, #4]
9001523e:	80c3      	strh	r3, [r0, #6]
90015240:	e7f7      	b.n	90015232 <_ZN8touchgfx4RectaNERKS0_+0x76>

90015242 <_ZNK8touchgfx4Rect7isEmptyEv>:
90015242:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90015246:	2b00      	cmp	r3, #0
90015248:	dd06      	ble.n	90015258 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
9001524a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9001524e:	2800      	cmp	r0, #0
90015250:	bfcc      	ite	gt
90015252:	2000      	movgt	r0, #0
90015254:	2001      	movle	r0, #1
90015256:	4770      	bx	lr
90015258:	2001      	movs	r0, #1
9001525a:	4770      	bx	lr

9001525c <_ZNK8touchgfx9Container16getContainedAreaEv>:
9001525c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015260:	2300      	movs	r3, #0
90015262:	4604      	mov	r4, r0
90015264:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90015266:	8003      	strh	r3, [r0, #0]
90015268:	8043      	strh	r3, [r0, #2]
9001526a:	8083      	strh	r3, [r0, #4]
9001526c:	80c3      	strh	r3, [r0, #6]
9001526e:	2d00      	cmp	r5, #0
90015270:	d040      	beq.n	900152f4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90015272:	1d28      	adds	r0, r5, #4
90015274:	f7ff ffe5 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
90015278:	b988      	cbnz	r0, 9001529e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9001527a:	4620      	mov	r0, r4
9001527c:	f7ff ffe1 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
90015280:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90015284:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90015288:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
9001528c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90015290:	b138      	cbz	r0, 900152a2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90015292:	8022      	strh	r2, [r4, #0]
90015294:	8063      	strh	r3, [r4, #2]
90015296:	f8a4 e004 	strh.w	lr, [r4, #4]
9001529a:	f8a4 c006 	strh.w	ip, [r4, #6]
9001529e:	69ad      	ldr	r5, [r5, #24]
900152a0:	e7e5      	b.n	9001526e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
900152a2:	f9b4 0000 	ldrsh.w	r0, [r4]
900152a6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900152aa:	4290      	cmp	r0, r2
900152ac:	4607      	mov	r7, r0
900152ae:	f8b4 8004 	ldrh.w	r8, [r4, #4]
900152b2:	460e      	mov	r6, r1
900152b4:	bfa8      	it	ge
900152b6:	4617      	movge	r7, r2
900152b8:	4299      	cmp	r1, r3
900152ba:	4472      	add	r2, lr
900152bc:	f8b4 e006 	ldrh.w	lr, [r4, #6]
900152c0:	bfa8      	it	ge
900152c2:	461e      	movge	r6, r3
900152c4:	4440      	add	r0, r8
900152c6:	4471      	add	r1, lr
900152c8:	4463      	add	r3, ip
900152ca:	b200      	sxth	r0, r0
900152cc:	8027      	strh	r7, [r4, #0]
900152ce:	b212      	sxth	r2, r2
900152d0:	8066      	strh	r6, [r4, #2]
900152d2:	b209      	sxth	r1, r1
900152d4:	b21b      	sxth	r3, r3
900152d6:	4290      	cmp	r0, r2
900152d8:	bfac      	ite	ge
900152da:	ebc7 0200 	rsbge	r2, r7, r0
900152de:	ebc7 0202 	rsblt	r2, r7, r2
900152e2:	4299      	cmp	r1, r3
900152e4:	bfac      	ite	ge
900152e6:	ebc6 0301 	rsbge	r3, r6, r1
900152ea:	ebc6 0303 	rsblt	r3, r6, r3
900152ee:	80a2      	strh	r2, [r4, #4]
900152f0:	80e3      	strh	r3, [r4, #6]
900152f2:	e7d4      	b.n	9001529e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900152f4:	4620      	mov	r0, r4
900152f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900152fa <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
900152fa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900152fe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90015302:	b383      	cbz	r3, 90015366 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90015304:	6a84      	ldr	r4, [r0, #40]	; 0x28
90015306:	b374      	cbz	r4, 90015366 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90015308:	f9b1 5000 	ldrsh.w	r5, [r1]
9001530c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90015310:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90015314:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90015318:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9001531c:	b303      	cbz	r3, 90015360 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001531e:	4668      	mov	r0, sp
90015320:	1d21      	adds	r1, r4, #4
90015322:	f8ad 5000 	strh.w	r5, [sp]
90015326:	f8ad 6002 	strh.w	r6, [sp, #2]
9001532a:	f8ad 7004 	strh.w	r7, [sp, #4]
9001532e:	f8ad 8006 	strh.w	r8, [sp, #6]
90015332:	f7ff ff43 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
90015336:	4668      	mov	r0, sp
90015338:	f7ff ff83 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001533c:	b980      	cbnz	r0, 90015360 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001533e:	f8bd 3000 	ldrh.w	r3, [sp]
90015342:	4669      	mov	r1, sp
90015344:	88a2      	ldrh	r2, [r4, #4]
90015346:	4620      	mov	r0, r4
90015348:	1a9b      	subs	r3, r3, r2
9001534a:	88e2      	ldrh	r2, [r4, #6]
9001534c:	f8ad 3000 	strh.w	r3, [sp]
90015350:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90015354:	1a9b      	subs	r3, r3, r2
90015356:	f8ad 3002 	strh.w	r3, [sp, #2]
9001535a:	6823      	ldr	r3, [r4, #0]
9001535c:	689b      	ldr	r3, [r3, #8]
9001535e:	4798      	blx	r3
90015360:	69a4      	ldr	r4, [r4, #24]
90015362:	2c00      	cmp	r4, #0
90015364:	d1d8      	bne.n	90015318 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90015366:	b002      	add	sp, #8
90015368:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001536c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
9001536c:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001536e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90015372:	460d      	mov	r5, r1
90015374:	4616      	mov	r6, r2
90015376:	b323      	cbz	r3, 900153c2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90015378:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001537a:	b314      	cbz	r4, 900153c2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9001537c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90015380:	b1eb      	cbz	r3, 900153be <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90015382:	6828      	ldr	r0, [r5, #0]
90015384:	466b      	mov	r3, sp
90015386:	6869      	ldr	r1, [r5, #4]
90015388:	c303      	stmia	r3!, {r0, r1}
9001538a:	4668      	mov	r0, sp
9001538c:	1d21      	adds	r1, r4, #4
9001538e:	f7ff ff15 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
90015392:	4668      	mov	r0, sp
90015394:	f7ff ff55 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
90015398:	b988      	cbnz	r0, 900153be <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001539a:	f8bd 3000 	ldrh.w	r3, [sp]
9001539e:	4669      	mov	r1, sp
900153a0:	88a2      	ldrh	r2, [r4, #4]
900153a2:	4620      	mov	r0, r4
900153a4:	1a9b      	subs	r3, r3, r2
900153a6:	88e2      	ldrh	r2, [r4, #6]
900153a8:	f8ad 3000 	strh.w	r3, [sp]
900153ac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900153b0:	1a9b      	subs	r3, r3, r2
900153b2:	4632      	mov	r2, r6
900153b4:	f8ad 3002 	strh.w	r3, [sp, #2]
900153b8:	6823      	ldr	r3, [r4, #0]
900153ba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
900153bc:	4798      	blx	r3
900153be:	69a4      	ldr	r4, [r4, #24]
900153c0:	e7db      	b.n	9001537a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
900153c2:	b002      	add	sp, #8
900153c4:	bd70      	pop	{r4, r5, r6, pc}

900153c6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
900153c6:	85c1      	strh	r1, [r0, #46]	; 0x2e
900153c8:	4770      	bx	lr

900153ca <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
900153ca:	4770      	bx	lr

900153cc <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
900153cc:	b510      	push	{r4, lr}
900153ce:	4604      	mov	r4, r0
900153d0:	218c      	movs	r1, #140	; 0x8c
900153d2:	f016 f820 	bl	9002b416 <_ZdlPvj>
900153d6:	4620      	mov	r0, r4
900153d8:	bd10      	pop	{r4, pc}
	...

900153dc <_ZN8touchgfx14SwipeContainerD1Ev>:
900153dc:	4b05      	ldr	r3, [pc, #20]	; (900153f4 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
900153de:	b510      	push	{r4, lr}
900153e0:	4604      	mov	r4, r0
900153e2:	6003      	str	r3, [r0, #0]
900153e4:	f005 fcee 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
900153e8:	3004      	adds	r0, #4
900153ea:	4621      	mov	r1, r4
900153ec:	f005 fd0f 	bl	9001ae0e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
900153f0:	4620      	mov	r0, r4
900153f2:	bd10      	pop	{r4, pc}
900153f4:	900303d8 	.word	0x900303d8

900153f8 <_ZN8touchgfx14SwipeContainerD0Ev>:
900153f8:	b510      	push	{r4, lr}
900153fa:	4604      	mov	r4, r0
900153fc:	f7ff ffee 	bl	900153dc <_ZN8touchgfx14SwipeContainerD1Ev>
90015400:	21f4      	movs	r1, #244	; 0xf4
90015402:	4620      	mov	r0, r4
90015404:	f016 f807 	bl	9002b416 <_ZdlPvj>
90015408:	4620      	mov	r0, r4
9001540a:	bd10      	pop	{r4, pc}

9001540c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
9001540c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90015410:	2b04      	cmp	r3, #4
90015412:	d117      	bne.n	90015444 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
90015414:	790b      	ldrb	r3, [r1, #4]
90015416:	2b01      	cmp	r3, #1
90015418:	d114      	bne.n	90015444 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
9001541a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
9001541e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
90015420:	2b00      	cmp	r3, #0
90015422:	8643      	strh	r3, [r0, #50]	; 0x32
90015424:	8682      	strh	r2, [r0, #52]	; 0x34
90015426:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
9001542a:	da0e      	bge.n	9001544a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
9001542c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
90015430:	3a01      	subs	r2, #1
90015432:	4291      	cmp	r1, r2
90015434:	d007      	beq.n	90015446 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
90015436:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
90015438:	4252      	negs	r2, r2
9001543a:	4293      	cmp	r3, r2
9001543c:	dc03      	bgt.n	90015446 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
9001543e:	2302      	movs	r3, #2
90015440:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
90015444:	4770      	bx	lr
90015446:	2300      	movs	r3, #0
90015448:	e7fa      	b.n	90015440 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
9001544a:	d0fb      	beq.n	90015444 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
9001544c:	b111      	cbz	r1, 90015454 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
9001544e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
90015450:	4293      	cmp	r3, r2
90015452:	da01      	bge.n	90015458 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
90015454:	2301      	movs	r3, #1
90015456:	e7f3      	b.n	90015440 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
90015458:	2303      	movs	r3, #3
9001545a:	e7f1      	b.n	90015440 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

9001545c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
9001545c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90015460:	2b04      	cmp	r3, #4
90015462:	d113      	bne.n	9001548c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
90015464:	790b      	ldrb	r3, [r1, #4]
90015466:	b98b      	cbnz	r3, 9001548c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
90015468:	8e03      	ldrh	r3, [r0, #48]	; 0x30
9001546a:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
9001546e:	8643      	strh	r3, [r0, #50]	; 0x32
90015470:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
90015472:	8683      	strh	r3, [r0, #52]	; 0x34
90015474:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90015478:	2b00      	cmp	r3, #0
9001547a:	da08      	bge.n	9001548e <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
9001547c:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
90015480:	3b01      	subs	r3, #1
90015482:	429a      	cmp	r2, r3
90015484:	da02      	bge.n	9001548c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
90015486:	2302      	movs	r3, #2
90015488:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
9001548c:	4770      	bx	lr
9001548e:	d0fd      	beq.n	9001548c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
90015490:	2a00      	cmp	r2, #0
90015492:	d0fb      	beq.n	9001548c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
90015494:	2303      	movs	r3, #3
90015496:	e7f7      	b.n	90015488 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

90015498 <_ZN8touchgfx8Drawable5setXYEss>:
90015498:	b570      	push	{r4, r5, r6, lr}
9001549a:	6803      	ldr	r3, [r0, #0]
9001549c:	4604      	mov	r4, r0
9001549e:	4615      	mov	r5, r2
900154a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900154a2:	4798      	blx	r3
900154a4:	6823      	ldr	r3, [r4, #0]
900154a6:	4629      	mov	r1, r5
900154a8:	4620      	mov	r0, r4
900154aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900154ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900154b0:	4718      	bx	r3
	...

900154b4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
900154b4:	b538      	push	{r3, r4, r5, lr}
900154b6:	4604      	mov	r4, r0
900154b8:	460d      	mov	r5, r1
900154ba:	2226      	movs	r2, #38	; 0x26
900154bc:	2100      	movs	r1, #0
900154be:	f016 fb0d 	bl	9002badc <memset>
900154c2:	4620      	mov	r0, r4
900154c4:	f7ff fc52 	bl	90014d6c <_ZN8touchgfx8DrawableC1Ev>
900154c8:	4b06      	ldr	r3, [pc, #24]	; (900154e4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
900154ca:	4620      	mov	r0, r4
900154cc:	4629      	mov	r1, r5
900154ce:	6023      	str	r3, [r4, #0]
900154d0:	882b      	ldrh	r3, [r5, #0]
900154d2:	84e3      	strh	r3, [r4, #38]	; 0x26
900154d4:	23ff      	movs	r3, #255	; 0xff
900154d6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
900154da:	f003 f896 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900154de:	4620      	mov	r0, r4
900154e0:	bd38      	pop	{r3, r4, r5, pc}
900154e2:	bf00      	nop
900154e4:	90030a7c 	.word	0x90030a7c

900154e8 <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
900154e8:	86c1      	strh	r1, [r0, #54]	; 0x36
900154ea:	4770      	bx	lr

900154ec <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
900154ec:	b508      	push	{r3, lr}
900154ee:	8e02      	ldrh	r2, [r0, #48]	; 0x30
900154f0:	3038      	adds	r0, #56	; 0x38
900154f2:	f890 10b9 	ldrb.w	r1, [r0, #185]	; 0xb9
900154f6:	f930 3c30 	ldrsh.w	r3, [r0, #-48]
900154fa:	fb03 2111 	mls	r1, r3, r1, r2
900154fe:	2200      	movs	r2, #0
90015500:	b209      	sxth	r1, r1
90015502:	f7ed fa8d 	bl	90002a20 <_ZN8touchgfx8Drawable6moveToEss>
90015506:	bd08      	pop	{r3, pc}

90015508 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
90015508:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9001550c:	2b04      	cmp	r3, #4
9001550e:	d119      	bne.n	90015544 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
90015510:	88ca      	ldrh	r2, [r1, #6]
90015512:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90015514:	1a9b      	subs	r3, r3, r2
90015516:	894a      	ldrh	r2, [r1, #10]
90015518:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
9001551c:	4413      	add	r3, r2
9001551e:	b21b      	sxth	r3, r3
90015520:	8603      	strh	r3, [r0, #48]	; 0x30
90015522:	b921      	cbnz	r1, 9001552e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
90015524:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
90015526:	4293      	cmp	r3, r2
90015528:	dd01      	ble.n	9001552e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
9001552a:	8602      	strh	r2, [r0, #48]	; 0x30
9001552c:	e008      	b.n	90015540 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
9001552e:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
90015532:	3a01      	subs	r2, #1
90015534:	4291      	cmp	r1, r2
90015536:	d103      	bne.n	90015540 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
90015538:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
9001553a:	4252      	negs	r2, r2
9001553c:	4293      	cmp	r3, r2
9001553e:	dbf4      	blt.n	9001552a <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
90015540:	f7ff bfd4 	b.w	900154ec <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
90015544:	4770      	bx	lr

90015546 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
90015546:	b538      	push	{r3, r4, r5, lr}
90015548:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
9001554c:	4604      	mov	r4, r0
9001554e:	2d0e      	cmp	r5, #14
90015550:	d813      	bhi.n	9001557a <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
90015552:	8e42      	ldrh	r2, [r0, #50]	; 0x32
90015554:	230e      	movs	r3, #14
90015556:	2100      	movs	r1, #0
90015558:	4628      	mov	r0, r5
9001555a:	4252      	negs	r2, r2
9001555c:	b212      	sxth	r2, r2
9001555e:	f007 fa07 	bl	9001c970 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
90015562:	8e63      	ldrh	r3, [r4, #50]	; 0x32
90015564:	4418      	add	r0, r3
90015566:	8620      	strh	r0, [r4, #48]	; 0x30
90015568:	4620      	mov	r0, r4
9001556a:	f7ff ffbf 	bl	900154ec <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
9001556e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
90015572:	3301      	adds	r3, #1
90015574:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
90015578:	bd38      	pop	{r3, r4, r5, pc}
9001557a:	2304      	movs	r3, #4
9001557c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
90015580:	2300      	movs	r3, #0
90015582:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
90015586:	8603      	strh	r3, [r0, #48]	; 0x30
90015588:	e7ef      	b.n	9001556a <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

9001558a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
9001558a:	b538      	push	{r3, r4, r5, lr}
9001558c:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
90015590:	4604      	mov	r4, r0
90015592:	2d0e      	cmp	r5, #14
90015594:	d812      	bhi.n	900155bc <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
90015596:	230e      	movs	r3, #14
90015598:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
9001559c:	2100      	movs	r1, #0
9001559e:	4628      	mov	r0, r5
900155a0:	f007 f9e6 	bl	9001c970 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
900155a4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
900155a6:	1a18      	subs	r0, r3, r0
900155a8:	8620      	strh	r0, [r4, #48]	; 0x30
900155aa:	4620      	mov	r0, r4
900155ac:	f7ff ff9e 	bl	900154ec <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
900155b0:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
900155b4:	3301      	adds	r3, #1
900155b6:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
900155ba:	bd38      	pop	{r3, r4, r5, pc}
900155bc:	2304      	movs	r3, #4
900155be:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
900155c2:	2300      	movs	r3, #0
900155c4:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
900155c8:	8603      	strh	r3, [r0, #48]	; 0x30
900155ca:	e7ef      	b.n	900155ac <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>

900155cc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
900155cc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
900155d0:	4604      	mov	r4, r0
900155d2:	2500      	movs	r5, #0
900155d4:	f7ff fbca 	bl	90014d6c <_ZN8touchgfx8DrawableC1Ev>
900155d8:	af02      	add	r7, sp, #8
900155da:	4626      	mov	r6, r4
900155dc:	4b18      	ldr	r3, [pc, #96]	; (90015640 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
900155de:	f64f 79ff 	movw	r9, #65535	; 0xffff
900155e2:	62a5      	str	r5, [r4, #40]	; 0x28
900155e4:	f846 3b2c 	str.w	r3, [r6], #44
900155e8:	4630      	mov	r0, r6
900155ea:	f827 9d04 	strh.w	r9, [r7, #-4]!
900155ee:	4639      	mov	r1, r7
900155f0:	f7ff ff60 	bl	900154b4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
900155f4:	f104 085c 	add.w	r8, r4, #92	; 0x5c
900155f8:	4b12      	ldr	r3, [pc, #72]	; (90015644 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
900155fa:	4639      	mov	r1, r7
900155fc:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
90015600:	4640      	mov	r0, r8
90015602:	62e3      	str	r3, [r4, #44]	; 0x2c
90015604:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
90015608:	f8ad 9004 	strh.w	r9, [sp, #4]
9001560c:	f7ff ff52 	bl	900154b4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
90015610:	462a      	mov	r2, r5
90015612:	4629      	mov	r1, r5
90015614:	4630      	mov	r0, r6
90015616:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
9001561a:	f7ff ff3d 	bl	90015498 <_ZN8touchgfx8Drawable5setXYEss>
9001561e:	462a      	mov	r2, r5
90015620:	4629      	mov	r1, r5
90015622:	4640      	mov	r0, r8
90015624:	f7ff ff38 	bl	90015498 <_ZN8touchgfx8Drawable5setXYEss>
90015628:	4631      	mov	r1, r6
9001562a:	4620      	mov	r0, r4
9001562c:	f7ff fc42 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90015630:	4620      	mov	r0, r4
90015632:	4641      	mov	r1, r8
90015634:	f7ff fc3e 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90015638:	4620      	mov	r0, r4
9001563a:	b003      	add	sp, #12
9001563c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015640:	90030348 	.word	0x90030348
90015644:	90030910 	.word	0x90030910

90015648 <_ZN8touchgfx14SwipeContainerC1Ev>:
90015648:	b570      	push	{r4, r5, r6, lr}
9001564a:	4604      	mov	r4, r0
9001564c:	f7ff fb8e 	bl	90014d6c <_ZN8touchgfx8DrawableC1Ev>
90015650:	4b1a      	ldr	r3, [pc, #104]	; (900156bc <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
90015652:	2500      	movs	r5, #0
90015654:	f104 0638 	add.w	r6, r4, #56	; 0x38
90015658:	6023      	str	r3, [r4, #0]
9001565a:	2304      	movs	r3, #4
9001565c:	62a5      	str	r5, [r4, #40]	; 0x28
9001565e:	4630      	mov	r0, r6
90015660:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
90015664:	2350      	movs	r3, #80	; 0x50
90015666:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
9001566a:	85e3      	strh	r3, [r4, #46]	; 0x2e
9001566c:	231e      	movs	r3, #30
9001566e:	8625      	strh	r5, [r4, #48]	; 0x30
90015670:	8665      	strh	r5, [r4, #50]	; 0x32
90015672:	86a5      	strh	r5, [r4, #52]	; 0x34
90015674:	86e3      	strh	r3, [r4, #54]	; 0x36
90015676:	f7ff fb79 	bl	90014d6c <_ZN8touchgfx8DrawableC1Ev>
9001567a:	4b11      	ldr	r3, [pc, #68]	; (900156c0 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
9001567c:	6625      	str	r5, [r4, #96]	; 0x60
9001567e:	63a3      	str	r3, [r4, #56]	; 0x38
90015680:	2302      	movs	r3, #2
90015682:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
90015686:	f104 0568 	add.w	r5, r4, #104	; 0x68
9001568a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
9001568e:	4628      	mov	r0, r5
90015690:	f7ff ff9c 	bl	900155cc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
90015694:	f005 fb96 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90015698:	4621      	mov	r1, r4
9001569a:	3004      	adds	r0, #4
9001569c:	f005 fc60 	bl	9001af60 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
900156a0:	2301      	movs	r3, #1
900156a2:	4631      	mov	r1, r6
900156a4:	4620      	mov	r0, r4
900156a6:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
900156aa:	f7ff fc03 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900156ae:	4620      	mov	r0, r4
900156b0:	4629      	mov	r1, r5
900156b2:	f7ff fbff 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900156b6:	4620      	mov	r0, r4
900156b8:	bd70      	pop	{r4, r5, r6, pc}
900156ba:	bf00      	nop
900156bc:	900303d8 	.word	0x900303d8
900156c0:	9003049c 	.word	0x9003049c

900156c4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
900156c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
900156c6:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
900156ca:	4604      	mov	r4, r0
900156cc:	460d      	mov	r5, r1
900156ce:	428b      	cmp	r3, r1
900156d0:	d915      	bls.n	900156fe <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
900156d2:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
900156d6:	428b      	cmp	r3, r1
900156d8:	d011      	beq.n	900156fe <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
900156da:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
900156de:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
900156e2:	a802      	add	r0, sp, #8
900156e4:	f820 3d04 	strh.w	r3, [r0, #-4]!
900156e8:	f008 f9f2 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900156ec:	fb15 f100 	smulbb	r1, r5, r0
900156f0:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
900156f4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
900156f8:	b209      	sxth	r1, r1
900156fa:	f7ed f991 	bl	90002a20 <_ZN8touchgfx8Drawable6moveToEss>
900156fe:	b003      	add	sp, #12
90015700:	bd30      	pop	{r4, r5, pc}

90015702 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
90015702:	b537      	push	{r0, r1, r2, r4, r5, lr}
90015704:	4604      	mov	r4, r0
90015706:	f64f 72ff 	movw	r2, #65535	; 0xffff
9001570a:	460d      	mov	r5, r1
9001570c:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
90015710:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
90015714:	4293      	cmp	r3, r2
90015716:	d019      	beq.n	9001574c <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x4a>
90015718:	a802      	add	r0, sp, #8
9001571a:	f820 3d04 	strh.w	r3, [r0, #-4]!
9001571e:	f008 f9d7 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015722:	fb15 f100 	smulbb	r1, r5, r0
90015726:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
9001572a:	4620      	mov	r0, r4
9001572c:	b209      	sxth	r1, r1
9001572e:	86a1      	strh	r1, [r4, #52]	; 0x34
90015730:	f7ff f9b4 	bl	90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90015734:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
90015738:	4620      	mov	r0, r4
9001573a:	42a9      	cmp	r1, r5
9001573c:	bf28      	it	cs
9001573e:	4629      	movcs	r1, r5
90015740:	f7ff ffc0 	bl	900156c4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
90015744:	6823      	ldr	r3, [r4, #0]
90015746:	4620      	mov	r0, r4
90015748:	699b      	ldr	r3, [r3, #24]
9001574a:	4798      	blx	r3
9001574c:	b003      	add	sp, #12
9001574e:	bd30      	pop	{r4, r5, pc}

90015750 <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
90015750:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
90015754:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
90015758:	3101      	adds	r1, #1
9001575a:	fb91 f3f2 	sdiv	r3, r1, r2
9001575e:	fb02 1113 	mls	r1, r2, r3, r1
90015762:	b2c9      	uxtb	r1, r1
90015764:	f7ff bfae 	b.w	900156c4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

90015768 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
90015768:	b510      	push	{r4, lr}
9001576a:	4604      	mov	r4, r0
9001576c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
90015770:	280a      	cmp	r0, #10
90015772:	d813      	bhi.n	9001579c <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
90015774:	8e63      	ldrh	r3, [r4, #50]	; 0x32
90015776:	2100      	movs	r1, #0
90015778:	8922      	ldrh	r2, [r4, #8]
9001577a:	441a      	add	r2, r3
9001577c:	230a      	movs	r3, #10
9001577e:	b212      	sxth	r2, r2
90015780:	f007 f934 	bl	9001c9ec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
90015784:	8e63      	ldrh	r3, [r4, #50]	; 0x32
90015786:	1a18      	subs	r0, r3, r0
90015788:	8620      	strh	r0, [r4, #48]	; 0x30
9001578a:	4620      	mov	r0, r4
9001578c:	f7ff feae 	bl	900154ec <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
90015790:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
90015794:	3301      	adds	r3, #1
90015796:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
9001579a:	bd10      	pop	{r4, pc}
9001579c:	2304      	movs	r3, #4
9001579e:	f104 0068 	add.w	r0, r4, #104	; 0x68
900157a2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
900157a6:	2300      	movs	r3, #0
900157a8:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
900157ac:	8623      	strh	r3, [r4, #48]	; 0x30
900157ae:	f7ff ffcf 	bl	90015750 <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
900157b2:	e7ea      	b.n	9001578a <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

900157b4 <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
900157b4:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
900157b8:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
900157bc:	4411      	add	r1, r2
900157be:	3901      	subs	r1, #1
900157c0:	fb91 f3f2 	sdiv	r3, r1, r2
900157c4:	fb02 1113 	mls	r1, r2, r3, r1
900157c8:	b2c9      	uxtb	r1, r1
900157ca:	f7ff bf7b 	b.w	900156c4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

900157ce <_ZN8touchgfx14SwipeContainer12animateRightEv>:
900157ce:	b510      	push	{r4, lr}
900157d0:	4604      	mov	r4, r0
900157d2:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
900157d6:	280a      	cmp	r0, #10
900157d8:	d813      	bhi.n	90015802 <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
900157da:	8e63      	ldrh	r3, [r4, #50]	; 0x32
900157dc:	2100      	movs	r1, #0
900157de:	8922      	ldrh	r2, [r4, #8]
900157e0:	1ad2      	subs	r2, r2, r3
900157e2:	230a      	movs	r3, #10
900157e4:	b212      	sxth	r2, r2
900157e6:	f007 f901 	bl	9001c9ec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
900157ea:	8e63      	ldrh	r3, [r4, #50]	; 0x32
900157ec:	4418      	add	r0, r3
900157ee:	8620      	strh	r0, [r4, #48]	; 0x30
900157f0:	4620      	mov	r0, r4
900157f2:	f7ff fe7b 	bl	900154ec <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
900157f6:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
900157fa:	3301      	adds	r3, #1
900157fc:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
90015800:	bd10      	pop	{r4, pc}
90015802:	2304      	movs	r3, #4
90015804:	f104 0068 	add.w	r0, r4, #104	; 0x68
90015808:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
9001580c:	2300      	movs	r3, #0
9001580e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
90015812:	8623      	strh	r3, [r4, #48]	; 0x30
90015814:	f7ff ffce 	bl	900157b4 <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
90015818:	e7ea      	b.n	900157f0 <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

9001581a <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
9001581a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9001581e:	b90b      	cbnz	r3, 90015824 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
90015820:	f7ff be91 	b.w	90015546 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
90015824:	2b01      	cmp	r3, #1
90015826:	d101      	bne.n	9001582c <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
90015828:	f7ff beaf 	b.w	9001558a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
9001582c:	2b02      	cmp	r3, #2
9001582e:	d101      	bne.n	90015834 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
90015830:	f7ff bf9a 	b.w	90015768 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
90015834:	2b03      	cmp	r3, #3
90015836:	d101      	bne.n	9001583c <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
90015838:	f7ff bfc9 	b.w	900157ce <_ZN8touchgfx14SwipeContainer12animateRightEv>
9001583c:	4770      	bx	lr

9001583e <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
9001583e:	b510      	push	{r4, lr}
90015840:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
90015844:	4604      	mov	r4, r0
90015846:	428b      	cmp	r3, r1
90015848:	d907      	bls.n	9001585a <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
9001584a:	3068      	adds	r0, #104	; 0x68
9001584c:	f7ff ff3a 	bl	900156c4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
90015850:	4620      	mov	r0, r4
90015852:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90015856:	f7ff be49 	b.w	900154ec <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
9001585a:	bd10      	pop	{r4, pc}

9001585c <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
9001585c:	b538      	push	{r3, r4, r5, lr}
9001585e:	4604      	mov	r4, r0
90015860:	3038      	adds	r0, #56	; 0x38
90015862:	460d      	mov	r5, r1
90015864:	f000 f964 	bl	90015b30 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
90015868:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
9001586c:	f104 0068 	add.w	r0, r4, #104	; 0x68
90015870:	3101      	adds	r1, #1
90015872:	b2c9      	uxtb	r1, r1
90015874:	f7ff ff45 	bl	90015702 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
90015878:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
9001587c:	4620      	mov	r0, r4
9001587e:	f7ff ffde 	bl	9001583e <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
90015882:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
90015886:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
9001588a:	4620      	mov	r0, r4
9001588c:	f7ff f906 	bl	90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90015890:	bd38      	pop	{r3, r4, r5, pc}

90015892 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
90015892:	b570      	push	{r4, r5, r6, lr}
90015894:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
90015898:	4604      	mov	r4, r0
9001589a:	b1cb      	cbz	r3, 900158d0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x3e>
9001589c:	6e03      	ldr	r3, [r0, #96]	; 0x60
9001589e:	b1bb      	cbz	r3, 900158d0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x3e>
900158a0:	428b      	cmp	r3, r1
900158a2:	d127      	bne.n	900158f4 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x62>
900158a4:	4619      	mov	r1, r3
900158a6:	f104 0038 	add.w	r0, r4, #56	; 0x38
900158aa:	f000 f9c1 	bl	90015c30 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
900158ae:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
900158b2:	f104 0668 	add.w	r6, r4, #104	; 0x68
900158b6:	3901      	subs	r1, #1
900158b8:	4630      	mov	r0, r6
900158ba:	b2c9      	uxtb	r1, r1
900158bc:	f7ff ff21 	bl	90015702 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
900158c0:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
900158c4:	b92d      	cbnz	r5, 900158d2 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x40>
900158c6:	462a      	mov	r2, r5
900158c8:	4629      	mov	r1, r5
900158ca:	4620      	mov	r0, r4
900158cc:	f7ff f8e6 	bl	90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
900158d0:	bd70      	pop	{r4, r5, r6, pc}
900158d2:	4630      	mov	r0, r6
900158d4:	3d01      	subs	r5, #1
900158d6:	f7ed f887 	bl	900029e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900158da:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
900158de:	4620      	mov	r0, r4
900158e0:	42a9      	cmp	r1, r5
900158e2:	bfa8      	it	ge
900158e4:	4629      	movge	r1, r5
900158e6:	b2c9      	uxtb	r1, r1
900158e8:	f7ff ffa9 	bl	9001583e <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
900158ec:	4630      	mov	r0, r6
900158ee:	f7ed f87b 	bl	900029e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900158f2:	e7ed      	b.n	900158d0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x3e>
900158f4:	699b      	ldr	r3, [r3, #24]
900158f6:	e7d2      	b.n	9001589e <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

900158f8 <_ZNK8touchgfx10ListLayout12getDirectionEv>:
900158f8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
900158fc:	4770      	bx	lr

900158fe <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
900158fe:	b538      	push	{r3, r4, r5, lr}
90015900:	7882      	ldrb	r2, [r0, #2]
90015902:	4604      	mov	r4, r0
90015904:	460d      	mov	r5, r1
90015906:	6843      	ldr	r3, [r0, #4]
90015908:	b98a      	cbnz	r2, 9001592e <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
9001590a:	4299      	cmp	r1, r3
9001590c:	d101      	bne.n	90015912 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
9001590e:	2301      	movs	r3, #1
90015910:	7083      	strb	r3, [r0, #2]
90015912:	6863      	ldr	r3, [r4, #4]
90015914:	42ab      	cmp	r3, r5
90015916:	d009      	beq.n	9001592c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
90015918:	7a23      	ldrb	r3, [r4, #8]
9001591a:	2b01      	cmp	r3, #1
9001591c:	d11b      	bne.n	90015956 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
9001591e:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90015922:	f9b4 2000 	ldrsh.w	r2, [r4]
90015926:	429a      	cmp	r2, r3
90015928:	bfb8      	it	lt
9001592a:	8023      	strhlt	r3, [r4, #0]
9001592c:	bd38      	pop	{r3, r4, r5, pc}
9001592e:	7a02      	ldrb	r2, [r0, #8]
90015930:	2a01      	cmp	r2, #1
90015932:	d108      	bne.n	90015946 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
90015934:	895b      	ldrh	r3, [r3, #10]
90015936:	88c9      	ldrh	r1, [r1, #6]
90015938:	1ac9      	subs	r1, r1, r3
9001593a:	682b      	ldr	r3, [r5, #0]
9001593c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9001593e:	b209      	sxth	r1, r1
90015940:	4628      	mov	r0, r5
90015942:	4798      	blx	r3
90015944:	e7e5      	b.n	90015912 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
90015946:	2a02      	cmp	r2, #2
90015948:	d1e3      	bne.n	90015912 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
9001594a:	891b      	ldrh	r3, [r3, #8]
9001594c:	8889      	ldrh	r1, [r1, #4]
9001594e:	1ac9      	subs	r1, r1, r3
90015950:	682b      	ldr	r3, [r5, #0]
90015952:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90015954:	e7f3      	b.n	9001593e <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
90015956:	2b02      	cmp	r3, #2
90015958:	d1e8      	bne.n	9001592c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
9001595a:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
9001595e:	e7e0      	b.n	90015922 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

90015960 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
90015960:	4770      	bx	lr

90015962 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
90015962:	4770      	bx	lr

90015964 <_ZN8touchgfx10ListLayoutD1Ev>:
90015964:	4770      	bx	lr

90015966 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
90015966:	b430      	push	{r4, r5}
90015968:	68c5      	ldr	r5, [r0, #12]
9001596a:	4603      	mov	r3, r0
9001596c:	6844      	ldr	r4, [r0, #4]
9001596e:	106a      	asrs	r2, r5, #1
90015970:	07ed      	lsls	r5, r5, #31
90015972:	689b      	ldr	r3, [r3, #8]
90015974:	eb04 0002 	add.w	r0, r4, r2
90015978:	bf48      	it	mi
9001597a:	58a2      	ldrmi	r2, [r4, r2]
9001597c:	bc30      	pop	{r4, r5}
9001597e:	bf48      	it	mi
90015980:	58d3      	ldrmi	r3, [r2, r3]
90015982:	4718      	bx	r3

90015984 <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
90015984:	6843      	ldr	r3, [r0, #4]
90015986:	b12b      	cbz	r3, 90015994 <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
90015988:	6883      	ldr	r3, [r0, #8]
9001598a:	b92b      	cbnz	r3, 90015998 <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
9001598c:	68c0      	ldr	r0, [r0, #12]
9001598e:	f000 0001 	and.w	r0, r0, #1
90015992:	4770      	bx	lr
90015994:	4618      	mov	r0, r3
90015996:	4770      	bx	lr
90015998:	2001      	movs	r0, #1
9001599a:	4770      	bx	lr

9001599c <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
9001599c:	b430      	push	{r4, r5}
9001599e:	68c5      	ldr	r5, [r0, #12]
900159a0:	4603      	mov	r3, r0
900159a2:	6844      	ldr	r4, [r0, #4]
900159a4:	106a      	asrs	r2, r5, #1
900159a6:	07ed      	lsls	r5, r5, #31
900159a8:	689b      	ldr	r3, [r3, #8]
900159aa:	eb04 0002 	add.w	r0, r4, r2
900159ae:	bf48      	it	mi
900159b0:	58a2      	ldrmi	r2, [r4, r2]
900159b2:	bc30      	pop	{r4, r5}
900159b4:	bf48      	it	mi
900159b6:	58d3      	ldrmi	r3, [r2, r3]
900159b8:	4718      	bx	r3

900159ba <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
900159ba:	6843      	ldr	r3, [r0, #4]
900159bc:	b12b      	cbz	r3, 900159ca <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
900159be:	6883      	ldr	r3, [r0, #8]
900159c0:	b92b      	cbnz	r3, 900159ce <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
900159c2:	68c0      	ldr	r0, [r0, #12]
900159c4:	f000 0001 	and.w	r0, r0, #1
900159c8:	4770      	bx	lr
900159ca:	4618      	mov	r0, r3
900159cc:	4770      	bx	lr
900159ce:	2001      	movs	r0, #1
900159d0:	4770      	bx	lr

900159d2 <_ZN8touchgfx10ListLayoutD0Ev>:
900159d2:	b510      	push	{r4, lr}
900159d4:	4604      	mov	r4, r0
900159d6:	2130      	movs	r1, #48	; 0x30
900159d8:	f015 fd1d 	bl	9002b416 <_ZdlPvj>
900159dc:	4620      	mov	r0, r4
900159de:	bd10      	pop	{r4, pc}

900159e0 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
900159e0:	b510      	push	{r4, lr}
900159e2:	4604      	mov	r4, r0
900159e4:	2110      	movs	r1, #16
900159e6:	f015 fd16 	bl	9002b416 <_ZdlPvj>
900159ea:	4620      	mov	r0, r4
900159ec:	bd10      	pop	{r4, pc}

900159ee <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
900159ee:	b510      	push	{r4, lr}
900159f0:	4604      	mov	r4, r0
900159f2:	2110      	movs	r1, #16
900159f4:	f015 fd0f 	bl	9002b416 <_ZdlPvj>
900159f8:	4620      	mov	r0, r4
900159fa:	bd10      	pop	{r4, pc}

900159fc <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
900159fc:	4603      	mov	r3, r0
900159fe:	4608      	mov	r0, r1
90015a00:	789a      	ldrb	r2, [r3, #2]
90015a02:	b992      	cbnz	r2, 90015a2a <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
90015a04:	685a      	ldr	r2, [r3, #4]
90015a06:	428a      	cmp	r2, r1
90015a08:	d102      	bne.n	90015a10 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
90015a0a:	2201      	movs	r2, #1
90015a0c:	709a      	strb	r2, [r3, #2]
90015a0e:	4770      	bx	lr
90015a10:	7a1a      	ldrb	r2, [r3, #8]
90015a12:	2a01      	cmp	r2, #1
90015a14:	d104      	bne.n	90015a20 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
90015a16:	88ca      	ldrh	r2, [r1, #6]
90015a18:	8949      	ldrh	r1, [r1, #10]
90015a1a:	440a      	add	r2, r1
90015a1c:	801a      	strh	r2, [r3, #0]
90015a1e:	4770      	bx	lr
90015a20:	2a02      	cmp	r2, #2
90015a22:	d116      	bne.n	90015a52 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
90015a24:	888a      	ldrh	r2, [r1, #4]
90015a26:	8909      	ldrh	r1, [r1, #8]
90015a28:	e7f7      	b.n	90015a1a <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
90015a2a:	7a1a      	ldrb	r2, [r3, #8]
90015a2c:	2a01      	cmp	r2, #1
90015a2e:	d107      	bne.n	90015a40 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
90015a30:	685b      	ldr	r3, [r3, #4]
90015a32:	8959      	ldrh	r1, [r3, #10]
90015a34:	88c3      	ldrh	r3, [r0, #6]
90015a36:	4419      	add	r1, r3
90015a38:	6803      	ldr	r3, [r0, #0]
90015a3a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90015a3c:	b209      	sxth	r1, r1
90015a3e:	4718      	bx	r3
90015a40:	2a02      	cmp	r2, #2
90015a42:	d106      	bne.n	90015a52 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
90015a44:	685b      	ldr	r3, [r3, #4]
90015a46:	8919      	ldrh	r1, [r3, #8]
90015a48:	8883      	ldrh	r3, [r0, #4]
90015a4a:	4419      	add	r1, r3
90015a4c:	6803      	ldr	r3, [r0, #0]
90015a4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90015a50:	e7f4      	b.n	90015a3c <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
90015a52:	4770      	bx	lr

90015a54 <_ZN8touchgfx10ListLayout9removeAllEv>:
90015a54:	2200      	movs	r2, #0
90015a56:	b510      	push	{r4, lr}
90015a58:	4604      	mov	r4, r0
90015a5a:	85c2      	strh	r2, [r0, #46]	; 0x2e
90015a5c:	4611      	mov	r1, r2
90015a5e:	f7ff f81d 	bl	90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90015a62:	4620      	mov	r0, r4
90015a64:	f7ff fa33 	bl	90014ece <_ZN8touchgfx9Container9removeAllEv>
90015a68:	6960      	ldr	r0, [r4, #20]
90015a6a:	b120      	cbz	r0, 90015a76 <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
90015a6c:	6803      	ldr	r3, [r0, #0]
90015a6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90015a72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90015a74:	4718      	bx	r3
90015a76:	bd10      	pop	{r4, pc}

90015a78 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
90015a78:	b530      	push	{r4, r5, lr}
90015a7a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90015a7e:	b085      	sub	sp, #20
90015a80:	4604      	mov	r4, r0
90015a82:	428b      	cmp	r3, r1
90015a84:	d017      	beq.n	90015ab6 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
90015a86:	2500      	movs	r5, #0
90015a88:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
90015a8c:	85c5      	strh	r5, [r0, #46]	; 0x2e
90015a8e:	462a      	mov	r2, r5
90015a90:	4629      	mov	r1, r5
90015a92:	f7ff f803 	bl	90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90015a96:	4b09      	ldr	r3, [pc, #36]	; (90015abc <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
90015a98:	4620      	mov	r0, r4
90015a9a:	4669      	mov	r1, sp
90015a9c:	e9cd 3400 	strd	r3, r4, [sp]
90015aa0:	4b07      	ldr	r3, [pc, #28]	; (90015ac0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
90015aa2:	e9cd 3502 	strd	r3, r5, [sp, #8]
90015aa6:	6823      	ldr	r3, [r4, #0]
90015aa8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015aaa:	4798      	blx	r3
90015aac:	6960      	ldr	r0, [r4, #20]
90015aae:	b110      	cbz	r0, 90015ab6 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
90015ab0:	6803      	ldr	r3, [r0, #0]
90015ab2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90015ab4:	4798      	blx	r3
90015ab6:	b005      	add	sp, #20
90015ab8:	bd30      	pop	{r4, r5, pc}
90015aba:	bf00      	nop
90015abc:	9003046c 	.word	0x9003046c
90015ac0:	90015b29 	.word	0x90015b29

90015ac4 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
90015ac4:	b538      	push	{r3, r4, r5, lr}
90015ac6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90015aca:	460d      	mov	r5, r1
90015acc:	4604      	mov	r4, r0
90015ace:	4611      	mov	r1, r2
90015ad0:	2b01      	cmp	r3, #1
90015ad2:	d002      	beq.n	90015ada <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
90015ad4:	2b02      	cmp	r3, #2
90015ad6:	d015      	beq.n	90015b04 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
90015ad8:	bd38      	pop	{r3, r4, r5, pc}
90015ada:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90015ade:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90015ae2:	429a      	cmp	r2, r3
90015ae4:	bfb8      	it	lt
90015ae6:	8103      	strhlt	r3, [r0, #8]
90015ae8:	8943      	ldrh	r3, [r0, #10]
90015aea:	896a      	ldrh	r2, [r5, #10]
90015aec:	4413      	add	r3, r2
90015aee:	460a      	mov	r2, r1
90015af0:	2100      	movs	r1, #0
90015af2:	8143      	strh	r3, [r0, #10]
90015af4:	4628      	mov	r0, r5
90015af6:	f7ff fccf 	bl	90015498 <_ZN8touchgfx8Drawable5setXYEss>
90015afa:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
90015afc:	896a      	ldrh	r2, [r5, #10]
90015afe:	4413      	add	r3, r2
90015b00:	85e3      	strh	r3, [r4, #46]	; 0x2e
90015b02:	e7e9      	b.n	90015ad8 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
90015b04:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
90015b08:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90015b0c:	429a      	cmp	r2, r3
90015b0e:	bfb8      	it	lt
90015b10:	8143      	strhlt	r3, [r0, #10]
90015b12:	8903      	ldrh	r3, [r0, #8]
90015b14:	892a      	ldrh	r2, [r5, #8]
90015b16:	4413      	add	r3, r2
90015b18:	2200      	movs	r2, #0
90015b1a:	8103      	strh	r3, [r0, #8]
90015b1c:	4628      	mov	r0, r5
90015b1e:	f7ff fcbb 	bl	90015498 <_ZN8touchgfx8Drawable5setXYEss>
90015b22:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
90015b24:	892a      	ldrh	r2, [r5, #8]
90015b26:	e7ea      	b.n	90015afe <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

90015b28 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
90015b28:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
90015b2c:	f7ff bfca 	b.w	90015ac4 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

90015b30 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
90015b30:	b570      	push	{r4, r5, r6, lr}
90015b32:	4604      	mov	r4, r0
90015b34:	460d      	mov	r5, r1
90015b36:	f7ff fff7 	bl	90015b28 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
90015b3a:	4620      	mov	r0, r4
90015b3c:	4629      	mov	r1, r5
90015b3e:	f7ff f9b9 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90015b42:	6960      	ldr	r0, [r4, #20]
90015b44:	b120      	cbz	r0, 90015b50 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
90015b46:	6803      	ldr	r3, [r0, #0]
90015b48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015b4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90015b4e:	4718      	bx	r3
90015b50:	bd70      	pop	{r4, r5, r6, pc}
	...

90015b54 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
90015b54:	b530      	push	{r4, r5, lr}
90015b56:	6a83      	ldr	r3, [r0, #40]	; 0x28
90015b58:	b089      	sub	sp, #36	; 0x24
90015b5a:	4604      	mov	r4, r0
90015b5c:	4615      	mov	r5, r2
90015b5e:	b92b      	cbnz	r3, 90015b6c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
90015b60:	6803      	ldr	r3, [r0, #0]
90015b62:	4611      	mov	r1, r2
90015b64:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90015b66:	4798      	blx	r3
90015b68:	b009      	add	sp, #36	; 0x24
90015b6a:	bd30      	pop	{r4, r5, pc}
90015b6c:	f7ff f9fa 	bl	90014f64 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
90015b70:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
90015b74:	2300      	movs	r3, #0
90015b76:	a904      	add	r1, sp, #16
90015b78:	f88d 200c 	strb.w	r2, [sp, #12]
90015b7c:	4620      	mov	r0, r4
90015b7e:	4a0e      	ldr	r2, [pc, #56]	; (90015bb8 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
90015b80:	f8ad 3004 	strh.w	r3, [sp, #4]
90015b84:	9204      	str	r2, [sp, #16]
90015b86:	aa01      	add	r2, sp, #4
90015b88:	f88d 3006 	strb.w	r3, [sp, #6]
90015b8c:	9205      	str	r2, [sp, #20]
90015b8e:	4a0b      	ldr	r2, [pc, #44]	; (90015bbc <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
90015b90:	9502      	str	r5, [sp, #8]
90015b92:	e9cd 2306 	strd	r2, r3, [sp, #24]
90015b96:	6823      	ldr	r3, [r4, #0]
90015b98:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015b9a:	4798      	blx	r3
90015b9c:	4620      	mov	r0, r4
90015b9e:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
90015ba2:	4629      	mov	r1, r5
90015ba4:	f7ff ff8e 	bl	90015ac4 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
90015ba8:	6960      	ldr	r0, [r4, #20]
90015baa:	2800      	cmp	r0, #0
90015bac:	d0dc      	beq.n	90015b68 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
90015bae:	6803      	ldr	r3, [r0, #0]
90015bb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90015bb2:	4798      	blx	r3
90015bb4:	e7d8      	b.n	90015b68 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
90015bb6:	bf00      	nop
90015bb8:	90030484 	.word	0x90030484
90015bbc:	900159fd 	.word	0x900159fd

90015bc0 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
90015bc0:	b538      	push	{r3, r4, r5, lr}
90015bc2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90015bc6:	4604      	mov	r4, r0
90015bc8:	460d      	mov	r5, r1
90015bca:	2b01      	cmp	r3, #1
90015bcc:	d002      	beq.n	90015bd4 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
90015bce:	2b02      	cmp	r3, #2
90015bd0:	d018      	beq.n	90015c04 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
90015bd2:	bd38      	pop	{r3, r4, r5, pc}
90015bd4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90015bd8:	4293      	cmp	r3, r2
90015bda:	8943      	ldrh	r3, [r0, #10]
90015bdc:	bfc8      	it	gt
90015bde:	8102      	strhgt	r2, [r0, #8]
90015be0:	894a      	ldrh	r2, [r1, #10]
90015be2:	1a9b      	subs	r3, r3, r2
90015be4:	8143      	strh	r3, [r0, #10]
90015be6:	4628      	mov	r0, r5
90015be8:	680b      	ldr	r3, [r1, #0]
90015bea:	2100      	movs	r1, #0
90015bec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90015bee:	4798      	blx	r3
90015bf0:	682b      	ldr	r3, [r5, #0]
90015bf2:	2100      	movs	r1, #0
90015bf4:	4628      	mov	r0, r5
90015bf6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90015bf8:	4798      	blx	r3
90015bfa:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
90015bfc:	896a      	ldrh	r2, [r5, #10]
90015bfe:	1a9b      	subs	r3, r3, r2
90015c00:	85e3      	strh	r3, [r4, #46]	; 0x2e
90015c02:	e7e6      	b.n	90015bd2 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
90015c04:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90015c08:	4293      	cmp	r3, r2
90015c0a:	8903      	ldrh	r3, [r0, #8]
90015c0c:	bfc8      	it	gt
90015c0e:	8142      	strhgt	r2, [r0, #10]
90015c10:	890a      	ldrh	r2, [r1, #8]
90015c12:	1a9b      	subs	r3, r3, r2
90015c14:	8103      	strh	r3, [r0, #8]
90015c16:	4628      	mov	r0, r5
90015c18:	680b      	ldr	r3, [r1, #0]
90015c1a:	2100      	movs	r1, #0
90015c1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90015c1e:	4798      	blx	r3
90015c20:	682b      	ldr	r3, [r5, #0]
90015c22:	2100      	movs	r1, #0
90015c24:	4628      	mov	r0, r5
90015c26:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90015c28:	4798      	blx	r3
90015c2a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
90015c2c:	892a      	ldrh	r2, [r5, #8]
90015c2e:	e7e6      	b.n	90015bfe <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

90015c30 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
90015c30:	b530      	push	{r4, r5, lr}
90015c32:	b089      	sub	sp, #36	; 0x24
90015c34:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
90015c38:	2300      	movs	r3, #0
90015c3a:	460d      	mov	r5, r1
90015c3c:	f88d 200c 	strb.w	r2, [sp, #12]
90015c40:	4604      	mov	r4, r0
90015c42:	4a12      	ldr	r2, [pc, #72]	; (90015c8c <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
90015c44:	f8ad 3004 	strh.w	r3, [sp, #4]
90015c48:	9204      	str	r2, [sp, #16]
90015c4a:	aa01      	add	r2, sp, #4
90015c4c:	f88d 3006 	strb.w	r3, [sp, #6]
90015c50:	9205      	str	r2, [sp, #20]
90015c52:	4a0f      	ldr	r2, [pc, #60]	; (90015c90 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
90015c54:	9102      	str	r1, [sp, #8]
90015c56:	a904      	add	r1, sp, #16
90015c58:	e9cd 2306 	strd	r2, r3, [sp, #24]
90015c5c:	6803      	ldr	r3, [r0, #0]
90015c5e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015c60:	4798      	blx	r3
90015c62:	f89d 3006 	ldrb.w	r3, [sp, #6]
90015c66:	b14b      	cbz	r3, 90015c7c <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
90015c68:	4629      	mov	r1, r5
90015c6a:	4620      	mov	r0, r4
90015c6c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
90015c70:	f7ff ffa6 	bl	90015bc0 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
90015c74:	4629      	mov	r1, r5
90015c76:	4620      	mov	r0, r4
90015c78:	f7ff f95d 	bl	90014f36 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
90015c7c:	6960      	ldr	r0, [r4, #20]
90015c7e:	b110      	cbz	r0, 90015c86 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
90015c80:	6803      	ldr	r3, [r0, #0]
90015c82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90015c84:	4798      	blx	r3
90015c86:	b009      	add	sp, #36	; 0x24
90015c88:	bd30      	pop	{r4, r5, pc}
90015c8a:	bf00      	nop
90015c8c:	90030484 	.word	0x90030484
90015c90:	900158ff 	.word	0x900158ff

90015c94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90015c94:	6803      	ldr	r3, [r0, #0]
90015c96:	b513      	push	{r0, r1, r4, lr}
90015c98:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
90015c9c:	2300      	movs	r3, #0
90015c9e:	e9cd 3300 	strd	r3, r3, [sp]
90015ca2:	466b      	mov	r3, sp
90015ca4:	47a0      	blx	r4
90015ca6:	b002      	add	sp, #8
90015ca8:	bd10      	pop	{r4, pc}

90015caa <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90015caa:	2301      	movs	r3, #1
90015cac:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90015cb0:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
90015cb4:	4770      	bx	lr

90015cb6 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90015cb6:	2301      	movs	r3, #1
90015cb8:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90015cbc:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
90015cc0:	4770      	bx	lr

90015cc2 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90015cc2:	6843      	ldr	r3, [r0, #4]
90015cc4:	2201      	movs	r2, #1
90015cc6:	725a      	strb	r2, [r3, #9]
90015cc8:	6840      	ldr	r0, [r0, #4]
90015cca:	6803      	ldr	r3, [r0, #0]
90015ccc:	691b      	ldr	r3, [r3, #16]
90015cce:	4718      	bx	r3

90015cd0 <_ZN8touchgfx3HAL8flushDMAEv>:
90015cd0:	6840      	ldr	r0, [r0, #4]
90015cd2:	6803      	ldr	r3, [r0, #0]
90015cd4:	689b      	ldr	r3, [r3, #8]
90015cd6:	4718      	bx	r3

90015cd8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90015cd8:	b530      	push	{r4, r5, lr}
90015cda:	b08b      	sub	sp, #44	; 0x2c
90015cdc:	6804      	ldr	r4, [r0, #0]
90015cde:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90015ce2:	9509      	str	r5, [sp, #36]	; 0x24
90015ce4:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
90015ce8:	9508      	str	r5, [sp, #32]
90015cea:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
90015cee:	9507      	str	r5, [sp, #28]
90015cf0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
90015cf4:	9506      	str	r5, [sp, #24]
90015cf6:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
90015cfa:	9505      	str	r5, [sp, #20]
90015cfc:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
90015d00:	9504      	str	r5, [sp, #16]
90015d02:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
90015d06:	9503      	str	r5, [sp, #12]
90015d08:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
90015d0c:	9502      	str	r5, [sp, #8]
90015d0e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
90015d12:	e9cd 3500 	strd	r3, r5, [sp]
90015d16:	4613      	mov	r3, r2
90015d18:	6be4      	ldr	r4, [r4, #60]	; 0x3c
90015d1a:	2200      	movs	r2, #0
90015d1c:	47a0      	blx	r4
90015d1e:	b00b      	add	sp, #44	; 0x2c
90015d20:	bd30      	pop	{r4, r5, pc}
	...

90015d24 <_ZN8touchgfx3HAL10beginFrameEv>:
90015d24:	4b04      	ldr	r3, [pc, #16]	; (90015d38 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90015d26:	781b      	ldrb	r3, [r3, #0]
90015d28:	b123      	cbz	r3, 90015d34 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90015d2a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
90015d2e:	f080 0001 	eor.w	r0, r0, #1
90015d32:	4770      	bx	lr
90015d34:	2001      	movs	r0, #1
90015d36:	4770      	bx	lr
90015d38:	24028e2a 	.word	0x24028e2a

90015d3c <_ZN8touchgfx3HAL8endFrameEv>:
90015d3c:	b510      	push	{r4, lr}
90015d3e:	4604      	mov	r4, r0
90015d40:	6840      	ldr	r0, [r0, #4]
90015d42:	6803      	ldr	r3, [r0, #0]
90015d44:	689b      	ldr	r3, [r3, #8]
90015d46:	4798      	blx	r3
90015d48:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
90015d4c:	b113      	cbz	r3, 90015d54 <_ZN8touchgfx3HAL8endFrameEv+0x18>
90015d4e:	2301      	movs	r3, #1
90015d50:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
90015d54:	bd10      	pop	{r4, pc}

90015d56 <_ZN8touchgfx3HAL10initializeEv>:
90015d56:	b510      	push	{r4, lr}
90015d58:	4604      	mov	r4, r0
90015d5a:	f7ec f933 	bl	90001fc4 <_ZN8touchgfx10OSWrappers10initializeEv>
90015d5e:	f7ea ff0b 	bl	90000b78 <_ZN8touchgfx4GPIO4initEv>
90015d62:	6860      	ldr	r0, [r4, #4]
90015d64:	6803      	ldr	r3, [r0, #0]
90015d66:	68db      	ldr	r3, [r3, #12]
90015d68:	4798      	blx	r3
90015d6a:	68e0      	ldr	r0, [r4, #12]
90015d6c:	6803      	ldr	r3, [r0, #0]
90015d6e:	689b      	ldr	r3, [r3, #8]
90015d70:	4798      	blx	r3
90015d72:	6823      	ldr	r3, [r4, #0]
90015d74:	4620      	mov	r0, r4
90015d76:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90015d78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90015d7c:	4718      	bx	r3
	...

90015d80 <_ZN8touchgfx3HAL4tickEv>:
90015d80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90015d82:	6803      	ldr	r3, [r0, #0]
90015d84:	4604      	mov	r4, r0
90015d86:	4d5b      	ldr	r5, [pc, #364]	; (90015ef4 <_ZN8touchgfx3HAL4tickEv+0x174>)
90015d88:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90015d8c:	4798      	blx	r3
90015d8e:	2800      	cmp	r0, #0
90015d90:	f000 8095 	beq.w	90015ebe <_ZN8touchgfx3HAL4tickEv+0x13e>
90015d94:	2001      	movs	r0, #1
90015d96:	2600      	movs	r6, #0
90015d98:	f7ea ff18 	bl	90000bcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90015d9c:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
90015da0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
90015da4:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
90015da8:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
90015dac:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
90015db0:	b133      	cbz	r3, 90015dc0 <_ZN8touchgfx3HAL4tickEv+0x40>
90015db2:	6823      	ldr	r3, [r4, #0]
90015db4:	4620      	mov	r0, r4
90015db6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
90015dba:	4798      	blx	r3
90015dbc:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
90015dc0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
90015dc4:	2601      	movs	r6, #1
90015dc6:	6862      	ldr	r2, [r4, #4]
90015dc8:	f083 0301 	eor.w	r3, r3, #1
90015dcc:	702e      	strb	r6, [r5, #0]
90015dce:	7253      	strb	r3, [r2, #9]
90015dd0:	f004 fff8 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90015dd4:	6803      	ldr	r3, [r0, #0]
90015dd6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90015dd8:	4798      	blx	r3
90015dda:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
90015dde:	b90b      	cbnz	r3, 90015de4 <_ZN8touchgfx3HAL4tickEv+0x64>
90015de0:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
90015de4:	f004 ffee 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90015de8:	6803      	ldr	r3, [r0, #0]
90015dea:	695b      	ldr	r3, [r3, #20]
90015dec:	4798      	blx	r3
90015dee:	6da0      	ldr	r0, [r4, #88]	; 0x58
90015df0:	6803      	ldr	r3, [r0, #0]
90015df2:	691b      	ldr	r3, [r3, #16]
90015df4:	4798      	blx	r3
90015df6:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
90015dfa:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
90015dfe:	3b01      	subs	r3, #1
90015e00:	b2db      	uxtb	r3, r3
90015e02:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
90015e06:	b10a      	cbz	r2, 90015e0c <_ZN8touchgfx3HAL4tickEv+0x8c>
90015e08:	2b00      	cmp	r3, #0
90015e0a:	d1eb      	bne.n	90015de4 <_ZN8touchgfx3HAL4tickEv+0x64>
90015e0c:	4a3a      	ldr	r2, [pc, #232]	; (90015ef8 <_ZN8touchgfx3HAL4tickEv+0x178>)
90015e0e:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
90015e12:	7813      	ldrb	r3, [r2, #0]
90015e14:	3301      	adds	r3, #1
90015e16:	b25b      	sxtb	r3, r3
90015e18:	4299      	cmp	r1, r3
90015e1a:	7013      	strb	r3, [r2, #0]
90015e1c:	dc10      	bgt.n	90015e40 <_ZN8touchgfx3HAL4tickEv+0xc0>
90015e1e:	2300      	movs	r3, #0
90015e20:	68e0      	ldr	r0, [r4, #12]
90015e22:	a902      	add	r1, sp, #8
90015e24:	7013      	strb	r3, [r2, #0]
90015e26:	aa03      	add	r2, sp, #12
90015e28:	6803      	ldr	r3, [r0, #0]
90015e2a:	68db      	ldr	r3, [r3, #12]
90015e2c:	4798      	blx	r3
90015e2e:	6823      	ldr	r3, [r4, #0]
90015e30:	2800      	cmp	r0, #0
90015e32:	d050      	beq.n	90015ed6 <_ZN8touchgfx3HAL4tickEv+0x156>
90015e34:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
90015e38:	4620      	mov	r0, r4
90015e3a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90015e3e:	4798      	blx	r3
90015e40:	2300      	movs	r3, #0
90015e42:	6960      	ldr	r0, [r4, #20]
90015e44:	f88d 3007 	strb.w	r3, [sp, #7]
90015e48:	b158      	cbz	r0, 90015e62 <_ZN8touchgfx3HAL4tickEv+0xe2>
90015e4a:	6803      	ldr	r3, [r0, #0]
90015e4c:	f10d 0107 	add.w	r1, sp, #7
90015e50:	68db      	ldr	r3, [r3, #12]
90015e52:	4798      	blx	r3
90015e54:	b128      	cbz	r0, 90015e62 <_ZN8touchgfx3HAL4tickEv+0xe2>
90015e56:	6da0      	ldr	r0, [r4, #88]	; 0x58
90015e58:	f89d 1007 	ldrb.w	r1, [sp, #7]
90015e5c:	6803      	ldr	r3, [r0, #0]
90015e5e:	68db      	ldr	r3, [r3, #12]
90015e60:	4798      	blx	r3
90015e62:	f104 001c 	add.w	r0, r4, #28
90015e66:	f013 fb5f 	bl	90029528 <_ZN8touchgfx8Gestures4tickEv>
90015e6a:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
90015e6e:	b30b      	cbz	r3, 90015eb4 <_ZN8touchgfx3HAL4tickEv+0x134>
90015e70:	6920      	ldr	r0, [r4, #16]
90015e72:	6803      	ldr	r3, [r0, #0]
90015e74:	691b      	ldr	r3, [r3, #16]
90015e76:	4798      	blx	r3
90015e78:	6f23      	ldr	r3, [r4, #112]	; 0x70
90015e7a:	4606      	mov	r6, r0
90015e7c:	b903      	cbnz	r3, 90015e80 <_ZN8touchgfx3HAL4tickEv+0x100>
90015e7e:	6720      	str	r0, [r4, #112]	; 0x70
90015e80:	6f23      	ldr	r3, [r4, #112]	; 0x70
90015e82:	4a1e      	ldr	r2, [pc, #120]	; (90015efc <_ZN8touchgfx3HAL4tickEv+0x17c>)
90015e84:	1af3      	subs	r3, r6, r3
90015e86:	4293      	cmp	r3, r2
90015e88:	d914      	bls.n	90015eb4 <_ZN8touchgfx3HAL4tickEv+0x134>
90015e8a:	6920      	ldr	r0, [r4, #16]
90015e8c:	6803      	ldr	r3, [r0, #0]
90015e8e:	699b      	ldr	r3, [r3, #24]
90015e90:	4798      	blx	r3
90015e92:	6f23      	ldr	r3, [r4, #112]	; 0x70
90015e94:	2264      	movs	r2, #100	; 0x64
90015e96:	1af3      	subs	r3, r6, r3
90015e98:	fbb3 f3f2 	udiv	r3, r3, r2
90015e9c:	fbb0 f0f3 	udiv	r0, r0, r3
90015ea0:	2800      	cmp	r0, #0
90015ea2:	dc1d      	bgt.n	90015ee0 <_ZN8touchgfx3HAL4tickEv+0x160>
90015ea4:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
90015ea8:	6920      	ldr	r0, [r4, #16]
90015eaa:	2100      	movs	r1, #0
90015eac:	6803      	ldr	r3, [r0, #0]
90015eae:	69db      	ldr	r3, [r3, #28]
90015eb0:	4798      	blx	r3
90015eb2:	6726      	str	r6, [r4, #112]	; 0x70
90015eb4:	f004 ff86 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
90015eb8:	6803      	ldr	r3, [r0, #0]
90015eba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015ebc:	4798      	blx	r3
90015ebe:	6823      	ldr	r3, [r4, #0]
90015ec0:	4620      	mov	r0, r4
90015ec2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
90015ec6:	4798      	blx	r3
90015ec8:	2001      	movs	r0, #1
90015eca:	f7ea feb3 	bl	90000c34 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90015ece:	2300      	movs	r3, #0
90015ed0:	702b      	strb	r3, [r5, #0]
90015ed2:	b004      	add	sp, #16
90015ed4:	bd70      	pop	{r4, r5, r6, pc}
90015ed6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
90015eda:	4620      	mov	r0, r4
90015edc:	4798      	blx	r3
90015ede:	e7af      	b.n	90015e40 <_ZN8touchgfx3HAL4tickEv+0xc0>
90015ee0:	2863      	cmp	r0, #99	; 0x63
90015ee2:	bfcb      	itete	gt
90015ee4:	2300      	movgt	r3, #0
90015ee6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
90015eea:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
90015eee:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
90015ef2:	e7d9      	b.n	90015ea8 <_ZN8touchgfx3HAL4tickEv+0x128>
90015ef4:	24028e30 	.word	0x24028e30
90015ef8:	24028e31 	.word	0x24028e31
90015efc:	05f5e100 	.word	0x05f5e100

90015f00 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90015f00:	f7ec b892 	b.w	90002028 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90015f04 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90015f04:	6581      	str	r1, [r0, #88]	; 0x58
90015f06:	301c      	adds	r0, #28
90015f08:	f013 bb0c 	b.w	90029524 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90015f0c <_ZN8touchgfx3HAL5touchEll>:
90015f0c:	b530      	push	{r4, r5, lr}
90015f0e:	b087      	sub	sp, #28
90015f10:	4604      	mov	r4, r0
90015f12:	a804      	add	r0, sp, #16
90015f14:	e9cd 1204 	strd	r1, r2, [sp, #16]
90015f18:	f004 fd36 	bl	9001a988 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90015f1c:	9b04      	ldr	r3, [sp, #16]
90015f1e:	a906      	add	r1, sp, #24
90015f20:	a803      	add	r0, sp, #12
90015f22:	f8ad 300c 	strh.w	r3, [sp, #12]
90015f26:	9b05      	ldr	r3, [sp, #20]
90015f28:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90015f2c:	f004 fd7e 	bl	9001aa2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90015f30:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
90015f34:	f104 001c 	add.w	r0, r4, #28
90015f38:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90015f3c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90015f40:	b189      	cbz	r1, 90015f66 <_ZN8touchgfx3HAL5touchEll+0x5a>
90015f42:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
90015f46:	9300      	str	r3, [sp, #0]
90015f48:	4613      	mov	r3, r2
90015f4a:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
90015f4e:	462a      	mov	r2, r5
90015f50:	f013 faf8 	bl	90029544 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90015f54:	b128      	cbz	r0, 90015f62 <_ZN8touchgfx3HAL5touchEll+0x56>
90015f56:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90015f5a:	65e3      	str	r3, [r4, #92]	; 0x5c
90015f5c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90015f60:	6623      	str	r3, [r4, #96]	; 0x60
90015f62:	b007      	add	sp, #28
90015f64:	bd30      	pop	{r4, r5, pc}
90015f66:	f013 fb2d 	bl	900295c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90015f6a:	2301      	movs	r3, #1
90015f6c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90015f70:	e7f1      	b.n	90015f56 <_ZN8touchgfx3HAL5touchEll+0x4a>

90015f72 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90015f72:	b510      	push	{r4, lr}
90015f74:	2b00      	cmp	r3, #0
90015f76:	d046      	beq.n	90016006 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90015f78:	ea81 0002 	eor.w	r0, r1, r2
90015f7c:	07c4      	lsls	r4, r0, #31
90015f7e:	d508      	bpl.n	90015f92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90015f80:	440b      	add	r3, r1
90015f82:	3a01      	subs	r2, #1
90015f84:	428b      	cmp	r3, r1
90015f86:	d93e      	bls.n	90016006 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90015f88:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90015f8c:	f801 0b01 	strb.w	r0, [r1], #1
90015f90:	e7f8      	b.n	90015f84 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90015f92:	07d0      	lsls	r0, r2, #31
90015f94:	bf42      	ittt	mi
90015f96:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90015f9a:	f103 33ff 	addmi.w	r3, r3, #4294967295
90015f9e:	f801 0b01 	strbmi.w	r0, [r1], #1
90015fa2:	2b01      	cmp	r3, #1
90015fa4:	d911      	bls.n	90015fca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90015fa6:	ea81 0402 	eor.w	r4, r1, r2
90015faa:	4610      	mov	r0, r2
90015fac:	07a4      	lsls	r4, r4, #30
90015fae:	d022      	beq.n	90015ff6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90015fb0:	f023 0401 	bic.w	r4, r3, #1
90015fb4:	440c      	add	r4, r1
90015fb6:	428c      	cmp	r4, r1
90015fb8:	4602      	mov	r2, r0
90015fba:	d904      	bls.n	90015fc6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90015fbc:	8812      	ldrh	r2, [r2, #0]
90015fbe:	3002      	adds	r0, #2
90015fc0:	f821 2b02 	strh.w	r2, [r1], #2
90015fc4:	e7f7      	b.n	90015fb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90015fc6:	f003 0301 	and.w	r3, r3, #1
90015fca:	f023 0003 	bic.w	r0, r3, #3
90015fce:	4408      	add	r0, r1
90015fd0:	4288      	cmp	r0, r1
90015fd2:	4614      	mov	r4, r2
90015fd4:	d904      	bls.n	90015fe0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90015fd6:	6824      	ldr	r4, [r4, #0]
90015fd8:	3204      	adds	r2, #4
90015fda:	f841 4b04 	str.w	r4, [r1], #4
90015fde:	e7f7      	b.n	90015fd0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90015fe0:	f003 0303 	and.w	r3, r3, #3
90015fe4:	3a01      	subs	r2, #1
90015fe6:	440b      	add	r3, r1
90015fe8:	428b      	cmp	r3, r1
90015fea:	d90c      	bls.n	90016006 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90015fec:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90015ff0:	f801 0b01 	strb.w	r0, [r1], #1
90015ff4:	e7f8      	b.n	90015fe8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90015ff6:	0790      	lsls	r0, r2, #30
90015ff8:	d0e7      	beq.n	90015fca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90015ffa:	f832 0b02 	ldrh.w	r0, [r2], #2
90015ffe:	3b02      	subs	r3, #2
90016000:	f821 0b02 	strh.w	r0, [r1], #2
90016004:	e7e1      	b.n	90015fca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90016006:	2001      	movs	r0, #1
90016008:	bd10      	pop	{r4, pc}

9001600a <_ZN8touchgfx3HAL7noTouchEv>:
9001600a:	b510      	push	{r4, lr}
9001600c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
90016010:	4604      	mov	r4, r0
90016012:	b153      	cbz	r3, 9001602a <_ZN8touchgfx3HAL7noTouchEv+0x20>
90016014:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
90016018:	2101      	movs	r1, #1
9001601a:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
9001601e:	301c      	adds	r0, #28
90016020:	f013 fad0 	bl	900295c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90016024:	2300      	movs	r3, #0
90016026:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
9001602a:	bd10      	pop	{r4, pc}

9001602c <_ZN8touchgfx3HAL3lcdEv>:
9001602c:	4b04      	ldr	r3, [pc, #16]	; (90016040 <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001602e:	681b      	ldr	r3, [r3, #0]
90016030:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
90016034:	b10a      	cbz	r2, 9001603a <_ZN8touchgfx3HAL3lcdEv+0xe>
90016036:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90016038:	b900      	cbnz	r0, 9001603c <_ZN8touchgfx3HAL3lcdEv+0x10>
9001603a:	6898      	ldr	r0, [r3, #8]
9001603c:	4770      	bx	lr
9001603e:	bf00      	nop
90016040:	24028e2c 	.word	0x24028e2c

90016044 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90016044:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016048:	b085      	sub	sp, #20
9001604a:	4604      	mov	r4, r0
9001604c:	2000      	movs	r0, #0
9001604e:	4699      	mov	r9, r3
90016050:	ad04      	add	r5, sp, #16
90016052:	460f      	mov	r7, r1
90016054:	4690      	mov	r8, r2
90016056:	f845 0d04 	str.w	r0, [r5, #-4]!
9001605a:	69a0      	ldr	r0, [r4, #24]
9001605c:	6806      	ldr	r6, [r0, #0]
9001605e:	9501      	str	r5, [sp, #4]
90016060:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
90016064:	9500      	str	r5, [sp, #0]
90016066:	6835      	ldr	r5, [r6, #0]
90016068:	47a8      	blx	r5
9001606a:	4d10      	ldr	r5, [pc, #64]	; (900160ac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
9001606c:	4606      	mov	r6, r0
9001606e:	f8a5 9000 	strh.w	r9, [r5]
90016072:	f7ff ffdb 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
90016076:	6803      	ldr	r3, [r0, #0]
90016078:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001607a:	4798      	blx	r3
9001607c:	b128      	cbz	r0, 9001608a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
9001607e:	2801      	cmp	r0, #1
90016080:	d00b      	beq.n	9001609a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90016082:	4630      	mov	r0, r6
90016084:	b005      	add	sp, #20
90016086:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001608a:	882b      	ldrh	r3, [r5, #0]
9001608c:	fb08 7203 	mla	r2, r8, r3, r7
90016090:	9b03      	ldr	r3, [sp, #12]
90016092:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90016096:	63e3      	str	r3, [r4, #60]	; 0x3c
90016098:	e7f3      	b.n	90016082 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
9001609a:	882a      	ldrh	r2, [r5, #0]
9001609c:	9b03      	ldr	r3, [sp, #12]
9001609e:	fb08 7202 	mla	r2, r8, r2, r7
900160a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900160a6:	1a9a      	subs	r2, r3, r2
900160a8:	63e2      	str	r2, [r4, #60]	; 0x3c
900160aa:	e7ea      	b.n	90016082 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900160ac:	24028e26 	.word	0x24028e26

900160b0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
900160b0:	b5f0      	push	{r4, r5, r6, r7, lr}
900160b2:	b08b      	sub	sp, #44	; 0x2c
900160b4:	4617      	mov	r7, r2
900160b6:	4604      	mov	r4, r0
900160b8:	460e      	mov	r6, r1
900160ba:	461d      	mov	r5, r3
900160bc:	f7ff ffb6 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
900160c0:	6803      	ldr	r3, [r0, #0]
900160c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900160c4:	4798      	blx	r3
900160c6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900160ca:	9007      	str	r0, [sp, #28]
900160cc:	4631      	mov	r1, r6
900160ce:	6822      	ldr	r2, [r4, #0]
900160d0:	e9cd 0308 	strd	r0, r3, [sp, #32]
900160d4:	4b0c      	ldr	r3, [pc, #48]	; (90016108 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
900160d6:	4620      	mov	r0, r4
900160d8:	881b      	ldrh	r3, [r3, #0]
900160da:	9306      	str	r3, [sp, #24]
900160dc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900160e0:	9305      	str	r3, [sp, #20]
900160e2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
900160e6:	9304      	str	r3, [sp, #16]
900160e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900160ec:	9303      	str	r3, [sp, #12]
900160ee:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900160f2:	9302      	str	r3, [sp, #8]
900160f4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900160f8:	e9cd 5300 	strd	r5, r3, [sp]
900160fc:	463b      	mov	r3, r7
900160fe:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
90016100:	2200      	movs	r2, #0
90016102:	47a8      	blx	r5
90016104:	b00b      	add	sp, #44	; 0x2c
90016106:	bdf0      	pop	{r4, r5, r6, r7, pc}
90016108:	24028e26 	.word	0x24028e26

9001610c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
9001610c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016110:	4698      	mov	r8, r3
90016112:	6803      	ldr	r3, [r0, #0]
90016114:	b08b      	sub	sp, #44	; 0x2c
90016116:	4617      	mov	r7, r2
90016118:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
9001611a:	460e      	mov	r6, r1
9001611c:	4b13      	ldr	r3, [pc, #76]	; (9001616c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
9001611e:	4604      	mov	r4, r0
90016120:	f8b3 9000 	ldrh.w	r9, [r3]
90016124:	f7ff ff82 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
90016128:	6803      	ldr	r3, [r0, #0]
9001612a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001612c:	4798      	blx	r3
9001612e:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90016132:	2200      	movs	r2, #0
90016134:	4631      	mov	r1, r6
90016136:	e9cd 0308 	strd	r0, r3, [sp, #32]
9001613a:	2302      	movs	r3, #2
9001613c:	4620      	mov	r0, r4
9001613e:	e9cd 9306 	strd	r9, r3, [sp, #24]
90016142:	2301      	movs	r3, #1
90016144:	9305      	str	r3, [sp, #20]
90016146:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
9001614a:	9304      	str	r3, [sp, #16]
9001614c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90016150:	9303      	str	r3, [sp, #12]
90016152:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90016156:	9302      	str	r3, [sp, #8]
90016158:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9001615c:	e9cd 8300 	strd	r8, r3, [sp]
90016160:	463b      	mov	r3, r7
90016162:	47a8      	blx	r5
90016164:	b00b      	add	sp, #44	; 0x2c
90016166:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001616a:	bf00      	nop
9001616c:	24028e26 	.word	0x24028e26

90016170 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90016170:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016174:	4698      	mov	r8, r3
90016176:	6803      	ldr	r3, [r0, #0]
90016178:	b087      	sub	sp, #28
9001617a:	460e      	mov	r6, r1
9001617c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
9001617e:	4617      	mov	r7, r2
90016180:	4b0f      	ldr	r3, [pc, #60]	; (900161c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90016182:	4604      	mov	r4, r0
90016184:	f8b3 9000 	ldrh.w	r9, [r3]
90016188:	f7ff ff50 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
9001618c:	6803      	ldr	r3, [r0, #0]
9001618e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016190:	4798      	blx	r3
90016192:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
90016196:	463a      	mov	r2, r7
90016198:	4631      	mov	r1, r6
9001619a:	f8cd 900c 	str.w	r9, [sp, #12]
9001619e:	e9cd 0304 	strd	r0, r3, [sp, #16]
900161a2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
900161a6:	4620      	mov	r0, r4
900161a8:	9302      	str	r3, [sp, #8]
900161aa:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
900161ae:	9301      	str	r3, [sp, #4]
900161b0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900161b4:	9300      	str	r3, [sp, #0]
900161b6:	4643      	mov	r3, r8
900161b8:	47a8      	blx	r5
900161ba:	b007      	add	sp, #28
900161bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900161c0:	24028e26 	.word	0x24028e26

900161c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
900161c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900161c8:	4604      	mov	r4, r0
900161ca:	b08f      	sub	sp, #60	; 0x3c
900161cc:	4610      	mov	r0, r2
900161ce:	460d      	mov	r5, r1
900161d0:	4691      	mov	r9, r2
900161d2:	461e      	mov	r6, r3
900161d4:	f007 fbe8 	bl	9001d9a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900161d8:	2800      	cmp	r0, #0
900161da:	f000 809d 	beq.w	90016318 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
900161de:	6823      	ldr	r3, [r4, #0]
900161e0:	4620      	mov	r0, r4
900161e2:	f8df b198 	ldr.w	fp, [pc, #408]	; 9001637c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
900161e6:	f10d 0838 	add.w	r8, sp, #56	; 0x38
900161ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900161ec:	4798      	blx	r3
900161ee:	6823      	ldr	r3, [r4, #0]
900161f0:	4620      	mov	r0, r4
900161f2:	f8df a18c 	ldr.w	sl, [pc, #396]	; 90016380 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
900161f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900161f8:	4798      	blx	r3
900161fa:	f8bb 3000 	ldrh.w	r3, [fp]
900161fe:	4f5c      	ldr	r7, [pc, #368]	; (90016370 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90016200:	9301      	str	r3, [sp, #4]
90016202:	f8ba 3000 	ldrh.w	r3, [sl]
90016206:	f828 9d1c 	strh.w	r9, [r8, #-28]!
9001620a:	4640      	mov	r0, r8
9001620c:	9302      	str	r3, [sp, #8]
9001620e:	883b      	ldrh	r3, [r7, #0]
90016210:	9303      	str	r3, [sp, #12]
90016212:	4b58      	ldr	r3, [pc, #352]	; (90016374 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90016214:	881a      	ldrh	r2, [r3, #0]
90016216:	9305      	str	r3, [sp, #20]
90016218:	9204      	str	r2, [sp, #16]
9001621a:	f007 fc59 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001621e:	8038      	strh	r0, [r7, #0]
90016220:	4640      	mov	r0, r8
90016222:	f007 fc89 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90016226:	9b05      	ldr	r3, [sp, #20]
90016228:	b280      	uxth	r0, r0
9001622a:	8018      	strh	r0, [r3, #0]
9001622c:	4b52      	ldr	r3, [pc, #328]	; (90016378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
9001622e:	781b      	ldrb	r3, [r3, #0]
90016230:	2b00      	cmp	r3, #0
90016232:	d174      	bne.n	9001631e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90016234:	883b      	ldrh	r3, [r7, #0]
90016236:	f8aa 0000 	strh.w	r0, [sl]
9001623a:	f8ab 3000 	strh.w	r3, [fp]
9001623e:	4648      	mov	r0, r9
90016240:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
90016244:	f007 fbb0 	bl	9001d9a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90016248:	2200      	movs	r2, #0
9001624a:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
9001624e:	4611      	mov	r1, r2
90016250:	4628      	mov	r0, r5
90016252:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90016256:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
9001625a:	f7ff f91d 	bl	90015498 <_ZN8touchgfx8Drawable5setXYEss>
9001625e:	2301      	movs	r3, #1
90016260:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
90016264:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
90016268:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9001626c:	2b00      	cmp	r3, #0
9001626e:	dd5c      	ble.n	9001632a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90016270:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90016274:	2b00      	cmp	r3, #0
90016276:	dd58      	ble.n	9001632a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90016278:	462a      	mov	r2, r5
9001627a:	ab0a      	add	r3, sp, #40	; 0x28
9001627c:	f852 0f04 	ldr.w	r0, [r2, #4]!
90016280:	6851      	ldr	r1, [r2, #4]
90016282:	c303      	stmia	r3!, {r0, r1}
90016284:	4631      	mov	r1, r6
90016286:	a80a      	add	r0, sp, #40	; 0x28
90016288:	f7fe ff98 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
9001628c:	4b38      	ldr	r3, [pc, #224]	; (90016370 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001628e:	2100      	movs	r1, #0
90016290:	f9b3 2000 	ldrsh.w	r2, [r3]
90016294:	4b37      	ldr	r3, [pc, #220]	; (90016374 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90016296:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
9001629a:	aa0a      	add	r2, sp, #40	; 0x28
9001629c:	f9b3 3000 	ldrsh.w	r3, [r3]
900162a0:	910c      	str	r1, [sp, #48]	; 0x30
900162a2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900162a6:	ab08      	add	r3, sp, #32
900162a8:	e892 0003 	ldmia.w	r2, {r0, r1}
900162ac:	e883 0003 	stmia.w	r3, {r0, r1}
900162b0:	4618      	mov	r0, r3
900162b2:	a90c      	add	r1, sp, #48	; 0x30
900162b4:	f7fe ff82 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
900162b8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
900162ba:	2b00      	cmp	r3, #0
900162bc:	d13c      	bne.n	90016338 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
900162be:	2000      	movs	r0, #0
900162c0:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
900162c4:	2600      	movs	r6, #0
900162c6:	696b      	ldr	r3, [r5, #20]
900162c8:	a908      	add	r1, sp, #32
900162ca:	682a      	ldr	r2, [r5, #0]
900162cc:	4628      	mov	r0, r5
900162ce:	9305      	str	r3, [sp, #20]
900162d0:	616e      	str	r6, [r5, #20]
900162d2:	6892      	ldr	r2, [r2, #8]
900162d4:	4790      	blx	r2
900162d6:	9b05      	ldr	r3, [sp, #20]
900162d8:	4652      	mov	r2, sl
900162da:	4649      	mov	r1, r9
900162dc:	616b      	str	r3, [r5, #20]
900162de:	4628      	mov	r0, r5
900162e0:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
900162e4:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
900162e8:	f7ff f8d6 	bl	90015498 <_ZN8touchgfx8Drawable5setXYEss>
900162ec:	9a01      	ldr	r2, [sp, #4]
900162ee:	4b23      	ldr	r3, [pc, #140]	; (9001637c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
900162f0:	4620      	mov	r0, r4
900162f2:	801a      	strh	r2, [r3, #0]
900162f4:	9a02      	ldr	r2, [sp, #8]
900162f6:	4b22      	ldr	r3, [pc, #136]	; (90016380 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
900162f8:	801a      	strh	r2, [r3, #0]
900162fa:	9a03      	ldr	r2, [sp, #12]
900162fc:	4b1c      	ldr	r3, [pc, #112]	; (90016370 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900162fe:	801a      	strh	r2, [r3, #0]
90016300:	4b1c      	ldr	r3, [pc, #112]	; (90016374 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90016302:	9a04      	ldr	r2, [sp, #16]
90016304:	801a      	strh	r2, [r3, #0]
90016306:	6823      	ldr	r3, [r4, #0]
90016308:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
9001630c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001630e:	4798      	blx	r3
90016310:	6823      	ldr	r3, [r4, #0]
90016312:	4620      	mov	r0, r4
90016314:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016316:	4798      	blx	r3
90016318:	b00f      	add	sp, #60	; 0x3c
9001631a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001631e:	883b      	ldrh	r3, [r7, #0]
90016320:	f8ab 0000 	strh.w	r0, [fp]
90016324:	f8aa 3000 	strh.w	r3, [sl]
90016328:	e789      	b.n	9001623e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
9001632a:	462a      	mov	r2, r5
9001632c:	ab0a      	add	r3, sp, #40	; 0x28
9001632e:	f852 0f04 	ldr.w	r0, [r2, #4]!
90016332:	6851      	ldr	r1, [r2, #4]
90016334:	c303      	stmia	r3!, {r0, r1}
90016336:	e7a9      	b.n	9001628c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90016338:	a807      	add	r0, sp, #28
9001633a:	f007 fd39 	bl	9001ddb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001633e:	4606      	mov	r6, r0
90016340:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
90016342:	6803      	ldr	r3, [r0, #0]
90016344:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016346:	4798      	blx	r3
90016348:	4286      	cmp	r6, r0
9001634a:	d1b8      	bne.n	900162be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
9001634c:	f7ff fe6e 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
90016350:	6803      	ldr	r3, [r0, #0]
90016352:	4606      	mov	r6, r0
90016354:	a807      	add	r0, sp, #28
90016356:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90016358:	9305      	str	r3, [sp, #20]
9001635a:	f007 fd29 	bl	9001ddb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001635e:	9b05      	ldr	r3, [sp, #20]
90016360:	4601      	mov	r1, r0
90016362:	4630      	mov	r0, r6
90016364:	4798      	blx	r3
90016366:	f080 0001 	eor.w	r0, r0, #1
9001636a:	b2c0      	uxtb	r0, r0
9001636c:	e7a8      	b.n	900162c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
9001636e:	bf00      	nop
90016370:	24028e20 	.word	0x24028e20
90016374:	24028e22 	.word	0x24028e22
90016378:	24028e24 	.word	0x24028e24
9001637c:	24028e26 	.word	0x24028e26
90016380:	24028e28 	.word	0x24028e28

90016384 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90016384:	4b07      	ldr	r3, [pc, #28]	; (900163a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90016386:	b510      	push	{r4, lr}
90016388:	781b      	ldrb	r3, [r3, #0]
9001638a:	4604      	mov	r4, r0
9001638c:	b13b      	cbz	r3, 9001639e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001638e:	6803      	ldr	r3, [r0, #0]
90016390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90016392:	4798      	blx	r3
90016394:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90016396:	4283      	cmp	r3, r0
90016398:	d101      	bne.n	9001639e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001639a:	6c20      	ldr	r0, [r4, #64]	; 0x40
9001639c:	bd10      	pop	{r4, pc}
9001639e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
900163a0:	e7fc      	b.n	9001639c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
900163a2:	bf00      	nop
900163a4:	24028e2a 	.word	0x24028e2a

900163a8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
900163a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900163ac:	461d      	mov	r5, r3
900163ae:	b08a      	sub	sp, #40	; 0x28
900163b0:	f44f 6380 	mov.w	r3, #1024	; 0x400
900163b4:	4690      	mov	r8, r2
900163b6:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
900163ba:	2400      	movs	r4, #0
900163bc:	4607      	mov	r7, r0
900163be:	fb06 8505 	mla	r5, r6, r5, r8
900163c2:	9404      	str	r4, [sp, #16]
900163c4:	f88d 4020 	strb.w	r4, [sp, #32]
900163c8:	e9cd 3101 	strd	r3, r1, [sp, #4]
900163cc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900163d0:	f8ad 3018 	strh.w	r3, [sp, #24]
900163d4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900163d8:	f8ad 301a 	strh.w	r3, [sp, #26]
900163dc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900163e0:	f8ad 301c 	strh.w	r3, [sp, #28]
900163e4:	f7ff ffce 	bl	90016384 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900163e8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900163ec:	6878      	ldr	r0, [r7, #4]
900163ee:	f8ad 601e 	strh.w	r6, [sp, #30]
900163f2:	a901      	add	r1, sp, #4
900163f4:	9505      	str	r5, [sp, #20]
900163f6:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900163fa:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
900163fe:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90016402:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90016406:	6803      	ldr	r3, [r0, #0]
90016408:	685b      	ldr	r3, [r3, #4]
9001640a:	4798      	blx	r3
9001640c:	b00a      	add	sp, #40	; 0x28
9001640e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90016412 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90016412:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016416:	b08b      	sub	sp, #44	; 0x2c
90016418:	2400      	movs	r4, #0
9001641a:	4691      	mov	r9, r2
9001641c:	461d      	mov	r5, r3
9001641e:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
90016422:	f44f 6300 	mov.w	r3, #2048	; 0x800
90016426:	4688      	mov	r8, r1
90016428:	4607      	mov	r7, r0
9001642a:	9404      	str	r4, [sp, #16]
9001642c:	fb06 9505 	mla	r5, r6, r5, r9
90016430:	e9cd 3401 	strd	r3, r4, [sp, #4]
90016434:	f7ff ffa6 	bl	90016384 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90016438:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9001643c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90016440:	6878      	ldr	r0, [r7, #4]
90016442:	f8ad 3018 	strh.w	r3, [sp, #24]
90016446:	a901      	add	r1, sp, #4
90016448:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
9001644c:	9505      	str	r5, [sp, #20]
9001644e:	f8ad 301a 	strh.w	r3, [sp, #26]
90016452:	f8ad 401c 	strh.w	r4, [sp, #28]
90016456:	f8ad 601e 	strh.w	r6, [sp, #30]
9001645a:	f8cd 8010 	str.w	r8, [sp, #16]
9001645e:	f8ad 4020 	strh.w	r4, [sp, #32]
90016462:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90016466:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
9001646a:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
9001646e:	6803      	ldr	r3, [r0, #0]
90016470:	685b      	ldr	r3, [r3, #4]
90016472:	4798      	blx	r3
90016474:	b00b      	add	sp, #44	; 0x2c
90016476:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

9001647c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
9001647c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016480:	b08a      	sub	sp, #40	; 0x28
90016482:	4698      	mov	r8, r3
90016484:	2300      	movs	r3, #0
90016486:	4606      	mov	r6, r0
90016488:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
9001648c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90016490:	2d0b      	cmp	r5, #11
90016492:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
90016496:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
9001649a:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
9001649e:	9304      	str	r3, [sp, #16]
900164a0:	d137      	bne.n	90016512 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
900164a2:	2380      	movs	r3, #128	; 0x80
900164a4:	f88d 0020 	strb.w	r0, [sp, #32]
900164a8:	4630      	mov	r0, r6
900164aa:	9203      	str	r2, [sp, #12]
900164ac:	e9cd 3101 	strd	r3, r1, [sp, #4]
900164b0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900164b4:	f8ad 3018 	strh.w	r3, [sp, #24]
900164b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900164bc:	f8ad 301a 	strh.w	r3, [sp, #26]
900164c0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900164c4:	f8ad 301c 	strh.w	r3, [sp, #28]
900164c8:	f7ff ff5c 	bl	90016384 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900164cc:	2c0b      	cmp	r4, #11
900164ce:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
900164d2:	f8ad 701e 	strh.w	r7, [sp, #30]
900164d6:	bf94      	ite	ls
900164d8:	4b19      	ldrls	r3, [pc, #100]	; (90016540 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
900164da:	2100      	movhi	r1, #0
900164dc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
900164e0:	bf98      	it	ls
900164e2:	5d19      	ldrbls	r1, [r3, r4]
900164e4:	fb02 8307 	mla	r3, r2, r7, r8
900164e8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900164ec:	10c9      	asrs	r1, r1, #3
900164ee:	fb01 0003 	mla	r0, r1, r3, r0
900164f2:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
900164f6:	a901      	add	r1, sp, #4
900164f8:	9005      	str	r0, [sp, #20]
900164fa:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
900164fe:	2300      	movs	r3, #0
90016500:	6870      	ldr	r0, [r6, #4]
90016502:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90016506:	6803      	ldr	r3, [r0, #0]
90016508:	685b      	ldr	r3, [r3, #4]
9001650a:	4798      	blx	r3
9001650c:	b00a      	add	sp, #40	; 0x28
9001650e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016512:	2d02      	cmp	r5, #2
90016514:	d109      	bne.n	9001652a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90016516:	28ff      	cmp	r0, #255	; 0xff
90016518:	d105      	bne.n	90016526 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
9001651a:	f1bc 0f00 	cmp.w	ip, #0
9001651e:	bf14      	ite	ne
90016520:	2340      	movne	r3, #64	; 0x40
90016522:	2320      	moveq	r3, #32
90016524:	e7be      	b.n	900164a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90016526:	2340      	movs	r3, #64	; 0x40
90016528:	e7bc      	b.n	900164a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001652a:	28ff      	cmp	r0, #255	; 0xff
9001652c:	d105      	bne.n	9001653a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
9001652e:	f1bc 0f00 	cmp.w	ip, #0
90016532:	bf14      	ite	ne
90016534:	2304      	movne	r3, #4
90016536:	2301      	moveq	r3, #1
90016538:	e7b4      	b.n	900164a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001653a:	2304      	movs	r3, #4
9001653c:	e7b2      	b.n	900164a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001653e:	bf00      	nop
90016540:	9003052c 	.word	0x9003052c

90016544 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90016544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016548:	b08b      	sub	sp, #44	; 0x2c
9001654a:	461d      	mov	r5, r3
9001654c:	2400      	movs	r4, #0
9001654e:	4688      	mov	r8, r1
90016550:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90016554:	4693      	mov	fp, r2
90016556:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
9001655a:	4607      	mov	r7, r0
9001655c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90016560:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90016564:	9404      	str	r4, [sp, #16]
90016566:	bf14      	ite	ne
90016568:	2308      	movne	r3, #8
9001656a:	2302      	moveq	r3, #2
9001656c:	fb05 b50a 	mla	r5, r5, sl, fp
90016570:	e9cd 3401 	strd	r3, r4, [sp, #4]
90016574:	f7ff ff06 	bl	90016384 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90016578:	2e0b      	cmp	r6, #11
9001657a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001657e:	a901      	add	r1, sp, #4
90016580:	bf98      	it	ls
90016582:	4b13      	ldrls	r3, [pc, #76]	; (900165d0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90016584:	f8ad a01e 	strh.w	sl, [sp, #30]
90016588:	bf98      	it	ls
9001658a:	5d9c      	ldrbls	r4, [r3, r6]
9001658c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90016590:	10e4      	asrs	r4, r4, #3
90016592:	f8cd 8010 	str.w	r8, [sp, #16]
90016596:	f8ad 3018 	strh.w	r3, [sp, #24]
9001659a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001659e:	fb04 0405 	mla	r4, r4, r5, r0
900165a2:	6878      	ldr	r0, [r7, #4]
900165a4:	f8ad 301a 	strh.w	r3, [sp, #26]
900165a8:	2300      	movs	r3, #0
900165aa:	9405      	str	r4, [sp, #20]
900165ac:	f8ad 301c 	strh.w	r3, [sp, #28]
900165b0:	f88d 9020 	strb.w	r9, [sp, #32]
900165b4:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
900165b8:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
900165bc:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
900165c0:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
900165c4:	6803      	ldr	r3, [r0, #0]
900165c6:	685b      	ldr	r3, [r3, #4]
900165c8:	4798      	blx	r3
900165ca:	b00b      	add	sp, #44	; 0x2c
900165cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900165d0:	9003052c 	.word	0x9003052c

900165d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
900165d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900165d8:	461e      	mov	r6, r3
900165da:	4b0a      	ldr	r3, [pc, #40]	; (90016604 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
900165dc:	460f      	mov	r7, r1
900165de:	4690      	mov	r8, r2
900165e0:	881d      	ldrh	r5, [r3, #0]
900165e2:	f7ff fd23 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
900165e6:	6803      	ldr	r3, [r0, #0]
900165e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900165ea:	4798      	blx	r3
900165ec:	280b      	cmp	r0, #11
900165ee:	bf96      	itet	ls
900165f0:	4b05      	ldrls	r3, [pc, #20]	; (90016608 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
900165f2:	2400      	movhi	r4, #0
900165f4:	5c1c      	ldrbls	r4, [r3, r0]
900165f6:	fb08 7005 	mla	r0, r8, r5, r7
900165fa:	10e4      	asrs	r4, r4, #3
900165fc:	fb04 6000 	mla	r0, r4, r0, r6
90016600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016604:	24028e26 	.word	0x24028e26
90016608:	9003052c 	.word	0x9003052c

9001660c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
9001660c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001660e:	b08b      	sub	sp, #44	; 0x2c
90016610:	461f      	mov	r7, r3
90016612:	4604      	mov	r4, r0
90016614:	4616      	mov	r6, r2
90016616:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001661a:	2500      	movs	r5, #0
9001661c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90016620:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90016624:	9504      	str	r5, [sp, #16]
90016626:	f8ad 3018 	strh.w	r3, [sp, #24]
9001662a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001662e:	f8ad 301a 	strh.w	r3, [sp, #26]
90016632:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90016636:	f8ad 301c 	strh.w	r3, [sp, #28]
9001663a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9001663e:	f88d 3020 	strb.w	r3, [sp, #32]
90016642:	f7ff fe9f 	bl	90016384 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90016646:	463a      	mov	r2, r7
90016648:	4631      	mov	r1, r6
9001664a:	4603      	mov	r3, r0
9001664c:	4620      	mov	r0, r4
9001664e:	f7ff ffc1 	bl	900165d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90016652:	4b0e      	ldr	r3, [pc, #56]	; (9001668c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90016654:	9005      	str	r0, [sp, #20]
90016656:	881b      	ldrh	r3, [r3, #0]
90016658:	f8ad 301e 	strh.w	r3, [sp, #30]
9001665c:	f7ff fce6 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
90016660:	6803      	ldr	r3, [r0, #0]
90016662:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016664:	4798      	blx	r3
90016666:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90016668:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
9001666c:	a901      	add	r1, sp, #4
9001666e:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90016672:	9304      	str	r3, [sp, #16]
90016674:	6860      	ldr	r0, [r4, #4]
90016676:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
9001667a:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
9001667e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90016682:	6803      	ldr	r3, [r0, #0]
90016684:	685b      	ldr	r3, [r3, #4]
90016686:	4798      	blx	r3
90016688:	b00b      	add	sp, #44	; 0x2c
9001668a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001668c:	24028e26 	.word	0x24028e26

90016690 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90016690:	b5f0      	push	{r4, r5, r6, r7, lr}
90016692:	b08d      	sub	sp, #52	; 0x34
90016694:	2501      	movs	r5, #1
90016696:	4604      	mov	r4, r0
90016698:	466b      	mov	r3, sp
9001669a:	9503      	str	r5, [sp, #12]
9001669c:	e883 0006 	stmia.w	r3, {r1, r2}
900166a0:	2300      	movs	r3, #0
900166a2:	f8bd 6000 	ldrh.w	r6, [sp]
900166a6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
900166aa:	9306      	str	r3, [sp, #24]
900166ac:	6803      	ldr	r3, [r0, #0]
900166ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900166b0:	4798      	blx	r3
900166b2:	463a      	mov	r2, r7
900166b4:	4631      	mov	r1, r6
900166b6:	4603      	mov	r3, r0
900166b8:	4620      	mov	r0, r4
900166ba:	f7ff ff8b 	bl	900165d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900166be:	6c63      	ldr	r3, [r4, #68]	; 0x44
900166c0:	9004      	str	r0, [sp, #16]
900166c2:	9307      	str	r3, [sp, #28]
900166c4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900166c8:	f8ad 3020 	strh.w	r3, [sp, #32]
900166cc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900166d0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
900166d4:	4b0e      	ldr	r3, [pc, #56]	; (90016710 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
900166d6:	881b      	ldrh	r3, [r3, #0]
900166d8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
900166dc:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
900166e0:	f7ff fca4 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
900166e4:	6803      	ldr	r3, [r0, #0]
900166e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900166e8:	4798      	blx	r3
900166ea:	23ff      	movs	r3, #255	; 0xff
900166ec:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
900166f0:	a903      	add	r1, sp, #12
900166f2:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
900166f6:	6860      	ldr	r0, [r4, #4]
900166f8:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
900166fc:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90016700:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90016704:	6803      	ldr	r3, [r0, #0]
90016706:	685b      	ldr	r3, [r3, #4]
90016708:	4798      	blx	r3
9001670a:	6c60      	ldr	r0, [r4, #68]	; 0x44
9001670c:	b00d      	add	sp, #52	; 0x34
9001670e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90016710:	24028e26 	.word	0x24028e26

90016714 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90016714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016718:	b08c      	sub	sp, #48	; 0x30
9001671a:	461e      	mov	r6, r3
9001671c:	2300      	movs	r3, #0
9001671e:	4604      	mov	r4, r0
90016720:	466d      	mov	r5, sp
90016722:	9306      	str	r3, [sp, #24]
90016724:	6803      	ldr	r3, [r0, #0]
90016726:	e885 0006 	stmia.w	r5, {r1, r2}
9001672a:	2501      	movs	r5, #1
9001672c:	f8bd 7000 	ldrh.w	r7, [sp]
90016730:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90016734:	9503      	str	r5, [sp, #12]
90016736:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90016738:	4798      	blx	r3
9001673a:	4642      	mov	r2, r8
9001673c:	4639      	mov	r1, r7
9001673e:	4603      	mov	r3, r0
90016740:	4620      	mov	r0, r4
90016742:	f7ff ff47 	bl	900165d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90016746:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001674a:	9004      	str	r0, [sp, #16]
9001674c:	f8ad 3020 	strh.w	r3, [sp, #32]
90016750:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90016754:	9607      	str	r6, [sp, #28]
90016756:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001675a:	4b10      	ldr	r3, [pc, #64]	; (9001679c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
9001675c:	881b      	ldrh	r3, [r3, #0]
9001675e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90016762:	9b12      	ldr	r3, [sp, #72]	; 0x48
90016764:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90016768:	f7ff fc60 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
9001676c:	6803      	ldr	r3, [r0, #0]
9001676e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016770:	4798      	blx	r3
90016772:	23ff      	movs	r3, #255	; 0xff
90016774:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90016778:	a903      	add	r1, sp, #12
9001677a:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
9001677e:	6860      	ldr	r0, [r4, #4]
90016780:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90016784:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90016788:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
9001678c:	6803      	ldr	r3, [r0, #0]
9001678e:	685b      	ldr	r3, [r3, #4]
90016790:	4798      	blx	r3
90016792:	4630      	mov	r0, r6
90016794:	b00c      	add	sp, #48	; 0x30
90016796:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001679a:	bf00      	nop
9001679c:	24028e26 	.word	0x24028e26

900167a0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
900167a0:	b5f0      	push	{r4, r5, r6, r7, lr}
900167a2:	b085      	sub	sp, #20
900167a4:	4605      	mov	r5, r0
900167a6:	ac02      	add	r4, sp, #8
900167a8:	e884 0006 	stmia.w	r4, {r1, r2}
900167ac:	f8bd 6008 	ldrh.w	r6, [sp, #8]
900167b0:	f8bd 700a 	ldrh.w	r7, [sp, #10]
900167b4:	f7ff fde6 	bl	90016384 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900167b8:	4631      	mov	r1, r6
900167ba:	4603      	mov	r3, r0
900167bc:	463a      	mov	r2, r7
900167be:	4628      	mov	r0, r5
900167c0:	f7ff ff08 	bl	900165d4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900167c4:	4a05      	ldr	r2, [pc, #20]	; (900167dc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
900167c6:	682b      	ldr	r3, [r5, #0]
900167c8:	8812      	ldrh	r2, [r2, #0]
900167ca:	9200      	str	r2, [sp, #0]
900167cc:	6ede      	ldr	r6, [r3, #108]	; 0x6c
900167ce:	4603      	mov	r3, r0
900167d0:	4628      	mov	r0, r5
900167d2:	e894 0006 	ldmia.w	r4, {r1, r2}
900167d6:	47b0      	blx	r6
900167d8:	b005      	add	sp, #20
900167da:	bdf0      	pop	{r4, r5, r6, r7, pc}
900167dc:	24028e26 	.word	0x24028e26

900167e0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
900167e0:	b570      	push	{r4, r5, r6, lr}
900167e2:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
900167e6:	4604      	mov	r4, r0
900167e8:	b19b      	cbz	r3, 90016812 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
900167ea:	2002      	movs	r0, #2
900167ec:	f7ea fa56 	bl	90000c9c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
900167f0:	2300      	movs	r3, #0
900167f2:	4620      	mov	r0, r4
900167f4:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
900167f8:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
900167fc:	6823      	ldr	r3, [r4, #0]
900167fe:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
90016802:	f7ff fdbf 	bl	90016384 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90016806:	4601      	mov	r1, r0
90016808:	4620      	mov	r0, r4
9001680a:	462b      	mov	r3, r5
9001680c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016810:	4718      	bx	r3
90016812:	bd70      	pop	{r4, r5, r6, pc}

90016814 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90016814:	b570      	push	{r4, r5, r6, lr}
90016816:	4605      	mov	r5, r0
90016818:	460c      	mov	r4, r1
9001681a:	2003      	movs	r0, #3
9001681c:	b149      	cbz	r1, 90016832 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
9001681e:	f7ea f9d5 	bl	90000bcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90016822:	6928      	ldr	r0, [r5, #16]
90016824:	b168      	cbz	r0, 90016842 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90016826:	6803      	ldr	r3, [r0, #0]
90016828:	2101      	movs	r1, #1
9001682a:	695b      	ldr	r3, [r3, #20]
9001682c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016830:	4718      	bx	r3
90016832:	f7ea f9ff 	bl	90000c34 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90016836:	6928      	ldr	r0, [r5, #16]
90016838:	b118      	cbz	r0, 90016842 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
9001683a:	6803      	ldr	r3, [r0, #0]
9001683c:	4621      	mov	r1, r4
9001683e:	695b      	ldr	r3, [r3, #20]
90016840:	e7f4      	b.n	9001682c <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90016842:	bd70      	pop	{r4, r5, r6, pc}

90016844 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90016844:	b538      	push	{r3, r4, r5, lr}
90016846:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
9001684a:	4604      	mov	r4, r0
9001684c:	460d      	mov	r5, r1
9001684e:	428b      	cmp	r3, r1
90016850:	d006      	beq.n	90016860 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90016852:	6803      	ldr	r3, [r0, #0]
90016854:	b929      	cbnz	r1, 90016862 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90016856:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
9001685a:	4798      	blx	r3
9001685c:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
90016860:	bd38      	pop	{r3, r4, r5, pc}
90016862:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90016866:	e7f8      	b.n	9001685a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90016868 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90016868:	4b0d      	ldr	r3, [pc, #52]	; (900168a0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
9001686a:	b510      	push	{r4, lr}
9001686c:	781b      	ldrb	r3, [r3, #0]
9001686e:	4604      	mov	r4, r0
90016870:	b95b      	cbnz	r3, 9001688a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90016872:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90016876:	2b02      	cmp	r3, #2
90016878:	d007      	beq.n	9001688a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9001687a:	6840      	ldr	r0, [r0, #4]
9001687c:	f000 f918 	bl	90016ab0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90016880:	b118      	cbz	r0, 9001688a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90016882:	6862      	ldr	r2, [r4, #4]
90016884:	7a53      	ldrb	r3, [r2, #9]
90016886:	2b00      	cmp	r3, #0
90016888:	d0fc      	beq.n	90016884 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
9001688a:	f7eb fbc5 	bl	90002018 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001688e:	4620      	mov	r0, r4
90016890:	2100      	movs	r1, #0
90016892:	f7ff ffd7 	bl	90016844 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90016896:	4620      	mov	r0, r4
90016898:	f7ff fd74 	bl	90016384 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001689c:	bd10      	pop	{r4, pc}
9001689e:	bf00      	nop
900168a0:	24028e2a 	.word	0x24028e2a

900168a4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
900168a4:	b570      	push	{r4, r5, r6, lr}
900168a6:	4604      	mov	r4, r0
900168a8:	6803      	ldr	r3, [r0, #0]
900168aa:	b919      	cbnz	r1, 900168b4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
900168ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900168ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900168b2:	4718      	bx	r3
900168b4:	2200      	movs	r2, #0
900168b6:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
900168ba:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
900168be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900168c0:	4798      	blx	r3
900168c2:	4605      	mov	r5, r0
900168c4:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
900168c8:	4620      	mov	r0, r4
900168ca:	2101      	movs	r1, #1
900168cc:	f7ff ffba 	bl	90016844 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900168d0:	4628      	mov	r0, r5
900168d2:	bd70      	pop	{r4, r5, r6, pc}

900168d4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
900168d4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
900168d8:	1a13      	subs	r3, r2, r0
900168da:	4258      	negs	r0, r3
900168dc:	4158      	adcs	r0, r3
900168de:	4770      	bx	lr

900168e0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
900168e0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
900168e4:	1a9b      	subs	r3, r3, r2
900168e6:	2b00      	cmp	r3, #0
900168e8:	bfdc      	itt	le
900168ea:	6882      	ldrle	r2, [r0, #8]
900168ec:	189b      	addle	r3, r3, r2
900168ee:	2b01      	cmp	r3, #1
900168f0:	bfcc      	ite	gt
900168f2:	2000      	movgt	r0, #0
900168f4:	2001      	movle	r0, #1
900168f6:	4770      	bx	lr

900168f8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
900168f8:	6902      	ldr	r2, [r0, #16]
900168fa:	6843      	ldr	r3, [r0, #4]
900168fc:	2024      	movs	r0, #36	; 0x24
900168fe:	fb00 3002 	mla	r0, r0, r2, r3
90016902:	4770      	bx	lr

90016904 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90016904:	6803      	ldr	r3, [r0, #0]
90016906:	691b      	ldr	r3, [r3, #16]
90016908:	4718      	bx	r3

9001690a <_ZN8touchgfx13DMA_Interface7executeEv>:
9001690a:	2301      	movs	r3, #1
9001690c:	b570      	push	{r4, r5, r6, lr}
9001690e:	7203      	strb	r3, [r0, #8]
90016910:	4604      	mov	r4, r0
90016912:	6840      	ldr	r0, [r0, #4]
90016914:	6803      	ldr	r3, [r0, #0]
90016916:	699b      	ldr	r3, [r3, #24]
90016918:	4798      	blx	r3
9001691a:	6803      	ldr	r3, [r0, #0]
9001691c:	4605      	mov	r5, r0
9001691e:	2b40      	cmp	r3, #64	; 0x40
90016920:	d00c      	beq.n	9001693c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90016922:	d810      	bhi.n	90016946 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90016924:	2b04      	cmp	r3, #4
90016926:	d01d      	beq.n	90016964 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90016928:	d804      	bhi.n	90016934 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
9001692a:	2b01      	cmp	r3, #1
9001692c:	d006      	beq.n	9001693c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001692e:	2b02      	cmp	r3, #2
90016930:	d02c      	beq.n	9001698c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90016932:	bd70      	pop	{r4, r5, r6, pc}
90016934:	2b08      	cmp	r3, #8
90016936:	d01d      	beq.n	90016974 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90016938:	2b20      	cmp	r3, #32
9001693a:	d1fa      	bne.n	90016932 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
9001693c:	6823      	ldr	r3, [r4, #0]
9001693e:	4620      	mov	r0, r4
90016940:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90016942:	4798      	blx	r3
90016944:	e013      	b.n	9001696e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90016946:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
9001694a:	d0f7      	beq.n	9001693c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001694c:	d804      	bhi.n	90016958 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
9001694e:	2b80      	cmp	r3, #128	; 0x80
90016950:	d0f4      	beq.n	9001693c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90016952:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90016956:	e7f0      	b.n	9001693a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90016958:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001695c:	d0ee      	beq.n	9001693c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001695e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90016962:	e7e5      	b.n	90016930 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90016964:	6823      	ldr	r3, [r4, #0]
90016966:	7f01      	ldrb	r1, [r0, #28]
90016968:	4620      	mov	r0, r4
9001696a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001696c:	4798      	blx	r3
9001696e:	6823      	ldr	r3, [r4, #0]
90016970:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90016972:	e006      	b.n	90016982 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90016974:	6823      	ldr	r3, [r4, #0]
90016976:	7f01      	ldrb	r1, [r0, #28]
90016978:	4620      	mov	r0, r4
9001697a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001697c:	4798      	blx	r3
9001697e:	6823      	ldr	r3, [r4, #0]
90016980:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90016982:	4629      	mov	r1, r5
90016984:	4620      	mov	r0, r4
90016986:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001698a:	4718      	bx	r3
9001698c:	6823      	ldr	r3, [r4, #0]
9001698e:	4620      	mov	r0, r4
90016990:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90016992:	4798      	blx	r3
90016994:	e7f3      	b.n	9001697e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90016996 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90016996:	4770      	bx	lr

90016998 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90016998:	4770      	bx	lr

9001699a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
9001699a:	4770      	bx	lr

9001699c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
9001699c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
900169a0:	b510      	push	{r4, lr}
900169a2:	1ad2      	subs	r2, r2, r3
900169a4:	2a00      	cmp	r2, #0
900169a6:	bfdc      	itt	le
900169a8:	6884      	ldrle	r4, [r0, #8]
900169aa:	1912      	addle	r2, r2, r4
900169ac:	2a01      	cmp	r2, #1
900169ae:	dd16      	ble.n	900169de <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
900169b0:	6842      	ldr	r2, [r0, #4]
900169b2:	2424      	movs	r4, #36	; 0x24
900169b4:	fb04 2303 	mla	r3, r4, r3, r2
900169b8:	f101 0220 	add.w	r2, r1, #32
900169bc:	f851 4b04 	ldr.w	r4, [r1], #4
900169c0:	4291      	cmp	r1, r2
900169c2:	f843 4b04 	str.w	r4, [r3], #4
900169c6:	d1f9      	bne.n	900169bc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
900169c8:	780a      	ldrb	r2, [r1, #0]
900169ca:	701a      	strb	r2, [r3, #0]
900169cc:	68c3      	ldr	r3, [r0, #12]
900169ce:	6882      	ldr	r2, [r0, #8]
900169d0:	f3bf 8f5b 	dmb	ish
900169d4:	3301      	adds	r3, #1
900169d6:	429a      	cmp	r2, r3
900169d8:	bfd8      	it	le
900169da:	1a9b      	suble	r3, r3, r2
900169dc:	60c3      	str	r3, [r0, #12]
900169de:	bd10      	pop	{r4, pc}

900169e0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
900169e0:	6903      	ldr	r3, [r0, #16]
900169e2:	6882      	ldr	r2, [r0, #8]
900169e4:	f3bf 8f5b 	dmb	ish
900169e8:	3301      	adds	r3, #1
900169ea:	429a      	cmp	r2, r3
900169ec:	bfd8      	it	le
900169ee:	1a9b      	suble	r3, r3, r2
900169f0:	6103      	str	r3, [r0, #16]
900169f2:	4770      	bx	lr

900169f4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
900169f4:	b570      	push	{r4, r5, r6, lr}
900169f6:	4604      	mov	r4, r0
900169f8:	460e      	mov	r6, r1
900169fa:	6860      	ldr	r0, [r4, #4]
900169fc:	6803      	ldr	r3, [r0, #0]
900169fe:	685b      	ldr	r3, [r3, #4]
90016a00:	4798      	blx	r3
90016a02:	2800      	cmp	r0, #0
90016a04:	d1f9      	bne.n	900169fa <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90016a06:	4d0d      	ldr	r5, [pc, #52]	; (90016a3c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90016a08:	6828      	ldr	r0, [r5, #0]
90016a0a:	6803      	ldr	r3, [r0, #0]
90016a0c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90016a0e:	4798      	blx	r3
90016a10:	f7eb fb10 	bl	90002034 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90016a14:	6828      	ldr	r0, [r5, #0]
90016a16:	2101      	movs	r1, #1
90016a18:	f7ff ff14 	bl	90016844 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90016a1c:	6860      	ldr	r0, [r4, #4]
90016a1e:	4631      	mov	r1, r6
90016a20:	6803      	ldr	r3, [r0, #0]
90016a22:	689b      	ldr	r3, [r3, #8]
90016a24:	4798      	blx	r3
90016a26:	6823      	ldr	r3, [r4, #0]
90016a28:	4620      	mov	r0, r4
90016a2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016a2c:	4798      	blx	r3
90016a2e:	6828      	ldr	r0, [r5, #0]
90016a30:	6803      	ldr	r3, [r0, #0]
90016a32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016a36:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90016a38:	4718      	bx	r3
90016a3a:	bf00      	nop
90016a3c:	24028e2c 	.word	0x24028e2c

90016a40 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90016a40:	b508      	push	{r3, lr}
90016a42:	f7eb fae9 	bl	90002018 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90016a46:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90016a4a:	f7eb baed 	b.w	90002028 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90016a4e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90016a4e:	b510      	push	{r4, lr}
90016a50:	4604      	mov	r4, r0
90016a52:	2114      	movs	r1, #20
90016a54:	f014 fcdf 	bl	9002b416 <_ZdlPvj>
90016a58:	4620      	mov	r0, r4
90016a5a:	bd10      	pop	{r4, pc}

90016a5c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90016a5c:	b570      	push	{r4, r5, r6, lr}
90016a5e:	4604      	mov	r4, r0
90016a60:	6840      	ldr	r0, [r0, #4]
90016a62:	6803      	ldr	r3, [r0, #0]
90016a64:	681b      	ldr	r3, [r3, #0]
90016a66:	4798      	blx	r3
90016a68:	4605      	mov	r5, r0
90016a6a:	b930      	cbnz	r0, 90016a7a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90016a6c:	7a23      	ldrb	r3, [r4, #8]
90016a6e:	b123      	cbz	r3, 90016a7a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90016a70:	6860      	ldr	r0, [r4, #4]
90016a72:	6803      	ldr	r3, [r0, #0]
90016a74:	695b      	ldr	r3, [r3, #20]
90016a76:	4798      	blx	r3
90016a78:	7225      	strb	r5, [r4, #8]
90016a7a:	6860      	ldr	r0, [r4, #4]
90016a7c:	6803      	ldr	r3, [r0, #0]
90016a7e:	681b      	ldr	r3, [r3, #0]
90016a80:	4798      	blx	r3
90016a82:	b928      	cbnz	r0, 90016a90 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90016a84:	6823      	ldr	r3, [r4, #0]
90016a86:	4620      	mov	r0, r4
90016a88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90016a8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016a8e:	4718      	bx	r3
90016a90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016a94:	f7eb bad6 	b.w	90002044 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90016a98 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90016a98:	b510      	push	{r4, lr}
90016a9a:	6082      	str	r2, [r0, #8]
90016a9c:	2200      	movs	r2, #0
90016a9e:	4c03      	ldr	r4, [pc, #12]	; (90016aac <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90016aa0:	e9c0 2203 	strd	r2, r2, [r0, #12]
90016aa4:	e9c0 4100 	strd	r4, r1, [r0]
90016aa8:	bd10      	pop	{r4, pc}
90016aaa:	bf00      	nop
90016aac:	90030540 	.word	0x90030540

90016ab0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90016ab0:	6840      	ldr	r0, [r0, #4]
90016ab2:	6803      	ldr	r3, [r0, #0]
90016ab4:	681b      	ldr	r3, [r3, #0]
90016ab6:	4718      	bx	r3

90016ab8 <_ZNK8touchgfx19PainterRGB565Bitmap18getRenderingMethodEv>:
90016ab8:	b508      	push	{r3, lr}
90016aba:	4b05      	ldr	r3, [pc, #20]	; (90016ad0 <_ZNK8touchgfx19PainterRGB565Bitmap18getRenderingMethodEv+0x18>)
90016abc:	6818      	ldr	r0, [r3, #0]
90016abe:	6803      	ldr	r3, [r0, #0]
90016ac0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
90016ac4:	4798      	blx	r3
90016ac6:	1e43      	subs	r3, r0, #1
90016ac8:	4258      	negs	r0, r3
90016aca:	4158      	adcs	r0, r3
90016acc:	bd08      	pop	{r3, pc}
90016ace:	bf00      	nop
90016ad0:	24028e2c 	.word	0x24028e2c

90016ad4 <_ZN8touchgfx19PainterRGB565BitmapD1Ev>:
90016ad4:	4770      	bx	lr

90016ad6 <_ZThn8_N8touchgfx19PainterRGB565BitmapD1Ev>:
90016ad6:	3808      	subs	r0, #8
90016ad8:	4770      	bx	lr
	...

90016adc <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE>:
90016adc:	b538      	push	{r3, r4, r5, lr}
90016ade:	4b10      	ldr	r3, [pc, #64]	; (90016b20 <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE+0x44>)
90016ae0:	4604      	mov	r4, r0
90016ae2:	f9b1 5004 	ldrsh.w	r5, [r1, #4]
90016ae6:	781b      	ldrb	r3, [r3, #0]
90016ae8:	8085      	strh	r5, [r0, #4]
90016aea:	b96b      	cbnz	r3, 90016b08 <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE+0x2c>
90016aec:	f9b0 201c 	ldrsh.w	r2, [r0, #28]
90016af0:	8462      	strh	r2, [r4, #34]	; 0x22
90016af2:	b963      	cbnz	r3, 90016b0e <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE+0x32>
90016af4:	f9b4 001e 	ldrsh.w	r0, [r4, #30]
90016af8:	84a0      	strh	r0, [r4, #36]	; 0x24
90016afa:	f64f 73ff 	movw	r3, #65535	; 0xffff
90016afe:	89a0      	ldrh	r0, [r4, #12]
90016b00:	1ac0      	subs	r0, r0, r3
90016b02:	bf18      	it	ne
90016b04:	2001      	movne	r0, #1
90016b06:	bd38      	pop	{r3, r4, r5, pc}
90016b08:	f9b0 201e 	ldrsh.w	r2, [r0, #30]
90016b0c:	e7f0      	b.n	90016af0 <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE+0x14>
90016b0e:	f104 000c 	add.w	r0, r4, #12
90016b12:	f006 ffdd 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90016b16:	1b40      	subs	r0, r0, r5
90016b18:	8ba5      	ldrh	r5, [r4, #28]
90016b1a:	1b40      	subs	r0, r0, r5
90016b1c:	b200      	sxth	r0, r0
90016b1e:	e7eb      	b.n	90016af8 <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE+0x1c>
90016b20:	24028e24 	.word	0x24028e24

90016b24 <_ZNK8touchgfx19PainterRGB565Bitmap8tearDownEv>:
90016b24:	f7eb bd30 	b.w	90002588 <_ZN8touchgfx5paint8tearDownEv>

90016b28 <_ZN8touchgfx19PainterRGB565BitmapD0Ev>:
90016b28:	b510      	push	{r4, lr}
90016b2a:	4604      	mov	r4, r0
90016b2c:	212c      	movs	r1, #44	; 0x2c
90016b2e:	f014 fc72 	bl	9002b416 <_ZdlPvj>
90016b32:	4620      	mov	r0, r4
90016b34:	bd10      	pop	{r4, pc}

90016b36 <_ZThn8_N8touchgfx19PainterRGB565BitmapD0Ev>:
90016b36:	f1a0 0008 	sub.w	r0, r0, #8
90016b3a:	e7f5      	b.n	90016b28 <_ZN8touchgfx19PainterRGB565BitmapD0Ev>

90016b3c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh>:
90016b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016b40:	4606      	mov	r6, r0
90016b42:	b085      	sub	sp, #20
90016b44:	8c77      	ldrh	r7, [r6, #34]	; 0x22
90016b46:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
90016b4a:	441f      	add	r7, r3
90016b4c:	8cb5      	ldrh	r5, [r6, #36]	; 0x24
90016b4e:	9001      	str	r0, [sp, #4]
90016b50:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
90016b54:	b2bf      	uxth	r7, r7
90016b56:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
90016b5a:	4428      	add	r0, r5
90016b5c:	f896 5020 	ldrb.w	r5, [r6, #32]
90016b60:	b23b      	sxth	r3, r7
90016b62:	b200      	sxth	r0, r0
90016b64:	b1a5      	cbz	r5, 90016b90 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x54>
90016b66:	f9b6 7014 	ldrsh.w	r7, [r6, #20]
90016b6a:	fb93 f5f7 	sdiv	r5, r3, r7
90016b6e:	fb07 3315 	mls	r3, r7, r5, r3
90016b72:	f9b6 5016 	ldrsh.w	r5, [r6, #22]
90016b76:	fb90 fcf5 	sdiv	ip, r0, r5
90016b7a:	2b00      	cmp	r3, #0
90016b7c:	fb05 001c 	mls	r0, r5, ip, r0
90016b80:	bfb8      	it	lt
90016b82:	19db      	addlt	r3, r3, r7
90016b84:	2800      	cmp	r0, #0
90016b86:	b21b      	sxth	r3, r3
90016b88:	da00      	bge.n	90016b8c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x50>
90016b8a:	4428      	add	r0, r5
90016b8c:	b200      	sxth	r0, r0
90016b8e:	e018      	b.n	90016bc2 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x86>
90016b90:	2b00      	cmp	r3, #0
90016b92:	da07      	bge.n	90016ba4 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x68>
90016b94:	4423      	add	r3, r4
90016b96:	2b00      	cmp	r3, #0
90016b98:	dd61      	ble.n	90016c5e <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x122>
90016b9a:	443c      	add	r4, r7
90016b9c:	1bd7      	subs	r7, r2, r7
90016b9e:	462b      	mov	r3, r5
90016ba0:	b224      	sxth	r4, r4
90016ba2:	b23a      	sxth	r2, r7
90016ba4:	f9b6 5014 	ldrsh.w	r5, [r6, #20]
90016ba8:	429d      	cmp	r5, r3
90016baa:	dd58      	ble.n	90016c5e <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x122>
90016bac:	2800      	cmp	r0, #0
90016bae:	db56      	blt.n	90016c5e <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x122>
90016bb0:	f9b6 7016 	ldrsh.w	r7, [r6, #22]
90016bb4:	4287      	cmp	r7, r0
90016bb6:	dd52      	ble.n	90016c5e <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x122>
90016bb8:	191f      	adds	r7, r3, r4
90016bba:	42af      	cmp	r7, r5
90016bbc:	dd01      	ble.n	90016bc2 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x86>
90016bbe:	1aec      	subs	r4, r5, r3
90016bc0:	b224      	sxth	r4, r4
90016bc2:	eb01 0542 	add.w	r5, r1, r2, lsl #1
90016bc6:	f9b6 1014 	ldrsh.w	r1, [r6, #20]
90016bca:	69b7      	ldr	r7, [r6, #24]
90016bcc:	1aca      	subs	r2, r1, r3
90016bce:	4348      	muls	r0, r1
90016bd0:	7bb1      	ldrb	r1, [r6, #14]
90016bd2:	eb05 0944 	add.w	r9, r5, r4, lsl #1
90016bd6:	b212      	sxth	r2, r2
90016bd8:	b1a9      	cbz	r1, 90016c06 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0xca>
90016bda:	eb07 0780 	add.w	r7, r7, r0, lsl #2
90016bde:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90016be2:	42a2      	cmp	r2, r4
90016be4:	4628      	mov	r0, r5
90016be6:	9b01      	ldr	r3, [sp, #4]
90016be8:	bfa8      	it	ge
90016bea:	4622      	movge	r2, r4
90016bec:	4690      	mov	r8, r2
90016bee:	1aa4      	subs	r4, r4, r2
90016bf0:	f7eb fcfc 	bl	900025ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
90016bf4:	4639      	mov	r1, r7
90016bf6:	eb05 0548 	add.w	r5, r5, r8, lsl #1
90016bfa:	f9b6 2014 	ldrsh.w	r2, [r6, #20]
90016bfe:	b224      	sxth	r4, r4
90016c00:	45a9      	cmp	r9, r5
90016c02:	d8ee      	bhi.n	90016be2 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0xa6>
90016c04:	e02b      	b.n	90016c5e <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x122>
90016c06:	eb07 0140 	add.w	r1, r7, r0, lsl #1
90016c0a:	6ab7      	ldr	r7, [r6, #40]	; 0x28
90016c0c:	9100      	str	r1, [sp, #0]
90016c0e:	eb01 0143 	add.w	r1, r1, r3, lsl #1
90016c12:	2f00      	cmp	r7, #0
90016c14:	d062      	beq.n	90016cdc <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x1a0>
90016c16:	1838      	adds	r0, r7, r0
90016c18:	f04f 0aff 	mov.w	sl, #255	; 0xff
90016c1c:	4403      	add	r3, r0
90016c1e:	9002      	str	r0, [sp, #8]
90016c20:	42a2      	cmp	r2, r4
90016c22:	bfa8      	it	ge
90016c24:	4622      	movge	r2, r4
90016c26:	1aa4      	subs	r4, r4, r2
90016c28:	eb05 0042 	add.w	r0, r5, r2, lsl #1
90016c2c:	b224      	sxth	r4, r4
90016c2e:	9003      	str	r0, [sp, #12]
90016c30:	f813 2b01 	ldrb.w	r2, [r3], #1
90016c34:	9801      	ldr	r0, [sp, #4]
90016c36:	4342      	muls	r2, r0
90016c38:	1c57      	adds	r7, r2, #1
90016c3a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90016c3e:	123f      	asrs	r7, r7, #8
90016c40:	2fff      	cmp	r7, #255	; 0xff
90016c42:	d10f      	bne.n	90016c64 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x128>
90016c44:	880a      	ldrh	r2, [r1, #0]
90016c46:	802a      	strh	r2, [r5, #0]
90016c48:	3502      	adds	r5, #2
90016c4a:	9a03      	ldr	r2, [sp, #12]
90016c4c:	3102      	adds	r1, #2
90016c4e:	42aa      	cmp	r2, r5
90016c50:	d8ee      	bhi.n	90016c30 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0xf4>
90016c52:	45a9      	cmp	r9, r5
90016c54:	9900      	ldr	r1, [sp, #0]
90016c56:	9b02      	ldr	r3, [sp, #8]
90016c58:	f9b6 2014 	ldrsh.w	r2, [r6, #20]
90016c5c:	d8e0      	bhi.n	90016c20 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0xe4>
90016c5e:	b005      	add	sp, #20
90016c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016c64:	fa5f fc87 	uxtb.w	ip, r7
90016c68:	2f00      	cmp	r7, #0
90016c6a:	d0ed      	beq.n	90016c48 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x10c>
90016c6c:	f8b5 8000 	ldrh.w	r8, [r5]
90016c70:	ea6f 0c0c 	mvn.w	ip, ip
90016c74:	8808      	ldrh	r0, [r1, #0]
90016c76:	f428 62ff 	bic.w	r2, r8, #2040	; 0x7f8
90016c7a:	fa5f fc8c 	uxtb.w	ip, ip
90016c7e:	f420 6eff 	bic.w	lr, r0, #2040	; 0x7f8
90016c82:	f408 6bfc 	and.w	fp, r8, #2016	; 0x7e0
90016c86:	f022 0207 	bic.w	r2, r2, #7
90016c8a:	f008 081f 	and.w	r8, r8, #31
90016c8e:	f02e 0e07 	bic.w	lr, lr, #7
90016c92:	fb0c fb0b 	mul.w	fp, ip, fp
90016c96:	fb0c f202 	mul.w	r2, ip, r2
90016c9a:	fb0c f808 	mul.w	r8, ip, r8
90016c9e:	fb07 2e0e 	mla	lr, r7, lr, r2
90016ca2:	f400 62fc 	and.w	r2, r0, #2016	; 0x7e0
90016ca6:	f000 001f 	and.w	r0, r0, #31
90016caa:	fb07 b202 	mla	r2, r7, r2, fp
90016cae:	fb07 8000 	mla	r0, r7, r0, r8
90016cb2:	fb9e fefa 	sdiv	lr, lr, sl
90016cb6:	fb92 f2fa 	sdiv	r2, r2, sl
90016cba:	f42e 6eff 	bic.w	lr, lr, #2040	; 0x7f8
90016cbe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90016cc2:	f02e 0e07 	bic.w	lr, lr, #7
90016cc6:	ea4e 0e02 	orr.w	lr, lr, r2
90016cca:	fb90 f2fa 	sdiv	r2, r0, sl
90016cce:	f002 021f 	and.w	r2, r2, #31
90016cd2:	ea4e 0e02 	orr.w	lr, lr, r2
90016cd6:	f8a5 e000 	strh.w	lr, [r5]
90016cda:	e7b5      	b.n	90016c48 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x10c>
90016cdc:	42a2      	cmp	r2, r4
90016cde:	4628      	mov	r0, r5
90016ce0:	9b01      	ldr	r3, [sp, #4]
90016ce2:	bfa8      	it	ge
90016ce4:	4622      	movge	r2, r4
90016ce6:	4617      	mov	r7, r2
90016ce8:	1aa4      	subs	r4, r4, r2
90016cea:	f7eb fc57 	bl	9000259c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
90016cee:	9900      	ldr	r1, [sp, #0]
90016cf0:	eb05 0547 	add.w	r5, r5, r7, lsl #1
90016cf4:	f9b6 2014 	ldrsh.w	r2, [r6, #20]
90016cf8:	b224      	sxth	r4, r4
90016cfa:	45a9      	cmp	r9, r5
90016cfc:	d8ee      	bhi.n	90016cdc <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x1a0>
90016cfe:	e7ae      	b.n	90016c5e <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x122>

90016d00 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>:
90016d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016d02:	880b      	ldrh	r3, [r1, #0]
90016d04:	f100 050c 	add.w	r5, r0, #12
90016d08:	4604      	mov	r4, r0
90016d0a:	8183      	strh	r3, [r0, #12]
90016d0c:	4628      	mov	r0, r5
90016d0e:	f007 f84f 	bl	9001ddb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
90016d12:	73a0      	strb	r0, [r4, #14]
90016d14:	4628      	mov	r0, r5
90016d16:	f006 fedb 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90016d1a:	4607      	mov	r7, r0
90016d1c:	4628      	mov	r0, r5
90016d1e:	f006 ff0b 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90016d22:	2300      	movs	r3, #0
90016d24:	82e0      	strh	r0, [r4, #22]
90016d26:	f104 0010 	add.w	r0, r4, #16
90016d2a:	6123      	str	r3, [r4, #16]
90016d2c:	82a7      	strh	r7, [r4, #20]
90016d2e:	f003 feab 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90016d32:	4628      	mov	r0, r5
90016d34:	f006 ffb8 	bl	9001dca8 <_ZNK8touchgfx6Bitmap7getDataEv>
90016d38:	61a0      	str	r0, [r4, #24]
90016d3a:	4628      	mov	r0, r5
90016d3c:	f006 ffe4 	bl	9001dd08 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90016d40:	62a0      	str	r0, [r4, #40]	; 0x28
90016d42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90016d44 <_ZThn8_N8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>:
90016d44:	f1a0 0008 	sub.w	r0, r0, #8
90016d48:	f7ff bfda 	b.w	90016d00 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>

90016d4c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90016d4c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90016d4e:	6803      	ldr	r3, [r0, #0]
90016d50:	460d      	mov	r5, r1
90016d52:	4604      	mov	r4, r0
90016d54:	4601      	mov	r1, r0
90016d56:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90016d58:	a802      	add	r0, sp, #8
90016d5a:	4798      	blx	r3
90016d5c:	6828      	ldr	r0, [r5, #0]
90016d5e:	6869      	ldr	r1, [r5, #4]
90016d60:	466b      	mov	r3, sp
90016d62:	c303      	stmia	r3!, {r0, r1}
90016d64:	4668      	mov	r0, sp
90016d66:	4619      	mov	r1, r3
90016d68:	f7fe fa28 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
90016d6c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90016d6e:	b1a8      	cbz	r0, 90016d9c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
90016d70:	6803      	ldr	r3, [r0, #0]
90016d72:	1d21      	adds	r1, r4, #4
90016d74:	68db      	ldr	r3, [r3, #12]
90016d76:	4798      	blx	r3
90016d78:	b180      	cbz	r0, 90016d9c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
90016d7a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90016d7e:	2b00      	cmp	r3, #0
90016d80:	dd0c      	ble.n	90016d9c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
90016d82:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90016d86:	2d00      	cmp	r5, #0
90016d88:	dd08      	ble.n	90016d9c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
90016d8a:	4a2d      	ldr	r2, [pc, #180]	; (90016e40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
90016d8c:	7812      	ldrb	r2, [r2, #0]
90016d8e:	b13a      	cbz	r2, 90016da0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
90016d90:	2a01      	cmp	r2, #1
90016d92:	d02d      	beq.n	90016df0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
90016d94:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90016d96:	6803      	ldr	r3, [r0, #0]
90016d98:	691b      	ldr	r3, [r3, #16]
90016d9a:	4798      	blx	r3
90016d9c:	b004      	add	sp, #16
90016d9e:	bd70      	pop	{r4, r5, r6, pc}
90016da0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016da4:	441d      	add	r5, r3
90016da6:	b2ad      	uxth	r5, r5
90016da8:	b22e      	sxth	r6, r5
90016daa:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90016dae:	42b3      	cmp	r3, r6
90016db0:	daf0      	bge.n	90016d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90016db2:	6823      	ldr	r3, [r4, #0]
90016db4:	4669      	mov	r1, sp
90016db6:	4620      	mov	r0, r4
90016db8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90016dba:	4798      	blx	r3
90016dbc:	b940      	cbnz	r0, 90016dd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
90016dbe:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90016dc2:	2b01      	cmp	r3, #1
90016dc4:	d004      	beq.n	90016dd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
90016dc6:	3301      	adds	r3, #1
90016dc8:	105b      	asrs	r3, r3, #1
90016dca:	f8ad 3006 	strh.w	r3, [sp, #6]
90016dce:	e7f0      	b.n	90016db2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
90016dd0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90016dd4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016dd8:	4413      	add	r3, r2
90016dda:	b29b      	uxth	r3, r3
90016ddc:	441a      	add	r2, r3
90016dde:	f8ad 3002 	strh.w	r3, [sp, #2]
90016de2:	b212      	sxth	r2, r2
90016de4:	4296      	cmp	r6, r2
90016de6:	dae0      	bge.n	90016daa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90016de8:	1aeb      	subs	r3, r5, r3
90016dea:	f8ad 3006 	strh.w	r3, [sp, #6]
90016dee:	e7dc      	b.n	90016daa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90016df0:	f8bd 5000 	ldrh.w	r5, [sp]
90016df4:	441d      	add	r5, r3
90016df6:	b2ad      	uxth	r5, r5
90016df8:	b22e      	sxth	r6, r5
90016dfa:	f9bd 3000 	ldrsh.w	r3, [sp]
90016dfe:	42b3      	cmp	r3, r6
90016e00:	dac8      	bge.n	90016d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90016e02:	6823      	ldr	r3, [r4, #0]
90016e04:	4669      	mov	r1, sp
90016e06:	4620      	mov	r0, r4
90016e08:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90016e0a:	4798      	blx	r3
90016e0c:	b940      	cbnz	r0, 90016e20 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
90016e0e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90016e12:	2b01      	cmp	r3, #1
90016e14:	d004      	beq.n	90016e20 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
90016e16:	3301      	adds	r3, #1
90016e18:	105b      	asrs	r3, r3, #1
90016e1a:	f8ad 3004 	strh.w	r3, [sp, #4]
90016e1e:	e7f0      	b.n	90016e02 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
90016e20:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90016e24:	f8bd 3000 	ldrh.w	r3, [sp]
90016e28:	4413      	add	r3, r2
90016e2a:	b29b      	uxth	r3, r3
90016e2c:	441a      	add	r2, r3
90016e2e:	f8ad 3000 	strh.w	r3, [sp]
90016e32:	b212      	sxth	r2, r2
90016e34:	4296      	cmp	r6, r2
90016e36:	dae0      	bge.n	90016dfa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90016e38:	1aeb      	subs	r3, r5, r3
90016e3a:	f8ad 3004 	strh.w	r3, [sp, #4]
90016e3e:	e7dc      	b.n	90016dfa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90016e40:	24028e24 	.word	0x24028e24

90016e44 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90016e44:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90016e46:	6803      	ldr	r3, [r0, #0]
90016e48:	4604      	mov	r4, r0
90016e4a:	4601      	mov	r1, r0
90016e4c:	4668      	mov	r0, sp
90016e4e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90016e50:	4798      	blx	r3
90016e52:	2100      	movs	r1, #0
90016e54:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90016e58:	4668      	mov	r0, sp
90016e5a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90016e5e:	9102      	str	r1, [sp, #8]
90016e60:	a902      	add	r1, sp, #8
90016e62:	f8ad 200c 	strh.w	r2, [sp, #12]
90016e66:	f8ad 300e 	strh.w	r3, [sp, #14]
90016e6a:	f7fe f9a7 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
90016e6e:	6823      	ldr	r3, [r4, #0]
90016e70:	4669      	mov	r1, sp
90016e72:	4620      	mov	r0, r4
90016e74:	691b      	ldr	r3, [r3, #16]
90016e76:	4798      	blx	r3
90016e78:	b004      	add	sp, #16
90016e7a:	bd10      	pop	{r4, pc}

90016e7c <_ZN8touchgfx12CanvasWidgetC1Ev>:
90016e7c:	2101      	movs	r1, #1
90016e7e:	2200      	movs	r2, #0
90016e80:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90016e84:	490a      	ldr	r1, [pc, #40]	; (90016eb0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90016e86:	8082      	strh	r2, [r0, #4]
90016e88:	6001      	str	r1, [r0, #0]
90016e8a:	21ff      	movs	r1, #255	; 0xff
90016e8c:	80c2      	strh	r2, [r0, #6]
90016e8e:	8102      	strh	r2, [r0, #8]
90016e90:	8142      	strh	r2, [r0, #10]
90016e92:	8182      	strh	r2, [r0, #12]
90016e94:	81c2      	strh	r2, [r0, #14]
90016e96:	8202      	strh	r2, [r0, #16]
90016e98:	8242      	strh	r2, [r0, #18]
90016e9a:	61c2      	str	r2, [r0, #28]
90016e9c:	8402      	strh	r2, [r0, #32]
90016e9e:	8442      	strh	r2, [r0, #34]	; 0x22
90016ea0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90016ea4:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
90016ea8:	6282      	str	r2, [r0, #40]	; 0x28
90016eaa:	e9c0 2205 	strd	r2, r2, [r0, #20]
90016eae:	4770      	bx	lr
90016eb0:	900305a4 	.word	0x900305a4

90016eb4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
90016eb4:	f101 0364 	add.w	r3, r1, #100	; 0x64
90016eb8:	4602      	mov	r2, r0
90016eba:	cb03      	ldmia	r3!, {r0, r1}
90016ebc:	6010      	str	r0, [r2, #0]
90016ebe:	4610      	mov	r0, r2
90016ec0:	6051      	str	r1, [r2, #4]
90016ec2:	4770      	bx	lr

90016ec4 <_ZN8touchgfx4LineD1Ev>:
90016ec4:	4770      	bx	lr

90016ec6 <_ZN8touchgfx4LineD0Ev>:
90016ec6:	b510      	push	{r4, lr}
90016ec8:	4604      	mov	r4, r0
90016eca:	2170      	movs	r1, #112	; 0x70
90016ecc:	f014 faa3 	bl	9002b416 <_ZdlPvj>
90016ed0:	4620      	mov	r0, r4
90016ed2:	bd10      	pop	{r4, pc}

90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90016ed4:	b507      	push	{r0, r1, r2, lr}
90016ed6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
90016eda:	ab01      	add	r3, sp, #4
90016edc:	6809      	ldr	r1, [r1, #0]
90016ede:	6800      	ldr	r0, [r0, #0]
90016ee0:	f005 f9c9 	bl	9001c276 <_ZN8touchgfx6muldivElllRl>
90016ee4:	b003      	add	sp, #12
90016ee6:	f85d fb04 	ldr.w	pc, [sp], #4

90016eea <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
90016eea:	6800      	ldr	r0, [r0, #0]
90016eec:	2800      	cmp	r0, #0
90016eee:	bfb9      	ittee	lt
90016ef0:	2320      	movlt	r3, #32
90016ef2:	fb90 f0f3 	sdivlt	r0, r0, r3
90016ef6:	301f      	addge	r0, #31
90016ef8:	1140      	asrge	r0, r0, #5
90016efa:	4770      	bx	lr

90016efc <_ZNK8touchgfx4Line17invalidateContentEv>:
90016efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016f00:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
90016f04:	b089      	sub	sp, #36	; 0x24
90016f06:	4604      	mov	r4, r0
90016f08:	b353      	cbz	r3, 90016f60 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
90016f0a:	6803      	ldr	r3, [r0, #0]
90016f0c:	4601      	mov	r1, r0
90016f0e:	a802      	add	r0, sp, #8
90016f10:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90016f12:	4798      	blx	r3
90016f14:	2220      	movs	r2, #32
90016f16:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
90016f1a:	6b61      	ldr	r1, [r4, #52]	; 0x34
90016f1c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90016f1e:	f8d4 b000 	ldr.w	fp, [r4]
90016f22:	fb9a f0f2 	sdiv	r0, sl, r2
90016f26:	fb91 f5f2 	sdiv	r5, r1, r2
90016f2a:	fb93 f6f2 	sdiv	r6, r3, r2
90016f2e:	1b40      	subs	r0, r0, r5
90016f30:	0076      	lsls	r6, r6, #1
90016f32:	2800      	cmp	r0, #0
90016f34:	bfb8      	it	lt
90016f36:	4240      	neglt	r0, r0
90016f38:	4286      	cmp	r6, r0
90016f3a:	dc0c      	bgt.n	90016f56 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
90016f3c:	6b25      	ldr	r5, [r4, #48]	; 0x30
90016f3e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90016f42:	fb95 f0f2 	sdiv	r0, r5, r2
90016f46:	fb98 f7f2 	sdiv	r7, r8, r2
90016f4a:	1bc0      	subs	r0, r0, r7
90016f4c:	2800      	cmp	r0, #0
90016f4e:	bfb8      	it	lt
90016f50:	4240      	neglt	r0, r0
90016f52:	4286      	cmp	r6, r0
90016f54:	dd07      	ble.n	90016f66 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
90016f56:	f8db 3010 	ldr.w	r3, [fp, #16]
90016f5a:	a902      	add	r1, sp, #8
90016f5c:	4620      	mov	r0, r4
90016f5e:	4798      	blx	r3
90016f60:	b009      	add	sp, #36	; 0x24
90016f62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016f66:	eb01 060a 	add.w	r6, r1, sl
90016f6a:	2002      	movs	r0, #2
90016f6c:	eb08 0705 	add.w	r7, r8, r5
90016f70:	3301      	adds	r3, #1
90016f72:	f10d 0920 	add.w	r9, sp, #32
90016f76:	9101      	str	r1, [sp, #4]
90016f78:	eb03 0343 	add.w	r3, r3, r3, lsl #1
90016f7c:	fb96 f6f0 	sdiv	r6, r6, r0
90016f80:	fb97 f7f0 	sdiv	r7, r7, r0
90016f84:	4103      	asrs	r3, r0
90016f86:	b236      	sxth	r6, r6
90016f88:	b23f      	sxth	r7, r7
90016f8a:	f849 3d08 	str.w	r3, [r9, #-8]!
90016f8e:	4648      	mov	r0, r9
90016f90:	fb96 f6f2 	sdiv	r6, r6, r2
90016f94:	fb97 f7f2 	sdiv	r7, r7, r2
90016f98:	f7ff ffa7 	bl	90016eea <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90016f9c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90016fa0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
90016fa4:	fa1f fe87 	uxth.w	lr, r7
90016fa8:	9901      	ldr	r1, [sp, #4]
90016faa:	fa1f fc86 	uxth.w	ip, r6
90016fae:	4293      	cmp	r3, r2
90016fb0:	b280      	uxth	r0, r0
90016fb2:	eba1 0a0a 	sub.w	sl, r1, sl
90016fb6:	da54      	bge.n	90017062 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
90016fb8:	ebac 0100 	sub.w	r1, ip, r0
90016fbc:	f1ba 0f00 	cmp.w	sl, #0
90016fc0:	4460      	add	r0, ip
90016fc2:	f9bd a008 	ldrsh.w	sl, [sp, #8]
90016fc6:	b289      	uxth	r1, r1
90016fc8:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
90016fcc:	b280      	uxth	r0, r0
90016fce:	b20e      	sxth	r6, r1
90016fd0:	da29      	bge.n	90017026 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
90016fd2:	eba8 0505 	sub.w	r5, r8, r5
90016fd6:	2d00      	cmp	r5, #0
90016fd8:	da2a      	bge.n	90017030 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
90016fda:	fa1f f88a 	uxth.w	r8, sl
90016fde:	f8ad a010 	strh.w	sl, [sp, #16]
90016fe2:	fa1f f58c 	uxth.w	r5, ip
90016fe6:	f8ad c012 	strh.w	ip, [sp, #18]
90016fea:	eba0 0008 	sub.w	r0, r0, r8
90016fee:	4443      	add	r3, r8
90016ff0:	f8ad 6018 	strh.w	r6, [sp, #24]
90016ff4:	f8ad 0014 	strh.w	r0, [sp, #20]
90016ff8:	1a59      	subs	r1, r3, r1
90016ffa:	ebae 0005 	sub.w	r0, lr, r5
90016ffe:	f8ad 701a 	strh.w	r7, [sp, #26]
90017002:	f8ad 101c 	strh.w	r1, [sp, #28]
90017006:	f8ad 0016 	strh.w	r0, [sp, #22]
9001700a:	442a      	add	r2, r5
9001700c:	eba2 0e0e 	sub.w	lr, r2, lr
90017010:	f8ad e01e 	strh.w	lr, [sp, #30]
90017014:	f8db 3010 	ldr.w	r3, [fp, #16]
90017018:	a904      	add	r1, sp, #16
9001701a:	4620      	mov	r0, r4
9001701c:	4798      	blx	r3
9001701e:	6823      	ldr	r3, [r4, #0]
90017020:	4649      	mov	r1, r9
90017022:	691b      	ldr	r3, [r3, #16]
90017024:	e79a      	b.n	90016f5c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
90017026:	d003      	beq.n	90017030 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
90017028:	eba8 0505 	sub.w	r5, r8, r5
9001702c:	2d00      	cmp	r5, #0
9001702e:	dcd4      	bgt.n	90016fda <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
90017030:	fa1f f88a 	uxth.w	r8, sl
90017034:	f8ad 6010 	strh.w	r6, [sp, #16]
90017038:	fa1f f58c 	uxth.w	r5, ip
9001703c:	f8ad c012 	strh.w	ip, [sp, #18]
90017040:	4443      	add	r3, r8
90017042:	eba0 0008 	sub.w	r0, r0, r8
90017046:	f8ad a018 	strh.w	sl, [sp, #24]
9001704a:	1a59      	subs	r1, r3, r1
9001704c:	ebae 0305 	sub.w	r3, lr, r5
90017050:	f8ad 701a 	strh.w	r7, [sp, #26]
90017054:	f8ad 1014 	strh.w	r1, [sp, #20]
90017058:	f8ad 3016 	strh.w	r3, [sp, #22]
9001705c:	f8ad 001c 	strh.w	r0, [sp, #28]
90017060:	e7d3      	b.n	9001700a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
90017062:	ebae 0100 	sub.w	r1, lr, r0
90017066:	f1ba 0f00 	cmp.w	sl, #0
9001706a:	4470      	add	r0, lr
9001706c:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
90017070:	b289      	uxth	r1, r1
90017072:	f9bd e008 	ldrsh.w	lr, [sp, #8]
90017076:	b280      	uxth	r0, r0
90017078:	b20f      	sxth	r7, r1
9001707a:	da20      	bge.n	900170be <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
9001707c:	eba8 0505 	sub.w	r5, r8, r5
90017080:	2d00      	cmp	r5, #0
90017082:	da21      	bge.n	900170c8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90017084:	fa1f f88e 	uxth.w	r8, lr
90017088:	f8ad e010 	strh.w	lr, [sp, #16]
9001708c:	fa1f f58a 	uxth.w	r5, sl
90017090:	f8ad a012 	strh.w	sl, [sp, #18]
90017094:	4443      	add	r3, r8
90017096:	ebac 0e08 	sub.w	lr, ip, r8
9001709a:	442a      	add	r2, r5
9001709c:	1b40      	subs	r0, r0, r5
9001709e:	eba3 0c0c 	sub.w	ip, r3, ip
900170a2:	f8ad e014 	strh.w	lr, [sp, #20]
900170a6:	1a51      	subs	r1, r2, r1
900170a8:	f8ad 0016 	strh.w	r0, [sp, #22]
900170ac:	f8ad 6018 	strh.w	r6, [sp, #24]
900170b0:	f8ad 701a 	strh.w	r7, [sp, #26]
900170b4:	f8ad c01c 	strh.w	ip, [sp, #28]
900170b8:	f8ad 101e 	strh.w	r1, [sp, #30]
900170bc:	e7aa      	b.n	90017014 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
900170be:	d003      	beq.n	900170c8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
900170c0:	eba8 0505 	sub.w	r5, r8, r5
900170c4:	2d00      	cmp	r5, #0
900170c6:	dcdd      	bgt.n	90017084 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
900170c8:	fa1f f58e 	uxth.w	r5, lr
900170cc:	f8ad 7012 	strh.w	r7, [sp, #18]
900170d0:	fa1f f88a 	uxth.w	r8, sl
900170d4:	f8ad e010 	strh.w	lr, [sp, #16]
900170d8:	442b      	add	r3, r5
900170da:	ebac 0705 	sub.w	r7, ip, r5
900170de:	4442      	add	r2, r8
900170e0:	eba0 0008 	sub.w	r0, r0, r8
900170e4:	eba3 0c0c 	sub.w	ip, r3, ip
900170e8:	f8ad 7014 	strh.w	r7, [sp, #20]
900170ec:	1a51      	subs	r1, r2, r1
900170ee:	f8ad 6018 	strh.w	r6, [sp, #24]
900170f2:	f8ad a01a 	strh.w	sl, [sp, #26]
900170f6:	f8ad 1016 	strh.w	r1, [sp, #22]
900170fa:	f8ad c01c 	strh.w	ip, [sp, #28]
900170fe:	f8ad 001e 	strh.w	r0, [sp, #30]
90017102:	e787      	b.n	90017014 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

90017104 <_ZN8touchgfx7CWRUtil4sineEi>:
90017104:	f44f 73b4 	mov.w	r3, #360	; 0x168
90017108:	fb90 f2f3 	sdiv	r2, r0, r3
9001710c:	fb02 0013 	mls	r0, r2, r3, r0
90017110:	2800      	cmp	r0, #0
90017112:	bfb8      	it	lt
90017114:	18c0      	addlt	r0, r0, r3
90017116:	4b0a      	ldr	r3, [pc, #40]	; (90017140 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
90017118:	285a      	cmp	r0, #90	; 0x5a
9001711a:	dc02      	bgt.n	90017122 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
9001711c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90017120:	4770      	bx	lr
90017122:	28b4      	cmp	r0, #180	; 0xb4
90017124:	dc02      	bgt.n	9001712c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
90017126:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
9001712a:	e7f7      	b.n	9001711c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
9001712c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90017130:	bfd4      	ite	le
90017132:	38b4      	suble	r0, #180	; 0xb4
90017134:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
90017138:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9001713c:	4240      	negs	r0, r0
9001713e:	4770      	bx	lr
90017140:	90030670 	.word	0x90030670

90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
90017144:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
90017148:	fb90 f2f3 	sdiv	r2, r0, r3
9001714c:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001714e:	fb02 0013 	mls	r0, r2, r3, r0
90017152:	2800      	cmp	r0, #0
90017154:	bfb8      	it	lt
90017156:	18c0      	addlt	r0, r0, r3
90017158:	1144      	asrs	r4, r0, #5
9001715a:	f000 061f 	and.w	r6, r0, #31
9001715e:	4620      	mov	r0, r4
90017160:	f7ff ffd0 	bl	90017104 <_ZN8touchgfx7CWRUtil4sineEi>
90017164:	4605      	mov	r5, r0
90017166:	b90e      	cbnz	r6, 9001716c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
90017168:	b002      	add	sp, #8
9001716a:	bd70      	pop	{r4, r5, r6, pc}
9001716c:	1c60      	adds	r0, r4, #1
9001716e:	f7ff ffc9 	bl	90017104 <_ZN8touchgfx7CWRUtil4sineEi>
90017172:	ab01      	add	r3, sp, #4
90017174:	2220      	movs	r2, #32
90017176:	4631      	mov	r1, r6
90017178:	1b40      	subs	r0, r0, r5
9001717a:	f005 f87c 	bl	9001c276 <_ZN8touchgfx6muldivElllRl>
9001717e:	4428      	add	r0, r5
90017180:	e7f2      	b.n	90017168 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

90017182 <_ZN8touchgfx7CWRUtil5isqrtEm>:
90017182:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
90017186:	f04f 0300 	mov.w	r3, #0
9001718a:	bf2c      	ite	cs
9001718c:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
90017190:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
90017194:	1899      	adds	r1, r3, r2
90017196:	4288      	cmp	r0, r1
90017198:	bf24      	itt	cs
9001719a:	1853      	addcs	r3, r2, r1
9001719c:	1a40      	subcs	r0, r0, r1
9001719e:	0892      	lsrs	r2, r2, #2
900171a0:	ea4f 0353 	mov.w	r3, r3, lsr #1
900171a4:	d1f6      	bne.n	90017194 <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
900171a6:	4618      	mov	r0, r3
900171a8:	4770      	bx	lr

900171aa <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
900171aa:	b510      	push	{r4, lr}
900171ac:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
900171b0:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
900171b4:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
900171b8:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
900171bc:	139b      	asrs	r3, r3, #14
900171be:	13a4      	asrs	r4, r4, #14
900171c0:	429c      	cmp	r4, r3
900171c2:	bfb8      	it	lt
900171c4:	461c      	movlt	r4, r3
900171c6:	2c01      	cmp	r4, #1
900171c8:	dd07      	ble.n	900171da <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
900171ca:	fb91 f1f4 	sdiv	r1, r1, r4
900171ce:	fb90 f0f4 	sdiv	r0, r0, r4
900171d2:	f7ff ffea 	bl	900171aa <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
900171d6:	4360      	muls	r0, r4
900171d8:	bd10      	pop	{r4, pc}
900171da:	4340      	muls	r0, r0
900171dc:	fb01 0001 	mla	r0, r1, r1, r0
900171e0:	f7ff ffcf 	bl	90017182 <_ZN8touchgfx7CWRUtil5isqrtEm>
900171e4:	e7f8      	b.n	900171d8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>
	...

900171e8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
900171e8:	2800      	cmp	r0, #0
900171ea:	b508      	push	{r3, lr}
900171ec:	da05      	bge.n	900171fa <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
900171ee:	4240      	negs	r0, r0
900171f0:	f7ff fffa 	bl	900171e8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
900171f4:	4240      	negs	r0, r0
900171f6:	b240      	sxtb	r0, r0
900171f8:	bd08      	pop	{r3, pc}
900171fa:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
900171fe:	dc11      	bgt.n	90017224 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
90017200:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
90017204:	dd09      	ble.n	9001721a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
90017206:	4340      	muls	r0, r0
90017208:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
9001720c:	f7ff ffb9 	bl	90017182 <_ZN8touchgfx7CWRUtil5isqrtEm>
90017210:	f7ff ffea 	bl	900171e8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90017214:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
90017218:	e7ed      	b.n	900171f6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
9001721a:	3003      	adds	r0, #3
9001721c:	4b02      	ldr	r3, [pc, #8]	; (90017228 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
9001721e:	10c0      	asrs	r0, r0, #3
90017220:	5618      	ldrsb	r0, [r3, r0]
90017222:	e7e9      	b.n	900171f8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
90017224:	2000      	movs	r0, #0
90017226:	e7e7      	b.n	900171f8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
90017228:	90030614 	.word	0x90030614

9001722c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
9001722c:	4281      	cmp	r1, r0
9001722e:	b537      	push	{r0, r1, r2, r4, r5, lr}
90017230:	460c      	mov	r4, r1
90017232:	4615      	mov	r5, r2
90017234:	dd07      	ble.n	90017246 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
90017236:	4601      	mov	r1, r0
90017238:	4620      	mov	r0, r4
9001723a:	f7ff fff7 	bl	9001722c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
9001723e:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
90017242:	b003      	add	sp, #12
90017244:	bd30      	pop	{r4, r5, pc}
90017246:	f7ff ffb0 	bl	900171aa <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
9001724a:	6028      	str	r0, [r5, #0]
9001724c:	2800      	cmp	r0, #0
9001724e:	d0f8      	beq.n	90017242 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
90017250:	4602      	mov	r2, r0
90017252:	ab01      	add	r3, sp, #4
90017254:	f44f 6180 	mov.w	r1, #1024	; 0x400
90017258:	4620      	mov	r0, r4
9001725a:	f005 f80c 	bl	9001c276 <_ZN8touchgfx6muldivElllRl>
9001725e:	f7ff ffc3 	bl	900171e8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90017262:	e7ee      	b.n	90017242 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

90017264 <_ZN8touchgfx4LineC1Ev>:
90017264:	b510      	push	{r4, lr}
90017266:	4604      	mov	r4, r0
90017268:	f7ff fe08 	bl	90016e7c <_ZN8touchgfx12CanvasWidgetC1Ev>
9001726c:	4b0c      	ldr	r3, [pc, #48]	; (900172a0 <_ZN8touchgfx4LineC1Ev+0x3c>)
9001726e:	2220      	movs	r2, #32
90017270:	4620      	mov	r0, r4
90017272:	6023      	str	r3, [r4, #0]
90017274:	2300      	movs	r3, #0
90017276:	63e2      	str	r2, [r4, #60]	; 0x3c
90017278:	2212      	movs	r2, #18
9001727a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9001727e:	66e2      	str	r2, [r4, #108]	; 0x6c
90017280:	60a3      	str	r3, [r4, #8]
90017282:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
90017286:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
9001728a:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
9001728e:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
90017292:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
90017296:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
9001729a:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
9001729e:	bd10      	pop	{r4, pc}
900172a0:	90030730 	.word	0x90030730

900172a4 <_ZNK8touchgfx4Line18getLineEndingStyleEv>:
900172a4:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
900172a8:	4770      	bx	lr

900172aa <_ZN8touchgfx4Line17updateCachedShapeEv>:
900172aa:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
900172ae:	6b47      	ldr	r7, [r0, #52]	; 0x34
900172b0:	4604      	mov	r4, r0
900172b2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900172b4:	6b85      	ldr	r5, [r0, #56]	; 0x38
900172b6:	6b02      	ldr	r2, [r0, #48]	; 0x30
900172b8:	1aff      	subs	r7, r7, r3
900172ba:	eba5 0502 	sub.w	r5, r5, r2
900172be:	d142      	bne.n	90017346 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
900172c0:	b955      	cbnz	r5, 900172d8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
900172c2:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
900172c6:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
900172ca:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
900172ce:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
900172d2:	b002      	add	sp, #8
900172d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900172d8:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
900172dc:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
900172e0:	4629      	mov	r1, r5
900172e2:	2502      	movs	r5, #2
900172e4:	4642      	mov	r2, r8
900172e6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
900172e8:	f004 ffe4 	bl	9001c2b4 <_ZN8touchgfx6muldivElll>
900172ec:	4642      	mov	r2, r8
900172ee:	4639      	mov	r1, r7
900172f0:	fb90 f6f5 	sdiv	r6, r0, r5
900172f4:	6be0      	ldr	r0, [r4, #60]	; 0x3c
900172f6:	f004 ffdd 	bl	9001c2b4 <_ZN8touchgfx6muldivElll>
900172fa:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
900172fe:	fb90 f5f5 	sdiv	r5, r0, r5
90017302:	f1b9 0f00 	cmp.w	r9, #0
90017306:	d067      	beq.n	900173d8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
90017308:	f1b9 0f02 	cmp.w	r9, #2
9001730c:	d878      	bhi.n	90017400 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
9001730e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90017310:	6b60      	ldr	r0, [r4, #52]	; 0x34
90017312:	1b93      	subs	r3, r2, r6
90017314:	4432      	add	r2, r6
90017316:	1b5b      	subs	r3, r3, r5
90017318:	1b52      	subs	r2, r2, r5
9001731a:	6463      	str	r3, [r4, #68]	; 0x44
9001731c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9001731e:	6522      	str	r2, [r4, #80]	; 0x50
90017320:	18e9      	adds	r1, r5, r3
90017322:	1b5b      	subs	r3, r3, r5
90017324:	1b89      	subs	r1, r1, r6
90017326:	1b9b      	subs	r3, r3, r6
90017328:	6561      	str	r1, [r4, #84]	; 0x54
9001732a:	1b81      	subs	r1, r0, r6
9001732c:	4430      	add	r0, r6
9001732e:	4429      	add	r1, r5
90017330:	4428      	add	r0, r5
90017332:	64a1      	str	r1, [r4, #72]	; 0x48
90017334:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90017336:	64e0      	str	r0, [r4, #76]	; 0x4c
90017338:	186f      	adds	r7, r5, r1
9001733a:	1b49      	subs	r1, r1, r5
9001733c:	4437      	add	r7, r6
9001733e:	4431      	add	r1, r6
90017340:	65a7      	str	r7, [r4, #88]	; 0x58
90017342:	65e1      	str	r1, [r4, #92]	; 0x5c
90017344:	e05b      	b.n	900173fe <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
90017346:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
9001734a:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
9001734e:	2d00      	cmp	r5, #0
90017350:	d0c6      	beq.n	900172e0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90017352:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
90017356:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
9001735a:	fb93 f2f8 	sdiv	r2, r3, r8
9001735e:	fb08 3312 	mls	r3, r8, r2, r3
90017362:	b353      	cbz	r3, 900173ba <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
90017364:	fb98 f2f3 	sdiv	r2, r8, r3
90017368:	fb03 8812 	mls	r8, r3, r2, r8
9001736c:	f1b8 0f00 	cmp.w	r8, #0
90017370:	d1f3      	bne.n	9001735a <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
90017372:	2b01      	cmp	r3, #1
90017374:	f24b 5104 	movw	r1, #46340	; 0xb504
90017378:	bf1c      	itt	ne
9001737a:	fb97 f7f3 	sdivne	r7, r7, r3
9001737e:	fb95 f5f3 	sdivne	r5, r5, r3
90017382:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
90017386:	4608      	mov	r0, r1
90017388:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
9001738c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
90017390:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
90017394:	428b      	cmp	r3, r1
90017396:	dd01      	ble.n	9001739c <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
90017398:	428a      	cmp	r2, r1
9001739a:	dc10      	bgt.n	900173be <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
9001739c:	fb90 f3f3 	sdiv	r3, r0, r3
900173a0:	fb90 f2f2 	sdiv	r2, r0, r2
900173a4:	4293      	cmp	r3, r2
900173a6:	bfa8      	it	ge
900173a8:	4613      	movge	r3, r2
900173aa:	435f      	muls	r7, r3
900173ac:	435d      	muls	r5, r3
900173ae:	4629      	mov	r1, r5
900173b0:	4638      	mov	r0, r7
900173b2:	f7ff fefa 	bl	900171aa <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
900173b6:	4680      	mov	r8, r0
900173b8:	e792      	b.n	900172e0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
900173ba:	4643      	mov	r3, r8
900173bc:	e7d9      	b.n	90017372 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
900173be:	fb93 f3f1 	sdiv	r3, r3, r1
900173c2:	fb92 f2f1 	sdiv	r2, r2, r1
900173c6:	4293      	cmp	r3, r2
900173c8:	bfcc      	ite	gt
900173ca:	3301      	addgt	r3, #1
900173cc:	1c53      	addle	r3, r2, #1
900173ce:	fb97 f7f3 	sdiv	r7, r7, r3
900173d2:	fb95 f5f3 	sdiv	r5, r5, r3
900173d6:	e7ea      	b.n	900173ae <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
900173d8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900173da:	6b60      	ldr	r0, [r4, #52]	; 0x34
900173dc:	1b93      	subs	r3, r2, r6
900173de:	4432      	add	r2, r6
900173e0:	6463      	str	r3, [r4, #68]	; 0x44
900173e2:	6b23      	ldr	r3, [r4, #48]	; 0x30
900173e4:	6522      	str	r2, [r4, #80]	; 0x50
900173e6:	18e9      	adds	r1, r5, r3
900173e8:	1b5b      	subs	r3, r3, r5
900173ea:	6561      	str	r1, [r4, #84]	; 0x54
900173ec:	1b81      	subs	r1, r0, r6
900173ee:	4430      	add	r0, r6
900173f0:	64a1      	str	r1, [r4, #72]	; 0x48
900173f2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
900173f4:	64e0      	str	r0, [r4, #76]	; 0x4c
900173f6:	186f      	adds	r7, r5, r1
900173f8:	1b49      	subs	r1, r1, r5
900173fa:	65a7      	str	r7, [r4, #88]	; 0x58
900173fc:	65e1      	str	r1, [r4, #92]	; 0x5c
900173fe:	6623      	str	r3, [r4, #96]	; 0x60
90017400:	6c62      	ldr	r2, [r4, #68]	; 0x44
90017402:	f104 0148 	add.w	r1, r4, #72	; 0x48
90017406:	6d63      	ldr	r3, [r4, #84]	; 0x54
90017408:	f104 0c54 	add.w	ip, r4, #84	; 0x54
9001740c:	9200      	str	r2, [sp, #0]
9001740e:	9301      	str	r3, [sp, #4]
90017410:	680f      	ldr	r7, [r1, #0]
90017412:	3104      	adds	r1, #4
90017414:	9800      	ldr	r0, [sp, #0]
90017416:	42ba      	cmp	r2, r7
90017418:	bfa8      	it	ge
9001741a:	463a      	movge	r2, r7
9001741c:	4287      	cmp	r7, r0
9001741e:	9801      	ldr	r0, [sp, #4]
90017420:	bfc8      	it	gt
90017422:	9700      	strgt	r7, [sp, #0]
90017424:	68cf      	ldr	r7, [r1, #12]
90017426:	42bb      	cmp	r3, r7
90017428:	bfa8      	it	ge
9001742a:	463b      	movge	r3, r7
9001742c:	4287      	cmp	r7, r0
9001742e:	bfc8      	it	gt
90017430:	9701      	strgt	r7, [sp, #4]
90017432:	458c      	cmp	ip, r1
90017434:	d1ec      	bne.n	90017410 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
90017436:	2720      	movs	r7, #32
90017438:	4668      	mov	r0, sp
9001743a:	fb92 f8f7 	sdiv	r8, r2, r7
9001743e:	fb93 f7f7 	sdiv	r7, r3, r7
90017442:	f7ff fd52 	bl	90016eea <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90017446:	4682      	mov	sl, r0
90017448:	a801      	add	r0, sp, #4
9001744a:	f7ff fd4e 	bl	90016eea <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
9001744e:	ebaa 0208 	sub.w	r2, sl, r8
90017452:	1bc0      	subs	r0, r0, r7
90017454:	f1b9 0f01 	cmp.w	r9, #1
90017458:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
9001745c:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
90017460:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
90017464:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
90017468:	f47f af33 	bne.w	900172d2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
9001746c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9001746e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90017470:	1b83      	subs	r3, r0, r6
90017472:	6463      	str	r3, [r4, #68]	; 0x44
90017474:	6b23      	ldr	r3, [r4, #48]	; 0x30
90017476:	18ea      	adds	r2, r5, r3
90017478:	6562      	str	r2, [r4, #84]	; 0x54
9001747a:	1b8a      	subs	r2, r1, r6
9001747c:	4431      	add	r1, r6
9001747e:	4406      	add	r6, r0
90017480:	64a2      	str	r2, [r4, #72]	; 0x48
90017482:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90017484:	64e1      	str	r1, [r4, #76]	; 0x4c
90017486:	18af      	adds	r7, r5, r2
90017488:	1b52      	subs	r2, r2, r5
9001748a:	1b5d      	subs	r5, r3, r5
9001748c:	6526      	str	r6, [r4, #80]	; 0x50
9001748e:	65a7      	str	r7, [r4, #88]	; 0x58
90017490:	65e2      	str	r2, [r4, #92]	; 0x5c
90017492:	6625      	str	r5, [r4, #96]	; 0x60
90017494:	e71d      	b.n	900172d2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

90017496 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
90017496:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90017498:	428b      	cmp	r3, r1
9001749a:	d102      	bne.n	900174a2 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
9001749c:	6b03      	ldr	r3, [r0, #48]	; 0x30
9001749e:	4293      	cmp	r3, r2
900174a0:	d003      	beq.n	900174aa <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
900174a2:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
900174a6:	f7ff bf00 	b.w	900172aa <_ZN8touchgfx4Line17updateCachedShapeEv>
900174aa:	4770      	bx	lr

900174ac <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_>:
900174ac:	b570      	push	{r4, r5, r6, lr}
900174ae:	6b43      	ldr	r3, [r0, #52]	; 0x34
900174b0:	4604      	mov	r4, r0
900174b2:	460e      	mov	r6, r1
900174b4:	4615      	mov	r5, r2
900174b6:	428b      	cmp	r3, r1
900174b8:	d102      	bne.n	900174c0 <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_+0x14>
900174ba:	6b83      	ldr	r3, [r0, #56]	; 0x38
900174bc:	4293      	cmp	r3, r2
900174be:	d00e      	beq.n	900174de <_ZN8touchgfx4Line9updateEndENS_7CWRUtil2Q5ES2_+0x32>
900174c0:	6823      	ldr	r3, [r4, #0]
900174c2:	4620      	mov	r0, r4
900174c4:	699b      	ldr	r3, [r3, #24]
900174c6:	4798      	blx	r3
900174c8:	4620      	mov	r0, r4
900174ca:	e9c4 650d 	strd	r6, r5, [r4, #52]	; 0x34
900174ce:	f7ff feec 	bl	900172aa <_ZN8touchgfx4Line17updateCachedShapeEv>
900174d2:	6823      	ldr	r3, [r4, #0]
900174d4:	4620      	mov	r0, r4
900174d6:	699b      	ldr	r3, [r3, #24]
900174d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900174dc:	4718      	bx	r3
900174de:	bd70      	pop	{r4, r5, r6, pc}

900174e0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
900174e0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
900174e4:	f7ff bee1 	b.w	900172aa <_ZN8touchgfx4Line17updateCachedShapeEv>

900174e8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
900174e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900174ec:	b0a0      	sub	sp, #128	; 0x80
900174ee:	4604      	mov	r4, r0
900174f0:	460a      	mov	r2, r1
900174f2:	4601      	mov	r1, r0
900174f4:	a804      	add	r0, sp, #16
900174f6:	f012 f9b3 	bl	90029860 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
900174fa:	2300      	movs	r3, #0
900174fc:	9301      	str	r3, [sp, #4]
900174fe:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
90017502:	2b01      	cmp	r3, #1
90017504:	d17c      	bne.n	90017600 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
90017506:	6c60      	ldr	r0, [r4, #68]	; 0x44
90017508:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001750a:	6d61      	ldr	r1, [r4, #84]	; 0x54
9001750c:	6b22      	ldr	r2, [r4, #48]	; 0x30
9001750e:	1ac0      	subs	r0, r0, r3
90017510:	eba1 0102 	sub.w	r1, r1, r2
90017514:	d437      	bmi.n	90017586 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
90017516:	2900      	cmp	r1, #0
90017518:	aa01      	add	r2, sp, #4
9001751a:	db2e      	blt.n	9001757a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
9001751c:	f7ff fe86 	bl	9001722c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90017520:	f100 065a 	add.w	r6, r0, #90	; 0x5a
90017524:	6d62      	ldr	r2, [r4, #84]	; 0x54
90017526:	a804      	add	r0, sp, #16
90017528:	6c61      	ldr	r1, [r4, #68]	; 0x44
9001752a:	f012 fb13 	bl	90029b54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001752e:	6da2      	ldr	r2, [r4, #88]	; 0x58
90017530:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90017532:	a804      	add	r0, sp, #16
90017534:	f012 fb5b 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90017538:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9001753a:	2db3      	cmp	r5, #179	; 0xb3
9001753c:	dc33      	bgt.n	900175a6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
9001753e:	eba6 0805 	sub.w	r8, r6, r5
90017542:	4640      	mov	r0, r8
90017544:	f7ff fdde 	bl	90017104 <_ZN8touchgfx7CWRUtil4sineEi>
90017548:	a902      	add	r1, sp, #8
9001754a:	9002      	str	r0, [sp, #8]
9001754c:	a801      	add	r0, sp, #4
9001754e:	f7ff fcc1 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90017552:	6b61      	ldr	r1, [r4, #52]	; 0x34
90017554:	1847      	adds	r7, r0, r1
90017556:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
9001755a:	f7ff fdd3 	bl	90017104 <_ZN8touchgfx7CWRUtil4sineEi>
9001755e:	a903      	add	r1, sp, #12
90017560:	9003      	str	r0, [sp, #12]
90017562:	a801      	add	r0, sp, #4
90017564:	f7ff fcb6 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90017568:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9001756a:	4639      	mov	r1, r7
9001756c:	1a12      	subs	r2, r2, r0
9001756e:	a804      	add	r0, sp, #16
90017570:	f012 fb3d 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90017574:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
90017576:	441d      	add	r5, r3
90017578:	e7df      	b.n	9001753a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
9001757a:	4249      	negs	r1, r1
9001757c:	f7ff fe56 	bl	9001722c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90017580:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
90017584:	e7ce      	b.n	90017524 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90017586:	2900      	cmp	r1, #0
90017588:	f1c0 0000 	rsb	r0, r0, #0
9001758c:	aa01      	add	r2, sp, #4
9001758e:	db04      	blt.n	9001759a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
90017590:	f7ff fe4c 	bl	9001722c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90017594:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
90017598:	e7c4      	b.n	90017524 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
9001759a:	4249      	negs	r1, r1
9001759c:	f7ff fe46 	bl	9001722c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900175a0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
900175a4:	e7be      	b.n	90017524 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
900175a6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
900175a8:	a804      	add	r0, sp, #16
900175aa:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
900175ac:	f012 fb1f 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900175b0:	6e22      	ldr	r2, [r4, #96]	; 0x60
900175b2:	6d21      	ldr	r1, [r4, #80]	; 0x50
900175b4:	a804      	add	r0, sp, #16
900175b6:	f012 fb1a 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900175ba:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
900175bc:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
900175c0:	2d00      	cmp	r5, #0
900175c2:	dd31      	ble.n	90017628 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
900175c4:	eb05 0806 	add.w	r8, r5, r6
900175c8:	4640      	mov	r0, r8
900175ca:	f7ff fd9b 	bl	90017104 <_ZN8touchgfx7CWRUtil4sineEi>
900175ce:	a902      	add	r1, sp, #8
900175d0:	9002      	str	r0, [sp, #8]
900175d2:	a801      	add	r0, sp, #4
900175d4:	f7ff fc7e 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900175d8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900175da:	1847      	adds	r7, r0, r1
900175dc:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
900175e0:	f7ff fd90 	bl	90017104 <_ZN8touchgfx7CWRUtil4sineEi>
900175e4:	a903      	add	r1, sp, #12
900175e6:	9003      	str	r0, [sp, #12]
900175e8:	a801      	add	r0, sp, #4
900175ea:	f7ff fc73 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900175ee:	6b22      	ldr	r2, [r4, #48]	; 0x30
900175f0:	4639      	mov	r1, r7
900175f2:	1a12      	subs	r2, r2, r0
900175f4:	a804      	add	r0, sp, #16
900175f6:	f012 fafa 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900175fa:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
900175fc:	1aed      	subs	r5, r5, r3
900175fe:	e7df      	b.n	900175c0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
90017600:	6d62      	ldr	r2, [r4, #84]	; 0x54
90017602:	a804      	add	r0, sp, #16
90017604:	6c61      	ldr	r1, [r4, #68]	; 0x44
90017606:	f012 faa5 	bl	90029b54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001760a:	6da2      	ldr	r2, [r4, #88]	; 0x58
9001760c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9001760e:	a804      	add	r0, sp, #16
90017610:	f012 faed 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90017614:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90017616:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
90017618:	a804      	add	r0, sp, #16
9001761a:	f012 fae8 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001761e:	6e22      	ldr	r2, [r4, #96]	; 0x60
90017620:	6d21      	ldr	r1, [r4, #80]	; 0x50
90017622:	a804      	add	r0, sp, #16
90017624:	f012 fae3 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90017628:	21ff      	movs	r1, #255	; 0xff
9001762a:	a804      	add	r0, sp, #16
9001762c:	f012 f9d4 	bl	900299d8 <_ZN8touchgfx6Canvas6renderEh>
90017630:	4b04      	ldr	r3, [pc, #16]	; (90017644 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
90017632:	4604      	mov	r4, r0
90017634:	a80c      	add	r0, sp, #48	; 0x30
90017636:	9304      	str	r3, [sp, #16]
90017638:	f001 f85a 	bl	900186f0 <_ZN8touchgfx7OutlineD1Ev>
9001763c:	4620      	mov	r0, r4
9001763e:	b020      	add	sp, #128	; 0x80
90017640:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017644:	90030f04 	.word	0x90030f04

90017648 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
90017648:	b508      	push	{r3, lr}
9001764a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9001764e:	b10b      	cbz	r3, 90017654 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
90017650:	f7eb f9ca 	bl	900029e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90017654:	bd08      	pop	{r3, pc}

90017656 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
90017656:	6803      	ldr	r3, [r0, #0]
90017658:	f64f 71fe 	movw	r1, #65534	; 0xfffe
9001765c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
9001765e:	4718      	bx	r3

90017660 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
90017660:	4770      	bx	lr

90017662 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
90017662:	b510      	push	{r4, lr}
90017664:	4604      	mov	r4, r0
90017666:	212c      	movs	r1, #44	; 0x2c
90017668:	f013 fed5 	bl	9002b416 <_ZdlPvj>
9001766c:	4620      	mov	r0, r4
9001766e:	bd10      	pop	{r4, pc}

90017670 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
90017670:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90017674:	2bff      	cmp	r3, #255	; 0xff
90017676:	b510      	push	{r4, lr}
90017678:	d104      	bne.n	90017684 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
9001767a:	8cca      	ldrh	r2, [r1, #38]	; 0x26
9001767c:	f64f 73ff 	movw	r3, #65535	; 0xffff
90017680:	429a      	cmp	r2, r3
90017682:	d105      	bne.n	90017690 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
90017684:	2300      	movs	r3, #0
90017686:	8003      	strh	r3, [r0, #0]
90017688:	8043      	strh	r3, [r0, #2]
9001768a:	8083      	strh	r3, [r0, #4]
9001768c:	80c3      	strh	r3, [r0, #6]
9001768e:	bd10      	pop	{r4, pc}
90017690:	2300      	movs	r3, #0
90017692:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
90017696:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
9001769a:	8003      	strh	r3, [r0, #0]
9001769c:	8043      	strh	r3, [r0, #2]
9001769e:	8084      	strh	r4, [r0, #4]
900176a0:	80c2      	strh	r2, [r0, #6]
900176a2:	e7f4      	b.n	9001768e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

900176a4 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
900176a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900176a8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900176ac:	b087      	sub	sp, #28
900176ae:	4604      	mov	r4, r0
900176b0:	4689      	mov	r9, r1
900176b2:	b363      	cbz	r3, 9001770e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
900176b4:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
900176b6:	f64f 73ff 	movw	r3, #65535	; 0xffff
900176ba:	429a      	cmp	r2, r3
900176bc:	d027      	beq.n	9001770e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
900176be:	ad06      	add	r5, sp, #24
900176c0:	2700      	movs	r7, #0
900176c2:	f825 2d0c 	strh.w	r2, [r5, #-12]!
900176c6:	4628      	mov	r0, r5
900176c8:	f006 fa02 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900176cc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900176d0:	a904      	add	r1, sp, #16
900176d2:	f8ad 0014 	strh.w	r0, [sp, #20]
900176d6:	f8ad 3016 	strh.w	r3, [sp, #22]
900176da:	4620      	mov	r0, r4
900176dc:	6823      	ldr	r3, [r4, #0]
900176de:	9704      	str	r7, [sp, #16]
900176e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900176e2:	4798      	blx	r3
900176e4:	f7fe fca2 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
900176e8:	6803      	ldr	r3, [r0, #0]
900176ea:	4606      	mov	r6, r0
900176ec:	4628      	mov	r0, r5
900176ee:	f8d3 800c 	ldr.w	r8, [r3, #12]
900176f2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
900176f4:	f8ad 300c 	strh.w	r3, [sp, #12]
900176f8:	f006 fad6 	bl	9001dca8 <_ZNK8touchgfx6Bitmap7getDataEv>
900176fc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90017700:	4601      	mov	r1, r0
90017702:	9701      	str	r7, [sp, #4]
90017704:	aa04      	add	r2, sp, #16
90017706:	9300      	str	r3, [sp, #0]
90017708:	4630      	mov	r0, r6
9001770a:	464b      	mov	r3, r9
9001770c:	47c0      	blx	r8
9001770e:	b007      	add	sp, #28
90017710:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

90017714 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
90017714:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90017716:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001771a:	460d      	mov	r5, r1
9001771c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90017720:	2100      	movs	r1, #0
90017722:	f8ad 3006 	strh.w	r3, [sp, #6]
90017726:	4604      	mov	r4, r0
90017728:	6803      	ldr	r3, [r0, #0]
9001772a:	f8ad 2004 	strh.w	r2, [sp, #4]
9001772e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90017730:	9100      	str	r1, [sp, #0]
90017732:	4669      	mov	r1, sp
90017734:	4798      	blx	r3
90017736:	4621      	mov	r1, r4
90017738:	a802      	add	r0, sp, #8
9001773a:	f004 fc6d 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001773e:	f7fe fc75 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
90017742:	6803      	ldr	r3, [r0, #0]
90017744:	aa02      	add	r2, sp, #8
90017746:	4669      	mov	r1, sp
90017748:	695e      	ldr	r6, [r3, #20]
9001774a:	462b      	mov	r3, r5
9001774c:	47b0      	blx	r6
9001774e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90017752:	2800      	cmp	r0, #0
90017754:	bf08      	it	eq
90017756:	461d      	moveq	r5, r3
90017758:	84e5      	strh	r5, [r4, #38]	; 0x26
9001775a:	b004      	add	sp, #16
9001775c:	bd70      	pop	{r4, r5, r6, pc}
	...

90017760 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
90017760:	2200      	movs	r2, #0
90017762:	8082      	strh	r2, [r0, #4]
90017764:	80c2      	strh	r2, [r0, #6]
90017766:	8102      	strh	r2, [r0, #8]
90017768:	8142      	strh	r2, [r0, #10]
9001776a:	8182      	strh	r2, [r0, #12]
9001776c:	81c2      	strh	r2, [r0, #14]
9001776e:	8202      	strh	r2, [r0, #16]
90017770:	8242      	strh	r2, [r0, #18]
90017772:	61c2      	str	r2, [r0, #28]
90017774:	8402      	strh	r2, [r0, #32]
90017776:	8442      	strh	r2, [r0, #34]	; 0x22
90017778:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
9001777c:	e9c0 2205 	strd	r2, r2, [r0, #20]
90017780:	2201      	movs	r2, #1
90017782:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
90017786:	4a04      	ldr	r2, [pc, #16]	; (90017798 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
90017788:	6002      	str	r2, [r0, #0]
9001778a:	f64f 72ff 	movw	r2, #65535	; 0xffff
9001778e:	84c2      	strh	r2, [r0, #38]	; 0x26
90017790:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
90017794:	4770      	bx	lr
90017796:	bf00      	nop
90017798:	900307a8 	.word	0x900307a8

9001779c <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
9001779c:	2000      	movs	r0, #0
9001779e:	4770      	bx	lr

900177a0 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
900177a0:	4b07      	ldr	r3, [pc, #28]	; (900177c0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
900177a2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900177a4:	881b      	ldrh	r3, [r3, #0]
900177a6:	4293      	cmp	r3, r2
900177a8:	bf81      	itttt	hi
900177aa:	4b06      	ldrhi	r3, [pc, #24]	; (900177c4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
900177ac:	681b      	ldrhi	r3, [r3, #0]
900177ae:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
900177b2:	7858      	ldrbhi	r0, [r3, #1]
900177b4:	bf8c      	ite	hi
900177b6:	f000 0003 	andhi.w	r0, r0, #3
900177ba:	2000      	movls	r0, #0
900177bc:	4770      	bx	lr
900177be:	bf00      	nop
900177c0:	24028e88 	.word	0x24028e88
900177c4:	24028e84 	.word	0x24028e84

900177c8 <_ZN8touchgfx8TextAreaD1Ev>:
900177c8:	4770      	bx	lr
	...

900177cc <_ZNK8touchgfx8TextArea13getTextHeightEv>:
900177cc:	4b11      	ldr	r3, [pc, #68]	; (90017814 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
900177ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900177d2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
900177d4:	4604      	mov	r4, r0
900177d6:	881b      	ldrh	r3, [r3, #0]
900177d8:	428b      	cmp	r3, r1
900177da:	d918      	bls.n	9001780e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
900177dc:	6803      	ldr	r3, [r0, #0]
900177de:	6f9d      	ldr	r5, [r3, #120]	; 0x78
900177e0:	4b0d      	ldr	r3, [pc, #52]	; (90017818 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
900177e2:	6818      	ldr	r0, [r3, #0]
900177e4:	f7f1 f914 	bl	90008a10 <_ZNK8touchgfx5Texts7getTextEt>
900177e8:	6823      	ldr	r3, [r4, #0]
900177ea:	4606      	mov	r6, r0
900177ec:	4620      	mov	r0, r4
900177ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900177f0:	4798      	blx	r3
900177f2:	6823      	ldr	r3, [r4, #0]
900177f4:	4607      	mov	r7, r0
900177f6:	4620      	mov	r0, r4
900177f8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900177fc:	4798      	blx	r3
900177fe:	463a      	mov	r2, r7
90017800:	4603      	mov	r3, r0
90017802:	4631      	mov	r1, r6
90017804:	4620      	mov	r0, r4
90017806:	46ac      	mov	ip, r5
90017808:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9001780c:	4760      	bx	ip
9001780e:	2000      	movs	r0, #0
90017810:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017814:	24028e88 	.word	0x24028e88
90017818:	24028e90 	.word	0x24028e90

9001781c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
9001781c:	4b18      	ldr	r3, [pc, #96]	; (90017880 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
9001781e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90017822:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90017824:	4604      	mov	r4, r0
90017826:	881b      	ldrh	r3, [r3, #0]
90017828:	428b      	cmp	r3, r1
9001782a:	d926      	bls.n	9001787a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
9001782c:	4b15      	ldr	r3, [pc, #84]	; (90017884 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
9001782e:	681b      	ldr	r3, [r3, #0]
90017830:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90017834:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90017838:	4b13      	ldr	r3, [pc, #76]	; (90017888 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9001783a:	7855      	ldrb	r5, [r2, #1]
9001783c:	681b      	ldr	r3, [r3, #0]
9001783e:	f3c5 0581 	ubfx	r5, r5, #2, #2
90017842:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90017846:	6833      	ldr	r3, [r6, #0]
90017848:	69df      	ldr	r7, [r3, #28]
9001784a:	4b10      	ldr	r3, [pc, #64]	; (9001788c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
9001784c:	6818      	ldr	r0, [r3, #0]
9001784e:	f7f1 f8df 	bl	90008a10 <_ZNK8touchgfx5Texts7getTextEt>
90017852:	6823      	ldr	r3, [r4, #0]
90017854:	4680      	mov	r8, r0
90017856:	4620      	mov	r0, r4
90017858:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001785a:	4798      	blx	r3
9001785c:	6823      	ldr	r3, [r4, #0]
9001785e:	4681      	mov	r9, r0
90017860:	4620      	mov	r0, r4
90017862:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90017866:	4798      	blx	r3
90017868:	464b      	mov	r3, r9
9001786a:	9000      	str	r0, [sp, #0]
9001786c:	4642      	mov	r2, r8
9001786e:	4629      	mov	r1, r5
90017870:	4630      	mov	r0, r6
90017872:	47b8      	blx	r7
90017874:	b003      	add	sp, #12
90017876:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001787a:	2000      	movs	r0, #0
9001787c:	e7fa      	b.n	90017874 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
9001787e:	bf00      	nop
90017880:	24028e88 	.word	0x24028e88
90017884:	24028e84 	.word	0x24028e84
90017888:	24028e8c 	.word	0x24028e8c
9001788c:	24028e90 	.word	0x24028e90

90017890 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90017890:	b40e      	push	{r1, r2, r3}
90017892:	4b30      	ldr	r3, [pc, #192]	; (90017954 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90017894:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017898:	881a      	ldrh	r2, [r3, #0]
9001789a:	b09d      	sub	sp, #116	; 0x74
9001789c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
9001789e:	4604      	mov	r4, r0
900178a0:	429a      	cmp	r2, r3
900178a2:	d954      	bls.n	9001794e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
900178a4:	aa26      	add	r2, sp, #152	; 0x98
900178a6:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90017958 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
900178aa:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 9001795c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
900178ae:	9202      	str	r2, [sp, #8]
900178b0:	f8d9 2000 	ldr.w	r2, [r9]
900178b4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900178b8:	f8d8 3000 	ldr.w	r3, [r8]
900178bc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900178c0:	682b      	ldr	r3, [r5, #0]
900178c2:	4628      	mov	r0, r5
900178c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900178c6:	4798      	blx	r3
900178c8:	4606      	mov	r6, r0
900178ca:	b207      	sxth	r7, r0
900178cc:	a803      	add	r0, sp, #12
900178ce:	f005 f8ed 	bl	9001caac <_ZN8touchgfx12TextProviderC1Ev>
900178d2:	682b      	ldr	r3, [r5, #0]
900178d4:	4628      	mov	r0, r5
900178d6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900178d8:	4798      	blx	r3
900178da:	682b      	ldr	r3, [r5, #0]
900178dc:	4682      	mov	sl, r0
900178de:	4628      	mov	r0, r5
900178e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900178e2:	4798      	blx	r3
900178e4:	4653      	mov	r3, sl
900178e6:	9000      	str	r0, [sp, #0]
900178e8:	a803      	add	r0, sp, #12
900178ea:	9a02      	ldr	r2, [sp, #8]
900178ec:	9925      	ldr	r1, [sp, #148]	; 0x94
900178ee:	f005 f938 	bl	9001cb62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900178f2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
900178f4:	f8d9 3000 	ldr.w	r3, [r9]
900178f8:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
900178fc:	8925      	ldrh	r5, [r4, #8]
900178fe:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90017902:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90017906:	eba5 050c 	sub.w	r5, r5, ip
9001790a:	784a      	ldrb	r2, [r1, #1]
9001790c:	f8d8 3000 	ldr.w	r3, [r8]
90017910:	b22d      	sxth	r5, r5
90017912:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90017916:	f3c2 0281 	ubfx	r2, r2, #2, #2
9001791a:	9500      	str	r5, [sp, #0]
9001791c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90017920:	a803      	add	r0, sp, #12
90017922:	f002 fdbf 	bl	9001a4a4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90017926:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
9001792a:	b203      	sxth	r3, r0
9001792c:	18b9      	adds	r1, r7, r2
9001792e:	2900      	cmp	r1, #0
90017930:	dd0b      	ble.n	9001794a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90017932:	3b01      	subs	r3, #1
90017934:	fb13 f302 	smulbb	r3, r3, r2
90017938:	fb16 3300 	smlabb	r3, r6, r0, r3
9001793c:	b21f      	sxth	r7, r3
9001793e:	4638      	mov	r0, r7
90017940:	b01d      	add	sp, #116	; 0x74
90017942:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017946:	b003      	add	sp, #12
90017948:	4770      	bx	lr
9001794a:	2b00      	cmp	r3, #0
9001794c:	dcf7      	bgt.n	9001793e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9001794e:	2700      	movs	r7, #0
90017950:	e7f5      	b.n	9001793e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90017952:	bf00      	nop
90017954:	24028e88 	.word	0x24028e88
90017958:	24028e84 	.word	0x24028e84
9001795c:	24028e8c 	.word	0x24028e8c

90017960 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90017960:	4bbd      	ldr	r3, [pc, #756]	; (90017c58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90017962:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017966:	460c      	mov	r4, r1
90017968:	881b      	ldrh	r3, [r3, #0]
9001796a:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
9001796c:	b0a9      	sub	sp, #164	; 0xa4
9001796e:	4680      	mov	r8, r0
90017970:	428b      	cmp	r3, r1
90017972:	d809      	bhi.n	90017988 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90017974:	2300      	movs	r3, #0
90017976:	f04f 32ff 	mov.w	r2, #4294967295
9001797a:	6083      	str	r3, [r0, #8]
9001797c:	e9c0 3200 	strd	r3, r2, [r0]
90017980:	4640      	mov	r0, r8
90017982:	b029      	add	sp, #164	; 0xa4
90017984:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017988:	4eb4      	ldr	r6, [pc, #720]	; (90017c5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
9001798a:	6833      	ldr	r3, [r6, #0]
9001798c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90017990:	4bb3      	ldr	r3, [pc, #716]	; (90017c60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90017992:	681b      	ldr	r3, [r3, #0]
90017994:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90017998:	4bb2      	ldr	r3, [pc, #712]	; (90017c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
9001799a:	6818      	ldr	r0, [r3, #0]
9001799c:	f7f1 f838 	bl	90008a10 <_ZNK8touchgfx5Texts7getTextEt>
900179a0:	682b      	ldr	r3, [r5, #0]
900179a2:	4681      	mov	r9, r0
900179a4:	4628      	mov	r0, r5
900179a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900179a8:	4798      	blx	r3
900179aa:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
900179ac:	b203      	sxth	r3, r0
900179ae:	4682      	mov	sl, r0
900179b0:	4407      	add	r7, r0
900179b2:	a80f      	add	r0, sp, #60	; 0x3c
900179b4:	9304      	str	r3, [sp, #16]
900179b6:	b2bb      	uxth	r3, r7
900179b8:	9303      	str	r3, [sp, #12]
900179ba:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
900179be:	2b00      	cmp	r3, #0
900179c0:	f040 80a5 	bne.w	90017b0e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
900179c4:	f005 f872 	bl	9001caac <_ZN8touchgfx12TextProviderC1Ev>
900179c8:	682b      	ldr	r3, [r5, #0]
900179ca:	4628      	mov	r0, r5
900179cc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900179ce:	4798      	blx	r3
900179d0:	682b      	ldr	r3, [r5, #0]
900179d2:	4606      	mov	r6, r0
900179d4:	4628      	mov	r0, r5
900179d6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900179d8:	4798      	blx	r3
900179da:	6823      	ldr	r3, [r4, #0]
900179dc:	4607      	mov	r7, r0
900179de:	4620      	mov	r0, r4
900179e0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900179e2:	4798      	blx	r3
900179e4:	6823      	ldr	r3, [r4, #0]
900179e6:	4683      	mov	fp, r0
900179e8:	4620      	mov	r0, r4
900179ea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900179ee:	4798      	blx	r3
900179f0:	463b      	mov	r3, r7
900179f2:	4649      	mov	r1, r9
900179f4:	4632      	mov	r2, r6
900179f6:	2600      	movs	r6, #0
900179f8:	e9cd b000 	strd	fp, r0, [sp]
900179fc:	a80f      	add	r0, sp, #60	; 0x3c
900179fe:	4637      	mov	r7, r6
90017a00:	f005 f8c4 	bl	9001cb8c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90017a04:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90017a08:	f8df b250 	ldr.w	fp, [pc, #592]	; 90017c5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90017a0c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90017a10:	bf0c      	ite	eq
90017a12:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90017a16:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90017a1a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90017a1c:	4629      	mov	r1, r5
90017a1e:	f8db 3000 	ldr.w	r3, [fp]
90017a22:	a80f      	add	r0, sp, #60	; 0x3c
90017a24:	3701      	adds	r7, #1
90017a26:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90017a2a:	f647 72ff 	movw	r2, #32767	; 0x7fff
90017a2e:	b2bf      	uxth	r7, r7
90017a30:	785b      	ldrb	r3, [r3, #1]
90017a32:	f3c3 0381 	ubfx	r3, r3, #2, #2
90017a36:	f002 fa50 	bl	90019eda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90017a3a:	9b03      	ldr	r3, [sp, #12]
90017a3c:	4286      	cmp	r6, r0
90017a3e:	eba9 0903 	sub.w	r9, r9, r3
90017a42:	bfb8      	it	lt
90017a44:	4606      	movlt	r6, r0
90017a46:	a80f      	add	r0, sp, #60	; 0x3c
90017a48:	fa0f f989 	sxth.w	r9, r9
90017a4c:	b236      	sxth	r6, r6
90017a4e:	f005 f854 	bl	9001cafa <_ZN8touchgfx12TextProvider11endOfStringEv>
90017a52:	b918      	cbnz	r0, 90017a5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90017a54:	7a2b      	ldrb	r3, [r5, #8]
90017a56:	444b      	add	r3, r9
90017a58:	2b00      	cmp	r3, #0
90017a5a:	dcde      	bgt.n	90017a1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90017a5c:	9b03      	ldr	r3, [sp, #12]
90017a5e:	4620      	mov	r0, r4
90017a60:	9a04      	ldr	r2, [sp, #16]
90017a62:	fb13 f707 	smulbb	r7, r3, r7
90017a66:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90017a68:	f895 9009 	ldrb.w	r9, [r5, #9]
90017a6c:	1aff      	subs	r7, r7, r3
90017a6e:	b2bf      	uxth	r7, r7
90017a70:	b23b      	sxth	r3, r7
90017a72:	429a      	cmp	r2, r3
90017a74:	bfa8      	it	ge
90017a76:	4657      	movge	r7, sl
90017a78:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90017a7c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90017a80:	6823      	ldr	r3, [r4, #0]
90017a82:	444f      	add	r7, r9
90017a84:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90017a86:	bf08      	it	eq
90017a88:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90017a8c:	fa1f f987 	uxth.w	r9, r7
90017a90:	bf18      	it	ne
90017a92:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90017a96:	4798      	blx	r3
90017a98:	2801      	cmp	r0, #1
90017a9a:	fa0f f789 	sxth.w	r7, r9
90017a9e:	b2b3      	uxth	r3, r6
90017aa0:	f000 80e2 	beq.w	90017c68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90017aa4:	2802      	cmp	r0, #2
90017aa6:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
90017aaa:	f000 80e3 	beq.w	90017c74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90017aae:	7aea      	ldrb	r2, [r5, #11]
90017ab0:	b236      	sxth	r6, r6
90017ab2:	7b2d      	ldrb	r5, [r5, #12]
90017ab4:	1ab6      	subs	r6, r6, r2
90017ab6:	442a      	add	r2, r5
90017ab8:	fa1f fa86 	uxth.w	sl, r6
90017abc:	4413      	add	r3, r2
90017abe:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90017ac2:	fa0f fb8a 	sxth.w	fp, sl
90017ac6:	b29b      	uxth	r3, r3
90017ac8:	2a02      	cmp	r2, #2
90017aca:	b21e      	sxth	r6, r3
90017acc:	f000 80d6 	beq.w	90017c7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90017ad0:	2a03      	cmp	r2, #3
90017ad2:	f000 80de 	beq.w	90017c92 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90017ad6:	2a01      	cmp	r2, #1
90017ad8:	f040 80e6 	bne.w	90017ca8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90017adc:	8925      	ldrh	r5, [r4, #8]
90017ade:	4633      	mov	r3, r6
90017ae0:	463e      	mov	r6, r7
90017ae2:	eba5 0909 	sub.w	r9, r5, r9
90017ae6:	461f      	mov	r7, r3
90017ae8:	465d      	mov	r5, fp
90017aea:	fa0f fb89 	sxth.w	fp, r9
90017aee:	4b5d      	ldr	r3, [pc, #372]	; (90017c64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90017af0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90017af2:	6818      	ldr	r0, [r3, #0]
90017af4:	f7f0 ff8c 	bl	90008a10 <_ZNK8touchgfx5Texts7getTextEt>
90017af8:	f8a8 b000 	strh.w	fp, [r8]
90017afc:	f8a8 5002 	strh.w	r5, [r8, #2]
90017b00:	f8a8 6004 	strh.w	r6, [r8, #4]
90017b04:	f8a8 7006 	strh.w	r7, [r8, #6]
90017b08:	f8c8 0008 	str.w	r0, [r8, #8]
90017b0c:	e738      	b.n	90017980 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90017b0e:	f004 ffcd 	bl	9001caac <_ZN8touchgfx12TextProviderC1Ev>
90017b12:	682b      	ldr	r3, [r5, #0]
90017b14:	4628      	mov	r0, r5
90017b16:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017b18:	4798      	blx	r3
90017b1a:	682b      	ldr	r3, [r5, #0]
90017b1c:	4607      	mov	r7, r0
90017b1e:	4628      	mov	r0, r5
90017b20:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017b22:	4798      	blx	r3
90017b24:	6823      	ldr	r3, [r4, #0]
90017b26:	4683      	mov	fp, r0
90017b28:	4620      	mov	r0, r4
90017b2a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90017b2c:	4798      	blx	r3
90017b2e:	6822      	ldr	r2, [r4, #0]
90017b30:	9005      	str	r0, [sp, #20]
90017b32:	4620      	mov	r0, r4
90017b34:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90017b38:	4790      	blx	r2
90017b3a:	9b05      	ldr	r3, [sp, #20]
90017b3c:	463a      	mov	r2, r7
90017b3e:	4649      	mov	r1, r9
90017b40:	9001      	str	r0, [sp, #4]
90017b42:	a80f      	add	r0, sp, #60	; 0x3c
90017b44:	9300      	str	r3, [sp, #0]
90017b46:	465b      	mov	r3, fp
90017b48:	f005 f820 	bl	9001cb8c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90017b4c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90017b50:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90017b54:	af0f      	add	r7, sp, #60	; 0x3c
90017b56:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90017b5a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90017b5e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90017b60:	bf0a      	itet	eq
90017b62:	464a      	moveq	r2, r9
90017b64:	461a      	movne	r2, r3
90017b66:	4699      	moveq	r9, r3
90017b68:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90017b6c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90017b70:	1ad2      	subs	r2, r2, r3
90017b72:	6833      	ldr	r3, [r6, #0]
90017b74:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
90017b78:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90017b7c:	7859      	ldrb	r1, [r3, #1]
90017b7e:	2300      	movs	r3, #0
90017b80:	9707      	str	r7, [sp, #28]
90017b82:	f3c1 0181 	ubfx	r1, r1, #2, #2
90017b86:	f8ad 3018 	strh.w	r3, [sp, #24]
90017b8a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90017b8e:	f88d 1020 	strb.w	r1, [sp, #32]
90017b92:	9509      	str	r5, [sp, #36]	; 0x24
90017b94:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90017b98:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
90017b9c:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90017ba0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90017ba4:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90017ba8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90017bac:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90017bb0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90017bb4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90017bb8:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
90017bbc:	b350      	cbz	r0, 90017c14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90017bbe:	682b      	ldr	r3, [r5, #0]
90017bc0:	4628      	mov	r0, r5
90017bc2:	695b      	ldr	r3, [r3, #20]
90017bc4:	4798      	blx	r3
90017bc6:	4607      	mov	r7, r0
90017bc8:	b320      	cbz	r0, 90017c14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90017bca:	9809      	ldr	r0, [sp, #36]	; 0x24
90017bcc:	4639      	mov	r1, r7
90017bce:	6803      	ldr	r3, [r0, #0]
90017bd0:	68db      	ldr	r3, [r3, #12]
90017bd2:	4798      	blx	r3
90017bd4:	4606      	mov	r6, r0
90017bd6:	b1e8      	cbz	r0, 90017c14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90017bd8:	7b43      	ldrb	r3, [r0, #13]
90017bda:	7a82      	ldrb	r2, [r0, #10]
90017bdc:	005b      	lsls	r3, r3, #1
90017bde:	f403 7380 	and.w	r3, r3, #256	; 0x100
90017be2:	4313      	orrs	r3, r2
90017be4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90017be8:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
90017bec:	2b06      	cmp	r3, #6
90017bee:	d111      	bne.n	90017c14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90017bf0:	9809      	ldr	r0, [sp, #36]	; 0x24
90017bf2:	4632      	mov	r2, r6
90017bf4:	4639      	mov	r1, r7
90017bf6:	6803      	ldr	r3, [r0, #0]
90017bf8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017bfa:	4798      	blx	r3
90017bfc:	7b73      	ldrb	r3, [r6, #13]
90017bfe:	005b      	lsls	r3, r3, #1
90017c00:	f403 7280 	and.w	r2, r3, #256	; 0x100
90017c04:	7ab3      	ldrb	r3, [r6, #10]
90017c06:	4313      	orrs	r3, r2
90017c08:	4418      	add	r0, r3
90017c0a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90017c0e:	4418      	add	r0, r3
90017c10:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90017c14:	2600      	movs	r6, #0
90017c16:	4637      	mov	r7, r6
90017c18:	a806      	add	r0, sp, #24
90017c1a:	3701      	adds	r7, #1
90017c1c:	f002 fb3f 	bl	9001a29e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017c20:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
90017c24:	9b03      	ldr	r3, [sp, #12]
90017c26:	b2bf      	uxth	r7, r7
90017c28:	4286      	cmp	r6, r0
90017c2a:	eba9 0903 	sub.w	r9, r9, r3
90017c2e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90017c32:	bfb8      	it	lt
90017c34:	4606      	movlt	r6, r0
90017c36:	fa0f f989 	sxth.w	r9, r9
90017c3a:	b236      	sxth	r6, r6
90017c3c:	2b00      	cmp	r3, #0
90017c3e:	f43f af0d 	beq.w	90017a5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90017c42:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
90017c46:	2b00      	cmp	r3, #0
90017c48:	f47f af08 	bne.w	90017a5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90017c4c:	7a2b      	ldrb	r3, [r5, #8]
90017c4e:	444b      	add	r3, r9
90017c50:	2b00      	cmp	r3, #0
90017c52:	dce1      	bgt.n	90017c18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90017c54:	e702      	b.n	90017a5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90017c56:	bf00      	nop
90017c58:	24028e88 	.word	0x24028e88
90017c5c:	24028e84 	.word	0x24028e84
90017c60:	24028e8c 	.word	0x24028e8c
90017c64:	24028e90 	.word	0x24028e90
90017c68:	ebaa 0606 	sub.w	r6, sl, r6
90017c6c:	2002      	movs	r0, #2
90017c6e:	fb96 f6f0 	sdiv	r6, r6, r0
90017c72:	e71c      	b.n	90017aae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90017c74:	441e      	add	r6, r3
90017c76:	ebaa 0606 	sub.w	r6, sl, r6
90017c7a:	e718      	b.n	90017aae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90017c7c:	8925      	ldrh	r5, [r4, #8]
90017c7e:	1aed      	subs	r5, r5, r3
90017c80:	eba5 050a 	sub.w	r5, r5, sl
90017c84:	fa0f fb85 	sxth.w	fp, r5
90017c88:	8965      	ldrh	r5, [r4, #10]
90017c8a:	eba5 0509 	sub.w	r5, r5, r9
90017c8e:	b22d      	sxth	r5, r5
90017c90:	e72d      	b.n	90017aee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90017c92:	8965      	ldrh	r5, [r4, #10]
90017c94:	f04f 0b00 	mov.w	fp, #0
90017c98:	1aed      	subs	r5, r5, r3
90017c9a:	4633      	mov	r3, r6
90017c9c:	463e      	mov	r6, r7
90017c9e:	eba5 050a 	sub.w	r5, r5, sl
90017ca2:	461f      	mov	r7, r3
90017ca4:	b22d      	sxth	r5, r5
90017ca6:	e722      	b.n	90017aee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90017ca8:	2500      	movs	r5, #0
90017caa:	e720      	b.n	90017aee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90017cac <_ZN8touchgfx8TextAreaD0Ev>:
90017cac:	b510      	push	{r4, lr}
90017cae:	4604      	mov	r4, r0
90017cb0:	2148      	movs	r1, #72	; 0x48
90017cb2:	f013 fbb0 	bl	9002b416 <_ZdlPvj>
90017cb6:	4620      	mov	r0, r4
90017cb8:	bd10      	pop	{r4, pc}
	...

90017cbc <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90017cbc:	b513      	push	{r0, r1, r4, lr}
90017cbe:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90017cc2:	4604      	mov	r4, r0
90017cc4:	b1fb      	cbz	r3, 90017d06 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90017cc6:	4b16      	ldr	r3, [pc, #88]	; (90017d20 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90017cc8:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90017cca:	881b      	ldrh	r3, [r3, #0]
90017ccc:	428b      	cmp	r3, r1
90017cce:	d91a      	bls.n	90017d06 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90017cd0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90017cd4:	2b00      	cmp	r3, #0
90017cd6:	dd16      	ble.n	90017d06 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90017cd8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90017cdc:	2b00      	cmp	r3, #0
90017cde:	dd12      	ble.n	90017d06 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90017ce0:	4b10      	ldr	r3, [pc, #64]	; (90017d24 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90017ce2:	6818      	ldr	r0, [r3, #0]
90017ce4:	f7f0 fe94 	bl	90008a10 <_ZNK8touchgfx5Texts7getTextEt>
90017ce8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90017cec:	6822      	ldr	r2, [r4, #0]
90017cee:	2b00      	cmp	r3, #0
90017cf0:	db06      	blt.n	90017d00 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90017cf2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90017cf6:	2b00      	cmp	r3, #0
90017cf8:	db02      	blt.n	90017d00 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90017cfa:	6c63      	ldr	r3, [r4, #68]	; 0x44
90017cfc:	4298      	cmp	r0, r3
90017cfe:	d004      	beq.n	90017d0a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90017d00:	6953      	ldr	r3, [r2, #20]
90017d02:	4620      	mov	r0, r4
90017d04:	4798      	blx	r3
90017d06:	b002      	add	sp, #8
90017d08:	bd10      	pop	{r4, pc}
90017d0a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
90017d0e:	466b      	mov	r3, sp
90017d10:	6912      	ldr	r2, [r2, #16]
90017d12:	c903      	ldmia	r1, {r0, r1}
90017d14:	e883 0003 	stmia.w	r3, {r0, r1}
90017d18:	4619      	mov	r1, r3
90017d1a:	4620      	mov	r0, r4
90017d1c:	4790      	blx	r2
90017d1e:	e7f2      	b.n	90017d06 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90017d20:	24028e88 	.word	0x24028e88
90017d24:	24028e90 	.word	0x24028e90

90017d28 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90017d28:	4b45      	ldr	r3, [pc, #276]	; (90017e40 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90017d2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017d2e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90017d30:	b08e      	sub	sp, #56	; 0x38
90017d32:	881b      	ldrh	r3, [r3, #0]
90017d34:	4604      	mov	r4, r0
90017d36:	4293      	cmp	r3, r2
90017d38:	d97e      	bls.n	90017e38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90017d3a:	6808      	ldr	r0, [r1, #0]
90017d3c:	ab05      	add	r3, sp, #20
90017d3e:	6849      	ldr	r1, [r1, #4]
90017d40:	4d40      	ldr	r5, [pc, #256]	; (90017e44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90017d42:	c303      	stmia	r3!, {r0, r1}
90017d44:	4611      	mov	r1, r2
90017d46:	6828      	ldr	r0, [r5, #0]
90017d48:	f7f0 fe62 	bl	90008a10 <_ZNK8touchgfx5Texts7getTextEt>
90017d4c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90017d50:	2b00      	cmp	r3, #0
90017d52:	db11      	blt.n	90017d78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90017d54:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90017d58:	2b00      	cmp	r3, #0
90017d5a:	db0d      	blt.n	90017d78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90017d5c:	6c63      	ldr	r3, [r4, #68]	; 0x44
90017d5e:	4298      	cmp	r0, r3
90017d60:	d10a      	bne.n	90017d78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90017d62:	f104 023c 	add.w	r2, r4, #60	; 0x3c
90017d66:	ab09      	add	r3, sp, #36	; 0x24
90017d68:	e892 0003 	ldmia.w	r2, {r0, r1}
90017d6c:	e883 0003 	stmia.w	r3, {r0, r1}
90017d70:	4619      	mov	r1, r3
90017d72:	a805      	add	r0, sp, #20
90017d74:	f7fd fa22 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
90017d78:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90017d7c:	2b00      	cmp	r3, #0
90017d7e:	dd5b      	ble.n	90017e38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90017d80:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90017d84:	2b00      	cmp	r3, #0
90017d86:	dd57      	ble.n	90017e38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90017d88:	4f2f      	ldr	r7, [pc, #188]	; (90017e48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90017d8a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90017d8c:	683b      	ldr	r3, [r7, #0]
90017d8e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90017d92:	4b2e      	ldr	r3, [pc, #184]	; (90017e4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90017d94:	681b      	ldr	r3, [r3, #0]
90017d96:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90017d9a:	2e00      	cmp	r6, #0
90017d9c:	d04c      	beq.n	90017e38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90017d9e:	6823      	ldr	r3, [r4, #0]
90017da0:	4620      	mov	r0, r4
90017da2:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
90017da6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90017da8:	4798      	blx	r3
90017daa:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90017dac:	683b      	ldr	r3, [r7, #0]
90017dae:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
90017db2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90017db6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
90017dba:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
90017dbe:	785b      	ldrb	r3, [r3, #1]
90017dc0:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
90017dc4:	f3c3 0381 	ubfx	r3, r3, #2, #2
90017dc8:	6b21      	ldr	r1, [r4, #48]	; 0x30
90017dca:	9609      	str	r6, [sp, #36]	; 0x24
90017dcc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90017dd0:	4b1f      	ldr	r3, [pc, #124]	; (90017e50 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90017dd2:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
90017dd6:	681b      	ldr	r3, [r3, #0]
90017dd8:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
90017ddc:	910b      	str	r1, [sp, #44]	; 0x2c
90017dde:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
90017de2:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
90017de6:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
90017dea:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
90017dee:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
90017df2:	b10a      	cbz	r2, 90017df8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90017df4:	6cde      	ldr	r6, [r3, #76]	; 0x4c
90017df6:	b906      	cbnz	r6, 90017dfa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90017df8:	689e      	ldr	r6, [r3, #8]
90017dfa:	af07      	add	r7, sp, #28
90017dfc:	4621      	mov	r1, r4
90017dfe:	4638      	mov	r0, r7
90017e00:	f004 f90a 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017e04:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90017e06:	6828      	ldr	r0, [r5, #0]
90017e08:	f7f0 fe02 	bl	90008a10 <_ZNK8touchgfx5Texts7getTextEt>
90017e0c:	6823      	ldr	r3, [r4, #0]
90017e0e:	4605      	mov	r5, r0
90017e10:	4620      	mov	r0, r4
90017e12:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90017e14:	4798      	blx	r3
90017e16:	6823      	ldr	r3, [r4, #0]
90017e18:	4680      	mov	r8, r0
90017e1a:	4620      	mov	r0, r4
90017e1c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90017e20:	4798      	blx	r3
90017e22:	ab09      	add	r3, sp, #36	; 0x24
90017e24:	9501      	str	r5, [sp, #4]
90017e26:	9300      	str	r3, [sp, #0]
90017e28:	ab05      	add	r3, sp, #20
90017e2a:	e9cd 8002 	strd	r8, r0, [sp, #8]
90017e2e:	4630      	mov	r0, r6
90017e30:	e897 0006 	ldmia.w	r7, {r1, r2}
90017e34:	f7f0 fd9c 	bl	90008970 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90017e38:	b00e      	add	sp, #56	; 0x38
90017e3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017e3e:	bf00      	nop
90017e40:	24028e88 	.word	0x24028e88
90017e44:	24028e90 	.word	0x24028e90
90017e48:	24028e84 	.word	0x24028e84
90017e4c:	24028e8c 	.word	0x24028e8c
90017e50:	24028e2c 	.word	0x24028e2c

90017e54 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90017e54:	b538      	push	{r3, r4, r5, lr}
90017e56:	4b0e      	ldr	r3, [pc, #56]	; (90017e90 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90017e58:	4604      	mov	r4, r0
90017e5a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90017e5c:	881b      	ldrh	r3, [r3, #0]
90017e5e:	429a      	cmp	r2, r3
90017e60:	d214      	bcs.n	90017e8c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90017e62:	6803      	ldr	r3, [r0, #0]
90017e64:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90017e66:	4798      	blx	r3
90017e68:	6823      	ldr	r3, [r4, #0]
90017e6a:	4605      	mov	r5, r0
90017e6c:	4620      	mov	r0, r4
90017e6e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90017e70:	4798      	blx	r3
90017e72:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90017e76:	b22d      	sxth	r5, r5
90017e78:	4601      	mov	r1, r0
90017e7a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90017e7e:	bf06      	itte	eq
90017e80:	4602      	moveq	r2, r0
90017e82:	4629      	moveq	r1, r5
90017e84:	462a      	movne	r2, r5
90017e86:	4620      	mov	r0, r4
90017e88:	f7fc fe08 	bl	90014a9c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90017e8c:	bd38      	pop	{r3, r4, r5, pc}
90017e8e:	bf00      	nop
90017e90:	24028e88 	.word	0x24028e88

90017e94 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90017e94:	b530      	push	{r4, r5, lr}
90017e96:	888b      	ldrh	r3, [r1, #4]
90017e98:	b085      	sub	sp, #20
90017e9a:	4604      	mov	r4, r0
90017e9c:	8583      	strh	r3, [r0, #44]	; 0x2c
90017e9e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90017ea2:	b923      	cbnz	r3, 90017eae <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90017ea4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90017ea8:	b90b      	cbnz	r3, 90017eae <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90017eaa:	f7ff ffd3 	bl	90017e54 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90017eae:	6823      	ldr	r3, [r4, #0]
90017eb0:	466d      	mov	r5, sp
90017eb2:	4621      	mov	r1, r4
90017eb4:	343c      	adds	r4, #60	; 0x3c
90017eb6:	4628      	mov	r0, r5
90017eb8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90017ebc:	4798      	blx	r3
90017ebe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90017ec2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90017ec6:	b005      	add	sp, #20
90017ec8:	bd30      	pop	{r4, r5, pc}

90017eca <_ZNK8touchgfx3Box12getSolidRectEv>:
90017eca:	2300      	movs	r3, #0
90017ecc:	8083      	strh	r3, [r0, #4]
90017ece:	80c3      	strh	r3, [r0, #6]
90017ed0:	8003      	strh	r3, [r0, #0]
90017ed2:	8043      	strh	r3, [r0, #2]
90017ed4:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
90017ed8:	2bff      	cmp	r3, #255	; 0xff
90017eda:	bf01      	itttt	eq
90017edc:	890b      	ldrheq	r3, [r1, #8]
90017ede:	8083      	strheq	r3, [r0, #4]
90017ee0:	894b      	ldrheq	r3, [r1, #10]
90017ee2:	80c3      	strheq	r3, [r0, #6]
90017ee4:	4770      	bx	lr
	...

90017ee8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90017ee8:	b537      	push	{r0, r1, r2, r4, r5, lr}
90017eea:	4604      	mov	r4, r0
90017eec:	466b      	mov	r3, sp
90017eee:	6808      	ldr	r0, [r1, #0]
90017ef0:	6849      	ldr	r1, [r1, #4]
90017ef2:	c303      	stmia	r3!, {r0, r1}
90017ef4:	6823      	ldr	r3, [r4, #0]
90017ef6:	4669      	mov	r1, sp
90017ef8:	4620      	mov	r0, r4
90017efa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90017efc:	4798      	blx	r3
90017efe:	4b08      	ldr	r3, [pc, #32]	; (90017f20 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90017f00:	681b      	ldr	r3, [r3, #0]
90017f02:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
90017f06:	b10a      	cbz	r2, 90017f0c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90017f08:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90017f0a:	b900      	cbnz	r0, 90017f0e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90017f0c:	6898      	ldr	r0, [r3, #8]
90017f0e:	6803      	ldr	r3, [r0, #0]
90017f10:	4669      	mov	r1, sp
90017f12:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90017f14:	6a1d      	ldr	r5, [r3, #32]
90017f16:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90017f1a:	47a8      	blx	r5
90017f1c:	b003      	add	sp, #12
90017f1e:	bd30      	pop	{r4, r5, pc}
90017f20:	24028e2c 	.word	0x24028e2c

90017f24 <_ZN8touchgfx3BoxD1Ev>:
90017f24:	4770      	bx	lr

90017f26 <_ZN8touchgfx3BoxD0Ev>:
90017f26:	b510      	push	{r4, lr}
90017f28:	4604      	mov	r4, r0
90017f2a:	212c      	movs	r1, #44	; 0x2c
90017f2c:	f013 fa73 	bl	9002b416 <_ZdlPvj>
90017f30:	4620      	mov	r0, r4
90017f32:	bd10      	pop	{r4, pc}

90017f34 <_ZNK8touchgfx3Box17invalidateContentEv>:
90017f34:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
90017f38:	b12a      	cbz	r2, 90017f46 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90017f3a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90017f3e:	b112      	cbz	r2, 90017f46 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90017f40:	6803      	ldr	r3, [r0, #0]
90017f42:	695b      	ldr	r3, [r3, #20]
90017f44:	4718      	bx	r3
90017f46:	4770      	bx	lr

90017f48 <_ZN8touchgfx10TiledImage9setOffsetEss>:
90017f48:	b570      	push	{r4, r5, r6, lr}
90017f4a:	6803      	ldr	r3, [r0, #0]
90017f4c:	4604      	mov	r4, r0
90017f4e:	4615      	mov	r5, r2
90017f50:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90017f52:	4798      	blx	r3
90017f54:	6823      	ldr	r3, [r4, #0]
90017f56:	4629      	mov	r1, r5
90017f58:	4620      	mov	r0, r4
90017f5a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90017f5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017f60:	4718      	bx	r3

90017f62 <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
90017f62:	b570      	push	{r4, r5, r6, lr}
90017f64:	6803      	ldr	r3, [r0, #0]
90017f66:	4604      	mov	r4, r0
90017f68:	460e      	mov	r6, r1
90017f6a:	4615      	mov	r5, r2
90017f6c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90017f6e:	4798      	blx	r3
90017f70:	8030      	strh	r0, [r6, #0]
90017f72:	6823      	ldr	r3, [r4, #0]
90017f74:	4620      	mov	r0, r4
90017f76:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90017f78:	4798      	blx	r3
90017f7a:	8028      	strh	r0, [r5, #0]
90017f7c:	bd70      	pop	{r4, r5, r6, pc}

90017f7e <_ZN8touchgfx10TiledImage10getXOffsetEv>:
90017f7e:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
90017f82:	4770      	bx	lr

90017f84 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
90017f84:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
90017f88:	4770      	bx	lr

90017f8a <_ZN8touchgfx10TiledImageD1Ev>:
90017f8a:	4770      	bx	lr

90017f8c <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
90017f8c:	b510      	push	{r4, lr}
90017f8e:	4604      	mov	r4, r0
90017f90:	f000 fb3b 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90017f94:	6823      	ldr	r3, [r4, #0]
90017f96:	4620      	mov	r0, r4
90017f98:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
90017f9c:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
90017fa0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90017fa2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017fa6:	4718      	bx	r3

90017fa8 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
90017fa8:	b538      	push	{r3, r4, r5, lr}
90017faa:	f100 0526 	add.w	r5, r0, #38	; 0x26
90017fae:	4604      	mov	r4, r0
90017fb0:	8541      	strh	r1, [r0, #42]	; 0x2a
90017fb2:	4628      	mov	r0, r5
90017fb4:	f005 fd8c 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90017fb8:	b188      	cbz	r0, 90017fde <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
90017fba:	4628      	mov	r0, r5
90017fbc:	f005 fd88 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90017fc0:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
90017fc4:	fb92 f3f0 	sdiv	r3, r2, r0
90017fc8:	fb03 2010 	mls	r0, r3, r0, r2
90017fcc:	2800      	cmp	r0, #0
90017fce:	8560      	strh	r0, [r4, #42]	; 0x2a
90017fd0:	da05      	bge.n	90017fde <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
90017fd2:	4628      	mov	r0, r5
90017fd4:	f005 fd7c 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90017fd8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90017fda:	4418      	add	r0, r3
90017fdc:	8560      	strh	r0, [r4, #42]	; 0x2a
90017fde:	bd38      	pop	{r3, r4, r5, pc}

90017fe0 <_ZN8touchgfx10TiledImage10setYOffsetEs>:
90017fe0:	b538      	push	{r3, r4, r5, lr}
90017fe2:	f100 0526 	add.w	r5, r0, #38	; 0x26
90017fe6:	4604      	mov	r4, r0
90017fe8:	8581      	strh	r1, [r0, #44]	; 0x2c
90017fea:	4628      	mov	r0, r5
90017fec:	f005 fda4 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90017ff0:	b188      	cbz	r0, 90018016 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
90017ff2:	4628      	mov	r0, r5
90017ff4:	f005 fda0 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90017ff8:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
90017ffc:	fb92 f3f0 	sdiv	r3, r2, r0
90018000:	fb03 2010 	mls	r0, r3, r0, r2
90018004:	2800      	cmp	r0, #0
90018006:	85a0      	strh	r0, [r4, #44]	; 0x2c
90018008:	da05      	bge.n	90018016 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
9001800a:	4628      	mov	r0, r5
9001800c:	f005 fd94 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90018010:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
90018012:	4418      	add	r0, r3
90018014:	85a0      	strh	r0, [r4, #44]	; 0x2c
90018016:	bd38      	pop	{r3, r4, r5, pc}

90018018 <_ZN8touchgfx10TiledImageD0Ev>:
90018018:	b510      	push	{r4, lr}
9001801a:	4604      	mov	r4, r0
9001801c:	2130      	movs	r1, #48	; 0x30
9001801e:	f013 f9fa 	bl	9002b416 <_ZdlPvj>
90018022:	4620      	mov	r0, r4
90018024:	bd10      	pop	{r4, pc}
	...

90018028 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
90018028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001802c:	f100 0b26 	add.w	fp, r0, #38	; 0x26
90018030:	b093      	sub	sp, #76	; 0x4c
90018032:	4607      	mov	r7, r0
90018034:	460e      	mov	r6, r1
90018036:	4658      	mov	r0, fp
90018038:	f005 fd4a 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001803c:	4681      	mov	r9, r0
9001803e:	4658      	mov	r0, fp
90018040:	f005 fd7a 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90018044:	4605      	mov	r5, r0
90018046:	f1b9 0f00 	cmp.w	r9, #0
9001804a:	f000 80c4 	beq.w	900181d6 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
9001804e:	2800      	cmp	r0, #0
90018050:	f000 80c1 	beq.w	900181d6 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
90018054:	2300      	movs	r3, #0
90018056:	a90e      	add	r1, sp, #56	; 0x38
90018058:	4638      	mov	r0, r7
9001805a:	fa1f f889 	uxth.w	r8, r9
9001805e:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
90018062:	683b      	ldr	r3, [r7, #0]
90018064:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90018066:	4798      	blx	r3
90018068:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
9001806c:	f9b6 3000 	ldrsh.w	r3, [r6]
90018070:	88b1      	ldrh	r1, [r6, #4]
90018072:	189c      	adds	r4, r3, r2
90018074:	440b      	add	r3, r1
90018076:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
9001807a:	fa02 f383 	sxtah	r3, r2, r3
9001807e:	3b01      	subs	r3, #1
90018080:	fb93 f3f9 	sdiv	r3, r3, r9
90018084:	fb94 f4f9 	sdiv	r4, r4, r9
90018088:	fb13 f308 	smulbb	r3, r3, r8
9001808c:	fb14 f408 	smulbb	r4, r4, r8
90018090:	b21b      	sxth	r3, r3
90018092:	1aa4      	subs	r4, r4, r2
90018094:	b2aa      	uxth	r2, r5
90018096:	930b      	str	r3, [sp, #44]	; 0x2c
90018098:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
9001809c:	b2a4      	uxth	r4, r4
9001809e:	9205      	str	r2, [sp, #20]
900180a0:	185a      	adds	r2, r3, r1
900180a2:	9805      	ldr	r0, [sp, #20]
900180a4:	fb92 f2f5 	sdiv	r2, r2, r5
900180a8:	fb12 f200 	smulbb	r2, r2, r0
900180ac:	1a52      	subs	r2, r2, r1
900180ae:	b212      	sxth	r2, r2
900180b0:	920c      	str	r2, [sp, #48]	; 0x30
900180b2:	88f2      	ldrh	r2, [r6, #6]
900180b4:	4413      	add	r3, r2
900180b6:	fa01 f383 	sxtah	r3, r1, r3
900180ba:	3b01      	subs	r3, #1
900180bc:	fb93 f3f5 	sdiv	r3, r3, r5
900180c0:	fb13 f300 	smulbb	r3, r3, r0
900180c4:	eb08 0504 	add.w	r5, r8, r4
900180c8:	b21b      	sxth	r3, r3
900180ca:	930d      	str	r3, [sp, #52]	; 0x34
900180cc:	b223      	sxth	r3, r4
900180ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900180d0:	b2ad      	uxth	r5, r5
900180d2:	4293      	cmp	r3, r2
900180d4:	9306      	str	r3, [sp, #24]
900180d6:	dc7e      	bgt.n	900181d6 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
900180d8:	b22b      	sxth	r3, r5
900180da:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
900180de:	930a      	str	r3, [sp, #40]	; 0x28
900180e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900180e2:	4599      	cmp	r9, r3
900180e4:	dd03      	ble.n	900180ee <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
900180e6:	4444      	add	r4, r8
900180e8:	4445      	add	r5, r8
900180ea:	b2a4      	uxth	r4, r4
900180ec:	e7ee      	b.n	900180cc <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
900180ee:	f9b6 c000 	ldrsh.w	ip, [r6]
900180f2:	88b2      	ldrh	r2, [r6, #4]
900180f4:	9806      	ldr	r0, [sp, #24]
900180f6:	4462      	add	r2, ip
900180f8:	9905      	ldr	r1, [sp, #20]
900180fa:	b292      	uxth	r2, r2
900180fc:	b213      	sxth	r3, r2
900180fe:	9308      	str	r3, [sp, #32]
90018100:	fa1f f389 	uxth.w	r3, r9
90018104:	4419      	add	r1, r3
90018106:	9307      	str	r3, [sp, #28]
90018108:	4603      	mov	r3, r0
9001810a:	9808      	ldr	r0, [sp, #32]
9001810c:	b289      	uxth	r1, r1
9001810e:	4283      	cmp	r3, r0
90018110:	fa0f fa81 	sxth.w	sl, r1
90018114:	da5b      	bge.n	900181ce <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
90018116:	980a      	ldr	r0, [sp, #40]	; 0x28
90018118:	4584      	cmp	ip, r0
9001811a:	da58      	bge.n	900181ce <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
9001811c:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
90018120:	f8b6 e006 	ldrh.w	lr, [r6, #6]
90018124:	4486      	add	lr, r0
90018126:	fa1f fe8e 	uxth.w	lr, lr
9001812a:	fa0f f38e 	sxth.w	r3, lr
9001812e:	4599      	cmp	r9, r3
90018130:	9309      	str	r3, [sp, #36]	; 0x24
90018132:	da4c      	bge.n	900181ce <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
90018134:	4550      	cmp	r0, sl
90018136:	da4a      	bge.n	900181ce <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
90018138:	9b06      	ldr	r3, [sp, #24]
9001813a:	459c      	cmp	ip, r3
9001813c:	bfb8      	it	lt
9001813e:	469c      	movlt	ip, r3
90018140:	4548      	cmp	r0, r9
90018142:	9b08      	ldr	r3, [sp, #32]
90018144:	bfb8      	it	lt
90018146:	4648      	movlt	r0, r9
90018148:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
9001814c:	4699      	mov	r9, r3
9001814e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90018150:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
90018154:	4599      	cmp	r9, r3
90018156:	bfc8      	it	gt
90018158:	462a      	movgt	r2, r5
9001815a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001815c:	4553      	cmp	r3, sl
9001815e:	bfd8      	it	le
90018160:	4671      	movle	r1, lr
90018162:	eba2 020c 	sub.w	r2, r2, ip
90018166:	1a09      	subs	r1, r1, r0
90018168:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
9001816c:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
90018170:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
90018174:	9b07      	ldr	r3, [sp, #28]
90018176:	1b12      	subs	r2, r2, r4
90018178:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9001817c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
90018180:	1ad2      	subs	r2, r2, r3
90018182:	4b16      	ldr	r3, [pc, #88]	; (900181dc <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
90018184:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
90018188:	681a      	ldr	r2, [r3, #0]
9001818a:	f892 1076 	ldrb.w	r1, [r2, #118]	; 0x76
9001818e:	b109      	cbz	r1, 90018194 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
90018190:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
90018192:	b900      	cbnz	r0, 90018196 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
90018194:	6890      	ldr	r0, [r2, #8]
90018196:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001819a:	f04f 0c01 	mov.w	ip, #1
9001819e:	9b07      	ldr	r3, [sp, #28]
900181a0:	6801      	ldr	r1, [r0, #0]
900181a2:	4413      	add	r3, r2
900181a4:	f8cd c008 	str.w	ip, [sp, #8]
900181a8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
900181ac:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
900181b0:	b21b      	sxth	r3, r3
900181b2:	4422      	add	r2, r4
900181b4:	f8cd c004 	str.w	ip, [sp, #4]
900181b8:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
900181bc:	b212      	sxth	r2, r2
900181be:	f8cd c000 	str.w	ip, [sp]
900181c2:	f8d1 9008 	ldr.w	r9, [r1, #8]
900181c6:	4659      	mov	r1, fp
900181c8:	47c8      	blx	r9
900181ca:	46d1      	mov	r9, sl
900181cc:	e788      	b.n	900180e0 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
900181ce:	2300      	movs	r3, #0
900181d0:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
900181d4:	e7cc      	b.n	90018170 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
900181d6:	b013      	add	sp, #76	; 0x4c
900181d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900181dc:	24028e2c 	.word	0x24028e2c

900181e0 <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
900181e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900181e4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900181e8:	4606      	mov	r6, r0
900181ea:	4689      	mov	r9, r1
900181ec:	2bff      	cmp	r3, #255	; 0xff
900181ee:	d008      	beq.n	90018202 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
900181f0:	2300      	movs	r3, #0
900181f2:	8003      	strh	r3, [r0, #0]
900181f4:	8043      	strh	r3, [r0, #2]
900181f6:	8083      	strh	r3, [r0, #4]
900181f8:	4630      	mov	r0, r6
900181fa:	80f3      	strh	r3, [r6, #6]
900181fc:	b003      	add	sp, #12
900181fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018202:	f101 0b26 	add.w	fp, r1, #38	; 0x26
90018206:	4668      	mov	r0, sp
90018208:	4659      	mov	r1, fp
9001820a:	f005 fcc9 	bl	9001dba0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001820e:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
90018212:	4658      	mov	r0, fp
90018214:	f9bd 7000 	ldrsh.w	r7, [sp]
90018218:	f9bd a002 	ldrsh.w	sl, [sp, #2]
9001821c:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
90018220:	f005 fc56 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90018224:	4284      	cmp	r4, r0
90018226:	d10d      	bne.n	90018244 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
90018228:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
9001822c:	4658      	mov	r0, fp
9001822e:	f005 fc83 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90018232:	4580      	cmp	r8, r0
90018234:	d12a      	bne.n	9001828c <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xac>
90018236:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
9001823a:	8037      	strh	r7, [r6, #0]
9001823c:	f8a6 a002 	strh.w	sl, [r6, #2]
90018240:	80b5      	strh	r5, [r6, #4]
90018242:	e7d9      	b.n	900181f8 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
90018244:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
90018248:	4658      	mov	r0, fp
9001824a:	f005 fc41 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001824e:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
90018252:	1b7f      	subs	r7, r7, r5
90018254:	b2a3      	uxth	r3, r4
90018256:	b2bd      	uxth	r5, r7
90018258:	b22f      	sxth	r7, r5
9001825a:	4428      	add	r0, r5
9001825c:	2f00      	cmp	r7, #0
9001825e:	b280      	uxth	r0, r0
90018260:	bfb8      	it	lt
90018262:	18ed      	addlt	r5, r5, r3
90018264:	4403      	add	r3, r0
90018266:	bfac      	ite	ge
90018268:	4625      	movge	r5, r4
9001826a:	2700      	movlt	r7, #0
9001826c:	b29b      	uxth	r3, r3
9001826e:	bfb8      	it	lt
90018270:	b22d      	sxthlt	r5, r5
90018272:	b219      	sxth	r1, r3
90018274:	bfb8      	it	lt
90018276:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
9001827a:	4291      	cmp	r1, r2
9001827c:	bfc4      	itt	gt
9001827e:	1a9c      	subgt	r4, r3, r2
90018280:	b224      	sxthgt	r4, r4
90018282:	42ac      	cmp	r4, r5
90018284:	bfc4      	itt	gt
90018286:	b207      	sxthgt	r7, r0
90018288:	4625      	movgt	r5, r4
9001828a:	e7cf      	b.n	9001822c <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
9001828c:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
90018290:	4658      	mov	r0, fp
90018292:	f005 fc51 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90018296:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
9001829a:	ebaa 0404 	sub.w	r4, sl, r4
9001829e:	fa1f f288 	uxth.w	r2, r8
900182a2:	b2a4      	uxth	r4, r4
900182a4:	fa0f fa84 	sxth.w	sl, r4
900182a8:	4420      	add	r0, r4
900182aa:	f1ba 0f00 	cmp.w	sl, #0
900182ae:	b280      	uxth	r0, r0
900182b0:	bfb8      	it	lt
900182b2:	18a3      	addlt	r3, r4, r2
900182b4:	4402      	add	r2, r0
900182b6:	bfac      	ite	ge
900182b8:	4643      	movge	r3, r8
900182ba:	f04f 0a00 	movlt.w	sl, #0
900182be:	b292      	uxth	r2, r2
900182c0:	bfb8      	it	lt
900182c2:	b21b      	sxthlt	r3, r3
900182c4:	b214      	sxth	r4, r2
900182c6:	bfb8      	it	lt
900182c8:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900182cc:	428c      	cmp	r4, r1
900182ce:	bfc4      	itt	gt
900182d0:	eba2 0801 	subgt.w	r8, r2, r1
900182d4:	fa0f f888 	sxthgt.w	r8, r8
900182d8:	4598      	cmp	r8, r3
900182da:	bfc4      	itt	gt
900182dc:	fa0f fa80 	sxthgt.w	sl, r0
900182e0:	4643      	movgt	r3, r8
900182e2:	e7aa      	b.n	9001823a <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

900182e4 <_ZNK8touchgfx5Image17invalidateContentEv>:
900182e4:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
900182e8:	b12a      	cbz	r2, 900182f6 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
900182ea:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900182ee:	b112      	cbz	r2, 900182f6 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
900182f0:	6803      	ldr	r3, [r0, #0]
900182f2:	695b      	ldr	r3, [r3, #20]
900182f4:	4718      	bx	r3
900182f6:	4770      	bx	lr

900182f8 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
900182f8:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
900182fc:	600b      	str	r3, [r1, #0]
900182fe:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
90018302:	6013      	str	r3, [r2, #0]
90018304:	4770      	bx	lr

90018306 <_ZN8touchgfx5Gauge8setWidthEs>:
90018306:	8101      	strh	r1, [r0, #8]
90018308:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
9001830c:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
90018310:	4770      	bx	lr

90018312 <_ZN8touchgfx5Gauge9setHeightEs>:
90018312:	8141      	strh	r1, [r0, #10]
90018314:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
90018318:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
9001831c:	4770      	bx	lr

9001831e <_ZNK8touchgfx5Gauge13getStartAngleEv>:
9001831e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
90018322:	4770      	bx	lr

90018324 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
90018324:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
90018328:	4770      	bx	lr

9001832a <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
9001832a:	4770      	bx	lr

9001832c <_ZN8touchgfx5GaugeD1Ev>:
9001832c:	4770      	bx	lr

9001832e <_ZN8touchgfx5Gauge8setAlphaEh>:
9001832e:	b538      	push	{r3, r4, r5, lr}
90018330:	4604      	mov	r4, r0
90018332:	460d      	mov	r5, r1
90018334:	f7fc fc4a 	bl	90014bcc <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
90018338:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
9001833c:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
90018340:	bd38      	pop	{r3, r4, r5, pc}

90018342 <_ZN8touchgfx5GaugeD0Ev>:
90018342:	b510      	push	{r4, lr}
90018344:	4604      	mov	r4, r0
90018346:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
9001834a:	f013 f864 	bl	9002b416 <_ZdlPvj>
9001834e:	4620      	mov	r0, r4
90018350:	bd10      	pop	{r4, pc}

90018352 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
90018352:	b510      	push	{r4, lr}
90018354:	6803      	ldr	r3, [r0, #0]
90018356:	4604      	mov	r4, r0
90018358:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
9001835c:	4798      	blx	r3
9001835e:	b170      	cbz	r0, 9001837e <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
90018360:	6823      	ldr	r3, [r4, #0]
90018362:	4620      	mov	r0, r4
90018364:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90018368:	4798      	blx	r3
9001836a:	b140      	cbz	r0, 9001837e <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
9001836c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90018370:	b12b      	cbz	r3, 9001837e <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
90018372:	6823      	ldr	r3, [r4, #0]
90018374:	4620      	mov	r0, r4
90018376:	695b      	ldr	r3, [r3, #20]
90018378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001837c:	4718      	bx	r3
9001837e:	bd10      	pop	{r4, pc}

90018380 <_ZN8touchgfx5GaugeC1Ev>:
90018380:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90018382:	4604      	mov	r4, r0
90018384:	f7fc fd36 	bl	90014df4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
90018388:	4b18      	ldr	r3, [pc, #96]	; (900183ec <_ZN8touchgfx5GaugeC1Ev+0x6c>)
9001838a:	a902      	add	r1, sp, #8
9001838c:	4626      	mov	r6, r4
9001838e:	2500      	movs	r5, #0
90018390:	f504 77ac 	add.w	r7, r4, #344	; 0x158
90018394:	f846 3bb4 	str.w	r3, [r6], #180
90018398:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001839c:	4630      	mov	r0, r6
9001839e:	f821 3d04 	strh.w	r3, [r1, #-4]!
900183a2:	f012 fa39 	bl	9002a818 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
900183a6:	2301      	movs	r3, #1
900183a8:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
900183ac:	4638      	mov	r0, r7
900183ae:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
900183b2:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
900183b6:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
900183ba:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
900183be:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
900183c2:	f011 fc91 	bl	90029ce8 <_ZN8touchgfx6CircleC1Ev>
900183c6:	f104 0158 	add.w	r1, r4, #88	; 0x58
900183ca:	4620      	mov	r0, r4
900183cc:	f7fc fdb3 	bl	90014f36 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
900183d0:	4639      	mov	r1, r7
900183d2:	4620      	mov	r0, r4
900183d4:	f7fc fd6e 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900183d8:	4620      	mov	r0, r4
900183da:	4631      	mov	r1, r6
900183dc:	f7fc fd6a 	bl	90014eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900183e0:	4620      	mov	r0, r4
900183e2:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
900183e6:	b003      	add	sp, #12
900183e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900183ea:	bf00      	nop
900183ec:	90030994 	.word	0x90030994

900183f0 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
900183f0:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
900183f4:	4770      	bx	lr

900183f6 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
900183f6:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
900183fa:	4770      	bx	lr

900183fc <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
900183fc:	b538      	push	{r3, r4, r5, lr}
900183fe:	8902      	ldrh	r2, [r0, #8]
90018400:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
90018404:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90018408:	4604      	mov	r4, r0
9001840a:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
9001840e:	2200      	movs	r2, #0
90018410:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
90018414:	4628      	mov	r0, r5
90018416:	4611      	mov	r1, r2
90018418:	f7fd f83e 	bl	90015498 <_ZN8touchgfx8Drawable5setXYEss>
9001841c:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
90018420:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
90018424:	4628      	mov	r0, r5
90018426:	1a9b      	subs	r3, r3, r2
90018428:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
9001842c:	ee07 3a90 	vmov	s15, r3
90018430:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
90018434:	1a9b      	subs	r3, r3, r2
90018436:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001843a:	ee07 3a10 	vmov	s14, r3
9001843e:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
90018442:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018446:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
9001844a:	f012 fa31 	bl	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
9001844e:	4b16      	ldr	r3, [pc, #88]	; (900184a8 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
90018450:	4628      	mov	r0, r5
90018452:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
90018456:	f012 fa2b 	bl	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
9001845a:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
9001845e:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
90018462:	4628      	mov	r0, r5
90018464:	ee07 3a90 	vmov	s15, r3
90018468:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
9001846c:	ee07 2a10 	vmov	s14, r2
90018470:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018474:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
90018478:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001847c:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
90018480:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
90018484:	f012 fa14 	bl	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
90018488:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
9001848c:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
90018490:	4628      	mov	r0, r5
90018492:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
90018496:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
9001849a:	f012 fa09 	bl	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
9001849e:	2301      	movs	r3, #1
900184a0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
900184a4:	bd38      	pop	{r3, r4, r5, pc}
900184a6:	bf00      	nop
900184a8:	43960000 	.word	0x43960000

900184ac <_ZN8touchgfx5Gauge9setNeedleEtss>:
900184ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
900184ae:	4604      	mov	r4, r0
900184b0:	a802      	add	r0, sp, #8
900184b2:	4616      	mov	r6, r2
900184b4:	461d      	mov	r5, r3
900184b6:	f820 1d04 	strh.w	r1, [r0, #-4]!
900184ba:	4601      	mov	r1, r0
900184bc:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
900184c0:	f012 fb4c 	bl	9002ab5c <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
900184c4:	4620      	mov	r0, r4
900184c6:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
900184ca:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
900184ce:	f7ff ff95 	bl	900183fc <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
900184d2:	b002      	add	sp, #8
900184d4:	bd70      	pop	{r4, r5, r6, pc}

900184d6 <_ZN8touchgfx5Gauge9setCenterEii>:
900184d6:	b570      	push	{r4, r5, r6, lr}
900184d8:	4606      	mov	r6, r0
900184da:	460d      	mov	r5, r1
900184dc:	4614      	mov	r4, r2
900184de:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
900184e2:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
900184e6:	f7ff ff89 	bl	900183fc <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
900184ea:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
900184ee:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
900184f2:	1aa4      	subs	r4, r4, r2
900184f4:	1a6d      	subs	r5, r5, r1
900184f6:	0164      	lsls	r4, r4, #5
900184f8:	016d      	lsls	r5, r5, #5
900184fa:	3410      	adds	r4, #16
900184fc:	3510      	adds	r5, #16
900184fe:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
90018502:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
90018506:	bd70      	pop	{r4, r5, r6, pc}

90018508 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
90018508:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9001850a:	0149      	lsls	r1, r1, #5
9001850c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
9001850e:	4604      	mov	r4, r0
90018510:	4299      	cmp	r1, r3
90018512:	9101      	str	r1, [sp, #4]
90018514:	d00b      	beq.n	9001852e <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
90018516:	4601      	mov	r1, r0
90018518:	aa01      	add	r2, sp, #4
9001851a:	a802      	add	r0, sp, #8
9001851c:	f011 fde0 	bl	9002a0e0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
90018520:	9b01      	ldr	r3, [sp, #4]
90018522:	a902      	add	r1, sp, #8
90018524:	4620      	mov	r0, r4
90018526:	63e3      	str	r3, [r4, #60]	; 0x3c
90018528:	6823      	ldr	r3, [r4, #0]
9001852a:	691b      	ldr	r3, [r3, #16]
9001852c:	4798      	blx	r3
9001852e:	b004      	add	sp, #16
90018530:	bd10      	pop	{r4, pc}
	...

90018534 <_ZN8touchgfx5Gauge8setValueEi>:
90018534:	b570      	push	{r4, r5, r6, lr}
90018536:	4604      	mov	r4, r0
90018538:	f7fc fb9b 	bl	90014c72 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
9001853c:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
90018540:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
90018544:	4620      	mov	r0, r4
90018546:	429a      	cmp	r2, r3
90018548:	f504 76ac 	add.w	r6, r4, #344	; 0x158
9001854c:	bfac      	ite	ge
9001854e:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
90018552:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
90018556:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
9001855a:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
9001855e:	1ac9      	subs	r1, r1, r3
90018560:	2900      	cmp	r1, #0
90018562:	bfb8      	it	lt
90018564:	4249      	neglt	r1, r1
90018566:	b289      	uxth	r1, r1
90018568:	f7fc fba5 	bl	90014cb6 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
9001856c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
90018570:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
90018574:	4605      	mov	r5, r0
90018576:	eddf 6a18 	vldr	s13, [pc, #96]	; 900185d8 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
9001857a:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
9001857e:	429a      	cmp	r2, r3
90018580:	ed9f 7a16 	vldr	s14, [pc, #88]	; 900185dc <_ZN8touchgfx5Gauge8setValueEi+0xa8>
90018584:	da15      	bge.n	900185b2 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
90018586:	1b5b      	subs	r3, r3, r5
90018588:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
9001858c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
90018590:	ee07 3a90 	vmov	s15, r3
90018594:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018598:	ee87 1aa6 	vdiv.f32	s2, s15, s13
9001859c:	ee21 1a07 	vmul.f32	s2, s2, s14
900185a0:	f012 f8f4 	bl	9002a78c <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
900185a4:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
900185a8:	1b49      	subs	r1, r1, r5
900185aa:	4630      	mov	r0, r6
900185ac:	f7ff ffac 	bl	90018508 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
900185b0:	bd70      	pop	{r4, r5, r6, pc}
900185b2:	442b      	add	r3, r5
900185b4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
900185b8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
900185bc:	ee07 3a90 	vmov	s15, r3
900185c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900185c4:	ee87 1aa6 	vdiv.f32	s2, s15, s13
900185c8:	ee21 1a07 	vmul.f32	s2, s2, s14
900185cc:	f012 f8de 	bl	9002a78c <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
900185d0:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
900185d4:	4429      	add	r1, r5
900185d6:	e7e8      	b.n	900185aa <_ZN8touchgfx5Gauge8setValueEi+0x76>
900185d8:	43340000 	.word	0x43340000
900185dc:	40490fdb 	.word	0x40490fdb

900185e0 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
900185e0:	b510      	push	{r4, lr}
900185e2:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
900185e6:	0149      	lsls	r1, r1, #5
900185e8:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
900185ec:	0152      	lsls	r2, r2, #5
900185ee:	4604      	mov	r4, r0
900185f0:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
900185f4:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
900185f8:	f7fc fae5 	bl	90014bc6 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
900185fc:	4601      	mov	r1, r0
900185fe:	4620      	mov	r0, r4
90018600:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90018604:	f7ff bf96 	b.w	90018534 <_ZN8touchgfx5Gauge8setValueEi>

90018608 <_ZN8touchgfx5ImageD1Ev>:
90018608:	4770      	bx	lr

9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
9001860a:	b570      	push	{r4, r5, r6, lr}
9001860c:	880b      	ldrh	r3, [r1, #0]
9001860e:	460d      	mov	r5, r1
90018610:	4604      	mov	r4, r0
90018612:	84c3      	strh	r3, [r0, #38]	; 0x26
90018614:	4608      	mov	r0, r1
90018616:	f005 fa5b 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001861a:	4606      	mov	r6, r0
9001861c:	4628      	mov	r0, r5
9001861e:	f005 fa8b 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90018622:	6823      	ldr	r3, [r4, #0]
90018624:	4605      	mov	r5, r0
90018626:	4631      	mov	r1, r6
90018628:	4620      	mov	r0, r4
9001862a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001862c:	4798      	blx	r3
9001862e:	6823      	ldr	r3, [r4, #0]
90018630:	4629      	mov	r1, r5
90018632:	4620      	mov	r0, r4
90018634:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90018636:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001863a:	4718      	bx	r3

9001863c <_ZN8touchgfx5ImageD0Ev>:
9001863c:	b510      	push	{r4, lr}
9001863e:	4604      	mov	r4, r0
90018640:	212c      	movs	r1, #44	; 0x2c
90018642:	f012 fee8 	bl	9002b416 <_ZdlPvj>
90018646:	4620      	mov	r0, r4
90018648:	bd10      	pop	{r4, pc}

9001864a <_ZNK8touchgfx5Image12getSolidRectEv>:
9001864a:	b510      	push	{r4, lr}
9001864c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90018650:	4604      	mov	r4, r0
90018652:	2bff      	cmp	r3, #255	; 0xff
90018654:	d006      	beq.n	90018664 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90018656:	2300      	movs	r3, #0
90018658:	8003      	strh	r3, [r0, #0]
9001865a:	8043      	strh	r3, [r0, #2]
9001865c:	8083      	strh	r3, [r0, #4]
9001865e:	80c3      	strh	r3, [r0, #6]
90018660:	4620      	mov	r0, r4
90018662:	bd10      	pop	{r4, pc}
90018664:	3126      	adds	r1, #38	; 0x26
90018666:	f005 fa9b 	bl	9001dba0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001866a:	e7f9      	b.n	90018660 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

9001866c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
9001866c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018670:	4604      	mov	r4, r0
90018672:	b088      	sub	sp, #32
90018674:	2500      	movs	r5, #0
90018676:	460f      	mov	r7, r1
90018678:	f854 3b26 	ldr.w	r3, [r4], #38
9001867c:	a904      	add	r1, sp, #16
9001867e:	4606      	mov	r6, r0
90018680:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90018682:	e9cd 5504 	strd	r5, r5, [sp, #16]
90018686:	4798      	blx	r3
90018688:	4620      	mov	r0, r4
9001868a:	f005 fa21 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001868e:	4680      	mov	r8, r0
90018690:	4620      	mov	r0, r4
90018692:	f005 fa51 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90018696:	9506      	str	r5, [sp, #24]
90018698:	ad06      	add	r5, sp, #24
9001869a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001869e:	4639      	mov	r1, r7
900186a0:	f8ad 801c 	strh.w	r8, [sp, #28]
900186a4:	4628      	mov	r0, r5
900186a6:	f7fc fd89 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
900186aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900186ae:	2b00      	cmp	r3, #0
900186b0:	dd19      	ble.n	900186e6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900186b2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900186b6:	2b00      	cmp	r3, #0
900186b8:	dd15      	ble.n	900186e6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900186ba:	4b0c      	ldr	r3, [pc, #48]	; (900186ec <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
900186bc:	681b      	ldr	r3, [r3, #0]
900186be:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
900186c2:	b10a      	cbz	r2, 900186c8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
900186c4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900186c6:	b900      	cbnz	r0, 900186ca <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
900186c8:	6898      	ldr	r0, [r3, #8]
900186ca:	2701      	movs	r7, #1
900186cc:	6801      	ldr	r1, [r0, #0]
900186ce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900186d2:	9702      	str	r7, [sp, #8]
900186d4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
900186d8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900186dc:	e9cd 5600 	strd	r5, r6, [sp]
900186e0:	688d      	ldr	r5, [r1, #8]
900186e2:	4621      	mov	r1, r4
900186e4:	47a8      	blx	r5
900186e6:	b008      	add	sp, #32
900186e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900186ec:	24028e2c 	.word	0x24028e2c

900186f0 <_ZN8touchgfx7OutlineD1Ev>:
900186f0:	4770      	bx	lr

900186f2 <_ZN8touchgfx7OutlineD0Ev>:
900186f2:	b510      	push	{r4, lr}
900186f4:	4604      	mov	r4, r0
900186f6:	2130      	movs	r1, #48	; 0x30
900186f8:	f012 fe8d 	bl	9002b416 <_ZdlPvj>
900186fc:	4620      	mov	r0, r4
900186fe:	bd10      	pop	{r4, pc}

90018700 <_ZN8touchgfx7Outline5resetEv>:
90018700:	b510      	push	{r4, lr}
90018702:	4604      	mov	r4, r0
90018704:	f000 fe86 	bl	90019414 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90018708:	60e0      	str	r0, [r4, #12]
9001870a:	f000 fe89 	bl	90019420 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
9001870e:	68e3      	ldr	r3, [r4, #12]
90018710:	08c0      	lsrs	r0, r0, #3
90018712:	2200      	movs	r2, #0
90018714:	f647 71ff 	movw	r1, #32767	; 0x7fff
90018718:	6123      	str	r3, [r4, #16]
9001871a:	3801      	subs	r0, #1
9001871c:	60a2      	str	r2, [r4, #8]
9001871e:	6060      	str	r0, [r4, #4]
90018720:	8019      	strh	r1, [r3, #0]
90018722:	8059      	strh	r1, [r3, #2]
90018724:	809a      	strh	r2, [r3, #4]
90018726:	80da      	strh	r2, [r3, #6]
90018728:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001872a:	f023 0301 	bic.w	r3, r3, #1
9001872e:	f043 0302 	orr.w	r3, r3, #2
90018732:	6263      	str	r3, [r4, #36]	; 0x24
90018734:	bd10      	pop	{r4, pc}
	...

90018738 <_ZN8touchgfx7OutlineC1Ev>:
90018738:	4b0a      	ldr	r3, [pc, #40]	; (90018764 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
9001873a:	b510      	push	{r4, lr}
9001873c:	6003      	str	r3, [r0, #0]
9001873e:	2300      	movs	r3, #0
90018740:	4604      	mov	r4, r0
90018742:	6243      	str	r3, [r0, #36]	; 0x24
90018744:	e9c0 3301 	strd	r3, r3, [r0, #4]
90018748:	e9c0 3303 	strd	r3, r3, [r0, #12]
9001874c:	e9c0 3305 	strd	r3, r3, [r0, #20]
90018750:	e9c0 3307 	strd	r3, r3, [r0, #28]
90018754:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
90018758:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
9001875c:	f7ff ffd0 	bl	90018700 <_ZN8touchgfx7Outline5resetEv>
90018760:	4620      	mov	r0, r4
90018762:	bd10      	pop	{r4, pc}
90018764:	90030ae8 	.word	0x90030ae8

90018768 <_ZN8touchgfx7Outline10renderLineEiiii>:
90018768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001876c:	b093      	sub	sp, #76	; 0x4c
9001876e:	1156      	asrs	r6, r2, #5
90018770:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90018772:	9305      	str	r3, [sp, #20]
90018774:	1153      	asrs	r3, r2, #5
90018776:	f004 051f 	and.w	r5, r4, #31
9001877a:	9303      	str	r3, [sp, #12]
9001877c:	1163      	asrs	r3, r4, #5
9001877e:	9504      	str	r5, [sp, #16]
90018780:	1165      	asrs	r5, r4, #5
90018782:	9306      	str	r3, [sp, #24]
90018784:	f002 031f 	and.w	r3, r2, #31
90018788:	42ae      	cmp	r6, r5
9001878a:	f040 80f4 	bne.w	90018976 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
9001878e:	9c04      	ldr	r4, [sp, #16]
90018790:	9a05      	ldr	r2, [sp, #20]
90018792:	42a3      	cmp	r3, r4
90018794:	ea4f 1e62 	mov.w	lr, r2, asr #5
90018798:	6902      	ldr	r2, [r0, #16]
9001879a:	d125      	bne.n	900187e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
9001879c:	f9b2 3000 	ldrsh.w	r3, [r2]
900187a0:	459e      	cmp	lr, r3
900187a2:	d103      	bne.n	900187ac <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
900187a4:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900187a8:	429e      	cmp	r6, r3
900187aa:	d035      	beq.n	90018818 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900187ac:	88d1      	ldrh	r1, [r2, #6]
900187ae:	8893      	ldrh	r3, [r2, #4]
900187b0:	430b      	orrs	r3, r1
900187b2:	d010      	beq.n	900187d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900187b4:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900187b8:	2b00      	cmp	r3, #0
900187ba:	db0c      	blt.n	900187d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900187bc:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
900187be:	428b      	cmp	r3, r1
900187c0:	da09      	bge.n	900187d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900187c2:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900187c6:	428b      	cmp	r3, r1
900187c8:	f103 0301 	add.w	r3, r3, #1
900187cc:	bf38      	it	cc
900187ce:	3208      	addcc	r2, #8
900187d0:	6083      	str	r3, [r0, #8]
900187d2:	bf38      	it	cc
900187d4:	6102      	strcc	r2, [r0, #16]
900187d6:	6903      	ldr	r3, [r0, #16]
900187d8:	9a03      	ldr	r2, [sp, #12]
900187da:	f8a3 e000 	strh.w	lr, [r3]
900187de:	805a      	strh	r2, [r3, #2]
900187e0:	2200      	movs	r2, #0
900187e2:	809a      	strh	r2, [r3, #4]
900187e4:	80da      	strh	r2, [r3, #6]
900187e6:	e017      	b.n	90018818 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900187e8:	9c05      	ldr	r4, [sp, #20]
900187ea:	114e      	asrs	r6, r1, #5
900187ec:	f001 0c1f 	and.w	ip, r1, #31
900187f0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
900187f4:	f004 041f 	and.w	r4, r4, #31
900187f8:	4576      	cmp	r6, lr
900187fa:	f8b2 a006 	ldrh.w	sl, [r2, #6]
900187fe:	9402      	str	r4, [sp, #8]
90018800:	9c04      	ldr	r4, [sp, #16]
90018802:	eba4 0403 	sub.w	r4, r4, r3
90018806:	d10a      	bne.n	9001881e <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90018808:	9b02      	ldr	r3, [sp, #8]
9001880a:	44a0      	add	r8, r4
9001880c:	449c      	add	ip, r3
9001880e:	f8a2 8004 	strh.w	r8, [r2, #4]
90018812:	fb04 a40c 	mla	r4, r4, ip, sl
90018816:	80d4      	strh	r4, [r2, #6]
90018818:	b013      	add	sp, #76	; 0x4c
9001881a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001881e:	9d05      	ldr	r5, [sp, #20]
90018820:	1a69      	subs	r1, r5, r1
90018822:	bf51      	iteee	pl
90018824:	f1cc 0520 	rsbpl	r5, ip, #32
90018828:	fb04 f40c 	mulmi.w	r4, r4, ip
9001882c:	4249      	negmi	r1, r1
9001882e:	2500      	movmi	r5, #0
90018830:	bf5d      	ittte	pl
90018832:	436c      	mulpl	r4, r5
90018834:	2520      	movpl	r5, #32
90018836:	f04f 0901 	movpl.w	r9, #1
9001883a:	f04f 39ff 	movmi.w	r9, #4294967295
9001883e:	9501      	str	r5, [sp, #4]
90018840:	9f01      	ldr	r7, [sp, #4]
90018842:	444e      	add	r6, r9
90018844:	fb94 f5f1 	sdiv	r5, r4, r1
90018848:	fb01 4415 	mls	r4, r1, r5, r4
9001884c:	44bc      	add	ip, r7
9001884e:	2c00      	cmp	r4, #0
90018850:	bfbc      	itt	lt
90018852:	f105 35ff 	addlt.w	r5, r5, #4294967295
90018856:	1864      	addlt	r4, r4, r1
90018858:	44a8      	add	r8, r5
9001885a:	fb05 ac0c 	mla	ip, r5, ip, sl
9001885e:	f8a2 8004 	strh.w	r8, [r2, #4]
90018862:	f8a2 c006 	strh.w	ip, [r2, #6]
90018866:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001886a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001886e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90018872:	ea58 0202 	orrs.w	r2, r8, r2
90018876:	d011      	beq.n	9001889c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90018878:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
9001887c:	f1b8 0f00 	cmp.w	r8, #0
90018880:	db0c      	blt.n	9001889c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90018882:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90018884:	4590      	cmp	r8, r2
90018886:	da09      	bge.n	9001889c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90018888:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
9001888c:	4590      	cmp	r8, r2
9001888e:	bf3c      	itt	cc
90018890:	f10c 0208 	addcc.w	r2, ip, #8
90018894:	6102      	strcc	r2, [r0, #16]
90018896:	f108 0201 	add.w	r2, r8, #1
9001889a:	6082      	str	r2, [r0, #8]
9001889c:	f8d0 c010 	ldr.w	ip, [r0, #16]
900188a0:	2700      	movs	r7, #0
900188a2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900188a6:	45b6      	cmp	lr, r6
900188a8:	f8ac 6000 	strh.w	r6, [ip]
900188ac:	442b      	add	r3, r5
900188ae:	f8ac 2002 	strh.w	r2, [ip, #2]
900188b2:	f8ac 7004 	strh.w	r7, [ip, #4]
900188b6:	f8ac 7006 	strh.w	r7, [ip, #6]
900188ba:	d04b      	beq.n	90018954 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
900188bc:	9f04      	ldr	r7, [sp, #16]
900188be:	1a64      	subs	r4, r4, r1
900188c0:	f04f 0a00 	mov.w	sl, #0
900188c4:	1aff      	subs	r7, r7, r3
900188c6:	443d      	add	r5, r7
900188c8:	016d      	lsls	r5, r5, #5
900188ca:	fb95 f8f1 	sdiv	r8, r5, r1
900188ce:	fb01 5518 	mls	r5, r1, r8, r5
900188d2:	2d00      	cmp	r5, #0
900188d4:	bfbc      	itt	lt
900188d6:	f108 38ff 	addlt.w	r8, r8, #4294967295
900188da:	186d      	addlt	r5, r5, r1
900188dc:	f108 0701 	add.w	r7, r8, #1
900188e0:	9703      	str	r7, [sp, #12]
900188e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900188e6:	1964      	adds	r4, r4, r5
900188e8:	444e      	add	r6, r9
900188ea:	bf54      	ite	pl
900188ec:	9f03      	ldrpl	r7, [sp, #12]
900188ee:	4647      	movmi	r7, r8
900188f0:	f8bc b004 	ldrh.w	fp, [ip, #4]
900188f4:	bf58      	it	pl
900188f6:	1a64      	subpl	r4, r4, r1
900188f8:	443b      	add	r3, r7
900188fa:	44bb      	add	fp, r7
900188fc:	f8ac b004 	strh.w	fp, [ip, #4]
90018900:	f8bc b006 	ldrh.w	fp, [ip, #6]
90018904:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90018908:	f8ac b006 	strh.w	fp, [ip, #6]
9001890c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018910:	f8bc b006 	ldrh.w	fp, [ip, #6]
90018914:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90018918:	ea5b 0707 	orrs.w	r7, fp, r7
9001891c:	d011      	beq.n	90018942 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001891e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90018922:	f1bb 0f00 	cmp.w	fp, #0
90018926:	db0c      	blt.n	90018942 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90018928:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001892a:	45bb      	cmp	fp, r7
9001892c:	da09      	bge.n	90018942 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001892e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90018932:	45bb      	cmp	fp, r7
90018934:	bf3c      	itt	cc
90018936:	f10c 0708 	addcc.w	r7, ip, #8
9001893a:	6107      	strcc	r7, [r0, #16]
9001893c:	f10b 0701 	add.w	r7, fp, #1
90018940:	6087      	str	r7, [r0, #8]
90018942:	6907      	ldr	r7, [r0, #16]
90018944:	45b6      	cmp	lr, r6
90018946:	803e      	strh	r6, [r7, #0]
90018948:	807a      	strh	r2, [r7, #2]
9001894a:	f8a7 a004 	strh.w	sl, [r7, #4]
9001894e:	f8a7 a006 	strh.w	sl, [r7, #6]
90018952:	d1c6      	bne.n	900188e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90018954:	9a04      	ldr	r2, [sp, #16]
90018956:	1ad3      	subs	r3, r2, r3
90018958:	6902      	ldr	r2, [r0, #16]
9001895a:	8891      	ldrh	r1, [r2, #4]
9001895c:	88d6      	ldrh	r6, [r2, #6]
9001895e:	4419      	add	r1, r3
90018960:	8091      	strh	r1, [r2, #4]
90018962:	9902      	ldr	r1, [sp, #8]
90018964:	f101 0c20 	add.w	ip, r1, #32
90018968:	9901      	ldr	r1, [sp, #4]
9001896a:	ebac 0c01 	sub.w	ip, ip, r1
9001896e:	fb03 630c 	mla	r3, r3, ip, r6
90018972:	80d3      	strh	r3, [r2, #6]
90018974:	e750      	b.n	90018818 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90018976:	9d05      	ldr	r5, [sp, #20]
90018978:	1aa2      	subs	r2, r4, r2
9001897a:	eba5 0501 	sub.w	r5, r5, r1
9001897e:	9202      	str	r2, [sp, #8]
90018980:	9508      	str	r5, [sp, #32]
90018982:	f140 8128 	bpl.w	90018bd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90018986:	9a03      	ldr	r2, [sp, #12]
90018988:	2a00      	cmp	r2, #0
9001898a:	f6ff af45 	blt.w	90018818 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001898e:	9a02      	ldr	r2, [sp, #8]
90018990:	f04f 34ff 	mov.w	r4, #4294967295
90018994:	4252      	negs	r2, r2
90018996:	940b      	str	r4, [sp, #44]	; 0x2c
90018998:	2400      	movs	r4, #0
9001899a:	9202      	str	r2, [sp, #8]
9001899c:	9a06      	ldr	r2, [sp, #24]
9001899e:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
900189a2:	9206      	str	r2, [sp, #24]
900189a4:	462a      	mov	r2, r5
900189a6:	435a      	muls	r2, r3
900189a8:	9401      	str	r4, [sp, #4]
900189aa:	9c02      	ldr	r4, [sp, #8]
900189ac:	9d02      	ldr	r5, [sp, #8]
900189ae:	fb92 f4f4 	sdiv	r4, r2, r4
900189b2:	fb05 2214 	mls	r2, r5, r4, r2
900189b6:	2a00      	cmp	r2, #0
900189b8:	9207      	str	r2, [sp, #28]
900189ba:	bfbc      	itt	lt
900189bc:	1952      	addlt	r2, r2, r5
900189be:	f104 34ff 	addlt.w	r4, r4, #4294967295
900189c2:	6905      	ldr	r5, [r0, #16]
900189c4:	bfb8      	it	lt
900189c6:	9207      	strlt	r2, [sp, #28]
900189c8:	eb04 0901 	add.w	r9, r4, r1
900189cc:	9a01      	ldr	r2, [sp, #4]
900189ce:	ea4f 1669 	mov.w	r6, r9, asr #5
900189d2:	429a      	cmp	r2, r3
900189d4:	f040 8111 	bne.w	90018bfa <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
900189d8:	f9b5 3000 	ldrsh.w	r3, [r5]
900189dc:	429e      	cmp	r6, r3
900189de:	d104      	bne.n	900189ea <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
900189e0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900189e4:	9a03      	ldr	r2, [sp, #12]
900189e6:	429a      	cmp	r2, r3
900189e8:	d01b      	beq.n	90018a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900189ea:	88ea      	ldrh	r2, [r5, #6]
900189ec:	88ab      	ldrh	r3, [r5, #4]
900189ee:	4313      	orrs	r3, r2
900189f0:	d010      	beq.n	90018a14 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900189f2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900189f6:	2a00      	cmp	r2, #0
900189f8:	db0c      	blt.n	90018a14 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900189fa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900189fc:	429a      	cmp	r2, r3
900189fe:	da09      	bge.n	90018a14 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90018a00:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90018a04:	429a      	cmp	r2, r3
90018a06:	f102 0201 	add.w	r2, r2, #1
90018a0a:	bf38      	it	cc
90018a0c:	3508      	addcc	r5, #8
90018a0e:	6082      	str	r2, [r0, #8]
90018a10:	bf38      	it	cc
90018a12:	6105      	strcc	r5, [r0, #16]
90018a14:	6903      	ldr	r3, [r0, #16]
90018a16:	9a03      	ldr	r2, [sp, #12]
90018a18:	801e      	strh	r6, [r3, #0]
90018a1a:	805a      	strh	r2, [r3, #2]
90018a1c:	2200      	movs	r2, #0
90018a1e:	809a      	strh	r2, [r3, #4]
90018a20:	80da      	strh	r2, [r3, #6]
90018a22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90018a24:	9a03      	ldr	r2, [sp, #12]
90018a26:	6901      	ldr	r1, [r0, #16]
90018a28:	441a      	add	r2, r3
90018a2a:	f9b1 3000 	ldrsh.w	r3, [r1]
90018a2e:	42b3      	cmp	r3, r6
90018a30:	d103      	bne.n	90018a3a <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90018a32:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90018a36:	429a      	cmp	r2, r3
90018a38:	d01a      	beq.n	90018a70 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90018a3a:	88cc      	ldrh	r4, [r1, #6]
90018a3c:	888b      	ldrh	r3, [r1, #4]
90018a3e:	4323      	orrs	r3, r4
90018a40:	d010      	beq.n	90018a64 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90018a42:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90018a46:	2c00      	cmp	r4, #0
90018a48:	db0c      	blt.n	90018a64 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90018a4a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90018a4c:	429c      	cmp	r4, r3
90018a4e:	da09      	bge.n	90018a64 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90018a50:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90018a54:	429c      	cmp	r4, r3
90018a56:	f104 0401 	add.w	r4, r4, #1
90018a5a:	bf38      	it	cc
90018a5c:	3108      	addcc	r1, #8
90018a5e:	6084      	str	r4, [r0, #8]
90018a60:	bf38      	it	cc
90018a62:	6101      	strcc	r1, [r0, #16]
90018a64:	6903      	ldr	r3, [r0, #16]
90018a66:	2100      	movs	r1, #0
90018a68:	801e      	strh	r6, [r3, #0]
90018a6a:	805a      	strh	r2, [r3, #2]
90018a6c:	8099      	strh	r1, [r3, #4]
90018a6e:	80d9      	strh	r1, [r3, #6]
90018a70:	9b06      	ldr	r3, [sp, #24]
90018a72:	4293      	cmp	r3, r2
90018a74:	f000 8082 	beq.w	90018b7c <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90018a78:	9b08      	ldr	r3, [sp, #32]
90018a7a:	9902      	ldr	r1, [sp, #8]
90018a7c:	015b      	lsls	r3, r3, #5
90018a7e:	9c02      	ldr	r4, [sp, #8]
90018a80:	fb93 f1f1 	sdiv	r1, r3, r1
90018a84:	fb04 3311 	mls	r3, r4, r1, r3
90018a88:	9103      	str	r1, [sp, #12]
90018a8a:	2b00      	cmp	r3, #0
90018a8c:	9308      	str	r3, [sp, #32]
90018a8e:	da04      	bge.n	90018a9a <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90018a90:	1e4b      	subs	r3, r1, #1
90018a92:	9303      	str	r3, [sp, #12]
90018a94:	9b08      	ldr	r3, [sp, #32]
90018a96:	4423      	add	r3, r4
90018a98:	9308      	str	r3, [sp, #32]
90018a9a:	9b07      	ldr	r3, [sp, #28]
90018a9c:	464f      	mov	r7, r9
90018a9e:	9902      	ldr	r1, [sp, #8]
90018aa0:	2600      	movs	r6, #0
90018aa2:	1a5b      	subs	r3, r3, r1
90018aa4:	9307      	str	r3, [sp, #28]
90018aa6:	9b01      	ldr	r3, [sp, #4]
90018aa8:	f1c3 0320 	rsb	r3, r3, #32
90018aac:	930e      	str	r3, [sp, #56]	; 0x38
90018aae:	990e      	ldr	r1, [sp, #56]	; 0x38
90018ab0:	9b01      	ldr	r3, [sp, #4]
90018ab2:	1a5b      	subs	r3, r3, r1
90018ab4:	930a      	str	r3, [sp, #40]	; 0x28
90018ab6:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90018aba:	185b      	adds	r3, r3, r1
90018abc:	bf58      	it	pl
90018abe:	9902      	ldrpl	r1, [sp, #8]
90018ac0:	9307      	str	r3, [sp, #28]
90018ac2:	bf57      	itett	pl
90018ac4:	1a5b      	subpl	r3, r3, r1
90018ac6:	9903      	ldrmi	r1, [sp, #12]
90018ac8:	9307      	strpl	r3, [sp, #28]
90018aca:	9b03      	ldrpl	r3, [sp, #12]
90018acc:	bf58      	it	pl
90018ace:	1c59      	addpl	r1, r3, #1
90018ad0:	2a00      	cmp	r2, #0
90018ad2:	4489      	add	r9, r1
90018ad4:	ea4f 1a69 	mov.w	sl, r9, asr #5
90018ad8:	db2e      	blt.n	90018b38 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90018ada:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90018adc:	4293      	cmp	r3, r2
90018ade:	dd2b      	ble.n	90018b38 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90018ae0:	9c01      	ldr	r4, [sp, #4]
90018ae2:	6905      	ldr	r5, [r0, #16]
90018ae4:	46a0      	mov	r8, r4
90018ae6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90018ae8:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90018aec:	45a0      	cmp	r8, r4
90018aee:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90018af2:	f040 814c 	bne.w	90018d8e <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90018af6:	f9b5 1000 	ldrsh.w	r1, [r5]
90018afa:	4551      	cmp	r1, sl
90018afc:	d103      	bne.n	90018b06 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90018afe:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90018b02:	4291      	cmp	r1, r2
90018b04:	d018      	beq.n	90018b38 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90018b06:	ea5c 010e 	orrs.w	r1, ip, lr
90018b0a:	d00f      	beq.n	90018b2c <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90018b0c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90018b10:	2900      	cmp	r1, #0
90018b12:	db0b      	blt.n	90018b2c <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90018b14:	428b      	cmp	r3, r1
90018b16:	dd09      	ble.n	90018b2c <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90018b18:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90018b1c:	4299      	cmp	r1, r3
90018b1e:	f101 0101 	add.w	r1, r1, #1
90018b22:	bf38      	it	cc
90018b24:	3508      	addcc	r5, #8
90018b26:	6081      	str	r1, [r0, #8]
90018b28:	bf38      	it	cc
90018b2a:	6105      	strcc	r5, [r0, #16]
90018b2c:	6903      	ldr	r3, [r0, #16]
90018b2e:	f8a3 a000 	strh.w	sl, [r3]
90018b32:	805a      	strh	r2, [r3, #2]
90018b34:	809e      	strh	r6, [r3, #4]
90018b36:	80de      	strh	r6, [r3, #6]
90018b38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90018b3a:	6901      	ldr	r1, [r0, #16]
90018b3c:	441a      	add	r2, r3
90018b3e:	88cc      	ldrh	r4, [r1, #6]
90018b40:	888b      	ldrh	r3, [r1, #4]
90018b42:	4323      	orrs	r3, r4
90018b44:	d010      	beq.n	90018b68 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90018b46:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90018b4a:	2c00      	cmp	r4, #0
90018b4c:	db0c      	blt.n	90018b68 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90018b4e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90018b50:	429c      	cmp	r4, r3
90018b52:	da09      	bge.n	90018b68 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90018b54:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90018b58:	429c      	cmp	r4, r3
90018b5a:	f104 0401 	add.w	r4, r4, #1
90018b5e:	bf38      	it	cc
90018b60:	3108      	addcc	r1, #8
90018b62:	6084      	str	r4, [r0, #8]
90018b64:	bf38      	it	cc
90018b66:	6101      	strcc	r1, [r0, #16]
90018b68:	6903      	ldr	r3, [r0, #16]
90018b6a:	464f      	mov	r7, r9
90018b6c:	f8a3 a000 	strh.w	sl, [r3]
90018b70:	805a      	strh	r2, [r3, #2]
90018b72:	809e      	strh	r6, [r3, #4]
90018b74:	80de      	strh	r6, [r3, #6]
90018b76:	9b06      	ldr	r3, [sp, #24]
90018b78:	4293      	cmp	r3, r2
90018b7a:	d19c      	bne.n	90018ab6 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90018b7c:	9b01      	ldr	r3, [sp, #4]
90018b7e:	6907      	ldr	r7, [r0, #16]
90018b80:	f1c3 0620 	rsb	r6, r3, #32
90018b84:	9b05      	ldr	r3, [sp, #20]
90018b86:	ea4f 1e63 	mov.w	lr, r3, asr #5
90018b8a:	9b04      	ldr	r3, [sp, #16]
90018b8c:	429e      	cmp	r6, r3
90018b8e:	f040 81c7 	bne.w	90018f20 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90018b92:	f9b7 3000 	ldrsh.w	r3, [r7]
90018b96:	459e      	cmp	lr, r3
90018b98:	d104      	bne.n	90018ba4 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90018b9a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90018b9e:	429a      	cmp	r2, r3
90018ba0:	f43f ae3a 	beq.w	90018818 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90018ba4:	88f9      	ldrh	r1, [r7, #6]
90018ba6:	88bb      	ldrh	r3, [r7, #4]
90018ba8:	430b      	orrs	r3, r1
90018baa:	d010      	beq.n	90018bce <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90018bac:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90018bb0:	2b00      	cmp	r3, #0
90018bb2:	db0c      	blt.n	90018bce <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90018bb4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90018bb6:	428b      	cmp	r3, r1
90018bb8:	da09      	bge.n	90018bce <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90018bba:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90018bbe:	428b      	cmp	r3, r1
90018bc0:	f103 0301 	add.w	r3, r3, #1
90018bc4:	bf38      	it	cc
90018bc6:	3708      	addcc	r7, #8
90018bc8:	6083      	str	r3, [r0, #8]
90018bca:	bf38      	it	cc
90018bcc:	6107      	strcc	r7, [r0, #16]
90018bce:	6903      	ldr	r3, [r0, #16]
90018bd0:	f8a3 e000 	strh.w	lr, [r3]
90018bd4:	e603      	b.n	900187de <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90018bd6:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90018bd8:	9c03      	ldr	r4, [sp, #12]
90018bda:	42a2      	cmp	r2, r4
90018bdc:	f6ff ae1c 	blt.w	90018818 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90018be0:	9c06      	ldr	r4, [sp, #24]
90018be2:	42a2      	cmp	r2, r4
90018be4:	9c08      	ldr	r4, [sp, #32]
90018be6:	bfbc      	itt	lt
90018be8:	3201      	addlt	r2, #1
90018bea:	9206      	strlt	r2, [sp, #24]
90018bec:	f1c3 0220 	rsb	r2, r3, #32
90018bf0:	4362      	muls	r2, r4
90018bf2:	2401      	movs	r4, #1
90018bf4:	940b      	str	r4, [sp, #44]	; 0x2c
90018bf6:	2420      	movs	r4, #32
90018bf8:	e6d6      	b.n	900189a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90018bfa:	ea4f 1861 	mov.w	r8, r1, asr #5
90018bfe:	f009 021f 	and.w	r2, r9, #31
90018c02:	f001 011f 	and.w	r1, r1, #31
90018c06:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90018c0a:	920c      	str	r2, [sp, #48]	; 0x30
90018c0c:	45b0      	cmp	r8, r6
90018c0e:	9a01      	ldr	r2, [sp, #4]
90018c10:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90018c14:	eba2 0203 	sub.w	r2, r2, r3
90018c18:	d108      	bne.n	90018c2c <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90018c1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90018c1c:	4496      	add	lr, r2
90018c1e:	4419      	add	r1, r3
90018c20:	f8a5 e004 	strh.w	lr, [r5, #4]
90018c24:	fb02 a101 	mla	r1, r2, r1, sl
90018c28:	80e9      	strh	r1, [r5, #6]
90018c2a:	e6fa      	b.n	90018a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90018c2c:	2c00      	cmp	r4, #0
90018c2e:	f2c0 80a7 	blt.w	90018d80 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90018c32:	2701      	movs	r7, #1
90018c34:	f1c1 0c20 	rsb	ip, r1, #32
90018c38:	970a      	str	r7, [sp, #40]	; 0x28
90018c3a:	2720      	movs	r7, #32
90018c3c:	fb02 f20c 	mul.w	r2, r2, ip
90018c40:	9709      	str	r7, [sp, #36]	; 0x24
90018c42:	9f09      	ldr	r7, [sp, #36]	; 0x24
90018c44:	fb92 fcf4 	sdiv	ip, r2, r4
90018c48:	fb04 221c 	mls	r2, r4, ip, r2
90018c4c:	4439      	add	r1, r7
90018c4e:	2a00      	cmp	r2, #0
90018c50:	bfbc      	itt	lt
90018c52:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90018c56:	1912      	addlt	r2, r2, r4
90018c58:	fb0c a101 	mla	r1, ip, r1, sl
90018c5c:	44e6      	add	lr, ip
90018c5e:	80e9      	strh	r1, [r5, #6]
90018c60:	990a      	ldr	r1, [sp, #40]	; 0x28
90018c62:	f8a5 e004 	strh.w	lr, [r5, #4]
90018c66:	eb08 0501 	add.w	r5, r8, r1
90018c6a:	6901      	ldr	r1, [r0, #16]
90018c6c:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90018c70:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90018c74:	ea58 070e 	orrs.w	r7, r8, lr
90018c78:	d010      	beq.n	90018c9c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90018c7a:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90018c7e:	f1be 0f00 	cmp.w	lr, #0
90018c82:	db0b      	blt.n	90018c9c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90018c84:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90018c86:	45be      	cmp	lr, r7
90018c88:	da08      	bge.n	90018c9c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90018c8a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90018c8e:	45be      	cmp	lr, r7
90018c90:	bf3c      	itt	cc
90018c92:	3108      	addcc	r1, #8
90018c94:	6101      	strcc	r1, [r0, #16]
90018c96:	f10e 0101 	add.w	r1, lr, #1
90018c9a:	6081      	str	r1, [r0, #8]
90018c9c:	6901      	ldr	r1, [r0, #16]
90018c9e:	f04f 0e00 	mov.w	lr, #0
90018ca2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90018ca6:	42ae      	cmp	r6, r5
90018ca8:	800d      	strh	r5, [r1, #0]
90018caa:	4463      	add	r3, ip
90018cac:	f8a1 8002 	strh.w	r8, [r1, #2]
90018cb0:	f8a1 e004 	strh.w	lr, [r1, #4]
90018cb4:	f8a1 e006 	strh.w	lr, [r1, #6]
90018cb8:	d053      	beq.n	90018d62 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90018cba:	9901      	ldr	r1, [sp, #4]
90018cbc:	1b12      	subs	r2, r2, r4
90018cbe:	1ac9      	subs	r1, r1, r3
90018cc0:	4461      	add	r1, ip
90018cc2:	0149      	lsls	r1, r1, #5
90018cc4:	fb91 fef4 	sdiv	lr, r1, r4
90018cc8:	fb04 111e 	mls	r1, r4, lr, r1
90018ccc:	2900      	cmp	r1, #0
90018cce:	bfbc      	itt	lt
90018cd0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90018cd4:	1909      	addlt	r1, r1, r4
90018cd6:	f10e 0701 	add.w	r7, lr, #1
90018cda:	970d      	str	r7, [sp, #52]	; 0x34
90018cdc:	f8d0 a010 	ldr.w	sl, [r0, #16]
90018ce0:	1852      	adds	r2, r2, r1
90018ce2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90018ce4:	bf54      	ite	pl
90018ce6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
90018cea:	46f4      	movmi	ip, lr
90018cec:	f8ba b004 	ldrh.w	fp, [sl, #4]
90018cf0:	bf58      	it	pl
90018cf2:	1b12      	subpl	r2, r2, r4
90018cf4:	4463      	add	r3, ip
90018cf6:	443d      	add	r5, r7
90018cf8:	44e3      	add	fp, ip
90018cfa:	f8aa b004 	strh.w	fp, [sl, #4]
90018cfe:	f8ba b006 	ldrh.w	fp, [sl, #6]
90018d02:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90018d06:	f8aa b006 	strh.w	fp, [sl, #6]
90018d0a:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018d0e:	f8bc b006 	ldrh.w	fp, [ip, #6]
90018d12:	f8bc a004 	ldrh.w	sl, [ip, #4]
90018d16:	ea5b 070a 	orrs.w	r7, fp, sl
90018d1a:	d014      	beq.n	90018d46 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90018d1c:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90018d20:	f1ba 0f00 	cmp.w	sl, #0
90018d24:	db0f      	blt.n	90018d46 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90018d26:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90018d28:	45ba      	cmp	sl, r7
90018d2a:	da0c      	bge.n	90018d46 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90018d2c:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90018d30:	45ba      	cmp	sl, r7
90018d32:	f10a 0a01 	add.w	sl, sl, #1
90018d36:	bf38      	it	cc
90018d38:	f10c 0c08 	addcc.w	ip, ip, #8
90018d3c:	f8c0 a008 	str.w	sl, [r0, #8]
90018d40:	bf38      	it	cc
90018d42:	f8c0 c010 	strcc.w	ip, [r0, #16]
90018d46:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018d4a:	f04f 0700 	mov.w	r7, #0
90018d4e:	42ae      	cmp	r6, r5
90018d50:	f8ac 5000 	strh.w	r5, [ip]
90018d54:	f8ac 8002 	strh.w	r8, [ip, #2]
90018d58:	f8ac 7004 	strh.w	r7, [ip, #4]
90018d5c:	f8ac 7006 	strh.w	r7, [ip, #6]
90018d60:	d1bc      	bne.n	90018cdc <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90018d62:	6904      	ldr	r4, [r0, #16]
90018d64:	9a01      	ldr	r2, [sp, #4]
90018d66:	990c      	ldr	r1, [sp, #48]	; 0x30
90018d68:	1ad3      	subs	r3, r2, r3
90018d6a:	88a2      	ldrh	r2, [r4, #4]
90018d6c:	3120      	adds	r1, #32
90018d6e:	441a      	add	r2, r3
90018d70:	80a2      	strh	r2, [r4, #4]
90018d72:	9a09      	ldr	r2, [sp, #36]	; 0x24
90018d74:	1a89      	subs	r1, r1, r2
90018d76:	88e2      	ldrh	r2, [r4, #6]
90018d78:	fb03 2301 	mla	r3, r3, r1, r2
90018d7c:	80e3      	strh	r3, [r4, #6]
90018d7e:	e650      	b.n	90018a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90018d80:	f04f 37ff 	mov.w	r7, #4294967295
90018d84:	434a      	muls	r2, r1
90018d86:	4264      	negs	r4, r4
90018d88:	970a      	str	r7, [sp, #40]	; 0x28
90018d8a:	2700      	movs	r7, #0
90018d8c:	e758      	b.n	90018c40 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90018d8e:	ea4f 1867 	mov.w	r8, r7, asr #5
90018d92:	f009 031f 	and.w	r3, r9, #31
90018d96:	f007 071f 	and.w	r7, r7, #31
90018d9a:	fa1f fc8c 	uxth.w	ip, ip
90018d9e:	45d0      	cmp	r8, sl
90018da0:	930f      	str	r3, [sp, #60]	; 0x3c
90018da2:	fa1f fe8e 	uxth.w	lr, lr
90018da6:	d10a      	bne.n	90018dbe <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90018da8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90018daa:	449c      	add	ip, r3
90018dac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90018dae:	441f      	add	r7, r3
90018db0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90018db2:	f8a5 c004 	strh.w	ip, [r5, #4]
90018db6:	fb03 e707 	mla	r7, r3, r7, lr
90018dba:	80ef      	strh	r7, [r5, #6]
90018dbc:	e6bc      	b.n	90018b38 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90018dbe:	2900      	cmp	r1, #0
90018dc0:	f2c0 80a6 	blt.w	90018f10 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90018dc4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90018dc6:	f1c7 0320 	rsb	r3, r7, #32
90018dca:	4363      	muls	r3, r4
90018dcc:	2401      	movs	r4, #1
90018dce:	940d      	str	r4, [sp, #52]	; 0x34
90018dd0:	2420      	movs	r4, #32
90018dd2:	940c      	str	r4, [sp, #48]	; 0x30
90018dd4:	fb93 f4f1 	sdiv	r4, r3, r1
90018dd8:	fb01 3b14 	mls	fp, r1, r4, r3
90018ddc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90018dde:	f1bb 0f00 	cmp.w	fp, #0
90018de2:	441f      	add	r7, r3
90018de4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90018de6:	bfbc      	itt	lt
90018de8:	f104 34ff 	addlt.w	r4, r4, #4294967295
90018dec:	448b      	addlt	fp, r1
90018dee:	fb04 e707 	mla	r7, r4, r7, lr
90018df2:	44a4      	add	ip, r4
90018df4:	80ef      	strh	r7, [r5, #6]
90018df6:	f8a5 c004 	strh.w	ip, [r5, #4]
90018dfa:	eb08 0503 	add.w	r5, r8, r3
90018dfe:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018e02:	f8bc e006 	ldrh.w	lr, [ip, #6]
90018e06:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90018e0a:	ea5e 0307 	orrs.w	r3, lr, r7
90018e0e:	d011      	beq.n	90018e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90018e10:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90018e14:	f1be 0f00 	cmp.w	lr, #0
90018e18:	db0c      	blt.n	90018e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90018e1a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90018e1c:	45be      	cmp	lr, r7
90018e1e:	da09      	bge.n	90018e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90018e20:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90018e24:	45be      	cmp	lr, r7
90018e26:	bf3c      	itt	cc
90018e28:	f10c 0708 	addcc.w	r7, ip, #8
90018e2c:	6107      	strcc	r7, [r0, #16]
90018e2e:	f10e 0701 	add.w	r7, lr, #1
90018e32:	6087      	str	r7, [r0, #8]
90018e34:	6907      	ldr	r7, [r0, #16]
90018e36:	b213      	sxth	r3, r2
90018e38:	4555      	cmp	r5, sl
90018e3a:	9310      	str	r3, [sp, #64]	; 0x40
90018e3c:	807b      	strh	r3, [r7, #2]
90018e3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018e40:	803d      	strh	r5, [r7, #0]
90018e42:	80be      	strh	r6, [r7, #4]
90018e44:	eb04 0c03 	add.w	ip, r4, r3
90018e48:	80fe      	strh	r6, [r7, #6]
90018e4a:	d050      	beq.n	90018eee <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90018e4c:	9b01      	ldr	r3, [sp, #4]
90018e4e:	eba3 070c 	sub.w	r7, r3, ip
90018e52:	ebab 0301 	sub.w	r3, fp, r1
90018e56:	443c      	add	r4, r7
90018e58:	9309      	str	r3, [sp, #36]	; 0x24
90018e5a:	0164      	lsls	r4, r4, #5
90018e5c:	fb94 f8f1 	sdiv	r8, r4, r1
90018e60:	fb01 4418 	mls	r4, r1, r8, r4
90018e64:	2c00      	cmp	r4, #0
90018e66:	bfbc      	itt	lt
90018e68:	f108 38ff 	addlt.w	r8, r8, #4294967295
90018e6c:	1864      	addlt	r4, r4, r1
90018e6e:	f108 0701 	add.w	r7, r8, #1
90018e72:	9711      	str	r7, [sp, #68]	; 0x44
90018e74:	9b09      	ldr	r3, [sp, #36]	; 0x24
90018e76:	f8d0 e010 	ldr.w	lr, [r0, #16]
90018e7a:	191b      	adds	r3, r3, r4
90018e7c:	f8be b004 	ldrh.w	fp, [lr, #4]
90018e80:	bf54      	ite	pl
90018e82:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
90018e84:	4647      	movmi	r7, r8
90018e86:	9309      	str	r3, [sp, #36]	; 0x24
90018e88:	bf58      	it	pl
90018e8a:	1a5b      	subpl	r3, r3, r1
90018e8c:	44bb      	add	fp, r7
90018e8e:	44bc      	add	ip, r7
90018e90:	bf58      	it	pl
90018e92:	9309      	strpl	r3, [sp, #36]	; 0x24
90018e94:	f8ae b004 	strh.w	fp, [lr, #4]
90018e98:	f8be b006 	ldrh.w	fp, [lr, #6]
90018e9c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90018ea0:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90018ea2:	f8ae b006 	strh.w	fp, [lr, #6]
90018ea6:	443d      	add	r5, r7
90018ea8:	f8d0 e010 	ldr.w	lr, [r0, #16]
90018eac:	f8be b006 	ldrh.w	fp, [lr, #6]
90018eb0:	f8be 7004 	ldrh.w	r7, [lr, #4]
90018eb4:	ea5b 0307 	orrs.w	r3, fp, r7
90018eb8:	d011      	beq.n	90018ede <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90018eba:	f9be b002 	ldrsh.w	fp, [lr, #2]
90018ebe:	f1bb 0f00 	cmp.w	fp, #0
90018ec2:	db0c      	blt.n	90018ede <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90018ec4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90018ec6:	45bb      	cmp	fp, r7
90018ec8:	da09      	bge.n	90018ede <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90018eca:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90018ece:	45bb      	cmp	fp, r7
90018ed0:	bf3c      	itt	cc
90018ed2:	f10e 0708 	addcc.w	r7, lr, #8
90018ed6:	6107      	strcc	r7, [r0, #16]
90018ed8:	f10b 0701 	add.w	r7, fp, #1
90018edc:	6087      	str	r7, [r0, #8]
90018ede:	6907      	ldr	r7, [r0, #16]
90018ee0:	4555      	cmp	r5, sl
90018ee2:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018ee4:	803d      	strh	r5, [r7, #0]
90018ee6:	807b      	strh	r3, [r7, #2]
90018ee8:	80be      	strh	r6, [r7, #4]
90018eea:	80fe      	strh	r6, [r7, #6]
90018eec:	d1c2      	bne.n	90018e74 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90018eee:	9b01      	ldr	r3, [sp, #4]
90018ef0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90018ef2:	eba3 0c0c 	sub.w	ip, r3, ip
90018ef6:	6903      	ldr	r3, [r0, #16]
90018ef8:	3720      	adds	r7, #32
90018efa:	8899      	ldrh	r1, [r3, #4]
90018efc:	4461      	add	r1, ip
90018efe:	8099      	strh	r1, [r3, #4]
90018f00:	990c      	ldr	r1, [sp, #48]	; 0x30
90018f02:	1a7f      	subs	r7, r7, r1
90018f04:	88d9      	ldrh	r1, [r3, #6]
90018f06:	fb0c 1c07 	mla	ip, ip, r7, r1
90018f0a:	f8a3 c006 	strh.w	ip, [r3, #6]
90018f0e:	e613      	b.n	90018b38 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90018f10:	f04f 34ff 	mov.w	r4, #4294967295
90018f14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90018f16:	4249      	negs	r1, r1
90018f18:	940d      	str	r4, [sp, #52]	; 0x34
90018f1a:	2400      	movs	r4, #0
90018f1c:	437b      	muls	r3, r7
90018f1e:	e758      	b.n	90018dd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90018f20:	9905      	ldr	r1, [sp, #20]
90018f22:	ea4f 1b69 	mov.w	fp, r9, asr #5
90018f26:	f009 0c1f 	and.w	ip, r9, #31
90018f2a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90018f2e:	f001 011f 	and.w	r1, r1, #31
90018f32:	45f3      	cmp	fp, lr
90018f34:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90018f38:	9102      	str	r1, [sp, #8]
90018f3a:	9904      	ldr	r1, [sp, #16]
90018f3c:	eba1 0406 	sub.w	r4, r1, r6
90018f40:	d108      	bne.n	90018f54 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90018f42:	9b02      	ldr	r3, [sp, #8]
90018f44:	44a0      	add	r8, r4
90018f46:	449c      	add	ip, r3
90018f48:	f8a7 8004 	strh.w	r8, [r7, #4]
90018f4c:	fb04 a40c 	mla	r4, r4, ip, sl
90018f50:	80fc      	strh	r4, [r7, #6]
90018f52:	e461      	b.n	90018818 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90018f54:	9905      	ldr	r1, [sp, #20]
90018f56:	ebb1 0109 	subs.w	r1, r1, r9
90018f5a:	bf51      	iteee	pl
90018f5c:	f1cc 0520 	rsbpl	r5, ip, #32
90018f60:	fb04 f40c 	mulmi.w	r4, r4, ip
90018f64:	4249      	negmi	r1, r1
90018f66:	2500      	movmi	r5, #0
90018f68:	bf5d      	ittte	pl
90018f6a:	436c      	mulpl	r4, r5
90018f6c:	2520      	movpl	r5, #32
90018f6e:	f04f 0901 	movpl.w	r9, #1
90018f72:	f04f 39ff 	movmi.w	r9, #4294967295
90018f76:	9501      	str	r5, [sp, #4]
90018f78:	9b01      	ldr	r3, [sp, #4]
90018f7a:	fb94 f5f1 	sdiv	r5, r4, r1
90018f7e:	fb01 4415 	mls	r4, r1, r5, r4
90018f82:	449c      	add	ip, r3
90018f84:	eb0b 0309 	add.w	r3, fp, r9
90018f88:	2c00      	cmp	r4, #0
90018f8a:	bfbc      	itt	lt
90018f8c:	f105 35ff 	addlt.w	r5, r5, #4294967295
90018f90:	1864      	addlt	r4, r4, r1
90018f92:	44a8      	add	r8, r5
90018f94:	fb05 ac0c 	mla	ip, r5, ip, sl
90018f98:	f8a7 8004 	strh.w	r8, [r7, #4]
90018f9c:	f8a7 c006 	strh.w	ip, [r7, #6]
90018fa0:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018fa4:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90018fa8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90018fac:	ea58 0707 	orrs.w	r7, r8, r7
90018fb0:	d011      	beq.n	90018fd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90018fb2:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90018fb6:	f1b8 0f00 	cmp.w	r8, #0
90018fba:	db0c      	blt.n	90018fd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90018fbc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90018fbe:	45b8      	cmp	r8, r7
90018fc0:	da09      	bge.n	90018fd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90018fc2:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90018fc6:	45b8      	cmp	r8, r7
90018fc8:	bf3c      	itt	cc
90018fca:	f10c 0708 	addcc.w	r7, ip, #8
90018fce:	6107      	strcc	r7, [r0, #16]
90018fd0:	f108 0701 	add.w	r7, r8, #1
90018fd4:	6087      	str	r7, [r0, #8]
90018fd6:	6907      	ldr	r7, [r0, #16]
90018fd8:	f04f 0c00 	mov.w	ip, #0
90018fdc:	b212      	sxth	r2, r2
90018fde:	459e      	cmp	lr, r3
90018fe0:	803b      	strh	r3, [r7, #0]
90018fe2:	442e      	add	r6, r5
90018fe4:	807a      	strh	r2, [r7, #2]
90018fe6:	f8a7 c004 	strh.w	ip, [r7, #4]
90018fea:	f8a7 c006 	strh.w	ip, [r7, #6]
90018fee:	d04b      	beq.n	90019088 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90018ff0:	9f04      	ldr	r7, [sp, #16]
90018ff2:	1a64      	subs	r4, r4, r1
90018ff4:	f04f 0a00 	mov.w	sl, #0
90018ff8:	1bbf      	subs	r7, r7, r6
90018ffa:	443d      	add	r5, r7
90018ffc:	016d      	lsls	r5, r5, #5
90018ffe:	fb95 f8f1 	sdiv	r8, r5, r1
90019002:	fb01 5518 	mls	r5, r1, r8, r5
90019006:	4565      	cmp	r5, ip
90019008:	bfbc      	itt	lt
9001900a:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001900e:	186d      	addlt	r5, r5, r1
90019010:	f108 0701 	add.w	r7, r8, #1
90019014:	9703      	str	r7, [sp, #12]
90019016:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001901a:	1964      	adds	r4, r4, r5
9001901c:	444b      	add	r3, r9
9001901e:	bf54      	ite	pl
90019020:	9f03      	ldrpl	r7, [sp, #12]
90019022:	4647      	movmi	r7, r8
90019024:	f8bc b004 	ldrh.w	fp, [ip, #4]
90019028:	bf58      	it	pl
9001902a:	1a64      	subpl	r4, r4, r1
9001902c:	443e      	add	r6, r7
9001902e:	44bb      	add	fp, r7
90019030:	f8ac b004 	strh.w	fp, [ip, #4]
90019034:	f8bc b006 	ldrh.w	fp, [ip, #6]
90019038:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
9001903c:	f8ac b006 	strh.w	fp, [ip, #6]
90019040:	f8d0 c010 	ldr.w	ip, [r0, #16]
90019044:	f8bc b006 	ldrh.w	fp, [ip, #6]
90019048:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001904c:	ea5b 0707 	orrs.w	r7, fp, r7
90019050:	d011      	beq.n	90019076 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90019052:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90019056:	f1bb 0f00 	cmp.w	fp, #0
9001905a:	db0c      	blt.n	90019076 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001905c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001905e:	45bb      	cmp	fp, r7
90019060:	da09      	bge.n	90019076 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90019062:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90019066:	45bb      	cmp	fp, r7
90019068:	bf3c      	itt	cc
9001906a:	f10c 0708 	addcc.w	r7, ip, #8
9001906e:	6107      	strcc	r7, [r0, #16]
90019070:	f10b 0701 	add.w	r7, fp, #1
90019074:	6087      	str	r7, [r0, #8]
90019076:	6907      	ldr	r7, [r0, #16]
90019078:	459e      	cmp	lr, r3
9001907a:	803b      	strh	r3, [r7, #0]
9001907c:	807a      	strh	r2, [r7, #2]
9001907e:	f8a7 a004 	strh.w	sl, [r7, #4]
90019082:	f8a7 a006 	strh.w	sl, [r7, #6]
90019086:	d1c6      	bne.n	90019016 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90019088:	9b04      	ldr	r3, [sp, #16]
9001908a:	1b9e      	subs	r6, r3, r6
9001908c:	6903      	ldr	r3, [r0, #16]
9001908e:	889a      	ldrh	r2, [r3, #4]
90019090:	4432      	add	r2, r6
90019092:	809a      	strh	r2, [r3, #4]
90019094:	9a02      	ldr	r2, [sp, #8]
90019096:	f102 0c20 	add.w	ip, r2, #32
9001909a:	9a01      	ldr	r2, [sp, #4]
9001909c:	ebac 0c02 	sub.w	ip, ip, r2
900190a0:	88da      	ldrh	r2, [r3, #6]
900190a2:	fb06 260c 	mla	r6, r6, ip, r2
900190a6:	80de      	strh	r6, [r3, #6]
900190a8:	f7ff bbb6 	b.w	90018818 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

900190ac <_ZN8touchgfx7Outline6lineToEii>:
900190ac:	6a43      	ldr	r3, [r0, #36]	; 0x24
900190ae:	079b      	lsls	r3, r3, #30
900190b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900190b2:	460e      	mov	r6, r1
900190b4:	4615      	mov	r5, r2
900190b6:	d511      	bpl.n	900190dc <_ZN8touchgfx7Outline6lineToEii+0x30>
900190b8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
900190bc:	ea86 0701 	eor.w	r7, r6, r1
900190c0:	ea85 0302 	eor.w	r3, r5, r2
900190c4:	433b      	orrs	r3, r7
900190c6:	d009      	beq.n	900190dc <_ZN8touchgfx7Outline6lineToEii+0x30>
900190c8:	4633      	mov	r3, r6
900190ca:	9500      	str	r5, [sp, #0]
900190cc:	f7ff fb4c 	bl	90018768 <_ZN8touchgfx7Outline10renderLineEiiii>
900190d0:	6a43      	ldr	r3, [r0, #36]	; 0x24
900190d2:	f043 0301 	orr.w	r3, r3, #1
900190d6:	e9c0 6505 	strd	r6, r5, [r0, #20]
900190da:	6243      	str	r3, [r0, #36]	; 0x24
900190dc:	b003      	add	sp, #12
900190de:	bdf0      	pop	{r4, r5, r6, r7, pc}

900190e0 <_ZN8touchgfx7Outline6moveToEii>:
900190e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900190e2:	6a43      	ldr	r3, [r0, #36]	; 0x24
900190e4:	4615      	mov	r5, r2
900190e6:	4604      	mov	r4, r0
900190e8:	460e      	mov	r6, r1
900190ea:	079a      	lsls	r2, r3, #30
900190ec:	d401      	bmi.n	900190f2 <_ZN8touchgfx7Outline6moveToEii+0x12>
900190ee:	f7ff fb07 	bl	90018700 <_ZN8touchgfx7Outline5resetEv>
900190f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
900190f4:	07db      	lsls	r3, r3, #31
900190f6:	d504      	bpl.n	90019102 <_ZN8touchgfx7Outline6moveToEii+0x22>
900190f8:	4620      	mov	r0, r4
900190fa:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
900190fe:	f7ff ffd5 	bl	900190ac <_ZN8touchgfx7Outline6lineToEii>
90019102:	6923      	ldr	r3, [r4, #16]
90019104:	1170      	asrs	r0, r6, #5
90019106:	1169      	asrs	r1, r5, #5
90019108:	f9b3 2000 	ldrsh.w	r2, [r3]
9001910c:	4290      	cmp	r0, r2
9001910e:	d103      	bne.n	90019118 <_ZN8touchgfx7Outline6moveToEii+0x38>
90019110:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90019114:	4291      	cmp	r1, r2
90019116:	d01a      	beq.n	9001914e <_ZN8touchgfx7Outline6moveToEii+0x6e>
90019118:	88df      	ldrh	r7, [r3, #6]
9001911a:	889a      	ldrh	r2, [r3, #4]
9001911c:	433a      	orrs	r2, r7
9001911e:	d010      	beq.n	90019142 <_ZN8touchgfx7Outline6moveToEii+0x62>
90019120:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90019124:	2a00      	cmp	r2, #0
90019126:	db0c      	blt.n	90019142 <_ZN8touchgfx7Outline6moveToEii+0x62>
90019128:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
9001912a:	42ba      	cmp	r2, r7
9001912c:	da09      	bge.n	90019142 <_ZN8touchgfx7Outline6moveToEii+0x62>
9001912e:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90019132:	42ba      	cmp	r2, r7
90019134:	f102 0201 	add.w	r2, r2, #1
90019138:	bf38      	it	cc
9001913a:	3308      	addcc	r3, #8
9001913c:	60a2      	str	r2, [r4, #8]
9001913e:	bf38      	it	cc
90019140:	6123      	strcc	r3, [r4, #16]
90019142:	6923      	ldr	r3, [r4, #16]
90019144:	2200      	movs	r2, #0
90019146:	8018      	strh	r0, [r3, #0]
90019148:	8059      	strh	r1, [r3, #2]
9001914a:	809a      	strh	r2, [r3, #4]
9001914c:	80da      	strh	r2, [r3, #6]
9001914e:	6166      	str	r6, [r4, #20]
90019150:	6225      	str	r5, [r4, #32]
90019152:	e9c4 5606 	strd	r5, r6, [r4, #24]
90019156:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90019158 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90019158:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001915c:	b0d0      	sub	sp, #320	; 0x140
9001915e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90019162:	466c      	mov	r4, sp
90019164:	4627      	mov	r7, r4
90019166:	1a0d      	subs	r5, r1, r0
90019168:	f100 0308 	add.w	r3, r0, #8
9001916c:	2d48      	cmp	r5, #72	; 0x48
9001916e:	f340 80d5 	ble.w	9001931c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90019172:	112d      	asrs	r5, r5, #4
90019174:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90019178:	f9b0 9000 	ldrsh.w	r9, [r0]
9001917c:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90019180:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90019184:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90019188:	6816      	ldr	r6, [r2, #0]
9001918a:	6006      	str	r6, [r0, #0]
9001918c:	6856      	ldr	r6, [r2, #4]
9001918e:	6046      	str	r6, [r0, #4]
90019190:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90019194:	f8a2 8002 	strh.w	r8, [r2, #2]
90019198:	f8a2 e004 	strh.w	lr, [r2, #4]
9001919c:	f8a2 c006 	strh.w	ip, [r2, #6]
900191a0:	f1a1 0208 	sub.w	r2, r1, #8
900191a4:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900191a8:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
900191ac:	4565      	cmp	r5, ip
900191ae:	db06      	blt.n	900191be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
900191b0:	d119      	bne.n	900191e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900191b2:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
900191b6:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
900191ba:	42ae      	cmp	r6, r5
900191bc:	dd13      	ble.n	900191e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900191be:	460e      	mov	r6, r1
900191c0:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
900191c4:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
900191c8:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900191cc:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
900191d0:	601d      	str	r5, [r3, #0]
900191d2:	6875      	ldr	r5, [r6, #4]
900191d4:	605d      	str	r5, [r3, #4]
900191d6:	f821 9c08 	strh.w	r9, [r1, #-8]
900191da:	f821 cc06 	strh.w	ip, [r1, #-6]
900191de:	f821 8c04 	strh.w	r8, [r1, #-4]
900191e2:	f821 ec02 	strh.w	lr, [r1, #-2]
900191e6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900191ea:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
900191ee:	42ae      	cmp	r6, r5
900191f0:	db06      	blt.n	90019200 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
900191f2:	d116      	bne.n	90019222 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900191f4:	f9b0 c000 	ldrsh.w	ip, [r0]
900191f8:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
900191fc:	45ac      	cmp	ip, r5
900191fe:	da10      	bge.n	90019222 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90019200:	681d      	ldr	r5, [r3, #0]
90019202:	f9b0 8000 	ldrsh.w	r8, [r0]
90019206:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
9001920a:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001920e:	6005      	str	r5, [r0, #0]
90019210:	685d      	ldr	r5, [r3, #4]
90019212:	f8a0 8008 	strh.w	r8, [r0, #8]
90019216:	6045      	str	r5, [r0, #4]
90019218:	8146      	strh	r6, [r0, #10]
9001921a:	f8a0 e00c 	strh.w	lr, [r0, #12]
9001921e:	f8a0 c00e 	strh.w	ip, [r0, #14]
90019222:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90019226:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001922a:	4565      	cmp	r5, ip
9001922c:	db06      	blt.n	9001923c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
9001922e:	d119      	bne.n	90019264 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90019230:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90019234:	f9b0 5000 	ldrsh.w	r5, [r0]
90019238:	42ae      	cmp	r6, r5
9001923a:	da13      	bge.n	90019264 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001923c:	460e      	mov	r6, r1
9001923e:	f9b0 9000 	ldrsh.w	r9, [r0]
90019242:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90019246:	f856 5d08 	ldr.w	r5, [r6, #-8]!
9001924a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
9001924e:	6005      	str	r5, [r0, #0]
90019250:	6875      	ldr	r5, [r6, #4]
90019252:	6045      	str	r5, [r0, #4]
90019254:	f821 9c08 	strh.w	r9, [r1, #-8]
90019258:	f821 cc06 	strh.w	ip, [r1, #-6]
9001925c:	f821 8c04 	strh.w	r8, [r1, #-4]
90019260:	f821 ec02 	strh.w	lr, [r1, #-2]
90019264:	3308      	adds	r3, #8
90019266:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001926a:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001926e:	45e6      	cmp	lr, ip
90019270:	dbf8      	blt.n	90019264 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90019272:	d105      	bne.n	90019280 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90019274:	f9b3 6000 	ldrsh.w	r6, [r3]
90019278:	f9b0 5000 	ldrsh.w	r5, [r0]
9001927c:	42ae      	cmp	r6, r5
9001927e:	dbf1      	blt.n	90019264 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90019280:	4615      	mov	r5, r2
90019282:	3a08      	subs	r2, #8
90019284:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90019288:	45b4      	cmp	ip, r6
9001928a:	dbf9      	blt.n	90019280 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001928c:	d105      	bne.n	9001929a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
9001928e:	f9b0 8000 	ldrsh.w	r8, [r0]
90019292:	f9b2 6000 	ldrsh.w	r6, [r2]
90019296:	45b0      	cmp	r8, r6
90019298:	dbf2      	blt.n	90019280 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001929a:	4293      	cmp	r3, r2
9001929c:	f1a5 0608 	sub.w	r6, r5, #8
900192a0:	d816      	bhi.n	900192d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
900192a2:	f8d6 c000 	ldr.w	ip, [r6]
900192a6:	f9b3 a000 	ldrsh.w	sl, [r3]
900192aa:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
900192ae:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
900192b2:	f8c3 c000 	str.w	ip, [r3]
900192b6:	f8d6 c004 	ldr.w	ip, [r6, #4]
900192ba:	f8c3 c004 	str.w	ip, [r3, #4]
900192be:	f825 ac08 	strh.w	sl, [r5, #-8]
900192c2:	f825 ec06 	strh.w	lr, [r5, #-6]
900192c6:	f825 9c04 	strh.w	r9, [r5, #-4]
900192ca:	f825 8c02 	strh.w	r8, [r5, #-2]
900192ce:	e7c9      	b.n	90019264 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900192d0:	f8d6 e000 	ldr.w	lr, [r6]
900192d4:	f9b0 a000 	ldrsh.w	sl, [r0]
900192d8:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
900192dc:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
900192e0:	f8c0 e000 	str.w	lr, [r0]
900192e4:	f8d6 e004 	ldr.w	lr, [r6, #4]
900192e8:	1a16      	subs	r6, r2, r0
900192ea:	f8c0 e004 	str.w	lr, [r0, #4]
900192ee:	f825 ac08 	strh.w	sl, [r5, #-8]
900192f2:	f825 cc06 	strh.w	ip, [r5, #-6]
900192f6:	f825 9c04 	strh.w	r9, [r5, #-4]
900192fa:	f825 8c02 	strh.w	r8, [r5, #-2]
900192fe:	1acd      	subs	r5, r1, r3
90019300:	10ed      	asrs	r5, r5, #3
90019302:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90019306:	bfb5      	itete	lt
90019308:	e9c4 0200 	strdlt	r0, r2, [r4]
9001930c:	e9c4 3100 	strdge	r3, r1, [r4]
90019310:	460a      	movlt	r2, r1
90019312:	4603      	movge	r3, r0
90019314:	3408      	adds	r4, #8
90019316:	4618      	mov	r0, r3
90019318:	4611      	mov	r1, r2
9001931a:	e724      	b.n	90019166 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
9001931c:	4299      	cmp	r1, r3
9001931e:	d927      	bls.n	90019370 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90019320:	f1a3 0210 	sub.w	r2, r3, #16
90019324:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90019328:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
9001932c:	45ac      	cmp	ip, r5
9001932e:	db06      	blt.n	9001933e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90019330:	d11c      	bne.n	9001936c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90019332:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90019336:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
9001933a:	42ae      	cmp	r6, r5
9001933c:	da16      	bge.n	9001936c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001933e:	4615      	mov	r5, r2
90019340:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90019344:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90019348:	3a08      	subs	r2, #8
9001934a:	f855 6f08 	ldr.w	r6, [r5, #8]!
9001934e:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90019352:	6196      	str	r6, [r2, #24]
90019354:	42a8      	cmp	r0, r5
90019356:	686e      	ldr	r6, [r5, #4]
90019358:	f8a2 9010 	strh.w	r9, [r2, #16]
9001935c:	61d6      	str	r6, [r2, #28]
9001935e:	f8a2 c012 	strh.w	ip, [r2, #18]
90019362:	f8a2 8014 	strh.w	r8, [r2, #20]
90019366:	f8a2 e016 	strh.w	lr, [r2, #22]
9001936a:	d1db      	bne.n	90019324 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
9001936c:	3308      	adds	r3, #8
9001936e:	e7d5      	b.n	9001931c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90019370:	42bc      	cmp	r4, r7
90019372:	d903      	bls.n	9001937c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90019374:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90019378:	3c08      	subs	r4, #8
9001937a:	e6f4      	b.n	90019166 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
9001937c:	b050      	add	sp, #320	; 0x140
9001937e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90019382 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90019382:	b510      	push	{r4, lr}
90019384:	6a43      	ldr	r3, [r0, #36]	; 0x24
90019386:	4604      	mov	r4, r0
90019388:	07da      	lsls	r2, r3, #31
9001938a:	d507      	bpl.n	9001939c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
9001938c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90019390:	f7ff fe8c 	bl	900190ac <_ZN8touchgfx7Outline6lineToEii>
90019394:	6a43      	ldr	r3, [r0, #36]	; 0x24
90019396:	f023 0301 	bic.w	r3, r3, #1
9001939a:	6243      	str	r3, [r0, #36]	; 0x24
9001939c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001939e:	079b      	lsls	r3, r3, #30
900193a0:	d521      	bpl.n	900193e6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
900193a2:	6923      	ldr	r3, [r4, #16]
900193a4:	88d9      	ldrh	r1, [r3, #6]
900193a6:	889a      	ldrh	r2, [r3, #4]
900193a8:	430a      	orrs	r2, r1
900193aa:	d010      	beq.n	900193ce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900193ac:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900193b0:	2a00      	cmp	r2, #0
900193b2:	db0c      	blt.n	900193ce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900193b4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900193b6:	428a      	cmp	r2, r1
900193b8:	da09      	bge.n	900193ce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900193ba:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
900193be:	4291      	cmp	r1, r2
900193c0:	f102 0201 	add.w	r2, r2, #1
900193c4:	bf88      	it	hi
900193c6:	3308      	addhi	r3, #8
900193c8:	60a2      	str	r2, [r4, #8]
900193ca:	bf88      	it	hi
900193cc:	6123      	strhi	r3, [r4, #16]
900193ce:	68a1      	ldr	r1, [r4, #8]
900193d0:	b129      	cbz	r1, 900193de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900193d2:	6863      	ldr	r3, [r4, #4]
900193d4:	4299      	cmp	r1, r3
900193d6:	d802      	bhi.n	900193de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900193d8:	68e0      	ldr	r0, [r4, #12]
900193da:	f7ff febd 	bl	90019158 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
900193de:	6a63      	ldr	r3, [r4, #36]	; 0x24
900193e0:	f023 0302 	bic.w	r3, r3, #2
900193e4:	6263      	str	r3, [r4, #36]	; 0x24
900193e6:	68e0      	ldr	r0, [r4, #12]
900193e8:	bd10      	pop	{r4, pc}
	...

900193ec <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
900193ec:	4b02      	ldr	r3, [pc, #8]	; (900193f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
900193ee:	6018      	str	r0, [r3, #0]
900193f0:	4b02      	ldr	r3, [pc, #8]	; (900193fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
900193f2:	6019      	str	r1, [r3, #0]
900193f4:	4770      	bx	lr
900193f6:	bf00      	nop
900193f8:	24028e34 	.word	0x24028e34
900193fc:	24028e38 	.word	0x24028e38

90019400 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
90019400:	2300      	movs	r3, #0
90019402:	4a02      	ldr	r2, [pc, #8]	; (9001940c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90019404:	6013      	str	r3, [r2, #0]
90019406:	4a02      	ldr	r2, [pc, #8]	; (90019410 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90019408:	6013      	str	r3, [r2, #0]
9001940a:	4770      	bx	lr
9001940c:	24028e34 	.word	0x24028e34
90019410:	24028e38 	.word	0x24028e38

90019414 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90019414:	4b01      	ldr	r3, [pc, #4]	; (9001941c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90019416:	6818      	ldr	r0, [r3, #0]
90019418:	4770      	bx	lr
9001941a:	bf00      	nop
9001941c:	24028e34 	.word	0x24028e34

90019420 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90019420:	4b01      	ldr	r3, [pc, #4]	; (90019428 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90019422:	6818      	ldr	r0, [r3, #0]
90019424:	4770      	bx	lr
90019426:	bf00      	nop
90019428:	24028e38 	.word	0x24028e38

9001942c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
9001942c:	b510      	push	{r4, lr}
9001942e:	6803      	ldr	r3, [r0, #0]
90019430:	460c      	mov	r4, r1
90019432:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019434:	4798      	blx	r3
90019436:	1b03      	subs	r3, r0, r4
90019438:	4258      	negs	r0, r3
9001943a:	4158      	adcs	r0, r3
9001943c:	bd10      	pop	{r4, pc}
	...

90019440 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90019440:	4b01      	ldr	r3, [pc, #4]	; (90019448 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90019442:	6019      	str	r1, [r3, #0]
90019444:	4770      	bx	lr
90019446:	bf00      	nop
90019448:	24028e3c 	.word	0x24028e3c

9001944c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
9001944c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019450:	4696      	mov	lr, r2
90019452:	b097      	sub	sp, #92	; 0x5c
90019454:	4605      	mov	r5, r0
90019456:	4614      	mov	r4, r2
90019458:	460e      	mov	r6, r1
9001945a:	461f      	mov	r7, r3
9001945c:	f10d 0c1c 	add.w	ip, sp, #28
90019460:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90019464:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
90019468:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
9001946c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90019470:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90019474:	f8de 3000 	ldr.w	r3, [lr]
90019478:	f104 0e14 	add.w	lr, r4, #20
9001947c:	f8cc 3000 	str.w	r3, [ip]
90019480:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90019484:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90019488:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001948c:	f8de 3000 	ldr.w	r3, [lr]
90019490:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90019494:	f8cc 3000 	str.w	r3, [ip]
90019498:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
9001949c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900194a0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900194a4:	f8de 3000 	ldr.w	r3, [lr]
900194a8:	4631      	mov	r1, r6
900194aa:	9a21      	ldr	r2, [sp, #132]	; 0x84
900194ac:	4628      	mov	r0, r5
900194ae:	f8cc 3000 	str.w	r3, [ip]
900194b2:	682b      	ldr	r3, [r5, #0]
900194b4:	9201      	str	r2, [sp, #4]
900194b6:	9a20      	ldr	r2, [sp, #128]	; 0x80
900194b8:	f8cd 8008 	str.w	r8, [sp, #8]
900194bc:	9200      	str	r2, [sp, #0]
900194be:	aa07      	add	r2, sp, #28
900194c0:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900194c4:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
900194c8:	463b      	mov	r3, r7
900194ca:	47d8      	blx	fp
900194cc:	46a6      	mov	lr, r4
900194ce:	f10d 0c1c 	add.w	ip, sp, #28
900194d2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900194d6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900194da:	f8de 3000 	ldr.w	r3, [lr]
900194de:	f104 0e28 	add.w	lr, r4, #40	; 0x28
900194e2:	343c      	adds	r4, #60	; 0x3c
900194e4:	f8cc 3000 	str.w	r3, [ip]
900194e8:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
900194ec:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900194f0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900194f4:	f8de 3000 	ldr.w	r3, [lr]
900194f8:	f8cc 3000 	str.w	r3, [ip]
900194fc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90019500:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90019502:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90019506:	6823      	ldr	r3, [r4, #0]
90019508:	4631      	mov	r1, r6
9001950a:	4628      	mov	r0, r5
9001950c:	f8cc 3000 	str.w	r3, [ip]
90019510:	682b      	ldr	r3, [r5, #0]
90019512:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90019516:	9a21      	ldr	r2, [sp, #132]	; 0x84
90019518:	f8cd 8008 	str.w	r8, [sp, #8]
9001951c:	9201      	str	r2, [sp, #4]
9001951e:	9a20      	ldr	r2, [sp, #128]	; 0x80
90019520:	9200      	str	r2, [sp, #0]
90019522:	aa07      	add	r2, sp, #28
90019524:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
90019526:	463b      	mov	r3, r7
90019528:	47a0      	blx	r4
9001952a:	b017      	add	sp, #92	; 0x5c
9001952c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019530 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90019530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019534:	b08d      	sub	sp, #52	; 0x34
90019536:	4688      	mov	r8, r1
90019538:	f8d3 c000 	ldr.w	ip, [r3]
9001953c:	9916      	ldr	r1, [sp, #88]	; 0x58
9001953e:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
90019542:	680f      	ldr	r7, [r1, #0]
90019544:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
90019548:	eba7 070c 	sub.w	r7, r7, ip
9001954c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
90019550:	edd3 6a07 	vldr	s13, [r3, #28]
90019554:	42bc      	cmp	r4, r7
90019556:	9918      	ldr	r1, [sp, #96]	; 0x60
90019558:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
9001955c:	bfa8      	it	ge
9001955e:	463c      	movge	r4, r7
90019560:	f9b1 9000 	ldrsh.w	r9, [r1]
90019564:	f9ba 1000 	ldrsh.w	r1, [sl]
90019568:	ee07 4a90 	vmov	s15, r4
9001956c:	eb09 0e0c 	add.w	lr, r9, ip
90019570:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
90019574:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90019578:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
9001957c:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
90019580:	4571      	cmp	r1, lr
90019582:	ee25 4a04 	vmul.f32	s8, s10, s8
90019586:	ee65 4a24 	vmul.f32	s9, s10, s9
9001958a:	ee25 5a27 	vmul.f32	s10, s10, s15
9001958e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
90019592:	ee71 0aa4 	vadd.f32	s1, s3, s9
90019596:	ee32 1a05 	vadd.f32	s2, s4, s10
9001959a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9001959e:	ee36 0a84 	vadd.f32	s0, s13, s8
900195a2:	ee61 1a87 	vmul.f32	s3, s3, s14
900195a6:	ee22 2a07 	vmul.f32	s4, s4, s14
900195aa:	f340 808c 	ble.w	900196c6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
900195ae:	eba1 060e 	sub.w	r6, r1, lr
900195b2:	fb96 f5f4 	sdiv	r5, r6, r4
900195b6:	ee07 5a10 	vmov	s14, r5
900195ba:	2d00      	cmp	r5, #0
900195bc:	fb04 6615 	mls	r6, r4, r5, r6
900195c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900195c4:	eea7 0a04 	vfma.f32	s0, s14, s8
900195c8:	eee7 0a24 	vfma.f32	s1, s14, s9
900195cc:	eea7 1a05 	vfma.f32	s2, s14, s10
900195d0:	dd12      	ble.n	900195f8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
900195d2:	ee70 6a44 	vsub.f32	s13, s0, s8
900195d6:	ee70 1ae4 	vsub.f32	s3, s1, s9
900195da:	ee31 2a45 	vsub.f32	s4, s2, s10
900195de:	eef5 6a40 	vcmp.f32	s13, #0.0
900195e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900195e6:	bf14      	ite	ne
900195e8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
900195ec:	eeb0 7a67 	vmoveq.f32	s14, s15
900195f0:	ee61 1a87 	vmul.f32	s3, s3, s14
900195f4:	ee22 2a07 	vmul.f32	s4, s4, s14
900195f8:	fb05 f204 	mul.w	r2, r5, r4
900195fc:	1abf      	subs	r7, r7, r2
900195fe:	4494      	add	ip, r2
90019600:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90019604:	4411      	add	r1, r2
90019606:	eb09 020c 	add.w	r2, r9, ip
9001960a:	b209      	sxth	r1, r1
9001960c:	443a      	add	r2, r7
9001960e:	428a      	cmp	r2, r1
90019610:	bfc4      	itt	gt
90019612:	eba1 0209 	subgt.w	r2, r1, r9
90019616:	eba2 070c 	subgt.w	r7, r2, ip
9001961a:	2f00      	cmp	r7, #0
9001961c:	dd50      	ble.n	900196c0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
9001961e:	fb97 f1f4 	sdiv	r1, r7, r4
90019622:	fb04 7211 	mls	r2, r4, r1, r7
90019626:	b90a      	cbnz	r2, 9001962c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90019628:	3901      	subs	r1, #1
9001962a:	4622      	mov	r2, r4
9001962c:	eec7 3a80 	vdiv.f32	s7, s15, s0
90019630:	6840      	ldr	r0, [r0, #4]
90019632:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
90019636:	44b6      	add	lr, r6
90019638:	f8d0 a000 	ldr.w	sl, [r0]
9001963c:	2900      	cmp	r1, #0
9001963e:	bfcc      	ite	gt
90019640:	46a1      	movgt	r9, r4
90019642:	4691      	movle	r9, r2
90019644:	900b      	str	r0, [sp, #44]	; 0x2c
90019646:	9817      	ldr	r0, [sp, #92]	; 0x5c
90019648:	fb04 e505 	mla	r5, r4, r5, lr
9001964c:	eef0 6a42 	vmov.f32	s13, s4
90019650:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
90019654:	9008      	str	r0, [sp, #32]
90019656:	eeb0 7a61 	vmov.f32	s14, s3
9001965a:	9818      	ldr	r0, [sp, #96]	; 0x60
9001965c:	695b      	ldr	r3, [r3, #20]
9001965e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019662:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90019666:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
9001966a:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001966c:	445b      	add	r3, fp
9001966e:	9307      	str	r3, [sp, #28]
90019670:	ee16 3a90 	vmov	r3, s13
90019674:	e9cd 8505 	strd	r8, r5, [sp, #20]
90019678:	ee60 2aa3 	vmul.f32	s5, s1, s7
9001967c:	ee21 3a23 	vmul.f32	s6, s2, s7
90019680:	ee72 7ae1 	vsub.f32	s15, s5, s3
90019684:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90019688:	ee17 7a90 	vmov	r7, s15
9001968c:	ee73 7a42 	vsub.f32	s15, s6, s4
90019690:	fb97 f7f4 	sdiv	r7, r7, r4
90019694:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90019698:	ee17 ca90 	vmov	ip, s15
9001969c:	fb9c fcf4 	sdiv	ip, ip, r4
900196a0:	fb0c 3306 	mla	r3, ip, r6, r3
900196a4:	9302      	str	r3, [sp, #8]
900196a6:	ee17 3a10 	vmov	r3, s14
900196aa:	e9cd 7c03 	strd	r7, ip, [sp, #12]
900196ae:	fb07 3706 	mla	r7, r7, r6, r3
900196b2:	eba9 0306 	sub.w	r3, r9, r6
900196b6:	e9cd 4700 	strd	r4, r7, [sp]
900196ba:	f8da 4008 	ldr.w	r4, [sl, #8]
900196be:	47a0      	blx	r4
900196c0:	b00d      	add	sp, #52	; 0x34
900196c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900196c6:	2500      	movs	r5, #0
900196c8:	462e      	mov	r6, r5
900196ca:	e799      	b.n	90019600 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

900196cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900196cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900196d0:	b0db      	sub	sp, #364	; 0x16c
900196d2:	461d      	mov	r5, r3
900196d4:	4614      	mov	r4, r2
900196d6:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
900196da:	910f      	str	r1, [sp, #60]	; 0x3c
900196dc:	4629      	mov	r1, r5
900196de:	930a      	str	r3, [sp, #40]	; 0x28
900196e0:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
900196e4:	9009      	str	r0, [sp, #36]	; 0x24
900196e6:	930b      	str	r3, [sp, #44]	; 0x2c
900196e8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
900196ec:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
900196f0:	9310      	str	r3, [sp, #64]	; 0x40
900196f2:	6803      	ldr	r3, [r0, #0]
900196f4:	6c5f      	ldr	r7, [r3, #68]	; 0x44
900196f6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
900196fa:	47b8      	blx	r7
900196fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900196fe:	6058      	str	r0, [r3, #4]
90019700:	2800      	cmp	r0, #0
90019702:	f000 83a1 	beq.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90019706:	682b      	ldr	r3, [r5, #0]
90019708:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
9001970c:	ed94 7a02 	vldr	s14, [r4, #8]
90019710:	9314      	str	r3, [sp, #80]	; 0x50
90019712:	686b      	ldr	r3, [r5, #4]
90019714:	eeb4 7ae7 	vcmpe.f32	s14, s15
90019718:	9315      	str	r3, [sp, #84]	; 0x54
9001971a:	4bc1      	ldr	r3, [pc, #772]	; (90019a20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
9001971c:	7819      	ldrb	r1, [r3, #0]
9001971e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90019722:	2900      	cmp	r1, #0
90019724:	bf16      	itet	ne
90019726:	4619      	movne	r1, r3
90019728:	4611      	moveq	r1, r2
9001972a:	4613      	movne	r3, r2
9001972c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019730:	9116      	str	r1, [sp, #88]	; 0x58
90019732:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
90019736:	f240 8387 	bls.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001973a:	ed94 7a07 	vldr	s14, [r4, #28]
9001973e:	eeb4 7ae7 	vcmpe.f32	s14, s15
90019742:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019746:	f240 837f 	bls.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001974a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
9001974e:	eeb4 7ae7 	vcmpe.f32	s14, s15
90019752:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019756:	f240 8377 	bls.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001975a:	6822      	ldr	r2, [r4, #0]
9001975c:	4bb1      	ldr	r3, [pc, #708]	; (90019a24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
9001975e:	429a      	cmp	r2, r3
90019760:	f2c0 8372 	blt.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90019764:	49b0      	ldr	r1, [pc, #704]	; (90019a28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90019766:	6963      	ldr	r3, [r4, #20]
90019768:	428a      	cmp	r2, r1
9001976a:	f300 836d 	bgt.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001976e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90019772:	48ae      	ldr	r0, [pc, #696]	; (90019a2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90019774:	33ff      	adds	r3, #255	; 0xff
90019776:	4283      	cmp	r3, r0
90019778:	f200 8366 	bhi.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001977c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9001977e:	4dac      	ldr	r5, [pc, #688]	; (90019a30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90019780:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90019784:	33ff      	adds	r3, #255	; 0xff
90019786:	42ab      	cmp	r3, r5
90019788:	f200 835e 	bhi.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001978c:	6862      	ldr	r2, [r4, #4]
9001978e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
90019792:	33ff      	adds	r3, #255	; 0xff
90019794:	4283      	cmp	r3, r0
90019796:	f200 8357 	bhi.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001979a:	69a1      	ldr	r1, [r4, #24]
9001979c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
900197a0:	33ff      	adds	r3, #255	; 0xff
900197a2:	4283      	cmp	r3, r0
900197a4:	f200 8350 	bhi.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900197a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900197aa:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
900197ae:	30ff      	adds	r0, #255	; 0xff
900197b0:	42a8      	cmp	r0, r5
900197b2:	f200 8349 	bhi.w	90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900197b6:	428a      	cmp	r2, r1
900197b8:	f280 8110 	bge.w	900199dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
900197bc:	429a      	cmp	r2, r3
900197be:	f300 8119 	bgt.w	900199f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
900197c2:	4299      	cmp	r1, r3
900197c4:	f280 811d 	bge.w	90019a02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
900197c8:	2502      	movs	r5, #2
900197ca:	2701      	movs	r7, #1
900197cc:	46a9      	mov	r9, r5
900197ce:	46b8      	mov	r8, r7
900197d0:	f04f 0a00 	mov.w	sl, #0
900197d4:	4621      	mov	r1, r4
900197d6:	a849      	add	r0, sp, #292	; 0x124
900197d8:	f003 feb2 	bl	9001d540 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
900197dc:	4622      	mov	r2, r4
900197de:	4653      	mov	r3, sl
900197e0:	a949      	add	r1, sp, #292	; 0x124
900197e2:	f8cd 9000 	str.w	r9, [sp]
900197e6:	a819      	add	r0, sp, #100	; 0x64
900197e8:	f003 ffda 	bl	9001d7a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900197ec:	4622      	mov	r2, r4
900197ee:	4653      	mov	r3, sl
900197f0:	a949      	add	r1, sp, #292	; 0x124
900197f2:	f8cd 8000 	str.w	r8, [sp]
900197f6:	a829      	add	r0, sp, #164	; 0xa4
900197f8:	f003 ffd2 	bl	9001d7a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900197fc:	4643      	mov	r3, r8
900197fe:	4622      	mov	r2, r4
90019800:	a949      	add	r1, sp, #292	; 0x124
90019802:	f8cd 9000 	str.w	r9, [sp]
90019806:	a839      	add	r0, sp, #228	; 0xe4
90019808:	f003 ffca 	bl	9001d7a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
9001980c:	42af      	cmp	r7, r5
9001980e:	af12      	add	r7, sp, #72	; 0x48
90019810:	bfb7      	itett	lt
90019812:	2300      	movlt	r3, #0
90019814:	2301      	movge	r3, #1
90019816:	ad29      	addlt	r5, sp, #164	; 0xa4
90019818:	ac19      	addlt	r4, sp, #100	; 0x64
9001981a:	bfb1      	iteee	lt
9001981c:	930e      	strlt	r3, [sp, #56]	; 0x38
9001981e:	ad19      	addge	r5, sp, #100	; 0x64
90019820:	930e      	strge	r3, [sp, #56]	; 0x38
90019822:	ac29      	addge	r4, sp, #164	; 0xa4
90019824:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90019826:	e893 0003 	ldmia.w	r3, {r0, r1}
9001982a:	e887 0003 	stmia.w	r7, {r0, r1}
9001982e:	b928      	cbnz	r0, 9001983c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90019830:	4b80      	ldr	r3, [pc, #512]	; (90019a34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90019832:	6818      	ldr	r0, [r3, #0]
90019834:	6803      	ldr	r3, [r0, #0]
90019836:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90019838:	4798      	blx	r3
9001983a:	6038      	str	r0, [r7, #0]
9001983c:	9b64      	ldr	r3, [sp, #400]	; 0x190
9001983e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90019842:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90019846:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
90019848:	930c      	str	r3, [sp, #48]	; 0x30
9001984a:	990c      	ldr	r1, [sp, #48]	; 0x30
9001984c:	6963      	ldr	r3, [r4, #20]
9001984e:	440b      	add	r3, r1
90019850:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90019854:	4408      	add	r0, r1
90019856:	b200      	sxth	r0, r0
90019858:	4283      	cmp	r3, r0
9001985a:	900d      	str	r0, [sp, #52]	; 0x34
9001985c:	f280 80dd 	bge.w	90019a1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90019860:	428b      	cmp	r3, r1
90019862:	da08      	bge.n	90019876 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90019864:	2a00      	cmp	r2, #0
90019866:	dd06      	ble.n	90019876 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90019868:	1acb      	subs	r3, r1, r3
9001986a:	429a      	cmp	r2, r3
9001986c:	f2c0 80e4 	blt.w	90019a38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90019870:	2b00      	cmp	r3, #0
90019872:	f300 80e2 	bgt.w	90019a3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90019876:	6967      	ldr	r7, [r4, #20]
90019878:	f10d 0850 	add.w	r8, sp, #80	; 0x50
9001987c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001987e:	443b      	add	r3, r7
90019880:	461f      	mov	r7, r3
90019882:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90019884:	1bdf      	subs	r7, r3, r7
90019886:	4297      	cmp	r7, r2
90019888:	bfa8      	it	ge
9001988a:	4617      	movge	r7, r2
9001988c:	2f00      	cmp	r7, #0
9001988e:	f340 8166 	ble.w	90019b5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90019892:	9b64      	ldr	r3, [sp, #400]	; 0x190
90019894:	6829      	ldr	r1, [r5, #0]
90019896:	f9b3 2000 	ldrsh.w	r2, [r3]
9001989a:	f9bb 3000 	ldrsh.w	r3, [fp]
9001989e:	4411      	add	r1, r2
900198a0:	6820      	ldr	r0, [r4, #0]
900198a2:	4299      	cmp	r1, r3
900198a4:	dd1a      	ble.n	900198dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900198a6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
900198aa:	4402      	add	r2, r0
900198ac:	440b      	add	r3, r1
900198ae:	b21b      	sxth	r3, r3
900198b0:	429a      	cmp	r2, r3
900198b2:	dc13      	bgt.n	900198dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900198b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
900198b6:	a912      	add	r1, sp, #72	; 0x48
900198b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900198ba:	9809      	ldr	r0, [sp, #36]	; 0x24
900198bc:	681b      	ldr	r3, [r3, #0]
900198be:	9206      	str	r2, [sp, #24]
900198c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900198c2:	9500      	str	r5, [sp, #0]
900198c4:	9205      	str	r2, [sp, #20]
900198c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900198c8:	e9cd b203 	strd	fp, r2, [sp, #12]
900198cc:	9a64      	ldr	r2, [sp, #400]	; 0x190
900198ce:	e9cd 8201 	strd	r8, r2, [sp, #4]
900198d2:	aa49      	add	r2, sp, #292	; 0x124
900198d4:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
900198d8:	4623      	mov	r3, r4
900198da:	47c8      	blx	r9
900198dc:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
900198e0:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
900198e4:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
900198e8:	ee37 7a27 	vadd.f32	s14, s14, s15
900198ec:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
900198f0:	68a1      	ldr	r1, [r4, #8]
900198f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
900198f6:	ed94 6a08 	vldr	s12, [r4, #32]
900198fa:	edd4 6a07 	vldr	s13, [r4, #28]
900198fe:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90019902:	ee76 6a86 	vadd.f32	s13, s13, s12
90019906:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9001990a:	e9d4 2300 	ldrd	r2, r3, [r4]
9001990e:	edc4 6a07 	vstr	s13, [r4, #28]
90019912:	441a      	add	r2, r3
90019914:	6963      	ldr	r3, [r4, #20]
90019916:	3301      	adds	r3, #1
90019918:	6022      	str	r2, [r4, #0]
9001991a:	6163      	str	r3, [r4, #20]
9001991c:	69a3      	ldr	r3, [r4, #24]
9001991e:	3b01      	subs	r3, #1
90019920:	61a3      	str	r3, [r4, #24]
90019922:	6923      	ldr	r3, [r4, #16]
90019924:	440b      	add	r3, r1
90019926:	68e1      	ldr	r1, [r4, #12]
90019928:	428b      	cmp	r3, r1
9001992a:	6123      	str	r3, [r4, #16]
9001992c:	db15      	blt.n	9001995a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
9001992e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90019932:	3201      	adds	r2, #1
90019934:	1a5b      	subs	r3, r3, r1
90019936:	ee76 6a26 	vadd.f32	s13, s12, s13
9001993a:	6022      	str	r2, [r4, #0]
9001993c:	6123      	str	r3, [r4, #16]
9001993e:	edc4 6a07 	vstr	s13, [r4, #28]
90019942:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90019946:	ee36 7a87 	vadd.f32	s14, s13, s14
9001994a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9001994e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90019952:	ee77 7a27 	vadd.f32	s15, s14, s15
90019956:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9001995a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
9001995e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90019962:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90019966:	ee37 7a27 	vadd.f32	s14, s14, s15
9001996a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
9001996e:	68a9      	ldr	r1, [r5, #8]
90019970:	ee77 7aa6 	vadd.f32	s15, s15, s13
90019974:	ed95 6a08 	vldr	s12, [r5, #32]
90019978:	edd5 6a07 	vldr	s13, [r5, #28]
9001997c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90019980:	ee76 6a86 	vadd.f32	s13, s13, s12
90019984:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90019988:	e9d5 2300 	ldrd	r2, r3, [r5]
9001998c:	edc5 6a07 	vstr	s13, [r5, #28]
90019990:	441a      	add	r2, r3
90019992:	696b      	ldr	r3, [r5, #20]
90019994:	3301      	adds	r3, #1
90019996:	602a      	str	r2, [r5, #0]
90019998:	616b      	str	r3, [r5, #20]
9001999a:	69ab      	ldr	r3, [r5, #24]
9001999c:	3b01      	subs	r3, #1
9001999e:	61ab      	str	r3, [r5, #24]
900199a0:	692b      	ldr	r3, [r5, #16]
900199a2:	440b      	add	r3, r1
900199a4:	68e9      	ldr	r1, [r5, #12]
900199a6:	428b      	cmp	r3, r1
900199a8:	612b      	str	r3, [r5, #16]
900199aa:	db15      	blt.n	900199d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
900199ac:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
900199b0:	3201      	adds	r2, #1
900199b2:	1a5b      	subs	r3, r3, r1
900199b4:	ee76 6a26 	vadd.f32	s13, s12, s13
900199b8:	602a      	str	r2, [r5, #0]
900199ba:	612b      	str	r3, [r5, #16]
900199bc:	edc5 6a07 	vstr	s13, [r5, #28]
900199c0:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
900199c4:	ee36 7a87 	vadd.f32	s14, s13, s14
900199c8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
900199cc:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
900199d0:	ee77 7a27 	vadd.f32	s15, s14, s15
900199d4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
900199d8:	3f01      	subs	r7, #1
900199da:	e757      	b.n	9001988c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
900199dc:	4299      	cmp	r1, r3
900199de:	dc13      	bgt.n	90019a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
900199e0:	429a      	cmp	r2, r3
900199e2:	da14      	bge.n	90019a0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
900199e4:	2502      	movs	r5, #2
900199e6:	2703      	movs	r7, #3
900199e8:	f04f 0800 	mov.w	r8, #0
900199ec:	46a9      	mov	r9, r5
900199ee:	f04f 0a01 	mov.w	sl, #1
900199f2:	e6ef      	b.n	900197d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
900199f4:	2501      	movs	r5, #1
900199f6:	2700      	movs	r7, #0
900199f8:	46a9      	mov	r9, r5
900199fa:	46b8      	mov	r8, r7
900199fc:	f04f 0a02 	mov.w	sl, #2
90019a00:	e6e8      	b.n	900197d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90019a02:	2501      	movs	r5, #1
90019a04:	2702      	movs	r7, #2
90019a06:	e6e1      	b.n	900197cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90019a08:	2500      	movs	r5, #0
90019a0a:	2701      	movs	r7, #1
90019a0c:	e7f4      	b.n	900199f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90019a0e:	2702      	movs	r7, #2
90019a10:	2503      	movs	r5, #3
90019a12:	f04f 0900 	mov.w	r9, #0
90019a16:	46b8      	mov	r8, r7
90019a18:	e7e9      	b.n	900199ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90019a1a:	4613      	mov	r3, r2
90019a1c:	e728      	b.n	90019870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90019a1e:	bf00      	nop
90019a20:	24028e24 	.word	0x24028e24
90019a24:	fffd8f01 	.word	0xfffd8f01
90019a28:	00027100 	.word	0x00027100
90019a2c:	0004e1ff 	.word	0x0004e1ff
90019a30:	0004e1fe 	.word	0x0004e1fe
90019a34:	24028e2c 	.word	0x24028e2c
90019a38:	4613      	mov	r3, r2
90019a3a:	992b      	ldr	r1, [sp, #172]	; 0xac
90019a3c:	469e      	mov	lr, r3
90019a3e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
90019a40:	469c      	mov	ip, r3
90019a42:	9111      	str	r1, [sp, #68]	; 0x44
90019a44:	f04f 0900 	mov.w	r9, #0
90019a48:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
90019a4c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
90019a50:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
90019a54:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
90019a58:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
90019a5c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
90019a60:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90019a64:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90019a68:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
90019a6c:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
90019a70:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
90019a74:	f1bc 0f00 	cmp.w	ip, #0
90019a78:	d147      	bne.n	90019b0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90019a7a:	eb03 0c07 	add.w	ip, r3, r7
90019a7e:	1ad7      	subs	r7, r2, r3
90019a80:	f1b9 0f00 	cmp.w	r9, #0
90019a84:	d009      	beq.n	90019a9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90019a86:	9029      	str	r0, [sp, #164]	; 0xa4
90019a88:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
90019a8c:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
90019a90:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
90019a94:	912d      	str	r1, [sp, #180]	; 0xb4
90019a96:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
90019a9a:	991b      	ldr	r1, [sp, #108]	; 0x6c
90019a9c:	f04f 0800 	mov.w	r8, #0
90019aa0:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90019aa4:	9111      	str	r1, [sp, #68]	; 0x44
90019aa6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90019aaa:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90019aae:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90019ab2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90019ab6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90019aba:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90019abe:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90019ac2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90019ac6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90019aca:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90019ace:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90019ad2:	f1be 0f00 	cmp.w	lr, #0
90019ad6:	d031      	beq.n	90019b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90019ad8:	9e11      	ldr	r6, [sp, #68]	; 0x44
90019ada:	4450      	add	r0, sl
90019adc:	ee76 6aa4 	vadd.f32	s13, s13, s9
90019ae0:	4431      	add	r1, r6
90019ae2:	ee37 7a04 	vadd.f32	s14, s14, s8
90019ae6:	ee77 7aa3 	vadd.f32	s15, s15, s7
90019aea:	4549      	cmp	r1, r9
90019aec:	db08      	blt.n	90019b00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90019aee:	ee77 7a85 	vadd.f32	s15, s15, s10
90019af2:	3001      	adds	r0, #1
90019af4:	ee76 6aa5 	vadd.f32	s13, s13, s11
90019af8:	eba1 0109 	sub.w	r1, r1, r9
90019afc:	ee37 7a06 	vadd.f32	s14, s14, s12
90019b00:	f10e 3eff 	add.w	lr, lr, #4294967295
90019b04:	f04f 0801 	mov.w	r8, #1
90019b08:	e7e3      	b.n	90019ad2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90019b0a:	9e11      	ldr	r6, [sp, #68]	; 0x44
90019b0c:	4450      	add	r0, sl
90019b0e:	ee37 7a24 	vadd.f32	s14, s14, s9
90019b12:	4431      	add	r1, r6
90019b14:	ee77 7a84 	vadd.f32	s15, s15, s8
90019b18:	ee76 6aa3 	vadd.f32	s13, s13, s7
90019b1c:	4541      	cmp	r1, r8
90019b1e:	db08      	blt.n	90019b32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90019b20:	ee76 6a85 	vadd.f32	s13, s13, s10
90019b24:	3001      	adds	r0, #1
90019b26:	ee37 7a25 	vadd.f32	s14, s14, s11
90019b2a:	eba1 0108 	sub.w	r1, r1, r8
90019b2e:	ee77 7a86 	vadd.f32	s15, s15, s12
90019b32:	f10c 3cff 	add.w	ip, ip, #4294967295
90019b36:	f04f 0901 	mov.w	r9, #1
90019b3a:	e79b      	b.n	90019a74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90019b3c:	449c      	add	ip, r3
90019b3e:	1aff      	subs	r7, r7, r3
90019b40:	f1b8 0f00 	cmp.w	r8, #0
90019b44:	d009      	beq.n	90019b5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90019b46:	9019      	str	r0, [sp, #100]	; 0x64
90019b48:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90019b4c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90019b50:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90019b54:	911d      	str	r1, [sp, #116]	; 0x74
90019b56:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90019b5a:	1ad2      	subs	r2, r2, r3
90019b5c:	e68b      	b.n	90019876 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90019b5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019b60:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
90019b62:	2b00      	cmp	r3, #0
90019b64:	f000 80d1 	beq.w	90019d0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90019b68:	ad19      	add	r5, sp, #100	; 0x64
90019b6a:	ac39      	add	r4, sp, #228	; 0xe4
90019b6c:	9b64      	ldr	r3, [sp, #400]	; 0x190
90019b6e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90019b72:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90019b76:	930c      	str	r3, [sp, #48]	; 0x30
90019b78:	990c      	ldr	r1, [sp, #48]	; 0x30
90019b7a:	6963      	ldr	r3, [r4, #20]
90019b7c:	440b      	add	r3, r1
90019b7e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90019b82:	4408      	add	r0, r1
90019b84:	b200      	sxth	r0, r0
90019b86:	4283      	cmp	r3, r0
90019b88:	900d      	str	r0, [sp, #52]	; 0x34
90019b8a:	f280 80c1 	bge.w	90019d10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90019b8e:	428b      	cmp	r3, r1
90019b90:	da08      	bge.n	90019ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90019b92:	2a00      	cmp	r2, #0
90019b94:	dd06      	ble.n	90019ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90019b96:	1acb      	subs	r3, r1, r3
90019b98:	429a      	cmp	r2, r3
90019b9a:	f2c0 80bb 	blt.w	90019d14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90019b9e:	2b00      	cmp	r3, #0
90019ba0:	f300 80b9 	bgt.w	90019d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90019ba4:	6967      	ldr	r7, [r4, #20]
90019ba6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90019baa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90019bac:	443b      	add	r3, r7
90019bae:	461f      	mov	r7, r3
90019bb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90019bb2:	1bdf      	subs	r7, r3, r7
90019bb4:	4297      	cmp	r7, r2
90019bb6:	bfa8      	it	ge
90019bb8:	4617      	movge	r7, r2
90019bba:	2f00      	cmp	r7, #0
90019bbc:	f340 813c 	ble.w	90019e38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90019bc0:	9b64      	ldr	r3, [sp, #400]	; 0x190
90019bc2:	6829      	ldr	r1, [r5, #0]
90019bc4:	f9b3 2000 	ldrsh.w	r2, [r3]
90019bc8:	f9bb 3000 	ldrsh.w	r3, [fp]
90019bcc:	4411      	add	r1, r2
90019bce:	6820      	ldr	r0, [r4, #0]
90019bd0:	4299      	cmp	r1, r3
90019bd2:	dd1a      	ble.n	90019c0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90019bd4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90019bd8:	4402      	add	r2, r0
90019bda:	440b      	add	r3, r1
90019bdc:	b21b      	sxth	r3, r3
90019bde:	429a      	cmp	r2, r3
90019be0:	dc13      	bgt.n	90019c0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90019be2:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019be4:	a912      	add	r1, sp, #72	; 0x48
90019be6:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019be8:	9809      	ldr	r0, [sp, #36]	; 0x24
90019bea:	681b      	ldr	r3, [r3, #0]
90019bec:	9206      	str	r2, [sp, #24]
90019bee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90019bf0:	9500      	str	r5, [sp, #0]
90019bf2:	9205      	str	r2, [sp, #20]
90019bf4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90019bf6:	e9cd b203 	strd	fp, r2, [sp, #12]
90019bfa:	9a64      	ldr	r2, [sp, #400]	; 0x190
90019bfc:	e9cd 8201 	strd	r8, r2, [sp, #4]
90019c00:	aa49      	add	r2, sp, #292	; 0x124
90019c02:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90019c06:	4623      	mov	r3, r4
90019c08:	47c8      	blx	r9
90019c0a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90019c0e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90019c12:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90019c16:	ee37 7a27 	vadd.f32	s14, s14, s15
90019c1a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90019c1e:	68a1      	ldr	r1, [r4, #8]
90019c20:	ee77 7aa6 	vadd.f32	s15, s15, s13
90019c24:	ed94 6a08 	vldr	s12, [r4, #32]
90019c28:	edd4 6a07 	vldr	s13, [r4, #28]
90019c2c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90019c30:	ee76 6a86 	vadd.f32	s13, s13, s12
90019c34:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90019c38:	e9d4 2300 	ldrd	r2, r3, [r4]
90019c3c:	edc4 6a07 	vstr	s13, [r4, #28]
90019c40:	441a      	add	r2, r3
90019c42:	6963      	ldr	r3, [r4, #20]
90019c44:	3301      	adds	r3, #1
90019c46:	6022      	str	r2, [r4, #0]
90019c48:	6163      	str	r3, [r4, #20]
90019c4a:	69a3      	ldr	r3, [r4, #24]
90019c4c:	3b01      	subs	r3, #1
90019c4e:	61a3      	str	r3, [r4, #24]
90019c50:	6923      	ldr	r3, [r4, #16]
90019c52:	440b      	add	r3, r1
90019c54:	68e1      	ldr	r1, [r4, #12]
90019c56:	428b      	cmp	r3, r1
90019c58:	6123      	str	r3, [r4, #16]
90019c5a:	db15      	blt.n	90019c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90019c5c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90019c60:	3201      	adds	r2, #1
90019c62:	1a5b      	subs	r3, r3, r1
90019c64:	ee76 6a26 	vadd.f32	s13, s12, s13
90019c68:	6022      	str	r2, [r4, #0]
90019c6a:	6123      	str	r3, [r4, #16]
90019c6c:	edc4 6a07 	vstr	s13, [r4, #28]
90019c70:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90019c74:	ee36 7a87 	vadd.f32	s14, s13, s14
90019c78:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90019c7c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90019c80:	ee77 7a27 	vadd.f32	s15, s14, s15
90019c84:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90019c88:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90019c8c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90019c90:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90019c94:	ee37 7a27 	vadd.f32	s14, s14, s15
90019c98:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90019c9c:	68a9      	ldr	r1, [r5, #8]
90019c9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90019ca2:	ed95 6a08 	vldr	s12, [r5, #32]
90019ca6:	edd5 6a07 	vldr	s13, [r5, #28]
90019caa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90019cae:	ee76 6a86 	vadd.f32	s13, s13, s12
90019cb2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90019cb6:	e9d5 2300 	ldrd	r2, r3, [r5]
90019cba:	edc5 6a07 	vstr	s13, [r5, #28]
90019cbe:	441a      	add	r2, r3
90019cc0:	696b      	ldr	r3, [r5, #20]
90019cc2:	3301      	adds	r3, #1
90019cc4:	602a      	str	r2, [r5, #0]
90019cc6:	616b      	str	r3, [r5, #20]
90019cc8:	69ab      	ldr	r3, [r5, #24]
90019cca:	3b01      	subs	r3, #1
90019ccc:	61ab      	str	r3, [r5, #24]
90019cce:	692b      	ldr	r3, [r5, #16]
90019cd0:	440b      	add	r3, r1
90019cd2:	68e9      	ldr	r1, [r5, #12]
90019cd4:	428b      	cmp	r3, r1
90019cd6:	612b      	str	r3, [r5, #16]
90019cd8:	db15      	blt.n	90019d06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90019cda:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90019cde:	3201      	adds	r2, #1
90019ce0:	1a5b      	subs	r3, r3, r1
90019ce2:	ee76 6a26 	vadd.f32	s13, s12, s13
90019ce6:	602a      	str	r2, [r5, #0]
90019ce8:	612b      	str	r3, [r5, #16]
90019cea:	edc5 6a07 	vstr	s13, [r5, #28]
90019cee:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90019cf2:	ee36 7a87 	vadd.f32	s14, s13, s14
90019cf6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90019cfa:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90019cfe:	ee77 7a27 	vadd.f32	s15, s14, s15
90019d02:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90019d06:	3f01      	subs	r7, #1
90019d08:	e757      	b.n	90019bba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90019d0a:	ad39      	add	r5, sp, #228	; 0xe4
90019d0c:	ac19      	add	r4, sp, #100	; 0x64
90019d0e:	e72d      	b.n	90019b6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90019d10:	4613      	mov	r3, r2
90019d12:	e744      	b.n	90019b9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90019d14:	4613      	mov	r3, r2
90019d16:	9e3b      	ldr	r6, [sp, #236]	; 0xec
90019d18:	469e      	mov	lr, r3
90019d1a:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
90019d1e:	461f      	mov	r7, r3
90019d20:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
90019d24:	f04f 0900 	mov.w	r9, #0
90019d28:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
90019d2c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90019d30:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
90019d34:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
90019d38:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
90019d3c:	993d      	ldr	r1, [sp, #244]	; 0xf4
90019d3e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
90019d42:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
90019d46:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
90019d4a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
90019d4e:	960e      	str	r6, [sp, #56]	; 0x38
90019d50:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
90019d54:	2f00      	cmp	r7, #0
90019d56:	d146      	bne.n	90019de6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90019d58:	449c      	add	ip, r3
90019d5a:	1ad7      	subs	r7, r2, r3
90019d5c:	f1b9 0f00 	cmp.w	r9, #0
90019d60:	d009      	beq.n	90019d76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90019d62:	9039      	str	r0, [sp, #228]	; 0xe4
90019d64:	913d      	str	r1, [sp, #244]	; 0xf4
90019d66:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
90019d6a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
90019d6e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
90019d72:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
90019d76:	991b      	ldr	r1, [sp, #108]	; 0x6c
90019d78:	f04f 0800 	mov.w	r8, #0
90019d7c:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90019d80:	910e      	str	r1, [sp, #56]	; 0x38
90019d82:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90019d86:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90019d8a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90019d8e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90019d92:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90019d96:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90019d9a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90019d9e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90019da2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90019da6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90019daa:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90019dae:	f1be 0f00 	cmp.w	lr, #0
90019db2:	d030      	beq.n	90019e16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90019db4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90019db6:	4450      	add	r0, sl
90019db8:	ee76 6aa4 	vadd.f32	s13, s13, s9
90019dbc:	4431      	add	r1, r6
90019dbe:	ee37 7a04 	vadd.f32	s14, s14, s8
90019dc2:	ee77 7aa3 	vadd.f32	s15, s15, s7
90019dc6:	4549      	cmp	r1, r9
90019dc8:	db08      	blt.n	90019ddc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90019dca:	ee77 7a85 	vadd.f32	s15, s15, s10
90019dce:	3001      	adds	r0, #1
90019dd0:	ee76 6aa5 	vadd.f32	s13, s13, s11
90019dd4:	eba1 0109 	sub.w	r1, r1, r9
90019dd8:	ee37 7a06 	vadd.f32	s14, s14, s12
90019ddc:	f10e 3eff 	add.w	lr, lr, #4294967295
90019de0:	f04f 0801 	mov.w	r8, #1
90019de4:	e7e3      	b.n	90019dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90019de6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90019de8:	4450      	add	r0, sl
90019dea:	ee37 7a24 	vadd.f32	s14, s14, s9
90019dee:	4431      	add	r1, r6
90019df0:	ee77 7a84 	vadd.f32	s15, s15, s8
90019df4:	ee76 6aa3 	vadd.f32	s13, s13, s7
90019df8:	4541      	cmp	r1, r8
90019dfa:	db08      	blt.n	90019e0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90019dfc:	ee76 6a85 	vadd.f32	s13, s13, s10
90019e00:	3001      	adds	r0, #1
90019e02:	ee37 7a25 	vadd.f32	s14, s14, s11
90019e06:	eba1 0108 	sub.w	r1, r1, r8
90019e0a:	ee77 7a86 	vadd.f32	s15, s15, s12
90019e0e:	3f01      	subs	r7, #1
90019e10:	f04f 0901 	mov.w	r9, #1
90019e14:	e79e      	b.n	90019d54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90019e16:	449c      	add	ip, r3
90019e18:	1aff      	subs	r7, r7, r3
90019e1a:	f1b8 0f00 	cmp.w	r8, #0
90019e1e:	d009      	beq.n	90019e34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90019e20:	9019      	str	r0, [sp, #100]	; 0x64
90019e22:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90019e26:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90019e2a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90019e2e:	911d      	str	r1, [sp, #116]	; 0x74
90019e30:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90019e34:	1ad2      	subs	r2, r2, r3
90019e36:	e6b5      	b.n	90019ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90019e38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90019e3a:	681b      	ldr	r3, [r3, #0]
90019e3c:	b923      	cbnz	r3, 90019e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90019e3e:	4b04      	ldr	r3, [pc, #16]	; (90019e50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90019e40:	6818      	ldr	r0, [r3, #0]
90019e42:	6803      	ldr	r3, [r0, #0]
90019e44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019e46:	4798      	blx	r3
90019e48:	b05b      	add	sp, #364	; 0x16c
90019e4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019e4e:	bf00      	nop
90019e50:	24028e2c 	.word	0x24028e2c

90019e54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90019e54:	b570      	push	{r4, r5, r6, lr}
90019e56:	4604      	mov	r4, r0
90019e58:	2500      	movs	r5, #0
90019e5a:	9805      	ldr	r0, [sp, #20]
90019e5c:	f89d 601c 	ldrb.w	r6, [sp, #28]
90019e60:	6061      	str	r1, [r4, #4]
90019e62:	8263      	strh	r3, [r4, #18]
90019e64:	f89d 1010 	ldrb.w	r1, [sp, #16]
90019e68:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90019e6c:	8025      	strh	r5, [r4, #0]
90019e6e:	7221      	strb	r1, [r4, #8]
90019e70:	7266      	strb	r6, [r4, #9]
90019e72:	60e0      	str	r0, [r4, #12]
90019e74:	8222      	strh	r2, [r4, #16]
90019e76:	82a3      	strh	r3, [r4, #20]
90019e78:	82e5      	strh	r5, [r4, #22]
90019e7a:	8325      	strh	r5, [r4, #24]
90019e7c:	8365      	strh	r5, [r4, #26]
90019e7e:	83a5      	strh	r5, [r4, #28]
90019e80:	83e5      	strh	r5, [r4, #30]
90019e82:	8425      	strh	r5, [r4, #32]
90019e84:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
90019e88:	b32e      	cbz	r6, 90019ed6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90019e8a:	6803      	ldr	r3, [r0, #0]
90019e8c:	695b      	ldr	r3, [r3, #20]
90019e8e:	4798      	blx	r3
90019e90:	4606      	mov	r6, r0
90019e92:	b300      	cbz	r0, 90019ed6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90019e94:	68e0      	ldr	r0, [r4, #12]
90019e96:	4631      	mov	r1, r6
90019e98:	6803      	ldr	r3, [r0, #0]
90019e9a:	68db      	ldr	r3, [r3, #12]
90019e9c:	4798      	blx	r3
90019e9e:	4605      	mov	r5, r0
90019ea0:	b1c8      	cbz	r0, 90019ed6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90019ea2:	7b43      	ldrb	r3, [r0, #13]
90019ea4:	7a82      	ldrb	r2, [r0, #10]
90019ea6:	005b      	lsls	r3, r3, #1
90019ea8:	f403 7380 	and.w	r3, r3, #256	; 0x100
90019eac:	4313      	orrs	r3, r2
90019eae:	8423      	strh	r3, [r4, #32]
90019eb0:	7a63      	ldrb	r3, [r4, #9]
90019eb2:	2b06      	cmp	r3, #6
90019eb4:	d10f      	bne.n	90019ed6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90019eb6:	68e0      	ldr	r0, [r4, #12]
90019eb8:	462a      	mov	r2, r5
90019eba:	4631      	mov	r1, r6
90019ebc:	6803      	ldr	r3, [r0, #0]
90019ebe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90019ec0:	4798      	blx	r3
90019ec2:	7b6b      	ldrb	r3, [r5, #13]
90019ec4:	005b      	lsls	r3, r3, #1
90019ec6:	f403 7280 	and.w	r2, r3, #256	; 0x100
90019eca:	7aab      	ldrb	r3, [r5, #10]
90019ecc:	4313      	orrs	r3, r2
90019ece:	4418      	add	r0, r3
90019ed0:	8c23      	ldrh	r3, [r4, #32]
90019ed2:	4418      	add	r0, r3
90019ed4:	8420      	strh	r0, [r4, #32]
90019ed6:	4620      	mov	r0, r4
90019ed8:	bd70      	pop	{r4, r5, r6, pc}

90019eda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90019eda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019ede:	2400      	movs	r4, #0
90019ee0:	b085      	sub	sp, #20
90019ee2:	4681      	mov	r9, r0
90019ee4:	4688      	mov	r8, r1
90019ee6:	4692      	mov	sl, r2
90019ee8:	469b      	mov	fp, r3
90019eea:	4627      	mov	r7, r4
90019eec:	4625      	mov	r5, r4
90019eee:	4626      	mov	r6, r4
90019ef0:	4554      	cmp	r4, sl
90019ef2:	da2a      	bge.n	90019f4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90019ef4:	2300      	movs	r3, #0
90019ef6:	9303      	str	r3, [sp, #12]
90019ef8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90019efc:	429d      	cmp	r5, r3
90019efe:	d004      	beq.n	90019f0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90019f00:	f242 030b 	movw	r3, #8203	; 0x200b
90019f04:	429d      	cmp	r5, r3
90019f06:	bf18      	it	ne
90019f08:	462f      	movne	r7, r5
90019f0a:	ab03      	add	r3, sp, #12
90019f0c:	4642      	mov	r2, r8
90019f0e:	4659      	mov	r1, fp
90019f10:	4648      	mov	r0, r9
90019f12:	f003 f92b 	bl	9001d16c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90019f16:	4605      	mov	r5, r0
90019f18:	b1b8      	cbz	r0, 90019f4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90019f1a:	280a      	cmp	r0, #10
90019f1c:	d015      	beq.n	90019f4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90019f1e:	9a03      	ldr	r2, [sp, #12]
90019f20:	b18a      	cbz	r2, 90019f46 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90019f22:	7b50      	ldrb	r0, [r2, #13]
90019f24:	4639      	mov	r1, r7
90019f26:	7a93      	ldrb	r3, [r2, #10]
90019f28:	0040      	lsls	r0, r0, #1
90019f2a:	8895      	ldrh	r5, [r2, #4]
90019f2c:	f400 7080 	and.w	r0, r0, #256	; 0x100
90019f30:	4303      	orrs	r3, r0
90019f32:	4640      	mov	r0, r8
90019f34:	9301      	str	r3, [sp, #4]
90019f36:	f8d8 3000 	ldr.w	r3, [r8]
90019f3a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90019f3c:	4798      	blx	r3
90019f3e:	9b01      	ldr	r3, [sp, #4]
90019f40:	4418      	add	r0, r3
90019f42:	4406      	add	r6, r0
90019f44:	b2b6      	uxth	r6, r6
90019f46:	3401      	adds	r4, #1
90019f48:	e7d2      	b.n	90019ef0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90019f4a:	4630      	mov	r0, r6
90019f4c:	b005      	add	sp, #20
90019f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019f52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90019f52:	2a02      	cmp	r2, #2
90019f54:	b530      	push	{r4, r5, lr}
90019f56:	d011      	beq.n	90019f7c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90019f58:	2a03      	cmp	r2, #3
90019f5a:	d01c      	beq.n	90019f96 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90019f5c:	2a01      	cmp	r2, #1
90019f5e:	d10c      	bne.n	90019f7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90019f60:	888b      	ldrh	r3, [r1, #4]
90019f62:	8801      	ldrh	r1, [r0, #0]
90019f64:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90019f68:	1a5b      	subs	r3, r3, r1
90019f6a:	8844      	ldrh	r4, [r0, #2]
90019f6c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90019f70:	1a9b      	subs	r3, r3, r2
90019f72:	8004      	strh	r4, [r0, #0]
90019f74:	8081      	strh	r1, [r0, #4]
90019f76:	8043      	strh	r3, [r0, #2]
90019f78:	80c2      	strh	r2, [r0, #6]
90019f7a:	bd30      	pop	{r4, r5, pc}
90019f7c:	88cb      	ldrh	r3, [r1, #6]
90019f7e:	8842      	ldrh	r2, [r0, #2]
90019f80:	1a9b      	subs	r3, r3, r2
90019f82:	88c2      	ldrh	r2, [r0, #6]
90019f84:	1a9b      	subs	r3, r3, r2
90019f86:	888a      	ldrh	r2, [r1, #4]
90019f88:	8801      	ldrh	r1, [r0, #0]
90019f8a:	8043      	strh	r3, [r0, #2]
90019f8c:	1a52      	subs	r2, r2, r1
90019f8e:	8881      	ldrh	r1, [r0, #4]
90019f90:	1a52      	subs	r2, r2, r1
90019f92:	8002      	strh	r2, [r0, #0]
90019f94:	e7f1      	b.n	90019f7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90019f96:	88cb      	ldrh	r3, [r1, #6]
90019f98:	8841      	ldrh	r1, [r0, #2]
90019f9a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90019f9e:	1a5b      	subs	r3, r3, r1
90019fa0:	f9b0 5000 	ldrsh.w	r5, [r0]
90019fa4:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90019fa8:	1a9b      	subs	r3, r3, r2
90019faa:	8045      	strh	r5, [r0, #2]
90019fac:	8082      	strh	r2, [r0, #4]
90019fae:	8003      	strh	r3, [r0, #0]
90019fb0:	80c4      	strh	r4, [r0, #6]
90019fb2:	e7e2      	b.n	90019f7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90019fb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90019fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019fb8:	b09f      	sub	sp, #124	; 0x7c
90019fba:	9116      	str	r1, [sp, #88]	; 0x58
90019fbc:	9317      	str	r3, [sp, #92]	; 0x5c
90019fbe:	9929      	ldr	r1, [sp, #164]	; 0xa4
90019fc0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90019fc2:	8809      	ldrh	r1, [r1, #0]
90019fc4:	889b      	ldrh	r3, [r3, #4]
90019fc6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
90019fca:	440b      	add	r3, r1
90019fcc:	9212      	str	r2, [sp, #72]	; 0x48
90019fce:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
90019fd2:	b21b      	sxth	r3, r3
90019fd4:	9011      	str	r0, [sp, #68]	; 0x44
90019fd6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
90019fda:	9310      	str	r3, [sp, #64]	; 0x40
90019fdc:	f8d8 3000 	ldr.w	r3, [r8]
90019fe0:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
90019fe4:	7b19      	ldrb	r1, [r3, #12]
90019fe6:	7adb      	ldrb	r3, [r3, #11]
90019fe8:	9114      	str	r1, [sp, #80]	; 0x50
90019fea:	9315      	str	r3, [sp, #84]	; 0x54
90019fec:	2a00      	cmp	r2, #0
90019fee:	d06a      	beq.n	9001a0c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90019ff0:	f898 3010 	ldrb.w	r3, [r8, #16]
90019ff4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90019ff6:	2b06      	cmp	r3, #6
90019ff8:	bf14      	ite	ne
90019ffa:	2301      	movne	r3, #1
90019ffc:	2302      	moveq	r3, #2
90019ffe:	4413      	add	r3, r2
9001a000:	f04f 0900 	mov.w	r9, #0
9001a004:	930f      	str	r3, [sp, #60]	; 0x3c
9001a006:	464c      	mov	r4, r9
9001a008:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
9001a00c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
9001a010:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
9001a014:	4293      	cmp	r3, r2
9001a016:	f280 808f 	bge.w	9001a138 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
9001a01a:	2300      	movs	r3, #0
9001a01c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
9001a020:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
9001a024:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001a028:	429c      	cmp	r4, r3
9001a02a:	d006      	beq.n	9001a03a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
9001a02c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001a02e:	f242 020b 	movw	r2, #8203	; 0x200b
9001a032:	4294      	cmp	r4, r2
9001a034:	bf18      	it	ne
9001a036:	4623      	movne	r3, r4
9001a038:	930d      	str	r3, [sp, #52]	; 0x34
9001a03a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a03c:	992d      	ldr	r1, [sp, #180]	; 0xb4
9001a03e:	f8d8 2000 	ldr.w	r2, [r8]
9001a042:	428b      	cmp	r3, r1
9001a044:	db41      	blt.n	9001a0ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
9001a046:	6813      	ldr	r3, [r2, #0]
9001a048:	4610      	mov	r0, r2
9001a04a:	695b      	ldr	r3, [r3, #20]
9001a04c:	4798      	blx	r3
9001a04e:	4604      	mov	r4, r0
9001a050:	f8d8 0000 	ldr.w	r0, [r8]
9001a054:	aa1d      	add	r2, sp, #116	; 0x74
9001a056:	4621      	mov	r1, r4
9001a058:	6803      	ldr	r3, [r0, #0]
9001a05a:	689d      	ldr	r5, [r3, #8]
9001a05c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
9001a060:	47a8      	blx	r5
9001a062:	901c      	str	r0, [sp, #112]	; 0x70
9001a064:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001a068:	429c      	cmp	r4, r3
9001a06a:	f000 80ec 	beq.w	9001a246 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001a06e:	f242 030b 	movw	r3, #8203	; 0x200b
9001a072:	429c      	cmp	r4, r3
9001a074:	f000 80e7 	beq.w	9001a246 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001a078:	2c00      	cmp	r4, #0
9001a07a:	f000 80f9 	beq.w	9001a270 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001a07e:	2c0a      	cmp	r4, #10
9001a080:	d060      	beq.n	9001a144 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
9001a082:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9001a084:	b36a      	cbz	r2, 9001a0e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
9001a086:	8894      	ldrh	r4, [r2, #4]
9001a088:	f1bb 0f00 	cmp.w	fp, #0
9001a08c:	d03b      	beq.n	9001a106 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
9001a08e:	f892 900d 	ldrb.w	r9, [r2, #13]
9001a092:	f1bb 0f01 	cmp.w	fp, #1
9001a096:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001a09a:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001a09e:	f892 900a 	ldrb.w	r9, [r2, #10]
9001a0a2:	ea49 0903 	orr.w	r9, r9, r3
9001a0a6:	d134      	bne.n	9001a112 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
9001a0a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001a0aa:	eba6 0609 	sub.w	r6, r6, r9
9001a0ae:	2b00      	cmp	r3, #0
9001a0b0:	d14f      	bne.n	9001a152 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
9001a0b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a0b4:	eb09 0306 	add.w	r3, r9, r6
9001a0b8:	4413      	add	r3, r2
9001a0ba:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9001a0bc:	f9b2 2000 	ldrsh.w	r2, [r2]
9001a0c0:	4293      	cmp	r3, r2
9001a0c2:	da51      	bge.n	9001a168 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
9001a0c4:	e038      	b.n	9001a138 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
9001a0c6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001a0c8:	e79a      	b.n	9001a000 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
9001a0ca:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
9001a0ce:	4659      	mov	r1, fp
9001a0d0:	982c      	ldr	r0, [sp, #176]	; 0xb0
9001a0d2:	9301      	str	r3, [sp, #4]
9001a0d4:	ab1d      	add	r3, sp, #116	; 0x74
9001a0d6:	9300      	str	r3, [sp, #0]
9001a0d8:	ab1c      	add	r3, sp, #112	; 0x70
9001a0da:	f003 f890 	bl	9001d1fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
9001a0de:	4604      	mov	r4, r0
9001a0e0:	e7c0      	b.n	9001a064 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
9001a0e2:	f8d8 0000 	ldr.w	r0, [r8]
9001a0e6:	6803      	ldr	r3, [r0, #0]
9001a0e8:	691b      	ldr	r3, [r3, #16]
9001a0ea:	4798      	blx	r3
9001a0ec:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001a0f0:	4298      	cmp	r0, r3
9001a0f2:	f000 80a8 	beq.w	9001a246 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001a0f6:	f242 030b 	movw	r3, #8203	; 0x200b
9001a0fa:	4298      	cmp	r0, r3
9001a0fc:	f000 80a3 	beq.w	9001a246 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001a100:	f1bb 0f00 	cmp.w	fp, #0
9001a104:	d100      	bne.n	9001a108 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
9001a106:	444e      	add	r6, r9
9001a108:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9001a10a:	2a00      	cmp	r2, #0
9001a10c:	d1bf      	bne.n	9001a08e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
9001a10e:	4691      	mov	r9, r2
9001a110:	e099      	b.n	9001a246 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001a112:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001a114:	2b00      	cmp	r3, #0
9001a116:	f000 80ad 	beq.w	9001a274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
9001a11a:	f1bb 0f00 	cmp.w	fp, #0
9001a11e:	d118      	bne.n	9001a152 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
9001a120:	f8d8 0000 	ldr.w	r0, [r8]
9001a124:	990d      	ldr	r1, [sp, #52]	; 0x34
9001a126:	6803      	ldr	r3, [r0, #0]
9001a128:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001a12a:	4798      	blx	r3
9001a12c:	4406      	add	r6, r0
9001a12e:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001a130:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a132:	1af3      	subs	r3, r6, r3
9001a134:	4293      	cmp	r3, r2
9001a136:	dd17      	ble.n	9001a168 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
9001a138:	2c00      	cmp	r4, #0
9001a13a:	f000 8099 	beq.w	9001a270 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001a13e:	2c0a      	cmp	r4, #10
9001a140:	f040 8087 	bne.w	9001a252 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
9001a144:	240a      	movs	r4, #10
9001a146:	fab4 f084 	clz	r0, r4
9001a14a:	0940      	lsrs	r0, r0, #5
9001a14c:	b01f      	add	sp, #124	; 0x7c
9001a14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a152:	f8d8 0000 	ldr.w	r0, [r8]
9001a156:	990d      	ldr	r1, [sp, #52]	; 0x34
9001a158:	6803      	ldr	r3, [r0, #0]
9001a15a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001a15c:	4798      	blx	r3
9001a15e:	f1bb 0f01 	cmp.w	fp, #1
9001a162:	eba6 0600 	sub.w	r6, r6, r0
9001a166:	d0a4      	beq.n	9001a0b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
9001a168:	981c      	ldr	r0, [sp, #112]	; 0x70
9001a16a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001a16c:	f990 1009 	ldrsb.w	r1, [r0, #9]
9001a170:	f9b3 7000 	ldrsh.w	r7, [r3]
9001a174:	7b43      	ldrb	r3, [r0, #13]
9001a176:	4431      	add	r1, r6
9001a178:	015b      	lsls	r3, r3, #5
9001a17a:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a17e:	7983      	ldrb	r3, [r0, #6]
9001a180:	4313      	orrs	r3, r2
9001a182:	440b      	add	r3, r1
9001a184:	42bb      	cmp	r3, r7
9001a186:	db5e      	blt.n	9001a246 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001a188:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a18a:	4299      	cmp	r1, r3
9001a18c:	da5b      	bge.n	9001a246 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001a18e:	f8d8 0000 	ldr.w	r0, [r8]
9001a192:	42b7      	cmp	r7, r6
9001a194:	6803      	ldr	r3, [r0, #0]
9001a196:	bfcc      	ite	gt
9001a198:	1bbf      	subgt	r7, r7, r6
9001a19a:	2700      	movle	r7, #0
9001a19c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001a19e:	bfc8      	it	gt
9001a1a0:	b2bf      	uxthgt	r7, r7
9001a1a2:	4798      	blx	r3
9001a1a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001a1a6:	7b5a      	ldrb	r2, [r3, #13]
9001a1a8:	00d1      	lsls	r1, r2, #3
9001a1aa:	f401 7580 	and.w	r5, r1, #256	; 0x100
9001a1ae:	7a19      	ldrb	r1, [r3, #8]
9001a1b0:	4329      	orrs	r1, r5
9001a1b2:	0655      	lsls	r5, r2, #25
9001a1b4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
9001a1b6:	bf48      	it	mi
9001a1b8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
9001a1bc:	4405      	add	r5, r0
9001a1be:	bf48      	it	mi
9001a1c0:	b209      	sxthmi	r1, r1
9001a1c2:	1a6d      	subs	r5, r5, r1
9001a1c4:	9929      	ldr	r1, [sp, #164]	; 0xa4
9001a1c6:	b2ad      	uxth	r5, r5
9001a1c8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
9001a1cc:	fa0f fa85 	sxth.w	sl, r5
9001a1d0:	4551      	cmp	r1, sl
9001a1d2:	dd3c      	ble.n	9001a24e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
9001a1d4:	0112      	lsls	r2, r2, #4
9001a1d6:	79d8      	ldrb	r0, [r3, #7]
9001a1d8:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001a1dc:	4302      	orrs	r2, r0
9001a1de:	4492      	add	sl, r2
9001a1e0:	4551      	cmp	r1, sl
9001a1e2:	dc30      	bgt.n	9001a246 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001a1e4:	1b4d      	subs	r5, r1, r5
9001a1e6:	468a      	mov	sl, r1
9001a1e8:	b22d      	sxth	r5, r5
9001a1ea:	9319      	str	r3, [sp, #100]	; 0x64
9001a1ec:	b2ad      	uxth	r5, r5
9001a1ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001a1f0:	f8d8 0000 	ldr.w	r0, [r8]
9001a1f4:	681a      	ldr	r2, [r3, #0]
9001a1f6:	6801      	ldr	r1, [r0, #0]
9001a1f8:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
9001a1fa:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9001a1fc:	9313      	str	r3, [sp, #76]	; 0x4c
9001a1fe:	9218      	str	r2, [sp, #96]	; 0x60
9001a200:	6c09      	ldr	r1, [r1, #64]	; 0x40
9001a202:	4788      	blx	r1
9001a204:	f898 1006 	ldrb.w	r1, [r8, #6]
9001a208:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001a20a:	910b      	str	r1, [sp, #44]	; 0x2c
9001a20c:	f898 100e 	ldrb.w	r1, [r8, #14]
9001a210:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001a212:	910a      	str	r1, [sp, #40]	; 0x28
9001a214:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
9001a218:	9109      	str	r1, [sp, #36]	; 0x24
9001a21a:	f8d8 1008 	ldr.w	r1, [r8, #8]
9001a21e:	9305      	str	r3, [sp, #20]
9001a220:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001a222:	9206      	str	r2, [sp, #24]
9001a224:	9304      	str	r3, [sp, #16]
9001a226:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001a228:	f8cd a004 	str.w	sl, [sp, #4]
9001a22c:	e9cd 7502 	strd	r7, r5, [sp, #8]
9001a230:	4437      	add	r7, r6
9001a232:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a234:	b23f      	sxth	r7, r7
9001a236:	e9cd 0107 	strd	r0, r1, [sp, #28]
9001a23a:	9700      	str	r7, [sp, #0]
9001a23c:	9916      	ldr	r1, [sp, #88]	; 0x58
9001a23e:	681a      	ldr	r2, [r3, #0]
9001a240:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a242:	685b      	ldr	r3, [r3, #4]
9001a244:	47a8      	blx	r5
9001a246:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a248:	3301      	adds	r3, #1
9001a24a:	930e      	str	r3, [sp, #56]	; 0x38
9001a24c:	e6e0      	b.n	9001a010 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
9001a24e:	2500      	movs	r5, #0
9001a250:	e7cb      	b.n	9001a1ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
9001a252:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001a254:	3501      	adds	r5, #1
9001a256:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001a258:	429d      	cmp	r5, r3
9001a25a:	f6bf af74 	bge.w	9001a146 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
9001a25e:	4659      	mov	r1, fp
9001a260:	982c      	ldr	r0, [sp, #176]	; 0xb0
9001a262:	f7ee fb33 	bl	900088cc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a266:	4604      	mov	r4, r0
9001a268:	b110      	cbz	r0, 9001a270 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001a26a:	280a      	cmp	r0, #10
9001a26c:	d1f2      	bne.n	9001a254 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
9001a26e:	e769      	b.n	9001a144 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
9001a270:	2400      	movs	r4, #0
9001a272:	e768      	b.n	9001a146 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
9001a274:	f1bb 0f00 	cmp.w	fp, #0
9001a278:	f43f af59 	beq.w	9001a12e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
9001a27c:	e774      	b.n	9001a168 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

9001a27e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
9001a27e:	b530      	push	{r4, r5, lr}
9001a280:	8ac4      	ldrh	r4, [r0, #22]
9001a282:	8b45      	ldrh	r5, [r0, #26]
9001a284:	8343      	strh	r3, [r0, #26]
9001a286:	442c      	add	r4, r5
9001a288:	1ae4      	subs	r4, r4, r3
9001a28a:	8b83      	ldrh	r3, [r0, #28]
9001a28c:	82c4      	strh	r4, [r0, #22]
9001a28e:	8b04      	ldrh	r4, [r0, #24]
9001a290:	4422      	add	r2, r4
9001a292:	440c      	add	r4, r1
9001a294:	1a59      	subs	r1, r3, r1
9001a296:	83c2      	strh	r2, [r0, #30]
9001a298:	8304      	strh	r4, [r0, #24]
9001a29a:	8381      	strh	r1, [r0, #28]
9001a29c:	bd30      	pop	{r4, r5, pc}

9001a29e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
9001a29e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a2a2:	4604      	mov	r4, r0
9001a2a4:	8a47      	ldrh	r7, [r0, #18]
9001a2a6:	68c0      	ldr	r0, [r0, #12]
9001a2a8:	b085      	sub	sp, #20
9001a2aa:	6803      	ldr	r3, [r0, #0]
9001a2ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001a2ae:	4798      	blx	r3
9001a2b0:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
9001a2b4:	7a63      	ldrb	r3, [r4, #9]
9001a2b6:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001a2ba:	3b01      	subs	r3, #1
9001a2bc:	42b7      	cmp	r7, r6
9001a2be:	bfac      	ite	ge
9001a2c0:	f04f 0900 	movge.w	r9, #0
9001a2c4:	f04f 0901 	movlt.w	r9, #1
9001a2c8:	2b05      	cmp	r3, #5
9001a2ca:	d804      	bhi.n	9001a2d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
9001a2cc:	e8df f003 	tbb	[pc, r3]
9001a2d0:	470f0854 	.word	0x470f0854
9001a2d4:	4c4c      	.short	0x4c4c
9001a2d6:	2500      	movs	r5, #0
9001a2d8:	46a9      	mov	r9, r5
9001a2da:	462e      	mov	r6, r5
9001a2dc:	462f      	mov	r7, r5
9001a2de:	e00e      	b.n	9001a2fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001a2e0:	42b7      	cmp	r7, r6
9001a2e2:	f04f 0500 	mov.w	r5, #0
9001a2e6:	bfb4      	ite	lt
9001a2e8:	2600      	movlt	r6, #0
9001a2ea:	2601      	movge	r6, #1
9001a2ec:	e7f6      	b.n	9001a2dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001a2ee:	42b7      	cmp	r7, r6
9001a2f0:	464d      	mov	r5, r9
9001a2f2:	f04f 0900 	mov.w	r9, #0
9001a2f6:	bfb4      	ite	lt
9001a2f8:	2600      	movlt	r6, #0
9001a2fa:	2601      	movge	r6, #1
9001a2fc:	464f      	mov	r7, r9
9001a2fe:	f04f 0800 	mov.w	r8, #0
9001a302:	f8a4 8016 	strh.w	r8, [r4, #22]
9001a306:	f8a4 8018 	strh.w	r8, [r4, #24]
9001a30a:	f8cd 8004 	str.w	r8, [sp, #4]
9001a30e:	2300      	movs	r3, #0
9001a310:	9303      	str	r3, [sp, #12]
9001a312:	8823      	ldrh	r3, [r4, #0]
9001a314:	2b20      	cmp	r3, #32
9001a316:	d033      	beq.n	9001a380 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
9001a318:	f242 010b 	movw	r1, #8203	; 0x200b
9001a31c:	1a5a      	subs	r2, r3, r1
9001a31e:	f1d2 0a00 	rsbs	sl, r2, #0
9001a322:	eb4a 0a02 	adc.w	sl, sl, r2
9001a326:	f64f 62ff 	movw	r2, #65279	; 0xfeff
9001a32a:	4293      	cmp	r3, r2
9001a32c:	d008      	beq.n	9001a340 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001a32e:	428b      	cmp	r3, r1
9001a330:	9a01      	ldr	r2, [sp, #4]
9001a332:	bf0e      	itee	eq
9001a334:	f04f 0a01 	moveq.w	sl, #1
9001a338:	461a      	movne	r2, r3
9001a33a:	f04f 0a00 	movne.w	sl, #0
9001a33e:	9201      	str	r2, [sp, #4]
9001a340:	ab03      	add	r3, sp, #12
9001a342:	68e2      	ldr	r2, [r4, #12]
9001a344:	7a21      	ldrb	r1, [r4, #8]
9001a346:	6860      	ldr	r0, [r4, #4]
9001a348:	f002 ff10 	bl	9001d16c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a34c:	8020      	strh	r0, [r4, #0]
9001a34e:	b9d8      	cbnz	r0, 9001a388 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
9001a350:	8ba2      	ldrh	r2, [r4, #28]
9001a352:	2300      	movs	r3, #0
9001a354:	4611      	mov	r1, r2
9001a356:	4620      	mov	r0, r4
9001a358:	f7ff ff91 	bl	9001a27e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9001a35c:	e06e      	b.n	9001a43c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
9001a35e:	2500      	movs	r5, #0
9001a360:	2701      	movs	r7, #1
9001a362:	46a9      	mov	r9, r5
9001a364:	462e      	mov	r6, r5
9001a366:	e7ca      	b.n	9001a2fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001a368:	42b7      	cmp	r7, r6
9001a36a:	f04f 0500 	mov.w	r5, #0
9001a36e:	bfb4      	ite	lt
9001a370:	2700      	movlt	r7, #0
9001a372:	2701      	movge	r7, #1
9001a374:	462e      	mov	r6, r5
9001a376:	e7c2      	b.n	9001a2fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001a378:	2500      	movs	r5, #0
9001a37a:	2601      	movs	r6, #1
9001a37c:	46a9      	mov	r9, r5
9001a37e:	e7ad      	b.n	9001a2dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001a380:	9301      	str	r3, [sp, #4]
9001a382:	f04f 0a01 	mov.w	sl, #1
9001a386:	e7db      	b.n	9001a340 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001a388:	8b63      	ldrh	r3, [r4, #26]
9001a38a:	280a      	cmp	r0, #10
9001a38c:	f103 0301 	add.w	r3, r3, #1
9001a390:	8363      	strh	r3, [r4, #26]
9001a392:	d0dd      	beq.n	9001a350 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
9001a394:	9a03      	ldr	r2, [sp, #12]
9001a396:	bb62      	cbnz	r2, 9001a3f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
9001a398:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001a39c:	4298      	cmp	r0, r3
9001a39e:	d003      	beq.n	9001a3a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
9001a3a0:	f242 030b 	movw	r3, #8203	; 0x200b
9001a3a4:	4298      	cmp	r0, r3
9001a3a6:	d1b2      	bne.n	9001a30e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a3a8:	8823      	ldrh	r3, [r4, #0]
9001a3aa:	8ba1      	ldrh	r1, [r4, #28]
9001a3ac:	2b20      	cmp	r3, #32
9001a3ae:	d003      	beq.n	9001a3b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
9001a3b0:	f242 000b 	movw	r0, #8203	; 0x200b
9001a3b4:	4283      	cmp	r3, r0
9001a3b6:	d131      	bne.n	9001a41c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001a3b8:	f1ba 0f00 	cmp.w	sl, #0
9001a3bc:	bf0a      	itet	eq
9001a3be:	4688      	moveq	r8, r1
9001a3c0:	4650      	movne	r0, sl
9001a3c2:	2001      	moveq	r0, #1
9001a3c4:	440a      	add	r2, r1
9001a3c6:	8b23      	ldrh	r3, [r4, #24]
9001a3c8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
9001a3cc:	b292      	uxth	r2, r2
9001a3ce:	83a2      	strh	r2, [r4, #28]
9001a3d0:	4413      	add	r3, r2
9001a3d2:	f1b9 0f00 	cmp.w	r9, #0
9001a3d6:	d102      	bne.n	9001a3de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
9001a3d8:	2d00      	cmp	r5, #0
9001a3da:	d042      	beq.n	9001a462 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
9001a3dc:	b300      	cbz	r0, 9001a420 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
9001a3de:	8c21      	ldrh	r1, [r4, #32]
9001a3e0:	4419      	add	r1, r3
9001a3e2:	458c      	cmp	ip, r1
9001a3e4:	da37      	bge.n	9001a456 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001a3e6:	8ae1      	ldrh	r1, [r4, #22]
9001a3e8:	2900      	cmp	r1, #0
9001a3ea:	d034      	beq.n	9001a456 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001a3ec:	4563      	cmp	r3, ip
9001a3ee:	dd8e      	ble.n	9001a30e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a3f0:	e01d      	b.n	9001a42e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
9001a3f2:	8893      	ldrh	r3, [r2, #4]
9001a3f4:	9901      	ldr	r1, [sp, #4]
9001a3f6:	8023      	strh	r3, [r4, #0]
9001a3f8:	f892 b00d 	ldrb.w	fp, [r2, #13]
9001a3fc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
9001a400:	f40b 7080 	and.w	r0, fp, #256	; 0x100
9001a404:	f892 b00a 	ldrb.w	fp, [r2, #10]
9001a408:	ea4b 0b00 	orr.w	fp, fp, r0
9001a40c:	68e0      	ldr	r0, [r4, #12]
9001a40e:	6803      	ldr	r3, [r0, #0]
9001a410:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001a412:	4798      	blx	r3
9001a414:	eb0b 0200 	add.w	r2, fp, r0
9001a418:	b292      	uxth	r2, r2
9001a41a:	e7c5      	b.n	9001a3a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
9001a41c:	2000      	movs	r0, #0
9001a41e:	e7d1      	b.n	9001a3c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
9001a420:	4563      	cmp	r3, ip
9001a422:	f77f af74 	ble.w	9001a30e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a426:	8ae3      	ldrh	r3, [r4, #22]
9001a428:	2b00      	cmp	r3, #0
9001a42a:	f43f af70 	beq.w	9001a30e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a42e:	2301      	movs	r3, #1
9001a430:	8c22      	ldrh	r2, [r4, #32]
9001a432:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
9001a436:	8be3      	ldrh	r3, [r4, #30]
9001a438:	4413      	add	r3, r2
9001a43a:	83e3      	strh	r3, [r4, #30]
9001a43c:	68e0      	ldr	r0, [r4, #12]
9001a43e:	6803      	ldr	r3, [r0, #0]
9001a440:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001a442:	4798      	blx	r3
9001a444:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
9001a448:	4418      	add	r0, r3
9001a44a:	8a63      	ldrh	r3, [r4, #18]
9001a44c:	1a18      	subs	r0, r3, r0
9001a44e:	8260      	strh	r0, [r4, #18]
9001a450:	b005      	add	sp, #20
9001a452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a456:	2300      	movs	r3, #0
9001a458:	4611      	mov	r1, r2
9001a45a:	4620      	mov	r0, r4
9001a45c:	f7ff ff0f 	bl	9001a27e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9001a460:	e755      	b.n	9001a30e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a462:	4563      	cmp	r3, ip
9001a464:	dd14      	ble.n	9001a490 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
9001a466:	b117      	cbz	r7, 9001a46e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
9001a468:	2301      	movs	r3, #1
9001a46a:	460a      	mov	r2, r1
9001a46c:	e772      	b.n	9001a354 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
9001a46e:	2e00      	cmp	r6, #0
9001a470:	f43f af4d 	beq.w	9001a30e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a474:	2800      	cmp	r0, #0
9001a476:	f47f af4a 	bne.w	9001a30e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a47a:	f1ba 0f00 	cmp.w	sl, #0
9001a47e:	d002      	beq.n	9001a486 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
9001a480:	2301      	movs	r3, #1
9001a482:	4642      	mov	r2, r8
9001a484:	e767      	b.n	9001a356 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001a486:	8ae3      	ldrh	r3, [r4, #22]
9001a488:	2b00      	cmp	r3, #0
9001a48a:	f43f af40 	beq.w	9001a30e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a48e:	e7d5      	b.n	9001a43c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
9001a490:	2800      	cmp	r0, #0
9001a492:	f47f af3c 	bne.w	9001a30e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a496:	f1ba 0f00 	cmp.w	sl, #0
9001a49a:	f43f af38 	beq.w	9001a30e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a49e:	2301      	movs	r3, #1
9001a4a0:	4642      	mov	r2, r8
9001a4a2:	e7da      	b.n	9001a45a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

9001a4a4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
9001a4a4:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a4a6:	4605      	mov	r5, r0
9001a4a8:	b08f      	sub	sp, #60	; 0x3c
9001a4aa:	4617      	mov	r7, r2
9001a4ac:	461c      	mov	r4, r3
9001a4ae:	460e      	mov	r6, r1
9001a4b0:	b1d1      	cbz	r1, 9001a4e8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
9001a4b2:	681b      	ldr	r3, [r3, #0]
9001a4b4:	4620      	mov	r0, r4
9001a4b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001a4b8:	4798      	blx	r3
9001a4ba:	4240      	negs	r0, r0
9001a4bc:	9603      	str	r6, [sp, #12]
9001a4be:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001a4c2:	b200      	sxth	r0, r0
9001a4c4:	9700      	str	r7, [sp, #0]
9001a4c6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001a4ca:	4629      	mov	r1, r5
9001a4cc:	e9cd 4001 	strd	r4, r0, [sp, #4]
9001a4d0:	2401      	movs	r4, #1
9001a4d2:	a805      	add	r0, sp, #20
9001a4d4:	f7ff fcbe 	bl	90019e54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001a4d8:	a805      	add	r0, sp, #20
9001a4da:	f7ff fee0 	bl	9001a29e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001a4de:	f8bd 3014 	ldrh.w	r3, [sp, #20]
9001a4e2:	b163      	cbz	r3, 9001a4fe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
9001a4e4:	3401      	adds	r4, #1
9001a4e6:	e7f7      	b.n	9001a4d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
9001a4e8:	2401      	movs	r4, #1
9001a4ea:	f002 ff0b 	bl	9001d304 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a4ee:	280a      	cmp	r0, #10
9001a4f0:	4628      	mov	r0, r5
9001a4f2:	bf08      	it	eq
9001a4f4:	3401      	addeq	r4, #1
9001a4f6:	f002 ff05 	bl	9001d304 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a4fa:	2800      	cmp	r0, #0
9001a4fc:	d1f7      	bne.n	9001a4ee <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
9001a4fe:	b2a0      	uxth	r0, r4
9001a500:	b00f      	add	sp, #60	; 0x3c
9001a502:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001a504 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
9001a504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a508:	b0e3      	sub	sp, #396	; 0x18c
9001a50a:	461c      	mov	r4, r3
9001a50c:	4683      	mov	fp, r0
9001a50e:	4688      	mov	r8, r1
9001a510:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
9001a512:	2b00      	cmp	r3, #0
9001a514:	f000 810f 	beq.w	9001a736 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a518:	6823      	ldr	r3, [r4, #0]
9001a51a:	2b00      	cmp	r3, #0
9001a51c:	f000 810b 	beq.w	9001a736 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a520:	7ba3      	ldrb	r3, [r4, #14]
9001a522:	2b00      	cmp	r3, #0
9001a524:	f000 8107 	beq.w	9001a736 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a528:	ad0a      	add	r5, sp, #40	; 0x28
9001a52a:	6810      	ldr	r0, [r2, #0]
9001a52c:	6851      	ldr	r1, [r2, #4]
9001a52e:	462b      	mov	r3, r5
9001a530:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
9001a534:	c303      	stmia	r3!, {r0, r1}
9001a536:	2100      	movs	r1, #0
9001a538:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001a53c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
9001a540:	4628      	mov	r0, r5
9001a542:	910c      	str	r1, [sp, #48]	; 0x30
9001a544:	a90c      	add	r1, sp, #48	; 0x30
9001a546:	79a2      	ldrb	r2, [r4, #6]
9001a548:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001a54c:	f7ff fd01 	bl	90019f52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001a550:	a90c      	add	r1, sp, #48	; 0x30
9001a552:	79a2      	ldrb	r2, [r4, #6]
9001a554:	4608      	mov	r0, r1
9001a556:	f7ff fcfc 	bl	90019f52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001a55a:	a817      	add	r0, sp, #92	; 0x5c
9001a55c:	f002 faa6 	bl	9001caac <_ZN8touchgfx12TextProviderC1Ev>
9001a560:	6820      	ldr	r0, [r4, #0]
9001a562:	6803      	ldr	r3, [r0, #0]
9001a564:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001a566:	4798      	blx	r3
9001a568:	4606      	mov	r6, r0
9001a56a:	6820      	ldr	r0, [r4, #0]
9001a56c:	6803      	ldr	r3, [r0, #0]
9001a56e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001a570:	4798      	blx	r3
9001a572:	4633      	mov	r3, r6
9001a574:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
9001a576:	996c      	ldr	r1, [sp, #432]	; 0x1b0
9001a578:	9000      	str	r0, [sp, #0]
9001a57a:	a817      	add	r0, sp, #92	; 0x5c
9001a57c:	f002 faf1 	bl	9001cb62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a580:	6820      	ldr	r0, [r4, #0]
9001a582:	f894 a004 	ldrb.w	sl, [r4, #4]
9001a586:	6803      	ldr	r3, [r0, #0]
9001a588:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001a58a:	4798      	blx	r3
9001a58c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
9001a590:	6823      	ldr	r3, [r4, #0]
9001a592:	4607      	mov	r7, r0
9001a594:	4406      	add	r6, r0
9001a596:	a830      	add	r0, sp, #192	; 0xc0
9001a598:	f893 9009 	ldrb.w	r9, [r3, #9]
9001a59c:	f002 fa86 	bl	9001caac <_ZN8touchgfx12TextProviderC1Ev>
9001a5a0:	7c23      	ldrb	r3, [r4, #16]
9001a5a2:	b17b      	cbz	r3, 9001a5c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
9001a5a4:	6820      	ldr	r0, [r4, #0]
9001a5a6:	6803      	ldr	r3, [r0, #0]
9001a5a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001a5aa:	4798      	blx	r3
9001a5ac:	9009      	str	r0, [sp, #36]	; 0x24
9001a5ae:	6820      	ldr	r0, [r4, #0]
9001a5b0:	6802      	ldr	r2, [r0, #0]
9001a5b2:	6d12      	ldr	r2, [r2, #80]	; 0x50
9001a5b4:	4790      	blx	r2
9001a5b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001a5b8:	9000      	str	r0, [sp, #0]
9001a5ba:	a830      	add	r0, sp, #192	; 0xc0
9001a5bc:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
9001a5be:	996c      	ldr	r1, [sp, #432]	; 0x1b0
9001a5c0:	f002 facf 	bl	9001cb62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a5c4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001a5c8:	a80e      	add	r0, sp, #56	; 0x38
9001a5ca:	7be2      	ldrb	r2, [r4, #15]
9001a5cc:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
9001a5d0:	1a8a      	subs	r2, r1, r2
9001a5d2:	7c21      	ldrb	r1, [r4, #16]
9001a5d4:	9103      	str	r1, [sp, #12]
9001a5d6:	b292      	uxth	r2, r2
9001a5d8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9001a5dc:	9102      	str	r1, [sp, #8]
9001a5de:	6821      	ldr	r1, [r4, #0]
9001a5e0:	9101      	str	r1, [sp, #4]
9001a5e2:	7961      	ldrb	r1, [r4, #5]
9001a5e4:	9100      	str	r1, [sp, #0]
9001a5e6:	a930      	add	r1, sp, #192	; 0xc0
9001a5e8:	f7ff fc34 	bl	90019e54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001a5ec:	2e00      	cmp	r6, #0
9001a5ee:	dc5b      	bgt.n	9001a6a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
9001a5f0:	af17      	add	r7, sp, #92	; 0x5c
9001a5f2:	f04f 0900 	mov.w	r9, #0
9001a5f6:	7c23      	ldrb	r3, [r4, #16]
9001a5f8:	2b00      	cmp	r3, #0
9001a5fa:	f000 80ae 	beq.w	9001a75a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
9001a5fe:	a80e      	add	r0, sp, #56	; 0x38
9001a600:	f7ff fe4d 	bl	9001a29e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001a604:	f1ba 0f00 	cmp.w	sl, #0
9001a608:	f000 80a2 	beq.w	9001a750 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
9001a60c:	7c23      	ldrb	r3, [r4, #16]
9001a60e:	2264      	movs	r2, #100	; 0x64
9001a610:	4639      	mov	r1, r7
9001a612:	a849      	add	r0, sp, #292	; 0x124
9001a614:	9309      	str	r3, [sp, #36]	; 0x24
9001a616:	f011 fa53 	bl	9002bac0 <memcpy>
9001a61a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001a61c:	2b00      	cmp	r3, #0
9001a61e:	f000 80a4 	beq.w	9001a76a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
9001a622:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
9001a626:	7922      	ldrb	r2, [r4, #4]
9001a628:	2a01      	cmp	r2, #1
9001a62a:	f040 8087 	bne.w	9001a73c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001a62e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
9001a632:	1ac0      	subs	r0, r0, r3
9001a634:	2302      	movs	r3, #2
9001a636:	fb90 f0f3 	sdiv	r0, r0, r3
9001a63a:	b200      	sxth	r0, r0
9001a63c:	7c23      	ldrb	r3, [r4, #16]
9001a63e:	2b00      	cmp	r3, #0
9001a640:	f000 8088 	beq.w	9001a754 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x250>
9001a644:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
9001a648:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
9001a64c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001a650:	e9cd 2105 	strd	r2, r1, [sp, #20]
9001a654:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001a658:	2100      	movs	r1, #0
9001a65a:	4410      	add	r0, r2
9001a65c:	4642      	mov	r2, r8
9001a65e:	b200      	sxth	r0, r0
9001a660:	e9cd 9703 	strd	r9, r7, [sp, #12]
9001a664:	9000      	str	r0, [sp, #0]
9001a666:	4658      	mov	r0, fp
9001a668:	e9cd 5401 	strd	r5, r4, [sp, #4]
9001a66c:	f7ff fca2 	bl	90019fb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
9001a670:	2800      	cmp	r0, #0
9001a672:	d160      	bne.n	9001a736 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a674:	b2b2      	uxth	r2, r6
9001a676:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001a67a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
9001a67e:	4413      	add	r3, r2
9001a680:	1a8a      	subs	r2, r1, r2
9001a682:	b21b      	sxth	r3, r3
9001a684:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
9001a688:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
9001a68c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001a690:	2a00      	cmp	r2, #0
9001a692:	d150      	bne.n	9001a736 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a694:	6822      	ldr	r2, [r4, #0]
9001a696:	8869      	ldrh	r1, [r5, #2]
9001a698:	7a12      	ldrb	r2, [r2, #8]
9001a69a:	1a9b      	subs	r3, r3, r2
9001a69c:	88ea      	ldrh	r2, [r5, #6]
9001a69e:	440a      	add	r2, r1
9001a6a0:	b212      	sxth	r2, r2
9001a6a2:	4293      	cmp	r3, r2
9001a6a4:	dda7      	ble.n	9001a5f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
9001a6a6:	e046      	b.n	9001a736 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a6a8:	7c23      	ldrb	r3, [r4, #16]
9001a6aa:	444f      	add	r7, r9
9001a6ac:	b1c3      	cbz	r3, 9001a6e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
9001a6ae:	f64f 79ff 	movw	r9, #65535	; 0xffff
9001a6b2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001a6b6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001a6ba:	443b      	add	r3, r7
9001a6bc:	4293      	cmp	r3, r2
9001a6be:	da97      	bge.n	9001a5f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
9001a6c0:	a80e      	add	r0, sp, #56	; 0x38
9001a6c2:	f7ff fdec 	bl	9001a29e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001a6c6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
9001a6ca:	3b01      	subs	r3, #1
9001a6cc:	b29b      	uxth	r3, r3
9001a6ce:	454b      	cmp	r3, r9
9001a6d0:	9309      	str	r3, [sp, #36]	; 0x24
9001a6d2:	d021      	beq.n	9001a718 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
9001a6d4:	7961      	ldrb	r1, [r4, #5]
9001a6d6:	a817      	add	r0, sp, #92	; 0x5c
9001a6d8:	f7ee f8f8 	bl	900088cc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a6dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001a6de:	e7f4      	b.n	9001a6ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
9001a6e0:	fa1f f986 	uxth.w	r9, r6
9001a6e4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001a6e8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001a6ec:	443b      	add	r3, r7
9001a6ee:	4293      	cmp	r3, r2
9001a6f0:	f6bf af7e 	bge.w	9001a5f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
9001a6f4:	a817      	add	r0, sp, #92	; 0x5c
9001a6f6:	f002 fe05 	bl	9001d304 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a6fa:	b1e0      	cbz	r0, 9001a736 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a6fc:	280a      	cmp	r0, #10
9001a6fe:	d1f1      	bne.n	9001a6e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
9001a700:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001a704:	444b      	add	r3, r9
9001a706:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001a70a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
9001a70e:	eba3 0309 	sub.w	r3, r3, r9
9001a712:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001a716:	e7e5      	b.n	9001a6e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
9001a718:	b2b3      	uxth	r3, r6
9001a71a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
9001a71e:	441a      	add	r2, r3
9001a720:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001a724:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
9001a728:	1ad3      	subs	r3, r2, r3
9001a72a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001a72e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001a732:	2b00      	cmp	r3, #0
9001a734:	d1bd      	bne.n	9001a6b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
9001a736:	b063      	add	sp, #396	; 0x18c
9001a738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a73c:	2a02      	cmp	r2, #2
9001a73e:	d105      	bne.n	9001a74c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
9001a740:	7be2      	ldrb	r2, [r4, #15]
9001a742:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
9001a746:	1a80      	subs	r0, r0, r2
9001a748:	1ac0      	subs	r0, r0, r3
9001a74a:	e776      	b.n	9001a63a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
9001a74c:	2000      	movs	r0, #0
9001a74e:	e775      	b.n	9001a63c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001a750:	7be0      	ldrb	r0, [r4, #15]
9001a752:	e773      	b.n	9001a63c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001a754:	f647 72ff 	movw	r2, #32767	; 0x7fff
9001a758:	e776      	b.n	9001a648 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
9001a75a:	f1ba 0f00 	cmp.w	sl, #0
9001a75e:	d0f7      	beq.n	9001a750 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
9001a760:	2264      	movs	r2, #100	; 0x64
9001a762:	4639      	mov	r1, r7
9001a764:	a849      	add	r0, sp, #292	; 0x124
9001a766:	f011 f9ab 	bl	9002bac0 <memcpy>
9001a76a:	2300      	movs	r3, #0
9001a76c:	f647 72ff 	movw	r2, #32767	; 0x7fff
9001a770:	6821      	ldr	r1, [r4, #0]
9001a772:	a849      	add	r0, sp, #292	; 0x124
9001a774:	f7ff fbb1 	bl	90019eda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
9001a778:	b203      	sxth	r3, r0
9001a77a:	e754      	b.n	9001a626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

9001a77c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
9001a77c:	2b03      	cmp	r3, #3
9001a77e:	d818      	bhi.n	9001a7b2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
9001a780:	e8df f003 	tbb	[pc, r3]
9001a784:	130d0602 	.word	0x130d0602
9001a788:	f9b0 2000 	ldrsh.w	r2, [r0]
9001a78c:	1850      	adds	r0, r2, r1
9001a78e:	4770      	bx	lr
9001a790:	8803      	ldrh	r3, [r0, #0]
9001a792:	8880      	ldrh	r0, [r0, #4]
9001a794:	4418      	add	r0, r3
9001a796:	b200      	sxth	r0, r0
9001a798:	1a80      	subs	r0, r0, r2
9001a79a:	3801      	subs	r0, #1
9001a79c:	4770      	bx	lr
9001a79e:	8803      	ldrh	r3, [r0, #0]
9001a7a0:	8880      	ldrh	r0, [r0, #4]
9001a7a2:	4418      	add	r0, r3
9001a7a4:	b200      	sxth	r0, r0
9001a7a6:	1a40      	subs	r0, r0, r1
9001a7a8:	e7f7      	b.n	9001a79a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
9001a7aa:	f9b0 0000 	ldrsh.w	r0, [r0]
9001a7ae:	4410      	add	r0, r2
9001a7b0:	4770      	bx	lr
9001a7b2:	2000      	movs	r0, #0
9001a7b4:	4770      	bx	lr

9001a7b6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
9001a7b6:	2b03      	cmp	r3, #3
9001a7b8:	d817      	bhi.n	9001a7ea <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
9001a7ba:	e8df f003 	tbb	[pc, r3]
9001a7be:	0602      	.short	0x0602
9001a7c0:	1009      	.short	0x1009
9001a7c2:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
9001a7c6:	1850      	adds	r0, r2, r1
9001a7c8:	4770      	bx	lr
9001a7ca:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
9001a7ce:	e7fa      	b.n	9001a7c6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
9001a7d0:	8843      	ldrh	r3, [r0, #2]
9001a7d2:	88c0      	ldrh	r0, [r0, #6]
9001a7d4:	4418      	add	r0, r3
9001a7d6:	b200      	sxth	r0, r0
9001a7d8:	1a80      	subs	r0, r0, r2
9001a7da:	3801      	subs	r0, #1
9001a7dc:	4770      	bx	lr
9001a7de:	8843      	ldrh	r3, [r0, #2]
9001a7e0:	88c0      	ldrh	r0, [r0, #6]
9001a7e2:	4418      	add	r0, r3
9001a7e4:	b200      	sxth	r0, r0
9001a7e6:	1a40      	subs	r0, r0, r1
9001a7e8:	e7f7      	b.n	9001a7da <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
9001a7ea:	2000      	movs	r0, #0
9001a7ec:	4770      	bx	lr
	...

9001a7f0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
9001a7f0:	4b01      	ldr	r3, [pc, #4]	; (9001a7f8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
9001a7f2:	2200      	movs	r2, #0
9001a7f4:	601a      	str	r2, [r3, #0]
9001a7f6:	4770      	bx	lr
9001a7f8:	24028e3c 	.word	0x24028e3c

9001a7fc <_ZN8touchgfx16TouchCalibration4clzuEm>:
9001a7fc:	4603      	mov	r3, r0
9001a7fe:	b1c8      	cbz	r0, 9001a834 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
9001a800:	0c02      	lsrs	r2, r0, #16
9001a802:	0412      	lsls	r2, r2, #16
9001a804:	b9a2      	cbnz	r2, 9001a830 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
9001a806:	0403      	lsls	r3, r0, #16
9001a808:	2010      	movs	r0, #16
9001a80a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
9001a80e:	bf04      	itt	eq
9001a810:	021b      	lsleq	r3, r3, #8
9001a812:	3008      	addeq	r0, #8
9001a814:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
9001a818:	bf04      	itt	eq
9001a81a:	011b      	lsleq	r3, r3, #4
9001a81c:	3004      	addeq	r0, #4
9001a81e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
9001a822:	bf04      	itt	eq
9001a824:	009b      	lsleq	r3, r3, #2
9001a826:	3002      	addeq	r0, #2
9001a828:	2b00      	cmp	r3, #0
9001a82a:	db04      	blt.n	9001a836 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
9001a82c:	3001      	adds	r0, #1
9001a82e:	4770      	bx	lr
9001a830:	2000      	movs	r0, #0
9001a832:	e7ea      	b.n	9001a80a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
9001a834:	2020      	movs	r0, #32
9001a836:	4770      	bx	lr

9001a838 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
9001a838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a83c:	b087      	sub	sp, #28
9001a83e:	4681      	mov	r9, r0
9001a840:	4698      	mov	r8, r3
9001a842:	4610      	mov	r0, r2
9001a844:	460d      	mov	r5, r1
9001a846:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
9001a84a:	b981      	cbnz	r1, 9001a86e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
9001a84c:	b14b      	cbz	r3, 9001a862 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
9001a84e:	460b      	mov	r3, r1
9001a850:	464a      	mov	r2, r9
9001a852:	4641      	mov	r1, r8
9001a854:	e9cd 4700 	strd	r4, r7, [sp]
9001a858:	f7ff ffee 	bl	9001a838 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001a85c:	b007      	add	sp, #28
9001a85e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a862:	f04f 33ff 	mov.w	r3, #4294967295
9001a866:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
9001a86a:	603b      	str	r3, [r7, #0]
9001a86c:	e7f6      	b.n	9001a85c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
9001a86e:	fa32 fa01 	lsrs.w	sl, r2, r1
9001a872:	d107      	bne.n	9001a884 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
9001a874:	fb09 f602 	mul.w	r6, r9, r2
9001a878:	fbb6 f0f4 	udiv	r0, r6, r4
9001a87c:	fb04 6610 	mls	r6, r4, r0, r6
9001a880:	603e      	str	r6, [r7, #0]
9001a882:	e7eb      	b.n	9001a85c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
9001a884:	2601      	movs	r6, #1
9001a886:	fa09 fb01 	lsl.w	fp, r9, r1
9001a88a:	408e      	lsls	r6, r1
9001a88c:	fbbb f3f4 	udiv	r3, fp, r4
9001a890:	3e01      	subs	r6, #1
9001a892:	9302      	str	r3, [sp, #8]
9001a894:	fb0a f303 	mul.w	r3, sl, r3
9001a898:	4016      	ands	r6, r2
9001a89a:	9303      	str	r3, [sp, #12]
9001a89c:	4630      	mov	r0, r6
9001a89e:	f7ff ffad 	bl	9001a7fc <_ZN8touchgfx16TouchCalibration4clzuEm>
9001a8a2:	464a      	mov	r2, r9
9001a8a4:	460b      	mov	r3, r1
9001a8a6:	4601      	mov	r1, r0
9001a8a8:	4630      	mov	r0, r6
9001a8aa:	e9cd 4700 	strd	r4, r7, [sp]
9001a8ae:	f7ff ffc3 	bl	9001a838 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001a8b2:	9b02      	ldr	r3, [sp, #8]
9001a8b4:	4606      	mov	r6, r0
9001a8b6:	eb05 0108 	add.w	r1, r5, r8
9001a8ba:	fb04 bb13 	mls	fp, r4, r3, fp
9001a8be:	4658      	mov	r0, fp
9001a8c0:	f7ff ff9c 	bl	9001a7fc <_ZN8touchgfx16TouchCalibration4clzuEm>
9001a8c4:	ab05      	add	r3, sp, #20
9001a8c6:	465a      	mov	r2, fp
9001a8c8:	e9cd 4300 	strd	r4, r3, [sp]
9001a8cc:	4603      	mov	r3, r0
9001a8ce:	4650      	mov	r0, sl
9001a8d0:	f7ff ffb2 	bl	9001a838 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001a8d4:	6839      	ldr	r1, [r7, #0]
9001a8d6:	9a05      	ldr	r2, [sp, #20]
9001a8d8:	9b03      	ldr	r3, [sp, #12]
9001a8da:	4411      	add	r1, r2
9001a8dc:	fbb1 f2f4 	udiv	r2, r1, r4
9001a8e0:	18d3      	adds	r3, r2, r3
9001a8e2:	fb04 1412 	mls	r4, r4, r2, r1
9001a8e6:	441e      	add	r6, r3
9001a8e8:	603c      	str	r4, [r7, #0]
9001a8ea:	4430      	add	r0, r6
9001a8ec:	e7b6      	b.n	9001a85c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

9001a8ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
9001a8ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a8f2:	b085      	sub	sp, #20
9001a8f4:	f1b0 0900 	subs.w	r9, r0, #0
9001a8f8:	461d      	mov	r5, r3
9001a8fa:	4617      	mov	r7, r2
9001a8fc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9001a8fe:	bfbb      	ittet	lt
9001a900:	f1c9 0900 	rsblt	r9, r9, #0
9001a904:	f04f 36ff 	movlt.w	r6, #4294967295
9001a908:	2601      	movge	r6, #1
9001a90a:	6823      	ldrlt	r3, [r4, #0]
9001a90c:	bfbc      	itt	lt
9001a90e:	425b      	neglt	r3, r3
9001a910:	6023      	strlt	r3, [r4, #0]
9001a912:	2a00      	cmp	r2, #0
9001a914:	da04      	bge.n	9001a920 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
9001a916:	6823      	ldr	r3, [r4, #0]
9001a918:	4257      	negs	r7, r2
9001a91a:	4276      	negs	r6, r6
9001a91c:	425b      	negs	r3, r3
9001a91e:	6023      	str	r3, [r4, #0]
9001a920:	2d00      	cmp	r5, #0
9001a922:	4638      	mov	r0, r7
9001a924:	bfba      	itte	lt
9001a926:	426d      	neglt	r5, r5
9001a928:	f04f 38ff 	movlt.w	r8, #4294967295
9001a92c:	f04f 0801 	movge.w	r8, #1
9001a930:	f7ff ff64 	bl	9001a7fc <_ZN8touchgfx16TouchCalibration4clzuEm>
9001a934:	ab03      	add	r3, sp, #12
9001a936:	463a      	mov	r2, r7
9001a938:	e9cd 5300 	strd	r5, r3, [sp]
9001a93c:	4603      	mov	r3, r0
9001a93e:	4648      	mov	r0, r9
9001a940:	f7ff ff7a 	bl	9001a838 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001a944:	6823      	ldr	r3, [r4, #0]
9001a946:	9a03      	ldr	r2, [sp, #12]
9001a948:	4546      	cmp	r6, r8
9001a94a:	441a      	add	r2, r3
9001a94c:	fb92 f3f5 	sdiv	r3, r2, r5
9001a950:	4418      	add	r0, r3
9001a952:	fb05 2313 	mls	r3, r5, r3, r2
9001a956:	bf18      	it	ne
9001a958:	4240      	negne	r0, r0
9001a95a:	1c72      	adds	r2, r6, #1
9001a95c:	6023      	str	r3, [r4, #0]
9001a95e:	d105      	bne.n	9001a96c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
9001a960:	2b00      	cmp	r3, #0
9001a962:	f1c3 0200 	rsb	r2, r3, #0
9001a966:	db0b      	blt.n	9001a980 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
9001a968:	6022      	str	r2, [r4, #0]
9001a96a:	e006      	b.n	9001a97a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001a96c:	2e01      	cmp	r6, #1
9001a96e:	d104      	bne.n	9001a97a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001a970:	2b00      	cmp	r3, #0
9001a972:	da02      	bge.n	9001a97a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001a974:	442b      	add	r3, r5
9001a976:	3801      	subs	r0, #1
9001a978:	6023      	str	r3, [r4, #0]
9001a97a:	b005      	add	sp, #20
9001a97c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001a980:	3801      	subs	r0, #1
9001a982:	1b52      	subs	r2, r2, r5
9001a984:	e7f0      	b.n	9001a968 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

9001a988 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
9001a988:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9001a98c:	4c1c      	ldr	r4, [pc, #112]	; (9001aa00 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
9001a98e:	4605      	mov	r5, r0
9001a990:	6807      	ldr	r7, [r0, #0]
9001a992:	69a3      	ldr	r3, [r4, #24]
9001a994:	b92b      	cbnz	r3, 9001a9a2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
9001a996:	6840      	ldr	r0, [r0, #4]
9001a998:	e9c5 7000 	strd	r7, r0, [r5]
9001a99c:	b004      	add	sp, #16
9001a99e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a9a2:	f04f 0802 	mov.w	r8, #2
9001a9a6:	68a2      	ldr	r2, [r4, #8]
9001a9a8:	ae04      	add	r6, sp, #16
9001a9aa:	6820      	ldr	r0, [r4, #0]
9001a9ac:	fb93 f1f8 	sdiv	r1, r3, r8
9001a9b0:	440a      	add	r2, r1
9001a9b2:	69e1      	ldr	r1, [r4, #28]
9001a9b4:	f846 2d04 	str.w	r2, [r6, #-4]!
9001a9b8:	463a      	mov	r2, r7
9001a9ba:	9600      	str	r6, [sp, #0]
9001a9bc:	f7ff ff97 	bl	9001a8ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001a9c0:	69a3      	ldr	r3, [r4, #24]
9001a9c2:	4607      	mov	r7, r0
9001a9c4:	686a      	ldr	r2, [r5, #4]
9001a9c6:	6a21      	ldr	r1, [r4, #32]
9001a9c8:	9600      	str	r6, [sp, #0]
9001a9ca:	6860      	ldr	r0, [r4, #4]
9001a9cc:	f7ff ff8f 	bl	9001a8ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001a9d0:	69a3      	ldr	r3, [r4, #24]
9001a9d2:	6962      	ldr	r2, [r4, #20]
9001a9d4:	4407      	add	r7, r0
9001a9d6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9001a9d8:	9600      	str	r6, [sp, #0]
9001a9da:	68e0      	ldr	r0, [r4, #12]
9001a9dc:	fb93 f8f8 	sdiv	r8, r3, r8
9001a9e0:	4442      	add	r2, r8
9001a9e2:	9203      	str	r2, [sp, #12]
9001a9e4:	682a      	ldr	r2, [r5, #0]
9001a9e6:	f7ff ff82 	bl	9001a8ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001a9ea:	4680      	mov	r8, r0
9001a9ec:	9600      	str	r6, [sp, #0]
9001a9ee:	69a3      	ldr	r3, [r4, #24]
9001a9f0:	686a      	ldr	r2, [r5, #4]
9001a9f2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9001a9f4:	6920      	ldr	r0, [r4, #16]
9001a9f6:	f7ff ff7a 	bl	9001a8ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001a9fa:	4440      	add	r0, r8
9001a9fc:	e7cc      	b.n	9001a998 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
9001a9fe:	bf00      	nop
9001aa00:	24028e40 	.word	0x24028e40

9001aa04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
9001aa04:	4b07      	ldr	r3, [pc, #28]	; (9001aa24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
9001aa06:	781b      	ldrb	r3, [r3, #0]
9001aa08:	2b01      	cmp	r3, #1
9001aa0a:	d109      	bne.n	9001aa20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
9001aa0c:	f9b1 3000 	ldrsh.w	r3, [r1]
9001aa10:	f9b0 2000 	ldrsh.w	r2, [r0]
9001aa14:	8003      	strh	r3, [r0, #0]
9001aa16:	4b04      	ldr	r3, [pc, #16]	; (9001aa28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
9001aa18:	881b      	ldrh	r3, [r3, #0]
9001aa1a:	3b01      	subs	r3, #1
9001aa1c:	1a9b      	subs	r3, r3, r2
9001aa1e:	800b      	strh	r3, [r1, #0]
9001aa20:	4770      	bx	lr
9001aa22:	bf00      	nop
9001aa24:	24028e24 	.word	0x24028e24
9001aa28:	24028e20 	.word	0x24028e20

9001aa2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
9001aa2c:	4b07      	ldr	r3, [pc, #28]	; (9001aa4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
9001aa2e:	b510      	push	{r4, lr}
9001aa30:	781b      	ldrb	r3, [r3, #0]
9001aa32:	2b01      	cmp	r3, #1
9001aa34:	d108      	bne.n	9001aa48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
9001aa36:	4b06      	ldr	r3, [pc, #24]	; (9001aa50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
9001aa38:	880c      	ldrh	r4, [r1, #0]
9001aa3a:	881b      	ldrh	r3, [r3, #0]
9001aa3c:	f9b0 2000 	ldrsh.w	r2, [r0]
9001aa40:	3b01      	subs	r3, #1
9001aa42:	1b1b      	subs	r3, r3, r4
9001aa44:	8003      	strh	r3, [r0, #0]
9001aa46:	800a      	strh	r2, [r1, #0]
9001aa48:	bd10      	pop	{r4, pc}
9001aa4a:	bf00      	nop
9001aa4c:	24028e24 	.word	0x24028e24
9001aa50:	24028e20 	.word	0x24028e20

9001aa54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
9001aa54:	4b0a      	ldr	r3, [pc, #40]	; (9001aa80 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
9001aa56:	b510      	push	{r4, lr}
9001aa58:	781b      	ldrb	r3, [r3, #0]
9001aa5a:	2b01      	cmp	r3, #1
9001aa5c:	d10e      	bne.n	9001aa7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
9001aa5e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
9001aa62:	8843      	ldrh	r3, [r0, #2]
9001aa64:	f9b0 4000 	ldrsh.w	r4, [r0]
9001aa68:	18ca      	adds	r2, r1, r3
9001aa6a:	4b06      	ldr	r3, [pc, #24]	; (9001aa84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
9001aa6c:	8044      	strh	r4, [r0, #2]
9001aa6e:	881b      	ldrh	r3, [r3, #0]
9001aa70:	1a9b      	subs	r3, r3, r2
9001aa72:	8003      	strh	r3, [r0, #0]
9001aa74:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001aa78:	8081      	strh	r1, [r0, #4]
9001aa7a:	80c3      	strh	r3, [r0, #6]
9001aa7c:	bd10      	pop	{r4, pc}
9001aa7e:	bf00      	nop
9001aa80:	24028e24 	.word	0x24028e24
9001aa84:	24028e20 	.word	0x24028e20

9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
9001aa88:	4b08      	ldr	r3, [pc, #32]	; (9001aaac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
9001aa8a:	781b      	ldrb	r3, [r3, #0]
9001aa8c:	2b01      	cmp	r3, #1
9001aa8e:	d10c      	bne.n	9001aaaa <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
9001aa90:	8803      	ldrh	r3, [r0, #0]
9001aa92:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
9001aa96:	8842      	ldrh	r2, [r0, #2]
9001aa98:	8002      	strh	r2, [r0, #0]
9001aa9a:	185a      	adds	r2, r3, r1
9001aa9c:	4b04      	ldr	r3, [pc, #16]	; (9001aab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
9001aa9e:	881b      	ldrh	r3, [r3, #0]
9001aaa0:	1a9b      	subs	r3, r3, r2
9001aaa2:	8043      	strh	r3, [r0, #2]
9001aaa4:	88c3      	ldrh	r3, [r0, #6]
9001aaa6:	80c1      	strh	r1, [r0, #6]
9001aaa8:	8083      	strh	r3, [r0, #4]
9001aaaa:	4770      	bx	lr
9001aaac:	24028e24 	.word	0x24028e24
9001aab0:	24028e20 	.word	0x24028e20

9001aab4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
9001aab4:	4b07      	ldr	r3, [pc, #28]	; (9001aad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
9001aab6:	b510      	push	{r4, lr}
9001aab8:	781b      	ldrb	r3, [r3, #0]
9001aaba:	2b01      	cmp	r3, #1
9001aabc:	d108      	bne.n	9001aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
9001aabe:	f9b1 3000 	ldrsh.w	r3, [r1]
9001aac2:	f9b0 4000 	ldrsh.w	r4, [r0]
9001aac6:	8003      	strh	r3, [r0, #0]
9001aac8:	8893      	ldrh	r3, [r2, #4]
9001aaca:	3b01      	subs	r3, #1
9001aacc:	1b1b      	subs	r3, r3, r4
9001aace:	800b      	strh	r3, [r1, #0]
9001aad0:	bd10      	pop	{r4, pc}
9001aad2:	bf00      	nop
9001aad4:	24028e24 	.word	0x24028e24

9001aad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
9001aad8:	4b0b      	ldr	r3, [pc, #44]	; (9001ab08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
9001aada:	781b      	ldrb	r3, [r3, #0]
9001aadc:	2b01      	cmp	r3, #1
9001aade:	d111      	bne.n	9001ab04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
9001aae0:	680b      	ldr	r3, [r1, #0]
9001aae2:	ed90 7a00 	vldr	s14, [r0]
9001aae6:	6003      	str	r3, [r0, #0]
9001aae8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9001aaec:	eddf 6a07 	vldr	s13, [pc, #28]	; 9001ab0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
9001aaf0:	ee07 3a90 	vmov	s15, r3
9001aaf4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001aaf8:	ee77 7ae6 	vsub.f32	s15, s15, s13
9001aafc:	ee77 7ac7 	vsub.f32	s15, s15, s14
9001ab00:	edc1 7a00 	vstr	s15, [r1]
9001ab04:	4770      	bx	lr
9001ab06:	bf00      	nop
9001ab08:	24028e24 	.word	0x24028e24
9001ab0c:	38d1b717 	.word	0x38d1b717

9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
9001ab10:	4b0a      	ldr	r3, [pc, #40]	; (9001ab3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
9001ab12:	460a      	mov	r2, r1
9001ab14:	b510      	push	{r4, lr}
9001ab16:	781b      	ldrb	r3, [r3, #0]
9001ab18:	2b01      	cmp	r3, #1
9001ab1a:	d10d      	bne.n	9001ab38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
9001ab1c:	8881      	ldrh	r1, [r0, #4]
9001ab1e:	8803      	ldrh	r3, [r0, #0]
9001ab20:	440b      	add	r3, r1
9001ab22:	4601      	mov	r1, r0
9001ab24:	3b01      	subs	r3, #1
9001ab26:	f821 3b02 	strh.w	r3, [r1], #2
9001ab2a:	f7ff ffc3 	bl	9001aab4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
9001ab2e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001ab32:	88c2      	ldrh	r2, [r0, #6]
9001ab34:	80c3      	strh	r3, [r0, #6]
9001ab36:	8082      	strh	r2, [r0, #4]
9001ab38:	bd10      	pop	{r4, pc}
9001ab3a:	bf00      	nop
9001ab3c:	24028e24 	.word	0x24028e24

9001ab40 <_ZN8touchgfx11Application19changeToStartScreenEv>:
9001ab40:	4770      	bx	lr
	...

9001ab44 <_ZN8touchgfx11Application13requestRedrawEv>:
9001ab44:	4b06      	ldr	r3, [pc, #24]	; (9001ab60 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
9001ab46:	2100      	movs	r1, #0
9001ab48:	f9b3 2000 	ldrsh.w	r2, [r3]
9001ab4c:	4b05      	ldr	r3, [pc, #20]	; (9001ab64 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
9001ab4e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
9001ab52:	f9b3 3000 	ldrsh.w	r3, [r3]
9001ab56:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
9001ab5a:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
9001ab5e:	4770      	bx	lr
9001ab60:	24028e20 	.word	0x24028e20
9001ab64:	24028e22 	.word	0x24028e22

9001ab68 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
9001ab68:	4b03      	ldr	r3, [pc, #12]	; (9001ab78 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
9001ab6a:	6818      	ldr	r0, [r3, #0]
9001ab6c:	b110      	cbz	r0, 9001ab74 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
9001ab6e:	6803      	ldr	r3, [r0, #0]
9001ab70:	699b      	ldr	r3, [r3, #24]
9001ab72:	4718      	bx	r3
9001ab74:	4770      	bx	lr
9001ab76:	bf00      	nop
9001ab78:	24028e70 	.word	0x24028e70

9001ab7c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
9001ab7c:	4770      	bx	lr
	...

9001ab80 <_ZN8touchgfx11Application4drawEv>:
9001ab80:	4b09      	ldr	r3, [pc, #36]	; (9001aba8 <_ZN8touchgfx11Application4drawEv+0x28>)
9001ab82:	b507      	push	{r0, r1, r2, lr}
9001ab84:	f9b3 2000 	ldrsh.w	r2, [r3]
9001ab88:	2100      	movs	r1, #0
9001ab8a:	4b08      	ldr	r3, [pc, #32]	; (9001abac <_ZN8touchgfx11Application4drawEv+0x2c>)
9001ab8c:	9100      	str	r1, [sp, #0]
9001ab8e:	4669      	mov	r1, sp
9001ab90:	f9b3 3000 	ldrsh.w	r3, [r3]
9001ab94:	f8ad 2004 	strh.w	r2, [sp, #4]
9001ab98:	f8ad 3006 	strh.w	r3, [sp, #6]
9001ab9c:	6803      	ldr	r3, [r0, #0]
9001ab9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9001aba0:	4798      	blx	r3
9001aba2:	b003      	add	sp, #12
9001aba4:	f85d fb04 	ldr.w	pc, [sp], #4
9001aba8:	24028e20 	.word	0x24028e20
9001abac:	24028e22 	.word	0x24028e22

9001abb0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
9001abb0:	4b03      	ldr	r3, [pc, #12]	; (9001abc0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
9001abb2:	6818      	ldr	r0, [r3, #0]
9001abb4:	b110      	cbz	r0, 9001abbc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
9001abb6:	6803      	ldr	r3, [r0, #0]
9001abb8:	69db      	ldr	r3, [r3, #28]
9001abba:	4718      	bx	r3
9001abbc:	4770      	bx	lr
9001abbe:	bf00      	nop
9001abc0:	24028e70 	.word	0x24028e70

9001abc4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
9001abc4:	4b03      	ldr	r3, [pc, #12]	; (9001abd4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
9001abc6:	6818      	ldr	r0, [r3, #0]
9001abc8:	b110      	cbz	r0, 9001abd0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
9001abca:	6803      	ldr	r3, [r0, #0]
9001abcc:	6a1b      	ldr	r3, [r3, #32]
9001abce:	4718      	bx	r3
9001abd0:	4770      	bx	lr
9001abd2:	bf00      	nop
9001abd4:	24028e70 	.word	0x24028e70

9001abd8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
9001abd8:	2300      	movs	r3, #0
9001abda:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
9001abde:	4770      	bx	lr

9001abe0 <_ZN8touchgfx11Application14handleKeyEventEh>:
9001abe0:	4b03      	ldr	r3, [pc, #12]	; (9001abf0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
9001abe2:	6818      	ldr	r0, [r3, #0]
9001abe4:	b110      	cbz	r0, 9001abec <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
9001abe6:	6803      	ldr	r3, [r0, #0]
9001abe8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001abea:	4718      	bx	r3
9001abec:	4770      	bx	lr
9001abee:	bf00      	nop
9001abf0:	24028e70 	.word	0x24028e70

9001abf4 <_ZN8touchgfx11ApplicationD1Ev>:
9001abf4:	4770      	bx	lr

9001abf6 <_ZN8touchgfx11ApplicationD0Ev>:
9001abf6:	b510      	push	{r4, lr}
9001abf8:	4604      	mov	r4, r0
9001abfa:	f44f 719e 	mov.w	r1, #316	; 0x13c
9001abfe:	f010 fc0a 	bl	9002b416 <_ZdlPvj>
9001ac02:	4620      	mov	r0, r4
9001ac04:	bd10      	pop	{r4, pc}

9001ac06 <_ZNK8touchgfx4Rect9intersectERKS0_>:
9001ac06:	b510      	push	{r4, lr}
9001ac08:	f9b1 4000 	ldrsh.w	r4, [r1]
9001ac0c:	888a      	ldrh	r2, [r1, #4]
9001ac0e:	f9b0 3000 	ldrsh.w	r3, [r0]
9001ac12:	4422      	add	r2, r4
9001ac14:	b212      	sxth	r2, r2
9001ac16:	4293      	cmp	r3, r2
9001ac18:	da15      	bge.n	9001ac46 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001ac1a:	8882      	ldrh	r2, [r0, #4]
9001ac1c:	4413      	add	r3, r2
9001ac1e:	b21b      	sxth	r3, r3
9001ac20:	429c      	cmp	r4, r3
9001ac22:	da10      	bge.n	9001ac46 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001ac24:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
9001ac28:	88c9      	ldrh	r1, [r1, #6]
9001ac2a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
9001ac2e:	4419      	add	r1, r3
9001ac30:	b209      	sxth	r1, r1
9001ac32:	428a      	cmp	r2, r1
9001ac34:	da07      	bge.n	9001ac46 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001ac36:	88c0      	ldrh	r0, [r0, #6]
9001ac38:	4410      	add	r0, r2
9001ac3a:	b200      	sxth	r0, r0
9001ac3c:	4283      	cmp	r3, r0
9001ac3e:	bfac      	ite	ge
9001ac40:	2000      	movge	r0, #0
9001ac42:	2001      	movlt	r0, #1
9001ac44:	bd10      	pop	{r4, pc}
9001ac46:	2000      	movs	r0, #0
9001ac48:	e7fc      	b.n	9001ac44 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

9001ac4a <_ZN8touchgfx4Rect10restrictToEss>:
9001ac4a:	f9b0 3000 	ldrsh.w	r3, [r0]
9001ac4e:	2b00      	cmp	r3, #0
9001ac50:	b510      	push	{r4, lr}
9001ac52:	da04      	bge.n	9001ac5e <_ZN8touchgfx4Rect10restrictToEss+0x14>
9001ac54:	8884      	ldrh	r4, [r0, #4]
9001ac56:	4423      	add	r3, r4
9001ac58:	8083      	strh	r3, [r0, #4]
9001ac5a:	2300      	movs	r3, #0
9001ac5c:	8003      	strh	r3, [r0, #0]
9001ac5e:	f9b0 4000 	ldrsh.w	r4, [r0]
9001ac62:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001ac66:	1b09      	subs	r1, r1, r4
9001ac68:	428b      	cmp	r3, r1
9001ac6a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001ac6e:	bfc8      	it	gt
9001ac70:	8081      	strhgt	r1, [r0, #4]
9001ac72:	2b00      	cmp	r3, #0
9001ac74:	da04      	bge.n	9001ac80 <_ZN8touchgfx4Rect10restrictToEss+0x36>
9001ac76:	88c1      	ldrh	r1, [r0, #6]
9001ac78:	440b      	add	r3, r1
9001ac7a:	80c3      	strh	r3, [r0, #6]
9001ac7c:	2300      	movs	r3, #0
9001ac7e:	8043      	strh	r3, [r0, #2]
9001ac80:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
9001ac84:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
9001ac88:	1a52      	subs	r2, r2, r1
9001ac8a:	4293      	cmp	r3, r2
9001ac8c:	bfc8      	it	gt
9001ac8e:	80c2      	strhgt	r2, [r0, #6]
9001ac90:	bd10      	pop	{r4, pc}
	...

9001ac94 <_ZN8touchgfx11Application4drawERNS_4RectE>:
9001ac94:	4b10      	ldr	r3, [pc, #64]	; (9001acd8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
9001ac96:	b510      	push	{r4, lr}
9001ac98:	460c      	mov	r4, r1
9001ac9a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001ac9e:	4b0f      	ldr	r3, [pc, #60]	; (9001acdc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
9001aca0:	4620      	mov	r0, r4
9001aca2:	f9b3 1000 	ldrsh.w	r1, [r3]
9001aca6:	f7ff ffd0 	bl	9001ac4a <_ZN8touchgfx4Rect10restrictToEss>
9001acaa:	4b0d      	ldr	r3, [pc, #52]	; (9001ace0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
9001acac:	6818      	ldr	r0, [r3, #0]
9001acae:	b190      	cbz	r0, 9001acd6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
9001acb0:	6803      	ldr	r3, [r0, #0]
9001acb2:	4621      	mov	r1, r4
9001acb4:	689b      	ldr	r3, [r3, #8]
9001acb6:	4798      	blx	r3
9001acb8:	4b0a      	ldr	r3, [pc, #40]	; (9001ace4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
9001acba:	6818      	ldr	r0, [r3, #0]
9001acbc:	b118      	cbz	r0, 9001acc6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
9001acbe:	6803      	ldr	r3, [r0, #0]
9001acc0:	4621      	mov	r1, r4
9001acc2:	689b      	ldr	r3, [r3, #8]
9001acc4:	4798      	blx	r3
9001acc6:	4b08      	ldr	r3, [pc, #32]	; (9001ace8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
9001acc8:	4621      	mov	r1, r4
9001acca:	6818      	ldr	r0, [r3, #0]
9001accc:	6803      	ldr	r3, [r0, #0]
9001acce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001acd2:	69db      	ldr	r3, [r3, #28]
9001acd4:	4718      	bx	r3
9001acd6:	bd10      	pop	{r4, pc}
9001acd8:	24028e22 	.word	0x24028e22
9001acdc:	24028e20 	.word	0x24028e20
9001ace0:	24028e70 	.word	0x24028e70
9001ace4:	24028e6c 	.word	0x24028e6c
9001ace8:	24028e2c 	.word	0x24028e2c

9001acec <_ZNK8touchgfx4Rect8includesERKS0_>:
9001acec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001acee:	4606      	mov	r6, r0
9001acf0:	4608      	mov	r0, r1
9001acf2:	460f      	mov	r7, r1
9001acf4:	f7fa faa5 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001acf8:	b9e8      	cbnz	r0, 9001ad36 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001acfa:	f9b7 5000 	ldrsh.w	r5, [r7]
9001acfe:	f9b6 4000 	ldrsh.w	r4, [r6]
9001ad02:	42a5      	cmp	r5, r4
9001ad04:	db17      	blt.n	9001ad36 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001ad06:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
9001ad0a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
9001ad0e:	429a      	cmp	r2, r3
9001ad10:	db11      	blt.n	9001ad36 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001ad12:	88b9      	ldrh	r1, [r7, #4]
9001ad14:	440d      	add	r5, r1
9001ad16:	88b1      	ldrh	r1, [r6, #4]
9001ad18:	440c      	add	r4, r1
9001ad1a:	b22d      	sxth	r5, r5
9001ad1c:	b224      	sxth	r4, r4
9001ad1e:	42a5      	cmp	r5, r4
9001ad20:	dc09      	bgt.n	9001ad36 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001ad22:	88f8      	ldrh	r0, [r7, #6]
9001ad24:	4410      	add	r0, r2
9001ad26:	88f2      	ldrh	r2, [r6, #6]
9001ad28:	4413      	add	r3, r2
9001ad2a:	b200      	sxth	r0, r0
9001ad2c:	b21b      	sxth	r3, r3
9001ad2e:	4298      	cmp	r0, r3
9001ad30:	bfcc      	ite	gt
9001ad32:	2000      	movgt	r0, #0
9001ad34:	2001      	movle	r0, #1
9001ad36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9001ad38 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
9001ad38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001ad3a:	4604      	mov	r4, r0
9001ad3c:	4608      	mov	r0, r1
9001ad3e:	460d      	mov	r5, r1
9001ad40:	f7fa fa7f 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001ad44:	b978      	cbnz	r0, 9001ad66 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
9001ad46:	4620      	mov	r0, r4
9001ad48:	f7fa fa7b 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001ad4c:	f9b5 6000 	ldrsh.w	r6, [r5]
9001ad50:	b150      	cbz	r0, 9001ad68 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
9001ad52:	8026      	strh	r6, [r4, #0]
9001ad54:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001ad58:	8063      	strh	r3, [r4, #2]
9001ad5a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9001ad5e:	80a3      	strh	r3, [r4, #4]
9001ad60:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9001ad64:	80e3      	strh	r3, [r4, #6]
9001ad66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001ad68:	f9b4 1000 	ldrsh.w	r1, [r4]
9001ad6c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001ad70:	42b1      	cmp	r1, r6
9001ad72:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001ad76:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001ad7a:	460f      	mov	r7, r1
9001ad7c:	88ed      	ldrh	r5, [r5, #6]
9001ad7e:	bfa8      	it	ge
9001ad80:	4637      	movge	r7, r6
9001ad82:	4293      	cmp	r3, r2
9001ad84:	4618      	mov	r0, r3
9001ad86:	4466      	add	r6, ip
9001ad88:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001ad8c:	bfa8      	it	ge
9001ad8e:	4610      	movge	r0, r2
9001ad90:	442a      	add	r2, r5
9001ad92:	88e5      	ldrh	r5, [r4, #6]
9001ad94:	4461      	add	r1, ip
9001ad96:	b236      	sxth	r6, r6
9001ad98:	8027      	strh	r7, [r4, #0]
9001ad9a:	442b      	add	r3, r5
9001ad9c:	b209      	sxth	r1, r1
9001ad9e:	b212      	sxth	r2, r2
9001ada0:	8060      	strh	r0, [r4, #2]
9001ada2:	b21b      	sxth	r3, r3
9001ada4:	428e      	cmp	r6, r1
9001ada6:	bfac      	ite	ge
9001ada8:	ebc7 0106 	rsbge	r1, r7, r6
9001adac:	ebc7 0101 	rsblt	r1, r7, r1
9001adb0:	429a      	cmp	r2, r3
9001adb2:	bfac      	ite	ge
9001adb4:	ebc0 0202 	rsbge	r2, r0, r2
9001adb8:	ebc0 0203 	rsblt	r2, r0, r3
9001adbc:	80a1      	strh	r1, [r4, #4]
9001adbe:	80e2      	strh	r2, [r4, #6]
9001adc0:	e7d1      	b.n	9001ad66 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

9001adc4 <_ZN8touchgfx11Application11getInstanceEv>:
9001adc4:	4b01      	ldr	r3, [pc, #4]	; (9001adcc <_ZN8touchgfx11Application11getInstanceEv+0x8>)
9001adc6:	6818      	ldr	r0, [r3, #0]
9001adc8:	4770      	bx	lr
9001adca:	bf00      	nop
9001adcc:	24028e80 	.word	0x24028e80

9001add0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
9001add0:	2300      	movs	r3, #0
9001add2:	b510      	push	{r4, lr}
9001add4:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
9001add8:	4604      	mov	r4, r0
9001adda:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
9001adde:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
9001ade2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
9001ade6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
9001adea:	429a      	cmp	r2, r3
9001adec:	d90e      	bls.n	9001ae0c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
9001adee:	18e2      	adds	r2, r4, r3
9001adf0:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
9001adf4:	b122      	cbz	r2, 9001ae00 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
9001adf6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9001adfa:	6803      	ldr	r3, [r0, #0]
9001adfc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001adfe:	4798      	blx	r3
9001ae00:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
9001ae04:	3301      	adds	r3, #1
9001ae06:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
9001ae0a:	e7ea      	b.n	9001ade2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
9001ae0c:	bd10      	pop	{r4, pc}

9001ae0e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
9001ae0e:	b530      	push	{r4, r5, lr}
9001ae10:	2200      	movs	r2, #0
9001ae12:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
9001ae16:	b293      	uxth	r3, r2
9001ae18:	429d      	cmp	r5, r3
9001ae1a:	d90e      	bls.n	9001ae3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
9001ae1c:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
9001ae20:	428b      	cmp	r3, r1
9001ae22:	d10b      	bne.n	9001ae3c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
9001ae24:	1884      	adds	r4, r0, r2
9001ae26:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
9001ae2a:	b13b      	cbz	r3, 9001ae3c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
9001ae2c:	3b01      	subs	r3, #1
9001ae2e:	b2db      	uxtb	r3, r3
9001ae30:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
9001ae34:	b90b      	cbnz	r3, 9001ae3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
9001ae36:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
9001ae3a:	bd30      	pop	{r4, r5, pc}
9001ae3c:	3201      	adds	r2, #1
9001ae3e:	e7ea      	b.n	9001ae16 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

9001ae40 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
9001ae40:	2300      	movs	r3, #0
9001ae42:	f100 0284 	add.w	r2, r0, #132	; 0x84
9001ae46:	30a4      	adds	r0, #164	; 0xa4
9001ae48:	f820 3c24 	strh.w	r3, [r0, #-36]
9001ae4c:	f802 3b01 	strb.w	r3, [r2], #1
9001ae50:	4282      	cmp	r2, r0
9001ae52:	d1fb      	bne.n	9001ae4c <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
9001ae54:	4770      	bx	lr
	...

9001ae58 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
9001ae58:	b570      	push	{r4, r5, r6, lr}
9001ae5a:	4c0b      	ldr	r4, [pc, #44]	; (9001ae88 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
9001ae5c:	4605      	mov	r5, r0
9001ae5e:	460e      	mov	r6, r1
9001ae60:	6820      	ldr	r0, [r4, #0]
9001ae62:	b110      	cbz	r0, 9001ae6a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
9001ae64:	6803      	ldr	r3, [r0, #0]
9001ae66:	695b      	ldr	r3, [r3, #20]
9001ae68:	4798      	blx	r3
9001ae6a:	1d28      	adds	r0, r5, #4
9001ae6c:	f7ff ffe8 	bl	9001ae40 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001ae70:	6026      	str	r6, [r4, #0]
9001ae72:	6833      	ldr	r3, [r6, #0]
9001ae74:	4630      	mov	r0, r6
9001ae76:	68db      	ldr	r3, [r3, #12]
9001ae78:	4798      	blx	r3
9001ae7a:	682b      	ldr	r3, [r5, #0]
9001ae7c:	4628      	mov	r0, r5
9001ae7e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001ae80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001ae84:	4718      	bx	r3
9001ae86:	bf00      	nop
9001ae88:	24028e70 	.word	0x24028e70

9001ae8c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
9001ae8c:	2300      	movs	r3, #0
9001ae8e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
9001ae92:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
9001ae96:	461a      	mov	r2, r3
9001ae98:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ae9a:	461c      	mov	r4, r3
9001ae9c:	461d      	mov	r5, r3
9001ae9e:	459c      	cmp	ip, r3
9001aea0:	dd1a      	ble.n	9001aed8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
9001aea2:	18c6      	adds	r6, r0, r3
9001aea4:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
9001aea8:	b16e      	cbz	r6, 9001aec6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
9001aeaa:	429a      	cmp	r2, r3
9001aeac:	d008      	beq.n	9001aec0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
9001aeae:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
9001aeb2:	fa1f fe82 	uxth.w	lr, r2
9001aeb6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
9001aeba:	1887      	adds	r7, r0, r2
9001aebc:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
9001aec0:	3201      	adds	r2, #1
9001aec2:	3301      	adds	r3, #1
9001aec4:	e7eb      	b.n	9001ae9e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
9001aec6:	4299      	cmp	r1, r3
9001aec8:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
9001aecc:	bfa8      	it	ge
9001aece:	3501      	addge	r5, #1
9001aed0:	429e      	cmp	r6, r3
9001aed2:	bfc8      	it	gt
9001aed4:	3401      	addgt	r4, #1
9001aed6:	e7f4      	b.n	9001aec2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
9001aed8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
9001aedc:	1b49      	subs	r1, r1, r5
9001aede:	1b1b      	subs	r3, r3, r4
9001aee0:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
9001aee4:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
9001aee8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
9001aeec:	4293      	cmp	r3, r2
9001aeee:	dd03      	ble.n	9001aef8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
9001aef0:	3b01      	subs	r3, #1
9001aef2:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
9001aef6:	e7f7      	b.n	9001aee8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
9001aef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

9001aefc <_ZN8touchgfx11Application15handleTickEventEv>:
9001aefc:	b570      	push	{r4, r5, r6, lr}
9001aefe:	4d16      	ldr	r5, [pc, #88]	; (9001af58 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
9001af00:	4604      	mov	r4, r0
9001af02:	6828      	ldr	r0, [r5, #0]
9001af04:	b140      	cbz	r0, 9001af18 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001af06:	7a03      	ldrb	r3, [r0, #8]
9001af08:	b933      	cbnz	r3, 9001af18 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001af0a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001af0e:	6803      	ldr	r3, [r0, #0]
9001af10:	689b      	ldr	r3, [r3, #8]
9001af12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001af16:	4718      	bx	r3
9001af18:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
9001af1c:	4e0f      	ldr	r6, [pc, #60]	; (9001af5c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
9001af1e:	b973      	cbnz	r3, 9001af3e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001af20:	b168      	cbz	r0, 9001af3e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001af22:	7a03      	ldrb	r3, [r0, #8]
9001af24:	b15b      	cbz	r3, 9001af3e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001af26:	6830      	ldr	r0, [r6, #0]
9001af28:	b110      	cbz	r0, 9001af30 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
9001af2a:	6803      	ldr	r3, [r0, #0]
9001af2c:	691b      	ldr	r3, [r3, #16]
9001af2e:	4798      	blx	r3
9001af30:	6828      	ldr	r0, [r5, #0]
9001af32:	6803      	ldr	r3, [r0, #0]
9001af34:	68db      	ldr	r3, [r3, #12]
9001af36:	4798      	blx	r3
9001af38:	2301      	movs	r3, #1
9001af3a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001af3e:	3404      	adds	r4, #4
9001af40:	4620      	mov	r0, r4
9001af42:	f7ff ff45 	bl	9001add0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
9001af46:	4620      	mov	r0, r4
9001af48:	f7ff ffa0 	bl	9001ae8c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001af4c:	6830      	ldr	r0, [r6, #0]
9001af4e:	b110      	cbz	r0, 9001af56 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
9001af50:	6803      	ldr	r3, [r0, #0]
9001af52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9001af54:	e7dd      	b.n	9001af12 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
9001af56:	bd70      	pop	{r4, r5, r6, pc}
9001af58:	24028e74 	.word	0x24028e74
9001af5c:	24028e70 	.word	0x24028e70

9001af60 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
9001af60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001af62:	2300      	movs	r3, #0
9001af64:	4604      	mov	r4, r0
9001af66:	460d      	mov	r5, r1
9001af68:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
9001af6c:	4618      	mov	r0, r3
9001af6e:	b29a      	uxth	r2, r3
9001af70:	4291      	cmp	r1, r2
9001af72:	d912      	bls.n	9001af9a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x3a>
9001af74:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
9001af78:	18e6      	adds	r6, r4, r3
9001af7a:	42af      	cmp	r7, r5
9001af7c:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
9001af80:	d105      	bne.n	9001af8e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
9001af82:	2aff      	cmp	r2, #255	; 0xff
9001af84:	d002      	beq.n	9001af8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
9001af86:	3201      	adds	r2, #1
9001af88:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
9001af8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001af8e:	2a00      	cmp	r2, #0
9001af90:	f103 0301 	add.w	r3, r3, #1
9001af94:	bf08      	it	eq
9001af96:	2001      	moveq	r0, #1
9001af98:	e7e9      	b.n	9001af6e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
9001af9a:	b120      	cbz	r0, 9001afa6 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
9001af9c:	2920      	cmp	r1, #32
9001af9e:	d102      	bne.n	9001afa6 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
9001afa0:	4620      	mov	r0, r4
9001afa2:	f7ff ff73 	bl	9001ae8c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001afa6:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
9001afaa:	2b1f      	cmp	r3, #31
9001afac:	d8ee      	bhi.n	9001af8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
9001afae:	18e2      	adds	r2, r4, r3
9001afb0:	2101      	movs	r1, #1
9001afb2:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
9001afb6:	185a      	adds	r2, r3, r1
9001afb8:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
9001afbc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
9001afc0:	e7e4      	b.n	9001af8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

9001afc2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
9001afc2:	4603      	mov	r3, r0
9001afc4:	f100 0140 	add.w	r1, r0, #64	; 0x40
9001afc8:	2200      	movs	r2, #0
9001afca:	801a      	strh	r2, [r3, #0]
9001afcc:	3308      	adds	r3, #8
9001afce:	f823 2c06 	strh.w	r2, [r3, #-6]
9001afd2:	f823 2c04 	strh.w	r2, [r3, #-4]
9001afd6:	f823 2c02 	strh.w	r2, [r3, #-2]
9001afda:	428b      	cmp	r3, r1
9001afdc:	d1f5      	bne.n	9001afca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
9001afde:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
9001afe2:	4770      	bx	lr

9001afe4 <_ZN8touchgfx11ApplicationC1Ev>:
9001afe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001afe6:	4b1d      	ldr	r3, [pc, #116]	; (9001b05c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
9001afe8:	4606      	mov	r6, r0
9001afea:	4604      	mov	r4, r0
9001afec:	2500      	movs	r5, #0
9001afee:	f846 3b04 	str.w	r3, [r6], #4
9001aff2:	22a8      	movs	r2, #168	; 0xa8
9001aff4:	2100      	movs	r1, #0
9001aff6:	4630      	mov	r0, r6
9001aff8:	f010 fd70 	bl	9002badc <memset>
9001affc:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
9001b000:	f104 00ac 	add.w	r0, r4, #172	; 0xac
9001b004:	4f16      	ldr	r7, [pc, #88]	; (9001b060 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
9001b006:	f7ff ffdc 	bl	9001afc2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001b00a:	f104 00ee 	add.w	r0, r4, #238	; 0xee
9001b00e:	f7ff ffd8 	bl	9001afc2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001b012:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
9001b016:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
9001b01a:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
9001b01e:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
9001b022:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
9001b026:	490f      	ldr	r1, [pc, #60]	; (9001b064 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
9001b028:	480f      	ldr	r0, [pc, #60]	; (9001b068 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
9001b02a:	f00e fa29 	bl	90029480 <CRC_Lock>
9001b02e:	4b0f      	ldr	r3, [pc, #60]	; (9001b06c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
9001b030:	b158      	cbz	r0, 9001b04a <_ZN8touchgfx11ApplicationC1Ev+0x66>
9001b032:	801d      	strh	r5, [r3, #0]
9001b034:	2300      	movs	r3, #0
9001b036:	4a0e      	ldr	r2, [pc, #56]	; (9001b070 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
9001b038:	4630      	mov	r0, r6
9001b03a:	6013      	str	r3, [r2, #0]
9001b03c:	4a0d      	ldr	r2, [pc, #52]	; (9001b074 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
9001b03e:	603b      	str	r3, [r7, #0]
9001b040:	6013      	str	r3, [r2, #0]
9001b042:	f7ff fefd 	bl	9001ae40 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001b046:	4620      	mov	r0, r4
9001b048:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001b04a:	f44f 6280 	mov.w	r2, #1024	; 0x400
9001b04e:	2002      	movs	r0, #2
9001b050:	801a      	strh	r2, [r3, #0]
9001b052:	6038      	str	r0, [r7, #0]
9001b054:	f001 fb12 	bl	9001c67c <_ZN8touchgfx6Screen4drawEv>
9001b058:	e7ec      	b.n	9001b034 <_ZN8touchgfx11ApplicationC1Ev+0x50>
9001b05a:	bf00      	nop
9001b05c:	90030af8 	.word	0x90030af8
9001b060:	24028e70 	.word	0x24028e70
9001b064:	b5e8b5cd 	.word	0xb5e8b5cd
9001b068:	f407a5c2 	.word	0xf407a5c2
9001b06c:	24000068 	.word	0x24000068
9001b070:	24028e80 	.word	0x24028e80
9001b074:	24028e74 	.word	0x24028e74

9001b078 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
9001b078:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
9001b07c:	3b01      	subs	r3, #1
9001b07e:	b29b      	uxth	r3, r3
9001b080:	428b      	cmp	r3, r1
9001b082:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
9001b086:	b510      	push	{r4, lr}
9001b088:	d908      	bls.n	9001b09c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
9001b08a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001b08e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
9001b092:	681a      	ldr	r2, [r3, #0]
9001b094:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
9001b098:	685a      	ldr	r2, [r3, #4]
9001b09a:	6062      	str	r2, [r4, #4]
9001b09c:	bd10      	pop	{r4, pc}
	...

9001b0a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
9001b0a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b0a4:	b08f      	sub	sp, #60	; 0x3c
9001b0a6:	4b8f      	ldr	r3, [pc, #572]	; (9001b2e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
9001b0a8:	4683      	mov	fp, r0
9001b0aa:	ac0a      	add	r4, sp, #40	; 0x28
9001b0ac:	e884 0006 	stmia.w	r4, {r1, r2}
9001b0b0:	f9b3 2000 	ldrsh.w	r2, [r3]
9001b0b4:	4620      	mov	r0, r4
9001b0b6:	4b8c      	ldr	r3, [pc, #560]	; (9001b2e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
9001b0b8:	f9b3 1000 	ldrsh.w	r1, [r3]
9001b0bc:	f7ff fdc5 	bl	9001ac4a <_ZN8touchgfx4Rect10restrictToEss>
9001b0c0:	4620      	mov	r0, r4
9001b0c2:	f7fa f8be 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001b0c6:	2800      	cmp	r0, #0
9001b0c8:	d16a      	bne.n	9001b1a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001b0ca:	9403      	str	r4, [sp, #12]
9001b0cc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
9001b0d0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
9001b0d4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
9001b0d8:	9301      	str	r3, [sp, #4]
9001b0da:	35a4      	adds	r5, #164	; 0xa4
9001b0dc:	b15c      	cbz	r4, 9001b0f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001b0de:	4629      	mov	r1, r5
9001b0e0:	9803      	ldr	r0, [sp, #12]
9001b0e2:	f7ff fe03 	bl	9001acec <_ZNK8touchgfx4Rect8includesERKS0_>
9001b0e6:	3c01      	subs	r4, #1
9001b0e8:	b118      	cbz	r0, 9001b0f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
9001b0ea:	b2a1      	uxth	r1, r4
9001b0ec:	9801      	ldr	r0, [sp, #4]
9001b0ee:	f7ff ffc3 	bl	9001b078 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001b0f2:	3d08      	subs	r5, #8
9001b0f4:	e7f2      	b.n	9001b0dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
9001b0f6:	f8bb 80ec 	ldrh.w	r8, [fp, #236]	; 0xec
9001b0fa:	f108 33ff 	add.w	r3, r8, #4294967295
9001b0fe:	f8cd 8010 	str.w	r8, [sp, #16]
9001b102:	9302      	str	r3, [sp, #8]
9001b104:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9001b108:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
9001b10c:	9306      	str	r3, [sp, #24]
9001b10e:	445c      	add	r4, fp
9001b110:	2500      	movs	r5, #0
9001b112:	4626      	mov	r6, r4
9001b114:	f8cd 8014 	str.w	r8, [sp, #20]
9001b118:	462f      	mov	r7, r5
9001b11a:	9b05      	ldr	r3, [sp, #20]
9001b11c:	2b00      	cmp	r3, #0
9001b11e:	d073      	beq.n	9001b208 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
9001b120:	9903      	ldr	r1, [sp, #12]
9001b122:	4630      	mov	r0, r6
9001b124:	f7ff fd6f 	bl	9001ac06 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001b128:	b350      	cbz	r0, 9001b180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001b12a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
9001b12e:	f9b6 c000 	ldrsh.w	ip, [r6]
9001b132:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001b136:	45e6      	cmp	lr, ip
9001b138:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
9001b13c:	db33      	blt.n	9001b1a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001b13e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
9001b142:	88b3      	ldrh	r3, [r6, #4]
9001b144:	4472      	add	r2, lr
9001b146:	4463      	add	r3, ip
9001b148:	b212      	sxth	r2, r2
9001b14a:	b21b      	sxth	r3, r3
9001b14c:	429a      	cmp	r2, r3
9001b14e:	dc2a      	bgt.n	9001b1a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001b150:	fa1f f289 	uxth.w	r2, r9
9001b154:	88f3      	ldrh	r3, [r6, #6]
9001b156:	45ca      	cmp	sl, r9
9001b158:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
9001b15c:	4413      	add	r3, r2
9001b15e:	fa1f fc8a 	uxth.w	ip, sl
9001b162:	b29b      	uxth	r3, r3
9001b164:	fa0f fe83 	sxth.w	lr, r3
9001b168:	db0f      	blt.n	9001b18a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001b16a:	eba3 030c 	sub.w	r3, r3, ip
9001b16e:	1ac9      	subs	r1, r1, r3
9001b170:	b209      	sxth	r1, r1
9001b172:	2900      	cmp	r1, #0
9001b174:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001b178:	dd12      	ble.n	9001b1a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001b17a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
9001b17e:	4605      	mov	r5, r0
9001b180:	9b05      	ldr	r3, [sp, #20]
9001b182:	3e08      	subs	r6, #8
9001b184:	3b01      	subs	r3, #1
9001b186:	9305      	str	r3, [sp, #20]
9001b188:	e7c7      	b.n	9001b11a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
9001b18a:	4461      	add	r1, ip
9001b18c:	b209      	sxth	r1, r1
9001b18e:	4571      	cmp	r1, lr
9001b190:	dc38      	bgt.n	9001b204 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001b192:	eba2 020c 	sub.w	r2, r2, ip
9001b196:	b212      	sxth	r2, r2
9001b198:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001b19c:	2a00      	cmp	r2, #0
9001b19e:	dcee      	bgt.n	9001b17e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
9001b1a0:	b00f      	add	sp, #60	; 0x3c
9001b1a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b1a6:	45ca      	cmp	sl, r9
9001b1a8:	db2c      	blt.n	9001b204 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001b1aa:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
9001b1ae:	449a      	add	sl, r3
9001b1b0:	88f3      	ldrh	r3, [r6, #6]
9001b1b2:	4499      	add	r9, r3
9001b1b4:	fa0f fa8a 	sxth.w	sl, sl
9001b1b8:	fa0f f989 	sxth.w	r9, r9
9001b1bc:	45ca      	cmp	sl, r9
9001b1be:	dc21      	bgt.n	9001b204 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001b1c0:	fa1f f28c 	uxth.w	r2, ip
9001b1c4:	88b3      	ldrh	r3, [r6, #4]
9001b1c6:	45e6      	cmp	lr, ip
9001b1c8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001b1cc:	4413      	add	r3, r2
9001b1ce:	fa1f f98e 	uxth.w	r9, lr
9001b1d2:	b29b      	uxth	r3, r3
9001b1d4:	fa0f fa83 	sxth.w	sl, r3
9001b1d8:	db0a      	blt.n	9001b1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
9001b1da:	eba3 0309 	sub.w	r3, r3, r9
9001b1de:	1ac9      	subs	r1, r1, r3
9001b1e0:	b209      	sxth	r1, r1
9001b1e2:	2900      	cmp	r1, #0
9001b1e4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
9001b1e8:	ddda      	ble.n	9001b1a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001b1ea:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
9001b1ee:	e7c6      	b.n	9001b17e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
9001b1f0:	4449      	add	r1, r9
9001b1f2:	b209      	sxth	r1, r1
9001b1f4:	4551      	cmp	r1, sl
9001b1f6:	dc05      	bgt.n	9001b204 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001b1f8:	eba2 0209 	sub.w	r2, r2, r9
9001b1fc:	b212      	sxth	r2, r2
9001b1fe:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
9001b202:	e7cb      	b.n	9001b19c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
9001b204:	4607      	mov	r7, r0
9001b206:	e7bb      	b.n	9001b180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001b208:	2d00      	cmp	r5, #0
9001b20a:	d181      	bne.n	9001b110 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
9001b20c:	2f00      	cmp	r7, #0
9001b20e:	f000 81dd 	beq.w	9001b5cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001b212:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
9001b216:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
9001b21a:	b2b3      	uxth	r3, r6
9001b21c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
9001b220:	b2b9      	uxth	r1, r7
9001b222:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
9001b226:	441a      	add	r2, r3
9001b228:	448a      	add	sl, r1
9001b22a:	9105      	str	r1, [sp, #20]
9001b22c:	b292      	uxth	r2, r2
9001b22e:	fa1f fa8a 	uxth.w	sl, sl
9001b232:	fa0f f882 	sxth.w	r8, r2
9001b236:	fa0f f98a 	sxth.w	r9, sl
9001b23a:	e9cd 2307 	strd	r2, r3, [sp, #28]
9001b23e:	9b04      	ldr	r3, [sp, #16]
9001b240:	2b00      	cmp	r3, #0
9001b242:	d053      	beq.n	9001b2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
9001b244:	9903      	ldr	r1, [sp, #12]
9001b246:	4620      	mov	r0, r4
9001b248:	f7ff fcdd 	bl	9001ac06 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001b24c:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
9001b250:	b1c0      	cbz	r0, 9001b284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
9001b252:	f9b4 e000 	ldrsh.w	lr, [r4]
9001b256:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001b25a:	4576      	cmp	r6, lr
9001b25c:	dc23      	bgt.n	9001b2a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001b25e:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001b262:	44f4      	add	ip, lr
9001b264:	fa0f fc8c 	sxth.w	ip, ip
9001b268:	45e0      	cmp	r8, ip
9001b26a:	db1c      	blt.n	9001b2a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001b26c:	428f      	cmp	r7, r1
9001b26e:	fa1f fc81 	uxth.w	ip, r1
9001b272:	88e1      	ldrh	r1, [r4, #6]
9001b274:	dc0d      	bgt.n	9001b292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
9001b276:	ebaa 0c0c 	sub.w	ip, sl, ip
9001b27a:	f8a4 9002 	strh.w	r9, [r4, #2]
9001b27e:	eba1 010c 	sub.w	r1, r1, ip
9001b282:	80e1      	strh	r1, [r4, #6]
9001b284:	4628      	mov	r0, r5
9001b286:	9904      	ldr	r1, [sp, #16]
9001b288:	3c08      	subs	r4, #8
9001b28a:	4605      	mov	r5, r0
9001b28c:	3901      	subs	r1, #1
9001b28e:	9104      	str	r1, [sp, #16]
9001b290:	e7d3      	b.n	9001b23a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19a>
9001b292:	4461      	add	r1, ip
9001b294:	b209      	sxth	r1, r1
9001b296:	4549      	cmp	r1, r9
9001b298:	dcf5      	bgt.n	9001b286 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001b29a:	9905      	ldr	r1, [sp, #20]
9001b29c:	eba1 0c0c 	sub.w	ip, r1, ip
9001b2a0:	f8a4 c006 	strh.w	ip, [r4, #6]
9001b2a4:	e7ee      	b.n	9001b284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
9001b2a6:	428f      	cmp	r7, r1
9001b2a8:	dced      	bgt.n	9001b286 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001b2aa:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001b2ae:	4461      	add	r1, ip
9001b2b0:	b209      	sxth	r1, r1
9001b2b2:	4589      	cmp	r9, r1
9001b2b4:	dbe7      	blt.n	9001b286 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001b2b6:	4576      	cmp	r6, lr
9001b2b8:	fa1f fc8e 	uxth.w	ip, lr
9001b2bc:	88a1      	ldrh	r1, [r4, #4]
9001b2be:	dc07      	bgt.n	9001b2d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
9001b2c0:	eba2 0c0c 	sub.w	ip, r2, ip
9001b2c4:	f8a4 8000 	strh.w	r8, [r4]
9001b2c8:	eba1 010c 	sub.w	r1, r1, ip
9001b2cc:	80a1      	strh	r1, [r4, #4]
9001b2ce:	e7d9      	b.n	9001b284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
9001b2d0:	4461      	add	r1, ip
9001b2d2:	b209      	sxth	r1, r1
9001b2d4:	4588      	cmp	r8, r1
9001b2d6:	dbd6      	blt.n	9001b286 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001b2d8:	eba3 0c0c 	sub.w	ip, r3, ip
9001b2dc:	f8a4 c004 	strh.w	ip, [r4, #4]
9001b2e0:	e7d0      	b.n	9001b284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
9001b2e2:	bf00      	nop
9001b2e4:	24028e22 	.word	0x24028e22
9001b2e8:	24028e20 	.word	0x24028e20
9001b2ec:	2d00      	cmp	r5, #0
9001b2ee:	f000 816d 	beq.w	9001b5cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001b2f2:	9b06      	ldr	r3, [sp, #24]
9001b2f4:	445b      	add	r3, fp
9001b2f6:	461c      	mov	r4, r3
9001b2f8:	9b02      	ldr	r3, [sp, #8]
9001b2fa:	3301      	adds	r3, #1
9001b2fc:	f000 8166 	beq.w	9001b5cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001b300:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
9001b304:	9803      	ldr	r0, [sp, #12]
9001b306:	4629      	mov	r1, r5
9001b308:	f7ff fcf0 	bl	9001acec <_ZNK8touchgfx4Rect8includesERKS0_>
9001b30c:	b120      	cbz	r0, 9001b318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
9001b30e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001b312:	9801      	ldr	r0, [sp, #4]
9001b314:	f7ff feb0 	bl	9001b078 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001b318:	9903      	ldr	r1, [sp, #12]
9001b31a:	4628      	mov	r0, r5
9001b31c:	f7ff fc73 	bl	9001ac06 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001b320:	2800      	cmp	r0, #0
9001b322:	f000 809c 	beq.w	9001b45e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001b326:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
9001b32a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
9001b32e:	fa1f f189 	uxth.w	r1, r9
9001b332:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
9001b336:	9309      	str	r3, [sp, #36]	; 0x24
9001b338:	eb01 0c03 	add.w	ip, r1, r3
9001b33c:	b283      	uxth	r3, r0
9001b33e:	4548      	cmp	r0, r9
9001b340:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
9001b344:	fa1f fa8c 	uxth.w	sl, ip
9001b348:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001b34c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
9001b350:	eb03 050c 	add.w	r5, r3, ip
9001b354:	b2ad      	uxth	r5, r5
9001b356:	9505      	str	r5, [sp, #20]
9001b358:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
9001b35c:	9504      	str	r5, [sp, #16]
9001b35e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
9001b362:	f340 8099 	ble.w	9001b498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
9001b366:	1a5b      	subs	r3, r3, r1
9001b368:	4596      	cmp	lr, r2
9001b36a:	fa0f f08a 	sxth.w	r0, sl
9001b36e:	b29b      	uxth	r3, r3
9001b370:	b21e      	sxth	r6, r3
9001b372:	dd2e      	ble.n	9001b3d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
9001b374:	9f02      	ldr	r7, [sp, #8]
9001b376:	fa1f fe8e 	uxth.w	lr, lr
9001b37a:	b292      	uxth	r2, r2
9001b37c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
9001b380:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
9001b384:	9f04      	ldr	r7, [sp, #16]
9001b386:	ebae 0102 	sub.w	r1, lr, r2
9001b38a:	44a6      	add	lr, r4
9001b38c:	1a3f      	subs	r7, r7, r0
9001b38e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
9001b392:	b289      	uxth	r1, r1
9001b394:	4402      	add	r2, r0
9001b396:	fa0f fe8e 	sxth.w	lr, lr
9001b39a:	b20d      	sxth	r5, r1
9001b39c:	b212      	sxth	r2, r2
9001b39e:	436f      	muls	r7, r5
9001b3a0:	ebae 0202 	sub.w	r2, lr, r2
9001b3a4:	4372      	muls	r2, r6
9001b3a6:	4297      	cmp	r7, r2
9001b3a8:	db09      	blt.n	9001b3be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
9001b3aa:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
9001b3ae:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
9001b3b2:	449c      	add	ip, r3
9001b3b4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001b3b8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
9001b3bc:	e686      	b.n	9001b0cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b3be:	4421      	add	r1, r4
9001b3c0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
9001b3c4:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
9001b3c8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001b3cc:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001b3d0:	e67c      	b.n	9001b0cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b3d2:	9f04      	ldr	r7, [sp, #16]
9001b3d4:	42b8      	cmp	r0, r7
9001b3d6:	da27      	bge.n	9001b428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
9001b3d8:	9902      	ldr	r1, [sp, #8]
9001b3da:	1a3f      	subs	r7, r7, r0
9001b3dc:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
9001b3e0:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
9001b3e4:	eb05 010e 	add.w	r1, r5, lr
9001b3e8:	fa1f f881 	uxth.w	r8, r1
9001b3ec:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
9001b3f0:	4411      	add	r1, r2
9001b3f2:	fa0f f988 	sxth.w	r9, r8
9001b3f6:	eba2 020e 	sub.w	r2, r2, lr
9001b3fa:	eba1 0108 	sub.w	r1, r1, r8
9001b3fe:	4372      	muls	r2, r6
9001b400:	b289      	uxth	r1, r1
9001b402:	fa0f f881 	sxth.w	r8, r1
9001b406:	fb08 f707 	mul.w	r7, r8, r7
9001b40a:	42ba      	cmp	r2, r7
9001b40c:	dc06      	bgt.n	9001b41c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
9001b40e:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
9001b412:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
9001b416:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
9001b41a:	e7ca      	b.n	9001b3b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
9001b41c:	4429      	add	r1, r5
9001b41e:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
9001b422:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001b426:	e651      	b.n	9001b0cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b428:	9805      	ldr	r0, [sp, #20]
9001b42a:	2d06      	cmp	r5, #6
9001b42c:	ebaa 0000 	sub.w	r0, sl, r0
9001b430:	b280      	uxth	r0, r0
9001b432:	fa0f fe80 	sxth.w	lr, r0
9001b436:	d817      	bhi.n	9001b468 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
9001b438:	9b04      	ldr	r3, [sp, #16]
9001b43a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
9001b43e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
9001b442:	1c6b      	adds	r3, r5, #1
9001b444:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
9001b448:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
9001b44c:	9b01      	ldr	r3, [sp, #4]
9001b44e:	9801      	ldr	r0, [sp, #4]
9001b450:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001b454:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
9001b458:	805a      	strh	r2, [r3, #2]
9001b45a:	809e      	strh	r6, [r3, #4]
9001b45c:	80d9      	strh	r1, [r3, #6]
9001b45e:	9b02      	ldr	r3, [sp, #8]
9001b460:	3c08      	subs	r4, #8
9001b462:	3b01      	subs	r3, #1
9001b464:	9302      	str	r3, [sp, #8]
9001b466:	e747      	b.n	9001b2f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
9001b468:	9a02      	ldr	r2, [sp, #8]
9001b46a:	45b6      	cmp	lr, r6
9001b46c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
9001b470:	db0d      	blt.n	9001b48e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
9001b472:	449c      	add	ip, r3
9001b474:	445a      	add	r2, fp
9001b476:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001b47a:	fa1f fc8c 	uxth.w	ip, ip
9001b47e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
9001b482:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
9001b486:	448c      	add	ip, r1
9001b488:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
9001b48c:	e61e      	b.n	9001b0cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b48e:	445a      	add	r2, fp
9001b490:	4484      	add	ip, r0
9001b492:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
9001b496:	e78f      	b.n	9001b3b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001b498:	fa1f f18e 	uxth.w	r1, lr
9001b49c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
9001b4a0:	b293      	uxth	r3, r2
9001b4a2:	4596      	cmp	lr, r2
9001b4a4:	eb01 0806 	add.w	r8, r1, r6
9001b4a8:	9306      	str	r3, [sp, #24]
9001b4aa:	fa1f f888 	uxth.w	r8, r8
9001b4ae:	9f06      	ldr	r7, [sp, #24]
9001b4b0:	fa0f f388 	sxth.w	r3, r8
9001b4b4:	9307      	str	r3, [sp, #28]
9001b4b6:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
9001b4ba:	443b      	add	r3, r7
9001b4bc:	b29b      	uxth	r3, r3
9001b4be:	9308      	str	r3, [sp, #32]
9001b4c0:	da24      	bge.n	9001b50c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
9001b4c2:	9905      	ldr	r1, [sp, #20]
9001b4c4:	eba3 0308 	sub.w	r3, r3, r8
9001b4c8:	eba2 020e 	sub.w	r2, r2, lr
9001b4cc:	eba9 0000 	sub.w	r0, r9, r0
9001b4d0:	ebaa 0401 	sub.w	r4, sl, r1
9001b4d4:	b29b      	uxth	r3, r3
9001b4d6:	b2a4      	uxth	r4, r4
9001b4d8:	b219      	sxth	r1, r3
9001b4da:	b225      	sxth	r5, r4
9001b4dc:	4348      	muls	r0, r1
9001b4de:	436a      	muls	r2, r5
9001b4e0:	4282      	cmp	r2, r0
9001b4e2:	9a02      	ldr	r2, [sp, #8]
9001b4e4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
9001b4e8:	445a      	add	r2, fp
9001b4ea:	dc06      	bgt.n	9001b4fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
9001b4ec:	9b07      	ldr	r3, [sp, #28]
9001b4ee:	44a4      	add	ip, r4
9001b4f0:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
9001b4f4:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
9001b4f8:	e75e      	b.n	9001b3b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001b4fa:	9904      	ldr	r1, [sp, #16]
9001b4fc:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
9001b500:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
9001b504:	4433      	add	r3, r6
9001b506:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
9001b50a:	e5df      	b.n	9001b0cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b50c:	9f06      	ldr	r7, [sp, #24]
9001b50e:	9b04      	ldr	r3, [sp, #16]
9001b510:	1bc9      	subs	r1, r1, r7
9001b512:	fa0f f78a 	sxth.w	r7, sl
9001b516:	b289      	uxth	r1, r1
9001b518:	429f      	cmp	r7, r3
9001b51a:	fa0f fe81 	sxth.w	lr, r1
9001b51e:	dd23      	ble.n	9001b568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
9001b520:	9a05      	ldr	r2, [sp, #20]
9001b522:	eba9 0000 	sub.w	r0, r9, r0
9001b526:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001b52a:	ebaa 0202 	sub.w	r2, sl, r2
9001b52e:	9d07      	ldr	r5, [sp, #28]
9001b530:	fb0e f000 	mul.w	r0, lr, r0
9001b534:	b292      	uxth	r2, r2
9001b536:	eba5 0a03 	sub.w	sl, r5, r3
9001b53a:	9b02      	ldr	r3, [sp, #8]
9001b53c:	b214      	sxth	r4, r2
9001b53e:	00db      	lsls	r3, r3, #3
9001b540:	fb04 fa0a 	mul.w	sl, r4, sl
9001b544:	445b      	add	r3, fp
9001b546:	4550      	cmp	r0, sl
9001b548:	db03      	blt.n	9001b552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
9001b54a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
9001b54e:	4494      	add	ip, r2
9001b550:	e732      	b.n	9001b3b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001b552:	9a04      	ldr	r2, [sp, #16]
9001b554:	4431      	add	r1, r6
9001b556:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
9001b55a:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
9001b55e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
9001b562:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001b566:	e75c      	b.n	9001b422 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
9001b568:	9b08      	ldr	r3, [sp, #32]
9001b56a:	2d06      	cmp	r5, #6
9001b56c:	eba3 0308 	sub.w	r3, r3, r8
9001b570:	b29b      	uxth	r3, r3
9001b572:	b218      	sxth	r0, r3
9001b574:	d813      	bhi.n	9001b59e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
9001b576:	9b07      	ldr	r3, [sp, #28]
9001b578:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
9001b57c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
9001b580:	1c6b      	adds	r3, r5, #1
9001b582:	9901      	ldr	r1, [sp, #4]
9001b584:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
9001b588:	9b01      	ldr	r3, [sp, #4]
9001b58a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
9001b58e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001b592:	805a      	strh	r2, [r3, #2]
9001b594:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001b596:	f8a3 e006 	strh.w	lr, [r3, #6]
9001b59a:	809a      	strh	r2, [r3, #4]
9001b59c:	e75f      	b.n	9001b45e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001b59e:	9c02      	ldr	r4, [sp, #8]
9001b5a0:	4570      	cmp	r0, lr
9001b5a2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
9001b5a6:	db0d      	blt.n	9001b5c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
9001b5a8:	4431      	add	r1, r6
9001b5aa:	9b06      	ldr	r3, [sp, #24]
9001b5ac:	445c      	add	r4, fp
9001b5ae:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001b5b2:	b289      	uxth	r1, r1
9001b5b4:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
9001b5b8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001b5bc:	4419      	add	r1, r3
9001b5be:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
9001b5c2:	e583      	b.n	9001b0cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b5c4:	445c      	add	r4, fp
9001b5c6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
9001b5ca:	e79b      	b.n	9001b504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
9001b5cc:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
9001b5d0:	2e07      	cmp	r6, #7
9001b5d2:	ea4f 04c6 	mov.w	r4, r6, lsl #3
9001b5d6:	d812      	bhi.n	9001b5fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x55e>
9001b5d8:	1c75      	adds	r5, r6, #1
9001b5da:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
9001b5de:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
9001b5e2:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
9001b5e6:	9d01      	ldr	r5, [sp, #4]
9001b5e8:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001b5ec:	442c      	add	r4, r5
9001b5ee:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
9001b5f2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
9001b5f6:	8061      	strh	r1, [r4, #2]
9001b5f8:	80a2      	strh	r2, [r4, #4]
9001b5fa:	80e3      	strh	r3, [r4, #6]
9001b5fc:	e5d0      	b.n	9001b1a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001b5fe:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
9001b602:	3e01      	subs	r6, #1
9001b604:	445c      	add	r4, fp
9001b606:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
9001b60a:	f04f 37ff 	mov.w	r7, #4294967295
9001b60e:	2500      	movs	r5, #0
9001b610:	9305      	str	r3, [sp, #20]
9001b612:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
9001b616:	1e72      	subs	r2, r6, #1
9001b618:	9302      	str	r3, [sp, #8]
9001b61a:	4691      	mov	r9, r2
9001b61c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
9001b620:	9304      	str	r3, [sp, #16]
9001b622:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
9001b626:	f1b9 3fff 	cmp.w	r9, #4294967295
9001b62a:	6818      	ldr	r0, [r3, #0]
9001b62c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
9001b630:	9207      	str	r2, [sp, #28]
9001b632:	bf16      	itet	ne
9001b634:	9905      	ldrne	r1, [sp, #20]
9001b636:	f8dd e00c 	ldreq.w	lr, [sp, #12]
9001b63a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
9001b63e:	9306      	str	r3, [sp, #24]
9001b640:	f8be 1006 	ldrh.w	r1, [lr, #6]
9001b644:	f8be 8004 	ldrh.w	r8, [lr, #4]
9001b648:	fb18 f801 	smulbb	r8, r8, r1
9001b64c:	6859      	ldr	r1, [r3, #4]
9001b64e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001b652:	4671      	mov	r1, lr
9001b654:	a80c      	add	r0, sp, #48	; 0x30
9001b656:	f7ff fb6f 	bl	9001ad38 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001b65a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
9001b65e:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
9001b662:	f04f 0c08 	mov.w	ip, #8
9001b666:	9b04      	ldr	r3, [sp, #16]
9001b668:	9a02      	ldr	r2, [sp, #8]
9001b66a:	fb10 f001 	smulbb	r0, r0, r1
9001b66e:	fb02 8803 	mla	r8, r2, r3, r8
9001b672:	eba0 0108 	sub.w	r1, r0, r8
9001b676:	fb90 f0fc 	sdiv	r0, r0, ip
9001b67a:	4288      	cmp	r0, r1
9001b67c:	dc20      	bgt.n	9001b6c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
9001b67e:	4551      	cmp	r1, sl
9001b680:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
9001b684:	da03      	bge.n	9001b68e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ee>
9001b686:	b1d9      	cbz	r1, 9001b6c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
9001b688:	468a      	mov	sl, r1
9001b68a:	464f      	mov	r7, r9
9001b68c:	4635      	mov	r5, r6
9001b68e:	f109 39ff 	add.w	r9, r9, #4294967295
9001b692:	f119 0f02 	cmn.w	r9, #2
9001b696:	d1c6      	bne.n	9001b626 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
9001b698:	4616      	mov	r6, r2
9001b69a:	3201      	adds	r2, #1
9001b69c:	f1a4 0408 	sub.w	r4, r4, #8
9001b6a0:	d1b7      	bne.n	9001b612 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x572>
9001b6a2:	9b01      	ldr	r3, [sp, #4]
9001b6a4:	b2ac      	uxth	r4, r5
9001b6a6:	00ed      	lsls	r5, r5, #3
9001b6a8:	1958      	adds	r0, r3, r5
9001b6aa:	1c7b      	adds	r3, r7, #1
9001b6ac:	d10b      	bne.n	9001b6c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>
9001b6ae:	4601      	mov	r1, r0
9001b6b0:	9803      	ldr	r0, [sp, #12]
9001b6b2:	f7ff fb41 	bl	9001ad38 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001b6b6:	4621      	mov	r1, r4
9001b6b8:	9801      	ldr	r0, [sp, #4]
9001b6ba:	f7ff fcdd 	bl	9001b078 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001b6be:	e505      	b.n	9001b0cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b6c0:	464f      	mov	r7, r9
9001b6c2:	4635      	mov	r5, r6
9001b6c4:	e7ed      	b.n	9001b6a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x602>
9001b6c6:	9b01      	ldr	r3, [sp, #4]
9001b6c8:	00ff      	lsls	r7, r7, #3
9001b6ca:	445d      	add	r5, fp
9001b6cc:	19d9      	adds	r1, r3, r7
9001b6ce:	445f      	add	r7, fp
9001b6d0:	f7ff fb32 	bl	9001ad38 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001b6d4:	9b03      	ldr	r3, [sp, #12]
9001b6d6:	cb03      	ldmia	r3!, {r0, r1}
9001b6d8:	9b03      	ldr	r3, [sp, #12]
9001b6da:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
9001b6de:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
9001b6e2:	f855 0fac 	ldr.w	r0, [r5, #172]!
9001b6e6:	6869      	ldr	r1, [r5, #4]
9001b6e8:	c303      	stmia	r3!, {r0, r1}
9001b6ea:	e7e4      	b.n	9001b6b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x616>

9001b6ec <_ZN8touchgfx11Application10invalidateEv>:
9001b6ec:	4b09      	ldr	r3, [pc, #36]	; (9001b714 <_ZN8touchgfx11Application10invalidateEv+0x28>)
9001b6ee:	b082      	sub	sp, #8
9001b6f0:	2100      	movs	r1, #0
9001b6f2:	f9b3 2000 	ldrsh.w	r2, [r3]
9001b6f6:	4b08      	ldr	r3, [pc, #32]	; (9001b718 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
9001b6f8:	9100      	str	r1, [sp, #0]
9001b6fa:	f9b3 3000 	ldrsh.w	r3, [r3]
9001b6fe:	f8ad 2004 	strh.w	r2, [sp, #4]
9001b702:	f8ad 3006 	strh.w	r3, [sp, #6]
9001b706:	ab02      	add	r3, sp, #8
9001b708:	e913 0006 	ldmdb	r3, {r1, r2}
9001b70c:	b002      	add	sp, #8
9001b70e:	f7ff bcc7 	b.w	9001b0a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
9001b712:	bf00      	nop
9001b714:	24028e20 	.word	0x24028e20
9001b718:	24028e22 	.word	0x24028e22

9001b71c <_ZN8touchgfx11Application15drawCachedAreasEv>:
9001b71c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b720:	f500 7698 	add.w	r6, r0, #304	; 0x130
9001b724:	b09b      	sub	sp, #108	; 0x6c
9001b726:	4604      	mov	r4, r0
9001b728:	4630      	mov	r0, r6
9001b72a:	f7f9 fd8a 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001b72e:	4605      	mov	r5, r0
9001b730:	b940      	cbnz	r0, 9001b744 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
9001b732:	4620      	mov	r0, r4
9001b734:	e896 0006 	ldmia.w	r6, {r1, r2}
9001b738:	f7ff fcb2 	bl	9001b0a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
9001b73c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
9001b740:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
9001b744:	4bc8      	ldr	r3, [pc, #800]	; (9001ba68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001b746:	681b      	ldr	r3, [r3, #0]
9001b748:	2b00      	cmp	r3, #0
9001b74a:	d03e      	beq.n	9001b7ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
9001b74c:	4dc7      	ldr	r5, [pc, #796]	; (9001ba6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
9001b74e:	4628      	mov	r0, r5
9001b750:	f7f9 fd77 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001b754:	4606      	mov	r6, r0
9001b756:	2800      	cmp	r0, #0
9001b758:	d137      	bne.n	9001b7ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
9001b75a:	4628      	mov	r0, r5
9001b75c:	f7ff f97a 	bl	9001aa54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001b760:	6829      	ldr	r1, [r5, #0]
9001b762:	686a      	ldr	r2, [r5, #4]
9001b764:	4620      	mov	r0, r4
9001b766:	f7ff fc9b 	bl	9001b0a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
9001b76a:	802e      	strh	r6, [r5, #0]
9001b76c:	806e      	strh	r6, [r5, #2]
9001b76e:	80ae      	strh	r6, [r5, #4]
9001b770:	80ee      	strh	r6, [r5, #6]
9001b772:	ae09      	add	r6, sp, #36	; 0x24
9001b774:	4630      	mov	r0, r6
9001b776:	f7ff fc24 	bl	9001afc2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001b77a:	4abd      	ldr	r2, [pc, #756]	; (9001ba70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
9001b77c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
9001b780:	f104 00ac 	add.w	r0, r4, #172	; 0xac
9001b784:	8815      	ldrh	r5, [r2, #0]
9001b786:	9202      	str	r2, [sp, #8]
9001b788:	462b      	mov	r3, r5
9001b78a:	429f      	cmp	r7, r3
9001b78c:	d924      	bls.n	9001b7d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
9001b78e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
9001b792:	2907      	cmp	r1, #7
9001b794:	d816      	bhi.n	9001b7c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
9001b796:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
9001b79a:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
9001b79e:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
9001b7a2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
9001b7a6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
9001b7aa:	1c4a      	adds	r2, r1, #1
9001b7ac:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
9001b7b0:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
9001b7b4:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
9001b7b8:	f8a2 9002 	strh.w	r9, [r2, #2]
9001b7bc:	f8a2 e004 	strh.w	lr, [r2, #4]
9001b7c0:	f8a2 c006 	strh.w	ip, [r2, #6]
9001b7c4:	3301      	adds	r3, #1
9001b7c6:	b29b      	uxth	r3, r3
9001b7c8:	e7df      	b.n	9001b78a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
9001b7ca:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
9001b7ce:	2b00      	cmp	r3, #0
9001b7d0:	d1cf      	bne.n	9001b772 <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
9001b7d2:	b01b      	add	sp, #108	; 0x6c
9001b7d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b7d8:	462f      	mov	r7, r5
9001b7da:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
9001b7de:	42bb      	cmp	r3, r7
9001b7e0:	d90b      	bls.n	9001b7fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
9001b7e2:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
9001b7e6:	3701      	adds	r7, #1
9001b7e8:	4620      	mov	r0, r4
9001b7ea:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
9001b7ee:	b2bf      	uxth	r7, r7
9001b7f0:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
9001b7f4:	f7ff fc54 	bl	9001b0a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
9001b7f8:	e7ef      	b.n	9001b7da <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
9001b7fa:	4a9e      	ldr	r2, [pc, #632]	; (9001ba74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
9001b7fc:	6813      	ldr	r3, [r2, #0]
9001b7fe:	4690      	mov	r8, r2
9001b800:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
9001b804:	2b01      	cmp	r3, #1
9001b806:	f040 80e4 	bne.w	9001b9d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
9001b80a:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
9001b80e:	4629      	mov	r1, r5
9001b810:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
9001b814:	2500      	movs	r5, #0
9001b816:	33ae      	adds	r3, #174	; 0xae
9001b818:	428f      	cmp	r7, r1
9001b81a:	f103 0308 	add.w	r3, r3, #8
9001b81e:	dd0a      	ble.n	9001b836 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
9001b820:	f833 2c08 	ldrh.w	r2, [r3, #-8]
9001b824:	3101      	adds	r1, #1
9001b826:	f833 0c04 	ldrh.w	r0, [r3, #-4]
9001b82a:	4402      	add	r2, r0
9001b82c:	b212      	sxth	r2, r2
9001b82e:	4295      	cmp	r5, r2
9001b830:	bfb8      	it	lt
9001b832:	4615      	movlt	r5, r2
9001b834:	e7f0      	b.n	9001b818 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
9001b836:	4b90      	ldr	r3, [pc, #576]	; (9001ba78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
9001b838:	f8df b238 	ldr.w	fp, [pc, #568]	; 9001ba74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>
9001b83c:	881b      	ldrh	r3, [r3, #0]
9001b83e:	46d8      	mov	r8, fp
9001b840:	2b0f      	cmp	r3, #15
9001b842:	bf8c      	ite	hi
9001b844:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
9001b848:	f04f 0a01 	movls.w	sl, #1
9001b84c:	2300      	movs	r3, #0
9001b84e:	e9cd 3305 	strd	r3, r3, [sp, #20]
9001b852:	f8bd 701a 	ldrh.w	r7, [sp, #26]
9001b856:	f8bd 0016 	ldrh.w	r0, [sp, #22]
9001b85a:	4438      	add	r0, r7
9001b85c:	b207      	sxth	r7, r0
9001b85e:	f8db 0000 	ldr.w	r0, [fp]
9001b862:	42bd      	cmp	r5, r7
9001b864:	6803      	ldr	r3, [r0, #0]
9001b866:	f340 8084 	ble.w	9001b972 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
9001b86a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
9001b86e:	4798      	blx	r3
9001b870:	eb07 030a 	add.w	r3, r7, sl
9001b874:	4298      	cmp	r0, r3
9001b876:	da07      	bge.n	9001b888 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
9001b878:	4285      	cmp	r5, r0
9001b87a:	dd05      	ble.n	9001b888 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
9001b87c:	4287      	cmp	r7, r0
9001b87e:	dd6d      	ble.n	9001b95c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001b880:	2f00      	cmp	r7, #0
9001b882:	dd6b      	ble.n	9001b95c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001b884:	4628      	mov	r0, r5
9001b886:	e004      	b.n	9001b892 <_ZN8touchgfx11Application15drawCachedAreasEv+0x176>
9001b888:	4287      	cmp	r7, r0
9001b88a:	dcfb      	bgt.n	9001b884 <_ZN8touchgfx11Application15drawCachedAreasEv+0x168>
9001b88c:	42a8      	cmp	r0, r5
9001b88e:	bfa8      	it	ge
9001b890:	4628      	movge	r0, r5
9001b892:	4b7a      	ldr	r3, [pc, #488]	; (9001ba7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
9001b894:	1bc0      	subs	r0, r0, r7
9001b896:	2200      	movs	r2, #0
9001b898:	f8ad 7016 	strh.w	r7, [sp, #22]
9001b89c:	f9b3 3000 	ldrsh.w	r3, [r3]
9001b8a0:	f8ad 2014 	strh.w	r2, [sp, #20]
9001b8a4:	f8ad 3018 	strh.w	r3, [sp, #24]
9001b8a8:	9b02      	ldr	r3, [sp, #8]
9001b8aa:	f8ad 001a 	strh.w	r0, [sp, #26]
9001b8ae:	881f      	ldrh	r7, [r3, #0]
9001b8b0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
9001b8b4:	42bb      	cmp	r3, r7
9001b8b6:	d9cc      	bls.n	9001b852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
9001b8b8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
9001b8bc:	ab07      	add	r3, sp, #28
9001b8be:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001b8c2:	6851      	ldr	r1, [r2, #4]
9001b8c4:	c303      	stmia	r3!, {r0, r1}
9001b8c6:	a905      	add	r1, sp, #20
9001b8c8:	a807      	add	r0, sp, #28
9001b8ca:	f7ff f99c 	bl	9001ac06 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001b8ce:	2800      	cmp	r0, #0
9001b8d0:	d04c      	beq.n	9001b96c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
9001b8d2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
9001b8d6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
9001b8da:	f8bd 9020 	ldrh.w	r9, [sp, #32]
9001b8de:	4686      	mov	lr, r0
9001b8e0:	4290      	cmp	r0, r2
9001b8e2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
9001b8e6:	4448      	add	r0, r9
9001b8e8:	f8bd 9018 	ldrh.w	r9, [sp, #24]
9001b8ec:	bfb8      	it	lt
9001b8ee:	4696      	movlt	lr, r2
9001b8f0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001b8f4:	444a      	add	r2, r9
9001b8f6:	b280      	uxth	r0, r0
9001b8f8:	4299      	cmp	r1, r3
9001b8fa:	468c      	mov	ip, r1
9001b8fc:	b292      	uxth	r2, r2
9001b8fe:	9303      	str	r3, [sp, #12]
9001b900:	bfb8      	it	lt
9001b902:	469c      	movlt	ip, r3
9001b904:	b203      	sxth	r3, r0
9001b906:	fa0f f982 	sxth.w	r9, r2
9001b90a:	f8ad e01c 	strh.w	lr, [sp, #28]
9001b90e:	f8ad c01e 	strh.w	ip, [sp, #30]
9001b912:	454b      	cmp	r3, r9
9001b914:	bfb8      	it	lt
9001b916:	4602      	movlt	r2, r0
9001b918:	9b03      	ldr	r3, [sp, #12]
9001b91a:	eba2 020e 	sub.w	r2, r2, lr
9001b91e:	f8ad 2020 	strh.w	r2, [sp, #32]
9001b922:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001b926:	4411      	add	r1, r2
9001b928:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001b92c:	4413      	add	r3, r2
9001b92e:	b289      	uxth	r1, r1
9001b930:	b29b      	uxth	r3, r3
9001b932:	b208      	sxth	r0, r1
9001b934:	b21a      	sxth	r2, r3
9001b936:	4290      	cmp	r0, r2
9001b938:	bfb8      	it	lt
9001b93a:	460b      	movlt	r3, r1
9001b93c:	eba3 030c 	sub.w	r3, r3, ip
9001b940:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001b944:	a807      	add	r0, sp, #28
9001b946:	f7f9 fc7c 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001b94a:	b920      	cbnz	r0, 9001b956 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
9001b94c:	6823      	ldr	r3, [r4, #0]
9001b94e:	a907      	add	r1, sp, #28
9001b950:	4620      	mov	r0, r4
9001b952:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9001b954:	4798      	blx	r3
9001b956:	3701      	adds	r7, #1
9001b958:	b2bf      	uxth	r7, r7
9001b95a:	e7a9      	b.n	9001b8b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
9001b95c:	f8d8 0000 	ldr.w	r0, [r8]
9001b960:	2101      	movs	r1, #1
9001b962:	6803      	ldr	r3, [r0, #0]
9001b964:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
9001b968:	4798      	blx	r3
9001b96a:	e772      	b.n	9001b852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
9001b96c:	e9cd 0007 	strd	r0, r0, [sp, #28]
9001b970:	e7e8      	b.n	9001b944 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
9001b972:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9001b974:	4798      	blx	r3
9001b976:	4b42      	ldr	r3, [pc, #264]	; (9001ba80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
9001b978:	781b      	ldrb	r3, [r3, #0]
9001b97a:	2b00      	cmp	r3, #0
9001b97c:	f43f af29 	beq.w	9001b7d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
9001b980:	2300      	movs	r3, #0
9001b982:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001b986:	f104 00ee 	add.w	r0, r4, #238	; 0xee
9001b98a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
9001b98e:	9b02      	ldr	r3, [sp, #8]
9001b990:	881b      	ldrh	r3, [r3, #0]
9001b992:	429d      	cmp	r5, r3
9001b994:	f67f af1d 	bls.w	9001b7d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
9001b998:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
9001b99c:	2907      	cmp	r1, #7
9001b99e:	d815      	bhi.n	9001b9cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
9001b9a0:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
9001b9a4:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
9001b9a8:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
9001b9ac:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
9001b9b0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
9001b9b4:	1c4a      	adds	r2, r1, #1
9001b9b6:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
9001b9ba:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
9001b9be:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
9001b9c2:	f8a2 e002 	strh.w	lr, [r2, #2]
9001b9c6:	f8a2 c004 	strh.w	ip, [r2, #4]
9001b9ca:	80d7      	strh	r7, [r2, #6]
9001b9cc:	3301      	adds	r3, #1
9001b9ce:	b29b      	uxth	r3, r3
9001b9d0:	e7df      	b.n	9001b992 <_ZN8touchgfx11Application15drawCachedAreasEv+0x276>
9001b9d2:	2b02      	cmp	r3, #2
9001b9d4:	f040 8135 	bne.w	9001bc42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x526>
9001b9d8:	4b2a      	ldr	r3, [pc, #168]	; (9001ba84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
9001b9da:	f104 09ac 	add.w	r9, r4, #172	; 0xac
9001b9de:	781b      	ldrb	r3, [r3, #0]
9001b9e0:	2b01      	cmp	r3, #1
9001b9e2:	f000 809c 	beq.w	9001bb1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
9001b9e6:	9b02      	ldr	r3, [sp, #8]
9001b9e8:	f8b4 20ec 	ldrh.w	r2, [r4, #236]	; 0xec
9001b9ec:	f8b3 b000 	ldrh.w	fp, [r3]
9001b9f0:	f10b 0b01 	add.w	fp, fp, #1
9001b9f4:	fa1f fb8b 	uxth.w	fp, fp
9001b9f8:	2a00      	cmp	r2, #0
9001b9fa:	d0bc      	beq.n	9001b976 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001b9fc:	f8b4 50ae 	ldrh.w	r5, [r4, #174]	; 0xae
9001ba00:	4659      	mov	r1, fp
9001ba02:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
9001ba06:	f04f 0800 	mov.w	r8, #0
9001ba0a:	441d      	add	r5, r3
9001ba0c:	b22d      	sxth	r5, r5
9001ba0e:	b28b      	uxth	r3, r1
9001ba10:	ea4f 07c8 	mov.w	r7, r8, lsl #3
9001ba14:	429a      	cmp	r2, r3
9001ba16:	f240 80c0 	bls.w	9001bb9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x47e>
9001ba1a:	4427      	add	r7, r4
9001ba1c:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
9001ba20:	4608      	mov	r0, r1
9001ba22:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
9001ba26:	f9be c0ae 	ldrsh.w	ip, [lr, #174]	; 0xae
9001ba2a:	4563      	cmp	r3, ip
9001ba2c:	f340 80a2 	ble.w	9001bb74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
9001ba30:	f8be 50b2 	ldrh.w	r5, [lr, #178]	; 0xb2
9001ba34:	4465      	add	r5, ip
9001ba36:	b22d      	sxth	r5, r5
9001ba38:	429d      	cmp	r5, r3
9001ba3a:	bfa8      	it	ge
9001ba3c:	461d      	movge	r5, r3
9001ba3e:	3101      	adds	r1, #1
9001ba40:	4680      	mov	r8, r0
9001ba42:	e7e4      	b.n	9001ba0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f2>
9001ba44:	d10b      	bne.n	9001ba5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x342>
9001ba46:	f9b5 c0b2 	ldrsh.w	ip, [r5, #178]	; 0xb2
9001ba4a:	f9ba 10b2 	ldrsh.w	r1, [sl, #178]	; 0xb2
9001ba4e:	458c      	cmp	ip, r1
9001ba50:	bfb4      	ite	lt
9001ba52:	469c      	movlt	ip, r3
9001ba54:	46bc      	movge	ip, r7
9001ba56:	4572      	cmp	r2, lr
9001ba58:	bfb8      	it	lt
9001ba5a:	4672      	movlt	r2, lr
9001ba5c:	e087      	b.n	9001bb6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x452>
9001ba5e:	428a      	cmp	r2, r1
9001ba60:	46bc      	mov	ip, r7
9001ba62:	bfb8      	it	lt
9001ba64:	460a      	movlt	r2, r1
9001ba66:	e082      	b.n	9001bb6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x452>
9001ba68:	24028e6c 	.word	0x24028e6c
9001ba6c:	24028e78 	.word	0x24028e78
9001ba70:	24000068 	.word	0x24000068
9001ba74:	24028e2c 	.word	0x24028e2c
9001ba78:	24028e22 	.word	0x24028e22
9001ba7c:	24028e20 	.word	0x24028e20
9001ba80:	24028e2a 	.word	0x24028e2a
9001ba84:	24028e24 	.word	0x24028e24
9001ba88:	1961      	adds	r1, r4, r5
9001ba8a:	ab07      	add	r3, sp, #28
9001ba8c:	f851 0fac 	ldr.w	r0, [r1, #172]!
9001ba90:	6849      	ldr	r1, [r1, #4]
9001ba92:	c303      	stmia	r3!, {r0, r1}
9001ba94:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001ba98:	a807      	add	r0, sp, #28
9001ba9a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001ba9e:	2b13      	cmp	r3, #19
9001baa0:	440b      	add	r3, r1
9001baa2:	bfd8      	it	le
9001baa4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
9001baa8:	1a9b      	subs	r3, r3, r2
9001baaa:	f8ad 201c 	strh.w	r2, [sp, #28]
9001baae:	f8ad 3020 	strh.w	r3, [sp, #32]
9001bab2:	f7fe ffe9 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001bab6:	a807      	add	r0, sp, #28
9001bab8:	f7f9 fbc3 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001babc:	bb78      	cbnz	r0, 9001bb1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
9001babe:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
9001bac2:	4425      	add	r5, r4
9001bac4:	f8d8 0000 	ldr.w	r0, [r8]
9001bac8:	f1bc 0f14 	cmp.w	ip, #20
9001bacc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9001bad0:	f8d0 e000 	ldr.w	lr, [r0]
9001bad4:	bfa8      	it	ge
9001bad6:	f04f 0c14 	movge.w	ip, #20
9001bada:	f8bd 201e 	ldrh.w	r2, [sp, #30]
9001bade:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001bae2:	fa1f fc8c 	uxth.w	ip, ip
9001bae6:	f8cd c000 	str.w	ip, [sp]
9001baea:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
9001baee:	47d0      	blx	sl
9001baf0:	4682      	mov	sl, r0
9001baf2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
9001baf6:	a807      	add	r0, sp, #28
9001baf8:	f7fe ffac 	bl	9001aa54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001bafc:	6823      	ldr	r3, [r4, #0]
9001bafe:	4620      	mov	r0, r4
9001bb00:	a907      	add	r1, sp, #28
9001bb02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9001bb04:	4798      	blx	r3
9001bb06:	f8b5 00b0 	ldrh.w	r0, [r5, #176]	; 0xb0
9001bb0a:	eba0 000a 	sub.w	r0, r0, sl
9001bb0e:	b200      	sxth	r0, r0
9001bb10:	f8a5 00b0 	strh.w	r0, [r5, #176]	; 0xb0
9001bb14:	b918      	cbnz	r0, 9001bb1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
9001bb16:	b2b9      	uxth	r1, r7
9001bb18:	4648      	mov	r0, r9
9001bb1a:	f7ff faad 	bl	9001b078 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001bb1e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
9001bb22:	f1bb 0f00 	cmp.w	fp, #0
9001bb26:	f43f af26 	beq.w	9001b976 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001bb2a:	9b02      	ldr	r3, [sp, #8]
9001bb2c:	2700      	movs	r7, #0
9001bb2e:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
9001bb32:	881b      	ldrh	r3, [r3, #0]
9001bb34:	3301      	adds	r3, #1
9001bb36:	b29b      	uxth	r3, r3
9001bb38:	b299      	uxth	r1, r3
9001bb3a:	00fd      	lsls	r5, r7, #3
9001bb3c:	458b      	cmp	fp, r1
9001bb3e:	d9a3      	bls.n	9001ba88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>
9001bb40:	4425      	add	r5, r4
9001bb42:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
9001bb46:	469c      	mov	ip, r3
9001bb48:	f8b5 10b0 	ldrh.w	r1, [r5, #176]	; 0xb0
9001bb4c:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
9001bb50:	f9ba e0ac 	ldrsh.w	lr, [sl, #172]	; 0xac
9001bb54:	4408      	add	r0, r1
9001bb56:	f8ba 10b0 	ldrh.w	r1, [sl, #176]	; 0xb0
9001bb5a:	4471      	add	r1, lr
9001bb5c:	b200      	sxth	r0, r0
9001bb5e:	b209      	sxth	r1, r1
9001bb60:	4288      	cmp	r0, r1
9001bb62:	f6bf af6f 	bge.w	9001ba44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x328>
9001bb66:	4586      	cmp	lr, r0
9001bb68:	4672      	mov	r2, lr
9001bb6a:	bfb8      	it	lt
9001bb6c:	4602      	movlt	r2, r0
9001bb6e:	3301      	adds	r3, #1
9001bb70:	4667      	mov	r7, ip
9001bb72:	e7e1      	b.n	9001bb38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x41c>
9001bb74:	d10c      	bne.n	9001bb90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x474>
9001bb76:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
9001bb7a:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
9001bb7e:	4287      	cmp	r7, r0
9001bb80:	bfb4      	ite	lt
9001bb82:	4608      	movlt	r0, r1
9001bb84:	4640      	movge	r0, r8
9001bb86:	f8be 70b2 	ldrh.w	r7, [lr, #178]	; 0xb2
9001bb8a:	443b      	add	r3, r7
9001bb8c:	b21b      	sxth	r3, r3
9001bb8e:	e753      	b.n	9001ba38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
9001bb90:	4565      	cmp	r5, ip
9001bb92:	4640      	mov	r0, r8
9001bb94:	bfa8      	it	ge
9001bb96:	4665      	movge	r5, ip
9001bb98:	e751      	b.n	9001ba3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
9001bb9a:	eb09 0007 	add.w	r0, r9, r7
9001bb9e:	4427      	add	r7, r4
9001bba0:	9203      	str	r2, [sp, #12]
9001bba2:	f9b7 a0b2 	ldrsh.w	sl, [r7, #178]	; 0xb2
9001bba6:	f1ba 0f13 	cmp.w	sl, #19
9001bbaa:	bfde      	ittt	le
9001bbac:	f8b7 50ae 	ldrhle.w	r5, [r7, #174]	; 0xae
9001bbb0:	4455      	addle	r5, sl
9001bbb2:	b22d      	sxthle	r5, r5
9001bbb4:	f7f9 fb45 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001bbb8:	9a03      	ldr	r2, [sp, #12]
9001bbba:	2800      	cmp	r0, #0
9001bbbc:	f47f af1c 	bne.w	9001b9f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2dc>
9001bbc0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
9001bbc4:	fa1f fa8a 	uxth.w	sl, sl
9001bbc8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
9001bbcc:	1aad      	subs	r5, r5, r2
9001bbce:	4829      	ldr	r0, [pc, #164]	; (9001bc74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x558>)
9001bbd0:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
9001bbd4:	2d14      	cmp	r5, #20
9001bbd6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
9001bbda:	6800      	ldr	r0, [r0, #0]
9001bbdc:	bfa8      	it	ge
9001bbde:	2514      	movge	r5, #20
9001bbe0:	f8ad 101c 	strh.w	r1, [sp, #28]
9001bbe4:	f8ad 201e 	strh.w	r2, [sp, #30]
9001bbe8:	b289      	uxth	r1, r1
9001bbea:	f8ad 3020 	strh.w	r3, [sp, #32]
9001bbee:	b2ad      	uxth	r5, r5
9001bbf0:	f8d0 c000 	ldr.w	ip, [r0]
9001bbf4:	b292      	uxth	r2, r2
9001bbf6:	4555      	cmp	r5, sl
9001bbf8:	bf94      	ite	ls
9001bbfa:	9500      	strls	r5, [sp, #0]
9001bbfc:	f8cd a000 	strhi.w	sl, [sp]
9001bc00:	b29b      	uxth	r3, r3
9001bc02:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
9001bc06:	47a8      	blx	r5
9001bc08:	6823      	ldr	r3, [r4, #0]
9001bc0a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
9001bc0e:	a907      	add	r1, sp, #28
9001bc10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9001bc12:	4620      	mov	r0, r4
9001bc14:	4798      	blx	r3
9001bc16:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
9001bc1a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
9001bc1e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
9001bc22:	1a5b      	subs	r3, r3, r1
9001bc24:	440a      	add	r2, r1
9001bc26:	b21b      	sxth	r3, r3
9001bc28:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
9001bc2c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
9001bc30:	2b00      	cmp	r3, #0
9001bc32:	f47f aed8 	bne.w	9001b9e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
9001bc36:	fa1f f188 	uxth.w	r1, r8
9001bc3a:	4648      	mov	r0, r9
9001bc3c:	f7ff fa1c 	bl	9001b078 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001bc40:	e6d1      	b.n	9001b9e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
9001bc42:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
9001bc46:	42ab      	cmp	r3, r5
9001bc48:	f67f ae95 	bls.w	9001b976 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001bc4c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
9001bc50:	ab07      	add	r3, sp, #28
9001bc52:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001bc56:	6851      	ldr	r1, [r2, #4]
9001bc58:	c303      	stmia	r3!, {r0, r1}
9001bc5a:	a807      	add	r0, sp, #28
9001bc5c:	f7f9 faf1 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
9001bc60:	b920      	cbnz	r0, 9001bc6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>
9001bc62:	6823      	ldr	r3, [r4, #0]
9001bc64:	a907      	add	r1, sp, #28
9001bc66:	4620      	mov	r0, r4
9001bc68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9001bc6a:	4798      	blx	r3
9001bc6c:	3501      	adds	r5, #1
9001bc6e:	b2ad      	uxth	r5, r5
9001bc70:	e7e7      	b.n	9001bc42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x526>
9001bc72:	bf00      	nop
9001bc74:	24028e2c 	.word	0x24028e2c

9001bc78 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
9001bc78:	4b03      	ldr	r3, [pc, #12]	; (9001bc88 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001bc7a:	2200      	movs	r2, #0
9001bc7c:	801a      	strh	r2, [r3, #0]
9001bc7e:	805a      	strh	r2, [r3, #2]
9001bc80:	809a      	strh	r2, [r3, #4]
9001bc82:	80da      	strh	r2, [r3, #6]
9001bc84:	4770      	bx	lr
9001bc86:	bf00      	nop
9001bc88:	24028e78 	.word	0x24028e78

9001bc8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
9001bc8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bc90:	b09d      	sub	sp, #116	; 0x74
9001bc92:	4606      	mov	r6, r0
9001bc94:	4614      	mov	r4, r2
9001bc96:	468a      	mov	sl, r1
9001bc98:	a803      	add	r0, sp, #12
9001bc9a:	461d      	mov	r5, r3
9001bc9c:	f000 ff06 	bl	9001caac <_ZN8touchgfx12TextProviderC1Ev>
9001bca0:	6833      	ldr	r3, [r6, #0]
9001bca2:	4630      	mov	r0, r6
9001bca4:	f242 0b0b 	movw	fp, #8203	; 0x200b
9001bca8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001bcaa:	4798      	blx	r3
9001bcac:	6833      	ldr	r3, [r6, #0]
9001bcae:	4607      	mov	r7, r0
9001bcb0:	4630      	mov	r0, r6
9001bcb2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001bcb4:	4798      	blx	r3
9001bcb6:	462a      	mov	r2, r5
9001bcb8:	2500      	movs	r5, #0
9001bcba:	4621      	mov	r1, r4
9001bcbc:	9000      	str	r0, [sp, #0]
9001bcbe:	463b      	mov	r3, r7
9001bcc0:	462c      	mov	r4, r5
9001bcc2:	46a9      	mov	r9, r5
9001bcc4:	46a8      	mov	r8, r5
9001bcc6:	a803      	add	r0, sp, #12
9001bcc8:	f000 ff4b 	bl	9001cb62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001bccc:	2300      	movs	r3, #0
9001bcce:	9302      	str	r3, [sp, #8]
9001bcd0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001bcd4:	429c      	cmp	r4, r3
9001bcd6:	d002      	beq.n	9001bcde <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
9001bcd8:	455c      	cmp	r4, fp
9001bcda:	bf18      	it	ne
9001bcdc:	4625      	movne	r5, r4
9001bcde:	ab02      	add	r3, sp, #8
9001bce0:	4632      	mov	r2, r6
9001bce2:	4651      	mov	r1, sl
9001bce4:	a803      	add	r0, sp, #12
9001bce6:	f001 fa41 	bl	9001d16c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001bcea:	4604      	mov	r4, r0
9001bcec:	b108      	cbz	r0, 9001bcf2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
9001bcee:	280a      	cmp	r0, #10
9001bcf0:	d10a      	bne.n	9001bd08 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001bcf2:	45c1      	cmp	r9, r8
9001bcf4:	bf38      	it	cc
9001bcf6:	46c1      	movcc	r9, r8
9001bcf8:	f04f 0800 	mov.w	r8, #0
9001bcfc:	2c00      	cmp	r4, #0
9001bcfe:	d1e5      	bne.n	9001bccc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001bd00:	4648      	mov	r0, r9
9001bd02:	b01d      	add	sp, #116	; 0x74
9001bd04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bd08:	9a02      	ldr	r2, [sp, #8]
9001bd0a:	2a00      	cmp	r2, #0
9001bd0c:	d0de      	beq.n	9001bccc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001bd0e:	7b57      	ldrb	r7, [r2, #13]
9001bd10:	4629      	mov	r1, r5
9001bd12:	6833      	ldr	r3, [r6, #0]
9001bd14:	007f      	lsls	r7, r7, #1
9001bd16:	8894      	ldrh	r4, [r2, #4]
9001bd18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001bd1a:	f407 7080 	and.w	r0, r7, #256	; 0x100
9001bd1e:	7a97      	ldrb	r7, [r2, #10]
9001bd20:	4307      	orrs	r7, r0
9001bd22:	4630      	mov	r0, r6
9001bd24:	4798      	blx	r3
9001bd26:	4438      	add	r0, r7
9001bd28:	4480      	add	r8, r0
9001bd2a:	fa1f f888 	uxth.w	r8, r8
9001bd2e:	e7e5      	b.n	9001bcfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

9001bd30 <_ZNK8touchgfx4Font12getCharWidthEt>:
9001bd30:	b508      	push	{r3, lr}
9001bd32:	6803      	ldr	r3, [r0, #0]
9001bd34:	68db      	ldr	r3, [r3, #12]
9001bd36:	4798      	blx	r3
9001bd38:	b128      	cbz	r0, 9001bd46 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001bd3a:	7b43      	ldrb	r3, [r0, #13]
9001bd3c:	7a80      	ldrb	r0, [r0, #10]
9001bd3e:	005b      	lsls	r3, r3, #1
9001bd40:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001bd44:	4318      	orrs	r0, r3
9001bd46:	bd08      	pop	{r3, pc}

9001bd48 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
9001bd48:	b40e      	push	{r1, r2, r3}
9001bd4a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001bd4c:	b09e      	sub	sp, #120	; 0x78
9001bd4e:	4605      	mov	r5, r0
9001bd50:	ab23      	add	r3, sp, #140	; 0x8c
9001bd52:	a805      	add	r0, sp, #20
9001bd54:	f853 4b04 	ldr.w	r4, [r3], #4
9001bd58:	9303      	str	r3, [sp, #12]
9001bd5a:	f000 fea7 	bl	9001caac <_ZN8touchgfx12TextProviderC1Ev>
9001bd5e:	682b      	ldr	r3, [r5, #0]
9001bd60:	4628      	mov	r0, r5
9001bd62:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001bd64:	4798      	blx	r3
9001bd66:	682b      	ldr	r3, [r5, #0]
9001bd68:	4606      	mov	r6, r0
9001bd6a:	4628      	mov	r0, r5
9001bd6c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001bd6e:	4798      	blx	r3
9001bd70:	4633      	mov	r3, r6
9001bd72:	4621      	mov	r1, r4
9001bd74:	ae1e      	add	r6, sp, #120	; 0x78
9001bd76:	2400      	movs	r4, #0
9001bd78:	9000      	str	r0, [sp, #0]
9001bd7a:	9a03      	ldr	r2, [sp, #12]
9001bd7c:	a805      	add	r0, sp, #20
9001bd7e:	f000 fef0 	bl	9001cb62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001bd82:	f846 4d68 	str.w	r4, [r6, #-104]!
9001bd86:	462a      	mov	r2, r5
9001bd88:	4633      	mov	r3, r6
9001bd8a:	4621      	mov	r1, r4
9001bd8c:	a805      	add	r0, sp, #20
9001bd8e:	f001 f9ed 	bl	9001d16c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001bd92:	b300      	cbz	r0, 9001bdd6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
9001bd94:	280a      	cmp	r0, #10
9001bd96:	d01a      	beq.n	9001bdce <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001bd98:	9f04      	ldr	r7, [sp, #16]
9001bd9a:	b1c7      	cbz	r7, 9001bdce <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001bd9c:	7b78      	ldrb	r0, [r7, #13]
9001bd9e:	7a3b      	ldrb	r3, [r7, #8]
9001bda0:	00c1      	lsls	r1, r0, #3
9001bda2:	88ea      	ldrh	r2, [r5, #6]
9001bda4:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001bda8:	4319      	orrs	r1, r3
9001bdaa:	0643      	lsls	r3, r0, #25
9001bdac:	ea4f 1000 	mov.w	r0, r0, lsl #4
9001bdb0:	bf48      	it	mi
9001bdb2:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
9001bdb6:	f400 7080 	and.w	r0, r0, #256	; 0x100
9001bdba:	bf48      	it	mi
9001bdbc:	b219      	sxthmi	r1, r3
9001bdbe:	79fb      	ldrb	r3, [r7, #7]
9001bdc0:	4303      	orrs	r3, r0
9001bdc2:	4413      	add	r3, r2
9001bdc4:	1a5b      	subs	r3, r3, r1
9001bdc6:	b21b      	sxth	r3, r3
9001bdc8:	429c      	cmp	r4, r3
9001bdca:	bfb8      	it	lt
9001bdcc:	461c      	movlt	r4, r3
9001bdce:	4633      	mov	r3, r6
9001bdd0:	462a      	mov	r2, r5
9001bdd2:	2100      	movs	r1, #0
9001bdd4:	e7da      	b.n	9001bd8c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001bdd6:	b2a0      	uxth	r0, r4
9001bdd8:	b01e      	add	sp, #120	; 0x78
9001bdda:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001bdde:	b003      	add	sp, #12
9001bde0:	4770      	bx	lr

9001bde2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001bde2:	7a43      	ldrb	r3, [r0, #9]
9001bde4:	8880      	ldrh	r0, [r0, #4]
9001bde6:	4418      	add	r0, r3
9001bde8:	b280      	uxth	r0, r0
9001bdea:	4770      	bx	lr

9001bdec <_ZNK8touchgfx4Font13getFontHeightEv>:
9001bdec:	6803      	ldr	r3, [r0, #0]
9001bdee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001bdf0:	4718      	bx	r3

9001bdf2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001bdf2:	b40e      	push	{r1, r2, r3}
9001bdf4:	b570      	push	{r4, r5, r6, lr}
9001bdf6:	b09d      	sub	sp, #116	; 0x74
9001bdf8:	4604      	mov	r4, r0
9001bdfa:	ab21      	add	r3, sp, #132	; 0x84
9001bdfc:	a803      	add	r0, sp, #12
9001bdfe:	f853 5b04 	ldr.w	r5, [r3], #4
9001be02:	9302      	str	r3, [sp, #8]
9001be04:	f000 fe52 	bl	9001caac <_ZN8touchgfx12TextProviderC1Ev>
9001be08:	6823      	ldr	r3, [r4, #0]
9001be0a:	4620      	mov	r0, r4
9001be0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001be0e:	4798      	blx	r3
9001be10:	6823      	ldr	r3, [r4, #0]
9001be12:	4606      	mov	r6, r0
9001be14:	4620      	mov	r0, r4
9001be16:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001be18:	2401      	movs	r4, #1
9001be1a:	4798      	blx	r3
9001be1c:	4633      	mov	r3, r6
9001be1e:	9000      	str	r0, [sp, #0]
9001be20:	4629      	mov	r1, r5
9001be22:	9a02      	ldr	r2, [sp, #8]
9001be24:	a803      	add	r0, sp, #12
9001be26:	f000 fe9c 	bl	9001cb62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001be2a:	a803      	add	r0, sp, #12
9001be2c:	f001 fa6a 	bl	9001d304 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001be30:	b2a3      	uxth	r3, r4
9001be32:	b138      	cbz	r0, 9001be44 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
9001be34:	280a      	cmp	r0, #10
9001be36:	a803      	add	r0, sp, #12
9001be38:	bf04      	itt	eq
9001be3a:	3301      	addeq	r3, #1
9001be3c:	b21c      	sxtheq	r4, r3
9001be3e:	f001 fa61 	bl	9001d304 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001be42:	e7f5      	b.n	9001be30 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001be44:	4618      	mov	r0, r3
9001be46:	b01d      	add	sp, #116	; 0x74
9001be48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001be4c:	b003      	add	sp, #12
9001be4e:	4770      	bx	lr

9001be50 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
9001be50:	b40e      	push	{r1, r2, r3}
9001be52:	b5f0      	push	{r4, r5, r6, r7, lr}
9001be54:	b09e      	sub	sp, #120	; 0x78
9001be56:	4604      	mov	r4, r0
9001be58:	ab23      	add	r3, sp, #140	; 0x8c
9001be5a:	a805      	add	r0, sp, #20
9001be5c:	f853 5b04 	ldr.w	r5, [r3], #4
9001be60:	9303      	str	r3, [sp, #12]
9001be62:	f000 fe23 	bl	9001caac <_ZN8touchgfx12TextProviderC1Ev>
9001be66:	6823      	ldr	r3, [r4, #0]
9001be68:	4620      	mov	r0, r4
9001be6a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001be6c:	4798      	blx	r3
9001be6e:	6823      	ldr	r3, [r4, #0]
9001be70:	4606      	mov	r6, r0
9001be72:	4620      	mov	r0, r4
9001be74:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001be76:	4798      	blx	r3
9001be78:	4633      	mov	r3, r6
9001be7a:	4629      	mov	r1, r5
9001be7c:	9000      	str	r0, [sp, #0]
9001be7e:	9a03      	ldr	r2, [sp, #12]
9001be80:	a805      	add	r0, sp, #20
9001be82:	f000 fe6e 	bl	9001cb62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001be86:	ad1e      	add	r5, sp, #120	; 0x78
9001be88:	2100      	movs	r1, #0
9001be8a:	f647 76ff 	movw	r6, #32767	; 0x7fff
9001be8e:	4622      	mov	r2, r4
9001be90:	a805      	add	r0, sp, #20
9001be92:	f845 1d68 	str.w	r1, [r5, #-104]!
9001be96:	462b      	mov	r3, r5
9001be98:	f001 f968 	bl	9001d16c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001be9c:	b1d8      	cbz	r0, 9001bed6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
9001be9e:	280a      	cmp	r0, #10
9001bea0:	d012      	beq.n	9001bec8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001bea2:	9804      	ldr	r0, [sp, #16]
9001bea4:	b180      	cbz	r0, 9001bec8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001bea6:	7b47      	ldrb	r7, [r0, #13]
9001bea8:	88e2      	ldrh	r2, [r4, #6]
9001beaa:	00fb      	lsls	r3, r7, #3
9001beac:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001beb0:	7a03      	ldrb	r3, [r0, #8]
9001beb2:	430b      	orrs	r3, r1
9001beb4:	0679      	lsls	r1, r7, #25
9001beb6:	bf44      	itt	mi
9001beb8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001bebc:	b21b      	sxthmi	r3, r3
9001bebe:	1ad3      	subs	r3, r2, r3
9001bec0:	b21b      	sxth	r3, r3
9001bec2:	429e      	cmp	r6, r3
9001bec4:	bfa8      	it	ge
9001bec6:	461e      	movge	r6, r3
9001bec8:	462b      	mov	r3, r5
9001beca:	4622      	mov	r2, r4
9001becc:	2100      	movs	r1, #0
9001bece:	a805      	add	r0, sp, #20
9001bed0:	f001 f94c 	bl	9001d16c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001bed4:	e7e2      	b.n	9001be9c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001bed6:	4630      	mov	r0, r6
9001bed8:	b01e      	add	sp, #120	; 0x78
9001beda:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001bede:	b003      	add	sp, #12
9001bee0:	4770      	bx	lr

9001bee2 <_ZNK8touchgfx8Drawable10invalidateEv>:
9001bee2:	b513      	push	{r0, r1, r4, lr}
9001bee4:	6803      	ldr	r3, [r0, #0]
9001bee6:	2400      	movs	r4, #0
9001bee8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001beec:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001bef0:	f8ad 1004 	strh.w	r1, [sp, #4]
9001bef4:	4669      	mov	r1, sp
9001bef6:	691b      	ldr	r3, [r3, #16]
9001bef8:	9400      	str	r4, [sp, #0]
9001befa:	f8ad 2006 	strh.w	r2, [sp, #6]
9001befe:	4798      	blx	r3
9001bf00:	b002      	add	sp, #8
9001bf02:	bd10      	pop	{r4, pc}

9001bf04 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001bf04:	b538      	push	{r3, r4, r5, lr}
9001bf06:	680b      	ldr	r3, [r1, #0]
9001bf08:	460c      	mov	r4, r1
9001bf0a:	4605      	mov	r5, r0
9001bf0c:	68db      	ldr	r3, [r3, #12]
9001bf0e:	4798      	blx	r3
9001bf10:	6823      	ldr	r3, [r4, #0]
9001bf12:	4620      	mov	r0, r4
9001bf14:	4629      	mov	r1, r5
9001bf16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001bf18:	4798      	blx	r3
9001bf1a:	4628      	mov	r0, r5
9001bf1c:	bd38      	pop	{r3, r4, r5, pc}

9001bf1e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
9001bf1e:	b410      	push	{r4}
9001bf20:	880a      	ldrh	r2, [r1, #0]
9001bf22:	8884      	ldrh	r4, [r0, #4]
9001bf24:	4422      	add	r2, r4
9001bf26:	800a      	strh	r2, [r1, #0]
9001bf28:	884a      	ldrh	r2, [r1, #2]
9001bf2a:	88c4      	ldrh	r4, [r0, #6]
9001bf2c:	4422      	add	r2, r4
9001bf2e:	804a      	strh	r2, [r1, #2]
9001bf30:	6940      	ldr	r0, [r0, #20]
9001bf32:	b120      	cbz	r0, 9001bf3e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001bf34:	6803      	ldr	r3, [r0, #0]
9001bf36:	f85d 4b04 	ldr.w	r4, [sp], #4
9001bf3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001bf3c:	4718      	bx	r3
9001bf3e:	f85d 4b04 	ldr.w	r4, [sp], #4
9001bf42:	4770      	bx	lr

9001bf44 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001bf44:	b570      	push	{r4, r5, r6, lr}
9001bf46:	8882      	ldrh	r2, [r0, #4]
9001bf48:	460c      	mov	r4, r1
9001bf4a:	880b      	ldrh	r3, [r1, #0]
9001bf4c:	4605      	mov	r5, r0
9001bf4e:	4413      	add	r3, r2
9001bf50:	800b      	strh	r3, [r1, #0]
9001bf52:	884b      	ldrh	r3, [r1, #2]
9001bf54:	88c2      	ldrh	r2, [r0, #6]
9001bf56:	4413      	add	r3, r2
9001bf58:	804b      	strh	r3, [r1, #2]
9001bf5a:	1d01      	adds	r1, r0, #4
9001bf5c:	4620      	mov	r0, r4
9001bf5e:	f7f9 f92d 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
9001bf62:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001bf66:	2b00      	cmp	r3, #0
9001bf68:	dd0b      	ble.n	9001bf82 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001bf6a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001bf6e:	2b00      	cmp	r3, #0
9001bf70:	dd07      	ble.n	9001bf82 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001bf72:	6968      	ldr	r0, [r5, #20]
9001bf74:	b128      	cbz	r0, 9001bf82 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001bf76:	6803      	ldr	r3, [r0, #0]
9001bf78:	4621      	mov	r1, r4
9001bf7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001bf7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001bf80:	4718      	bx	r3
9001bf82:	bd70      	pop	{r4, r5, r6, pc}

9001bf84 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
9001bf84:	b570      	push	{r4, r5, r6, lr}
9001bf86:	8882      	ldrh	r2, [r0, #4]
9001bf88:	460c      	mov	r4, r1
9001bf8a:	880b      	ldrh	r3, [r1, #0]
9001bf8c:	4605      	mov	r5, r0
9001bf8e:	4413      	add	r3, r2
9001bf90:	800b      	strh	r3, [r1, #0]
9001bf92:	884b      	ldrh	r3, [r1, #2]
9001bf94:	88c2      	ldrh	r2, [r0, #6]
9001bf96:	4413      	add	r3, r2
9001bf98:	804b      	strh	r3, [r1, #2]
9001bf9a:	1d01      	adds	r1, r0, #4
9001bf9c:	4620      	mov	r0, r4
9001bf9e:	f7f9 f90d 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
9001bfa2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001bfa6:	2b00      	cmp	r3, #0
9001bfa8:	dd18      	ble.n	9001bfdc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
9001bfaa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001bfae:	2b00      	cmp	r3, #0
9001bfb0:	dd14      	ble.n	9001bfdc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
9001bfb2:	6968      	ldr	r0, [r5, #20]
9001bfb4:	b128      	cbz	r0, 9001bfc2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
9001bfb6:	6803      	ldr	r3, [r0, #0]
9001bfb8:	4621      	mov	r1, r4
9001bfba:	691b      	ldr	r3, [r3, #16]
9001bfbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001bfc0:	4718      	bx	r3
9001bfc2:	4b07      	ldr	r3, [pc, #28]	; (9001bfe0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001bfc4:	681b      	ldr	r3, [r3, #0]
9001bfc6:	3304      	adds	r3, #4
9001bfc8:	429d      	cmp	r5, r3
9001bfca:	d107      	bne.n	9001bfdc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
9001bfcc:	f7fe fefa 	bl	9001adc4 <_ZN8touchgfx11Application11getInstanceEv>
9001bfd0:	6821      	ldr	r1, [r4, #0]
9001bfd2:	6862      	ldr	r2, [r4, #4]
9001bfd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001bfd8:	f7ff b862 	b.w	9001b0a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
9001bfdc:	bd70      	pop	{r4, r5, r6, pc}
9001bfde:	bf00      	nop
9001bfe0:	24028e70 	.word	0x24028e70

9001bfe4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
9001bfe4:	b570      	push	{r4, r5, r6, lr}
9001bfe6:	4604      	mov	r4, r0
9001bfe8:	4616      	mov	r6, r2
9001bfea:	460d      	mov	r5, r1
9001bfec:	b901      	cbnz	r1, 9001bff0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001bfee:	b192      	cbz	r2, 9001c016 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
9001bff0:	6823      	ldr	r3, [r4, #0]
9001bff2:	4620      	mov	r0, r4
9001bff4:	699b      	ldr	r3, [r3, #24]
9001bff6:	4798      	blx	r3
9001bff8:	88e2      	ldrh	r2, [r4, #6]
9001bffa:	88a1      	ldrh	r1, [r4, #4]
9001bffc:	4620      	mov	r0, r4
9001bffe:	4432      	add	r2, r6
9001c000:	4429      	add	r1, r5
9001c002:	b212      	sxth	r2, r2
9001c004:	b209      	sxth	r1, r1
9001c006:	f7f9 fa47 	bl	90015498 <_ZN8touchgfx8Drawable5setXYEss>
9001c00a:	6823      	ldr	r3, [r4, #0]
9001c00c:	4620      	mov	r0, r4
9001c00e:	699b      	ldr	r3, [r3, #24]
9001c010:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001c014:	4718      	bx	r3
9001c016:	bd70      	pop	{r4, r5, r6, pc}

9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
9001c018:	b510      	push	{r4, lr}
9001c01a:	2300      	movs	r3, #0
9001c01c:	4604      	mov	r4, r0
9001c01e:	4608      	mov	r0, r1
9001c020:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001c024:	8023      	strh	r3, [r4, #0]
9001c026:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001c02a:	8063      	strh	r3, [r4, #2]
9001c02c:	6803      	ldr	r3, [r0, #0]
9001c02e:	80a1      	strh	r1, [r4, #4]
9001c030:	4621      	mov	r1, r4
9001c032:	80e2      	strh	r2, [r4, #6]
9001c034:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c036:	4798      	blx	r3
9001c038:	4620      	mov	r0, r4
9001c03a:	bd10      	pop	{r4, pc}

9001c03c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
9001c03c:	b530      	push	{r4, r5, lr}
9001c03e:	8083      	strh	r3, [r0, #4]
9001c040:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001c044:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001c048:	80c3      	strh	r3, [r0, #6]
9001c04a:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001c04e:	6141      	str	r1, [r0, #20]
9001c050:	7203      	strb	r3, [r0, #8]
9001c052:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001c056:	8302      	strh	r2, [r0, #24]
9001c058:	7243      	strb	r3, [r0, #9]
9001c05a:	7a83      	ldrb	r3, [r0, #10]
9001c05c:	f365 0306 	bfi	r3, r5, #0, #7
9001c060:	f89d 501c 	ldrb.w	r5, [sp, #28]
9001c064:	f365 13c7 	bfi	r3, r5, #7, #1
9001c068:	7283      	strb	r3, [r0, #10]
9001c06a:	f89d 3020 	ldrb.w	r3, [sp, #32]
9001c06e:	72c3      	strb	r3, [r0, #11]
9001c070:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
9001c074:	7303      	strb	r3, [r0, #12]
9001c076:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001c07a:	81c3      	strh	r3, [r0, #14]
9001c07c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
9001c080:	8203      	strh	r3, [r0, #16]
9001c082:	4b01      	ldr	r3, [pc, #4]	; (9001c088 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
9001c084:	6003      	str	r3, [r0, #0]
9001c086:	bd30      	pop	{r4, r5, pc}
9001c088:	90030bac 	.word	0x90030bac

9001c08c <_ZNK8touchgfx9ConstFont4findEt>:
9001c08c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c08e:	6944      	ldr	r4, [r0, #20]
9001c090:	b3bc      	cbz	r4, 9001c102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001c092:	88a3      	ldrh	r3, [r4, #4]
9001c094:	8b02      	ldrh	r2, [r0, #24]
9001c096:	1acb      	subs	r3, r1, r3
9001c098:	f102 32ff 	add.w	r2, r2, #4294967295
9001c09c:	d431      	bmi.n	9001c102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001c09e:	4293      	cmp	r3, r2
9001c0a0:	dd0c      	ble.n	9001c0bc <_ZNK8touchgfx9ConstFont4findEt+0x30>
9001c0a2:	230e      	movs	r3, #14
9001c0a4:	fb03 4302 	mla	r3, r3, r2, r4
9001c0a8:	889b      	ldrh	r3, [r3, #4]
9001c0aa:	1a5b      	subs	r3, r3, r1
9001c0ac:	1ad3      	subs	r3, r2, r3
9001c0ae:	429a      	cmp	r2, r3
9001c0b0:	db27      	blt.n	9001c102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001c0b2:	2b00      	cmp	r3, #0
9001c0b4:	bfbc      	itt	lt
9001c0b6:	2302      	movlt	r3, #2
9001c0b8:	fb92 f3f3 	sdivlt	r3, r2, r3
9001c0bc:	2500      	movs	r5, #0
9001c0be:	260e      	movs	r6, #14
9001c0c0:	4295      	cmp	r5, r2
9001c0c2:	dc1e      	bgt.n	9001c102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001c0c4:	fb06 4003 	mla	r0, r6, r3, r4
9001c0c8:	8887      	ldrh	r7, [r0, #4]
9001c0ca:	42b9      	cmp	r1, r7
9001c0cc:	d01a      	beq.n	9001c104 <_ZNK8touchgfx9ConstFont4findEt+0x78>
9001c0ce:	d20d      	bcs.n	9001c0ec <_ZNK8touchgfx9ConstFont4findEt+0x60>
9001c0d0:	1e5a      	subs	r2, r3, #1
9001c0d2:	4295      	cmp	r5, r2
9001c0d4:	dc15      	bgt.n	9001c102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001c0d6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
9001c0da:	1a5b      	subs	r3, r3, r1
9001c0dc:	1ad3      	subs	r3, r2, r3
9001c0de:	429a      	cmp	r2, r3
9001c0e0:	db0f      	blt.n	9001c102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001c0e2:	429d      	cmp	r5, r3
9001c0e4:	ddec      	ble.n	9001c0c0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001c0e6:	1953      	adds	r3, r2, r5
9001c0e8:	105b      	asrs	r3, r3, #1
9001c0ea:	e7e9      	b.n	9001c0c0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001c0ec:	1c5d      	adds	r5, r3, #1
9001c0ee:	42aa      	cmp	r2, r5
9001c0f0:	db07      	blt.n	9001c102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001c0f2:	8a43      	ldrh	r3, [r0, #18]
9001c0f4:	1acb      	subs	r3, r1, r3
9001c0f6:	442b      	add	r3, r5
9001c0f8:	429d      	cmp	r5, r3
9001c0fa:	dc02      	bgt.n	9001c102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001c0fc:	429a      	cmp	r2, r3
9001c0fe:	dadf      	bge.n	9001c0c0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001c100:	e7f1      	b.n	9001c0e6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
9001c102:	2000      	movs	r0, #0
9001c104:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001c106 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001c106:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001c108:	4604      	mov	r4, r0
9001c10a:	4617      	mov	r7, r2
9001c10c:	461e      	mov	r6, r3
9001c10e:	b911      	cbnz	r1, 9001c116 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
9001c110:	2500      	movs	r5, #0
9001c112:	4628      	mov	r0, r5
9001c114:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001c116:	290a      	cmp	r1, #10
9001c118:	d0fa      	beq.n	9001c110 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001c11a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
9001c11e:	4291      	cmp	r1, r2
9001c120:	d0f6      	beq.n	9001c110 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001c122:	f242 020b 	movw	r2, #8203	; 0x200b
9001c126:	4291      	cmp	r1, r2
9001c128:	d0f2      	beq.n	9001c110 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001c12a:	f7ff ffaf 	bl	9001c08c <_ZNK8touchgfx9ConstFont4findEt>
9001c12e:	4605      	mov	r5, r0
9001c130:	b950      	cbnz	r0, 9001c148 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001c132:	6823      	ldr	r3, [r4, #0]
9001c134:	4620      	mov	r0, r4
9001c136:	691b      	ldr	r3, [r3, #16]
9001c138:	4798      	blx	r3
9001c13a:	4601      	mov	r1, r0
9001c13c:	4620      	mov	r0, r4
9001c13e:	f7ff ffa5 	bl	9001c08c <_ZNK8touchgfx9ConstFont4findEt>
9001c142:	4605      	mov	r5, r0
9001c144:	2800      	cmp	r0, #0
9001c146:	d0e3      	beq.n	9001c110 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001c148:	6823      	ldr	r3, [r4, #0]
9001c14a:	4629      	mov	r1, r5
9001c14c:	4620      	mov	r0, r4
9001c14e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001c150:	4798      	blx	r3
9001c152:	6038      	str	r0, [r7, #0]
9001c154:	6823      	ldr	r3, [r4, #0]
9001c156:	4620      	mov	r0, r4
9001c158:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001c15a:	4798      	blx	r3
9001c15c:	7030      	strb	r0, [r6, #0]
9001c15e:	e7d8      	b.n	9001c112 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

9001c160 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
9001c160:	b538      	push	{r3, r4, r5, lr}
9001c162:	4605      	mov	r5, r0
9001c164:	f001 fe24 	bl	9001ddb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001c168:	4604      	mov	r4, r0
9001c16a:	4628      	mov	r0, r5
9001c16c:	f001 fd64 	bl	9001dc38 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001c170:	2800      	cmp	r0, #0
9001c172:	bf14      	ite	ne
9001c174:	2002      	movne	r0, #2
9001c176:	2000      	moveq	r0, #0
9001c178:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
9001c17c:	b280      	uxth	r0, r0
9001c17e:	bd38      	pop	{r3, r4, r5, pc}

9001c180 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
9001c180:	b538      	push	{r3, r4, r5, lr}
9001c182:	4605      	mov	r5, r0
9001c184:	f001 fe14 	bl	9001ddb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001c188:	4604      	mov	r4, r0
9001c18a:	4628      	mov	r0, r5
9001c18c:	f001 fd54 	bl	9001dc38 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001c190:	2800      	cmp	r0, #0
9001c192:	bf14      	ite	ne
9001c194:	2002      	movne	r0, #2
9001c196:	2000      	moveq	r0, #0
9001c198:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
9001c19c:	f040 0001 	orr.w	r0, r0, #1
9001c1a0:	b280      	uxth	r0, r0
9001c1a2:	bd38      	pop	{r3, r4, r5, pc}

9001c1a4 <_ZN8touchgfx4clzuEm>:
9001c1a4:	4603      	mov	r3, r0
9001c1a6:	b1c8      	cbz	r0, 9001c1dc <_ZN8touchgfx4clzuEm+0x38>
9001c1a8:	0c02      	lsrs	r2, r0, #16
9001c1aa:	0412      	lsls	r2, r2, #16
9001c1ac:	b9a2      	cbnz	r2, 9001c1d8 <_ZN8touchgfx4clzuEm+0x34>
9001c1ae:	0403      	lsls	r3, r0, #16
9001c1b0:	2010      	movs	r0, #16
9001c1b2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
9001c1b6:	bf04      	itt	eq
9001c1b8:	021b      	lsleq	r3, r3, #8
9001c1ba:	3008      	addeq	r0, #8
9001c1bc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
9001c1c0:	bf04      	itt	eq
9001c1c2:	011b      	lsleq	r3, r3, #4
9001c1c4:	3004      	addeq	r0, #4
9001c1c6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
9001c1ca:	bf04      	itt	eq
9001c1cc:	009b      	lsleq	r3, r3, #2
9001c1ce:	3002      	addeq	r0, #2
9001c1d0:	2b00      	cmp	r3, #0
9001c1d2:	db04      	blt.n	9001c1de <_ZN8touchgfx4clzuEm+0x3a>
9001c1d4:	3001      	adds	r0, #1
9001c1d6:	4770      	bx	lr
9001c1d8:	2000      	movs	r0, #0
9001c1da:	e7ea      	b.n	9001c1b2 <_ZN8touchgfx4clzuEm+0xe>
9001c1dc:	2020      	movs	r0, #32
9001c1de:	4770      	bx	lr

9001c1e0 <_ZN8touchgfx7muldivuEmmmRm>:
9001c1e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c1e4:	4680      	mov	r8, r0
9001c1e6:	460f      	mov	r7, r1
9001c1e8:	4615      	mov	r5, r2
9001c1ea:	461e      	mov	r6, r3
9001c1ec:	f7ff ffda 	bl	9001c1a4 <_ZN8touchgfx4clzuEm>
9001c1f0:	b998      	cbnz	r0, 9001c21a <_ZN8touchgfx7muldivuEmmmRm+0x3a>
9001c1f2:	4608      	mov	r0, r1
9001c1f4:	f7ff ffd6 	bl	9001c1a4 <_ZN8touchgfx4clzuEm>
9001c1f8:	2800      	cmp	r0, #0
9001c1fa:	dd08      	ble.n	9001c20e <_ZN8touchgfx7muldivuEmmmRm+0x2e>
9001c1fc:	4633      	mov	r3, r6
9001c1fe:	462a      	mov	r2, r5
9001c200:	4641      	mov	r1, r8
9001c202:	4638      	mov	r0, r7
9001c204:	f7ff ffec 	bl	9001c1e0 <_ZN8touchgfx7muldivuEmmmRm>
9001c208:	b003      	add	sp, #12
9001c20a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c20e:	f04f 33ff 	mov.w	r3, #4294967295
9001c212:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
9001c216:	6033      	str	r3, [r6, #0]
9001c218:	e7f6      	b.n	9001c208 <_ZN8touchgfx7muldivuEmmmRm+0x28>
9001c21a:	fa31 f900 	lsrs.w	r9, r1, r0
9001c21e:	fb01 f308 	mul.w	r3, r1, r8
9001c222:	d105      	bne.n	9001c230 <_ZN8touchgfx7muldivuEmmmRm+0x50>
9001c224:	fbb3 f0f5 	udiv	r0, r3, r5
9001c228:	fb05 3510 	mls	r5, r5, r0, r3
9001c22c:	6035      	str	r5, [r6, #0]
9001c22e:	e7eb      	b.n	9001c208 <_ZN8touchgfx7muldivuEmmmRm+0x28>
9001c230:	2301      	movs	r3, #1
9001c232:	fa08 fb00 	lsl.w	fp, r8, r0
9001c236:	462a      	mov	r2, r5
9001c238:	4641      	mov	r1, r8
9001c23a:	fa03 f000 	lsl.w	r0, r3, r0
9001c23e:	4633      	mov	r3, r6
9001c240:	fbbb faf5 	udiv	sl, fp, r5
9001c244:	3801      	subs	r0, #1
9001c246:	fb09 f40a 	mul.w	r4, r9, sl
9001c24a:	4038      	ands	r0, r7
9001c24c:	f7ff ffc8 	bl	9001c1e0 <_ZN8touchgfx7muldivuEmmmRm>
9001c250:	462a      	mov	r2, r5
9001c252:	4607      	mov	r7, r0
9001c254:	ab01      	add	r3, sp, #4
9001c256:	fb05 b11a 	mls	r1, r5, sl, fp
9001c25a:	4648      	mov	r0, r9
9001c25c:	f7ff ffc0 	bl	9001c1e0 <_ZN8touchgfx7muldivuEmmmRm>
9001c260:	9b01      	ldr	r3, [sp, #4]
9001c262:	6832      	ldr	r2, [r6, #0]
9001c264:	441a      	add	r2, r3
9001c266:	fbb2 f3f5 	udiv	r3, r2, r5
9001c26a:	441c      	add	r4, r3
9001c26c:	fb05 2513 	mls	r5, r5, r3, r2
9001c270:	443c      	add	r4, r7
9001c272:	4420      	add	r0, r4
9001c274:	e7da      	b.n	9001c22c <_ZN8touchgfx7muldivuEmmmRm+0x4c>

9001c276 <_ZN8touchgfx6muldivElllRl>:
9001c276:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001c278:	2800      	cmp	r0, #0
9001c27a:	461e      	mov	r6, r3
9001c27c:	bfba      	itte	lt
9001c27e:	4240      	neglt	r0, r0
9001c280:	f04f 34ff 	movlt.w	r4, #4294967295
9001c284:	2401      	movge	r4, #1
9001c286:	2900      	cmp	r1, #0
9001c288:	bfbc      	itt	lt
9001c28a:	4249      	neglt	r1, r1
9001c28c:	4264      	neglt	r4, r4
9001c28e:	2a00      	cmp	r2, #0
9001c290:	bfb6      	itet	lt
9001c292:	4265      	neglt	r5, r4
9001c294:	4625      	movge	r5, r4
9001c296:	4252      	neglt	r2, r2
9001c298:	4288      	cmp	r0, r1
9001c29a:	bfc2      	ittt	gt
9001c29c:	4603      	movgt	r3, r0
9001c29e:	4608      	movgt	r0, r1
9001c2a0:	4619      	movgt	r1, r3
9001c2a2:	ab01      	add	r3, sp, #4
9001c2a4:	f7ff ff9c 	bl	9001c1e0 <_ZN8touchgfx7muldivuEmmmRm>
9001c2a8:	9b01      	ldr	r3, [sp, #4]
9001c2aa:	4368      	muls	r0, r5
9001c2ac:	435c      	muls	r4, r3
9001c2ae:	6034      	str	r4, [r6, #0]
9001c2b0:	b002      	add	sp, #8
9001c2b2:	bd70      	pop	{r4, r5, r6, pc}

9001c2b4 <_ZN8touchgfx6muldivElll>:
9001c2b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001c2b6:	4606      	mov	r6, r0
9001c2b8:	ab01      	add	r3, sp, #4
9001c2ba:	460d      	mov	r5, r1
9001c2bc:	4614      	mov	r4, r2
9001c2be:	f7ff ffda 	bl	9001c276 <_ZN8touchgfx6muldivElllRl>
9001c2c2:	2e00      	cmp	r6, #0
9001c2c4:	db20      	blt.n	9001c308 <_ZN8touchgfx6muldivElll+0x54>
9001c2c6:	bf14      	ite	ne
9001c2c8:	2301      	movne	r3, #1
9001c2ca:	2300      	moveq	r3, #0
9001c2cc:	2d00      	cmp	r5, #0
9001c2ce:	db1e      	blt.n	9001c30e <_ZN8touchgfx6muldivElll+0x5a>
9001c2d0:	bf14      	ite	ne
9001c2d2:	2201      	movne	r2, #1
9001c2d4:	2200      	moveq	r2, #0
9001c2d6:	2c00      	cmp	r4, #0
9001c2d8:	fb03 f202 	mul.w	r2, r3, r2
9001c2dc:	db1a      	blt.n	9001c314 <_ZN8touchgfx6muldivElll+0x60>
9001c2de:	bf14      	ite	ne
9001c2e0:	2301      	movne	r3, #1
9001c2e2:	2300      	moveq	r3, #0
9001c2e4:	4353      	muls	r3, r2
9001c2e6:	2b01      	cmp	r3, #1
9001c2e8:	d117      	bne.n	9001c31a <_ZN8touchgfx6muldivElll+0x66>
9001c2ea:	2c00      	cmp	r4, #0
9001c2ec:	9b01      	ldr	r3, [sp, #4]
9001c2ee:	bfb8      	it	lt
9001c2f0:	4264      	neglt	r4, r4
9001c2f2:	2b00      	cmp	r3, #0
9001c2f4:	f104 0401 	add.w	r4, r4, #1
9001c2f8:	bfb8      	it	lt
9001c2fa:	425b      	neglt	r3, r3
9001c2fc:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001c300:	db00      	blt.n	9001c304 <_ZN8touchgfx6muldivElll+0x50>
9001c302:	3001      	adds	r0, #1
9001c304:	b002      	add	sp, #8
9001c306:	bd70      	pop	{r4, r5, r6, pc}
9001c308:	f04f 33ff 	mov.w	r3, #4294967295
9001c30c:	e7de      	b.n	9001c2cc <_ZN8touchgfx6muldivElll+0x18>
9001c30e:	f04f 32ff 	mov.w	r2, #4294967295
9001c312:	e7e0      	b.n	9001c2d6 <_ZN8touchgfx6muldivElll+0x22>
9001c314:	f04f 33ff 	mov.w	r3, #4294967295
9001c318:	e7e4      	b.n	9001c2e4 <_ZN8touchgfx6muldivElll+0x30>
9001c31a:	3301      	adds	r3, #1
9001c31c:	d1f2      	bne.n	9001c304 <_ZN8touchgfx6muldivElll+0x50>
9001c31e:	9b01      	ldr	r3, [sp, #4]
9001c320:	2c00      	cmp	r4, #0
9001c322:	bfb8      	it	lt
9001c324:	4264      	neglt	r4, r4
9001c326:	2b00      	cmp	r3, #0
9001c328:	bfb8      	it	lt
9001c32a:	425b      	neglt	r3, r3
9001c32c:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001c330:	bfc8      	it	gt
9001c332:	f100 30ff 	addgt.w	r0, r0, #4294967295
9001c336:	e7e5      	b.n	9001c304 <_ZN8touchgfx6muldivElll+0x50>

9001c338 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
9001c338:	2000      	movs	r0, #0
9001c33a:	4770      	bx	lr

9001c33c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
9001c33c:	2001      	movs	r0, #1
9001c33e:	4770      	bx	lr

9001c340 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001c340:	2002      	movs	r0, #2
9001c342:	4770      	bx	lr

9001c344 <_ZN8touchgfx6ScreenD1Ev>:
9001c344:	4770      	bx	lr

9001c346 <_ZN8touchgfx6Screen11setupScreenEv>:
9001c346:	4770      	bx	lr

9001c348 <_ZN8touchgfx12GestureEventD1Ev>:
9001c348:	4770      	bx	lr

9001c34a <_ZN8touchgfx9DragEventD1Ev>:
9001c34a:	4770      	bx	lr

9001c34c <_ZN8touchgfx10ClickEventD1Ev>:
9001c34c:	4770      	bx	lr

9001c34e <_ZN8touchgfx10ClickEventD0Ev>:
9001c34e:	b510      	push	{r4, lr}
9001c350:	4604      	mov	r4, r0
9001c352:	210c      	movs	r1, #12
9001c354:	f00f f85f 	bl	9002b416 <_ZdlPvj>
9001c358:	4620      	mov	r0, r4
9001c35a:	bd10      	pop	{r4, pc}

9001c35c <_ZN8touchgfx9DragEventD0Ev>:
9001c35c:	b510      	push	{r4, lr}
9001c35e:	4604      	mov	r4, r0
9001c360:	2110      	movs	r1, #16
9001c362:	f00f f858 	bl	9002b416 <_ZdlPvj>
9001c366:	4620      	mov	r0, r4
9001c368:	bd10      	pop	{r4, pc}

9001c36a <_ZN8touchgfx12GestureEventD0Ev>:
9001c36a:	b510      	push	{r4, lr}
9001c36c:	4604      	mov	r4, r0
9001c36e:	210c      	movs	r1, #12
9001c370:	f00f f851 	bl	9002b416 <_ZdlPvj>
9001c374:	4620      	mov	r0, r4
9001c376:	bd10      	pop	{r4, pc}

9001c378 <_ZN8touchgfx6ScreenD0Ev>:
9001c378:	b510      	push	{r4, lr}
9001c37a:	4604      	mov	r4, r0
9001c37c:	213c      	movs	r1, #60	; 0x3c
9001c37e:	f00f f84a 	bl	9002b416 <_ZdlPvj>
9001c382:	4620      	mov	r0, r4
9001c384:	bd10      	pop	{r4, pc}
	...

9001c388 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
9001c388:	b530      	push	{r4, r5, lr}
9001c38a:	460d      	mov	r5, r1
9001c38c:	6b01      	ldr	r1, [r0, #48]	; 0x30
9001c38e:	b087      	sub	sp, #28
9001c390:	4604      	mov	r4, r0
9001c392:	b301      	cbz	r1, 9001c3d6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
9001c394:	a801      	add	r0, sp, #4
9001c396:	f7ff fe3f 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c39a:	892a      	ldrh	r2, [r5, #8]
9001c39c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001c3a0:	7928      	ldrb	r0, [r5, #4]
9001c3a2:	1ad2      	subs	r2, r2, r3
9001c3a4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
9001c3a6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
9001c3aa:	441a      	add	r2, r3
9001c3ac:	896b      	ldrh	r3, [r5, #10]
9001c3ae:	f8bd 5006 	ldrh.w	r5, [sp, #6]
9001c3b2:	f88d 0010 	strb.w	r0, [sp, #16]
9001c3b6:	1b5b      	subs	r3, r3, r5
9001c3b8:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
9001c3ba:	6b20      	ldr	r0, [r4, #48]	; 0x30
9001c3bc:	442b      	add	r3, r5
9001c3be:	4d07      	ldr	r5, [pc, #28]	; (9001c3dc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
9001c3c0:	f8ad 1012 	strh.w	r1, [sp, #18]
9001c3c4:	a903      	add	r1, sp, #12
9001c3c6:	9503      	str	r5, [sp, #12]
9001c3c8:	f8ad 2014 	strh.w	r2, [sp, #20]
9001c3cc:	f8ad 3016 	strh.w	r3, [sp, #22]
9001c3d0:	6803      	ldr	r3, [r0, #0]
9001c3d2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9001c3d4:	4798      	blx	r3
9001c3d6:	b007      	add	sp, #28
9001c3d8:	bd30      	pop	{r4, r5, pc}
9001c3da:	bf00      	nop
9001c3dc:	90030c34 	.word	0x90030c34

9001c3e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
9001c3e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001c3e4:	6b03      	ldr	r3, [r0, #48]	; 0x30
9001c3e6:	b08a      	sub	sp, #40	; 0x28
9001c3e8:	4604      	mov	r4, r0
9001c3ea:	460d      	mov	r5, r1
9001c3ec:	b113      	cbz	r3, 9001c3f4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001c3ee:	790b      	ldrb	r3, [r1, #4]
9001c3f0:	2b00      	cmp	r3, #0
9001c3f2:	d044      	beq.n	9001c47e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001c3f4:	f104 0804 	add.w	r8, r4, #4
9001c3f8:	a803      	add	r0, sp, #12
9001c3fa:	4641      	mov	r1, r8
9001c3fc:	f7ff fe0c 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c400:	792b      	ldrb	r3, [r5, #4]
9001c402:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001c406:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
9001c40a:	b983      	cbnz	r3, 9001c42e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
9001c40c:	f104 0336 	add.w	r3, r4, #54	; 0x36
9001c410:	892a      	ldrh	r2, [r5, #8]
9001c412:	88e9      	ldrh	r1, [r5, #6]
9001c414:	4640      	mov	r0, r8
9001c416:	1b92      	subs	r2, r2, r6
9001c418:	9301      	str	r3, [sp, #4]
9001c41a:	1bc9      	subs	r1, r1, r7
9001c41c:	f104 0334 	add.w	r3, r4, #52	; 0x34
9001c420:	b212      	sxth	r2, r2
9001c422:	9300      	str	r3, [sp, #0]
9001c424:	b209      	sxth	r1, r1
9001c426:	f104 0330 	add.w	r3, r4, #48	; 0x30
9001c42a:	f7f8 fde5 	bl	90014ff8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001c42e:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001c430:	b329      	cbz	r1, 9001c47e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001c432:	a805      	add	r0, sp, #20
9001c434:	f7ff fdf0 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c438:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9001c43c:	792b      	ldrb	r3, [r5, #4]
9001c43e:	a907      	add	r1, sp, #28
9001c440:	1abf      	subs	r7, r7, r2
9001c442:	88ea      	ldrh	r2, [r5, #6]
9001c444:	6b20      	ldr	r0, [r4, #48]	; 0x30
9001c446:	4417      	add	r7, r2
9001c448:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
9001c44a:	f88d 3020 	strb.w	r3, [sp, #32]
9001c44e:	4417      	add	r7, r2
9001c450:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001c454:	1ab6      	subs	r6, r6, r2
9001c456:	892a      	ldrh	r2, [r5, #8]
9001c458:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
9001c45c:	4416      	add	r6, r2
9001c45e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001c460:	4416      	add	r6, r2
9001c462:	4a08      	ldr	r2, [pc, #32]	; (9001c484 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001c464:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
9001c468:	2600      	movs	r6, #0
9001c46a:	9207      	str	r2, [sp, #28]
9001c46c:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
9001c470:	6803      	ldr	r3, [r0, #0]
9001c472:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001c474:	4798      	blx	r3
9001c476:	792b      	ldrb	r3, [r5, #4]
9001c478:	b10b      	cbz	r3, 9001c47e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001c47a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
9001c47e:	b00a      	add	sp, #40	; 0x28
9001c480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001c484:	90030c0c 	.word	0x90030c0c

9001c488 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
9001c488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001c48c:	460c      	mov	r4, r1
9001c48e:	6b01      	ldr	r1, [r0, #48]	; 0x30
9001c490:	b088      	sub	sp, #32
9001c492:	4605      	mov	r5, r0
9001c494:	2900      	cmp	r1, #0
9001c496:	d06d      	beq.n	9001c574 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
9001c498:	4668      	mov	r0, sp
9001c49a:	f7ff fdbd 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c49e:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
9001c4a0:	88e3      	ldrh	r3, [r4, #6]
9001c4a2:	f9bd 8000 	ldrsh.w	r8, [sp]
9001c4a6:	440b      	add	r3, r1
9001c4a8:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
9001c4ac:	b21b      	sxth	r3, r3
9001c4ae:	4543      	cmp	r3, r8
9001c4b0:	db31      	blt.n	9001c516 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001c4b2:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001c4b6:	44c4      	add	ip, r8
9001c4b8:	fa0f fc8c 	sxth.w	ip, ip
9001c4bc:	4563      	cmp	r3, ip
9001c4be:	da2a      	bge.n	9001c516 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001c4c0:	8eea      	ldrh	r2, [r5, #54]	; 0x36
9001c4c2:	8926      	ldrh	r6, [r4, #8]
9001c4c4:	4416      	add	r6, r2
9001c4c6:	b236      	sxth	r6, r6
9001c4c8:	42be      	cmp	r6, r7
9001c4ca:	db24      	blt.n	9001c516 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001c4cc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
9001c4d0:	4438      	add	r0, r7
9001c4d2:	b200      	sxth	r0, r0
9001c4d4:	4286      	cmp	r6, r0
9001c4d6:	da1e      	bge.n	9001c516 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001c4d8:	8963      	ldrh	r3, [r4, #10]
9001c4da:	4419      	add	r1, r3
9001c4dc:	b209      	sxth	r1, r1
9001c4de:	4541      	cmp	r1, r8
9001c4e0:	db08      	blt.n	9001c4f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001c4e2:	4561      	cmp	r1, ip
9001c4e4:	da06      	bge.n	9001c4f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001c4e6:	89a3      	ldrh	r3, [r4, #12]
9001c4e8:	441a      	add	r2, r3
9001c4ea:	b212      	sxth	r2, r2
9001c4ec:	42ba      	cmp	r2, r7
9001c4ee:	db01      	blt.n	9001c4f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001c4f0:	4282      	cmp	r2, r0
9001c4f2:	db10      	blt.n	9001c516 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001c4f4:	4b21      	ldr	r3, [pc, #132]	; (9001c57c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001c4f6:	a904      	add	r1, sp, #16
9001c4f8:	6b28      	ldr	r0, [r5, #48]	; 0x30
9001c4fa:	9304      	str	r3, [sp, #16]
9001c4fc:	2302      	movs	r3, #2
9001c4fe:	f88d 3014 	strb.w	r3, [sp, #20]
9001c502:	2300      	movs	r3, #0
9001c504:	f8ad 3016 	strh.w	r3, [sp, #22]
9001c508:	f8ad 3018 	strh.w	r3, [sp, #24]
9001c50c:	f8ad 301a 	strh.w	r3, [sp, #26]
9001c510:	6803      	ldr	r3, [r0, #0]
9001c512:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001c514:	4798      	blx	r3
9001c516:	1d29      	adds	r1, r5, #4
9001c518:	a802      	add	r0, sp, #8
9001c51a:	f7ff fd7d 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c51e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001c522:	88e0      	ldrh	r0, [r4, #6]
9001c524:	eba3 0808 	sub.w	r8, r3, r8
9001c528:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001c52c:	7921      	ldrb	r1, [r4, #4]
9001c52e:	fa1f f888 	uxth.w	r8, r8
9001c532:	1bdf      	subs	r7, r3, r7
9001c534:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
9001c538:	b2bb      	uxth	r3, r7
9001c53a:	4440      	add	r0, r8
9001c53c:	8922      	ldrh	r2, [r4, #8]
9001c53e:	8967      	ldrh	r7, [r4, #10]
9001c540:	4460      	add	r0, ip
9001c542:	89a4      	ldrh	r4, [r4, #12]
9001c544:	441a      	add	r2, r3
9001c546:	8eee      	ldrh	r6, [r5, #54]	; 0x36
9001c548:	44b8      	add	r8, r7
9001c54a:	4423      	add	r3, r4
9001c54c:	f8ad 0016 	strh.w	r0, [sp, #22]
9001c550:	4432      	add	r2, r6
9001c552:	44e0      	add	r8, ip
9001c554:	4433      	add	r3, r6
9001c556:	4c0a      	ldr	r4, [pc, #40]	; (9001c580 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
9001c558:	6b28      	ldr	r0, [r5, #48]	; 0x30
9001c55a:	f88d 1014 	strb.w	r1, [sp, #20]
9001c55e:	a904      	add	r1, sp, #16
9001c560:	9404      	str	r4, [sp, #16]
9001c562:	f8ad 2018 	strh.w	r2, [sp, #24]
9001c566:	f8ad 801a 	strh.w	r8, [sp, #26]
9001c56a:	f8ad 301c 	strh.w	r3, [sp, #28]
9001c56e:	6803      	ldr	r3, [r0, #0]
9001c570:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001c572:	4798      	blx	r3
9001c574:	b008      	add	sp, #32
9001c576:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001c57a:	bf00      	nop
9001c57c:	90030c0c 	.word	0x90030c0c
9001c580:	90030c20 	.word	0x90030c20

9001c584 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001c584:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001c586:	4604      	mov	r4, r0
9001c588:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
9001c58c:	3201      	adds	r2, #1
9001c58e:	d112      	bne.n	9001c5b6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
9001c590:	2500      	movs	r5, #0
9001c592:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001c596:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001c59a:	6803      	ldr	r3, [r0, #0]
9001c59c:	9500      	str	r5, [sp, #0]
9001c59e:	466d      	mov	r5, sp
9001c5a0:	f8ad 1004 	strh.w	r1, [sp, #4]
9001c5a4:	f8ad 2006 	strh.w	r2, [sp, #6]
9001c5a8:	4629      	mov	r1, r5
9001c5aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c5ac:	4798      	blx	r3
9001c5ae:	e895 0003 	ldmia.w	r5, {r0, r1}
9001c5b2:	e884 0003 	stmia.w	r4, {r0, r1}
9001c5b6:	4620      	mov	r0, r4
9001c5b8:	b003      	add	sp, #12
9001c5ba:	bd30      	pop	{r4, r5, pc}

9001c5bc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
9001c5bc:	b513      	push	{r0, r1, r4, lr}
9001c5be:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001c5c2:	4604      	mov	r4, r0
9001c5c4:	3301      	adds	r3, #1
9001c5c6:	d109      	bne.n	9001c5dc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
9001c5c8:	4601      	mov	r1, r0
9001c5ca:	4668      	mov	r0, sp
9001c5cc:	f7ff fd24 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c5d0:	f8bd 3000 	ldrh.w	r3, [sp]
9001c5d4:	8423      	strh	r3, [r4, #32]
9001c5d6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001c5da:	8463      	strh	r3, [r4, #34]	; 0x22
9001c5dc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001c5e0:	b002      	add	sp, #8
9001c5e2:	bd10      	pop	{r4, pc}

9001c5e4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001c5e4:	b513      	push	{r0, r1, r4, lr}
9001c5e6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
9001c5ea:	4604      	mov	r4, r0
9001c5ec:	3301      	adds	r3, #1
9001c5ee:	d109      	bne.n	9001c604 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001c5f0:	4601      	mov	r1, r0
9001c5f2:	4668      	mov	r0, sp
9001c5f4:	f7ff fd10 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c5f8:	f8bd 3000 	ldrh.w	r3, [sp]
9001c5fc:	8423      	strh	r3, [r4, #32]
9001c5fe:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001c602:	8463      	strh	r3, [r4, #34]	; 0x22
9001c604:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
9001c608:	b002      	add	sp, #8
9001c60a:	bd10      	pop	{r4, pc}

9001c60c <_ZN8touchgfx6ScreenC1Ev>:
9001c60c:	b570      	push	{r4, r5, r6, lr}
9001c60e:	4b17      	ldr	r3, [pc, #92]	; (9001c66c <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001c610:	4605      	mov	r5, r0
9001c612:	4a17      	ldr	r2, [pc, #92]	; (9001c670 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001c614:	2101      	movs	r1, #1
9001c616:	f845 3b04 	str.w	r3, [r5], #4
9001c61a:	2300      	movs	r3, #0
9001c61c:	6042      	str	r2, [r0, #4]
9001c61e:	4604      	mov	r4, r0
9001c620:	8103      	strh	r3, [r0, #8]
9001c622:	8143      	strh	r3, [r0, #10]
9001c624:	8183      	strh	r3, [r0, #12]
9001c626:	81c3      	strh	r3, [r0, #14]
9001c628:	8203      	strh	r3, [r0, #16]
9001c62a:	8243      	strh	r3, [r0, #18]
9001c62c:	8283      	strh	r3, [r0, #20]
9001c62e:	82c3      	strh	r3, [r0, #22]
9001c630:	6203      	str	r3, [r0, #32]
9001c632:	8483      	strh	r3, [r0, #36]	; 0x24
9001c634:	84c3      	strh	r3, [r0, #38]	; 0x26
9001c636:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
9001c63a:	6343      	str	r3, [r0, #52]	; 0x34
9001c63c:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
9001c640:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
9001c644:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001c648:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
9001c64c:	4b09      	ldr	r3, [pc, #36]	; (9001c674 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001c64e:	4628      	mov	r0, r5
9001c650:	f9b3 6000 	ldrsh.w	r6, [r3]
9001c654:	6b93      	ldr	r3, [r2, #56]	; 0x38
9001c656:	4a08      	ldr	r2, [pc, #32]	; (9001c678 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001c658:	f9b2 1000 	ldrsh.w	r1, [r2]
9001c65c:	4798      	blx	r3
9001c65e:	6863      	ldr	r3, [r4, #4]
9001c660:	4628      	mov	r0, r5
9001c662:	4631      	mov	r1, r6
9001c664:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001c666:	4798      	blx	r3
9001c668:	4620      	mov	r0, r4
9001c66a:	bd70      	pop	{r4, r5, r6, pc}
9001c66c:	90030c48 	.word	0x90030c48
9001c670:	900302b8 	.word	0x900302b8
9001c674:	24028e22 	.word	0x24028e22
9001c678:	24028e20 	.word	0x24028e20

9001c67c <_ZN8touchgfx6Screen4drawEv>:
9001c67c:	4b09      	ldr	r3, [pc, #36]	; (9001c6a4 <_ZN8touchgfx6Screen4drawEv+0x28>)
9001c67e:	b507      	push	{r0, r1, r2, lr}
9001c680:	f9b3 2000 	ldrsh.w	r2, [r3]
9001c684:	2100      	movs	r1, #0
9001c686:	4b08      	ldr	r3, [pc, #32]	; (9001c6a8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001c688:	9100      	str	r1, [sp, #0]
9001c68a:	4669      	mov	r1, sp
9001c68c:	f9b3 3000 	ldrsh.w	r3, [r3]
9001c690:	f8ad 2004 	strh.w	r2, [sp, #4]
9001c694:	f8ad 3006 	strh.w	r3, [sp, #6]
9001c698:	6803      	ldr	r3, [r0, #0]
9001c69a:	689b      	ldr	r3, [r3, #8]
9001c69c:	4798      	blx	r3
9001c69e:	b003      	add	sp, #12
9001c6a0:	f85d fb04 	ldr.w	pc, [sp], #4
9001c6a4:	24028e20 	.word	0x24028e20
9001c6a8:	24028e22 	.word	0x24028e22

9001c6ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
9001c6ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c6b0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001c6b4:	b089      	sub	sp, #36	; 0x24
9001c6b6:	4680      	mov	r8, r0
9001c6b8:	460c      	mov	r4, r1
9001c6ba:	2b00      	cmp	r3, #0
9001c6bc:	4615      	mov	r5, r2
9001c6be:	dd0e      	ble.n	9001c6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001c6c0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001c6c4:	2b00      	cmp	r3, #0
9001c6c6:	dd0a      	ble.n	9001c6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001c6c8:	4628      	mov	r0, r5
9001c6ca:	f7ff ff5b 	bl	9001c584 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001c6ce:	4621      	mov	r1, r4
9001c6d0:	f7fe fa99 	bl	9001ac06 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001c6d4:	69eb      	ldr	r3, [r5, #28]
9001c6d6:	b928      	cbnz	r0, 9001c6e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
9001c6d8:	461d      	mov	r5, r3
9001c6da:	2b00      	cmp	r3, #0
9001c6dc:	d1f4      	bne.n	9001c6c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001c6de:	b009      	add	sp, #36	; 0x24
9001c6e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c6e4:	ae04      	add	r6, sp, #16
9001c6e6:	2b00      	cmp	r3, #0
9001c6e8:	f000 80b5 	beq.w	9001c856 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001c6ec:	682b      	ldr	r3, [r5, #0]
9001c6ee:	4629      	mov	r1, r5
9001c6f0:	a802      	add	r0, sp, #8
9001c6f2:	68db      	ldr	r3, [r3, #12]
9001c6f4:	4798      	blx	r3
9001c6f6:	4628      	mov	r0, r5
9001c6f8:	f7ff ff60 	bl	9001c5bc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001c6fc:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001c700:	4407      	add	r7, r0
9001c702:	4628      	mov	r0, r5
9001c704:	f7ff ff6e 	bl	9001c5e4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001c708:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001c70c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001c710:	b23f      	sxth	r7, r7
9001c712:	4418      	add	r0, r3
9001c714:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001c718:	4621      	mov	r1, r4
9001c71a:	f8ad 2014 	strh.w	r2, [sp, #20]
9001c71e:	f8ad 0012 	strh.w	r0, [sp, #18]
9001c722:	4630      	mov	r0, r6
9001c724:	f8ad 3016 	strh.w	r3, [sp, #22]
9001c728:	f8ad 7010 	strh.w	r7, [sp, #16]
9001c72c:	f7f8 fd46 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
9001c730:	4628      	mov	r0, r5
9001c732:	f7ff ff27 	bl	9001c584 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001c736:	ab06      	add	r3, sp, #24
9001c738:	4602      	mov	r2, r0
9001c73a:	e896 0003 	ldmia.w	r6, {r0, r1}
9001c73e:	e883 0003 	stmia.w	r3, {r0, r1}
9001c742:	4611      	mov	r1, r2
9001c744:	4618      	mov	r0, r3
9001c746:	f7f8 fd39 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
9001c74a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001c74e:	f9b4 1000 	ldrsh.w	r1, [r4]
9001c752:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001c756:	4299      	cmp	r1, r3
9001c758:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
9001c75c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001c760:	d10b      	bne.n	9001c77a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001c762:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001c766:	4552      	cmp	r2, sl
9001c768:	d107      	bne.n	9001c77a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001c76a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001c76e:	455a      	cmp	r2, fp
9001c770:	d103      	bne.n	9001c77a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001c772:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001c776:	454a      	cmp	r2, r9
9001c778:	d06d      	beq.n	9001c856 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001c77a:	f1bb 0f00 	cmp.w	fp, #0
9001c77e:	dd65      	ble.n	9001c84c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001c780:	f1b9 0f00 	cmp.w	r9, #0
9001c784:	dd62      	ble.n	9001c84c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001c786:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001c78a:	fa1f f08a 	uxth.w	r0, sl
9001c78e:	4552      	cmp	r2, sl
9001c790:	9000      	str	r0, [sp, #0]
9001c792:	da12      	bge.n	9001c7ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001c794:	9301      	str	r3, [sp, #4]
9001c796:	9b00      	ldr	r3, [sp, #0]
9001c798:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001c79c:	f8ad 2012 	strh.w	r2, [sp, #18]
9001c7a0:	1a9a      	subs	r2, r3, r2
9001c7a2:	f8ad 1010 	strh.w	r1, [sp, #16]
9001c7a6:	4631      	mov	r1, r6
9001c7a8:	f8ad 0014 	strh.w	r0, [sp, #20]
9001c7ac:	4640      	mov	r0, r8
9001c7ae:	f8ad 2016 	strh.w	r2, [sp, #22]
9001c7b2:	69ea      	ldr	r2, [r5, #28]
9001c7b4:	f7ff ff7a 	bl	9001c6ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001c7b8:	9b01      	ldr	r3, [sp, #4]
9001c7ba:	f9b4 2000 	ldrsh.w	r2, [r4]
9001c7be:	b29f      	uxth	r7, r3
9001c7c0:	429a      	cmp	r2, r3
9001c7c2:	da0d      	bge.n	9001c7e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001c7c4:	f8ad 2010 	strh.w	r2, [sp, #16]
9001c7c8:	1aba      	subs	r2, r7, r2
9001c7ca:	f8ad a012 	strh.w	sl, [sp, #18]
9001c7ce:	4631      	mov	r1, r6
9001c7d0:	f8ad 2014 	strh.w	r2, [sp, #20]
9001c7d4:	4640      	mov	r0, r8
9001c7d6:	f8ad 9016 	strh.w	r9, [sp, #22]
9001c7da:	69ea      	ldr	r2, [r5, #28]
9001c7dc:	f7ff ff66 	bl	9001c6ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001c7e0:	8822      	ldrh	r2, [r4, #0]
9001c7e2:	445f      	add	r7, fp
9001c7e4:	88a3      	ldrh	r3, [r4, #4]
9001c7e6:	b2bf      	uxth	r7, r7
9001c7e8:	4413      	add	r3, r2
9001c7ea:	b23a      	sxth	r2, r7
9001c7ec:	b29b      	uxth	r3, r3
9001c7ee:	b219      	sxth	r1, r3
9001c7f0:	4291      	cmp	r1, r2
9001c7f2:	dd0d      	ble.n	9001c810 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001c7f4:	1bdb      	subs	r3, r3, r7
9001c7f6:	f8ad 2010 	strh.w	r2, [sp, #16]
9001c7fa:	f8ad a012 	strh.w	sl, [sp, #18]
9001c7fe:	4631      	mov	r1, r6
9001c800:	f8ad 3014 	strh.w	r3, [sp, #20]
9001c804:	4640      	mov	r0, r8
9001c806:	f8ad 9016 	strh.w	r9, [sp, #22]
9001c80a:	69ea      	ldr	r2, [r5, #28]
9001c80c:	f7ff ff4e 	bl	9001c6ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001c810:	88e2      	ldrh	r2, [r4, #6]
9001c812:	8863      	ldrh	r3, [r4, #2]
9001c814:	4413      	add	r3, r2
9001c816:	9a00      	ldr	r2, [sp, #0]
9001c818:	444a      	add	r2, r9
9001c81a:	b29b      	uxth	r3, r3
9001c81c:	fa1f f982 	uxth.w	r9, r2
9001c820:	b219      	sxth	r1, r3
9001c822:	fa0f f289 	sxth.w	r2, r9
9001c826:	428a      	cmp	r2, r1
9001c828:	da15      	bge.n	9001c856 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001c82a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001c82e:	eba3 0309 	sub.w	r3, r3, r9
9001c832:	f9b4 0000 	ldrsh.w	r0, [r4]
9001c836:	f8ad 1014 	strh.w	r1, [sp, #20]
9001c83a:	4631      	mov	r1, r6
9001c83c:	f8ad 0010 	strh.w	r0, [sp, #16]
9001c840:	f8ad 2012 	strh.w	r2, [sp, #18]
9001c844:	f8ad 3016 	strh.w	r3, [sp, #22]
9001c848:	69ea      	ldr	r2, [r5, #28]
9001c84a:	e001      	b.n	9001c850 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
9001c84c:	69ea      	ldr	r2, [r5, #28]
9001c84e:	4621      	mov	r1, r4
9001c850:	4640      	mov	r0, r8
9001c852:	f7ff ff2b 	bl	9001c6ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001c856:	4628      	mov	r0, r5
9001c858:	f7ff fe94 	bl	9001c584 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001c85c:	6861      	ldr	r1, [r4, #4]
9001c85e:	4602      	mov	r2, r0
9001c860:	4633      	mov	r3, r6
9001c862:	6820      	ldr	r0, [r4, #0]
9001c864:	c303      	stmia	r3!, {r0, r1}
9001c866:	4611      	mov	r1, r2
9001c868:	4630      	mov	r0, r6
9001c86a:	f7f8 fca7 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
9001c86e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001c872:	2b00      	cmp	r3, #0
9001c874:	f77f af33 	ble.w	9001c6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001c878:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001c87c:	2b00      	cmp	r3, #0
9001c87e:	f77f af2e 	ble.w	9001c6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001c882:	4628      	mov	r0, r5
9001c884:	f7ff fe9a 	bl	9001c5bc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001c888:	f8bd 3010 	ldrh.w	r3, [sp, #16]
9001c88c:	1a18      	subs	r0, r3, r0
9001c88e:	f8ad 0010 	strh.w	r0, [sp, #16]
9001c892:	4628      	mov	r0, r5
9001c894:	f7ff fea6 	bl	9001c5e4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001c898:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001c89c:	4631      	mov	r1, r6
9001c89e:	1a18      	subs	r0, r3, r0
9001c8a0:	f8ad 0012 	strh.w	r0, [sp, #18]
9001c8a4:	4628      	mov	r0, r5
9001c8a6:	682b      	ldr	r3, [r5, #0]
9001c8a8:	689b      	ldr	r3, [r3, #8]
9001c8aa:	4798      	blx	r3
9001c8ac:	e717      	b.n	9001c6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

9001c8ae <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
9001c8ae:	b570      	push	{r4, r5, r6, lr}
9001c8b0:	1d06      	adds	r6, r0, #4
9001c8b2:	b086      	sub	sp, #24
9001c8b4:	460c      	mov	r4, r1
9001c8b6:	2300      	movs	r3, #0
9001c8b8:	4631      	mov	r1, r6
9001c8ba:	4605      	mov	r5, r0
9001c8bc:	a802      	add	r0, sp, #8
9001c8be:	9301      	str	r3, [sp, #4]
9001c8c0:	f7ff fbaa 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c8c4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001c8c8:	8822      	ldrh	r2, [r4, #0]
9001c8ca:	f8bd 100a 	ldrh.w	r1, [sp, #10]
9001c8ce:	1ad2      	subs	r2, r2, r3
9001c8d0:	8863      	ldrh	r3, [r4, #2]
9001c8d2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001c8d6:	1a5b      	subs	r3, r3, r1
9001c8d8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9001c8dc:	f8ad 2010 	strh.w	r2, [sp, #16]
9001c8e0:	aa01      	add	r2, sp, #4
9001c8e2:	f8ad 0014 	strh.w	r0, [sp, #20]
9001c8e6:	4630      	mov	r0, r6
9001c8e8:	f8ad 1016 	strh.w	r1, [sp, #22]
9001c8ec:	a904      	add	r1, sp, #16
9001c8ee:	f8ad 3012 	strh.w	r3, [sp, #18]
9001c8f2:	f7f8 fd3b 	bl	9001536c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001c8f6:	9a01      	ldr	r2, [sp, #4]
9001c8f8:	b11a      	cbz	r2, 9001c902 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
9001c8fa:	4621      	mov	r1, r4
9001c8fc:	4628      	mov	r0, r5
9001c8fe:	f7ff fed5 	bl	9001c6ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001c902:	b006      	add	sp, #24
9001c904:	bd70      	pop	{r4, r5, r6, pc}

9001c906 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001c906:	4602      	mov	r2, r0
9001c908:	b530      	push	{r4, r5, lr}
9001c90a:	4604      	mov	r4, r0
9001c90c:	b085      	sub	sp, #20
9001c90e:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001c912:	460d      	mov	r5, r1
9001c914:	466b      	mov	r3, sp
9001c916:	6851      	ldr	r1, [r2, #4]
9001c918:	c303      	stmia	r3!, {r0, r1}
9001c91a:	4629      	mov	r1, r5
9001c91c:	4668      	mov	r0, sp
9001c91e:	f7f8 fc4d 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
9001c922:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9001c926:	b12b      	cbz	r3, 9001c934 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001c928:	4669      	mov	r1, sp
9001c92a:	4620      	mov	r0, r4
9001c92c:	f7ff ffbf 	bl	9001c8ae <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001c930:	b005      	add	sp, #20
9001c932:	bd30      	pop	{r4, r5, pc}
9001c934:	3404      	adds	r4, #4
9001c936:	a802      	add	r0, sp, #8
9001c938:	4621      	mov	r1, r4
9001c93a:	f7ff fb6d 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c93e:	f8bd 3000 	ldrh.w	r3, [sp]
9001c942:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001c946:	4669      	mov	r1, sp
9001c948:	4620      	mov	r0, r4
9001c94a:	1a9b      	subs	r3, r3, r2
9001c94c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001c950:	f8ad 3000 	strh.w	r3, [sp]
9001c954:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001c958:	1a9b      	subs	r3, r3, r2
9001c95a:	f8ad 3002 	strh.w	r3, [sp, #2]
9001c95e:	f7f8 fccc 	bl	900152fa <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001c962:	e7e5      	b.n	9001c930 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001c964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001c964:	460b      	mov	r3, r1
9001c966:	680a      	ldr	r2, [r1, #0]
9001c968:	1d01      	adds	r1, r0, #4
9001c96a:	6992      	ldr	r2, [r2, #24]
9001c96c:	4618      	mov	r0, r3
9001c96e:	4710      	bx	r2

9001c970 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
9001c970:	4298      	cmp	r0, r3
9001c972:	d200      	bcs.n	9001c976 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
9001c974:	b913      	cbnz	r3, 9001c97c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
9001c976:	440a      	add	r2, r1
9001c978:	b210      	sxth	r0, r2
9001c97a:	4770      	bx	lr
9001c97c:	ee07 0a90 	vmov	s15, r0
9001c980:	eddf 4a18 	vldr	s9, [pc, #96]	; 9001c9e4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
9001c984:	eddf 5a18 	vldr	s11, [pc, #96]	; 9001c9e8 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
9001c988:	eef8 6a67 	vcvt.f32.u32	s13, s15
9001c98c:	ee07 3a90 	vmov	s15, r3
9001c990:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c994:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9001c998:	ee07 2a90 	vmov	s15, r2
9001c99c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c9a0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
9001c9a4:	ee07 1a90 	vmov	s15, r1
9001c9a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c9ac:	ee37 7a66 	vsub.f32	s14, s14, s13
9001c9b0:	eee7 5a24 	vfma.f32	s11, s14, s9
9001c9b4:	ee27 5a07 	vmul.f32	s10, s14, s14
9001c9b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
9001c9bc:	eee5 6a25 	vfma.f32	s13, s10, s11
9001c9c0:	eee6 7a26 	vfma.f32	s15, s12, s13
9001c9c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001c9c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c9cc:	bfcc      	ite	gt
9001c9ce:	ee77 7a87 	vaddgt.f32	s15, s15, s14
9001c9d2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
9001c9d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001c9da:	ee17 3a90 	vmov	r3, s15
9001c9de:	b218      	sxth	r0, r3
9001c9e0:	4770      	bx	lr
9001c9e2:	bf00      	nop
9001c9e4:	402ce6b0 	.word	0x402ce6b0
9001c9e8:	3fd9cd60 	.word	0x3fd9cd60

9001c9ec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
9001c9ec:	4298      	cmp	r0, r3
9001c9ee:	d200      	bcs.n	9001c9f2 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
9001c9f0:	b913      	cbnz	r3, 9001c9f8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
9001c9f2:	440a      	add	r2, r1
9001c9f4:	b210      	sxth	r0, r2
9001c9f6:	4770      	bx	lr
9001c9f8:	ee07 0a90 	vmov	s15, r0
9001c9fc:	eef8 6a67 	vcvt.f32.u32	s13, s15
9001ca00:	ee07 3a90 	vmov	s15, r3
9001ca04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ca08:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9001ca0c:	ee07 2a90 	vmov	s15, r2
9001ca10:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ca14:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
9001ca18:	ee07 1a90 	vmov	s15, r1
9001ca1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ca20:	ee37 7a66 	vsub.f32	s14, s14, s13
9001ca24:	ee67 5a07 	vmul.f32	s11, s14, s14
9001ca28:	eee5 6a87 	vfma.f32	s13, s11, s14
9001ca2c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
9001ca30:	eee6 7a26 	vfma.f32	s15, s12, s13
9001ca34:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001ca38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ca3c:	bfcc      	ite	gt
9001ca3e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
9001ca42:	ee77 7ac7 	vsuble.f32	s15, s15, s14
9001ca46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001ca4a:	ee17 3a90 	vmov	r3, s15
9001ca4e:	b218      	sxth	r0, r3
9001ca50:	4770      	bx	lr

9001ca52 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
9001ca52:	4298      	cmp	r0, r3
9001ca54:	d200      	bcs.n	9001ca58 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
9001ca56:	b913      	cbnz	r3, 9001ca5e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
9001ca58:	440a      	add	r2, r1
9001ca5a:	b210      	sxth	r0, r2
9001ca5c:	4770      	bx	lr
9001ca5e:	ee07 2a90 	vmov	s15, r2
9001ca62:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9001ca66:	ee07 0a90 	vmov	s15, r0
9001ca6a:	eef8 7a67 	vcvt.f32.u32	s15, s15
9001ca6e:	ee67 7a27 	vmul.f32	s15, s14, s15
9001ca72:	ee07 3a10 	vmov	s14, r3
9001ca76:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9001ca7a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9001ca7e:	ee07 1a90 	vmov	s15, r1
9001ca82:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ca86:	ee77 7a27 	vadd.f32	s15, s14, s15
9001ca8a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
9001ca8e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001ca92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ca96:	bfcc      	ite	gt
9001ca98:	ee77 7a87 	vaddgt.f32	s15, s15, s14
9001ca9c:	ee77 7ac7 	vsuble.f32	s15, s15, s14
9001caa0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001caa4:	ee17 3a90 	vmov	r3, s15
9001caa8:	b218      	sxth	r0, r3
9001caaa:	4770      	bx	lr

9001caac <_ZN8touchgfx12TextProviderC1Ev>:
9001caac:	b538      	push	{r3, r4, r5, lr}
9001caae:	2500      	movs	r5, #0
9001cab0:	2302      	movs	r3, #2
9001cab2:	4604      	mov	r4, r0
9001cab4:	220e      	movs	r2, #14
9001cab6:	7403      	strb	r3, [r0, #16]
9001cab8:	4629      	mov	r1, r5
9001caba:	6145      	str	r5, [r0, #20]
9001cabc:	7605      	strb	r5, [r0, #24]
9001cabe:	83c5      	strh	r5, [r0, #30]
9001cac0:	8405      	strh	r5, [r0, #32]
9001cac2:	86c5      	strh	r5, [r0, #54]	; 0x36
9001cac4:	8705      	strh	r5, [r0, #56]	; 0x38
9001cac6:	87c5      	strh	r5, [r0, #62]	; 0x3e
9001cac8:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
9001cacc:	e9c0 5500 	strd	r5, r5, [r0]
9001cad0:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
9001cad4:	304c      	adds	r0, #76	; 0x4c
9001cad6:	f00f f801 	bl	9002badc <memset>
9001cada:	2301      	movs	r3, #1
9001cadc:	4620      	mov	r0, r4
9001cade:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
9001cae2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001cae6:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
9001caea:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
9001caee:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
9001caf2:	f7eb ff3b 	bl	9000896c <_ZN8touchgfx12TextProvider18initializeInternalEv>
9001caf6:	4620      	mov	r0, r4
9001caf8:	bd38      	pop	{r3, r4, r5, pc}

9001cafa <_ZN8touchgfx12TextProvider11endOfStringEv>:
9001cafa:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001cafc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cb00:	8c40      	ldrh	r0, [r0, #34]	; 0x22
9001cb02:	fab0 f080 	clz	r0, r0
9001cb06:	0940      	lsrs	r0, r0, #5
9001cb08:	4770      	bx	lr

9001cb0a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001cb0a:	b530      	push	{r4, r5, lr}
9001cb0c:	2500      	movs	r5, #0
9001cb0e:	2401      	movs	r4, #1
9001cb10:	6843      	ldr	r3, [r0, #4]
9001cb12:	b913      	cbnz	r3, 9001cb1a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
9001cb14:	6803      	ldr	r3, [r0, #0]
9001cb16:	b313      	cbz	r3, 9001cb5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001cb18:	6043      	str	r3, [r0, #4]
9001cb1a:	7e03      	ldrb	r3, [r0, #24]
9001cb1c:	b143      	cbz	r3, 9001cb30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001cb1e:	6943      	ldr	r3, [r0, #20]
9001cb20:	b12b      	cbz	r3, 9001cb2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001cb22:	881a      	ldrh	r2, [r3, #0]
9001cb24:	b11a      	cbz	r2, 9001cb2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001cb26:	1c9a      	adds	r2, r3, #2
9001cb28:	6142      	str	r2, [r0, #20]
9001cb2a:	8818      	ldrh	r0, [r3, #0]
9001cb2c:	bd30      	pop	{r4, r5, pc}
9001cb2e:	7605      	strb	r5, [r0, #24]
9001cb30:	6843      	ldr	r3, [r0, #4]
9001cb32:	8819      	ldrh	r1, [r3, #0]
9001cb34:	b199      	cbz	r1, 9001cb5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001cb36:	1c9a      	adds	r2, r3, #2
9001cb38:	2902      	cmp	r1, #2
9001cb3a:	6042      	str	r2, [r0, #4]
9001cb3c:	d1f5      	bne.n	9001cb2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001cb3e:	7c03      	ldrb	r3, [r0, #16]
9001cb40:	2b01      	cmp	r3, #1
9001cb42:	d8e5      	bhi.n	9001cb10 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001cb44:	1c5a      	adds	r2, r3, #1
9001cb46:	3302      	adds	r3, #2
9001cb48:	7402      	strb	r2, [r0, #16]
9001cb4a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001cb4e:	6143      	str	r3, [r0, #20]
9001cb50:	2b00      	cmp	r3, #0
9001cb52:	d0dd      	beq.n	9001cb10 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001cb54:	881b      	ldrh	r3, [r3, #0]
9001cb56:	2b00      	cmp	r3, #0
9001cb58:	d0da      	beq.n	9001cb10 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001cb5a:	7604      	strb	r4, [r0, #24]
9001cb5c:	e7d8      	b.n	9001cb10 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001cb5e:	2000      	movs	r0, #0
9001cb60:	e7e4      	b.n	9001cb2c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001cb62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001cb62:	6001      	str	r1, [r0, #0]
9001cb64:	2100      	movs	r1, #0
9001cb66:	b430      	push	{r4, r5}
9001cb68:	6041      	str	r1, [r0, #4]
9001cb6a:	6815      	ldr	r5, [r2, #0]
9001cb6c:	6085      	str	r5, [r0, #8]
9001cb6e:	6852      	ldr	r2, [r2, #4]
9001cb70:	6443      	str	r3, [r0, #68]	; 0x44
9001cb72:	9b02      	ldr	r3, [sp, #8]
9001cb74:	60c2      	str	r2, [r0, #12]
9001cb76:	7401      	strb	r1, [r0, #16]
9001cb78:	6141      	str	r1, [r0, #20]
9001cb7a:	7601      	strb	r1, [r0, #24]
9001cb7c:	8701      	strh	r1, [r0, #56]	; 0x38
9001cb7e:	8401      	strh	r1, [r0, #32]
9001cb80:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
9001cb84:	6483      	str	r3, [r0, #72]	; 0x48
9001cb86:	bc30      	pop	{r4, r5}
9001cb88:	f7eb bef0 	b.w	9000896c <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001cb8c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001cb8c:	b408      	push	{r3}
9001cb8e:	b510      	push	{r4, lr}
9001cb90:	b085      	sub	sp, #20
9001cb92:	ac07      	add	r4, sp, #28
9001cb94:	f854 3b04 	ldr.w	r3, [r4], #4
9001cb98:	9300      	str	r3, [sp, #0]
9001cb9a:	4613      	mov	r3, r2
9001cb9c:	4622      	mov	r2, r4
9001cb9e:	9403      	str	r4, [sp, #12]
9001cba0:	f7ff ffdf 	bl	9001cb62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001cba4:	b005      	add	sp, #20
9001cba6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001cbaa:	b001      	add	sp, #4
9001cbac:	4770      	bx	lr

9001cbae <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001cbae:	b5f0      	push	{r4, r5, r6, r7, lr}
9001cbb0:	4605      	mov	r5, r0
9001cbb2:	4608      	mov	r0, r1
9001cbb4:	b1f1      	cbz	r1, 9001cbf4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001cbb6:	f105 044c 	add.w	r4, r5, #76	; 0x4c
9001cbba:	460b      	mov	r3, r1
9001cbbc:	f101 0708 	add.w	r7, r1, #8
9001cbc0:	4622      	mov	r2, r4
9001cbc2:	6818      	ldr	r0, [r3, #0]
9001cbc4:	3308      	adds	r3, #8
9001cbc6:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001cbca:	4626      	mov	r6, r4
9001cbcc:	42bb      	cmp	r3, r7
9001cbce:	c603      	stmia	r6!, {r0, r1}
9001cbd0:	4634      	mov	r4, r6
9001cbd2:	d1f6      	bne.n	9001cbc2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001cbd4:	6818      	ldr	r0, [r3, #0]
9001cbd6:	6030      	str	r0, [r6, #0]
9001cbd8:	4610      	mov	r0, r2
9001cbda:	889b      	ldrh	r3, [r3, #4]
9001cbdc:	80b3      	strh	r3, [r6, #4]
9001cbde:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
9001cbe2:	015b      	lsls	r3, r3, #5
9001cbe4:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001cbe8:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
9001cbec:	430b      	orrs	r3, r1
9001cbee:	425b      	negs	r3, r3
9001cbf0:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
9001cbf4:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001cbf6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001cbf6:	b538      	push	{r3, r4, r5, lr}
9001cbf8:	460c      	mov	r4, r1
9001cbfa:	6811      	ldr	r1, [r2, #0]
9001cbfc:	4610      	mov	r0, r2
9001cbfe:	68cd      	ldr	r5, [r1, #12]
9001cc00:	4619      	mov	r1, r3
9001cc02:	47a8      	blx	r5
9001cc04:	2800      	cmp	r0, #0
9001cc06:	bf08      	it	eq
9001cc08:	4620      	moveq	r0, r4
9001cc0a:	bd38      	pop	{r3, r4, r5, pc}

9001cc0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001cc0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001cc0e:	4604      	mov	r4, r0
9001cc10:	4615      	mov	r5, r2
9001cc12:	4608      	mov	r0, r1
9001cc14:	b93a      	cbnz	r2, 9001cc26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
9001cc16:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001cc1a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
9001cc1e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
9001cc22:	4628      	mov	r0, r5
9001cc24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001cc26:	f892 c00d 	ldrb.w	ip, [r2, #13]
9001cc2a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
9001cc2e:	8893      	ldrh	r3, [r2, #4]
9001cc30:	ea4f 160c 	mov.w	r6, ip, lsl #4
9001cc34:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001cc38:	79ee      	ldrb	r6, [r5, #7]
9001cc3a:	4316      	orrs	r6, r2
9001cc3c:	19da      	adds	r2, r3, r7
9001cc3e:	b291      	uxth	r1, r2
9001cc40:	b2b7      	uxth	r7, r6
9001cc42:	291d      	cmp	r1, #29
9001cc44:	d87b      	bhi.n	9001cd3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001cc46:	2201      	movs	r2, #1
9001cc48:	10f6      	asrs	r6, r6, #3
9001cc4a:	408a      	lsls	r2, r1
9001cc4c:	4974      	ldr	r1, [pc, #464]	; (9001ce20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
9001cc4e:	420a      	tst	r2, r1
9001cc50:	d12e      	bne.n	9001ccb0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001cc52:	f412 7f60 	tst.w	r2, #896	; 0x380
9001cc56:	d072      	beq.n	9001cd3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001cc58:	f104 024c 	add.w	r2, r4, #76	; 0x4c
9001cc5c:	462b      	mov	r3, r5
9001cc5e:	f105 0e08 	add.w	lr, r5, #8
9001cc62:	4615      	mov	r5, r2
9001cc64:	6818      	ldr	r0, [r3, #0]
9001cc66:	3308      	adds	r3, #8
9001cc68:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001cc6c:	4694      	mov	ip, r2
9001cc6e:	4573      	cmp	r3, lr
9001cc70:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001cc74:	4662      	mov	r2, ip
9001cc76:	d1f5      	bne.n	9001cc64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001cc78:	6818      	ldr	r0, [r3, #0]
9001cc7a:	f8cc 0000 	str.w	r0, [ip]
9001cc7e:	889b      	ldrh	r3, [r3, #4]
9001cc80:	f8ac 3004 	strh.w	r3, [ip, #4]
9001cc84:	b2b3      	uxth	r3, r6
9001cc86:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
9001cc8a:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
9001cc8e:	1aca      	subs	r2, r1, r3
9001cc90:	1bcf      	subs	r7, r1, r7
9001cc92:	f020 0060 	bic.w	r0, r0, #96	; 0x60
9001cc96:	b292      	uxth	r2, r2
9001cc98:	1afb      	subs	r3, r7, r3
9001cc9a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
9001cc9e:	10d2      	asrs	r2, r2, #3
9001cca0:	f002 0260 	and.w	r2, r2, #96	; 0x60
9001cca4:	4302      	orrs	r2, r0
9001cca6:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
9001ccaa:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001ccae:	e7b8      	b.n	9001cc22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001ccb0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
9001ccb2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ccb6:	8c59      	ldrh	r1, [r3, #34]	; 0x22
9001ccb8:	f640 6333 	movw	r3, #3635	; 0xe33
9001ccbc:	4299      	cmp	r1, r3
9001ccbe:	d110      	bne.n	9001cce2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
9001ccc0:	6803      	ldr	r3, [r0, #0]
9001ccc2:	68db      	ldr	r3, [r3, #12]
9001ccc4:	4798      	blx	r3
9001ccc6:	7b41      	ldrb	r1, [r0, #13]
9001ccc8:	00cb      	lsls	r3, r1, #3
9001ccca:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001ccce:	7a03      	ldrb	r3, [r0, #8]
9001ccd0:	0648      	lsls	r0, r1, #25
9001ccd2:	ea43 0302 	orr.w	r3, r3, r2
9001ccd6:	bf44      	itt	mi
9001ccd8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001ccdc:	b21b      	sxthmi	r3, r3
9001ccde:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001cce2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
9001cce6:	462a      	mov	r2, r5
9001cce8:	f105 0c08 	add.w	ip, r5, #8
9001ccec:	443b      	add	r3, r7
9001ccee:	4433      	add	r3, r6
9001ccf0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
9001ccf4:	b29b      	uxth	r3, r3
9001ccf6:	4635      	mov	r5, r6
9001ccf8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001ccfc:	6810      	ldr	r0, [r2, #0]
9001ccfe:	3208      	adds	r2, #8
9001cd00:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001cd04:	4637      	mov	r7, r6
9001cd06:	4562      	cmp	r2, ip
9001cd08:	c703      	stmia	r7!, {r0, r1}
9001cd0a:	463e      	mov	r6, r7
9001cd0c:	d1f6      	bne.n	9001ccfc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
9001cd0e:	6810      	ldr	r0, [r2, #0]
9001cd10:	6038      	str	r0, [r7, #0]
9001cd12:	8892      	ldrh	r2, [r2, #4]
9001cd14:	80ba      	strh	r2, [r7, #4]
9001cd16:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001cd1a:	10db      	asrs	r3, r3, #3
9001cd1c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001cd20:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001cd24:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001cd28:	4313      	orrs	r3, r2
9001cd2a:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
9001cd2e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001cd32:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
9001cd36:	1a9b      	subs	r3, r3, r2
9001cd38:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
9001cd3c:	e771      	b.n	9001cc22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001cd3e:	f023 0204 	bic.w	r2, r3, #4
9001cd42:	f640 611b 	movw	r1, #3611	; 0xe1b
9001cd46:	428a      	cmp	r2, r1
9001cd48:	d003      	beq.n	9001cd52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
9001cd4a:	f640 621d 	movw	r2, #3613	; 0xe1d
9001cd4e:	4293      	cmp	r3, r2
9001cd50:	d120      	bne.n	9001cd94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
9001cd52:	3b01      	subs	r3, #1
9001cd54:	4602      	mov	r2, r0
9001cd56:	4629      	mov	r1, r5
9001cd58:	4620      	mov	r0, r4
9001cd5a:	b29b      	uxth	r3, r3
9001cd5c:	f7ff ff4b 	bl	9001cbf6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001cd60:	7b41      	ldrb	r1, [r0, #13]
9001cd62:	00cb      	lsls	r3, r1, #3
9001cd64:	0649      	lsls	r1, r1, #25
9001cd66:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001cd6a:	7a03      	ldrb	r3, [r0, #8]
9001cd6c:	ea43 0302 	orr.w	r3, r3, r2
9001cd70:	bf44      	itt	mi
9001cd72:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001cd76:	b21b      	sxthmi	r3, r3
9001cd78:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001cd7c:	7b6b      	ldrb	r3, [r5, #13]
9001cd7e:	7aaa      	ldrb	r2, [r5, #10]
9001cd80:	005b      	lsls	r3, r3, #1
9001cd82:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001cd86:	4313      	orrs	r3, r2
9001cd88:	115a      	asrs	r2, r3, #5
9001cd8a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001cd8e:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
9001cd92:	e035      	b.n	9001ce00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
9001cd94:	ea4f 02cc 	mov.w	r2, ip, lsl #3
9001cd98:	f01c 0f40 	tst.w	ip, #64	; 0x40
9001cd9c:	f402 7180 	and.w	r1, r2, #256	; 0x100
9001cda0:	7a2a      	ldrb	r2, [r5, #8]
9001cda2:	ea42 0201 	orr.w	r2, r2, r1
9001cda6:	f640 6109 	movw	r1, #3593	; 0xe09
9001cdaa:	bf1c      	itt	ne
9001cdac:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
9001cdb0:	b212      	sxthne	r2, r2
9001cdb2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001cdb6:	f023 0210 	bic.w	r2, r3, #16
9001cdba:	428a      	cmp	r2, r1
9001cdbc:	d003      	beq.n	9001cdc6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001cdbe:	f640 6213 	movw	r2, #3603	; 0xe13
9001cdc2:	4293      	cmp	r3, r2
9001cdc4:	d129      	bne.n	9001ce1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
9001cdc6:	7b6e      	ldrb	r6, [r5, #13]
9001cdc8:	4629      	mov	r1, r5
9001cdca:	0076      	lsls	r6, r6, #1
9001cdcc:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001cdd0:	7aae      	ldrb	r6, [r5, #10]
9001cdd2:	4316      	orrs	r6, r2
9001cdd4:	f640 6213 	movw	r2, #3603	; 0xe13
9001cdd8:	4293      	cmp	r3, r2
9001cdda:	4602      	mov	r2, r0
9001cddc:	4620      	mov	r0, r4
9001cdde:	bf16      	itet	ne
9001cde0:	f103 33ff 	addne.w	r3, r3, #4294967295
9001cde4:	f640 630c 	movweq	r3, #3596	; 0xe0c
9001cde8:	b29b      	uxthne	r3, r3
9001cdea:	f7ff ff04 	bl	9001cbf6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001cdee:	7b43      	ldrb	r3, [r0, #13]
9001cdf0:	7a82      	ldrb	r2, [r0, #10]
9001cdf2:	005b      	lsls	r3, r3, #1
9001cdf4:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001cdf8:	4313      	orrs	r3, r2
9001cdfa:	1af6      	subs	r6, r6, r3
9001cdfc:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
9001ce00:	7b69      	ldrb	r1, [r5, #13]
9001ce02:	00cb      	lsls	r3, r1, #3
9001ce04:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001ce08:	7a2b      	ldrb	r3, [r5, #8]
9001ce0a:	4313      	orrs	r3, r2
9001ce0c:	064a      	lsls	r2, r1, #25
9001ce0e:	bf44      	itt	mi
9001ce10:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001ce14:	b21b      	sxthmi	r3, r3
9001ce16:	1bdb      	subs	r3, r3, r7
9001ce18:	e747      	b.n	9001ccaa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001ce1a:	2300      	movs	r3, #0
9001ce1c:	e7b7      	b.n	9001cd8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
9001ce1e:	bf00      	nop
9001ce20:	3fc00079 	.word	0x3fc00079

9001ce24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001ce24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001ce28:	4604      	mov	r4, r0
9001ce2a:	b942      	cbnz	r2, 9001ce3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001ce2c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001ce30:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
9001ce34:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
9001ce38:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
9001ce3c:	e047      	b.n	9001cece <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001ce3e:	7b51      	ldrb	r1, [r2, #13]
9001ce40:	8893      	ldrh	r3, [r2, #4]
9001ce42:	010d      	lsls	r5, r1, #4
9001ce44:	f405 7080 	and.w	r0, r5, #256	; 0x100
9001ce48:	79d5      	ldrb	r5, [r2, #7]
9001ce4a:	4305      	orrs	r5, r0
9001ce4c:	2d04      	cmp	r5, #4
9001ce4e:	bfcc      	ite	gt
9001ce50:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001ce54:	f04f 0e01 	movle.w	lr, #1
9001ce58:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
9001ce5c:	f200 80ab 	bhi.w	9001cfb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001ce60:	f240 60e7 	movw	r0, #1767	; 0x6e7
9001ce64:	4283      	cmp	r3, r0
9001ce66:	d216      	bcs.n	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ce68:	f240 605b 	movw	r0, #1627	; 0x65b
9001ce6c:	4283      	cmp	r3, r0
9001ce6e:	d859      	bhi.n	9001cf24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001ce70:	f240 6057 	movw	r0, #1623	; 0x657
9001ce74:	4283      	cmp	r3, r0
9001ce76:	d20e      	bcs.n	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ce78:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001ce7c:	d24a      	bcs.n	9001cf14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001ce7e:	f240 604e 	movw	r0, #1614	; 0x64e
9001ce82:	4283      	cmp	r3, r0
9001ce84:	d207      	bcs.n	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ce86:	f240 601a 	movw	r0, #1562	; 0x61a
9001ce8a:	4283      	cmp	r3, r0
9001ce8c:	d02a      	beq.n	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ce8e:	d821      	bhi.n	9001ced4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001ce90:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
9001ce94:	d35b      	bcc.n	9001cf4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001ce96:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
9001ce9a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001ce9e:	f040 80d0 	bne.w	9001d042 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001cea2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
9001cea6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001ceaa:	f040 80ca 	bne.w	9001d042 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001ceae:	00cb      	lsls	r3, r1, #3
9001ceb0:	0649      	lsls	r1, r1, #25
9001ceb2:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001ceb6:	7a13      	ldrb	r3, [r2, #8]
9001ceb8:	ea43 0300 	orr.w	r3, r3, r0
9001cebc:	bf44      	itt	mi
9001cebe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001cec2:	b21b      	sxthmi	r3, r3
9001cec4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001cec8:	1b5d      	subs	r5, r3, r5
9001ceca:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001cece:	4610      	mov	r0, r2
9001ced0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001ced4:	f240 604b 	movw	r0, #1611	; 0x64b
9001ced8:	4283      	cmp	r3, r0
9001ceda:	d338      	bcc.n	9001cf4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001cedc:	f240 604c 	movw	r0, #1612	; 0x64c
9001cee0:	4283      	cmp	r3, r0
9001cee2:	d9d8      	bls.n	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cee4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
9001cee8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
9001ceec:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001cef0:	f040 80f3 	bne.w	9001d0da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001cef4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001cef8:	f040 80ef 	bne.w	9001d0da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001cefc:	00cb      	lsls	r3, r1, #3
9001cefe:	064e      	lsls	r6, r1, #25
9001cf00:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001cf04:	7a13      	ldrb	r3, [r2, #8]
9001cf06:	ea43 0300 	orr.w	r3, r3, r0
9001cf0a:	bf44      	itt	mi
9001cf0c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001cf10:	b21b      	sxthmi	r3, r3
9001cf12:	e7d9      	b.n	9001cec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001cf14:	f240 6054 	movw	r0, #1620	; 0x654
9001cf18:	4283      	cmp	r3, r0
9001cf1a:	d8e3      	bhi.n	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cf1c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001cf20:	d9e0      	bls.n	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cf22:	e7b8      	b.n	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cf24:	f240 6074 	movw	r0, #1652	; 0x674
9001cf28:	4283      	cmp	r3, r0
9001cf2a:	d0b4      	beq.n	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cf2c:	d82d      	bhi.n	9001cf8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001cf2e:	f240 605e 	movw	r0, #1630	; 0x65e
9001cf32:	4283      	cmp	r3, r0
9001cf34:	d804      	bhi.n	9001cf40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001cf36:	f240 605d 	movw	r0, #1629	; 0x65d
9001cf3a:	4283      	cmp	r3, r0
9001cf3c:	d3d2      	bcc.n	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cf3e:	e7aa      	b.n	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cf40:	f240 605f 	movw	r0, #1631	; 0x65f
9001cf44:	4283      	cmp	r3, r0
9001cf46:	d0cd      	beq.n	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cf48:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
9001cf4c:	d0a3      	beq.n	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cf4e:	00cb      	lsls	r3, r1, #3
9001cf50:	0649      	lsls	r1, r1, #25
9001cf52:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001cf56:	7a13      	ldrb	r3, [r2, #8]
9001cf58:	ea43 0300 	orr.w	r3, r3, r0
9001cf5c:	bf44      	itt	mi
9001cf5e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001cf62:	b21b      	sxthmi	r3, r3
9001cf64:	1b5d      	subs	r5, r3, r5
9001cf66:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001cf6a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001cf6e:	7b53      	ldrb	r3, [r2, #13]
9001cf70:	015b      	lsls	r3, r3, #5
9001cf72:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001cf76:	7993      	ldrb	r3, [r2, #6]
9001cf78:	430b      	orrs	r3, r1
9001cf7a:	2105      	movs	r1, #5
9001cf7c:	005b      	lsls	r3, r3, #1
9001cf7e:	fb93 f3f1 	sdiv	r3, r3, r1
9001cf82:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001cf86:	440b      	add	r3, r1
9001cf88:	e756      	b.n	9001ce38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001cf8a:	f240 60e2 	movw	r0, #1762	; 0x6e2
9001cf8e:	4283      	cmp	r3, r0
9001cf90:	d809      	bhi.n	9001cfa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001cf92:	f240 60df 	movw	r0, #1759	; 0x6df
9001cf96:	4283      	cmp	r3, r0
9001cf98:	f4bf af7d 	bcs.w	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cf9c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
9001cfa0:	2b05      	cmp	r3, #5
9001cfa2:	d8d4      	bhi.n	9001cf4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001cfa4:	e777      	b.n	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cfa6:	f240 60e3 	movw	r0, #1763	; 0x6e3
9001cfaa:	4283      	cmp	r3, r0
9001cfac:	d09a      	beq.n	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cfae:	f240 60e4 	movw	r0, #1764	; 0x6e4
9001cfb2:	4283      	cmp	r3, r0
9001cfb4:	e7ca      	b.n	9001cf4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001cfb6:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
9001cfba:	d22b      	bcs.n	9001d014 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001cfbc:	f640 00ed 	movw	r0, #2285	; 0x8ed
9001cfc0:	4283      	cmp	r3, r0
9001cfc2:	d28f      	bcs.n	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cfc4:	f640 00e5 	movw	r0, #2277	; 0x8e5
9001cfc8:	4283      	cmp	r3, r0
9001cfca:	d816      	bhi.n	9001cffa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001cfcc:	f640 00e4 	movw	r0, #2276	; 0x8e4
9001cfd0:	4283      	cmp	r3, r0
9001cfd2:	f4bf af60 	bcs.w	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cfd6:	f240 60ec 	movw	r0, #1772	; 0x6ec
9001cfda:	4283      	cmp	r3, r0
9001cfdc:	d80a      	bhi.n	9001cff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001cfde:	f240 60eb 	movw	r0, #1771	; 0x6eb
9001cfe2:	4283      	cmp	r3, r0
9001cfe4:	f4bf af57 	bcs.w	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cfe8:	f240 60ea 	movw	r0, #1770	; 0x6ea
9001cfec:	4283      	cmp	r3, r0
9001cfee:	f43f af79 	beq.w	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cff2:	e7ac      	b.n	9001cf4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001cff4:	f240 60ed 	movw	r0, #1773	; 0x6ed
9001cff8:	e7f8      	b.n	9001cfec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001cffa:	f640 00e8 	movw	r0, #2280	; 0x8e8
9001cffe:	4283      	cmp	r3, r0
9001d000:	d802      	bhi.n	9001d008 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001d002:	f640 00e7 	movw	r0, #2279	; 0x8e7
9001d006:	e798      	b.n	9001cf3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001d008:	f640 00e9 	movw	r0, #2281	; 0x8e9
9001d00c:	4283      	cmp	r3, r0
9001d00e:	f47f af42 	bne.w	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001d012:	e767      	b.n	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001d014:	f640 00f6 	movw	r0, #2294	; 0x8f6
9001d018:	4283      	cmp	r3, r0
9001d01a:	f43f af63 	beq.w	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001d01e:	d802      	bhi.n	9001d026 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001d020:	f640 00f2 	movw	r0, #2290	; 0x8f2
9001d024:	e7f2      	b.n	9001d00c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001d026:	f640 00fa 	movw	r0, #2298	; 0x8fa
9001d02a:	4283      	cmp	r3, r0
9001d02c:	d805      	bhi.n	9001d03a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001d02e:	f640 00f9 	movw	r0, #2297	; 0x8f9
9001d032:	4283      	cmp	r3, r0
9001d034:	f4ff af2f 	bcc.w	9001ce96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001d038:	e754      	b.n	9001cee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001d03a:	f640 00fe 	movw	r0, #2302	; 0x8fe
9001d03e:	4283      	cmp	r3, r0
9001d040:	e7af      	b.n	9001cfa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001d042:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001d046:	4617      	mov	r7, r2
9001d048:	f102 0808 	add.w	r8, r2, #8
9001d04c:	4666      	mov	r6, ip
9001d04e:	6838      	ldr	r0, [r7, #0]
9001d050:	3708      	adds	r7, #8
9001d052:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001d056:	46e6      	mov	lr, ip
9001d058:	4547      	cmp	r7, r8
9001d05a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001d05e:	46f4      	mov	ip, lr
9001d060:	d1f5      	bne.n	9001d04e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001d062:	6838      	ldr	r0, [r7, #0]
9001d064:	f8ce 0000 	str.w	r0, [lr]
9001d068:	88b9      	ldrh	r1, [r7, #4]
9001d06a:	f8ae 1004 	strh.w	r1, [lr, #4]
9001d06e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001d072:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001d076:	d009      	beq.n	9001d08c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001d078:	7b51      	ldrb	r1, [r2, #13]
9001d07a:	7992      	ldrb	r2, [r2, #6]
9001d07c:	0149      	lsls	r1, r1, #5
9001d07e:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001d082:	4311      	orrs	r1, r2
9001d084:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001d088:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001d08c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001d090:	b2ad      	uxth	r5, r5
9001d092:	d00d      	beq.n	9001d0b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001d094:	442b      	add	r3, r5
9001d096:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001d09a:	b29b      	uxth	r3, r3
9001d09c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001d0a0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001d0a4:	10db      	asrs	r3, r3, #3
9001d0a6:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001d0aa:	4313      	orrs	r3, r2
9001d0ac:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001d0b0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
9001d0b4:	00cb      	lsls	r3, r1, #3
9001d0b6:	064f      	lsls	r7, r1, #25
9001d0b8:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001d0bc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001d0c0:	ea43 0302 	orr.w	r3, r3, r2
9001d0c4:	bf44      	itt	mi
9001d0c6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001d0ca:	b21b      	sxthmi	r3, r3
9001d0cc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001d0d0:	1b5b      	subs	r3, r3, r5
9001d0d2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001d0d6:	4632      	mov	r2, r6
9001d0d8:	e6f9      	b.n	9001cece <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001d0da:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001d0de:	4617      	mov	r7, r2
9001d0e0:	f102 0908 	add.w	r9, r2, #8
9001d0e4:	4666      	mov	r6, ip
9001d0e6:	6838      	ldr	r0, [r7, #0]
9001d0e8:	3708      	adds	r7, #8
9001d0ea:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001d0ee:	46e0      	mov	r8, ip
9001d0f0:	454f      	cmp	r7, r9
9001d0f2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001d0f6:	46c4      	mov	ip, r8
9001d0f8:	d1f5      	bne.n	9001d0e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001d0fa:	6838      	ldr	r0, [r7, #0]
9001d0fc:	f8c8 0000 	str.w	r0, [r8]
9001d100:	88b9      	ldrh	r1, [r7, #4]
9001d102:	f8a8 1004 	strh.w	r1, [r8, #4]
9001d106:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001d10a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001d10e:	d009      	beq.n	9001d124 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001d110:	7b51      	ldrb	r1, [r2, #13]
9001d112:	7992      	ldrb	r2, [r2, #6]
9001d114:	0149      	lsls	r1, r1, #5
9001d116:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001d11a:	4311      	orrs	r1, r2
9001d11c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001d120:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001d124:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001d128:	d00e      	beq.n	9001d148 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001d12a:	eba3 030e 	sub.w	r3, r3, lr
9001d12e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001d132:	b29b      	uxth	r3, r3
9001d134:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001d138:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001d13c:	10db      	asrs	r3, r3, #3
9001d13e:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001d142:	4313      	orrs	r3, r2
9001d144:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001d148:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
9001d14c:	00cb      	lsls	r3, r1, #3
9001d14e:	0648      	lsls	r0, r1, #25
9001d150:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001d154:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001d158:	ea43 0302 	orr.w	r3, r3, r2
9001d15c:	bf44      	itt	mi
9001d15e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001d162:	b21b      	sxthmi	r3, r3
9001d164:	1b5d      	subs	r5, r3, r5
9001d166:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001d16a:	e7b4      	b.n	9001d0d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001d16c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001d16c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001d170:	461e      	mov	r6, r3
9001d172:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001d174:	4604      	mov	r4, r0
9001d176:	4617      	mov	r7, r2
9001d178:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d17c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001d180:	f7eb fba4 	bl	900088cc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001d184:	4605      	mov	r5, r0
9001d186:	b918      	cbnz	r0, 9001d190 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001d188:	6030      	str	r0, [r6, #0]
9001d18a:	4628      	mov	r0, r5
9001d18c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001d190:	683b      	ldr	r3, [r7, #0]
9001d192:	4601      	mov	r1, r0
9001d194:	4638      	mov	r0, r7
9001d196:	68db      	ldr	r3, [r3, #12]
9001d198:	4798      	blx	r3
9001d19a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001d19e:	4602      	mov	r2, r0
9001d1a0:	6030      	str	r0, [r6, #0]
9001d1a2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001d1a6:	d213      	bcs.n	9001d1d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001d1a8:	4643      	mov	r3, r8
9001d1aa:	4639      	mov	r1, r7
9001d1ac:	4620      	mov	r0, r4
9001d1ae:	f7ff fe39 	bl	9001ce24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001d1b2:	6030      	str	r0, [r6, #0]
9001d1b4:	6833      	ldr	r3, [r6, #0]
9001d1b6:	b143      	cbz	r3, 9001d1ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001d1b8:	7b5a      	ldrb	r2, [r3, #13]
9001d1ba:	7a9b      	ldrb	r3, [r3, #10]
9001d1bc:	0052      	lsls	r2, r2, #1
9001d1be:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001d1c2:	4313      	orrs	r3, r2
9001d1c4:	bf0c      	ite	eq
9001d1c6:	2301      	moveq	r3, #1
9001d1c8:	2300      	movne	r3, #0
9001d1ca:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001d1ce:	e7dc      	b.n	9001d18a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001d1d0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001d1d4:	b29b      	uxth	r3, r3
9001d1d6:	2b7f      	cmp	r3, #127	; 0x7f
9001d1d8:	d804      	bhi.n	9001d1e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001d1da:	4639      	mov	r1, r7
9001d1dc:	4620      	mov	r0, r4
9001d1de:	f7ff fd15 	bl	9001cc0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001d1e2:	e7e6      	b.n	9001d1b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001d1e4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001d1e8:	2b00      	cmp	r3, #0
9001d1ea:	d0e3      	beq.n	9001d1b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001d1ec:	f640 1302 	movw	r3, #2306	; 0x902
9001d1f0:	429d      	cmp	r5, r3
9001d1f2:	d1df      	bne.n	9001d1b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001d1f4:	4601      	mov	r1, r0
9001d1f6:	4620      	mov	r0, r4
9001d1f8:	f7ff fcd9 	bl	9001cbae <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001d1fc:	e7d9      	b.n	9001d1b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001d1fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001d1fe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001d202:	461e      	mov	r6, r3
9001d204:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001d206:	4604      	mov	r4, r0
9001d208:	4617      	mov	r7, r2
9001d20a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d20e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001d212:	f7eb fb5b 	bl	900088cc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001d216:	4605      	mov	r5, r0
9001d218:	b918      	cbnz	r0, 9001d222 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001d21a:	6030      	str	r0, [r6, #0]
9001d21c:	4628      	mov	r0, r5
9001d21e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001d222:	683b      	ldr	r3, [r7, #0]
9001d224:	4601      	mov	r1, r0
9001d226:	4638      	mov	r0, r7
9001d228:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001d22c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001d230:	47c8      	blx	r9
9001d232:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001d236:	4602      	mov	r2, r0
9001d238:	6030      	str	r0, [r6, #0]
9001d23a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001d23e:	d213      	bcs.n	9001d268 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001d240:	4643      	mov	r3, r8
9001d242:	4639      	mov	r1, r7
9001d244:	4620      	mov	r0, r4
9001d246:	f7ff fded 	bl	9001ce24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001d24a:	6030      	str	r0, [r6, #0]
9001d24c:	6833      	ldr	r3, [r6, #0]
9001d24e:	b143      	cbz	r3, 9001d262 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001d250:	7b5a      	ldrb	r2, [r3, #13]
9001d252:	7a9b      	ldrb	r3, [r3, #10]
9001d254:	0052      	lsls	r2, r2, #1
9001d256:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001d25a:	4313      	orrs	r3, r2
9001d25c:	bf0c      	ite	eq
9001d25e:	2301      	moveq	r3, #1
9001d260:	2300      	movne	r3, #0
9001d262:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001d266:	e7d9      	b.n	9001d21c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001d268:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001d26c:	b29b      	uxth	r3, r3
9001d26e:	2b7f      	cmp	r3, #127	; 0x7f
9001d270:	d804      	bhi.n	9001d27c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001d272:	4639      	mov	r1, r7
9001d274:	4620      	mov	r0, r4
9001d276:	f7ff fcc9 	bl	9001cc0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001d27a:	e7e6      	b.n	9001d24a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001d27c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001d280:	2b00      	cmp	r3, #0
9001d282:	d0e3      	beq.n	9001d24c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001d284:	f640 1302 	movw	r3, #2306	; 0x902
9001d288:	429d      	cmp	r5, r3
9001d28a:	d1df      	bne.n	9001d24c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001d28c:	4601      	mov	r1, r0
9001d28e:	4620      	mov	r0, r4
9001d290:	f7ff fc8d 	bl	9001cbae <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001d294:	e7d9      	b.n	9001d24a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001d296 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001d296:	b510      	push	{r4, lr}
9001d298:	4604      	mov	r4, r0
9001d29a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
9001d29e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001d2a0:	b1e1      	cbz	r1, 9001d2dc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001d2a2:	2b0a      	cmp	r3, #10
9001d2a4:	d02d      	beq.n	9001d302 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001d2a6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
9001d2a8:	3901      	subs	r1, #1
9001d2aa:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001d2ae:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
9001d2b0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
9001d2b4:	1c51      	adds	r1, r2, #1
9001d2b6:	b289      	uxth	r1, r1
9001d2b8:	2901      	cmp	r1, #1
9001d2ba:	bf8a      	itet	hi
9001d2bc:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001d2c0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
9001d2c2:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
9001d2c4:	1c5a      	adds	r2, r3, #1
9001d2c6:	8722      	strh	r2, [r4, #56]	; 0x38
9001d2c8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001d2ca:	4413      	add	r3, r2
9001d2cc:	b29b      	uxth	r3, r3
9001d2ce:	2b09      	cmp	r3, #9
9001d2d0:	bf88      	it	hi
9001d2d2:	3b0a      	subhi	r3, #10
9001d2d4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001d2d8:	8458      	strh	r0, [r3, #34]	; 0x22
9001d2da:	e7de      	b.n	9001d29a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001d2dc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001d2de:	2b0a      	cmp	r3, #10
9001d2e0:	d00f      	beq.n	9001d302 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001d2e2:	4620      	mov	r0, r4
9001d2e4:	f7ff fc11 	bl	9001cb0a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001d2e8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001d2ea:	1c5a      	adds	r2, r3, #1
9001d2ec:	8722      	strh	r2, [r4, #56]	; 0x38
9001d2ee:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001d2f0:	4413      	add	r3, r2
9001d2f2:	b29b      	uxth	r3, r3
9001d2f4:	2b09      	cmp	r3, #9
9001d2f6:	bf88      	it	hi
9001d2f8:	3b0a      	subhi	r3, #10
9001d2fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001d2fe:	8458      	strh	r0, [r3, #34]	; 0x22
9001d300:	e7ec      	b.n	9001d2dc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001d302:	bd10      	pop	{r4, pc}

9001d304 <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001d304:	b538      	push	{r3, r4, r5, lr}
9001d306:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001d308:	4604      	mov	r4, r0
9001d30a:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001d30e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
9001d310:	8f02      	ldrh	r2, [r0, #56]	; 0x38
9001d312:	3a01      	subs	r2, #1
9001d314:	8702      	strh	r2, [r0, #56]	; 0x38
9001d316:	1c5a      	adds	r2, r3, #1
9001d318:	b292      	uxth	r2, r2
9001d31a:	2a09      	cmp	r2, #9
9001d31c:	bf8a      	itet	hi
9001d31e:	3b09      	subhi	r3, #9
9001d320:	86c2      	strhls	r2, [r0, #54]	; 0x36
9001d322:	86c3      	strhhi	r3, [r0, #54]	; 0x36
9001d324:	f7ff ffb7 	bl	9001d296 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001d328:	8c23      	ldrh	r3, [r4, #32]
9001d32a:	2b01      	cmp	r3, #1
9001d32c:	bf9c      	itt	ls
9001d32e:	3301      	addls	r3, #1
9001d330:	8423      	strhls	r3, [r4, #32]
9001d332:	8be3      	ldrh	r3, [r4, #30]
9001d334:	b90b      	cbnz	r3, 9001d33a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001d336:	2302      	movs	r3, #2
9001d338:	83e3      	strh	r3, [r4, #30]
9001d33a:	8be3      	ldrh	r3, [r4, #30]
9001d33c:	4628      	mov	r0, r5
9001d33e:	3b01      	subs	r3, #1
9001d340:	b29b      	uxth	r3, r3
9001d342:	83e3      	strh	r3, [r4, #30]
9001d344:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d348:	8365      	strh	r5, [r4, #26]
9001d34a:	bd38      	pop	{r3, r4, r5, pc}

9001d34c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001d34c:	428a      	cmp	r2, r1
9001d34e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d352:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
9001d354:	d932      	bls.n	9001d3bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001d356:	8f05      	ldrh	r5, [r0, #56]	; 0x38
9001d358:	1a54      	subs	r4, r2, r1
9001d35a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
9001d35e:	19ee      	adds	r6, r5, r7
9001d360:	fa1f fe84 	uxth.w	lr, r4
9001d364:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
9001d368:	3e01      	subs	r6, #1
9001d36a:	b2b4      	uxth	r4, r6
9001d36c:	eba4 090e 	sub.w	r9, r4, lr
9001d370:	fa1f f989 	uxth.w	r9, r9
9001d374:	2c09      	cmp	r4, #9
9001d376:	4626      	mov	r6, r4
9001d378:	bf88      	it	hi
9001d37a:	f1a4 060a 	subhi.w	r6, r4, #10
9001d37e:	f1bc 0f00 	cmp.w	ip, #0
9001d382:	f104 34ff 	add.w	r4, r4, #4294967295
9001d386:	bf08      	it	eq
9001d388:	f04f 0c02 	moveq.w	ip, #2
9001d38c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001d390:	b2a4      	uxth	r4, r4
9001d392:	f10c 3cff 	add.w	ip, ip, #4294967295
9001d396:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
9001d39a:	454c      	cmp	r4, r9
9001d39c:	fa1f fc8c 	uxth.w	ip, ip
9001d3a0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001d3a4:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
9001d3a8:	d1e4      	bne.n	9001d374 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001d3aa:	eba5 050e 	sub.w	r5, r5, lr
9001d3ae:	eb0e 0408 	add.w	r4, lr, r8
9001d3b2:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
9001d3b6:	8705      	strh	r5, [r0, #56]	; 0x38
9001d3b8:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
9001d3bc:	8f04      	ldrh	r4, [r0, #56]	; 0x38
9001d3be:	250a      	movs	r5, #10
9001d3c0:	1a64      	subs	r4, r4, r1
9001d3c2:	4439      	add	r1, r7
9001d3c4:	b289      	uxth	r1, r1
9001d3c6:	8704      	strh	r4, [r0, #56]	; 0x38
9001d3c8:	2909      	cmp	r1, #9
9001d3ca:	bf88      	it	hi
9001d3cc:	390a      	subhi	r1, #10
9001d3ce:	86c1      	strh	r1, [r0, #54]	; 0x36
9001d3d0:	b18a      	cbz	r2, 9001d3f6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001d3d2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
9001d3d4:	3a01      	subs	r2, #1
9001d3d6:	3101      	adds	r1, #1
9001d3d8:	b292      	uxth	r2, r2
9001d3da:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001d3de:	8701      	strh	r1, [r0, #56]	; 0x38
9001d3e0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001d3e2:	b901      	cbnz	r1, 9001d3e6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001d3e4:	86c5      	strh	r5, [r0, #54]	; 0x36
9001d3e6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001d3e8:	3901      	subs	r1, #1
9001d3ea:	b289      	uxth	r1, r1
9001d3ec:	86c1      	strh	r1, [r0, #54]	; 0x36
9001d3ee:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001d3f2:	844c      	strh	r4, [r1, #34]	; 0x22
9001d3f4:	e7ec      	b.n	9001d3d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001d3f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d3fa:	f7ff bf4c 	b.w	9001d296 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001d3fe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001d3fe:	b570      	push	{r4, r5, r6, lr}
9001d400:	2500      	movs	r5, #0
9001d402:	4295      	cmp	r5, r2
9001d404:	d011      	beq.n	9001d42a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001d406:	8bc4      	ldrh	r4, [r0, #30]
9001d408:	f831 6b02 	ldrh.w	r6, [r1], #2
9001d40c:	4414      	add	r4, r2
9001d40e:	3c01      	subs	r4, #1
9001d410:	1b64      	subs	r4, r4, r5
9001d412:	b2a4      	uxth	r4, r4
9001d414:	2c01      	cmp	r4, #1
9001d416:	bf88      	it	hi
9001d418:	3c02      	subhi	r4, #2
9001d41a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001d41e:	8b64      	ldrh	r4, [r4, #26]
9001d420:	42b4      	cmp	r4, r6
9001d422:	d117      	bne.n	9001d454 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001d424:	3501      	adds	r5, #1
9001d426:	b2ad      	uxth	r5, r5
9001d428:	e7eb      	b.n	9001d402 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001d42a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d42e:	2400      	movs	r4, #0
9001d430:	4413      	add	r3, r2
9001d432:	b2a2      	uxth	r2, r4
9001d434:	429a      	cmp	r2, r3
9001d436:	da0f      	bge.n	9001d458 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001d438:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
9001d43a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001d43e:	3401      	adds	r4, #1
9001d440:	4432      	add	r2, r6
9001d442:	b292      	uxth	r2, r2
9001d444:	2a09      	cmp	r2, #9
9001d446:	bf88      	it	hi
9001d448:	3a0a      	subhi	r2, #10
9001d44a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001d44e:	8c52      	ldrh	r2, [r2, #34]	; 0x22
9001d450:	42aa      	cmp	r2, r5
9001d452:	d0ee      	beq.n	9001d432 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001d454:	2000      	movs	r0, #0
9001d456:	bd70      	pop	{r4, r5, r6, pc}
9001d458:	2001      	movs	r0, #1
9001d45a:	e7fc      	b.n	9001d456 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001d45c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001d45c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d460:	4605      	mov	r5, r0
9001d462:	4616      	mov	r6, r2
9001d464:	1c8c      	adds	r4, r1, #2
9001d466:	8809      	ldrh	r1, [r1, #0]
9001d468:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001d46c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001d470:	42b3      	cmp	r3, r6
9001d472:	d124      	bne.n	9001d4be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001d474:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001d478:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001d47c:	f001 070f 	and.w	r7, r1, #15
9001d480:	4652      	mov	r2, sl
9001d482:	f8cd 8000 	str.w	r8, [sp]
9001d486:	464b      	mov	r3, r9
9001d488:	4621      	mov	r1, r4
9001d48a:	4628      	mov	r0, r5
9001d48c:	f7ff ffb7 	bl	9001d3fe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001d490:	4683      	mov	fp, r0
9001d492:	b168      	cbz	r0, 9001d4b0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001d494:	eb0a 0109 	add.w	r1, sl, r9
9001d498:	463a      	mov	r2, r7
9001d49a:	4628      	mov	r0, r5
9001d49c:	4441      	add	r1, r8
9001d49e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001d4a2:	4649      	mov	r1, r9
9001d4a4:	f7ff ff52 	bl	9001d34c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001d4a8:	4658      	mov	r0, fp
9001d4aa:	b003      	add	sp, #12
9001d4ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d4b0:	eb07 010a 	add.w	r1, r7, sl
9001d4b4:	4449      	add	r1, r9
9001d4b6:	4441      	add	r1, r8
9001d4b8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001d4bc:	e7d2      	b.n	9001d464 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001d4be:	f04f 0b00 	mov.w	fp, #0
9001d4c2:	e7f1      	b.n	9001d4a8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001d4c4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001d4c4:	b570      	push	{r4, r5, r6, lr}
9001d4c6:	8810      	ldrh	r0, [r2, #0]
9001d4c8:	4298      	cmp	r0, r3
9001d4ca:	d817      	bhi.n	9001d4fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001d4cc:	1e48      	subs	r0, r1, #1
9001d4ce:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001d4d2:	4298      	cmp	r0, r3
9001d4d4:	d312      	bcc.n	9001d4fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001d4d6:	2400      	movs	r4, #0
9001d4d8:	428c      	cmp	r4, r1
9001d4da:	d20f      	bcs.n	9001d4fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001d4dc:	1860      	adds	r0, r4, r1
9001d4de:	1040      	asrs	r0, r0, #1
9001d4e0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001d4e4:	0085      	lsls	r5, r0, #2
9001d4e6:	42b3      	cmp	r3, r6
9001d4e8:	d902      	bls.n	9001d4f0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001d4ea:	3001      	adds	r0, #1
9001d4ec:	b284      	uxth	r4, r0
9001d4ee:	e7f3      	b.n	9001d4d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001d4f0:	d201      	bcs.n	9001d4f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001d4f2:	b281      	uxth	r1, r0
9001d4f4:	e7f0      	b.n	9001d4d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001d4f6:	442a      	add	r2, r5
9001d4f8:	8850      	ldrh	r0, [r2, #2]
9001d4fa:	bd70      	pop	{r4, r5, r6, pc}
9001d4fc:	2000      	movs	r0, #0
9001d4fe:	e7fc      	b.n	9001d4fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001d500 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001d500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001d504:	6c45      	ldr	r5, [r0, #68]	; 0x44
9001d506:	4604      	mov	r4, r0
9001d508:	260b      	movs	r6, #11
9001d50a:	886f      	ldrh	r7, [r5, #2]
9001d50c:	087f      	lsrs	r7, r7, #1
9001d50e:	3e01      	subs	r6, #1
9001d510:	d013      	beq.n	9001d53a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001d512:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
9001d514:	462a      	mov	r2, r5
9001d516:	4639      	mov	r1, r7
9001d518:	4620      	mov	r0, r4
9001d51a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001d51e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001d522:	4643      	mov	r3, r8
9001d524:	f7ff ffce 	bl	9001d4c4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001d528:	b138      	cbz	r0, 9001d53a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001d52a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001d52e:	4642      	mov	r2, r8
9001d530:	4620      	mov	r0, r4
9001d532:	f7ff ff93 	bl	9001d45c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001d536:	2800      	cmp	r0, #0
9001d538:	d1e9      	bne.n	9001d50e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001d53a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001d540 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001d540:	b570      	push	{r4, r5, r6, lr}
9001d542:	694a      	ldr	r2, [r1, #20]
9001d544:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9001d546:	684b      	ldr	r3, [r1, #4]
9001d548:	1b54      	subs	r4, r2, r5
9001d54a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
9001d54c:	f000 8106 	beq.w	9001d75c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001d550:	1b9b      	subs	r3, r3, r6
9001d552:	d003      	beq.n	9001d55c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001d554:	4363      	muls	r3, r4
9001d556:	2210      	movs	r2, #16
9001d558:	fb93 f3f2 	sdiv	r3, r3, r2
9001d55c:	680c      	ldr	r4, [r1, #0]
9001d55e:	698a      	ldr	r2, [r1, #24]
9001d560:	1b65      	subs	r5, r4, r5
9001d562:	f000 80fd 	beq.w	9001d760 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001d566:	1b92      	subs	r2, r2, r6
9001d568:	d003      	beq.n	9001d572 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001d56a:	436a      	muls	r2, r5
9001d56c:	2410      	movs	r4, #16
9001d56e:	fb92 f2f4 	sdiv	r2, r2, r4
9001d572:	1a9b      	subs	r3, r3, r2
9001d574:	ed9f 4a89 	vldr	s8, [pc, #548]	; 9001d79c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001d578:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001d57c:	460a      	mov	r2, r1
9001d57e:	ee07 3a90 	vmov	s15, r3
9001d582:	f100 040c 	add.w	r4, r0, #12
9001d586:	4603      	mov	r3, r0
9001d588:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001d58c:	ee67 7a84 	vmul.f32	s15, s15, s8
9001d590:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001d594:	eeb1 6a43 	vneg.f32	s12, s6
9001d598:	edd2 7a02 	vldr	s15, [r2, #8]
9001d59c:	3214      	adds	r2, #20
9001d59e:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001d5a2:	ece3 6a01 	vstmia	r3!, {s13}
9001d5a6:	429c      	cmp	r4, r3
9001d5a8:	ed52 7a02 	vldr	s15, [r2, #-8]
9001d5ac:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001d5b0:	edc3 7a02 	vstr	s15, [r3, #8]
9001d5b4:	ed52 7a01 	vldr	s15, [r2, #-4]
9001d5b8:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001d5bc:	edc3 7a05 	vstr	s15, [r3, #20]
9001d5c0:	d1ea      	bne.n	9001d598 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001d5c2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001d5c4:	698b      	ldr	r3, [r1, #24]
9001d5c6:	edd0 4a02 	vldr	s9, [r0, #8]
9001d5ca:	1a9b      	subs	r3, r3, r2
9001d5cc:	edd0 3a00 	vldr	s7, [r0]
9001d5d0:	edd0 6a01 	vldr	s13, [r0, #4]
9001d5d4:	ee07 3a90 	vmov	s15, r3
9001d5d8:	684b      	ldr	r3, [r1, #4]
9001d5da:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001d5de:	ed90 5a05 	vldr	s10, [r0, #20]
9001d5e2:	1a9b      	subs	r3, r3, r2
9001d5e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001d5e8:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001d5ec:	ed90 2a03 	vldr	s4, [r0, #12]
9001d5f0:	ee07 3a10 	vmov	s14, r3
9001d5f4:	edd0 5a04 	vldr	s11, [r0, #16]
9001d5f8:	ee67 7a84 	vmul.f32	s15, s15, s8
9001d5fc:	ed90 1a07 	vldr	s2, [r0, #28]
9001d600:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d604:	edd0 2a06 	vldr	s5, [r0, #24]
9001d608:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001d60c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001d610:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d614:	ee32 5a45 	vsub.f32	s10, s4, s10
9001d618:	eee6 7a87 	vfma.f32	s15, s13, s14
9001d61c:	ee67 7a83 	vmul.f32	s15, s15, s6
9001d620:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
9001d624:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001d626:	694a      	ldr	r2, [r1, #20]
9001d628:	1b13      	subs	r3, r2, r4
9001d62a:	ee07 3a10 	vmov	s14, r3
9001d62e:	680b      	ldr	r3, [r1, #0]
9001d630:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d634:	1b1b      	subs	r3, r3, r4
9001d636:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d63a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001d63e:	ee07 3a10 	vmov	s14, r3
9001d642:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d646:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d64a:	eee6 4a87 	vfma.f32	s9, s13, s14
9001d64e:	ee64 4a86 	vmul.f32	s9, s9, s12
9001d652:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
9001d656:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001d658:	698b      	ldr	r3, [r1, #24]
9001d65a:	1a9b      	subs	r3, r3, r2
9001d65c:	ee06 3a90 	vmov	s13, r3
9001d660:	684b      	ldr	r3, [r1, #4]
9001d662:	1a9b      	subs	r3, r3, r2
9001d664:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001d668:	ee07 3a10 	vmov	s14, r3
9001d66c:	ee66 6a84 	vmul.f32	s13, s13, s8
9001d670:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d674:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001d678:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d67c:	eee5 6a87 	vfma.f32	s13, s11, s14
9001d680:	ee66 6a83 	vmul.f32	s13, s13, s6
9001d684:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
9001d688:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001d68a:	694a      	ldr	r2, [r1, #20]
9001d68c:	1b13      	subs	r3, r2, r4
9001d68e:	ee07 3a10 	vmov	s14, r3
9001d692:	680b      	ldr	r3, [r1, #0]
9001d694:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d698:	1b1b      	subs	r3, r3, r4
9001d69a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d69e:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001d6a2:	ee07 3a10 	vmov	s14, r3
9001d6a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d6aa:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d6ae:	eea5 5a87 	vfma.f32	s10, s11, s14
9001d6b2:	edd0 5a08 	vldr	s11, [r0, #32]
9001d6b6:	ee31 1a65 	vsub.f32	s2, s2, s11
9001d6ba:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001d6be:	ee25 5a06 	vmul.f32	s10, s10, s12
9001d6c2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
9001d6c6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001d6c8:	698b      	ldr	r3, [r1, #24]
9001d6ca:	1a9b      	subs	r3, r3, r2
9001d6cc:	ee07 3a10 	vmov	s14, r3
9001d6d0:	684b      	ldr	r3, [r1, #4]
9001d6d2:	1a9b      	subs	r3, r3, r2
9001d6d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d6d8:	ee01 3a90 	vmov	s3, r3
9001d6dc:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d6e0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001d6e4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001d6e8:	ee61 1a84 	vmul.f32	s3, s3, s8
9001d6ec:	eea1 7a21 	vfma.f32	s14, s2, s3
9001d6f0:	ee27 7a03 	vmul.f32	s14, s14, s6
9001d6f4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001d6f8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001d6fa:	694a      	ldr	r2, [r1, #20]
9001d6fc:	1b13      	subs	r3, r2, r4
9001d6fe:	ee03 3a10 	vmov	s6, r3
9001d702:	680b      	ldr	r3, [r1, #0]
9001d704:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001d708:	1b1b      	subs	r3, r3, r4
9001d70a:	ee23 3a04 	vmul.f32	s6, s6, s8
9001d70e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001d712:	ee03 3a10 	vmov	s6, r3
9001d716:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001d71a:	ee23 4a04 	vmul.f32	s8, s6, s8
9001d71e:	eee1 5a04 	vfma.f32	s11, s2, s8
9001d722:	ee25 6a86 	vmul.f32	s12, s11, s12
9001d726:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001d72a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
9001d72e:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001d732:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001d736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d73a:	dd13      	ble.n	9001d764 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001d73c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001d740:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001d744:	63c3      	str	r3, [r0, #60]	; 0x3c
9001d746:	eee3 7a87 	vfma.f32	s15, s7, s14
9001d74a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001d74e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d752:	dd15      	ble.n	9001d780 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001d754:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001d758:	6403      	str	r3, [r0, #64]	; 0x40
9001d75a:	bd70      	pop	{r4, r5, r6, pc}
9001d75c:	4623      	mov	r3, r4
9001d75e:	e6fd      	b.n	9001d55c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001d760:	462a      	mov	r2, r5
9001d762:	e706      	b.n	9001d572 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001d764:	d502      	bpl.n	9001d76c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001d766:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001d76a:	e7e9      	b.n	9001d740 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001d76c:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001d770:	eea3 2a85 	vfma.f32	s4, s7, s10
9001d774:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001d778:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d77c:	dade      	bge.n	9001d73c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001d77e:	e7f2      	b.n	9001d766 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001d780:	d502      	bpl.n	9001d788 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001d782:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001d786:	e7e7      	b.n	9001d758 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001d788:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001d78c:	eee3 4a86 	vfma.f32	s9, s7, s12
9001d790:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001d794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d798:	dadc      	bge.n	9001d754 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001d79a:	e7f2      	b.n	9001d782 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001d79c:	3d800000 	.word	0x3d800000

9001d7a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001d7a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d7a4:	2714      	movs	r7, #20
9001d7a6:	435f      	muls	r7, r3
9001d7a8:	eb02 0c07 	add.w	ip, r2, r7
9001d7ac:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001d7b0:	f115 0e0f 	adds.w	lr, r5, #15
9001d7b4:	f100 80a2 	bmi.w	9001d8fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001d7b8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001d7bc:	9c08      	ldr	r4, [sp, #32]
9001d7be:	2614      	movs	r6, #20
9001d7c0:	f8c0 e014 	str.w	lr, [r0, #20]
9001d7c4:	4366      	muls	r6, r4
9001d7c6:	eb02 0806 	add.w	r8, r2, r6
9001d7ca:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001d7ce:	f115 040f 	adds.w	r4, r5, #15
9001d7d2:	f100 809f 	bmi.w	9001d914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001d7d6:	1124      	asrs	r4, r4, #4
9001d7d8:	eba4 040e 	sub.w	r4, r4, lr
9001d7dc:	6184      	str	r4, [r0, #24]
9001d7de:	2c00      	cmp	r4, #0
9001d7e0:	f000 808a 	beq.w	9001d8f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001d7e4:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001d7e8:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001d7ec:	5995      	ldr	r5, [r2, r6]
9001d7ee:	eba4 0809 	sub.w	r8, r4, r9
9001d7f2:	59d4      	ldr	r4, [r2, r7]
9001d7f4:	eba5 0a04 	sub.w	sl, r5, r4
9001d7f8:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001d7fc:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001d800:	fb0e fe05 	mul.w	lr, lr, r5
9001d804:	fb0a ee19 	mls	lr, sl, r9, lr
9001d808:	fb08 e404 	mla	r4, r8, r4, lr
9001d80c:	3c01      	subs	r4, #1
9001d80e:	19a4      	adds	r4, r4, r6
9001d810:	f100 808c 	bmi.w	9001d92c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001d814:	fb94 fef6 	sdiv	lr, r4, r6
9001d818:	fb06 441e 	mls	r4, r6, lr, r4
9001d81c:	f8c0 e000 	str.w	lr, [r0]
9001d820:	6104      	str	r4, [r0, #16]
9001d822:	2d00      	cmp	r5, #0
9001d824:	f2c0 8095 	blt.w	9001d952 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001d828:	fb95 f4f6 	sdiv	r4, r5, r6
9001d82c:	fb06 5514 	mls	r5, r6, r4, r5
9001d830:	6044      	str	r4, [r0, #4]
9001d832:	6085      	str	r5, [r0, #8]
9001d834:	60c6      	str	r6, [r0, #12]
9001d836:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001d83a:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001d83e:	6945      	ldr	r5, [r0, #20]
9001d840:	59d2      	ldr	r2, [r2, r7]
9001d842:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001d846:	eddf 6a4b 	vldr	s13, [pc, #300]	; 9001d974 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001d84a:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
9001d84e:	ee07 4a10 	vmov	s14, r4
9001d852:	6804      	ldr	r4, [r0, #0]
9001d854:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001d858:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d85c:	ee07 2a90 	vmov	s15, r2
9001d860:	ee27 7a26 	vmul.f32	s14, s14, s13
9001d864:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001d868:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001d86c:	edd3 6a00 	vldr	s13, [r3]
9001d870:	eee6 6a07 	vfma.f32	s13, s12, s14
9001d874:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
9001d878:	eee6 6a27 	vfma.f32	s13, s12, s15
9001d87c:	edc0 6a07 	vstr	s13, [r0, #28]
9001d880:	edd0 6a01 	vldr	s13, [r0, #4]
9001d884:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
9001d888:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001d88c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
9001d890:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001d894:	ed80 6a08 	vstr	s12, [r0, #32]
9001d898:	6a4a      	ldr	r2, [r1, #36]	; 0x24
9001d89a:	6242      	str	r2, [r0, #36]	; 0x24
9001d89c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
9001d8a0:	ed93 6a03 	vldr	s12, [r3, #12]
9001d8a4:	eea5 6a87 	vfma.f32	s12, s11, s14
9001d8a8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001d8ac:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001d8b0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
9001d8b4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001d8b8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
9001d8bc:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001d8c0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
9001d8c4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001d8c6:	6302      	str	r2, [r0, #48]	; 0x30
9001d8c8:	ed93 6a06 	vldr	s12, [r3, #24]
9001d8cc:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
9001d8d0:	eea5 6a87 	vfma.f32	s12, s11, s14
9001d8d4:	eeb0 7a46 	vmov.f32	s14, s12
9001d8d8:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
9001d8dc:	eea6 7a27 	vfma.f32	s14, s12, s15
9001d8e0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001d8e4:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
9001d8e8:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
9001d8ec:	eee6 7a87 	vfma.f32	s15, s13, s14
9001d8f0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
9001d8f4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001d8f6:	63c3      	str	r3, [r0, #60]	; 0x3c
9001d8f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001d8fc:	2410      	movs	r4, #16
9001d8fe:	f1c5 0501 	rsb	r5, r5, #1
9001d902:	fb9e fef4 	sdiv	lr, lr, r4
9001d906:	f015 050f 	ands.w	r5, r5, #15
9001d90a:	bf18      	it	ne
9001d90c:	2501      	movne	r5, #1
9001d90e:	ebae 0e05 	sub.w	lr, lr, r5
9001d912:	e753      	b.n	9001d7bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001d914:	f04f 0910 	mov.w	r9, #16
9001d918:	f1c5 0501 	rsb	r5, r5, #1
9001d91c:	fb94 f4f9 	sdiv	r4, r4, r9
9001d920:	f015 050f 	ands.w	r5, r5, #15
9001d924:	bf18      	it	ne
9001d926:	2501      	movne	r5, #1
9001d928:	1b64      	subs	r4, r4, r5
9001d92a:	e755      	b.n	9001d7d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001d92c:	4264      	negs	r4, r4
9001d92e:	fb94 fef6 	sdiv	lr, r4, r6
9001d932:	f1ce 0800 	rsb	r8, lr, #0
9001d936:	fb06 441e 	mls	r4, r6, lr, r4
9001d93a:	f8c0 8000 	str.w	r8, [r0]
9001d93e:	6104      	str	r4, [r0, #16]
9001d940:	2c00      	cmp	r4, #0
9001d942:	f43f af6e 	beq.w	9001d822 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001d946:	ea6f 0e0e 	mvn.w	lr, lr
9001d94a:	1b34      	subs	r4, r6, r4
9001d94c:	f8c0 e000 	str.w	lr, [r0]
9001d950:	e766      	b.n	9001d820 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001d952:	426d      	negs	r5, r5
9001d954:	fb95 f4f6 	sdiv	r4, r5, r6
9001d958:	f1c4 0e00 	rsb	lr, r4, #0
9001d95c:	fb06 5514 	mls	r5, r6, r4, r5
9001d960:	f8c0 e004 	str.w	lr, [r0, #4]
9001d964:	6085      	str	r5, [r0, #8]
9001d966:	2d00      	cmp	r5, #0
9001d968:	f43f af64 	beq.w	9001d834 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001d96c:	43e4      	mvns	r4, r4
9001d96e:	1b75      	subs	r5, r6, r5
9001d970:	6044      	str	r4, [r0, #4]
9001d972:	e75e      	b.n	9001d832 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001d974:	3d800000 	.word	0x3d800000

9001d978 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001d978:	4b01      	ldr	r3, [pc, #4]	; (9001d980 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001d97a:	6018      	str	r0, [r3, #0]
9001d97c:	4770      	bx	lr
9001d97e:	bf00      	nop
9001d980:	24028e94 	.word	0x24028e94

9001d984 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001d984:	4b06      	ldr	r3, [pc, #24]	; (9001d9a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001d986:	881a      	ldrh	r2, [r3, #0]
9001d988:	4282      	cmp	r2, r0
9001d98a:	d807      	bhi.n	9001d99c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001d98c:	4b05      	ldr	r3, [pc, #20]	; (9001d9a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001d98e:	881b      	ldrh	r3, [r3, #0]
9001d990:	4413      	add	r3, r2
9001d992:	4298      	cmp	r0, r3
9001d994:	bfac      	ite	ge
9001d996:	2000      	movge	r0, #0
9001d998:	2001      	movlt	r0, #1
9001d99a:	4770      	bx	lr
9001d99c:	2000      	movs	r0, #0
9001d99e:	4770      	bx	lr
9001d9a0:	24028eb4 	.word	0x24028eb4
9001d9a4:	24028eb8 	.word	0x24028eb8

9001d9a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001d9a8:	b508      	push	{r3, lr}
9001d9aa:	4601      	mov	r1, r0
9001d9ac:	f7ff ffea 	bl	9001d984 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001d9b0:	b118      	cbz	r0, 9001d9ba <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001d9b2:	4b02      	ldr	r3, [pc, #8]	; (9001d9bc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001d9b4:	681b      	ldr	r3, [r3, #0]
9001d9b6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001d9ba:	bd08      	pop	{r3, pc}
9001d9bc:	24028e98 	.word	0x24028e98

9001d9c0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001d9c0:	b5f0      	push	{r4, r5, r6, r7, lr}
9001d9c2:	4c24      	ldr	r4, [pc, #144]	; (9001da54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001d9c4:	6823      	ldr	r3, [r4, #0]
9001d9c6:	2b00      	cmp	r3, #0
9001d9c8:	d042      	beq.n	9001da50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001d9ca:	4a23      	ldr	r2, [pc, #140]	; (9001da58 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001d9cc:	4d23      	ldr	r5, [pc, #140]	; (9001da5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001d9ce:	8811      	ldrh	r1, [r2, #0]
9001d9d0:	f8b5 c000 	ldrh.w	ip, [r5]
9001d9d4:	4822      	ldr	r0, [pc, #136]	; (9001da60 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001d9d6:	4461      	add	r1, ip
9001d9d8:	1c4a      	adds	r2, r1, #1
9001d9da:	008f      	lsls	r7, r1, #2
9001d9dc:	f022 0201 	bic.w	r2, r2, #1
9001d9e0:	19de      	adds	r6, r3, r7
9001d9e2:	0412      	lsls	r2, r2, #16
9001d9e4:	6006      	str	r6, [r0, #0]
9001d9e6:	4e1f      	ldr	r6, [pc, #124]	; (9001da64 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001d9e8:	0c12      	lsrs	r2, r2, #16
9001d9ea:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001d9ee:	19da      	adds	r2, r3, r7
9001d9f0:	6032      	str	r2, [r6, #0]
9001d9f2:	220e      	movs	r2, #14
9001d9f4:	fb02 f20c 	mul.w	r2, r2, ip
9001d9f8:	3203      	adds	r2, #3
9001d9fa:	f022 0203 	bic.w	r2, r2, #3
9001d9fe:	443a      	add	r2, r7
9001da00:	4f19      	ldr	r7, [pc, #100]	; (9001da68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001da02:	4413      	add	r3, r2
9001da04:	603b      	str	r3, [r7, #0]
9001da06:	2300      	movs	r3, #0
9001da08:	4f18      	ldr	r7, [pc, #96]	; (9001da6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001da0a:	469c      	mov	ip, r3
9001da0c:	803b      	strh	r3, [r7, #0]
9001da0e:	4f18      	ldr	r7, [pc, #96]	; (9001da70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001da10:	683f      	ldr	r7, [r7, #0]
9001da12:	1aba      	subs	r2, r7, r2
9001da14:	4f17      	ldr	r7, [pc, #92]	; (9001da74 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001da16:	603a      	str	r2, [r7, #0]
9001da18:	f64f 77ff 	movw	r7, #65535	; 0xffff
9001da1c:	4a16      	ldr	r2, [pc, #88]	; (9001da78 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001da1e:	8013      	strh	r3, [r2, #0]
9001da20:	428b      	cmp	r3, r1
9001da22:	d10d      	bne.n	9001da40 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001da24:	882d      	ldrh	r5, [r5, #0]
9001da26:	2300      	movs	r3, #0
9001da28:	6830      	ldr	r0, [r6, #0]
9001da2a:	240e      	movs	r4, #14
9001da2c:	429d      	cmp	r5, r3
9001da2e:	d90f      	bls.n	9001da50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001da30:	fb04 0203 	mla	r2, r4, r3, r0
9001da34:	3301      	adds	r3, #1
9001da36:	7b11      	ldrb	r1, [r2, #12]
9001da38:	f36f 1145 	bfc	r1, #5, #1
9001da3c:	7311      	strb	r1, [r2, #12]
9001da3e:	e7f5      	b.n	9001da2c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001da40:	6822      	ldr	r2, [r4, #0]
9001da42:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001da46:	6802      	ldr	r2, [r0, #0]
9001da48:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001da4c:	3301      	adds	r3, #1
9001da4e:	e7e7      	b.n	9001da20 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001da50:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001da52:	bf00      	nop
9001da54:	24028e98 	.word	0x24028e98
9001da58:	24028eb4 	.word	0x24028eb4
9001da5c:	24028eb8 	.word	0x24028eb8
9001da60:	24028eac 	.word	0x24028eac
9001da64:	24028e9c 	.word	0x24028e9c
9001da68:	24028ea4 	.word	0x24028ea4
9001da6c:	24028eb6 	.word	0x24028eb6
9001da70:	24028ea0 	.word	0x24028ea0
9001da74:	24028eb0 	.word	0x24028eb0
9001da78:	24028ea8 	.word	0x24028ea8

9001da7c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001da7c:	4b06      	ldr	r3, [pc, #24]	; (9001da98 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001da7e:	681b      	ldr	r3, [r3, #0]
9001da80:	b943      	cbnz	r3, 9001da94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001da82:	b139      	cbz	r1, 9001da94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001da84:	4b05      	ldr	r3, [pc, #20]	; (9001da9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001da86:	801a      	strh	r2, [r3, #0]
9001da88:	4b05      	ldr	r3, [pc, #20]	; (9001daa0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001da8a:	6019      	str	r1, [r3, #0]
9001da8c:	4b05      	ldr	r3, [pc, #20]	; (9001daa4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001da8e:	6018      	str	r0, [r3, #0]
9001da90:	f7ff bf96 	b.w	9001d9c0 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001da94:	4770      	bx	lr
9001da96:	bf00      	nop
9001da98:	24028ea4 	.word	0x24028ea4
9001da9c:	24028eb8 	.word	0x24028eb8
9001daa0:	24028ea0 	.word	0x24028ea0
9001daa4:	24028e98 	.word	0x24028e98

9001daa8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001daa8:	b470      	push	{r4, r5, r6}
9001daaa:	4c07      	ldr	r4, [pc, #28]	; (9001dac8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001daac:	4605      	mov	r5, r0
9001daae:	4610      	mov	r0, r2
9001dab0:	9a03      	ldr	r2, [sp, #12]
9001dab2:	6826      	ldr	r6, [r4, #0]
9001dab4:	b936      	cbnz	r6, 9001dac4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001dab6:	6025      	str	r5, [r4, #0]
9001dab8:	4c04      	ldr	r4, [pc, #16]	; (9001dacc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001daba:	8021      	strh	r1, [r4, #0]
9001dabc:	4619      	mov	r1, r3
9001dabe:	bc70      	pop	{r4, r5, r6}
9001dac0:	f7ff bfdc 	b.w	9001da7c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001dac4:	bc70      	pop	{r4, r5, r6}
9001dac6:	4770      	bx	lr
9001dac8:	24028ebc 	.word	0x24028ebc
9001dacc:	24028eb4 	.word	0x24028eb4

9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001dad0:	4a12      	ldr	r2, [pc, #72]	; (9001db1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001dad2:	8803      	ldrh	r3, [r0, #0]
9001dad4:	8812      	ldrh	r2, [r2, #0]
9001dad6:	4293      	cmp	r3, r2
9001dad8:	d207      	bcs.n	9001daea <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001dada:	4a11      	ldr	r2, [pc, #68]	; (9001db20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001dadc:	2114      	movs	r1, #20
9001dade:	6812      	ldr	r2, [r2, #0]
9001dae0:	fb01 2303 	mla	r3, r1, r3, r2
9001dae4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001dae8:	4770      	bx	lr
9001daea:	490e      	ldr	r1, [pc, #56]	; (9001db24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001daec:	8809      	ldrh	r1, [r1, #0]
9001daee:	4411      	add	r1, r2
9001daf0:	428b      	cmp	r3, r1
9001daf2:	da04      	bge.n	9001dafe <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001daf4:	1a9b      	subs	r3, r3, r2
9001daf6:	4a0c      	ldr	r2, [pc, #48]	; (9001db28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001daf8:	210e      	movs	r1, #14
9001dafa:	6812      	ldr	r2, [r2, #0]
9001dafc:	e7f0      	b.n	9001dae0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001dafe:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001db02:	4293      	cmp	r3, r2
9001db04:	d108      	bne.n	9001db18 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001db06:	4b09      	ldr	r3, [pc, #36]	; (9001db2c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001db08:	781b      	ldrb	r3, [r3, #0]
9001db0a:	b91b      	cbnz	r3, 9001db14 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001db0c:	4b08      	ldr	r3, [pc, #32]	; (9001db30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001db0e:	f9b3 0000 	ldrsh.w	r0, [r3]
9001db12:	4770      	bx	lr
9001db14:	4b07      	ldr	r3, [pc, #28]	; (9001db34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001db16:	e7fa      	b.n	9001db0e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001db18:	2000      	movs	r0, #0
9001db1a:	4770      	bx	lr
9001db1c:	24028eb4 	.word	0x24028eb4
9001db20:	24028ebc 	.word	0x24028ebc
9001db24:	24028eb8 	.word	0x24028eb8
9001db28:	24028e9c 	.word	0x24028e9c
9001db2c:	24028e24 	.word	0x24028e24
9001db30:	24028e26 	.word	0x24028e26
9001db34:	24028e28 	.word	0x24028e28

9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001db38:	4a12      	ldr	r2, [pc, #72]	; (9001db84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001db3a:	8803      	ldrh	r3, [r0, #0]
9001db3c:	8812      	ldrh	r2, [r2, #0]
9001db3e:	4293      	cmp	r3, r2
9001db40:	d207      	bcs.n	9001db52 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001db42:	4a11      	ldr	r2, [pc, #68]	; (9001db88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001db44:	2114      	movs	r1, #20
9001db46:	6812      	ldr	r2, [r2, #0]
9001db48:	fb01 2303 	mla	r3, r1, r3, r2
9001db4c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001db50:	4770      	bx	lr
9001db52:	490e      	ldr	r1, [pc, #56]	; (9001db8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001db54:	8809      	ldrh	r1, [r1, #0]
9001db56:	4411      	add	r1, r2
9001db58:	428b      	cmp	r3, r1
9001db5a:	da04      	bge.n	9001db66 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001db5c:	1a9b      	subs	r3, r3, r2
9001db5e:	4a0c      	ldr	r2, [pc, #48]	; (9001db90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001db60:	210e      	movs	r1, #14
9001db62:	6812      	ldr	r2, [r2, #0]
9001db64:	e7f0      	b.n	9001db48 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001db66:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001db6a:	4293      	cmp	r3, r2
9001db6c:	d108      	bne.n	9001db80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001db6e:	4b09      	ldr	r3, [pc, #36]	; (9001db94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001db70:	781b      	ldrb	r3, [r3, #0]
9001db72:	b91b      	cbnz	r3, 9001db7c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001db74:	4b08      	ldr	r3, [pc, #32]	; (9001db98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001db76:	f9b3 0000 	ldrsh.w	r0, [r3]
9001db7a:	4770      	bx	lr
9001db7c:	4b07      	ldr	r3, [pc, #28]	; (9001db9c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001db7e:	e7fa      	b.n	9001db76 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001db80:	2000      	movs	r0, #0
9001db82:	4770      	bx	lr
9001db84:	24028eb4 	.word	0x24028eb4
9001db88:	24028ebc 	.word	0x24028ebc
9001db8c:	24028eb8 	.word	0x24028eb8
9001db90:	24028e9c 	.word	0x24028e9c
9001db94:	24028e24 	.word	0x24028e24
9001db98:	24028e28 	.word	0x24028e28
9001db9c:	24028e26 	.word	0x24028e26

9001dba0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001dba0:	4a1f      	ldr	r2, [pc, #124]	; (9001dc20 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001dba2:	b510      	push	{r4, lr}
9001dba4:	880b      	ldrh	r3, [r1, #0]
9001dba6:	8812      	ldrh	r2, [r2, #0]
9001dba8:	4293      	cmp	r3, r2
9001dbaa:	d213      	bcs.n	9001dbd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001dbac:	4a1d      	ldr	r2, [pc, #116]	; (9001dc24 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
9001dbae:	2114      	movs	r1, #20
9001dbb0:	6812      	ldr	r2, [r2, #0]
9001dbb2:	fb01 2303 	mla	r3, r1, r3, r2
9001dbb6:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001dbba:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001dbbe:	8a1a      	ldrh	r2, [r3, #16]
9001dbc0:	8a5b      	ldrh	r3, [r3, #18]
9001dbc2:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001dbc6:	8004      	strh	r4, [r0, #0]
9001dbc8:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001dbcc:	8041      	strh	r1, [r0, #2]
9001dbce:	8082      	strh	r2, [r0, #4]
9001dbd0:	80c3      	strh	r3, [r0, #6]
9001dbd2:	e00e      	b.n	9001dbf2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001dbd4:	4914      	ldr	r1, [pc, #80]	; (9001dc28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001dbd6:	8809      	ldrh	r1, [r1, #0]
9001dbd8:	4411      	add	r1, r2
9001dbda:	428b      	cmp	r3, r1
9001dbdc:	da0a      	bge.n	9001dbf4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
9001dbde:	1a9b      	subs	r3, r3, r2
9001dbe0:	4a12      	ldr	r2, [pc, #72]	; (9001dc2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001dbe2:	210e      	movs	r1, #14
9001dbe4:	6812      	ldr	r2, [r2, #0]
9001dbe6:	fb01 2303 	mla	r3, r1, r3, r2
9001dbea:	681a      	ldr	r2, [r3, #0]
9001dbec:	6002      	str	r2, [r0, #0]
9001dbee:	685a      	ldr	r2, [r3, #4]
9001dbf0:	6042      	str	r2, [r0, #4]
9001dbf2:	bd10      	pop	{r4, pc}
9001dbf4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001dbf8:	4293      	cmp	r3, r2
9001dbfa:	d10b      	bne.n	9001dc14 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
9001dbfc:	4b0c      	ldr	r3, [pc, #48]	; (9001dc30 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001dbfe:	f9b3 1000 	ldrsh.w	r1, [r3]
9001dc02:	4b0c      	ldr	r3, [pc, #48]	; (9001dc34 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001dc04:	8081      	strh	r1, [r0, #4]
9001dc06:	f9b3 2000 	ldrsh.w	r2, [r3]
9001dc0a:	2300      	movs	r3, #0
9001dc0c:	80c2      	strh	r2, [r0, #6]
9001dc0e:	8003      	strh	r3, [r0, #0]
9001dc10:	8043      	strh	r3, [r0, #2]
9001dc12:	e7ee      	b.n	9001dbf2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001dc14:	2300      	movs	r3, #0
9001dc16:	8003      	strh	r3, [r0, #0]
9001dc18:	8043      	strh	r3, [r0, #2]
9001dc1a:	8083      	strh	r3, [r0, #4]
9001dc1c:	e7d8      	b.n	9001dbd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001dc1e:	bf00      	nop
9001dc20:	24028eb4 	.word	0x24028eb4
9001dc24:	24028ebc 	.word	0x24028ebc
9001dc28:	24028eb8 	.word	0x24028eb8
9001dc2c:	24028e9c 	.word	0x24028e9c
9001dc30:	24028e20 	.word	0x24028e20
9001dc34:	24028e22 	.word	0x24028e22

9001dc38 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001dc38:	4a17      	ldr	r2, [pc, #92]	; (9001dc98 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001dc3a:	8803      	ldrh	r3, [r0, #0]
9001dc3c:	8812      	ldrh	r2, [r2, #0]
9001dc3e:	4293      	cmp	r3, r2
9001dc40:	d213      	bcs.n	9001dc6a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001dc42:	4a16      	ldr	r2, [pc, #88]	; (9001dc9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001dc44:	2114      	movs	r1, #20
9001dc46:	6812      	ldr	r2, [r2, #0]
9001dc48:	fb01 2303 	mla	r3, r1, r3, r2
9001dc4c:	8a1a      	ldrh	r2, [r3, #16]
9001dc4e:	8919      	ldrh	r1, [r3, #8]
9001dc50:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001dc54:	428a      	cmp	r2, r1
9001dc56:	db1d      	blt.n	9001dc94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001dc58:	8a58      	ldrh	r0, [r3, #18]
9001dc5a:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001dc5e:	895b      	ldrh	r3, [r3, #10]
9001dc60:	4298      	cmp	r0, r3
9001dc62:	bfac      	ite	ge
9001dc64:	2000      	movge	r0, #0
9001dc66:	2001      	movlt	r0, #1
9001dc68:	4770      	bx	lr
9001dc6a:	490d      	ldr	r1, [pc, #52]	; (9001dca0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001dc6c:	8809      	ldrh	r1, [r1, #0]
9001dc6e:	4411      	add	r1, r2
9001dc70:	428b      	cmp	r3, r1
9001dc72:	da0d      	bge.n	9001dc90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001dc74:	1a9b      	subs	r3, r3, r2
9001dc76:	4a0b      	ldr	r2, [pc, #44]	; (9001dca4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001dc78:	210e      	movs	r1, #14
9001dc7a:	6812      	ldr	r2, [r2, #0]
9001dc7c:	fb01 2303 	mla	r3, r1, r3, r2
9001dc80:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001dc84:	891a      	ldrh	r2, [r3, #8]
9001dc86:	4291      	cmp	r1, r2
9001dc88:	db04      	blt.n	9001dc94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001dc8a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001dc8e:	e7e6      	b.n	9001dc5e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001dc90:	2000      	movs	r0, #0
9001dc92:	4770      	bx	lr
9001dc94:	2001      	movs	r0, #1
9001dc96:	4770      	bx	lr
9001dc98:	24028eb4 	.word	0x24028eb4
9001dc9c:	24028ebc 	.word	0x24028ebc
9001dca0:	24028eb8 	.word	0x24028eb8
9001dca4:	24028e9c 	.word	0x24028e9c

9001dca8 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001dca8:	4a12      	ldr	r2, [pc, #72]	; (9001dcf4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001dcaa:	8803      	ldrh	r3, [r0, #0]
9001dcac:	8811      	ldrh	r1, [r2, #0]
9001dcae:	428b      	cmp	r3, r1
9001dcb0:	d20b      	bcs.n	9001dcca <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001dcb2:	4a11      	ldr	r2, [pc, #68]	; (9001dcf8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001dcb4:	6812      	ldr	r2, [r2, #0]
9001dcb6:	b112      	cbz	r2, 9001dcbe <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001dcb8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001dcbc:	b9c0      	cbnz	r0, 9001dcf0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001dcbe:	4a0f      	ldr	r2, [pc, #60]	; (9001dcfc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001dcc0:	6811      	ldr	r1, [r2, #0]
9001dcc2:	2214      	movs	r2, #20
9001dcc4:	4353      	muls	r3, r2
9001dcc6:	58c8      	ldr	r0, [r1, r3]
9001dcc8:	4770      	bx	lr
9001dcca:	4a0d      	ldr	r2, [pc, #52]	; (9001dd00 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001dccc:	8812      	ldrh	r2, [r2, #0]
9001dcce:	440a      	add	r2, r1
9001dcd0:	4293      	cmp	r3, r2
9001dcd2:	da04      	bge.n	9001dcde <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001dcd4:	4a08      	ldr	r2, [pc, #32]	; (9001dcf8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001dcd6:	6812      	ldr	r2, [r2, #0]
9001dcd8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001dcdc:	4770      	bx	lr
9001dcde:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001dce2:	4293      	cmp	r3, r2
9001dce4:	d103      	bne.n	9001dcee <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001dce6:	4b07      	ldr	r3, [pc, #28]	; (9001dd04 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001dce8:	681b      	ldr	r3, [r3, #0]
9001dcea:	6c58      	ldr	r0, [r3, #68]	; 0x44
9001dcec:	4770      	bx	lr
9001dcee:	2000      	movs	r0, #0
9001dcf0:	4770      	bx	lr
9001dcf2:	bf00      	nop
9001dcf4:	24028eb4 	.word	0x24028eb4
9001dcf8:	24028e98 	.word	0x24028e98
9001dcfc:	24028ebc 	.word	0x24028ebc
9001dd00:	24028eb8 	.word	0x24028eb8
9001dd04:	24028e2c 	.word	0x24028e2c

9001dd08 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001dd08:	4b24      	ldr	r3, [pc, #144]	; (9001dd9c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001dd0a:	8802      	ldrh	r2, [r0, #0]
9001dd0c:	8818      	ldrh	r0, [r3, #0]
9001dd0e:	4282      	cmp	r2, r0
9001dd10:	d221      	bcs.n	9001dd56 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001dd12:	4b23      	ldr	r3, [pc, #140]	; (9001dda0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001dd14:	6819      	ldr	r1, [r3, #0]
9001dd16:	2314      	movs	r3, #20
9001dd18:	fb03 1302 	mla	r3, r3, r2, r1
9001dd1c:	6858      	ldr	r0, [r3, #4]
9001dd1e:	2800      	cmp	r0, #0
9001dd20:	d03a      	beq.n	9001dd98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001dd22:	4920      	ldr	r1, [pc, #128]	; (9001dda4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001dd24:	6809      	ldr	r1, [r1, #0]
9001dd26:	2900      	cmp	r1, #0
9001dd28:	d036      	beq.n	9001dd98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001dd2a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001dd2e:	2900      	cmp	r1, #0
9001dd30:	d032      	beq.n	9001dd98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001dd32:	891a      	ldrh	r2, [r3, #8]
9001dd34:	8958      	ldrh	r0, [r3, #10]
9001dd36:	4350      	muls	r0, r2
9001dd38:	7c5a      	ldrb	r2, [r3, #17]
9001dd3a:	7cdb      	ldrb	r3, [r3, #19]
9001dd3c:	0952      	lsrs	r2, r2, #5
9001dd3e:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001dd42:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001dd46:	2b0b      	cmp	r3, #11
9001dd48:	bf18      	it	ne
9001dd4a:	0040      	lslne	r0, r0, #1
9001dd4c:	3003      	adds	r0, #3
9001dd4e:	f020 0003 	bic.w	r0, r0, #3
9001dd52:	4408      	add	r0, r1
9001dd54:	4770      	bx	lr
9001dd56:	4b14      	ldr	r3, [pc, #80]	; (9001dda8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001dd58:	881b      	ldrh	r3, [r3, #0]
9001dd5a:	4403      	add	r3, r0
9001dd5c:	429a      	cmp	r2, r3
9001dd5e:	da1a      	bge.n	9001dd96 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001dd60:	4b12      	ldr	r3, [pc, #72]	; (9001ddac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001dd62:	1a10      	subs	r0, r2, r0
9001dd64:	210e      	movs	r1, #14
9001dd66:	681b      	ldr	r3, [r3, #0]
9001dd68:	fb01 3000 	mla	r0, r1, r0, r3
9001dd6c:	7b03      	ldrb	r3, [r0, #12]
9001dd6e:	f003 031f 	and.w	r3, r3, #31
9001dd72:	2b0b      	cmp	r3, #11
9001dd74:	d10b      	bne.n	9001dd8e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001dd76:	8903      	ldrh	r3, [r0, #8]
9001dd78:	8940      	ldrh	r0, [r0, #10]
9001dd7a:	4358      	muls	r0, r3
9001dd7c:	4b09      	ldr	r3, [pc, #36]	; (9001dda4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001dd7e:	3003      	adds	r0, #3
9001dd80:	6819      	ldr	r1, [r3, #0]
9001dd82:	f020 0303 	bic.w	r3, r0, #3
9001dd86:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001dd8a:	4418      	add	r0, r3
9001dd8c:	4770      	bx	lr
9001dd8e:	2b0d      	cmp	r3, #13
9001dd90:	d101      	bne.n	9001dd96 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001dd92:	300d      	adds	r0, #13
9001dd94:	4770      	bx	lr
9001dd96:	2000      	movs	r0, #0
9001dd98:	4770      	bx	lr
9001dd9a:	bf00      	nop
9001dd9c:	24028eb4 	.word	0x24028eb4
9001dda0:	24028ebc 	.word	0x24028ebc
9001dda4:	24028e98 	.word	0x24028e98
9001dda8:	24028eb8 	.word	0x24028eb8
9001ddac:	24028e9c 	.word	0x24028e9c

9001ddb0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001ddb0:	4a17      	ldr	r2, [pc, #92]	; (9001de10 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001ddb2:	b510      	push	{r4, lr}
9001ddb4:	8803      	ldrh	r3, [r0, #0]
9001ddb6:	8812      	ldrh	r2, [r2, #0]
9001ddb8:	4293      	cmp	r3, r2
9001ddba:	d20c      	bcs.n	9001ddd6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
9001ddbc:	4a15      	ldr	r2, [pc, #84]	; (9001de14 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
9001ddbe:	2114      	movs	r1, #20
9001ddc0:	6812      	ldr	r2, [r2, #0]
9001ddc2:	fb01 2303 	mla	r3, r1, r3, r2
9001ddc6:	7c58      	ldrb	r0, [r3, #17]
9001ddc8:	0942      	lsrs	r2, r0, #5
9001ddca:	7cd8      	ldrb	r0, [r3, #19]
9001ddcc:	f3c0 1042 	ubfx	r0, r0, #5, #3
9001ddd0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001ddd4:	bd10      	pop	{r4, pc}
9001ddd6:	4910      	ldr	r1, [pc, #64]	; (9001de18 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
9001ddd8:	8809      	ldrh	r1, [r1, #0]
9001ddda:	4411      	add	r1, r2
9001dddc:	428b      	cmp	r3, r1
9001ddde:	da09      	bge.n	9001ddf4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
9001dde0:	1a9b      	subs	r3, r3, r2
9001dde2:	4a0e      	ldr	r2, [pc, #56]	; (9001de1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001dde4:	210e      	movs	r1, #14
9001dde6:	6812      	ldr	r2, [r2, #0]
9001dde8:	fb01 2303 	mla	r3, r1, r3, r2
9001ddec:	7b18      	ldrb	r0, [r3, #12]
9001ddee:	f000 001f 	and.w	r0, r0, #31
9001ddf2:	e7ef      	b.n	9001ddd4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001ddf4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001ddf8:	4293      	cmp	r3, r2
9001ddfa:	d106      	bne.n	9001de0a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
9001ddfc:	f7f8 f916 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
9001de00:	6803      	ldr	r3, [r0, #0]
9001de02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001de06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001de08:	4718      	bx	r3
9001de0a:	2000      	movs	r0, #0
9001de0c:	e7e2      	b.n	9001ddd4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001de0e:	bf00      	nop
9001de10:	24028eb4 	.word	0x24028eb4
9001de14:	24028ebc 	.word	0x24028ebc
9001de18:	24028eb8 	.word	0x24028eb8
9001de1c:	24028e9c 	.word	0x24028e9c

9001de20 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001de20:	2010      	movs	r0, #16
9001de22:	4770      	bx	lr

9001de24 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001de24:	4b02      	ldr	r3, [pc, #8]	; (9001de30 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001de26:	8818      	ldrh	r0, [r3, #0]
9001de28:	0040      	lsls	r0, r0, #1
9001de2a:	b280      	uxth	r0, r0
9001de2c:	4770      	bx	lr
9001de2e:	bf00      	nop
9001de30:	24028e26 	.word	0x24028e26

9001de34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001de34:	2bff      	cmp	r3, #255	; 0xff
9001de36:	d050      	beq.n	9001deda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001de38:	2a0b      	cmp	r2, #11
9001de3a:	d04a      	beq.n	9001ded2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001de3c:	d80e      	bhi.n	9001de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001de3e:	2a03      	cmp	r2, #3
9001de40:	d03f      	beq.n	9001dec2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001de42:	d804      	bhi.n	9001de4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001de44:	2a01      	cmp	r2, #1
9001de46:	d03e      	beq.n	9001dec6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
9001de48:	d93f      	bls.n	9001deca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
9001de4a:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001de4c:	4770      	bx	lr
9001de4e:	2a09      	cmp	r2, #9
9001de50:	d03f      	beq.n	9001ded2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001de52:	d83c      	bhi.n	9001dece <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001de54:	2a08      	cmp	r2, #8
9001de56:	d03a      	beq.n	9001dece <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001de58:	2000      	movs	r0, #0
9001de5a:	4770      	bx	lr
9001de5c:	2a2f      	cmp	r2, #47	; 0x2f
9001de5e:	d024      	beq.n	9001deaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
9001de60:	d80d      	bhi.n	9001de7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001de62:	2a2d      	cmp	r2, #45	; 0x2d
9001de64:	d014      	beq.n	9001de90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001de66:	d826      	bhi.n	9001deb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001de68:	2a2c      	cmp	r2, #44	; 0x2c
9001de6a:	d1f5      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001de6c:	684b      	ldr	r3, [r1, #4]
9001de6e:	781b      	ldrb	r3, [r3, #0]
9001de70:	2b01      	cmp	r3, #1
9001de72:	d018      	beq.n	9001dea6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001de74:	d323      	bcc.n	9001debe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001de76:	2b02      	cmp	r3, #2
9001de78:	d1ee      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001de7a:	6880      	ldr	r0, [r0, #8]
9001de7c:	4770      	bx	lr
9001de7e:	2a31      	cmp	r2, #49	; 0x31
9001de80:	d004      	beq.n	9001de8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001de82:	d328      	bcc.n	9001ded6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001de84:	2a32      	cmp	r2, #50	; 0x32
9001de86:	d026      	beq.n	9001ded6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001de88:	2a33      	cmp	r2, #51	; 0x33
9001de8a:	d1e5      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001de8c:	6f00      	ldr	r0, [r0, #112]	; 0x70
9001de8e:	4770      	bx	lr
9001de90:	684b      	ldr	r3, [r1, #4]
9001de92:	781b      	ldrb	r3, [r3, #0]
9001de94:	2b01      	cmp	r3, #1
9001de96:	d004      	beq.n	9001dea2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
9001de98:	d30b      	bcc.n	9001deb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001de9a:	2b02      	cmp	r3, #2
9001de9c:	d1dc      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001de9e:	6900      	ldr	r0, [r0, #16]
9001dea0:	4770      	bx	lr
9001dea2:	6a00      	ldr	r0, [r0, #32]
9001dea4:	4770      	bx	lr
9001dea6:	6980      	ldr	r0, [r0, #24]
9001dea8:	4770      	bx	lr
9001deaa:	684b      	ldr	r3, [r1, #4]
9001deac:	781b      	ldrb	r3, [r3, #0]
9001deae:	2b00      	cmp	r3, #0
9001deb0:	d1d2      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001deb2:	6b00      	ldr	r0, [r0, #48]	; 0x30
9001deb4:	4770      	bx	lr
9001deb6:	684b      	ldr	r3, [r1, #4]
9001deb8:	781b      	ldrb	r3, [r3, #0]
9001deba:	2b00      	cmp	r3, #0
9001debc:	d1cc      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001debe:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001dec0:	4770      	bx	lr
9001dec2:	6c80      	ldr	r0, [r0, #72]	; 0x48
9001dec4:	4770      	bx	lr
9001dec6:	6d00      	ldr	r0, [r0, #80]	; 0x50
9001dec8:	4770      	bx	lr
9001deca:	6c00      	ldr	r0, [r0, #64]	; 0x40
9001decc:	4770      	bx	lr
9001dece:	6d80      	ldr	r0, [r0, #88]	; 0x58
9001ded0:	4770      	bx	lr
9001ded2:	6e00      	ldr	r0, [r0, #96]	; 0x60
9001ded4:	4770      	bx	lr
9001ded6:	6e80      	ldr	r0, [r0, #104]	; 0x68
9001ded8:	4770      	bx	lr
9001deda:	2a0b      	cmp	r2, #11
9001dedc:	d049      	beq.n	9001df72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001dede:	d80e      	bhi.n	9001defe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
9001dee0:	2a03      	cmp	r2, #3
9001dee2:	d040      	beq.n	9001df66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001dee4:	d804      	bhi.n	9001def0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001dee6:	2a01      	cmp	r2, #1
9001dee8:	d03f      	beq.n	9001df6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
9001deea:	d940      	bls.n	9001df6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
9001deec:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9001deee:	4770      	bx	lr
9001def0:	2a09      	cmp	r2, #9
9001def2:	d03e      	beq.n	9001df72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001def4:	d801      	bhi.n	9001defa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001def6:	2a08      	cmp	r2, #8
9001def8:	d1ae      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001defa:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
9001defc:	4770      	bx	lr
9001defe:	2a2f      	cmp	r2, #47	; 0x2f
9001df00:	d024      	beq.n	9001df4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001df02:	d80d      	bhi.n	9001df20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001df04:	2a2d      	cmp	r2, #45	; 0x2d
9001df06:	d014      	beq.n	9001df32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
9001df08:	d826      	bhi.n	9001df58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
9001df0a:	2a2c      	cmp	r2, #44	; 0x2c
9001df0c:	d1a4      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001df0e:	684b      	ldr	r3, [r1, #4]
9001df10:	781b      	ldrb	r3, [r3, #0]
9001df12:	2b01      	cmp	r3, #1
9001df14:	d018      	beq.n	9001df48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001df16:	d324      	bcc.n	9001df62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
9001df18:	2b02      	cmp	r3, #2
9001df1a:	d19d      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001df1c:	68c0      	ldr	r0, [r0, #12]
9001df1e:	4770      	bx	lr
9001df20:	2a31      	cmp	r2, #49	; 0x31
9001df22:	d004      	beq.n	9001df2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001df24:	d327      	bcc.n	9001df76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001df26:	2a32      	cmp	r2, #50	; 0x32
9001df28:	d025      	beq.n	9001df76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001df2a:	2a33      	cmp	r2, #51	; 0x33
9001df2c:	d194      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001df2e:	6f40      	ldr	r0, [r0, #116]	; 0x74
9001df30:	4770      	bx	lr
9001df32:	684b      	ldr	r3, [r1, #4]
9001df34:	781b      	ldrb	r3, [r3, #0]
9001df36:	2b01      	cmp	r3, #1
9001df38:	d004      	beq.n	9001df44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001df3a:	d30b      	bcc.n	9001df54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
9001df3c:	2b02      	cmp	r3, #2
9001df3e:	d18b      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001df40:	6940      	ldr	r0, [r0, #20]
9001df42:	4770      	bx	lr
9001df44:	6a40      	ldr	r0, [r0, #36]	; 0x24
9001df46:	4770      	bx	lr
9001df48:	69c0      	ldr	r0, [r0, #28]
9001df4a:	4770      	bx	lr
9001df4c:	684b      	ldr	r3, [r1, #4]
9001df4e:	781b      	ldrb	r3, [r3, #0]
9001df50:	2b00      	cmp	r3, #0
9001df52:	d181      	bne.n	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001df54:	6b40      	ldr	r0, [r0, #52]	; 0x34
9001df56:	4770      	bx	lr
9001df58:	684b      	ldr	r3, [r1, #4]
9001df5a:	781b      	ldrb	r3, [r3, #0]
9001df5c:	2b00      	cmp	r3, #0
9001df5e:	f47f af7b 	bne.w	9001de58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001df62:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
9001df64:	4770      	bx	lr
9001df66:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001df68:	4770      	bx	lr
9001df6a:	6d40      	ldr	r0, [r0, #84]	; 0x54
9001df6c:	4770      	bx	lr
9001df6e:	6c40      	ldr	r0, [r0, #68]	; 0x44
9001df70:	4770      	bx	lr
9001df72:	6e40      	ldr	r0, [r0, #100]	; 0x64
9001df74:	4770      	bx	lr
9001df76:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
9001df78:	4770      	bx	lr

9001df7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001df7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001df7e:	b087      	sub	sp, #28
9001df80:	9815      	ldr	r0, [sp, #84]	; 0x54
9001df82:	9205      	str	r2, [sp, #20]
9001df84:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001df88:	9101      	str	r1, [sp, #4]
9001df8a:	9202      	str	r2, [sp, #8]
9001df8c:	6841      	ldr	r1, [r0, #4]
9001df8e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001df92:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001df96:	fb01 2404 	mla	r4, r1, r4, r2
9001df9a:	6802      	ldr	r2, [r0, #0]
9001df9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001dfa0:	f8de 2000 	ldr.w	r2, [lr]
9001dfa4:	9203      	str	r2, [sp, #12]
9001dfa6:	f8de 2004 	ldr.w	r2, [lr, #4]
9001dfaa:	3204      	adds	r2, #4
9001dfac:	9204      	str	r2, [sp, #16]
9001dfae:	9a02      	ldr	r2, [sp, #8]
9001dfb0:	43d6      	mvns	r6, r2
9001dfb2:	b2f6      	uxtb	r6, r6
9001dfb4:	9a01      	ldr	r2, [sp, #4]
9001dfb6:	2a00      	cmp	r2, #0
9001dfb8:	dc03      	bgt.n	9001dfc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001dfba:	9a05      	ldr	r2, [sp, #20]
9001dfbc:	2a00      	cmp	r2, #0
9001dfbe:	f340 8129 	ble.w	9001e214 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001dfc2:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001dfc4:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001dfc8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001dfcc:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001dfce:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001dfd2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001dfd6:	2b00      	cmp	r3, #0
9001dfd8:	dd0e      	ble.n	9001dff8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001dfda:	1408      	asrs	r0, r1, #16
9001dfdc:	d405      	bmi.n	9001dfea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001dfde:	4560      	cmp	r0, ip
9001dfe0:	da03      	bge.n	9001dfea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001dfe2:	1410      	asrs	r0, r2, #16
9001dfe4:	d401      	bmi.n	9001dfea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001dfe6:	42b8      	cmp	r0, r7
9001dfe8:	db07      	blt.n	9001dffa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001dfea:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001dfec:	3b01      	subs	r3, #1
9001dfee:	3402      	adds	r4, #2
9001dff0:	4401      	add	r1, r0
9001dff2:	9814      	ldr	r0, [sp, #80]	; 0x50
9001dff4:	4402      	add	r2, r0
9001dff6:	e7ee      	b.n	9001dfd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001dff8:	d071      	beq.n	9001e0de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dffa:	1e58      	subs	r0, r3, #1
9001dffc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001dffe:	fb05 1500 	mla	r5, r5, r0, r1
9001e002:	142d      	asrs	r5, r5, #16
9001e004:	d45f      	bmi.n	9001e0c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001e006:	4565      	cmp	r5, ip
9001e008:	da5d      	bge.n	9001e0c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001e00a:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001e00c:	fb05 2000 	mla	r0, r5, r0, r2
9001e010:	1400      	asrs	r0, r0, #16
9001e012:	d458      	bmi.n	9001e0c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001e014:	42b8      	cmp	r0, r7
9001e016:	da56      	bge.n	9001e0c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001e018:	4699      	mov	r9, r3
9001e01a:	46a2      	mov	sl, r4
9001e01c:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001e020:	f1b9 0f00 	cmp.w	r9, #0
9001e024:	dd57      	ble.n	9001e0d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001e026:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001e02a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001e02e:	9803      	ldr	r0, [sp, #12]
9001e030:	140d      	asrs	r5, r1, #16
9001e032:	f109 39ff 	add.w	r9, r9, #4294967295
9001e036:	fb07 000c 	mla	r0, r7, ip, r0
9001e03a:	5d40      	ldrb	r0, [r0, r5]
9001e03c:	9d04      	ldr	r5, [sp, #16]
9001e03e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001e042:	f8ba 5000 	ldrh.w	r5, [sl]
9001e046:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001e04a:	122f      	asrs	r7, r5, #8
9001e04c:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001e050:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e054:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e058:	00ed      	lsls	r5, r5, #3
9001e05a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001e05e:	fb17 f706 	smulbb	r7, r7, r6
9001e062:	b2ed      	uxtb	r5, r5
9001e064:	fb18 f806 	smulbb	r8, r8, r6
9001e068:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001e06c:	10c7      	asrs	r7, r0, #3
9001e06e:	fb15 f506 	smulbb	r5, r5, r6
9001e072:	00c0      	lsls	r0, r0, #3
9001e074:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e078:	fa1f fc8c 	uxth.w	ip, ip
9001e07c:	b2c0      	uxtb	r0, r0
9001e07e:	fb07 870b 	mla	r7, r7, fp, r8
9001e082:	fb00 500b 	mla	r0, r0, fp, r5
9001e086:	f10c 0501 	add.w	r5, ip, #1
9001e08a:	b2bf      	uxth	r7, r7
9001e08c:	b280      	uxth	r0, r0
9001e08e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e092:	f107 0801 	add.w	r8, r7, #1
9001e096:	1c45      	adds	r5, r0, #1
9001e098:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001e09c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001e0a0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e0a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001e0a6:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001e0aa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e0ae:	4401      	add	r1, r0
9001e0b0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001e0b4:	9814      	ldr	r0, [sp, #80]	; 0x50
9001e0b6:	ea45 0c0c 	orr.w	ip, r5, ip
9001e0ba:	4402      	add	r2, r0
9001e0bc:	ea4c 0c08 	orr.w	ip, ip, r8
9001e0c0:	f82a cb02 	strh.w	ip, [sl], #2
9001e0c4:	e7ac      	b.n	9001e020 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001e0c6:	f04f 0800 	mov.w	r8, #0
9001e0ca:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001e0ce:	eb03 0008 	add.w	r0, r3, r8
9001e0d2:	2800      	cmp	r0, #0
9001e0d4:	dc41      	bgt.n	9001e15a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001e0d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e0da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e0de:	9b01      	ldr	r3, [sp, #4]
9001e0e0:	2b00      	cmp	r3, #0
9001e0e2:	f340 8097 	ble.w	9001e214 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001e0e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001e0ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e0ec:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e0f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e0f4:	eef0 6a62 	vmov.f32	s13, s5
9001e0f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001e0fc:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e100:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e104:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001e108:	eef0 6a43 	vmov.f32	s13, s6
9001e10c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e110:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001e114:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e118:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e11c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e120:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e124:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e128:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e12c:	ee12 2a90 	vmov	r2, s5
9001e130:	eef0 2a47 	vmov.f32	s5, s14
9001e134:	fb92 f3f3 	sdiv	r3, r2, r3
9001e138:	ee13 2a10 	vmov	r2, s6
9001e13c:	9313      	str	r3, [sp, #76]	; 0x4c
9001e13e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e140:	eeb0 3a67 	vmov.f32	s6, s15
9001e144:	fb92 f3f3 	sdiv	r3, r2, r3
9001e148:	9314      	str	r3, [sp, #80]	; 0x50
9001e14a:	9b01      	ldr	r3, [sp, #4]
9001e14c:	9a05      	ldr	r2, [sp, #20]
9001e14e:	3b01      	subs	r3, #1
9001e150:	9301      	str	r3, [sp, #4]
9001e152:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e154:	bf08      	it	eq
9001e156:	4613      	moveq	r3, r2
9001e158:	e72c      	b.n	9001dfb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001e15a:	140f      	asrs	r7, r1, #16
9001e15c:	d453      	bmi.n	9001e206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001e15e:	f8de 5008 	ldr.w	r5, [lr, #8]
9001e162:	42bd      	cmp	r5, r7
9001e164:	dd4f      	ble.n	9001e206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001e166:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001e16a:	d44c      	bmi.n	9001e206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001e16c:	f8de 000c 	ldr.w	r0, [lr, #12]
9001e170:	4560      	cmp	r0, ip
9001e172:	dd48      	ble.n	9001e206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001e174:	9803      	ldr	r0, [sp, #12]
9001e176:	b22d      	sxth	r5, r5
9001e178:	fb0c 0505 	mla	r5, ip, r5, r0
9001e17c:	5de8      	ldrb	r0, [r5, r7]
9001e17e:	9d04      	ldr	r5, [sp, #16]
9001e180:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001e184:	f06f 0501 	mvn.w	r5, #1
9001e188:	fb05 fb08 	mul.w	fp, r5, r8
9001e18c:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001e190:	f834 500b 	ldrh.w	r5, [r4, fp]
9001e194:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e198:	122f      	asrs	r7, r5, #8
9001e19a:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001e19e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e1a2:	00ed      	lsls	r5, r5, #3
9001e1a4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001e1a8:	fb17 f706 	smulbb	r7, r7, r6
9001e1ac:	b2ed      	uxtb	r5, r5
9001e1ae:	fb19 f906 	smulbb	r9, r9, r6
9001e1b2:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001e1b6:	10c7      	asrs	r7, r0, #3
9001e1b8:	fb15 f506 	smulbb	r5, r5, r6
9001e1bc:	00c0      	lsls	r0, r0, #3
9001e1be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e1c2:	fa1f fc8c 	uxth.w	ip, ip
9001e1c6:	b2c0      	uxtb	r0, r0
9001e1c8:	fb07 970a 	mla	r7, r7, sl, r9
9001e1cc:	fb00 500a 	mla	r0, r0, sl, r5
9001e1d0:	f10c 0501 	add.w	r5, ip, #1
9001e1d4:	b2bf      	uxth	r7, r7
9001e1d6:	b280      	uxth	r0, r0
9001e1d8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e1dc:	f107 0901 	add.w	r9, r7, #1
9001e1e0:	1c45      	adds	r5, r0, #1
9001e1e2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001e1e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001e1ea:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e1ee:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001e1f2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e1f6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001e1fa:	ea45 0c0c 	orr.w	ip, r5, ip
9001e1fe:	ea4c 0c09 	orr.w	ip, ip, r9
9001e202:	f824 c00b 	strh.w	ip, [r4, fp]
9001e206:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001e208:	f108 38ff 	add.w	r8, r8, #4294967295
9001e20c:	4401      	add	r1, r0
9001e20e:	9814      	ldr	r0, [sp, #80]	; 0x50
9001e210:	4402      	add	r2, r0
9001e212:	e75c      	b.n	9001e0ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001e214:	b007      	add	sp, #28
9001e216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e21a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e21a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e21e:	b085      	sub	sp, #20
9001e220:	4693      	mov	fp, r2
9001e222:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001e226:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001e228:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001e22a:	6870      	ldr	r0, [r6, #4]
9001e22c:	9100      	str	r1, [sp, #0]
9001e22e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001e232:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001e236:	fb00 2404 	mla	r4, r0, r4, r2
9001e23a:	6832      	ldr	r2, [r6, #0]
9001e23c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e240:	682a      	ldr	r2, [r5, #0]
9001e242:	9201      	str	r2, [sp, #4]
9001e244:	686a      	ldr	r2, [r5, #4]
9001e246:	3204      	adds	r2, #4
9001e248:	9202      	str	r2, [sp, #8]
9001e24a:	9a00      	ldr	r2, [sp, #0]
9001e24c:	2a00      	cmp	r2, #0
9001e24e:	dc03      	bgt.n	9001e258 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001e250:	f1bb 0f00 	cmp.w	fp, #0
9001e254:	f340 80a0 	ble.w	9001e398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001e258:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001e25a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001e25e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001e262:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001e264:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001e268:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001e26c:	2b00      	cmp	r3, #0
9001e26e:	dd0c      	ble.n	9001e28a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e270:	1406      	asrs	r6, r0, #16
9001e272:	d405      	bmi.n	9001e280 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e274:	454e      	cmp	r6, r9
9001e276:	da03      	bge.n	9001e280 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e278:	1416      	asrs	r6, r2, #16
9001e27a:	d401      	bmi.n	9001e280 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e27c:	4546      	cmp	r6, r8
9001e27e:	db05      	blt.n	9001e28c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e280:	4470      	add	r0, lr
9001e282:	4462      	add	r2, ip
9001e284:	3b01      	subs	r3, #1
9001e286:	3402      	adds	r4, #2
9001e288:	e7f0      	b.n	9001e26c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001e28a:	d00f      	beq.n	9001e2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001e28c:	1e5e      	subs	r6, r3, #1
9001e28e:	fb0e 0706 	mla	r7, lr, r6, r0
9001e292:	143f      	asrs	r7, r7, #16
9001e294:	d541      	bpl.n	9001e31a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001e296:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001e29a:	4698      	mov	r8, r3
9001e29c:	9603      	str	r6, [sp, #12]
9001e29e:	f1b8 0f00 	cmp.w	r8, #0
9001e2a2:	dc59      	bgt.n	9001e358 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e2a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e2a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e2ac:	9b00      	ldr	r3, [sp, #0]
9001e2ae:	2b00      	cmp	r3, #0
9001e2b0:	dd72      	ble.n	9001e398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001e2b2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e2b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001e2b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e2bc:	eeb0 6a62 	vmov.f32	s12, s5
9001e2c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e2c4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e2c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e2cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001e2d0:	eeb0 6a43 	vmov.f32	s12, s6
9001e2d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e2d8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001e2dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e2e0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e2e4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e2e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e2ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e2f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e2f4:	ee12 2a90 	vmov	r2, s5
9001e2f8:	eef0 2a47 	vmov.f32	s5, s14
9001e2fc:	fb92 fef3 	sdiv	lr, r2, r3
9001e300:	ee13 2a10 	vmov	r2, s6
9001e304:	eeb0 3a67 	vmov.f32	s6, s15
9001e308:	fb92 fcf3 	sdiv	ip, r2, r3
9001e30c:	9b00      	ldr	r3, [sp, #0]
9001e30e:	3b01      	subs	r3, #1
9001e310:	9300      	str	r3, [sp, #0]
9001e312:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001e314:	bf08      	it	eq
9001e316:	465b      	moveq	r3, fp
9001e318:	e797      	b.n	9001e24a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001e31a:	454f      	cmp	r7, r9
9001e31c:	dabb      	bge.n	9001e296 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001e31e:	fb0c 2606 	mla	r6, ip, r6, r2
9001e322:	1436      	asrs	r6, r6, #16
9001e324:	d4b7      	bmi.n	9001e296 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001e326:	4546      	cmp	r6, r8
9001e328:	dab5      	bge.n	9001e296 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001e32a:	461e      	mov	r6, r3
9001e32c:	46a0      	mov	r8, r4
9001e32e:	2e00      	cmp	r6, #0
9001e330:	ddb8      	ble.n	9001e2a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001e332:	1417      	asrs	r7, r2, #16
9001e334:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001e338:	9901      	ldr	r1, [sp, #4]
9001e33a:	ea4f 4920 	mov.w	r9, r0, asr #16
9001e33e:	4462      	add	r2, ip
9001e340:	4470      	add	r0, lr
9001e342:	fb0a 1707 	mla	r7, sl, r7, r1
9001e346:	9902      	ldr	r1, [sp, #8]
9001e348:	3e01      	subs	r6, #1
9001e34a:	f817 7009 	ldrb.w	r7, [r7, r9]
9001e34e:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001e352:	f828 7b02 	strh.w	r7, [r8], #2
9001e356:	e7ea      	b.n	9001e32e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001e358:	ea5f 4920 	movs.w	r9, r0, asr #16
9001e35c:	d417      	bmi.n	9001e38e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001e35e:	68ae      	ldr	r6, [r5, #8]
9001e360:	454e      	cmp	r6, r9
9001e362:	dd14      	ble.n	9001e38e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001e364:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001e368:	d411      	bmi.n	9001e38e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001e36a:	68ef      	ldr	r7, [r5, #12]
9001e36c:	4557      	cmp	r7, sl
9001e36e:	dd0e      	ble.n	9001e38e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001e370:	9f01      	ldr	r7, [sp, #4]
9001e372:	b236      	sxth	r6, r6
9001e374:	f06f 0101 	mvn.w	r1, #1
9001e378:	fb0a 7606 	mla	r6, sl, r6, r7
9001e37c:	9f02      	ldr	r7, [sp, #8]
9001e37e:	f816 6009 	ldrb.w	r6, [r6, r9]
9001e382:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001e386:	fb01 f608 	mul.w	r6, r1, r8
9001e38a:	9903      	ldr	r1, [sp, #12]
9001e38c:	538f      	strh	r7, [r1, r6]
9001e38e:	4470      	add	r0, lr
9001e390:	4462      	add	r2, ip
9001e392:	f108 38ff 	add.w	r8, r8, #4294967295
9001e396:	e782      	b.n	9001e29e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001e398:	b005      	add	sp, #20
9001e39a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e39e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e39e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e3a2:	b087      	sub	sp, #28
9001e3a4:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001e3a6:	9205      	str	r2, [sp, #20]
9001e3a8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001e3ac:	9102      	str	r1, [sp, #8]
9001e3ae:	9203      	str	r2, [sp, #12]
9001e3b0:	6861      	ldr	r1, [r4, #4]
9001e3b2:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001e3b6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001e3ba:	fb01 2000 	mla	r0, r1, r0, r2
9001e3be:	6822      	ldr	r2, [r4, #0]
9001e3c0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001e3c4:	9200      	str	r2, [sp, #0]
9001e3c6:	f8dc 2000 	ldr.w	r2, [ip]
9001e3ca:	9204      	str	r2, [sp, #16]
9001e3cc:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001e3d0:	3204      	adds	r2, #4
9001e3d2:	9201      	str	r2, [sp, #4]
9001e3d4:	9a03      	ldr	r2, [sp, #12]
9001e3d6:	43d5      	mvns	r5, r2
9001e3d8:	b2ed      	uxtb	r5, r5
9001e3da:	9a02      	ldr	r2, [sp, #8]
9001e3dc:	2a00      	cmp	r2, #0
9001e3de:	dc03      	bgt.n	9001e3e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001e3e0:	9a05      	ldr	r2, [sp, #20]
9001e3e2:	2a00      	cmp	r2, #0
9001e3e4:	f340 812c 	ble.w	9001e640 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001e3e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001e3ea:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001e3ee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001e3f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001e3f4:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001e3f8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001e3fc:	2b00      	cmp	r3, #0
9001e3fe:	dd10      	ble.n	9001e422 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001e400:	140c      	asrs	r4, r1, #16
9001e402:	d405      	bmi.n	9001e410 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e404:	4574      	cmp	r4, lr
9001e406:	da03      	bge.n	9001e410 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e408:	1414      	asrs	r4, r2, #16
9001e40a:	d401      	bmi.n	9001e410 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e40c:	42bc      	cmp	r4, r7
9001e40e:	db09      	blt.n	9001e424 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001e410:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001e412:	3b01      	subs	r3, #1
9001e414:	9800      	ldr	r0, [sp, #0]
9001e416:	4421      	add	r1, r4
9001e418:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001e41a:	3002      	adds	r0, #2
9001e41c:	4422      	add	r2, r4
9001e41e:	9000      	str	r0, [sp, #0]
9001e420:	e7ec      	b.n	9001e3fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001e422:	d071      	beq.n	9001e508 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001e424:	1e5c      	subs	r4, r3, #1
9001e426:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001e428:	fb06 1604 	mla	r6, r6, r4, r1
9001e42c:	1436      	asrs	r6, r6, #16
9001e42e:	d45d      	bmi.n	9001e4ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001e430:	4576      	cmp	r6, lr
9001e432:	da5b      	bge.n	9001e4ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001e434:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001e436:	fb06 2404 	mla	r4, r6, r4, r2
9001e43a:	1424      	asrs	r4, r4, #16
9001e43c:	d456      	bmi.n	9001e4ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001e43e:	42bc      	cmp	r4, r7
9001e440:	da54      	bge.n	9001e4ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001e442:	4698      	mov	r8, r3
9001e444:	f8dd 9000 	ldr.w	r9, [sp]
9001e448:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001e44c:	f1b8 0f00 	cmp.w	r8, #0
9001e450:	dd54      	ble.n	9001e4fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001e452:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001e456:	1414      	asrs	r4, r2, #16
9001e458:	9804      	ldr	r0, [sp, #16]
9001e45a:	140e      	asrs	r6, r1, #16
9001e45c:	f108 38ff 	add.w	r8, r8, #4294967295
9001e460:	fb07 0404 	mla	r4, r7, r4, r0
9001e464:	9801      	ldr	r0, [sp, #4]
9001e466:	f814 e006 	ldrb.w	lr, [r4, r6]
9001e46a:	f8b9 4000 	ldrh.w	r4, [r9]
9001e46e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001e472:	1227      	asrs	r7, r4, #8
9001e474:	eb00 0b0e 	add.w	fp, r0, lr
9001e478:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001e47c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e480:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001e482:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001e486:	f89b b001 	ldrb.w	fp, [fp, #1]
9001e48a:	4401      	add	r1, r0
9001e48c:	fb16 f60a 	smulbb	r6, r6, sl
9001e490:	9814      	ldr	r0, [sp, #80]	; 0x50
9001e492:	fb1b fb0a 	smulbb	fp, fp, sl
9001e496:	fb07 6705 	mla	r7, r7, r5, r6
9001e49a:	10e6      	asrs	r6, r4, #3
9001e49c:	00e4      	lsls	r4, r4, #3
9001e49e:	4402      	add	r2, r0
9001e4a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001e4a4:	b2bf      	uxth	r7, r7
9001e4a6:	b2e4      	uxtb	r4, r4
9001e4a8:	fb06 b605 	mla	r6, r6, r5, fp
9001e4ac:	fb14 f405 	smulbb	r4, r4, r5
9001e4b0:	b2b6      	uxth	r6, r6
9001e4b2:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001e4b6:	1c7c      	adds	r4, r7, #1
9001e4b8:	f106 0b01 	add.w	fp, r6, #1
9001e4bc:	fa1f fe8e 	uxth.w	lr, lr
9001e4c0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001e4c4:	f10e 0401 	add.w	r4, lr, #1
9001e4c8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001e4cc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001e4d0:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001e4d4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001e4d8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001e4dc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001e4e0:	4327      	orrs	r7, r4
9001e4e2:	ea47 070b 	orr.w	r7, r7, fp
9001e4e6:	f829 7b02 	strh.w	r7, [r9], #2
9001e4ea:	e7af      	b.n	9001e44c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001e4ec:	f04f 0e00 	mov.w	lr, #0
9001e4f0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001e4f4:	eb03 040e 	add.w	r4, r3, lr
9001e4f8:	2c00      	cmp	r4, #0
9001e4fa:	dc43      	bgt.n	9001e584 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001e4fc:	9a00      	ldr	r2, [sp, #0]
9001e4fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e502:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e506:	9300      	str	r3, [sp, #0]
9001e508:	9b02      	ldr	r3, [sp, #8]
9001e50a:	2b00      	cmp	r3, #0
9001e50c:	f340 8098 	ble.w	9001e640 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001e510:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001e514:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e516:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e51a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e51e:	eef0 6a62 	vmov.f32	s13, s5
9001e522:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001e526:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e52a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e52e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001e532:	eef0 6a43 	vmov.f32	s13, s6
9001e536:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e53a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001e53e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e542:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e546:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e54a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e54e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e552:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e556:	ee12 2a90 	vmov	r2, s5
9001e55a:	eef0 2a47 	vmov.f32	s5, s14
9001e55e:	fb92 f3f3 	sdiv	r3, r2, r3
9001e562:	ee13 2a10 	vmov	r2, s6
9001e566:	9313      	str	r3, [sp, #76]	; 0x4c
9001e568:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e56a:	eeb0 3a67 	vmov.f32	s6, s15
9001e56e:	fb92 f3f3 	sdiv	r3, r2, r3
9001e572:	9314      	str	r3, [sp, #80]	; 0x50
9001e574:	9b02      	ldr	r3, [sp, #8]
9001e576:	9a05      	ldr	r2, [sp, #20]
9001e578:	3b01      	subs	r3, #1
9001e57a:	9302      	str	r3, [sp, #8]
9001e57c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e57e:	bf08      	it	eq
9001e580:	4613      	moveq	r3, r2
9001e582:	e72a      	b.n	9001e3da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001e584:	140f      	asrs	r7, r1, #16
9001e586:	d454      	bmi.n	9001e632 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001e588:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001e58c:	42be      	cmp	r6, r7
9001e58e:	dd50      	ble.n	9001e632 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001e590:	ea5f 4822 	movs.w	r8, r2, asr #16
9001e594:	d44d      	bmi.n	9001e632 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001e596:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001e59a:	4544      	cmp	r4, r8
9001e59c:	dd49      	ble.n	9001e632 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001e59e:	9c04      	ldr	r4, [sp, #16]
9001e5a0:	b236      	sxth	r6, r6
9001e5a2:	f06f 0001 	mvn.w	r0, #1
9001e5a6:	fb08 4606 	mla	r6, r8, r6, r4
9001e5aa:	9c01      	ldr	r4, [sp, #4]
9001e5ac:	fb00 fa0e 	mul.w	sl, r0, lr
9001e5b0:	9800      	ldr	r0, [sp, #0]
9001e5b2:	f816 8007 	ldrb.w	r8, [r6, r7]
9001e5b6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001e5ba:	eb04 0b08 	add.w	fp, r4, r8
9001e5be:	f830 400a 	ldrh.w	r4, [r0, sl]
9001e5c2:	9801      	ldr	r0, [sp, #4]
9001e5c4:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001e5c8:	1227      	asrs	r7, r4, #8
9001e5ca:	f89b b001 	ldrb.w	fp, [fp, #1]
9001e5ce:	fb16 f609 	smulbb	r6, r6, r9
9001e5d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e5d6:	f810 8008 	ldrb.w	r8, [r0, r8]
9001e5da:	fb1b fb09 	smulbb	fp, fp, r9
9001e5de:	fb07 6705 	mla	r7, r7, r5, r6
9001e5e2:	10e6      	asrs	r6, r4, #3
9001e5e4:	00e4      	lsls	r4, r4, #3
9001e5e6:	9800      	ldr	r0, [sp, #0]
9001e5e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001e5ec:	b2bf      	uxth	r7, r7
9001e5ee:	b2e4      	uxtb	r4, r4
9001e5f0:	fb06 b605 	mla	r6, r6, r5, fp
9001e5f4:	fb14 f405 	smulbb	r4, r4, r5
9001e5f8:	b2b6      	uxth	r6, r6
9001e5fa:	fb08 4809 	mla	r8, r8, r9, r4
9001e5fe:	1c7c      	adds	r4, r7, #1
9001e600:	f106 0b01 	add.w	fp, r6, #1
9001e604:	fa1f f888 	uxth.w	r8, r8
9001e608:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001e60c:	f108 0401 	add.w	r4, r8, #1
9001e610:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001e614:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001e618:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001e61c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001e620:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001e624:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001e628:	4327      	orrs	r7, r4
9001e62a:	ea47 070b 	orr.w	r7, r7, fp
9001e62e:	f820 700a 	strh.w	r7, [r0, sl]
9001e632:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001e634:	f10e 3eff 	add.w	lr, lr, #4294967295
9001e638:	4401      	add	r1, r0
9001e63a:	9814      	ldr	r0, [sp, #80]	; 0x50
9001e63c:	4402      	add	r2, r0
9001e63e:	e759      	b.n	9001e4f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001e640:	b007      	add	sp, #28
9001e642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001e648 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e64c:	b085      	sub	sp, #20
9001e64e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001e652:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001e654:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001e656:	9203      	str	r2, [sp, #12]
9001e658:	6870      	ldr	r0, [r6, #4]
9001e65a:	686f      	ldr	r7, [r5, #4]
9001e65c:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
9001e660:	3704      	adds	r7, #4
9001e662:	9101      	str	r1, [sp, #4]
9001e664:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001e668:	fb00 2404 	mla	r4, r0, r4, r2
9001e66c:	6832      	ldr	r2, [r6, #0]
9001e66e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e672:	682a      	ldr	r2, [r5, #0]
9001e674:	9202      	str	r2, [sp, #8]
9001e676:	9a01      	ldr	r2, [sp, #4]
9001e678:	2a00      	cmp	r2, #0
9001e67a:	dc03      	bgt.n	9001e684 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001e67c:	9a03      	ldr	r2, [sp, #12]
9001e67e:	2a00      	cmp	r2, #0
9001e680:	f340 80cc 	ble.w	9001e81c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001e684:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001e686:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001e68a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001e68e:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001e690:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001e694:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001e698:	2b00      	cmp	r3, #0
9001e69a:	dd0d      	ble.n	9001e6b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e69c:	1406      	asrs	r6, r0, #16
9001e69e:	d405      	bmi.n	9001e6ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001e6a0:	454e      	cmp	r6, r9
9001e6a2:	da03      	bge.n	9001e6ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001e6a4:	1416      	asrs	r6, r2, #16
9001e6a6:	d401      	bmi.n	9001e6ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001e6a8:	4546      	cmp	r6, r8
9001e6aa:	db06      	blt.n	9001e6ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e6ac:	9e12      	ldr	r6, [sp, #72]	; 0x48
9001e6ae:	4460      	add	r0, ip
9001e6b0:	3b01      	subs	r3, #1
9001e6b2:	3402      	adds	r4, #2
9001e6b4:	4432      	add	r2, r6
9001e6b6:	e7ef      	b.n	9001e698 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001e6b8:	d00f      	beq.n	9001e6da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001e6ba:	1e5e      	subs	r6, r3, #1
9001e6bc:	fb0c 0e06 	mla	lr, ip, r6, r0
9001e6c0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001e6c4:	d543      	bpl.n	9001e74e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001e6c6:	4698      	mov	r8, r3
9001e6c8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001e6cc:	f1b8 0f00 	cmp.w	r8, #0
9001e6d0:	dc71      	bgt.n	9001e7b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001e6d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e6d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e6da:	9b01      	ldr	r3, [sp, #4]
9001e6dc:	2b00      	cmp	r3, #0
9001e6de:	f340 809d 	ble.w	9001e81c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001e6e2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e6e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001e6e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e6ec:	eeb0 6a62 	vmov.f32	s12, s5
9001e6f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e6f4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e6f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e6fc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001e700:	eeb0 6a43 	vmov.f32	s12, s6
9001e704:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e708:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001e70c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e710:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e714:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e718:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e71c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e720:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e724:	ee12 2a90 	vmov	r2, s5
9001e728:	eef0 2a47 	vmov.f32	s5, s14
9001e72c:	fb92 fcf3 	sdiv	ip, r2, r3
9001e730:	ee13 2a10 	vmov	r2, s6
9001e734:	eeb0 3a67 	vmov.f32	s6, s15
9001e738:	fb92 f3f3 	sdiv	r3, r2, r3
9001e73c:	9312      	str	r3, [sp, #72]	; 0x48
9001e73e:	9b01      	ldr	r3, [sp, #4]
9001e740:	9a03      	ldr	r2, [sp, #12]
9001e742:	3b01      	subs	r3, #1
9001e744:	9301      	str	r3, [sp, #4]
9001e746:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001e748:	bf08      	it	eq
9001e74a:	4613      	moveq	r3, r2
9001e74c:	e793      	b.n	9001e676 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001e74e:	45ce      	cmp	lr, r9
9001e750:	dab9      	bge.n	9001e6c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e752:	9912      	ldr	r1, [sp, #72]	; 0x48
9001e754:	fb01 2606 	mla	r6, r1, r6, r2
9001e758:	1436      	asrs	r6, r6, #16
9001e75a:	d4b4      	bmi.n	9001e6c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e75c:	4546      	cmp	r6, r8
9001e75e:	dab2      	bge.n	9001e6c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e760:	4698      	mov	r8, r3
9001e762:	46a2      	mov	sl, r4
9001e764:	f1b8 0f00 	cmp.w	r8, #0
9001e768:	ddb3      	ble.n	9001e6d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001e76a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001e76e:	1416      	asrs	r6, r2, #16
9001e770:	9902      	ldr	r1, [sp, #8]
9001e772:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001e776:	f108 38ff 	add.w	r8, r8, #4294967295
9001e77a:	4460      	add	r0, ip
9001e77c:	fb09 1606 	mla	r6, r9, r6, r1
9001e780:	4928      	ldr	r1, [pc, #160]	; (9001e824 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001e782:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001e786:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001e78a:	eb07 0b0e 	add.w	fp, r7, lr
9001e78e:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001e792:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001e796:	00f6      	lsls	r6, r6, #3
9001e798:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001e79c:	9912      	ldr	r1, [sp, #72]	; 0x48
9001e79e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001e7a2:	440a      	add	r2, r1
9001e7a4:	ea49 0606 	orr.w	r6, r9, r6
9001e7a8:	f817 900e 	ldrb.w	r9, [r7, lr]
9001e7ac:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001e7b0:	f82a 6b02 	strh.w	r6, [sl], #2
9001e7b4:	e7d6      	b.n	9001e764 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001e7b6:	ea5f 4920 	movs.w	r9, r0, asr #16
9001e7ba:	d429      	bmi.n	9001e810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001e7bc:	68ae      	ldr	r6, [r5, #8]
9001e7be:	454e      	cmp	r6, r9
9001e7c0:	dd26      	ble.n	9001e810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001e7c2:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001e7c6:	d423      	bmi.n	9001e810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001e7c8:	68e9      	ldr	r1, [r5, #12]
9001e7ca:	4559      	cmp	r1, fp
9001e7cc:	dd20      	ble.n	9001e810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001e7ce:	fa0f fe86 	sxth.w	lr, r6
9001e7d2:	9902      	ldr	r1, [sp, #8]
9001e7d4:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001e7d8:	f06f 0101 	mvn.w	r1, #1
9001e7dc:	f81e e009 	ldrb.w	lr, [lr, r9]
9001e7e0:	fb01 f908 	mul.w	r9, r1, r8
9001e7e4:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
9001e7e8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001e7ec:	eb07 060e 	add.w	r6, r7, lr
9001e7f0:	f896 b002 	ldrb.w	fp, [r6, #2]
9001e7f4:	7876      	ldrb	r6, [r6, #1]
9001e7f6:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001e7fa:	00f6      	lsls	r6, r6, #3
9001e7fc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001e800:	ea4b 0606 	orr.w	r6, fp, r6
9001e804:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001e808:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001e80c:	f82a 6009 	strh.w	r6, [sl, r9]
9001e810:	9912      	ldr	r1, [sp, #72]	; 0x48
9001e812:	4460      	add	r0, ip
9001e814:	f108 38ff 	add.w	r8, r8, #4294967295
9001e818:	440a      	add	r2, r1
9001e81a:	e757      	b.n	9001e6cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001e81c:	b005      	add	sp, #20
9001e81e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e822:	bf00      	nop
9001e824:	fffff800 	.word	0xfffff800

9001e828 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e82c:	b087      	sub	sp, #28
9001e82e:	468b      	mov	fp, r1
9001e830:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001e834:	9815      	ldr	r0, [sp, #84]	; 0x54
9001e836:	9204      	str	r2, [sp, #16]
9001e838:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001e83c:	6841      	ldr	r1, [r0, #4]
9001e83e:	9205      	str	r2, [sp, #20]
9001e840:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001e844:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001e848:	fb01 2404 	mla	r4, r1, r4, r2
9001e84c:	6802      	ldr	r2, [r0, #0]
9001e84e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e852:	f8dc 2000 	ldr.w	r2, [ip]
9001e856:	9201      	str	r2, [sp, #4]
9001e858:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001e85c:	3204      	adds	r2, #4
9001e85e:	9202      	str	r2, [sp, #8]
9001e860:	f1bb 0f00 	cmp.w	fp, #0
9001e864:	dc03      	bgt.n	9001e86e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001e866:	9a04      	ldr	r2, [sp, #16]
9001e868:	2a00      	cmp	r2, #0
9001e86a:	f340 8138 	ble.w	9001eade <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001e86e:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001e870:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001e874:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001e878:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001e87a:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001e87e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001e882:	2b00      	cmp	r3, #0
9001e884:	dd0e      	ble.n	9001e8a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001e886:	1402      	asrs	r2, r0, #16
9001e888:	d405      	bmi.n	9001e896 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001e88a:	42ba      	cmp	r2, r7
9001e88c:	da03      	bge.n	9001e896 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001e88e:	140a      	asrs	r2, r1, #16
9001e890:	d401      	bmi.n	9001e896 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001e892:	42b2      	cmp	r2, r6
9001e894:	db07      	blt.n	9001e8a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e896:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001e898:	3b01      	subs	r3, #1
9001e89a:	3402      	adds	r4, #2
9001e89c:	4410      	add	r0, r2
9001e89e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001e8a0:	4411      	add	r1, r2
9001e8a2:	e7ee      	b.n	9001e882 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001e8a4:	d019      	beq.n	9001e8da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001e8a6:	1e5a      	subs	r2, r3, #1
9001e8a8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001e8aa:	fb05 0502 	mla	r5, r5, r2, r0
9001e8ae:	142d      	asrs	r5, r5, #16
9001e8b0:	d409      	bmi.n	9001e8c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e8b2:	42bd      	cmp	r5, r7
9001e8b4:	da07      	bge.n	9001e8c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e8b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001e8b8:	fb05 1202 	mla	r2, r5, r2, r1
9001e8bc:	1412      	asrs	r2, r2, #16
9001e8be:	d402      	bmi.n	9001e8c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e8c0:	42b2      	cmp	r2, r6
9001e8c2:	f2c0 80ac 	blt.w	9001ea1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001e8c6:	f04f 0e00 	mov.w	lr, #0
9001e8ca:	eb03 020e 	add.w	r2, r3, lr
9001e8ce:	2a00      	cmp	r2, #0
9001e8d0:	dc3e      	bgt.n	9001e950 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001e8d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e8d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e8da:	f1bb 0f00 	cmp.w	fp, #0
9001e8de:	f340 80fe 	ble.w	9001eade <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001e8e2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e8e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e8e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e8ec:	f1bb 0b01 	subs.w	fp, fp, #1
9001e8f0:	eeb0 6a62 	vmov.f32	s12, s5
9001e8f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e8f8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e8fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e900:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001e904:	eeb0 6a43 	vmov.f32	s12, s6
9001e908:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e90c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001e910:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e914:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e918:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e91c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e920:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e924:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e928:	ee12 2a90 	vmov	r2, s5
9001e92c:	eef0 2a47 	vmov.f32	s5, s14
9001e930:	fb92 f3f3 	sdiv	r3, r2, r3
9001e934:	ee13 2a10 	vmov	r2, s6
9001e938:	9313      	str	r3, [sp, #76]	; 0x4c
9001e93a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e93c:	eeb0 3a67 	vmov.f32	s6, s15
9001e940:	fb92 f3f3 	sdiv	r3, r2, r3
9001e944:	9a04      	ldr	r2, [sp, #16]
9001e946:	9314      	str	r3, [sp, #80]	; 0x50
9001e948:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e94a:	bf08      	it	eq
9001e94c:	4613      	moveq	r3, r2
9001e94e:	e787      	b.n	9001e860 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001e950:	1406      	asrs	r6, r0, #16
9001e952:	d45d      	bmi.n	9001ea10 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001e954:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001e958:	42b5      	cmp	r5, r6
9001e95a:	dd59      	ble.n	9001ea10 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001e95c:	140f      	asrs	r7, r1, #16
9001e95e:	d457      	bmi.n	9001ea10 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001e960:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001e964:	42ba      	cmp	r2, r7
9001e966:	dd53      	ble.n	9001ea10 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001e968:	9a01      	ldr	r2, [sp, #4]
9001e96a:	b22d      	sxth	r5, r5
9001e96c:	fb07 2505 	mla	r5, r7, r5, r2
9001e970:	5daa      	ldrb	r2, [r5, r6]
9001e972:	9d02      	ldr	r5, [sp, #8]
9001e974:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001e978:	0e2e      	lsrs	r6, r5, #24
9001e97a:	d049      	beq.n	9001ea10 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001e97c:	f06f 0201 	mvn.w	r2, #1
9001e980:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001e984:	fb02 f20e 	mul.w	r2, r2, lr
9001e988:	f834 8002 	ldrh.w	r8, [r4, r2]
9001e98c:	9203      	str	r2, [sp, #12]
9001e98e:	9a05      	ldr	r2, [sp, #20]
9001e990:	ea4f 2728 	mov.w	r7, r8, asr #8
9001e994:	4356      	muls	r6, r2
9001e996:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e99a:	1c72      	adds	r2, r6, #1
9001e99c:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001e9a0:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001e9a4:	b2ed      	uxtb	r5, r5
9001e9a6:	1212      	asrs	r2, r2, #8
9001e9a8:	fa1f f982 	uxth.w	r9, r2
9001e9ac:	43d2      	mvns	r2, r2
9001e9ae:	fb16 f609 	smulbb	r6, r6, r9
9001e9b2:	b2d2      	uxtb	r2, r2
9001e9b4:	fb15 f509 	smulbb	r5, r5, r9
9001e9b8:	fb07 6702 	mla	r7, r7, r2, r6
9001e9bc:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001e9c0:	fb1a fa09 	smulbb	sl, sl, r9
9001e9c4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001e9c8:	b2bf      	uxth	r7, r7
9001e9ca:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001e9ce:	fa5f f888 	uxtb.w	r8, r8
9001e9d2:	fb06 a602 	mla	r6, r6, r2, sl
9001e9d6:	fb08 5502 	mla	r5, r8, r2, r5
9001e9da:	1c7a      	adds	r2, r7, #1
9001e9dc:	b2b6      	uxth	r6, r6
9001e9de:	b2ad      	uxth	r5, r5
9001e9e0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001e9e4:	9a03      	ldr	r2, [sp, #12]
9001e9e6:	f105 0a01 	add.w	sl, r5, #1
9001e9ea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001e9ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e9f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e9f6:	ea4a 0707 	orr.w	r7, sl, r7
9001e9fa:	f106 0a01 	add.w	sl, r6, #1
9001e9fe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ea02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ea06:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ea0a:	ea47 070a 	orr.w	r7, r7, sl
9001ea0e:	52a7      	strh	r7, [r4, r2]
9001ea10:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001ea12:	f10e 3eff 	add.w	lr, lr, #4294967295
9001ea16:	4410      	add	r0, r2
9001ea18:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001ea1a:	4411      	add	r1, r2
9001ea1c:	e755      	b.n	9001e8ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ea1e:	f04f 0800 	mov.w	r8, #0
9001ea22:	eba3 0208 	sub.w	r2, r3, r8
9001ea26:	2a00      	cmp	r2, #0
9001ea28:	f77f af53 	ble.w	9001e8d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001ea2c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001ea30:	140a      	asrs	r2, r1, #16
9001ea32:	9f01      	ldr	r7, [sp, #4]
9001ea34:	1405      	asrs	r5, r0, #16
9001ea36:	fb06 7202 	mla	r2, r6, r2, r7
9001ea3a:	5d52      	ldrb	r2, [r2, r5]
9001ea3c:	9d02      	ldr	r5, [sp, #8]
9001ea3e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001ea42:	0e2e      	lsrs	r6, r5, #24
9001ea44:	d044      	beq.n	9001ead0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001ea46:	9a05      	ldr	r2, [sp, #20]
9001ea48:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ea4c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001ea50:	4356      	muls	r6, r2
9001ea52:	ea4f 272e 	mov.w	r7, lr, asr #8
9001ea56:	1c72      	adds	r2, r6, #1
9001ea58:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ea5c:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001ea60:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ea64:	b2ed      	uxtb	r5, r5
9001ea66:	1212      	asrs	r2, r2, #8
9001ea68:	fa1f f982 	uxth.w	r9, r2
9001ea6c:	43d2      	mvns	r2, r2
9001ea6e:	fb16 f609 	smulbb	r6, r6, r9
9001ea72:	b2d2      	uxtb	r2, r2
9001ea74:	fb15 f509 	smulbb	r5, r5, r9
9001ea78:	fb07 6702 	mla	r7, r7, r2, r6
9001ea7c:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001ea80:	fb1a fa09 	smulbb	sl, sl, r9
9001ea84:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ea88:	b2bf      	uxth	r7, r7
9001ea8a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001ea8e:	fa5f fe8e 	uxtb.w	lr, lr
9001ea92:	fb06 a602 	mla	r6, r6, r2, sl
9001ea96:	fb0e 5502 	mla	r5, lr, r2, r5
9001ea9a:	1c7a      	adds	r2, r7, #1
9001ea9c:	b2b6      	uxth	r6, r6
9001ea9e:	b2ad      	uxth	r5, r5
9001eaa0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001eaa4:	f105 0a01 	add.w	sl, r5, #1
9001eaa8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001eaac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001eab0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001eab4:	ea4a 0707 	orr.w	r7, sl, r7
9001eab8:	f106 0a01 	add.w	sl, r6, #1
9001eabc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001eac0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001eac4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001eac8:	ea47 070a 	orr.w	r7, r7, sl
9001eacc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001ead0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001ead2:	f108 0801 	add.w	r8, r8, #1
9001ead6:	4410      	add	r0, r2
9001ead8:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001eada:	4411      	add	r1, r2
9001eadc:	e7a1      	b.n	9001ea22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001eade:	b007      	add	sp, #28
9001eae0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001eae4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001eae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eae8:	b085      	sub	sp, #20
9001eaea:	468b      	mov	fp, r1
9001eaec:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001eaf0:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001eaf2:	9203      	str	r2, [sp, #12]
9001eaf4:	6841      	ldr	r1, [r0, #4]
9001eaf6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001eafa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001eafe:	fb01 2404 	mla	r4, r1, r4, r2
9001eb02:	6802      	ldr	r2, [r0, #0]
9001eb04:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001eb08:	f8de 2000 	ldr.w	r2, [lr]
9001eb0c:	9200      	str	r2, [sp, #0]
9001eb0e:	f8de 2004 	ldr.w	r2, [lr, #4]
9001eb12:	3204      	adds	r2, #4
9001eb14:	9201      	str	r2, [sp, #4]
9001eb16:	f1bb 0f00 	cmp.w	fp, #0
9001eb1a:	dc03      	bgt.n	9001eb24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001eb1c:	9a03      	ldr	r2, [sp, #12]
9001eb1e:	2a00      	cmp	r2, #0
9001eb20:	f340 8153 	ble.w	9001edca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001eb24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001eb26:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001eb2a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001eb2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001eb30:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001eb34:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001eb38:	2b00      	cmp	r3, #0
9001eb3a:	dd0e      	ble.n	9001eb5a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001eb3c:	1408      	asrs	r0, r1, #16
9001eb3e:	d405      	bmi.n	9001eb4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001eb40:	42b8      	cmp	r0, r7
9001eb42:	da03      	bge.n	9001eb4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001eb44:	1410      	asrs	r0, r2, #16
9001eb46:	d401      	bmi.n	9001eb4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001eb48:	42b0      	cmp	r0, r6
9001eb4a:	db07      	blt.n	9001eb5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001eb4c:	9811      	ldr	r0, [sp, #68]	; 0x44
9001eb4e:	3b01      	subs	r3, #1
9001eb50:	3402      	adds	r4, #2
9001eb52:	4401      	add	r1, r0
9001eb54:	9812      	ldr	r0, [sp, #72]	; 0x48
9001eb56:	4402      	add	r2, r0
9001eb58:	e7ee      	b.n	9001eb38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001eb5a:	d017      	beq.n	9001eb8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001eb5c:	1e58      	subs	r0, r3, #1
9001eb5e:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001eb60:	fb05 1500 	mla	r5, r5, r0, r1
9001eb64:	142d      	asrs	r5, r5, #16
9001eb66:	d409      	bmi.n	9001eb7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001eb68:	42bd      	cmp	r5, r7
9001eb6a:	da07      	bge.n	9001eb7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001eb6c:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001eb6e:	fb05 2000 	mla	r0, r5, r0, r2
9001eb72:	1400      	asrs	r0, r0, #16
9001eb74:	d402      	bmi.n	9001eb7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001eb76:	42b0      	cmp	r0, r6
9001eb78:	f2c0 80bc 	blt.w	9001ecf4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001eb7c:	2600      	movs	r6, #0
9001eb7e:	1998      	adds	r0, r3, r6
9001eb80:	2800      	cmp	r0, #0
9001eb82:	dc3e      	bgt.n	9001ec02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001eb84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001eb88:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001eb8c:	f1bb 0f00 	cmp.w	fp, #0
9001eb90:	f340 811b 	ble.w	9001edca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001eb94:	ee30 0a04 	vadd.f32	s0, s0, s8
9001eb98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001eb9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001eb9e:	f1bb 0b01 	subs.w	fp, fp, #1
9001eba2:	eeb0 6a62 	vmov.f32	s12, s5
9001eba6:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ebaa:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ebae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ebb2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001ebb6:	eeb0 6a43 	vmov.f32	s12, s6
9001ebba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ebbe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001ebc2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ebc6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ebca:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ebce:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ebd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ebd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ebda:	ee12 2a90 	vmov	r2, s5
9001ebde:	eef0 2a47 	vmov.f32	s5, s14
9001ebe2:	fb92 f3f3 	sdiv	r3, r2, r3
9001ebe6:	ee13 2a10 	vmov	r2, s6
9001ebea:	9311      	str	r3, [sp, #68]	; 0x44
9001ebec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ebee:	eeb0 3a67 	vmov.f32	s6, s15
9001ebf2:	fb92 f3f3 	sdiv	r3, r2, r3
9001ebf6:	9a03      	ldr	r2, [sp, #12]
9001ebf8:	9312      	str	r3, [sp, #72]	; 0x48
9001ebfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ebfc:	bf08      	it	eq
9001ebfe:	4613      	moveq	r3, r2
9001ec00:	e789      	b.n	9001eb16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001ec02:	140f      	asrs	r7, r1, #16
9001ec04:	d426      	bmi.n	9001ec54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ec06:	f8de 5008 	ldr.w	r5, [lr, #8]
9001ec0a:	42bd      	cmp	r5, r7
9001ec0c:	dd22      	ble.n	9001ec54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ec0e:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001ec12:	d41f      	bmi.n	9001ec54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ec14:	f8de 000c 	ldr.w	r0, [lr, #12]
9001ec18:	4560      	cmp	r0, ip
9001ec1a:	dd1b      	ble.n	9001ec54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ec1c:	9800      	ldr	r0, [sp, #0]
9001ec1e:	b22d      	sxth	r5, r5
9001ec20:	fb0c 0505 	mla	r5, ip, r5, r0
9001ec24:	5de8      	ldrb	r0, [r5, r7]
9001ec26:	9d01      	ldr	r5, [sp, #4]
9001ec28:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001ec2c:	0e07      	lsrs	r7, r0, #24
9001ec2e:	2fff      	cmp	r7, #255	; 0xff
9001ec30:	d116      	bne.n	9001ec60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ec32:	f06f 0501 	mvn.w	r5, #1
9001ec36:	fb05 f706 	mul.w	r7, r5, r6
9001ec3a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001ec3e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001ec42:	0945      	lsrs	r5, r0, #5
9001ec44:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001ec48:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001ec4c:	ea4c 0505 	orr.w	r5, ip, r5
9001ec50:	4305      	orrs	r5, r0
9001ec52:	53e5      	strh	r5, [r4, r7]
9001ec54:	9811      	ldr	r0, [sp, #68]	; 0x44
9001ec56:	3e01      	subs	r6, #1
9001ec58:	4401      	add	r1, r0
9001ec5a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001ec5c:	4402      	add	r2, r0
9001ec5e:	e78e      	b.n	9001eb7e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001ec60:	b2fd      	uxtb	r5, r7
9001ec62:	2f00      	cmp	r7, #0
9001ec64:	d0f6      	beq.n	9001ec54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ec66:	f06f 0701 	mvn.w	r7, #1
9001ec6a:	fa1f f985 	uxth.w	r9, r5
9001ec6e:	43ed      	mvns	r5, r5
9001ec70:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001ec74:	4377      	muls	r7, r6
9001ec76:	fb1a fa09 	smulbb	sl, sl, r9
9001ec7a:	b2ed      	uxtb	r5, r5
9001ec7c:	f834 8007 	ldrh.w	r8, [r4, r7]
9001ec80:	9702      	str	r7, [sp, #8]
9001ec82:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001ec86:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001ec8a:	fb17 f709 	smulbb	r7, r7, r9
9001ec8e:	b2c0      	uxtb	r0, r0
9001ec90:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ec94:	fb10 f009 	smulbb	r0, r0, r9
9001ec98:	fb0c 7c05 	mla	ip, ip, r5, r7
9001ec9c:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001eca0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001eca4:	fa1f fc8c 	uxth.w	ip, ip
9001eca8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001ecac:	fa5f f888 	uxtb.w	r8, r8
9001ecb0:	fb07 a705 	mla	r7, r7, r5, sl
9001ecb4:	fb08 0005 	mla	r0, r8, r5, r0
9001ecb8:	f10c 0501 	add.w	r5, ip, #1
9001ecbc:	b2bf      	uxth	r7, r7
9001ecbe:	b280      	uxth	r0, r0
9001ecc0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001ecc4:	f100 0a01 	add.w	sl, r0, #1
9001ecc8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001eccc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001ecd0:	9802      	ldr	r0, [sp, #8]
9001ecd2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ecd6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ecda:	f107 0a01 	add.w	sl, r7, #1
9001ecde:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ece2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ece6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ecea:	ea4c 0c0a 	orr.w	ip, ip, sl
9001ecee:	f824 c000 	strh.w	ip, [r4, r0]
9001ecf2:	e7af      	b.n	9001ec54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ecf4:	f04f 0800 	mov.w	r8, #0
9001ecf8:	eba3 0008 	sub.w	r0, r3, r8
9001ecfc:	2800      	cmp	r0, #0
9001ecfe:	f77f af41 	ble.w	9001eb84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ed02:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001ed06:	1410      	asrs	r0, r2, #16
9001ed08:	9f00      	ldr	r7, [sp, #0]
9001ed0a:	140d      	asrs	r5, r1, #16
9001ed0c:	fb06 7000 	mla	r0, r6, r0, r7
9001ed10:	5d40      	ldrb	r0, [r0, r5]
9001ed12:	9d01      	ldr	r5, [sp, #4]
9001ed14:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001ed18:	0e2e      	lsrs	r6, r5, #24
9001ed1a:	2eff      	cmp	r6, #255	; 0xff
9001ed1c:	d112      	bne.n	9001ed44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001ed1e:	482c      	ldr	r0, [pc, #176]	; (9001edd0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001ed20:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001ed24:	0968      	lsrs	r0, r5, #5
9001ed26:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ed2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001ed2e:	4330      	orrs	r0, r6
9001ed30:	4328      	orrs	r0, r5
9001ed32:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001ed36:	9811      	ldr	r0, [sp, #68]	; 0x44
9001ed38:	f108 0801 	add.w	r8, r8, #1
9001ed3c:	4401      	add	r1, r0
9001ed3e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001ed40:	4402      	add	r2, r0
9001ed42:	e7d9      	b.n	9001ecf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001ed44:	b2f0      	uxtb	r0, r6
9001ed46:	2e00      	cmp	r6, #0
9001ed48:	d0f5      	beq.n	9001ed36 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001ed4a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001ed4e:	fa1f f980 	uxth.w	r9, r0
9001ed52:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ed56:	43c0      	mvns	r0, r0
9001ed58:	ea4f 272c 	mov.w	r7, ip, asr #8
9001ed5c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ed60:	fb16 f609 	smulbb	r6, r6, r9
9001ed64:	b2c0      	uxtb	r0, r0
9001ed66:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ed6a:	b2ed      	uxtb	r5, r5
9001ed6c:	fb1a fa09 	smulbb	sl, sl, r9
9001ed70:	fb07 6700 	mla	r7, r7, r0, r6
9001ed74:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001ed78:	fb15 f509 	smulbb	r5, r5, r9
9001ed7c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ed80:	b2bf      	uxth	r7, r7
9001ed82:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001ed86:	fa5f fc8c 	uxtb.w	ip, ip
9001ed8a:	fb06 a600 	mla	r6, r6, r0, sl
9001ed8e:	fb0c 5500 	mla	r5, ip, r0, r5
9001ed92:	1c78      	adds	r0, r7, #1
9001ed94:	b2b6      	uxth	r6, r6
9001ed96:	b2ad      	uxth	r5, r5
9001ed98:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001ed9c:	f105 0a01 	add.w	sl, r5, #1
9001eda0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001eda4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001eda8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001edac:	ea4a 0707 	orr.w	r7, sl, r7
9001edb0:	f106 0a01 	add.w	sl, r6, #1
9001edb4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001edb8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001edbc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001edc0:	ea47 070a 	orr.w	r7, r7, sl
9001edc4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001edc8:	e7b5      	b.n	9001ed36 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001edca:	b005      	add	sp, #20
9001edcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001edd0:	fffff800 	.word	0xfffff800

9001edd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001edd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001edd8:	b087      	sub	sp, #28
9001edda:	468b      	mov	fp, r1
9001eddc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ede0:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001ede2:	9204      	str	r2, [sp, #16]
9001ede4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001ede8:	6861      	ldr	r1, [r4, #4]
9001edea:	9205      	str	r2, [sp, #20]
9001edec:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001edf0:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001edf4:	fb01 2000 	mla	r0, r1, r0, r2
9001edf8:	6822      	ldr	r2, [r4, #0]
9001edfa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001edfe:	f8de 2000 	ldr.w	r2, [lr]
9001ee02:	9201      	str	r2, [sp, #4]
9001ee04:	f8de 2004 	ldr.w	r2, [lr, #4]
9001ee08:	9202      	str	r2, [sp, #8]
9001ee0a:	f1bb 0f00 	cmp.w	fp, #0
9001ee0e:	dc03      	bgt.n	9001ee18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001ee10:	9a04      	ldr	r2, [sp, #16]
9001ee12:	2a00      	cmp	r2, #0
9001ee14:	f340 8142 	ble.w	9001f09c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001ee18:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001ee1a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001ee1e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001ee22:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001ee24:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001ee28:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001ee2c:	2b00      	cmp	r3, #0
9001ee2e:	dd0e      	ble.n	9001ee4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001ee30:	140c      	asrs	r4, r1, #16
9001ee32:	d405      	bmi.n	9001ee40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001ee34:	42bc      	cmp	r4, r7
9001ee36:	da03      	bge.n	9001ee40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001ee38:	1414      	asrs	r4, r2, #16
9001ee3a:	d401      	bmi.n	9001ee40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001ee3c:	42b4      	cmp	r4, r6
9001ee3e:	db07      	blt.n	9001ee50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ee40:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001ee42:	3b01      	subs	r3, #1
9001ee44:	3002      	adds	r0, #2
9001ee46:	4421      	add	r1, r4
9001ee48:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001ee4a:	4422      	add	r2, r4
9001ee4c:	e7ee      	b.n	9001ee2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001ee4e:	d019      	beq.n	9001ee84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001ee50:	1e5c      	subs	r4, r3, #1
9001ee52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001ee54:	fb05 1504 	mla	r5, r5, r4, r1
9001ee58:	142d      	asrs	r5, r5, #16
9001ee5a:	d409      	bmi.n	9001ee70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001ee5c:	42bd      	cmp	r5, r7
9001ee5e:	da07      	bge.n	9001ee70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001ee60:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001ee62:	fb05 2404 	mla	r4, r5, r4, r2
9001ee66:	1424      	asrs	r4, r4, #16
9001ee68:	d402      	bmi.n	9001ee70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001ee6a:	42b4      	cmp	r4, r6
9001ee6c:	f2c0 80b1 	blt.w	9001efd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001ee70:	f04f 0800 	mov.w	r8, #0
9001ee74:	eb03 0408 	add.w	r4, r3, r8
9001ee78:	2c00      	cmp	r4, #0
9001ee7a:	dc3e      	bgt.n	9001eefa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001ee7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ee80:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ee84:	f1bb 0f00 	cmp.w	fp, #0
9001ee88:	f340 8108 	ble.w	9001f09c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001ee8c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ee90:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ee92:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ee96:	f1bb 0b01 	subs.w	fp, fp, #1
9001ee9a:	eeb0 6a62 	vmov.f32	s12, s5
9001ee9e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001eea2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001eea6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eeaa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001eeae:	eeb0 6a43 	vmov.f32	s12, s6
9001eeb2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eeb6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001eeba:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001eebe:	ee61 7a27 	vmul.f32	s15, s2, s15
9001eec2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001eec6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001eeca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001eece:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001eed2:	ee12 2a90 	vmov	r2, s5
9001eed6:	eef0 2a47 	vmov.f32	s5, s14
9001eeda:	fb92 f3f3 	sdiv	r3, r2, r3
9001eede:	ee13 2a10 	vmov	r2, s6
9001eee2:	9313      	str	r3, [sp, #76]	; 0x4c
9001eee4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001eee6:	eeb0 3a67 	vmov.f32	s6, s15
9001eeea:	fb92 f3f3 	sdiv	r3, r2, r3
9001eeee:	9a04      	ldr	r2, [sp, #16]
9001eef0:	9314      	str	r3, [sp, #80]	; 0x50
9001eef2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001eef4:	bf08      	it	eq
9001eef6:	4613      	moveq	r3, r2
9001eef8:	e787      	b.n	9001ee0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001eefa:	140e      	asrs	r6, r1, #16
9001eefc:	d462      	bmi.n	9001efc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001eefe:	f8de 5008 	ldr.w	r5, [lr, #8]
9001ef02:	42b5      	cmp	r5, r6
9001ef04:	dd5e      	ble.n	9001efc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ef06:	1417      	asrs	r7, r2, #16
9001ef08:	d45c      	bmi.n	9001efc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ef0a:	f8de 400c 	ldr.w	r4, [lr, #12]
9001ef0e:	42bc      	cmp	r4, r7
9001ef10:	dd58      	ble.n	9001efc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ef12:	b22d      	sxth	r5, r5
9001ef14:	9c02      	ldr	r4, [sp, #8]
9001ef16:	fb07 6505 	mla	r5, r7, r5, r6
9001ef1a:	5d66      	ldrb	r6, [r4, r5]
9001ef1c:	2e00      	cmp	r6, #0
9001ef1e:	d051      	beq.n	9001efc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ef20:	9c01      	ldr	r4, [sp, #4]
9001ef22:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001ef26:	f06f 0401 	mvn.w	r4, #1
9001ef2a:	fb04 f408 	mul.w	r4, r4, r8
9001ef2e:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001ef32:	5b05      	ldrh	r5, [r0, r4]
9001ef34:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ef38:	9403      	str	r4, [sp, #12]
9001ef3a:	9c05      	ldr	r4, [sp, #20]
9001ef3c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001ef40:	4366      	muls	r6, r4
9001ef42:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001ef46:	1c74      	adds	r4, r6, #1
9001ef48:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001ef4c:	122e      	asrs	r6, r5, #8
9001ef4e:	1224      	asrs	r4, r4, #8
9001ef50:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ef54:	00ed      	lsls	r5, r5, #3
9001ef56:	b2a7      	uxth	r7, r4
9001ef58:	43e4      	mvns	r4, r4
9001ef5a:	b2ed      	uxtb	r5, r5
9001ef5c:	b2e4      	uxtb	r4, r4
9001ef5e:	fb16 f604 	smulbb	r6, r6, r4
9001ef62:	fb15 f504 	smulbb	r5, r5, r4
9001ef66:	fb0c 6c07 	mla	ip, ip, r7, r6
9001ef6a:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001ef6e:	fb1a fa04 	smulbb	sl, sl, r4
9001ef72:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001ef76:	fa1f fc8c 	uxth.w	ip, ip
9001ef7a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001ef7e:	fa5f f989 	uxtb.w	r9, r9
9001ef82:	fb06 a607 	mla	r6, r6, r7, sl
9001ef86:	f10c 0401 	add.w	r4, ip, #1
9001ef8a:	fb09 5507 	mla	r5, r9, r7, r5
9001ef8e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001ef92:	9c03      	ldr	r4, [sp, #12]
9001ef94:	b2ad      	uxth	r5, r5
9001ef96:	b2b6      	uxth	r6, r6
9001ef98:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001ef9c:	f105 0a01 	add.w	sl, r5, #1
9001efa0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001efa4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001efa8:	ea4a 0c0c 	orr.w	ip, sl, ip
9001efac:	f106 0a01 	add.w	sl, r6, #1
9001efb0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001efb4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001efb8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001efbc:	ea4c 0c0a 	orr.w	ip, ip, sl
9001efc0:	f820 c004 	strh.w	ip, [r0, r4]
9001efc4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001efc6:	f108 38ff 	add.w	r8, r8, #4294967295
9001efca:	4421      	add	r1, r4
9001efcc:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001efce:	4422      	add	r2, r4
9001efd0:	e750      	b.n	9001ee74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001efd2:	f04f 0900 	mov.w	r9, #0
9001efd6:	eba3 0409 	sub.w	r4, r3, r9
9001efda:	2c00      	cmp	r4, #0
9001efdc:	f77f af4e 	ble.w	9001ee7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001efe0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001efe4:	140d      	asrs	r5, r1, #16
9001efe6:	1414      	asrs	r4, r2, #16
9001efe8:	fb06 5404 	mla	r4, r6, r4, r5
9001efec:	9d02      	ldr	r5, [sp, #8]
9001efee:	5d2e      	ldrb	r6, [r5, r4]
9001eff0:	2e00      	cmp	r6, #0
9001eff2:	d04c      	beq.n	9001f08e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001eff4:	9d01      	ldr	r5, [sp, #4]
9001eff6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001effa:	9c05      	ldr	r4, [sp, #20]
9001effc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001f000:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001f004:	4366      	muls	r6, r4
9001f006:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001f00a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001f00e:	1c74      	adds	r4, r6, #1
9001f010:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001f014:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001f018:	122e      	asrs	r6, r5, #8
9001f01a:	1224      	asrs	r4, r4, #8
9001f01c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001f020:	00ed      	lsls	r5, r5, #3
9001f022:	b2a7      	uxth	r7, r4
9001f024:	43e4      	mvns	r4, r4
9001f026:	b2ed      	uxtb	r5, r5
9001f028:	b2e4      	uxtb	r4, r4
9001f02a:	fb16 f604 	smulbb	r6, r6, r4
9001f02e:	fb15 f504 	smulbb	r5, r5, r4
9001f032:	fb0c 6c07 	mla	ip, ip, r7, r6
9001f036:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001f03a:	fb1a fa04 	smulbb	sl, sl, r4
9001f03e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001f042:	fa1f fc8c 	uxth.w	ip, ip
9001f046:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001f04a:	fa5f f888 	uxtb.w	r8, r8
9001f04e:	fb06 a607 	mla	r6, r6, r7, sl
9001f052:	f10c 0401 	add.w	r4, ip, #1
9001f056:	fb08 5507 	mla	r5, r8, r7, r5
9001f05a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001f05e:	b2ad      	uxth	r5, r5
9001f060:	b2b6      	uxth	r6, r6
9001f062:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001f066:	f105 0a01 	add.w	sl, r5, #1
9001f06a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f06e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f072:	ea4a 0c0c 	orr.w	ip, sl, ip
9001f076:	f106 0a01 	add.w	sl, r6, #1
9001f07a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001f07e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f082:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f086:	ea4c 0c0a 	orr.w	ip, ip, sl
9001f08a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001f08e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001f090:	f109 0901 	add.w	r9, r9, #1
9001f094:	4421      	add	r1, r4
9001f096:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001f098:	4422      	add	r2, r4
9001f09a:	e79c      	b.n	9001efd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001f09c:	b007      	add	sp, #28
9001f09e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f0a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f0a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f0a6:	b085      	sub	sp, #20
9001f0a8:	468b      	mov	fp, r1
9001f0aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001f0ae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001f0b0:	9203      	str	r2, [sp, #12]
9001f0b2:	6861      	ldr	r1, [r4, #4]
9001f0b4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001f0b8:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
9001f0bc:	fb01 2000 	mla	r0, r1, r0, r2
9001f0c0:	6822      	ldr	r2, [r4, #0]
9001f0c2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001f0c6:	f8d8 2000 	ldr.w	r2, [r8]
9001f0ca:	9200      	str	r2, [sp, #0]
9001f0cc:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001f0d0:	9201      	str	r2, [sp, #4]
9001f0d2:	f1bb 0f00 	cmp.w	fp, #0
9001f0d6:	dc03      	bgt.n	9001f0e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001f0d8:	9a03      	ldr	r2, [sp, #12]
9001f0da:	2a00      	cmp	r2, #0
9001f0dc:	f340 8146 	ble.w	9001f36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001f0e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001f0e2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001f0e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001f0ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001f0ec:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001f0f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001f0f4:	2b00      	cmp	r3, #0
9001f0f6:	dd0e      	ble.n	9001f116 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001f0f8:	140c      	asrs	r4, r1, #16
9001f0fa:	d405      	bmi.n	9001f108 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001f0fc:	42bc      	cmp	r4, r7
9001f0fe:	da03      	bge.n	9001f108 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001f100:	1414      	asrs	r4, r2, #16
9001f102:	d401      	bmi.n	9001f108 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001f104:	42b4      	cmp	r4, r6
9001f106:	db07      	blt.n	9001f118 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001f108:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001f10a:	3b01      	subs	r3, #1
9001f10c:	3002      	adds	r0, #2
9001f10e:	4421      	add	r1, r4
9001f110:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001f112:	4422      	add	r2, r4
9001f114:	e7ee      	b.n	9001f0f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001f116:	d017      	beq.n	9001f148 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001f118:	1e5c      	subs	r4, r3, #1
9001f11a:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001f11c:	fb05 1504 	mla	r5, r5, r4, r1
9001f120:	142d      	asrs	r5, r5, #16
9001f122:	d409      	bmi.n	9001f138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001f124:	42bd      	cmp	r5, r7
9001f126:	da07      	bge.n	9001f138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001f128:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001f12a:	fb05 2404 	mla	r4, r5, r4, r2
9001f12e:	1424      	asrs	r4, r4, #16
9001f130:	d402      	bmi.n	9001f138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001f132:	42b4      	cmp	r4, r6
9001f134:	f2c0 80b3 	blt.w	9001f29e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001f138:	2600      	movs	r6, #0
9001f13a:	199c      	adds	r4, r3, r6
9001f13c:	2c00      	cmp	r4, #0
9001f13e:	dc3e      	bgt.n	9001f1be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001f140:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f144:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f148:	f1bb 0f00 	cmp.w	fp, #0
9001f14c:	f340 810e 	ble.w	9001f36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001f150:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f154:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f156:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f15a:	f1bb 0b01 	subs.w	fp, fp, #1
9001f15e:	eeb0 6a62 	vmov.f32	s12, s5
9001f162:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001f166:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f16a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f16e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001f172:	eeb0 6a43 	vmov.f32	s12, s6
9001f176:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f17a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001f17e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f182:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f186:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f18a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f18e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f192:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f196:	ee12 2a90 	vmov	r2, s5
9001f19a:	eef0 2a47 	vmov.f32	s5, s14
9001f19e:	fb92 f3f3 	sdiv	r3, r2, r3
9001f1a2:	ee13 2a10 	vmov	r2, s6
9001f1a6:	9311      	str	r3, [sp, #68]	; 0x44
9001f1a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f1aa:	eeb0 3a67 	vmov.f32	s6, s15
9001f1ae:	fb92 f3f3 	sdiv	r3, r2, r3
9001f1b2:	9a03      	ldr	r2, [sp, #12]
9001f1b4:	9312      	str	r3, [sp, #72]	; 0x48
9001f1b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f1b8:	bf08      	it	eq
9001f1ba:	4613      	moveq	r3, r2
9001f1bc:	e789      	b.n	9001f0d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001f1be:	140f      	asrs	r7, r1, #16
9001f1c0:	d418      	bmi.n	9001f1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001f1c2:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001f1c6:	42bd      	cmp	r5, r7
9001f1c8:	dd14      	ble.n	9001f1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001f1ca:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001f1ce:	d411      	bmi.n	9001f1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001f1d0:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001f1d4:	4564      	cmp	r4, ip
9001f1d6:	dd0d      	ble.n	9001f1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001f1d8:	b22d      	sxth	r5, r5
9001f1da:	9c01      	ldr	r4, [sp, #4]
9001f1dc:	fb0c 7505 	mla	r5, ip, r5, r7
9001f1e0:	5d64      	ldrb	r4, [r4, r5]
9001f1e2:	2cff      	cmp	r4, #255	; 0xff
9001f1e4:	d10c      	bne.n	9001f200 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001f1e6:	9c00      	ldr	r4, [sp, #0]
9001f1e8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001f1ec:	f06f 0401 	mvn.w	r4, #1
9001f1f0:	4374      	muls	r4, r6
9001f1f2:	5305      	strh	r5, [r0, r4]
9001f1f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001f1f6:	3e01      	subs	r6, #1
9001f1f8:	4421      	add	r1, r4
9001f1fa:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001f1fc:	4422      	add	r2, r4
9001f1fe:	e79c      	b.n	9001f13a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001f200:	2c00      	cmp	r4, #0
9001f202:	d0f7      	beq.n	9001f1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001f204:	9f00      	ldr	r7, [sp, #0]
9001f206:	fa1f fc84 	uxth.w	ip, r4
9001f20a:	43e4      	mvns	r4, r4
9001f20c:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001f210:	f06f 0501 	mvn.w	r5, #1
9001f214:	b2e4      	uxtb	r4, r4
9001f216:	4375      	muls	r5, r6
9001f218:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001f21c:	9502      	str	r5, [sp, #8]
9001f21e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001f222:	5b45      	ldrh	r5, [r0, r5]
9001f224:	122f      	asrs	r7, r5, #8
9001f226:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001f22a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001f22e:	00ed      	lsls	r5, r5, #3
9001f230:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001f234:	fb17 f704 	smulbb	r7, r7, r4
9001f238:	b2ed      	uxtb	r5, r5
9001f23a:	fb1a fa04 	smulbb	sl, sl, r4
9001f23e:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001f242:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001f246:	fb15 f504 	smulbb	r5, r5, r4
9001f24a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001f24e:	fa1f fe8e 	uxth.w	lr, lr
9001f252:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001f256:	fa5f f989 	uxtb.w	r9, r9
9001f25a:	fb07 a70c 	mla	r7, r7, ip, sl
9001f25e:	f10e 0401 	add.w	r4, lr, #1
9001f262:	fb09 550c 	mla	r5, r9, ip, r5
9001f266:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001f26a:	9c02      	ldr	r4, [sp, #8]
9001f26c:	b2ad      	uxth	r5, r5
9001f26e:	b2bf      	uxth	r7, r7
9001f270:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001f274:	f105 0a01 	add.w	sl, r5, #1
9001f278:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f27c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f280:	ea4a 0e0e 	orr.w	lr, sl, lr
9001f284:	f107 0a01 	add.w	sl, r7, #1
9001f288:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001f28c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f290:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f294:	ea4e 0e0a 	orr.w	lr, lr, sl
9001f298:	f820 e004 	strh.w	lr, [r0, r4]
9001f29c:	e7aa      	b.n	9001f1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001f29e:	f04f 0900 	mov.w	r9, #0
9001f2a2:	eba3 0409 	sub.w	r4, r3, r9
9001f2a6:	2c00      	cmp	r4, #0
9001f2a8:	f77f af4a 	ble.w	9001f140 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001f2ac:	1414      	asrs	r4, r2, #16
9001f2ae:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001f2b2:	140d      	asrs	r5, r1, #16
9001f2b4:	fb06 5504 	mla	r5, r6, r4, r5
9001f2b8:	9c01      	ldr	r4, [sp, #4]
9001f2ba:	5d64      	ldrb	r4, [r4, r5]
9001f2bc:	2cff      	cmp	r4, #255	; 0xff
9001f2be:	d10b      	bne.n	9001f2d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001f2c0:	9c00      	ldr	r4, [sp, #0]
9001f2c2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001f2c6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001f2ca:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001f2cc:	f109 0901 	add.w	r9, r9, #1
9001f2d0:	4421      	add	r1, r4
9001f2d2:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001f2d4:	4422      	add	r2, r4
9001f2d6:	e7e4      	b.n	9001f2a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001f2d8:	2c00      	cmp	r4, #0
9001f2da:	d0f6      	beq.n	9001f2ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001f2dc:	9e00      	ldr	r6, [sp, #0]
9001f2de:	b2a7      	uxth	r7, r4
9001f2e0:	43e4      	mvns	r4, r4
9001f2e2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001f2e6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001f2ea:	b2e4      	uxtb	r4, r4
9001f2ec:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001f2f0:	122e      	asrs	r6, r5, #8
9001f2f2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001f2f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001f2fa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001f2fe:	00ed      	lsls	r5, r5, #3
9001f300:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001f304:	fb16 f604 	smulbb	r6, r6, r4
9001f308:	b2ed      	uxtb	r5, r5
9001f30a:	fb1a fa04 	smulbb	sl, sl, r4
9001f30e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001f312:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001f316:	fb15 f504 	smulbb	r5, r5, r4
9001f31a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f31e:	fa1f fc8c 	uxth.w	ip, ip
9001f322:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001f326:	fa5f fe8e 	uxtb.w	lr, lr
9001f32a:	fb06 a607 	mla	r6, r6, r7, sl
9001f32e:	f10c 0401 	add.w	r4, ip, #1
9001f332:	fb0e 5507 	mla	r5, lr, r7, r5
9001f336:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001f33a:	b2ad      	uxth	r5, r5
9001f33c:	b2b6      	uxth	r6, r6
9001f33e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001f342:	f105 0a01 	add.w	sl, r5, #1
9001f346:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f34a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f34e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001f352:	f106 0a01 	add.w	sl, r6, #1
9001f356:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001f35a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f35e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f362:	ea4c 0c0a 	orr.w	ip, ip, sl
9001f366:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001f36a:	e7ae      	b.n	9001f2ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001f36c:	b005      	add	sp, #20
9001f36e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f372 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f372:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f376:	b085      	sub	sp, #20
9001f378:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f37a:	9203      	str	r2, [sp, #12]
9001f37c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
9001f380:	9100      	str	r1, [sp, #0]
9001f382:	9201      	str	r2, [sp, #4]
9001f384:	6841      	ldr	r1, [r0, #4]
9001f386:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001f38a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001f38e:	fb01 2404 	mla	r4, r1, r4, r2
9001f392:	6802      	ldr	r2, [r0, #0]
9001f394:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001f398:	f8de 2000 	ldr.w	r2, [lr]
9001f39c:	9202      	str	r2, [sp, #8]
9001f39e:	9a01      	ldr	r2, [sp, #4]
9001f3a0:	43d6      	mvns	r6, r2
9001f3a2:	b2f6      	uxtb	r6, r6
9001f3a4:	9a00      	ldr	r2, [sp, #0]
9001f3a6:	2a00      	cmp	r2, #0
9001f3a8:	dc03      	bgt.n	9001f3b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001f3aa:	9a03      	ldr	r2, [sp, #12]
9001f3ac:	2a00      	cmp	r2, #0
9001f3ae:	f340 8124 	ble.w	9001f5fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001f3b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001f3b4:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001f3b8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001f3bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001f3be:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001f3c2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001f3c6:	2b00      	cmp	r3, #0
9001f3c8:	dd0e      	ble.n	9001f3e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001f3ca:	1408      	asrs	r0, r1, #16
9001f3cc:	d405      	bmi.n	9001f3da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001f3ce:	4560      	cmp	r0, ip
9001f3d0:	da03      	bge.n	9001f3da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001f3d2:	1410      	asrs	r0, r2, #16
9001f3d4:	d401      	bmi.n	9001f3da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001f3d6:	42b8      	cmp	r0, r7
9001f3d8:	db07      	blt.n	9001f3ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001f3da:	9811      	ldr	r0, [sp, #68]	; 0x44
9001f3dc:	3b01      	subs	r3, #1
9001f3de:	3402      	adds	r4, #2
9001f3e0:	4401      	add	r1, r0
9001f3e2:	9812      	ldr	r0, [sp, #72]	; 0x48
9001f3e4:	4402      	add	r2, r0
9001f3e6:	e7ee      	b.n	9001f3c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001f3e8:	d06e      	beq.n	9001f4c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001f3ea:	1e58      	subs	r0, r3, #1
9001f3ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001f3ee:	fb05 1500 	mla	r5, r5, r0, r1
9001f3f2:	142d      	asrs	r5, r5, #16
9001f3f4:	d45c      	bmi.n	9001f4b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001f3f6:	4565      	cmp	r5, ip
9001f3f8:	da5a      	bge.n	9001f4b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001f3fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001f3fc:	fb05 2000 	mla	r0, r5, r0, r2
9001f400:	1400      	asrs	r0, r0, #16
9001f402:	d455      	bmi.n	9001f4b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001f404:	42b8      	cmp	r0, r7
9001f406:	da53      	bge.n	9001f4b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001f408:	4699      	mov	r9, r3
9001f40a:	46a2      	mov	sl, r4
9001f40c:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001f410:	f1b9 0f00 	cmp.w	r9, #0
9001f414:	dd54      	ble.n	9001f4c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001f416:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001f41a:	140d      	asrs	r5, r1, #16
9001f41c:	1410      	asrs	r0, r2, #16
9001f41e:	f109 39ff 	add.w	r9, r9, #4294967295
9001f422:	fb07 5000 	mla	r0, r7, r0, r5
9001f426:	9d02      	ldr	r5, [sp, #8]
9001f428:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001f42c:	f8ba 5000 	ldrh.w	r5, [sl]
9001f430:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001f434:	122f      	asrs	r7, r5, #8
9001f436:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001f43a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001f43e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001f442:	00ed      	lsls	r5, r5, #3
9001f444:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001f448:	fb17 f706 	smulbb	r7, r7, r6
9001f44c:	b2ed      	uxtb	r5, r5
9001f44e:	fb18 f806 	smulbb	r8, r8, r6
9001f452:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001f456:	10c7      	asrs	r7, r0, #3
9001f458:	fb15 f506 	smulbb	r5, r5, r6
9001f45c:	00c0      	lsls	r0, r0, #3
9001f45e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001f462:	fa1f fc8c 	uxth.w	ip, ip
9001f466:	b2c0      	uxtb	r0, r0
9001f468:	fb07 870b 	mla	r7, r7, fp, r8
9001f46c:	fb00 500b 	mla	r0, r0, fp, r5
9001f470:	f10c 0501 	add.w	r5, ip, #1
9001f474:	b2bf      	uxth	r7, r7
9001f476:	b280      	uxth	r0, r0
9001f478:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001f47c:	f107 0801 	add.w	r8, r7, #1
9001f480:	1c45      	adds	r5, r0, #1
9001f482:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001f486:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001f48a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001f48e:	9811      	ldr	r0, [sp, #68]	; 0x44
9001f490:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001f494:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f498:	4401      	add	r1, r0
9001f49a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001f49e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001f4a0:	ea45 0c0c 	orr.w	ip, r5, ip
9001f4a4:	4402      	add	r2, r0
9001f4a6:	ea4c 0c08 	orr.w	ip, ip, r8
9001f4aa:	f82a cb02 	strh.w	ip, [sl], #2
9001f4ae:	e7af      	b.n	9001f410 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001f4b0:	f04f 0800 	mov.w	r8, #0
9001f4b4:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001f4b8:	eb03 0008 	add.w	r0, r3, r8
9001f4bc:	2800      	cmp	r0, #0
9001f4be:	dc41      	bgt.n	9001f544 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001f4c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f4c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f4c8:	9b00      	ldr	r3, [sp, #0]
9001f4ca:	2b00      	cmp	r3, #0
9001f4cc:	f340 8095 	ble.w	9001f5fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001f4d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001f4d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f4d6:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f4da:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f4de:	eef0 6a62 	vmov.f32	s13, s5
9001f4e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001f4e6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f4ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f4ee:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
9001f4f2:	eef0 6a43 	vmov.f32	s13, s6
9001f4f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f4fa:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
9001f4fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f502:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f506:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f50a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f50e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f512:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f516:	ee12 2a90 	vmov	r2, s5
9001f51a:	eef0 2a47 	vmov.f32	s5, s14
9001f51e:	fb92 f3f3 	sdiv	r3, r2, r3
9001f522:	ee13 2a10 	vmov	r2, s6
9001f526:	9311      	str	r3, [sp, #68]	; 0x44
9001f528:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f52a:	eeb0 3a67 	vmov.f32	s6, s15
9001f52e:	fb92 f3f3 	sdiv	r3, r2, r3
9001f532:	9312      	str	r3, [sp, #72]	; 0x48
9001f534:	9b00      	ldr	r3, [sp, #0]
9001f536:	9a03      	ldr	r2, [sp, #12]
9001f538:	3b01      	subs	r3, #1
9001f53a:	9300      	str	r3, [sp, #0]
9001f53c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f53e:	bf08      	it	eq
9001f540:	4613      	moveq	r3, r2
9001f542:	e72f      	b.n	9001f3a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001f544:	140f      	asrs	r7, r1, #16
9001f546:	d451      	bmi.n	9001f5ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001f548:	f8de 5008 	ldr.w	r5, [lr, #8]
9001f54c:	42bd      	cmp	r5, r7
9001f54e:	dd4d      	ble.n	9001f5ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001f550:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001f554:	d44a      	bmi.n	9001f5ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001f556:	f8de 000c 	ldr.w	r0, [lr, #12]
9001f55a:	4560      	cmp	r0, ip
9001f55c:	dd46      	ble.n	9001f5ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001f55e:	b22d      	sxth	r5, r5
9001f560:	9802      	ldr	r0, [sp, #8]
9001f562:	fb0c 7505 	mla	r5, ip, r5, r7
9001f566:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001f56a:	f06f 0501 	mvn.w	r5, #1
9001f56e:	fb05 fb08 	mul.w	fp, r5, r8
9001f572:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001f576:	f834 500b 	ldrh.w	r5, [r4, fp]
9001f57a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001f57e:	122f      	asrs	r7, r5, #8
9001f580:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001f584:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001f588:	00ed      	lsls	r5, r5, #3
9001f58a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001f58e:	fb17 f706 	smulbb	r7, r7, r6
9001f592:	b2ed      	uxtb	r5, r5
9001f594:	fb19 f906 	smulbb	r9, r9, r6
9001f598:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001f59c:	10c7      	asrs	r7, r0, #3
9001f59e:	fb15 f506 	smulbb	r5, r5, r6
9001f5a2:	00c0      	lsls	r0, r0, #3
9001f5a4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001f5a8:	fa1f fc8c 	uxth.w	ip, ip
9001f5ac:	b2c0      	uxtb	r0, r0
9001f5ae:	fb07 970a 	mla	r7, r7, sl, r9
9001f5b2:	fb00 500a 	mla	r0, r0, sl, r5
9001f5b6:	f10c 0501 	add.w	r5, ip, #1
9001f5ba:	b2bf      	uxth	r7, r7
9001f5bc:	b280      	uxth	r0, r0
9001f5be:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001f5c2:	f107 0901 	add.w	r9, r7, #1
9001f5c6:	1c45      	adds	r5, r0, #1
9001f5c8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001f5cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001f5d0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001f5d4:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001f5d8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f5dc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001f5e0:	ea45 0c0c 	orr.w	ip, r5, ip
9001f5e4:	ea4c 0c09 	orr.w	ip, ip, r9
9001f5e8:	f824 c00b 	strh.w	ip, [r4, fp]
9001f5ec:	9811      	ldr	r0, [sp, #68]	; 0x44
9001f5ee:	f108 38ff 	add.w	r8, r8, #4294967295
9001f5f2:	4401      	add	r1, r0
9001f5f4:	9812      	ldr	r0, [sp, #72]	; 0x48
9001f5f6:	4402      	add	r2, r0
9001f5f8:	e75e      	b.n	9001f4b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001f5fa:	b005      	add	sp, #20
9001f5fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f600 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f604:	b085      	sub	sp, #20
9001f606:	4693      	mov	fp, r2
9001f608:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001f60c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001f60e:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001f610:	6870      	ldr	r0, [r6, #4]
9001f612:	9101      	str	r1, [sp, #4]
9001f614:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001f618:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001f61c:	fb00 2404 	mla	r4, r0, r4, r2
9001f620:	6832      	ldr	r2, [r6, #0]
9001f622:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001f626:	682a      	ldr	r2, [r5, #0]
9001f628:	9202      	str	r2, [sp, #8]
9001f62a:	9a01      	ldr	r2, [sp, #4]
9001f62c:	2a00      	cmp	r2, #0
9001f62e:	dc03      	bgt.n	9001f638 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001f630:	f1bb 0f00 	cmp.w	fp, #0
9001f634:	f340 809a 	ble.w	9001f76c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001f638:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001f63a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001f63e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001f642:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001f644:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001f648:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001f64c:	2b00      	cmp	r3, #0
9001f64e:	dd0c      	ble.n	9001f66a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001f650:	1406      	asrs	r6, r0, #16
9001f652:	d405      	bmi.n	9001f660 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001f654:	454e      	cmp	r6, r9
9001f656:	da03      	bge.n	9001f660 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001f658:	1416      	asrs	r6, r2, #16
9001f65a:	d401      	bmi.n	9001f660 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001f65c:	4546      	cmp	r6, r8
9001f65e:	db05      	blt.n	9001f66c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001f660:	4470      	add	r0, lr
9001f662:	4462      	add	r2, ip
9001f664:	3b01      	subs	r3, #1
9001f666:	3402      	adds	r4, #2
9001f668:	e7f0      	b.n	9001f64c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001f66a:	d00f      	beq.n	9001f68c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001f66c:	1e5e      	subs	r6, r3, #1
9001f66e:	fb0e 0706 	mla	r7, lr, r6, r0
9001f672:	143f      	asrs	r7, r7, #16
9001f674:	d541      	bpl.n	9001f6fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001f676:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001f67a:	4698      	mov	r8, r3
9001f67c:	9603      	str	r6, [sp, #12]
9001f67e:	f1b8 0f00 	cmp.w	r8, #0
9001f682:	dc56      	bgt.n	9001f732 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001f684:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f688:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f68c:	9b01      	ldr	r3, [sp, #4]
9001f68e:	2b00      	cmp	r3, #0
9001f690:	dd6c      	ble.n	9001f76c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001f692:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f696:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f698:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f69c:	eeb0 6a62 	vmov.f32	s12, s5
9001f6a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001f6a4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f6a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f6ac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001f6b0:	eeb0 6a43 	vmov.f32	s12, s6
9001f6b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f6b8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001f6bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f6c0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f6c4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f6c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f6cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f6d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f6d4:	ee12 2a90 	vmov	r2, s5
9001f6d8:	eef0 2a47 	vmov.f32	s5, s14
9001f6dc:	fb92 fef3 	sdiv	lr, r2, r3
9001f6e0:	ee13 2a10 	vmov	r2, s6
9001f6e4:	eeb0 3a67 	vmov.f32	s6, s15
9001f6e8:	fb92 fcf3 	sdiv	ip, r2, r3
9001f6ec:	9b01      	ldr	r3, [sp, #4]
9001f6ee:	3b01      	subs	r3, #1
9001f6f0:	9301      	str	r3, [sp, #4]
9001f6f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f6f4:	bf08      	it	eq
9001f6f6:	465b      	moveq	r3, fp
9001f6f8:	e797      	b.n	9001f62a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001f6fa:	454f      	cmp	r7, r9
9001f6fc:	dabb      	bge.n	9001f676 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001f6fe:	fb0c 2606 	mla	r6, ip, r6, r2
9001f702:	1436      	asrs	r6, r6, #16
9001f704:	d4b7      	bmi.n	9001f676 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001f706:	4546      	cmp	r6, r8
9001f708:	dab5      	bge.n	9001f676 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001f70a:	461e      	mov	r6, r3
9001f70c:	46a0      	mov	r8, r4
9001f70e:	2e00      	cmp	r6, #0
9001f710:	ddb8      	ble.n	9001f684 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001f712:	1417      	asrs	r7, r2, #16
9001f714:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001f718:	ea4f 4920 	mov.w	r9, r0, asr #16
9001f71c:	9902      	ldr	r1, [sp, #8]
9001f71e:	4470      	add	r0, lr
9001f720:	4462      	add	r2, ip
9001f722:	fb0a 9707 	mla	r7, sl, r7, r9
9001f726:	3e01      	subs	r6, #1
9001f728:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001f72c:	f828 7b02 	strh.w	r7, [r8], #2
9001f730:	e7ed      	b.n	9001f70e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001f732:	ea5f 4920 	movs.w	r9, r0, asr #16
9001f736:	d414      	bmi.n	9001f762 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001f738:	68ae      	ldr	r6, [r5, #8]
9001f73a:	454e      	cmp	r6, r9
9001f73c:	dd11      	ble.n	9001f762 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001f73e:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001f742:	d40e      	bmi.n	9001f762 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001f744:	68ef      	ldr	r7, [r5, #12]
9001f746:	4557      	cmp	r7, sl
9001f748:	dd0b      	ble.n	9001f762 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001f74a:	b236      	sxth	r6, r6
9001f74c:	f06f 0101 	mvn.w	r1, #1
9001f750:	9f02      	ldr	r7, [sp, #8]
9001f752:	fb0a 9606 	mla	r6, sl, r6, r9
9001f756:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001f75a:	fb01 f608 	mul.w	r6, r1, r8
9001f75e:	9903      	ldr	r1, [sp, #12]
9001f760:	538f      	strh	r7, [r1, r6]
9001f762:	4470      	add	r0, lr
9001f764:	4462      	add	r2, ip
9001f766:	f108 38ff 	add.w	r8, r8, #4294967295
9001f76a:	e788      	b.n	9001f67e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001f76c:	b005      	add	sp, #20
9001f76e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f772 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f772:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f776:	b087      	sub	sp, #28
9001f778:	468b      	mov	fp, r1
9001f77a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001f77e:	9815      	ldr	r0, [sp, #84]	; 0x54
9001f780:	9203      	str	r2, [sp, #12]
9001f782:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001f786:	6841      	ldr	r1, [r0, #4]
9001f788:	9204      	str	r2, [sp, #16]
9001f78a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001f78e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
9001f792:	fb01 2505 	mla	r5, r1, r5, r2
9001f796:	6802      	ldr	r2, [r0, #0]
9001f798:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001f79c:	f8d9 2000 	ldr.w	r2, [r9]
9001f7a0:	9201      	str	r2, [sp, #4]
9001f7a2:	f1bb 0f00 	cmp.w	fp, #0
9001f7a6:	dc03      	bgt.n	9001f7b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001f7a8:	9a03      	ldr	r2, [sp, #12]
9001f7aa:	2a00      	cmp	r2, #0
9001f7ac:	f340 8158 	ble.w	9001fa60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001f7b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001f7b2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001f7b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001f7ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001f7bc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001f7c0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001f7c4:	2b00      	cmp	r3, #0
9001f7c6:	dd0e      	ble.n	9001f7e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001f7c8:	1402      	asrs	r2, r0, #16
9001f7ca:	d405      	bmi.n	9001f7d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001f7cc:	42ba      	cmp	r2, r7
9001f7ce:	da03      	bge.n	9001f7d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001f7d0:	140a      	asrs	r2, r1, #16
9001f7d2:	d401      	bmi.n	9001f7d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001f7d4:	42b2      	cmp	r2, r6
9001f7d6:	db07      	blt.n	9001f7e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001f7d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001f7da:	3b01      	subs	r3, #1
9001f7dc:	3502      	adds	r5, #2
9001f7de:	4410      	add	r0, r2
9001f7e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001f7e2:	4411      	add	r1, r2
9001f7e4:	e7ee      	b.n	9001f7c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001f7e6:	d017      	beq.n	9001f818 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001f7e8:	1e5a      	subs	r2, r3, #1
9001f7ea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001f7ec:	fb04 0402 	mla	r4, r4, r2, r0
9001f7f0:	1424      	asrs	r4, r4, #16
9001f7f2:	d409      	bmi.n	9001f808 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001f7f4:	42bc      	cmp	r4, r7
9001f7f6:	da07      	bge.n	9001f808 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001f7f8:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001f7fa:	fb04 1202 	mla	r2, r4, r2, r1
9001f7fe:	1412      	asrs	r2, r2, #16
9001f800:	d402      	bmi.n	9001f808 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001f802:	42b2      	cmp	r2, r6
9001f804:	f2c0 80bf 	blt.w	9001f986 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001f808:	2700      	movs	r7, #0
9001f80a:	19da      	adds	r2, r3, r7
9001f80c:	2a00      	cmp	r2, #0
9001f80e:	dc3e      	bgt.n	9001f88e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001f810:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f814:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001f818:	f1bb 0f00 	cmp.w	fp, #0
9001f81c:	f340 8120 	ble.w	9001fa60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001f820:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f824:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f826:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f82a:	f1bb 0b01 	subs.w	fp, fp, #1
9001f82e:	eeb0 6a62 	vmov.f32	s12, s5
9001f832:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001f836:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f83a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f83e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001f842:	eeb0 6a43 	vmov.f32	s12, s6
9001f846:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f84a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001f84e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f852:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f856:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f85a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f85e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f862:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f866:	ee12 2a90 	vmov	r2, s5
9001f86a:	eef0 2a47 	vmov.f32	s5, s14
9001f86e:	fb92 f3f3 	sdiv	r3, r2, r3
9001f872:	ee13 2a10 	vmov	r2, s6
9001f876:	9313      	str	r3, [sp, #76]	; 0x4c
9001f878:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f87a:	eeb0 3a67 	vmov.f32	s6, s15
9001f87e:	fb92 f3f3 	sdiv	r3, r2, r3
9001f882:	9a03      	ldr	r2, [sp, #12]
9001f884:	9314      	str	r3, [sp, #80]	; 0x50
9001f886:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f888:	bf08      	it	eq
9001f88a:	4613      	moveq	r3, r2
9001f88c:	e789      	b.n	9001f7a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001f88e:	1406      	asrs	r6, r0, #16
9001f890:	d42d      	bmi.n	9001f8ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001f892:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001f896:	42b4      	cmp	r4, r6
9001f898:	dd29      	ble.n	9001f8ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001f89a:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001f89e:	d426      	bmi.n	9001f8ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001f8a0:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001f8a4:	4562      	cmp	r2, ip
9001f8a6:	dd22      	ble.n	9001f8ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001f8a8:	b224      	sxth	r4, r4
9001f8aa:	9a01      	ldr	r2, [sp, #4]
9001f8ac:	fb0c 6404 	mla	r4, ip, r4, r6
9001f8b0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001f8b4:	0e22      	lsrs	r2, r4, #24
9001f8b6:	d01a      	beq.n	9001f8ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001f8b8:	9e04      	ldr	r6, [sp, #16]
9001f8ba:	4372      	muls	r2, r6
9001f8bc:	1c56      	adds	r6, r2, #1
9001f8be:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001f8c2:	0a26      	lsrs	r6, r4, #8
9001f8c4:	1212      	asrs	r2, r2, #8
9001f8c6:	9605      	str	r6, [sp, #20]
9001f8c8:	2aff      	cmp	r2, #255	; 0xff
9001f8ca:	d116      	bne.n	9001f8fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001f8cc:	f06f 0201 	mvn.w	r2, #1
9001f8d0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001f8d4:	fb02 fc07 	mul.w	ip, r2, r7
9001f8d8:	0962      	lsrs	r2, r4, #5
9001f8da:	f026 0607 	bic.w	r6, r6, #7
9001f8de:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001f8e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f8e6:	4316      	orrs	r6, r2
9001f8e8:	4326      	orrs	r6, r4
9001f8ea:	f825 600c 	strh.w	r6, [r5, ip]
9001f8ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001f8f0:	3f01      	subs	r7, #1
9001f8f2:	4410      	add	r0, r2
9001f8f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001f8f6:	4411      	add	r1, r2
9001f8f8:	e787      	b.n	9001f80a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001f8fa:	f06f 0601 	mvn.w	r6, #1
9001f8fe:	fa1f fa82 	uxth.w	sl, r2
9001f902:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001f906:	43d2      	mvns	r2, r2
9001f908:	437e      	muls	r6, r7
9001f90a:	b2e4      	uxtb	r4, r4
9001f90c:	fb1c fc0a 	smulbb	ip, ip, sl
9001f910:	b2d2      	uxtb	r2, r2
9001f912:	f835 8006 	ldrh.w	r8, [r5, r6]
9001f916:	fb14 f40a 	smulbb	r4, r4, sl
9001f91a:	9602      	str	r6, [sp, #8]
9001f91c:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001f920:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001f924:	fb16 f60a 	smulbb	r6, r6, sl
9001f928:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001f92c:	fb0e ce02 	mla	lr, lr, r2, ip
9001f930:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001f934:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001f938:	fa1f fe8e 	uxth.w	lr, lr
9001f93c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001f940:	fa5f f888 	uxtb.w	r8, r8
9001f944:	fb0c 6c02 	mla	ip, ip, r2, r6
9001f948:	fb08 4402 	mla	r4, r8, r2, r4
9001f94c:	f10e 0201 	add.w	r2, lr, #1
9001f950:	fa1f fc8c 	uxth.w	ip, ip
9001f954:	b2a4      	uxth	r4, r4
9001f956:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001f95a:	9a02      	ldr	r2, [sp, #8]
9001f95c:	1c66      	adds	r6, r4, #1
9001f95e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001f962:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001f966:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001f96a:	ea46 0e0e 	orr.w	lr, r6, lr
9001f96e:	f10c 0601 	add.w	r6, ip, #1
9001f972:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001f976:	0976      	lsrs	r6, r6, #5
9001f978:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001f97c:	ea4e 0e06 	orr.w	lr, lr, r6
9001f980:	f825 e002 	strh.w	lr, [r5, r2]
9001f984:	e7b3      	b.n	9001f8ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001f986:	f04f 0800 	mov.w	r8, #0
9001f98a:	eba3 0208 	sub.w	r2, r3, r8
9001f98e:	2a00      	cmp	r2, #0
9001f990:	f77f af3e 	ble.w	9001f810 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001f994:	1404      	asrs	r4, r0, #16
9001f996:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001f99a:	140a      	asrs	r2, r1, #16
9001f99c:	fb06 4202 	mla	r2, r6, r2, r4
9001f9a0:	9c01      	ldr	r4, [sp, #4]
9001f9a2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001f9a6:	0e22      	lsrs	r2, r4, #24
9001f9a8:	d015      	beq.n	9001f9d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001f9aa:	9e04      	ldr	r6, [sp, #16]
9001f9ac:	4372      	muls	r2, r6
9001f9ae:	1c56      	adds	r6, r2, #1
9001f9b0:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001f9b4:	0a26      	lsrs	r6, r4, #8
9001f9b6:	1212      	asrs	r2, r2, #8
9001f9b8:	2aff      	cmp	r2, #255	; 0xff
9001f9ba:	d113      	bne.n	9001f9e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001f9bc:	0962      	lsrs	r2, r4, #5
9001f9be:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001f9c2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001f9c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f9ca:	f026 0607 	bic.w	r6, r6, #7
9001f9ce:	4316      	orrs	r6, r2
9001f9d0:	4326      	orrs	r6, r4
9001f9d2:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001f9d6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001f9d8:	f108 0801 	add.w	r8, r8, #1
9001f9dc:	4410      	add	r0, r2
9001f9de:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001f9e0:	4411      	add	r1, r2
9001f9e2:	e7d2      	b.n	9001f98a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001f9e4:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001f9e8:	fa1f fa82 	uxth.w	sl, r2
9001f9ec:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001f9f0:	43d2      	mvns	r2, r2
9001f9f2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001f9f6:	fb17 f70a 	smulbb	r7, r7, sl
9001f9fa:	b2d2      	uxtb	r2, r2
9001f9fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001fa00:	b2e4      	uxtb	r4, r4
9001fa02:	b2f6      	uxtb	r6, r6
9001fa04:	fb0c 7c02 	mla	ip, ip, r2, r7
9001fa08:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001fa0c:	fb14 f40a 	smulbb	r4, r4, sl
9001fa10:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001fa14:	fa1f fc8c 	uxth.w	ip, ip
9001fa18:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001fa1c:	fb16 f60a 	smulbb	r6, r6, sl
9001fa20:	fa5f fe8e 	uxtb.w	lr, lr
9001fa24:	fb0e 4402 	mla	r4, lr, r2, r4
9001fa28:	fb07 6702 	mla	r7, r7, r2, r6
9001fa2c:	f10c 0201 	add.w	r2, ip, #1
9001fa30:	b2a4      	uxth	r4, r4
9001fa32:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001fa36:	1c66      	adds	r6, r4, #1
9001fa38:	b2bf      	uxth	r7, r7
9001fa3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001fa3e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001fa42:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001fa46:	ea46 0c0c 	orr.w	ip, r6, ip
9001fa4a:	1c7e      	adds	r6, r7, #1
9001fa4c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001fa50:	0976      	lsrs	r6, r6, #5
9001fa52:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001fa56:	ea4c 0c06 	orr.w	ip, ip, r6
9001fa5a:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001fa5e:	e7ba      	b.n	9001f9d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001fa60:	b007      	add	sp, #28
9001fa62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001fa68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fa68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fa6c:	b085      	sub	sp, #20
9001fa6e:	468b      	mov	fp, r1
9001fa70:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001fa74:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001fa76:	9203      	str	r2, [sp, #12]
9001fa78:	6841      	ldr	r1, [r0, #4]
9001fa7a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001fa7e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001fa82:	fb01 2404 	mla	r4, r1, r4, r2
9001fa86:	6802      	ldr	r2, [r0, #0]
9001fa88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001fa8c:	f8d8 2000 	ldr.w	r2, [r8]
9001fa90:	9201      	str	r2, [sp, #4]
9001fa92:	f1bb 0f00 	cmp.w	fp, #0
9001fa96:	dc03      	bgt.n	9001faa0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001fa98:	9a03      	ldr	r2, [sp, #12]
9001fa9a:	2a00      	cmp	r2, #0
9001fa9c:	f340 814f 	ble.w	9001fd3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001faa0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001faa2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001faa6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001faaa:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001faac:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001fab0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001fab4:	2b00      	cmp	r3, #0
9001fab6:	dd0e      	ble.n	9001fad6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001fab8:	1408      	asrs	r0, r1, #16
9001faba:	d405      	bmi.n	9001fac8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001fabc:	42b8      	cmp	r0, r7
9001fabe:	da03      	bge.n	9001fac8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001fac0:	1410      	asrs	r0, r2, #16
9001fac2:	d401      	bmi.n	9001fac8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001fac4:	42b0      	cmp	r0, r6
9001fac6:	db07      	blt.n	9001fad8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001fac8:	9811      	ldr	r0, [sp, #68]	; 0x44
9001faca:	3b01      	subs	r3, #1
9001facc:	3402      	adds	r4, #2
9001face:	4401      	add	r1, r0
9001fad0:	9812      	ldr	r0, [sp, #72]	; 0x48
9001fad2:	4402      	add	r2, r0
9001fad4:	e7ee      	b.n	9001fab4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001fad6:	d017      	beq.n	9001fb08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001fad8:	1e58      	subs	r0, r3, #1
9001fada:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001fadc:	fb05 1500 	mla	r5, r5, r0, r1
9001fae0:	142d      	asrs	r5, r5, #16
9001fae2:	d409      	bmi.n	9001faf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001fae4:	42bd      	cmp	r5, r7
9001fae6:	da07      	bge.n	9001faf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001fae8:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001faea:	fb05 2000 	mla	r0, r5, r0, r2
9001faee:	1400      	asrs	r0, r0, #16
9001faf0:	d402      	bmi.n	9001faf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001faf2:	42b0      	cmp	r0, r6
9001faf4:	f2c0 80ba 	blt.w	9001fc6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001faf8:	2600      	movs	r6, #0
9001fafa:	1998      	adds	r0, r3, r6
9001fafc:	2800      	cmp	r0, #0
9001fafe:	dc3e      	bgt.n	9001fb7e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001fb00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001fb04:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001fb08:	f1bb 0f00 	cmp.w	fp, #0
9001fb0c:	f340 8117 	ble.w	9001fd3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001fb10:	ee30 0a04 	vadd.f32	s0, s0, s8
9001fb14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001fb16:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001fb1a:	f1bb 0b01 	subs.w	fp, fp, #1
9001fb1e:	eeb0 6a62 	vmov.f32	s12, s5
9001fb22:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001fb26:	ee31 1a05 	vadd.f32	s2, s2, s10
9001fb2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001fb2e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001fb32:	eeb0 6a43 	vmov.f32	s12, s6
9001fb36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001fb3a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001fb3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001fb42:	ee61 7a27 	vmul.f32	s15, s2, s15
9001fb46:	ee77 2a62 	vsub.f32	s5, s14, s5
9001fb4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001fb4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001fb52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001fb56:	ee12 2a90 	vmov	r2, s5
9001fb5a:	eef0 2a47 	vmov.f32	s5, s14
9001fb5e:	fb92 f3f3 	sdiv	r3, r2, r3
9001fb62:	ee13 2a10 	vmov	r2, s6
9001fb66:	9311      	str	r3, [sp, #68]	; 0x44
9001fb68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001fb6a:	eeb0 3a67 	vmov.f32	s6, s15
9001fb6e:	fb92 f3f3 	sdiv	r3, r2, r3
9001fb72:	9a03      	ldr	r2, [sp, #12]
9001fb74:	9312      	str	r3, [sp, #72]	; 0x48
9001fb76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001fb78:	bf08      	it	eq
9001fb7a:	4613      	moveq	r3, r2
9001fb7c:	e789      	b.n	9001fa92 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001fb7e:	140f      	asrs	r7, r1, #16
9001fb80:	d424      	bmi.n	9001fbcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001fb82:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001fb86:	42bd      	cmp	r5, r7
9001fb88:	dd20      	ble.n	9001fbcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001fb8a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001fb8e:	d41d      	bmi.n	9001fbcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001fb90:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001fb94:	4560      	cmp	r0, ip
9001fb96:	dd19      	ble.n	9001fbcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001fb98:	b22d      	sxth	r5, r5
9001fb9a:	9801      	ldr	r0, [sp, #4]
9001fb9c:	fb0c 7505 	mla	r5, ip, r5, r7
9001fba0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001fba4:	0e07      	lsrs	r7, r0, #24
9001fba6:	2fff      	cmp	r7, #255	; 0xff
9001fba8:	d116      	bne.n	9001fbd8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001fbaa:	f06f 0501 	mvn.w	r5, #1
9001fbae:	fb05 f706 	mul.w	r7, r5, r6
9001fbb2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001fbb6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001fbba:	0945      	lsrs	r5, r0, #5
9001fbbc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001fbc0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001fbc4:	ea4c 0505 	orr.w	r5, ip, r5
9001fbc8:	4305      	orrs	r5, r0
9001fbca:	53e5      	strh	r5, [r4, r7]
9001fbcc:	9811      	ldr	r0, [sp, #68]	; 0x44
9001fbce:	3e01      	subs	r6, #1
9001fbd0:	4401      	add	r1, r0
9001fbd2:	9812      	ldr	r0, [sp, #72]	; 0x48
9001fbd4:	4402      	add	r2, r0
9001fbd6:	e790      	b.n	9001fafa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001fbd8:	b2fd      	uxtb	r5, r7
9001fbda:	2f00      	cmp	r7, #0
9001fbdc:	d0f6      	beq.n	9001fbcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001fbde:	f06f 0701 	mvn.w	r7, #1
9001fbe2:	fa1f f985 	uxth.w	r9, r5
9001fbe6:	43ed      	mvns	r5, r5
9001fbe8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001fbec:	4377      	muls	r7, r6
9001fbee:	fb1a fa09 	smulbb	sl, sl, r9
9001fbf2:	b2ed      	uxtb	r5, r5
9001fbf4:	f834 e007 	ldrh.w	lr, [r4, r7]
9001fbf8:	9702      	str	r7, [sp, #8]
9001fbfa:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001fbfe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001fc02:	fb17 f709 	smulbb	r7, r7, r9
9001fc06:	b2c0      	uxtb	r0, r0
9001fc08:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001fc0c:	fb10 f009 	smulbb	r0, r0, r9
9001fc10:	fb0c 7c05 	mla	ip, ip, r5, r7
9001fc14:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001fc18:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001fc1c:	fa1f fc8c 	uxth.w	ip, ip
9001fc20:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001fc24:	fa5f fe8e 	uxtb.w	lr, lr
9001fc28:	fb07 a705 	mla	r7, r7, r5, sl
9001fc2c:	fb0e 0005 	mla	r0, lr, r5, r0
9001fc30:	f10c 0501 	add.w	r5, ip, #1
9001fc34:	b2bf      	uxth	r7, r7
9001fc36:	b280      	uxth	r0, r0
9001fc38:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001fc3c:	f100 0a01 	add.w	sl, r0, #1
9001fc40:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001fc44:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001fc48:	9802      	ldr	r0, [sp, #8]
9001fc4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001fc4e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001fc52:	f107 0a01 	add.w	sl, r7, #1
9001fc56:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001fc5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fc5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001fc62:	ea4c 0c0a 	orr.w	ip, ip, sl
9001fc66:	f824 c000 	strh.w	ip, [r4, r0]
9001fc6a:	e7af      	b.n	9001fbcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001fc6c:	f04f 0e00 	mov.w	lr, #0
9001fc70:	eba3 000e 	sub.w	r0, r3, lr
9001fc74:	2800      	cmp	r0, #0
9001fc76:	f77f af43 	ble.w	9001fb00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001fc7a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001fc7e:	140d      	asrs	r5, r1, #16
9001fc80:	1410      	asrs	r0, r2, #16
9001fc82:	fb06 5000 	mla	r0, r6, r0, r5
9001fc86:	9d01      	ldr	r5, [sp, #4]
9001fc88:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001fc8c:	0e2e      	lsrs	r6, r5, #24
9001fc8e:	2eff      	cmp	r6, #255	; 0xff
9001fc90:	d112      	bne.n	9001fcb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001fc92:	482c      	ldr	r0, [pc, #176]	; (9001fd44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001fc94:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001fc98:	0968      	lsrs	r0, r5, #5
9001fc9a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001fc9e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001fca2:	4330      	orrs	r0, r6
9001fca4:	4328      	orrs	r0, r5
9001fca6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001fcaa:	9811      	ldr	r0, [sp, #68]	; 0x44
9001fcac:	f10e 0e01 	add.w	lr, lr, #1
9001fcb0:	4401      	add	r1, r0
9001fcb2:	9812      	ldr	r0, [sp, #72]	; 0x48
9001fcb4:	4402      	add	r2, r0
9001fcb6:	e7db      	b.n	9001fc70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001fcb8:	b2f0      	uxtb	r0, r6
9001fcba:	2e00      	cmp	r6, #0
9001fcbc:	d0f5      	beq.n	9001fcaa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001fcbe:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001fcc2:	fa1f f980 	uxth.w	r9, r0
9001fcc6:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001fcca:	43c0      	mvns	r0, r0
9001fccc:	ea4f 272c 	mov.w	r7, ip, asr #8
9001fcd0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001fcd4:	fb16 f609 	smulbb	r6, r6, r9
9001fcd8:	b2c0      	uxtb	r0, r0
9001fcda:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001fcde:	b2ed      	uxtb	r5, r5
9001fce0:	fb1a fa09 	smulbb	sl, sl, r9
9001fce4:	fb07 6700 	mla	r7, r7, r0, r6
9001fce8:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001fcec:	fb15 f509 	smulbb	r5, r5, r9
9001fcf0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001fcf4:	b2bf      	uxth	r7, r7
9001fcf6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001fcfa:	fa5f fc8c 	uxtb.w	ip, ip
9001fcfe:	fb06 a600 	mla	r6, r6, r0, sl
9001fd02:	fb0c 5500 	mla	r5, ip, r0, r5
9001fd06:	1c78      	adds	r0, r7, #1
9001fd08:	b2b6      	uxth	r6, r6
9001fd0a:	b2ad      	uxth	r5, r5
9001fd0c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001fd10:	f105 0a01 	add.w	sl, r5, #1
9001fd14:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001fd18:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001fd1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001fd20:	ea4a 0707 	orr.w	r7, sl, r7
9001fd24:	f106 0a01 	add.w	sl, r6, #1
9001fd28:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001fd2c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fd30:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001fd34:	ea47 070a 	orr.w	r7, r7, sl
9001fd38:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001fd3c:	e7b5      	b.n	9001fcaa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001fd3e:	b005      	add	sp, #20
9001fd40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fd44:	fffff800 	.word	0xfffff800

9001fd48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fd48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fd4c:	b087      	sub	sp, #28
9001fd4e:	468b      	mov	fp, r1
9001fd50:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001fd54:	9815      	ldr	r0, [sp, #84]	; 0x54
9001fd56:	9203      	str	r2, [sp, #12]
9001fd58:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001fd5c:	6841      	ldr	r1, [r0, #4]
9001fd5e:	9204      	str	r2, [sp, #16]
9001fd60:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001fd64:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001fd68:	fb01 2404 	mla	r4, r1, r4, r2
9001fd6c:	6802      	ldr	r2, [r0, #0]
9001fd6e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001fd72:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001fd76:	3201      	adds	r2, #1
9001fd78:	f022 0201 	bic.w	r2, r2, #1
9001fd7c:	9200      	str	r2, [sp, #0]
9001fd7e:	f8d9 2000 	ldr.w	r2, [r9]
9001fd82:	9201      	str	r2, [sp, #4]
9001fd84:	f1bb 0f00 	cmp.w	fp, #0
9001fd88:	dc03      	bgt.n	9001fd92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001fd8a:	9a03      	ldr	r2, [sp, #12]
9001fd8c:	2a00      	cmp	r2, #0
9001fd8e:	f340 816a 	ble.w	90020066 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001fd92:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001fd94:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001fd98:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001fd9c:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001fd9e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001fda2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001fda6:	2b00      	cmp	r3, #0
9001fda8:	dd0e      	ble.n	9001fdc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001fdaa:	1402      	asrs	r2, r0, #16
9001fdac:	d405      	bmi.n	9001fdba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001fdae:	42ba      	cmp	r2, r7
9001fdb0:	da03      	bge.n	9001fdba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001fdb2:	140a      	asrs	r2, r1, #16
9001fdb4:	d401      	bmi.n	9001fdba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001fdb6:	42b2      	cmp	r2, r6
9001fdb8:	db07      	blt.n	9001fdca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001fdba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001fdbc:	3b01      	subs	r3, #1
9001fdbe:	3402      	adds	r4, #2
9001fdc0:	4410      	add	r0, r2
9001fdc2:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001fdc4:	4411      	add	r1, r2
9001fdc6:	e7ee      	b.n	9001fda6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001fdc8:	d017      	beq.n	9001fdfa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001fdca:	1e5a      	subs	r2, r3, #1
9001fdcc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001fdce:	fb05 0502 	mla	r5, r5, r2, r0
9001fdd2:	142d      	asrs	r5, r5, #16
9001fdd4:	d409      	bmi.n	9001fdea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001fdd6:	42bd      	cmp	r5, r7
9001fdd8:	da07      	bge.n	9001fdea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001fdda:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001fddc:	fb05 1202 	mla	r2, r5, r2, r1
9001fde0:	1412      	asrs	r2, r2, #16
9001fde2:	d402      	bmi.n	9001fdea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001fde4:	42b2      	cmp	r2, r6
9001fde6:	f2c0 80c8 	blt.w	9001ff7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001fdea:	2700      	movs	r7, #0
9001fdec:	19da      	adds	r2, r3, r7
9001fdee:	2a00      	cmp	r2, #0
9001fdf0:	dc3e      	bgt.n	9001fe70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001fdf2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001fdf6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001fdfa:	f1bb 0f00 	cmp.w	fp, #0
9001fdfe:	f340 8132 	ble.w	90020066 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001fe02:	ee30 0a04 	vadd.f32	s0, s0, s8
9001fe06:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001fe08:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001fe0c:	f1bb 0b01 	subs.w	fp, fp, #1
9001fe10:	eeb0 6a62 	vmov.f32	s12, s5
9001fe14:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001fe18:	ee31 1a05 	vadd.f32	s2, s2, s10
9001fe1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001fe20:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001fe24:	eeb0 6a43 	vmov.f32	s12, s6
9001fe28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001fe2c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001fe30:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001fe34:	ee61 7a27 	vmul.f32	s15, s2, s15
9001fe38:	ee77 2a62 	vsub.f32	s5, s14, s5
9001fe3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001fe40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001fe44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001fe48:	ee12 2a90 	vmov	r2, s5
9001fe4c:	eef0 2a47 	vmov.f32	s5, s14
9001fe50:	fb92 f3f3 	sdiv	r3, r2, r3
9001fe54:	ee13 2a10 	vmov	r2, s6
9001fe58:	9313      	str	r3, [sp, #76]	; 0x4c
9001fe5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001fe5c:	eeb0 3a67 	vmov.f32	s6, s15
9001fe60:	fb92 f3f3 	sdiv	r3, r2, r3
9001fe64:	9a03      	ldr	r2, [sp, #12]
9001fe66:	9314      	str	r3, [sp, #80]	; 0x50
9001fe68:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001fe6a:	bf08      	it	eq
9001fe6c:	4613      	moveq	r3, r2
9001fe6e:	e789      	b.n	9001fd84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001fe70:	1405      	asrs	r5, r0, #16
9001fe72:	d436      	bmi.n	9001fee2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001fe74:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001fe78:	42aa      	cmp	r2, r5
9001fe7a:	dd32      	ble.n	9001fee2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001fe7c:	140e      	asrs	r6, r1, #16
9001fe7e:	d430      	bmi.n	9001fee2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001fe80:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001fe84:	42b2      	cmp	r2, r6
9001fe86:	dd2c      	ble.n	9001fee2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001fe88:	9a00      	ldr	r2, [sp, #0]
9001fe8a:	fb06 5502 	mla	r5, r6, r2, r5
9001fe8e:	9e01      	ldr	r6, [sp, #4]
9001fe90:	086a      	lsrs	r2, r5, #1
9001fe92:	5cb2      	ldrb	r2, [r6, r2]
9001fe94:	07ee      	lsls	r6, r5, #31
9001fe96:	bf54      	ite	pl
9001fe98:	f002 020f 	andpl.w	r2, r2, #15
9001fe9c:	1112      	asrmi	r2, r2, #4
9001fe9e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001fea2:	b2d2      	uxtb	r2, r2
9001fea4:	b1ea      	cbz	r2, 9001fee2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001fea6:	9d04      	ldr	r5, [sp, #16]
9001fea8:	436a      	muls	r2, r5
9001feaa:	1c55      	adds	r5, r2, #1
9001feac:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001feb0:	4d6e      	ldr	r5, [pc, #440]	; (9002006c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001feb2:	1212      	asrs	r2, r2, #8
9001feb4:	682d      	ldr	r5, [r5, #0]
9001feb6:	2aff      	cmp	r2, #255	; 0xff
9001feb8:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001febc:	9605      	str	r6, [sp, #20]
9001febe:	d116      	bne.n	9001feee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001fec0:	f06f 0201 	mvn.w	r2, #1
9001fec4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001fec8:	fb02 fc07 	mul.w	ip, r2, r7
9001fecc:	096a      	lsrs	r2, r5, #5
9001fece:	f026 0607 	bic.w	r6, r6, #7
9001fed2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001fed6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001feda:	4316      	orrs	r6, r2
9001fedc:	432e      	orrs	r6, r5
9001fede:	f824 600c 	strh.w	r6, [r4, ip]
9001fee2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001fee4:	3f01      	subs	r7, #1
9001fee6:	4410      	add	r0, r2
9001fee8:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001feea:	4411      	add	r1, r2
9001feec:	e77e      	b.n	9001fdec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001feee:	f06f 0601 	mvn.w	r6, #1
9001fef2:	fa1f fa82 	uxth.w	sl, r2
9001fef6:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001fefa:	43d2      	mvns	r2, r2
9001fefc:	437e      	muls	r6, r7
9001fefe:	b2ed      	uxtb	r5, r5
9001ff00:	fb1c fc0a 	smulbb	ip, ip, sl
9001ff04:	b2d2      	uxtb	r2, r2
9001ff06:	f834 8006 	ldrh.w	r8, [r4, r6]
9001ff0a:	fb15 f50a 	smulbb	r5, r5, sl
9001ff0e:	9602      	str	r6, [sp, #8]
9001ff10:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001ff14:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001ff18:	fb16 f60a 	smulbb	r6, r6, sl
9001ff1c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001ff20:	fb0e ce02 	mla	lr, lr, r2, ip
9001ff24:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001ff28:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ff2c:	fa1f fe8e 	uxth.w	lr, lr
9001ff30:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001ff34:	fa5f f888 	uxtb.w	r8, r8
9001ff38:	fb0c 6c02 	mla	ip, ip, r2, r6
9001ff3c:	fb08 5502 	mla	r5, r8, r2, r5
9001ff40:	f10e 0201 	add.w	r2, lr, #1
9001ff44:	fa1f fc8c 	uxth.w	ip, ip
9001ff48:	b2ad      	uxth	r5, r5
9001ff4a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001ff4e:	9a02      	ldr	r2, [sp, #8]
9001ff50:	1c6e      	adds	r6, r5, #1
9001ff52:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001ff56:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001ff5a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ff5e:	ea46 0e0e 	orr.w	lr, r6, lr
9001ff62:	f10c 0601 	add.w	r6, ip, #1
9001ff66:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001ff6a:	0976      	lsrs	r6, r6, #5
9001ff6c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001ff70:	ea4e 0e06 	orr.w	lr, lr, r6
9001ff74:	f824 e002 	strh.w	lr, [r4, r2]
9001ff78:	e7b3      	b.n	9001fee2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ff7a:	f04f 0800 	mov.w	r8, #0
9001ff7e:	eba3 0208 	sub.w	r2, r3, r8
9001ff82:	2a00      	cmp	r2, #0
9001ff84:	f77f af35 	ble.w	9001fdf2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001ff88:	1402      	asrs	r2, r0, #16
9001ff8a:	9e00      	ldr	r6, [sp, #0]
9001ff8c:	140d      	asrs	r5, r1, #16
9001ff8e:	fb06 2505 	mla	r5, r6, r5, r2
9001ff92:	9e01      	ldr	r6, [sp, #4]
9001ff94:	086a      	lsrs	r2, r5, #1
9001ff96:	07ed      	lsls	r5, r5, #31
9001ff98:	5cb2      	ldrb	r2, [r6, r2]
9001ff9a:	bf54      	ite	pl
9001ff9c:	f002 020f 	andpl.w	r2, r2, #15
9001ffa0:	1112      	asrmi	r2, r2, #4
9001ffa2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ffa6:	b2d2      	uxtb	r2, r2
9001ffa8:	b1c2      	cbz	r2, 9001ffdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001ffaa:	9d04      	ldr	r5, [sp, #16]
9001ffac:	436a      	muls	r2, r5
9001ffae:	1c55      	adds	r5, r2, #1
9001ffb0:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001ffb4:	4d2d      	ldr	r5, [pc, #180]	; (9002006c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001ffb6:	1212      	asrs	r2, r2, #8
9001ffb8:	682e      	ldr	r6, [r5, #0]
9001ffba:	2aff      	cmp	r2, #255	; 0xff
9001ffbc:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001ffc0:	d113      	bne.n	9001ffea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001ffc2:	0972      	lsrs	r2, r6, #5
9001ffc4:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001ffc8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001ffcc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001ffd0:	f025 0507 	bic.w	r5, r5, #7
9001ffd4:	4315      	orrs	r5, r2
9001ffd6:	4335      	orrs	r5, r6
9001ffd8:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001ffdc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001ffde:	f108 0801 	add.w	r8, r8, #1
9001ffe2:	4410      	add	r0, r2
9001ffe4:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001ffe6:	4411      	add	r1, r2
9001ffe8:	e7c9      	b.n	9001ff7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001ffea:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001ffee:	fa1f fa82 	uxth.w	sl, r2
9001fff2:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001fff6:	43d2      	mvns	r2, r2
9001fff8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001fffc:	fb17 f70a 	smulbb	r7, r7, sl
90020000:	b2d2      	uxtb	r2, r2
90020002:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90020006:	b2f6      	uxtb	r6, r6
90020008:	b2ed      	uxtb	r5, r5
9002000a:	fb0c 7c02 	mla	ip, ip, r2, r7
9002000e:	ea4f 07ee 	mov.w	r7, lr, asr #3
90020012:	fb16 f60a 	smulbb	r6, r6, sl
90020016:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002001a:	fa1f fc8c 	uxth.w	ip, ip
9002001e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90020022:	fb15 f50a 	smulbb	r5, r5, sl
90020026:	fa5f fe8e 	uxtb.w	lr, lr
9002002a:	fb0e 6602 	mla	r6, lr, r2, r6
9002002e:	fb07 5702 	mla	r7, r7, r2, r5
90020032:	f10c 0201 	add.w	r2, ip, #1
90020036:	b2b6      	uxth	r6, r6
90020038:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9002003c:	1c75      	adds	r5, r6, #1
9002003e:	b2bf      	uxth	r7, r7
90020040:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90020044:	eb05 2516 	add.w	r5, r5, r6, lsr #8
90020048:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9002004c:	ea45 0c0c 	orr.w	ip, r5, ip
90020050:	1c7d      	adds	r5, r7, #1
90020052:	eb05 2517 	add.w	r5, r5, r7, lsr #8
90020056:	096d      	lsrs	r5, r5, #5
90020058:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002005c:	ea4c 0c05 	orr.w	ip, ip, r5
90020060:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
90020064:	e7ba      	b.n	9001ffdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90020066:	b007      	add	sp, #28
90020068:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002006c:	24028e3c 	.word	0x24028e3c

90020070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020074:	b087      	sub	sp, #28
90020076:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9002007a:	f8df 8308 	ldr.w	r8, [pc, #776]	; 90020384 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9002007e:	9815      	ldr	r0, [sp, #84]	; 0x54
90020080:	9101      	str	r1, [sp, #4]
90020082:	9205      	str	r2, [sp, #20]
90020084:	6841      	ldr	r1, [r0, #4]
90020086:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9002008a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9002008e:	fb01 2404 	mla	r4, r1, r4, r2
90020092:	6802      	ldr	r2, [r0, #0]
90020094:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90020098:	f8db 2008 	ldr.w	r2, [fp, #8]
9002009c:	3201      	adds	r2, #1
9002009e:	f022 0201 	bic.w	r2, r2, #1
900200a2:	9202      	str	r2, [sp, #8]
900200a4:	f8db 2000 	ldr.w	r2, [fp]
900200a8:	9203      	str	r2, [sp, #12]
900200aa:	9a01      	ldr	r2, [sp, #4]
900200ac:	2a00      	cmp	r2, #0
900200ae:	dc03      	bgt.n	900200b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900200b0:	9a05      	ldr	r2, [sp, #20]
900200b2:	2a00      	cmp	r2, #0
900200b4:	f340 8162 	ble.w	9002037c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
900200b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
900200ba:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
900200be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
900200c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
900200c4:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
900200c8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
900200cc:	2b00      	cmp	r3, #0
900200ce:	dd0e      	ble.n	900200ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900200d0:	1402      	asrs	r2, r0, #16
900200d2:	d405      	bmi.n	900200e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900200d4:	42ba      	cmp	r2, r7
900200d6:	da03      	bge.n	900200e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900200d8:	140a      	asrs	r2, r1, #16
900200da:	d401      	bmi.n	900200e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900200dc:	42b2      	cmp	r2, r6
900200de:	db07      	blt.n	900200f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
900200e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900200e2:	3b01      	subs	r3, #1
900200e4:	3402      	adds	r4, #2
900200e6:	4410      	add	r0, r2
900200e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
900200ea:	4411      	add	r1, r2
900200ec:	e7ee      	b.n	900200cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
900200ee:	d017      	beq.n	90020120 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
900200f0:	1e5a      	subs	r2, r3, #1
900200f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900200f4:	fb05 0502 	mla	r5, r5, r2, r0
900200f8:	142d      	asrs	r5, r5, #16
900200fa:	d409      	bmi.n	90020110 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
900200fc:	42bd      	cmp	r5, r7
900200fe:	da07      	bge.n	90020110 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
90020100:	9d14      	ldr	r5, [sp, #80]	; 0x50
90020102:	fb05 1202 	mla	r2, r5, r2, r1
90020106:	1412      	asrs	r2, r2, #16
90020108:	d402      	bmi.n	90020110 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9002010a:	42b2      	cmp	r2, r6
9002010c:	f2c0 80c3 	blt.w	90020296 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
90020110:	2500      	movs	r5, #0
90020112:	195a      	adds	r2, r3, r5
90020114:	2a00      	cmp	r2, #0
90020116:	dc3f      	bgt.n	90020198 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
90020118:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002011c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90020120:	9b01      	ldr	r3, [sp, #4]
90020122:	2b00      	cmp	r3, #0
90020124:	f340 812a 	ble.w	9002037c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
90020128:	ee30 0a04 	vadd.f32	s0, s0, s8
9002012c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9002012e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020132:	eeb0 6a62 	vmov.f32	s12, s5
90020136:	eec6 7a80 	vdiv.f32	s15, s13, s0
9002013a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002013e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020142:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90020146:	eeb0 6a43 	vmov.f32	s12, s6
9002014a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9002014e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90020152:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020156:	ee61 7a27 	vmul.f32	s15, s2, s15
9002015a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002015e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020162:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020166:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002016a:	ee12 2a90 	vmov	r2, s5
9002016e:	eef0 2a47 	vmov.f32	s5, s14
90020172:	fb92 f3f3 	sdiv	r3, r2, r3
90020176:	ee13 2a10 	vmov	r2, s6
9002017a:	9313      	str	r3, [sp, #76]	; 0x4c
9002017c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9002017e:	eeb0 3a67 	vmov.f32	s6, s15
90020182:	fb92 f3f3 	sdiv	r3, r2, r3
90020186:	9314      	str	r3, [sp, #80]	; 0x50
90020188:	9b01      	ldr	r3, [sp, #4]
9002018a:	9a05      	ldr	r2, [sp, #20]
9002018c:	3b01      	subs	r3, #1
9002018e:	9301      	str	r3, [sp, #4]
90020190:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020192:	bf08      	it	eq
90020194:	4613      	moveq	r3, r2
90020196:	e788      	b.n	900200aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90020198:	1406      	asrs	r6, r0, #16
9002019a:	d42c      	bmi.n	900201f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002019c:	f8db 2008 	ldr.w	r2, [fp, #8]
900201a0:	42b2      	cmp	r2, r6
900201a2:	dd28      	ble.n	900201f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900201a4:	140f      	asrs	r7, r1, #16
900201a6:	d426      	bmi.n	900201f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900201a8:	f8db 200c 	ldr.w	r2, [fp, #12]
900201ac:	42ba      	cmp	r2, r7
900201ae:	dd22      	ble.n	900201f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900201b0:	9a02      	ldr	r2, [sp, #8]
900201b2:	fb07 6602 	mla	r6, r7, r2, r6
900201b6:	9f03      	ldr	r7, [sp, #12]
900201b8:	0872      	lsrs	r2, r6, #1
900201ba:	07f6      	lsls	r6, r6, #31
900201bc:	5cba      	ldrb	r2, [r7, r2]
900201be:	bf54      	ite	pl
900201c0:	f002 020f 	andpl.w	r2, r2, #15
900201c4:	1112      	asrmi	r2, r2, #4
900201c6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900201ca:	b2d2      	uxtb	r2, r2
900201cc:	2aff      	cmp	r2, #255	; 0xff
900201ce:	d118      	bne.n	90020202 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
900201d0:	f06f 0601 	mvn.w	r6, #1
900201d4:	f8d8 2000 	ldr.w	r2, [r8]
900201d8:	fb06 f705 	mul.w	r7, r6, r5
900201dc:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
900201e0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
900201e4:	0956      	lsrs	r6, r2, #5
900201e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900201ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
900201ee:	ea4c 0606 	orr.w	r6, ip, r6
900201f2:	4316      	orrs	r6, r2
900201f4:	53e6      	strh	r6, [r4, r7]
900201f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900201f8:	3d01      	subs	r5, #1
900201fa:	4410      	add	r0, r2
900201fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
900201fe:	4411      	add	r1, r2
90020200:	e787      	b.n	90020112 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
90020202:	2a00      	cmp	r2, #0
90020204:	d0f7      	beq.n	900201f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020206:	f06f 0601 	mvn.w	r6, #1
9002020a:	f8d8 c000 	ldr.w	ip, [r8]
9002020e:	fa1f f982 	uxth.w	r9, r2
90020212:	43d2      	mvns	r2, r2
90020214:	436e      	muls	r6, r5
90020216:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9002021a:	b2d2      	uxtb	r2, r2
9002021c:	f834 e006 	ldrh.w	lr, [r4, r6]
90020220:	fb1a fa09 	smulbb	sl, sl, r9
90020224:	9604      	str	r6, [sp, #16]
90020226:	f3cc 4607 	ubfx	r6, ip, #16, #8
9002022a:	ea4f 272e 	mov.w	r7, lr, asr #8
9002022e:	fb16 f609 	smulbb	r6, r6, r9
90020232:	fa5f fc8c 	uxtb.w	ip, ip
90020236:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9002023a:	fb1c fc09 	smulbb	ip, ip, r9
9002023e:	fb07 6702 	mla	r7, r7, r2, r6
90020242:	ea4f 06ee 	mov.w	r6, lr, asr #3
90020246:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002024a:	b2bf      	uxth	r7, r7
9002024c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90020250:	fa5f fe8e 	uxtb.w	lr, lr
90020254:	fb06 a602 	mla	r6, r6, r2, sl
90020258:	fb0e cc02 	mla	ip, lr, r2, ip
9002025c:	1c7a      	adds	r2, r7, #1
9002025e:	b2b6      	uxth	r6, r6
90020260:	fa1f fc8c 	uxth.w	ip, ip
90020264:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90020268:	9a04      	ldr	r2, [sp, #16]
9002026a:	f10c 0a01 	add.w	sl, ip, #1
9002026e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90020272:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
90020276:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9002027a:	ea4a 0707 	orr.w	r7, sl, r7
9002027e:	f106 0a01 	add.w	sl, r6, #1
90020282:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90020286:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9002028a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9002028e:	ea47 070a 	orr.w	r7, r7, sl
90020292:	52a7      	strh	r7, [r4, r2]
90020294:	e7af      	b.n	900201f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020296:	f04f 0e00 	mov.w	lr, #0
9002029a:	eba3 020e 	sub.w	r2, r3, lr
9002029e:	2a00      	cmp	r2, #0
900202a0:	f77f af3a 	ble.w	90020118 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
900202a4:	1402      	asrs	r2, r0, #16
900202a6:	9e02      	ldr	r6, [sp, #8]
900202a8:	140d      	asrs	r5, r1, #16
900202aa:	fb06 2505 	mla	r5, r6, r5, r2
900202ae:	9e03      	ldr	r6, [sp, #12]
900202b0:	086a      	lsrs	r2, r5, #1
900202b2:	07ed      	lsls	r5, r5, #31
900202b4:	5cb2      	ldrb	r2, [r6, r2]
900202b6:	bf54      	ite	pl
900202b8:	f002 020f 	andpl.w	r2, r2, #15
900202bc:	1112      	asrmi	r2, r2, #4
900202be:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900202c2:	b2d2      	uxtb	r2, r2
900202c4:	2aff      	cmp	r2, #255	; 0xff
900202c6:	d115      	bne.n	900202f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
900202c8:	f8d8 5000 	ldr.w	r5, [r8]
900202cc:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
900202d0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
900202d4:	096a      	lsrs	r2, r5, #5
900202d6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900202da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900202de:	4332      	orrs	r2, r6
900202e0:	432a      	orrs	r2, r5
900202e2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
900202e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900202e8:	f10e 0e01 	add.w	lr, lr, #1
900202ec:	4410      	add	r0, r2
900202ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
900202f0:	4411      	add	r1, r2
900202f2:	e7d2      	b.n	9002029a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900202f4:	2a00      	cmp	r2, #0
900202f6:	d0f6      	beq.n	900202e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
900202f8:	f8d8 7000 	ldr.w	r7, [r8]
900202fc:	fa1f f982 	uxth.w	r9, r2
90020300:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
90020304:	43d2      	mvns	r2, r2
90020306:	f3c7 4507 	ubfx	r5, r7, #16, #8
9002030a:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9002030e:	ea4f 262c 	mov.w	r6, ip, asr #8
90020312:	fb15 f509 	smulbb	r5, r5, r9
90020316:	b2d2      	uxtb	r2, r2
90020318:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9002031c:	b2ff      	uxtb	r7, r7
9002031e:	fb1a fa09 	smulbb	sl, sl, r9
90020322:	fb06 5602 	mla	r6, r6, r2, r5
90020326:	ea4f 05ec 	mov.w	r5, ip, asr #3
9002032a:	fb17 f709 	smulbb	r7, r7, r9
9002032e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020332:	b2b6      	uxth	r6, r6
90020334:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90020338:	fa5f fc8c 	uxtb.w	ip, ip
9002033c:	fb05 a502 	mla	r5, r5, r2, sl
90020340:	fb0c 7702 	mla	r7, ip, r2, r7
90020344:	1c72      	adds	r2, r6, #1
90020346:	b2ad      	uxth	r5, r5
90020348:	b2bf      	uxth	r7, r7
9002034a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9002034e:	f107 0a01 	add.w	sl, r7, #1
90020352:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90020356:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9002035a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9002035e:	ea4a 0606 	orr.w	r6, sl, r6
90020362:	f105 0a01 	add.w	sl, r5, #1
90020366:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9002036a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9002036e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90020372:	ea46 060a 	orr.w	r6, r6, sl
90020376:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9002037a:	e7b4      	b.n	900202e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9002037c:	b007      	add	sp, #28
9002037e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020382:	bf00      	nop
90020384:	24028e3c 	.word	0x24028e3c

90020388 <_ZN8touchgfx8LCD16bppD1Ev>:
90020388:	4770      	bx	lr

9002038a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9002038a:	4770      	bx	lr

9002038c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9002038c:	4770      	bx	lr

9002038e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9002038e:	4770      	bx	lr

90020390 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
90020390:	4770      	bx	lr

90020392 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
90020392:	4770      	bx	lr

90020394 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
90020394:	4770      	bx	lr

90020396 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
90020396:	4770      	bx	lr

90020398 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
90020398:	4770      	bx	lr

9002039a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9002039a:	4770      	bx	lr

9002039c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9002039c:	4770      	bx	lr

9002039e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9002039e:	4770      	bx	lr

900203a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
900203a0:	4770      	bx	lr

900203a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
900203a2:	4770      	bx	lr

900203a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
900203a4:	4770      	bx	lr

900203a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
900203a6:	4770      	bx	lr

900203a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
900203a8:	4770      	bx	lr

900203aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
900203aa:	4770      	bx	lr

900203ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
900203ac:	4770      	bx	lr

900203ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
900203ae:	4770      	bx	lr

900203b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
900203b0:	4770      	bx	lr

900203b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
900203b2:	4770      	bx	lr

900203b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
900203b4:	4770      	bx	lr

900203b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
900203b6:	4770      	bx	lr

900203b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
900203b8:	4770      	bx	lr

900203ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
900203ba:	4770      	bx	lr

900203bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
900203bc:	4770      	bx	lr

900203be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
900203be:	4770      	bx	lr

900203c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
900203c0:	4770      	bx	lr

900203c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
900203c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900203c6:	b088      	sub	sp, #32
900203c8:	4606      	mov	r6, r0
900203ca:	4688      	mov	r8, r1
900203cc:	4691      	mov	r9, r2
900203ce:	ac08      	add	r4, sp, #32
900203d0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
900203d4:	4620      	mov	r0, r4
900203d6:	f7fd fc67 	bl	9001dca8 <_ZNK8touchgfx6Bitmap7getDataEv>
900203da:	6833      	ldr	r3, [r6, #0]
900203dc:	4605      	mov	r5, r0
900203de:	4620      	mov	r0, r4
900203e0:	699f      	ldr	r7, [r3, #24]
900203e2:	f7fd fb75 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900203e6:	4682      	mov	sl, r0
900203e8:	4620      	mov	r0, r4
900203ea:	f7fd fba5 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
900203ee:	9500      	str	r5, [sp, #0]
900203f0:	464b      	mov	r3, r9
900203f2:	4642      	mov	r2, r8
900203f4:	4631      	mov	r1, r6
900203f6:	e9cd a001 	strd	sl, r0, [sp, #4]
900203fa:	a806      	add	r0, sp, #24
900203fc:	47b8      	blx	r7
900203fe:	4628      	mov	r0, r5
90020400:	b008      	add	sp, #32
90020402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

90020408 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
90020408:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002040c:	2300      	movs	r3, #0
9002040e:	9300      	str	r3, [sp, #0]
90020410:	4b3d      	ldr	r3, [pc, #244]	; (90020508 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
90020412:	781b      	ldrb	r3, [r3, #0]
90020414:	2b00      	cmp	r3, #0
90020416:	d137      	bne.n	90020488 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
90020418:	4a3c      	ldr	r2, [pc, #240]	; (9002050c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9002041a:	f9b2 2000 	ldrsh.w	r2, [r2]
9002041e:	f8ad 2004 	strh.w	r2, [sp, #4]
90020422:	2b00      	cmp	r3, #0
90020424:	d132      	bne.n	9002048c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
90020426:	4b3a      	ldr	r3, [pc, #232]	; (90020510 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
90020428:	f9b3 3000 	ldrsh.w	r3, [r3]
9002042c:	ac02      	add	r4, sp, #8
9002042e:	6808      	ldr	r0, [r1, #0]
90020430:	f8ad 3006 	strh.w	r3, [sp, #6]
90020434:	ab02      	add	r3, sp, #8
90020436:	6849      	ldr	r1, [r1, #4]
90020438:	4d36      	ldr	r5, [pc, #216]	; (90020514 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9002043a:	c303      	stmia	r3!, {r0, r1}
9002043c:	4669      	mov	r1, sp
9002043e:	4620      	mov	r0, r4
90020440:	f7fa fb66 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020444:	4668      	mov	r0, sp
90020446:	f7fa fb1f 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002044a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9002044e:	f8bd 2000 	ldrh.w	r2, [sp]
90020452:	462f      	mov	r7, r5
90020454:	6828      	ldr	r0, [r5, #0]
90020456:	4413      	add	r3, r2
90020458:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9002045c:	f8ad 3008 	strh.w	r3, [sp, #8]
90020460:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90020464:	4413      	add	r3, r2
90020466:	f8ad 300a 	strh.w	r3, [sp, #10]
9002046a:	6803      	ldr	r3, [r0, #0]
9002046c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002046e:	4798      	blx	r3
90020470:	f010 0f01 	tst.w	r0, #1
90020474:	d00c      	beq.n	90020490 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
90020476:	6828      	ldr	r0, [r5, #0]
90020478:	6803      	ldr	r3, [r0, #0]
9002047a:	e894 0006 	ldmia.w	r4, {r1, r2}
9002047e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90020480:	4798      	blx	r3
90020482:	b004      	add	sp, #16
90020484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020488:	4a21      	ldr	r2, [pc, #132]	; (90020510 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9002048a:	e7c6      	b.n	9002041a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9002048c:	4b1f      	ldr	r3, [pc, #124]	; (9002050c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9002048e:	e7cb      	b.n	90020428 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
90020490:	6838      	ldr	r0, [r7, #0]
90020492:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90020496:	6803      	ldr	r3, [r0, #0]
90020498:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9002049c:	ea4f 0848 	mov.w	r8, r8, lsl #1
900204a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900204a2:	4798      	blx	r3
900204a4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
900204a8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900204ac:	f8bd 6004 	ldrh.w	r6, [sp, #4]
900204b0:	fb16 3602 	smlabb	r6, r6, r2, r3
900204b4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
900204b8:	6838      	ldr	r0, [r7, #0]
900204ba:	6803      	ldr	r3, [r0, #0]
900204bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900204be:	4798      	blx	r3
900204c0:	4a12      	ldr	r2, [pc, #72]	; (9002050c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
900204c2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
900204c6:	8813      	ldrh	r3, [r2, #0]
900204c8:	4691      	mov	r9, r2
900204ca:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
900204ce:	435d      	muls	r5, r3
900204d0:	fb03 1404 	mla	r4, r3, r4, r1
900204d4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900204d8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
900204dc:	6838      	ldr	r0, [r7, #0]
900204de:	42ac      	cmp	r4, r5
900204e0:	6803      	ldr	r3, [r0, #0]
900204e2:	d20e      	bcs.n	90020502 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
900204e4:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
900204e8:	4632      	mov	r2, r6
900204ea:	4643      	mov	r3, r8
900204ec:	4621      	mov	r1, r4
900204ee:	47d0      	blx	sl
900204f0:	f8b9 3000 	ldrh.w	r3, [r9]
900204f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900204f8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900204fc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
90020500:	e7ec      	b.n	900204dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
90020502:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020504:	4798      	blx	r3
90020506:	e7bc      	b.n	90020482 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
90020508:	24028e24 	.word	0x24028e24
9002050c:	24028e26 	.word	0x24028e26
90020510:	24028e28 	.word	0x24028e28
90020514:	24028e2c 	.word	0x24028e2c

90020518 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
90020518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002051c:	b08b      	sub	sp, #44	; 0x2c
9002051e:	460f      	mov	r7, r1
90020520:	4616      	mov	r6, r2
90020522:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
90020526:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9002052a:	f1bb 0f00 	cmp.w	fp, #0
9002052e:	d049      	beq.n	900205c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
90020530:	6810      	ldr	r0, [r2, #0]
90020532:	ad06      	add	r5, sp, #24
90020534:	6851      	ldr	r1, [r2, #4]
90020536:	c503      	stmia	r5!, {r0, r1}
90020538:	6818      	ldr	r0, [r3, #0]
9002053a:	ad08      	add	r5, sp, #32
9002053c:	6859      	ldr	r1, [r3, #4]
9002053e:	c503      	stmia	r5!, {r0, r1}
90020540:	a806      	add	r0, sp, #24
90020542:	f7fa faa1 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020546:	4631      	mov	r1, r6
90020548:	a808      	add	r0, sp, #32
9002054a:	f7fa fae1 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002054e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90020552:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
90020556:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9002055a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9002055e:	fb16 2103 	smlabb	r1, r6, r3, r2
90020562:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
90020566:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9002056a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9002056e:	4f5f      	ldr	r7, [pc, #380]	; (900206ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
90020570:	440a      	add	r2, r1
90020572:	6838      	ldr	r0, [r7, #0]
90020574:	46b9      	mov	r9, r7
90020576:	f8ad 2020 	strh.w	r2, [sp, #32]
9002057a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9002057e:	4413      	add	r3, r2
90020580:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90020584:	6803      	ldr	r3, [r0, #0]
90020586:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90020588:	4798      	blx	r3
9002058a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9002058e:	d01c      	beq.n	900205ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
90020590:	f010 0f04 	tst.w	r0, #4
90020594:	d01d      	beq.n	900205d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
90020596:	f8d9 0000 	ldr.w	r0, [r9]
9002059a:	2700      	movs	r7, #0
9002059c:	b2ad      	uxth	r5, r5
9002059e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
900205a2:	6801      	ldr	r1, [r0, #0]
900205a4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900205a8:	f8cd b00c 	str.w	fp, [sp, #12]
900205ac:	9501      	str	r5, [sp, #4]
900205ae:	e9cd 4704 	strd	r4, r7, [sp, #16]
900205b2:	f8bd 401c 	ldrh.w	r4, [sp, #28]
900205b6:	9402      	str	r4, [sp, #8]
900205b8:	fa1f f488 	uxth.w	r4, r8
900205bc:	9400      	str	r4, [sp, #0]
900205be:	6c4c      	ldr	r4, [r1, #68]	; 0x44
900205c0:	4631      	mov	r1, r6
900205c2:	47a0      	blx	r4
900205c4:	b00b      	add	sp, #44	; 0x2c
900205c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900205ca:	b914      	cbnz	r4, 900205d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
900205cc:	f010 0f01 	tst.w	r0, #1
900205d0:	e7e0      	b.n	90020594 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
900205d2:	f8d9 0000 	ldr.w	r0, [r9]
900205d6:	ea4f 0748 	mov.w	r7, r8, lsl #1
900205da:	6803      	ldr	r3, [r0, #0]
900205dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900205de:	4798      	blx	r3
900205e0:	4b43      	ldr	r3, [pc, #268]	; (900206f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
900205e2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
900205e6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
900205ea:	881a      	ldrh	r2, [r3, #0]
900205ec:	469a      	mov	sl, r3
900205ee:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
900205f2:	fb05 f502 	mul.w	r5, r5, r2
900205f6:	fb02 1404 	mla	r4, r2, r4, r1
900205fa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900205fe:	d059      	beq.n	900206b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
90020600:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
90020604:	eb04 0545 	add.w	r5, r4, r5, lsl #1
90020608:	fa1f f28b 	uxth.w	r2, fp
9002060c:	469e      	mov	lr, r3
9002060e:	fa1f f989 	uxth.w	r9, r9
90020612:	42ac      	cmp	r4, r5
90020614:	d264      	bcs.n	900206e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
90020616:	eb04 0a07 	add.w	sl, r4, r7
9002061a:	4554      	cmp	r4, sl
9002061c:	d23d      	bcs.n	9002069a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9002061e:	8821      	ldrh	r1, [r4, #0]
90020620:	f836 3b02 	ldrh.w	r3, [r6], #2
90020624:	1208      	asrs	r0, r1, #8
90020626:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002062a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002062e:	ea4f 0be1 	mov.w	fp, r1, asr #3
90020632:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90020636:	00c9      	lsls	r1, r1, #3
90020638:	fb10 f009 	smulbb	r0, r0, r9
9002063c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90020640:	b2c9      	uxtb	r1, r1
90020642:	fb0c 0c02 	mla	ip, ip, r2, r0
90020646:	10d8      	asrs	r0, r3, #3
90020648:	fb1b fb09 	smulbb	fp, fp, r9
9002064c:	00db      	lsls	r3, r3, #3
9002064e:	fa1f fc8c 	uxth.w	ip, ip
90020652:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90020656:	fb11 f109 	smulbb	r1, r1, r9
9002065a:	b2db      	uxtb	r3, r3
9002065c:	fb00 b002 	mla	r0, r0, r2, fp
90020660:	f10c 0b01 	add.w	fp, ip, #1
90020664:	fb03 1302 	mla	r3, r3, r2, r1
90020668:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9002066c:	b29b      	uxth	r3, r3
9002066e:	b280      	uxth	r0, r0
90020670:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
90020674:	f103 0c01 	add.w	ip, r3, #1
90020678:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9002067c:	1c43      	adds	r3, r0, #1
9002067e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90020682:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020686:	0940      	lsrs	r0, r0, #5
90020688:	ea4c 0c0b 	orr.w	ip, ip, fp
9002068c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90020690:	ea4c 0c00 	orr.w	ip, ip, r0
90020694:	f824 cb02 	strh.w	ip, [r4], #2
90020698:	e7bf      	b.n	9002061a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9002069a:	f8be 3000 	ldrh.w	r3, [lr]
9002069e:	eba3 0308 	sub.w	r3, r3, r8
900206a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900206a6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900206aa:	eba3 0308 	sub.w	r3, r3, r8
900206ae:	eb06 0643 	add.w	r6, r6, r3, lsl #1
900206b2:	e7ae      	b.n	90020612 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
900206b4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
900206b8:	f8d9 0000 	ldr.w	r0, [r9]
900206bc:	42ac      	cmp	r4, r5
900206be:	6803      	ldr	r3, [r0, #0]
900206c0:	d20e      	bcs.n	900206e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
900206c2:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
900206c6:	4632      	mov	r2, r6
900206c8:	463b      	mov	r3, r7
900206ca:	4621      	mov	r1, r4
900206cc:	47c0      	blx	r8
900206ce:	f8ba 3000 	ldrh.w	r3, [sl]
900206d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900206d6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900206da:	eb06 0643 	add.w	r6, r6, r3, lsl #1
900206de:	e7eb      	b.n	900206b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
900206e0:	4b02      	ldr	r3, [pc, #8]	; (900206ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
900206e2:	6818      	ldr	r0, [r3, #0]
900206e4:	6803      	ldr	r3, [r0, #0]
900206e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900206e8:	4798      	blx	r3
900206ea:	e76b      	b.n	900205c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
900206ec:	24028e2c 	.word	0x24028e2c
900206f0:	24028e26 	.word	0x24028e26

900206f4 <_ZN8touchgfx8LCD16bppD0Ev>:
900206f4:	b510      	push	{r4, lr}
900206f6:	4604      	mov	r4, r0
900206f8:	2178      	movs	r1, #120	; 0x78
900206fa:	f00a fe8c 	bl	9002b416 <_ZdlPvj>
900206fe:	4620      	mov	r0, r4
90020700:	bd10      	pop	{r4, pc}

90020702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
90020702:	b510      	push	{r4, lr}
90020704:	4604      	mov	r4, r0
90020706:	2104      	movs	r1, #4
90020708:	f00a fe85 	bl	9002b416 <_ZdlPvj>
9002070c:	4620      	mov	r0, r4
9002070e:	bd10      	pop	{r4, pc}

90020710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
90020710:	b510      	push	{r4, lr}
90020712:	4604      	mov	r4, r0
90020714:	2104      	movs	r1, #4
90020716:	f00a fe7e 	bl	9002b416 <_ZdlPvj>
9002071a:	4620      	mov	r0, r4
9002071c:	bd10      	pop	{r4, pc}

9002071e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9002071e:	b510      	push	{r4, lr}
90020720:	4604      	mov	r4, r0
90020722:	2104      	movs	r1, #4
90020724:	f00a fe77 	bl	9002b416 <_ZdlPvj>
90020728:	4620      	mov	r0, r4
9002072a:	bd10      	pop	{r4, pc}

9002072c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9002072c:	b510      	push	{r4, lr}
9002072e:	4604      	mov	r4, r0
90020730:	2104      	movs	r1, #4
90020732:	f00a fe70 	bl	9002b416 <_ZdlPvj>
90020736:	4620      	mov	r0, r4
90020738:	bd10      	pop	{r4, pc}

9002073a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9002073a:	b510      	push	{r4, lr}
9002073c:	4604      	mov	r4, r0
9002073e:	2104      	movs	r1, #4
90020740:	f00a fe69 	bl	9002b416 <_ZdlPvj>
90020744:	4620      	mov	r0, r4
90020746:	bd10      	pop	{r4, pc}

90020748 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
90020748:	b510      	push	{r4, lr}
9002074a:	4604      	mov	r4, r0
9002074c:	2104      	movs	r1, #4
9002074e:	f00a fe62 	bl	9002b416 <_ZdlPvj>
90020752:	4620      	mov	r0, r4
90020754:	bd10      	pop	{r4, pc}

90020756 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
90020756:	b510      	push	{r4, lr}
90020758:	4604      	mov	r4, r0
9002075a:	2104      	movs	r1, #4
9002075c:	f00a fe5b 	bl	9002b416 <_ZdlPvj>
90020760:	4620      	mov	r0, r4
90020762:	bd10      	pop	{r4, pc}

90020764 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
90020764:	b510      	push	{r4, lr}
90020766:	4604      	mov	r4, r0
90020768:	2104      	movs	r1, #4
9002076a:	f00a fe54 	bl	9002b416 <_ZdlPvj>
9002076e:	4620      	mov	r0, r4
90020770:	bd10      	pop	{r4, pc}

90020772 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
90020772:	b510      	push	{r4, lr}
90020774:	4604      	mov	r4, r0
90020776:	2104      	movs	r1, #4
90020778:	f00a fe4d 	bl	9002b416 <_ZdlPvj>
9002077c:	4620      	mov	r0, r4
9002077e:	bd10      	pop	{r4, pc}

90020780 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
90020780:	b510      	push	{r4, lr}
90020782:	4604      	mov	r4, r0
90020784:	2104      	movs	r1, #4
90020786:	f00a fe46 	bl	9002b416 <_ZdlPvj>
9002078a:	4620      	mov	r0, r4
9002078c:	bd10      	pop	{r4, pc}

9002078e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9002078e:	b510      	push	{r4, lr}
90020790:	4604      	mov	r4, r0
90020792:	2104      	movs	r1, #4
90020794:	f00a fe3f 	bl	9002b416 <_ZdlPvj>
90020798:	4620      	mov	r0, r4
9002079a:	bd10      	pop	{r4, pc}

9002079c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9002079c:	b510      	push	{r4, lr}
9002079e:	4604      	mov	r4, r0
900207a0:	2104      	movs	r1, #4
900207a2:	f00a fe38 	bl	9002b416 <_ZdlPvj>
900207a6:	4620      	mov	r0, r4
900207a8:	bd10      	pop	{r4, pc}

900207aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
900207aa:	b510      	push	{r4, lr}
900207ac:	4604      	mov	r4, r0
900207ae:	2104      	movs	r1, #4
900207b0:	f00a fe31 	bl	9002b416 <_ZdlPvj>
900207b4:	4620      	mov	r0, r4
900207b6:	bd10      	pop	{r4, pc}

900207b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
900207b8:	b510      	push	{r4, lr}
900207ba:	4604      	mov	r4, r0
900207bc:	2104      	movs	r1, #4
900207be:	f00a fe2a 	bl	9002b416 <_ZdlPvj>
900207c2:	4620      	mov	r0, r4
900207c4:	bd10      	pop	{r4, pc}

900207c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
900207c6:	b510      	push	{r4, lr}
900207c8:	4604      	mov	r4, r0
900207ca:	2104      	movs	r1, #4
900207cc:	f00a fe23 	bl	9002b416 <_ZdlPvj>
900207d0:	4620      	mov	r0, r4
900207d2:	bd10      	pop	{r4, pc}

900207d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
900207d4:	b510      	push	{r4, lr}
900207d6:	4604      	mov	r4, r0
900207d8:	2104      	movs	r1, #4
900207da:	f00a fe1c 	bl	9002b416 <_ZdlPvj>
900207de:	4620      	mov	r0, r4
900207e0:	bd10      	pop	{r4, pc}

900207e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
900207e2:	b510      	push	{r4, lr}
900207e4:	4604      	mov	r4, r0
900207e6:	2104      	movs	r1, #4
900207e8:	f00a fe15 	bl	9002b416 <_ZdlPvj>
900207ec:	4620      	mov	r0, r4
900207ee:	bd10      	pop	{r4, pc}

900207f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
900207f0:	b510      	push	{r4, lr}
900207f2:	4604      	mov	r4, r0
900207f4:	2104      	movs	r1, #4
900207f6:	f00a fe0e 	bl	9002b416 <_ZdlPvj>
900207fa:	4620      	mov	r0, r4
900207fc:	bd10      	pop	{r4, pc}

900207fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
900207fe:	b510      	push	{r4, lr}
90020800:	4604      	mov	r4, r0
90020802:	2104      	movs	r1, #4
90020804:	f00a fe07 	bl	9002b416 <_ZdlPvj>
90020808:	4620      	mov	r0, r4
9002080a:	bd10      	pop	{r4, pc}

9002080c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9002080c:	b510      	push	{r4, lr}
9002080e:	4604      	mov	r4, r0
90020810:	2104      	movs	r1, #4
90020812:	f00a fe00 	bl	9002b416 <_ZdlPvj>
90020816:	4620      	mov	r0, r4
90020818:	bd10      	pop	{r4, pc}

9002081a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9002081a:	b510      	push	{r4, lr}
9002081c:	4604      	mov	r4, r0
9002081e:	2104      	movs	r1, #4
90020820:	f00a fdf9 	bl	9002b416 <_ZdlPvj>
90020824:	4620      	mov	r0, r4
90020826:	bd10      	pop	{r4, pc}

90020828 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
90020828:	b510      	push	{r4, lr}
9002082a:	4604      	mov	r4, r0
9002082c:	2104      	movs	r1, #4
9002082e:	f00a fdf2 	bl	9002b416 <_ZdlPvj>
90020832:	4620      	mov	r0, r4
90020834:	bd10      	pop	{r4, pc}

90020836 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
90020836:	b510      	push	{r4, lr}
90020838:	4604      	mov	r4, r0
9002083a:	2104      	movs	r1, #4
9002083c:	f00a fdeb 	bl	9002b416 <_ZdlPvj>
90020840:	4620      	mov	r0, r4
90020842:	bd10      	pop	{r4, pc}

90020844 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
90020844:	b510      	push	{r4, lr}
90020846:	4604      	mov	r4, r0
90020848:	2104      	movs	r1, #4
9002084a:	f00a fde4 	bl	9002b416 <_ZdlPvj>
9002084e:	4620      	mov	r0, r4
90020850:	bd10      	pop	{r4, pc}

90020852 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
90020852:	b510      	push	{r4, lr}
90020854:	4604      	mov	r4, r0
90020856:	2104      	movs	r1, #4
90020858:	f00a fddd 	bl	9002b416 <_ZdlPvj>
9002085c:	4620      	mov	r0, r4
9002085e:	bd10      	pop	{r4, pc}

90020860 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
90020860:	b510      	push	{r4, lr}
90020862:	4604      	mov	r4, r0
90020864:	2104      	movs	r1, #4
90020866:	f00a fdd6 	bl	9002b416 <_ZdlPvj>
9002086a:	4620      	mov	r0, r4
9002086c:	bd10      	pop	{r4, pc}

9002086e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9002086e:	b510      	push	{r4, lr}
90020870:	4604      	mov	r4, r0
90020872:	2104      	movs	r1, #4
90020874:	f00a fdcf 	bl	9002b416 <_ZdlPvj>
90020878:	4620      	mov	r0, r4
9002087a:	bd10      	pop	{r4, pc}

9002087c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9002087c:	b510      	push	{r4, lr}
9002087e:	4604      	mov	r4, r0
90020880:	2104      	movs	r1, #4
90020882:	f00a fdc8 	bl	9002b416 <_ZdlPvj>
90020886:	4620      	mov	r0, r4
90020888:	bd10      	pop	{r4, pc}
	...

9002088c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9002088c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020890:	b091      	sub	sp, #68	; 0x44
90020892:	469b      	mov	fp, r3
90020894:	4616      	mov	r6, r2
90020896:	f9b3 2000 	ldrsh.w	r2, [r3]
9002089a:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9002089e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900208a2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
900208a6:	4604      	mov	r4, r0
900208a8:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
900208ac:	4640      	mov	r0, r8
900208ae:	460d      	mov	r5, r1
900208b0:	4659      	mov	r1, fp
900208b2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
900208b6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
900208ba:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
900208be:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
900208c2:	f7f4 fc7b 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
900208c6:	4631      	mov	r1, r6
900208c8:	4640      	mov	r0, r8
900208ca:	f7f4 fc77 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
900208ce:	4b74      	ldr	r3, [pc, #464]	; (90020aa0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
900208d0:	8818      	ldrh	r0, [r3, #0]
900208d2:	4b74      	ldr	r3, [pc, #464]	; (90020aa4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
900208d4:	b202      	sxth	r2, r0
900208d6:	8819      	ldrh	r1, [r3, #0]
900208d8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
900208dc:	b20e      	sxth	r6, r1
900208de:	2b00      	cmp	r3, #0
900208e0:	da07      	bge.n	900208f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
900208e2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
900208e6:	4463      	add	r3, ip
900208e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
900208ec:	2300      	movs	r3, #0
900208ee:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
900208f2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
900208f6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
900208fa:	1ad2      	subs	r2, r2, r3
900208fc:	4594      	cmp	ip, r2
900208fe:	bfc4      	itt	gt
90020900:	1ac2      	subgt	r2, r0, r3
90020902:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
90020906:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9002090a:	2a00      	cmp	r2, #0
9002090c:	da07      	bge.n	9002091e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9002090e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
90020912:	4462      	add	r2, ip
90020914:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
90020918:	2200      	movs	r2, #0
9002091a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9002091e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
90020922:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
90020926:	eba6 060a 	sub.w	r6, r6, sl
9002092a:	42b2      	cmp	r2, r6
9002092c:	bfc4      	itt	gt
9002092e:	eba1 020a 	subgt.w	r2, r1, sl
90020932:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
90020936:	4a5c      	ldr	r2, [pc, #368]	; (90020aa8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
90020938:	7812      	ldrb	r2, [r2, #0]
9002093a:	b9a2      	cbnz	r2, 90020966 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9002093c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
90020940:	4286      	cmp	r6, r0
90020942:	4640      	mov	r0, r8
90020944:	9303      	str	r3, [sp, #12]
90020946:	bf14      	ite	ne
90020948:	2600      	movne	r6, #0
9002094a:	2601      	moveq	r6, #1
9002094c:	f7f4 fc79 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
90020950:	9b03      	ldr	r3, [sp, #12]
90020952:	b160      	cbz	r0, 9002096e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
90020954:	2300      	movs	r3, #0
90020956:	8023      	strh	r3, [r4, #0]
90020958:	8063      	strh	r3, [r4, #2]
9002095a:	80a3      	strh	r3, [r4, #4]
9002095c:	4620      	mov	r0, r4
9002095e:	80e3      	strh	r3, [r4, #6]
90020960:	b011      	add	sp, #68	; 0x44
90020962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020966:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9002096a:	428e      	cmp	r6, r1
9002096c:	e7e9      	b.n	90020942 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9002096e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90020972:	a90e      	add	r1, sp, #56	; 0x38
90020974:	900e      	str	r0, [sp, #56]	; 0x38
90020976:	a80c      	add	r0, sp, #48	; 0x30
90020978:	9205      	str	r2, [sp, #20]
9002097a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9002097e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
90020982:	9206      	str	r2, [sp, #24]
90020984:	f8bb 2000 	ldrh.w	r2, [fp]
90020988:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9002098c:	1a9b      	subs	r3, r3, r2
9002098e:	b21b      	sxth	r3, r3
90020990:	9303      	str	r3, [sp, #12]
90020992:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90020996:	f8df b118 	ldr.w	fp, [pc, #280]	; 90020ab0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9002099a:	ebaa 0a03 	sub.w	sl, sl, r3
9002099e:	fa0f f38a 	sxth.w	r3, sl
900209a2:	9304      	str	r3, [sp, #16]
900209a4:	9b03      	ldr	r3, [sp, #12]
900209a6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
900209aa:	9b04      	ldr	r3, [sp, #16]
900209ac:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900209b0:	9b05      	ldr	r3, [sp, #20]
900209b2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
900209b6:	9b06      	ldr	r3, [sp, #24]
900209b8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900209bc:	f7fa f8a8 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900209c0:	4640      	mov	r0, r8
900209c2:	f7fa f861 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900209c6:	a80e      	add	r0, sp, #56	; 0x38
900209c8:	f7fa f85e 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900209cc:	4b37      	ldr	r3, [pc, #220]	; (90020aac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
900209ce:	4628      	mov	r0, r5
900209d0:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
900209d4:	881b      	ldrh	r3, [r3, #0]
900209d6:	9307      	str	r3, [sp, #28]
900209d8:	682b      	ldr	r3, [r5, #0]
900209da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900209dc:	4798      	blx	r3
900209de:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
900209e2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
900209e6:	4681      	mov	r9, r0
900209e8:	f8db 0000 	ldr.w	r0, [fp]
900209ec:	fb1a 3305 	smlabb	r3, sl, r5, r3
900209f0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
900209f2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
900209f6:	6803      	ldr	r3, [r0, #0]
900209f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900209fa:	4798      	blx	r3
900209fc:	4607      	mov	r7, r0
900209fe:	f8db 0000 	ldr.w	r0, [fp]
90020a02:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
90020a06:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
90020a0a:	6803      	ldr	r3, [r0, #0]
90020a0c:	9109      	str	r1, [sp, #36]	; 0x24
90020a0e:	9208      	str	r2, [sp, #32]
90020a10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90020a12:	4798      	blx	r3
90020a14:	f010 0f01 	tst.w	r0, #1
90020a18:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90020a1c:	d012      	beq.n	90020a44 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
90020a1e:	f8db 0000 	ldr.w	r0, [fp]
90020a22:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
90020a26:	6803      	ldr	r3, [r0, #0]
90020a28:	9200      	str	r2, [sp, #0]
90020a2a:	6ede      	ldr	r6, [r3, #108]	; 0x6c
90020a2c:	462b      	mov	r3, r5
90020a2e:	e898 0006 	ldmia.w	r8, {r1, r2}
90020a32:	47b0      	blx	r6
90020a34:	9b03      	ldr	r3, [sp, #12]
90020a36:	8023      	strh	r3, [r4, #0]
90020a38:	9b04      	ldr	r3, [sp, #16]
90020a3a:	8063      	strh	r3, [r4, #2]
90020a3c:	9b05      	ldr	r3, [sp, #20]
90020a3e:	80a3      	strh	r3, [r4, #4]
90020a40:	9b06      	ldr	r3, [sp, #24]
90020a42:	e78b      	b.n	9002095c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
90020a44:	fb09 f202 	mul.w	r2, r9, r2
90020a48:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
90020a4c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
90020a50:	440f      	add	r7, r1
90020a52:	b166      	cbz	r6, 90020a6e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
90020a54:	9a07      	ldr	r2, [sp, #28]
90020a56:	4592      	cmp	sl, r2
90020a58:	d109      	bne.n	90020a6e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
90020a5a:	f8db 0000 	ldr.w	r0, [fp]
90020a5e:	fb09 f303 	mul.w	r3, r9, r3
90020a62:	4629      	mov	r1, r5
90020a64:	6802      	ldr	r2, [r0, #0]
90020a66:	6b56      	ldr	r6, [r2, #52]	; 0x34
90020a68:	463a      	mov	r2, r7
90020a6a:	47b0      	blx	r6
90020a6c:	e7e2      	b.n	90020a34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
90020a6e:	fb0a f303 	mul.w	r3, sl, r3
90020a72:	ea4f 064a 	mov.w	r6, sl, lsl #1
90020a76:	f8df b038 	ldr.w	fp, [pc, #56]	; 90020ab0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
90020a7a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
90020a7e:	4545      	cmp	r5, r8
90020a80:	d2d8      	bcs.n	90020a34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
90020a82:	f8db 0000 	ldr.w	r0, [fp]
90020a86:	4629      	mov	r1, r5
90020a88:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90020a8c:	4435      	add	r5, r6
90020a8e:	6802      	ldr	r2, [r0, #0]
90020a90:	005b      	lsls	r3, r3, #1
90020a92:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
90020a96:	463a      	mov	r2, r7
90020a98:	47d0      	blx	sl
90020a9a:	444f      	add	r7, r9
90020a9c:	e7ef      	b.n	90020a7e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
90020a9e:	bf00      	nop
90020aa0:	24028e20 	.word	0x24028e20
90020aa4:	24028e22 	.word	0x24028e22
90020aa8:	24028e24 	.word	0x24028e24
90020aac:	24028e26 	.word	0x24028e26
90020ab0:	24028e2c 	.word	0x24028e2c

90020ab4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
90020ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
90020ab6:	4606      	mov	r6, r0
90020ab8:	b087      	sub	sp, #28
90020aba:	460c      	mov	r4, r1
90020abc:	4617      	mov	r7, r2
90020abe:	461d      	mov	r5, r3
90020ac0:	b333      	cbz	r3, 90020b10 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90020ac2:	4608      	mov	r0, r1
90020ac4:	f7f4 fbbd 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
90020ac8:	bb10      	cbnz	r0, 90020b10 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90020aca:	6820      	ldr	r0, [r4, #0]
90020acc:	ab04      	add	r3, sp, #16
90020ace:	6861      	ldr	r1, [r4, #4]
90020ad0:	4c1b      	ldr	r4, [pc, #108]	; (90020b40 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
90020ad2:	c303      	stmia	r3!, {r0, r1}
90020ad4:	a804      	add	r0, sp, #16
90020ad6:	f7f9 ffd7 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020ada:	6820      	ldr	r0, [r4, #0]
90020adc:	6803      	ldr	r3, [r0, #0]
90020ade:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90020ae0:	4798      	blx	r3
90020ae2:	2dff      	cmp	r5, #255	; 0xff
90020ae4:	d016      	beq.n	90020b14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
90020ae6:	f010 0f08 	tst.w	r0, #8
90020aea:	6820      	ldr	r0, [r4, #0]
90020aec:	d015      	beq.n	90020b1a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
90020aee:	2400      	movs	r4, #0
90020af0:	6801      	ldr	r1, [r0, #0]
90020af2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90020af6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020afa:	e9cd 5402 	strd	r5, r4, [sp, #8]
90020afe:	f8bd 4016 	ldrh.w	r4, [sp, #22]
90020b02:	9401      	str	r4, [sp, #4]
90020b04:	f8bd 4014 	ldrh.w	r4, [sp, #20]
90020b08:	9400      	str	r4, [sp, #0]
90020b0a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
90020b0c:	4639      	mov	r1, r7
90020b0e:	47a0      	blx	r4
90020b10:	b007      	add	sp, #28
90020b12:	bdf0      	pop	{r4, r5, r6, r7, pc}
90020b14:	f010 0f02 	tst.w	r0, #2
90020b18:	e7e7      	b.n	90020aea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
90020b1a:	6803      	ldr	r3, [r0, #0]
90020b1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020b1e:	4798      	blx	r3
90020b20:	4b08      	ldr	r3, [pc, #32]	; (90020b44 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
90020b22:	4601      	mov	r1, r0
90020b24:	4630      	mov	r0, r6
90020b26:	881a      	ldrh	r2, [r3, #0]
90020b28:	6833      	ldr	r3, [r6, #0]
90020b2a:	e9cd 7500 	strd	r7, r5, [sp]
90020b2e:	6a5d      	ldr	r5, [r3, #36]	; 0x24
90020b30:	ab04      	add	r3, sp, #16
90020b32:	47a8      	blx	r5
90020b34:	6820      	ldr	r0, [r4, #0]
90020b36:	6803      	ldr	r3, [r0, #0]
90020b38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020b3a:	4798      	blx	r3
90020b3c:	e7e8      	b.n	90020b10 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90020b3e:	bf00      	nop
90020b40:	24028e2c 	.word	0x24028e2c
90020b44:	24028e26 	.word	0x24028e26

90020b48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
90020b48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020b4c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
90020b50:	4688      	mov	r8, r1
90020b52:	4614      	mov	r4, r2
90020b54:	461d      	mov	r5, r3
90020b56:	9e08      	ldr	r6, [sp, #32]
90020b58:	2f00      	cmp	r7, #0
90020b5a:	f000 80ab 	beq.w	90020cb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020b5e:	4618      	mov	r0, r3
90020b60:	f7f4 fb6f 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
90020b64:	2800      	cmp	r0, #0
90020b66:	f040 80a5 	bne.w	90020cb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020b6a:	f9b5 1000 	ldrsh.w	r1, [r5]
90020b6e:	2fff      	cmp	r7, #255	; 0xff
90020b70:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90020b74:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
90020b78:	fb04 1303 	mla	r3, r4, r3, r1
90020b7c:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
90020b80:	eba4 0200 	sub.w	r2, r4, r0
90020b84:	eb08 0143 	add.w	r1, r8, r3, lsl #1
90020b88:	fb04 f505 	mul.w	r5, r4, r5
90020b8c:	ea4f 2816 	mov.w	r8, r6, lsr #8
90020b90:	eb01 0545 	add.w	r5, r1, r5, lsl #1
90020b94:	d04a      	beq.n	90020c2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
90020b96:	b2bc      	uxth	r4, r7
90020b98:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
90020b9c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
90020ba0:	fa5f f788 	uxtb.w	r7, r8
90020ba4:	b2f3      	uxtb	r3, r6
90020ba6:	0040      	lsls	r0, r0, #1
90020ba8:	fb0e fe04 	mul.w	lr, lr, r4
90020bac:	4367      	muls	r7, r4
90020bae:	ea4f 0842 	mov.w	r8, r2, lsl #1
90020bb2:	4363      	muls	r3, r4
90020bb4:	fa1f fc8c 	uxth.w	ip, ip
90020bb8:	42a9      	cmp	r1, r5
90020bba:	d27b      	bcs.n	90020cb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020bbc:	eb01 0900 	add.w	r9, r1, r0
90020bc0:	4549      	cmp	r1, r9
90020bc2:	d231      	bcs.n	90020c28 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
90020bc4:	880a      	ldrh	r2, [r1, #0]
90020bc6:	1214      	asrs	r4, r2, #8
90020bc8:	10d6      	asrs	r6, r2, #3
90020bca:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90020bce:	00d2      	lsls	r2, r2, #3
90020bd0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90020bd4:	b2d2      	uxtb	r2, r2
90020bd6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90020bda:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020bde:	fb14 f40c 	smulbb	r4, r4, ip
90020be2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90020be6:	fb12 f20c 	smulbb	r2, r2, ip
90020bea:	fb16 f60c 	smulbb	r6, r6, ip
90020bee:	4474      	add	r4, lr
90020bf0:	441a      	add	r2, r3
90020bf2:	b2a4      	uxth	r4, r4
90020bf4:	443e      	add	r6, r7
90020bf6:	b292      	uxth	r2, r2
90020bf8:	f104 0a01 	add.w	sl, r4, #1
90020bfc:	b2b6      	uxth	r6, r6
90020bfe:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90020c02:	f102 0a01 	add.w	sl, r2, #1
90020c06:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
90020c0a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90020c0e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020c12:	4322      	orrs	r2, r4
90020c14:	1c74      	adds	r4, r6, #1
90020c16:	eb04 2616 	add.w	r6, r4, r6, lsr #8
90020c1a:	0976      	lsrs	r6, r6, #5
90020c1c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90020c20:	4332      	orrs	r2, r6
90020c22:	f821 2b02 	strh.w	r2, [r1], #2
90020c26:	e7cb      	b.n	90020bc0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
90020c28:	4441      	add	r1, r8
90020c2a:	e7c5      	b.n	90020bb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
90020c2c:	0973      	lsrs	r3, r6, #5
90020c2e:	4f22      	ldr	r7, [pc, #136]	; (90020cb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
90020c30:	f3c6 06c4 	ubfx	r6, r6, #3, #5
90020c34:	ea08 0707 	and.w	r7, r8, r7
90020c38:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020c3c:	433b      	orrs	r3, r7
90020c3e:	07e7      	lsls	r7, r4, #31
90020c40:	ea43 0306 	orr.w	r3, r3, r6
90020c44:	b29b      	uxth	r3, r3
90020c46:	d50b      	bpl.n	90020c60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
90020c48:	0040      	lsls	r0, r0, #1
90020c4a:	0052      	lsls	r2, r2, #1
90020c4c:	42a9      	cmp	r1, r5
90020c4e:	d231      	bcs.n	90020cb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020c50:	180c      	adds	r4, r1, r0
90020c52:	42a1      	cmp	r1, r4
90020c54:	d202      	bcs.n	90020c5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
90020c56:	f821 3b02 	strh.w	r3, [r1], #2
90020c5a:	e7fa      	b.n	90020c52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
90020c5c:	4411      	add	r1, r2
90020c5e:	e7f5      	b.n	90020c4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
90020c60:	078e      	lsls	r6, r1, #30
90020c62:	d008      	beq.n	90020c76 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
90020c64:	0066      	lsls	r6, r4, #1
90020c66:	460a      	mov	r2, r1
90020c68:	42aa      	cmp	r2, r5
90020c6a:	d202      	bcs.n	90020c72 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
90020c6c:	8013      	strh	r3, [r2, #0]
90020c6e:	4432      	add	r2, r6
90020c70:	e7fa      	b.n	90020c68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
90020c72:	3102      	adds	r1, #2
90020c74:	3801      	subs	r0, #1
90020c76:	07c2      	lsls	r2, r0, #31
90020c78:	d50b      	bpl.n	90020c92 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
90020c7a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
90020c7e:	0066      	lsls	r6, r4, #1
90020c80:	3a01      	subs	r2, #1
90020c82:	eb01 0242 	add.w	r2, r1, r2, lsl #1
90020c86:	42aa      	cmp	r2, r5
90020c88:	d202      	bcs.n	90020c90 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
90020c8a:	8013      	strh	r3, [r2, #0]
90020c8c:	4432      	add	r2, r6
90020c8e:	e7fa      	b.n	90020c86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
90020c90:	3801      	subs	r0, #1
90020c92:	b178      	cbz	r0, 90020cb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020c94:	1040      	asrs	r0, r0, #1
90020c96:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
90020c9a:	0080      	lsls	r0, r0, #2
90020c9c:	0064      	lsls	r4, r4, #1
90020c9e:	42a9      	cmp	r1, r5
90020ca0:	d208      	bcs.n	90020cb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020ca2:	180e      	adds	r6, r1, r0
90020ca4:	460a      	mov	r2, r1
90020ca6:	42b2      	cmp	r2, r6
90020ca8:	d202      	bcs.n	90020cb0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
90020caa:	f842 3b04 	str.w	r3, [r2], #4
90020cae:	e7fa      	b.n	90020ca6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
90020cb0:	4421      	add	r1, r4
90020cb2:	e7f4      	b.n	90020c9e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
90020cb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020cb8:	00fff800 	.word	0x00fff800

90020cbc <_ZN8touchgfx8LCD16bppC1Ev>:
90020cbc:	2200      	movs	r2, #0
90020cbe:	4910      	ldr	r1, [pc, #64]	; (90020d00 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
90020cc0:	6042      	str	r2, [r0, #4]
90020cc2:	6001      	str	r1, [r0, #0]
90020cc4:	e9c0 2202 	strd	r2, r2, [r0, #8]
90020cc8:	e9c0 2204 	strd	r2, r2, [r0, #16]
90020ccc:	e9c0 2206 	strd	r2, r2, [r0, #24]
90020cd0:	e9c0 2208 	strd	r2, r2, [r0, #32]
90020cd4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
90020cd8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
90020cdc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
90020ce0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
90020ce4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
90020ce8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
90020cec:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
90020cf0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
90020cf4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
90020cf8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
90020cfc:	4770      	bx	lr
90020cfe:	bf00      	nop
90020d00:	90030eac 	.word	0x90030eac

90020d04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
90020d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020d08:	b08d      	sub	sp, #52	; 0x34
90020d0a:	460d      	mov	r5, r1
90020d0c:	4604      	mov	r4, r0
90020d0e:	4699      	mov	r9, r3
90020d10:	6808      	ldr	r0, [r1, #0]
90020d12:	ab08      	add	r3, sp, #32
90020d14:	6849      	ldr	r1, [r1, #4]
90020d16:	c303      	stmia	r3!, {r0, r1}
90020d18:	6810      	ldr	r0, [r2, #0]
90020d1a:	ab0a      	add	r3, sp, #40	; 0x28
90020d1c:	6851      	ldr	r1, [r2, #4]
90020d1e:	c303      	stmia	r3!, {r0, r1}
90020d20:	a808      	add	r0, sp, #32
90020d22:	f7f9 feb1 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020d26:	4629      	mov	r1, r5
90020d28:	a80a      	add	r0, sp, #40	; 0x28
90020d2a:	4d67      	ldr	r5, [pc, #412]	; (90020ec8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90020d2c:	f7f9 fef0 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020d30:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
90020d34:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
90020d38:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
90020d3c:	6828      	ldr	r0, [r5, #0]
90020d3e:	fb11 2103 	smlabb	r1, r1, r3, r2
90020d42:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
90020d46:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
90020d4a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90020d4e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
90020d52:	440a      	add	r2, r1
90020d54:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90020d58:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90020d5c:	4413      	add	r3, r2
90020d5e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90020d62:	6803      	ldr	r3, [r0, #0]
90020d64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90020d66:	4798      	blx	r3
90020d68:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90020d6c:	d119      	bne.n	90020da2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
90020d6e:	f010 0f20 	tst.w	r0, #32
90020d72:	6828      	ldr	r0, [r5, #0]
90020d74:	d018      	beq.n	90020da8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
90020d76:	2500      	movs	r5, #0
90020d78:	6801      	ldr	r1, [r0, #0]
90020d7a:	b2b6      	uxth	r6, r6
90020d7c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90020d80:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
90020d84:	9601      	str	r6, [sp, #4]
90020d86:	e9cd 9503 	strd	r9, r5, [sp, #12]
90020d8a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
90020d8e:	9502      	str	r5, [sp, #8]
90020d90:	fa1f f588 	uxth.w	r5, r8
90020d94:	9500      	str	r5, [sp, #0]
90020d96:	6d0d      	ldr	r5, [r1, #80]	; 0x50
90020d98:	4621      	mov	r1, r4
90020d9a:	47a8      	blx	r5
90020d9c:	b00d      	add	sp, #52	; 0x34
90020d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020da2:	f010 0f40 	tst.w	r0, #64	; 0x40
90020da6:	e7e4      	b.n	90020d72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
90020da8:	6803      	ldr	r3, [r0, #0]
90020daa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020dac:	4798      	blx	r3
90020dae:	4947      	ldr	r1, [pc, #284]	; (90020ecc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
90020db0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
90020db4:	880b      	ldrh	r3, [r1, #0]
90020db6:	468a      	mov	sl, r1
90020db8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
90020dbc:	fb03 5202 	mla	r2, r3, r2, r5
90020dc0:	4373      	muls	r3, r6
90020dc2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020dc6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020dca:	9307      	str	r3, [sp, #28]
90020dcc:	ea4f 0348 	mov.w	r3, r8, lsl #1
90020dd0:	9306      	str	r3, [sp, #24]
90020dd2:	9b07      	ldr	r3, [sp, #28]
90020dd4:	4298      	cmp	r0, r3
90020dd6:	d270      	bcs.n	90020eba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
90020dd8:	9b06      	ldr	r3, [sp, #24]
90020dda:	4621      	mov	r1, r4
90020ddc:	eb00 0b03 	add.w	fp, r0, r3
90020de0:	4558      	cmp	r0, fp
90020de2:	d25d      	bcs.n	90020ea0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
90020de4:	f851 4b04 	ldr.w	r4, [r1], #4
90020de8:	0e23      	lsrs	r3, r4, #24
90020dea:	d014      	beq.n	90020e16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90020dec:	2bff      	cmp	r3, #255	; 0xff
90020dee:	ea4f 2c14 	mov.w	ip, r4, lsr #8
90020df2:	d112      	bne.n	90020e1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90020df4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90020df8:	d10f      	bne.n	90020e1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90020dfa:	0963      	lsrs	r3, r4, #5
90020dfc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90020e00:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90020e04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020e08:	f02c 0c07 	bic.w	ip, ip, #7
90020e0c:	ea43 0c0c 	orr.w	ip, r3, ip
90020e10:	ea4c 0404 	orr.w	r4, ip, r4
90020e14:	8004      	strh	r4, [r0, #0]
90020e16:	3002      	adds	r0, #2
90020e18:	e7e2      	b.n	90020de0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
90020e1a:	fb09 f303 	mul.w	r3, r9, r3
90020e1e:	8807      	ldrh	r7, [r0, #0]
90020e20:	f3c4 4e07 	ubfx	lr, r4, #16, #8
90020e24:	fa5f fc8c 	uxtb.w	ip, ip
90020e28:	1c5a      	adds	r2, r3, #1
90020e2a:	123e      	asrs	r6, r7, #8
90020e2c:	10fd      	asrs	r5, r7, #3
90020e2e:	eb02 2223 	add.w	r2, r2, r3, asr #8
90020e32:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90020e36:	00ff      	lsls	r7, r7, #3
90020e38:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90020e3c:	1212      	asrs	r2, r2, #8
90020e3e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90020e42:	b293      	uxth	r3, r2
90020e44:	43d2      	mvns	r2, r2
90020e46:	b2ff      	uxtb	r7, r7
90020e48:	fb1e fe03 	smulbb	lr, lr, r3
90020e4c:	b2d2      	uxtb	r2, r2
90020e4e:	fb1c fc03 	smulbb	ip, ip, r3
90020e52:	b2e4      	uxtb	r4, r4
90020e54:	fb06 e602 	mla	r6, r6, r2, lr
90020e58:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90020e5c:	fb14 f403 	smulbb	r4, r4, r3
90020e60:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
90020e64:	b2b6      	uxth	r6, r6
90020e66:	fb05 c502 	mla	r5, r5, r2, ip
90020e6a:	fb07 4702 	mla	r7, r7, r2, r4
90020e6e:	f106 0e01 	add.w	lr, r6, #1
90020e72:	b2ad      	uxth	r5, r5
90020e74:	b2bf      	uxth	r7, r7
90020e76:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
90020e7a:	f105 0c01 	add.w	ip, r5, #1
90020e7e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
90020e82:	1c7e      	adds	r6, r7, #1
90020e84:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90020e88:	eb06 2617 	add.w	r6, r6, r7, lsr #8
90020e8c:	096d      	lsrs	r5, r5, #5
90020e8e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90020e92:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020e96:	ea46 060e 	orr.w	r6, r6, lr
90020e9a:	432e      	orrs	r6, r5
90020e9c:	8006      	strh	r6, [r0, #0]
90020e9e:	e7ba      	b.n	90020e16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90020ea0:	f8ba 3000 	ldrh.w	r3, [sl]
90020ea4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
90020ea8:	eba3 0308 	sub.w	r3, r3, r8
90020eac:	eba4 0408 	sub.w	r4, r4, r8
90020eb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020eb4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
90020eb8:	e78b      	b.n	90020dd2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
90020eba:	4b03      	ldr	r3, [pc, #12]	; (90020ec8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90020ebc:	6818      	ldr	r0, [r3, #0]
90020ebe:	6803      	ldr	r3, [r0, #0]
90020ec0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020ec2:	4798      	blx	r3
90020ec4:	e76a      	b.n	90020d9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
90020ec6:	bf00      	nop
90020ec8:	24028e2c 	.word	0x24028e2c
90020ecc:	24028e26 	.word	0x24028e26

90020ed0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
90020ed0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90020ed4:	b085      	sub	sp, #20
90020ed6:	6810      	ldr	r0, [r2, #0]
90020ed8:	460c      	mov	r4, r1
90020eda:	6851      	ldr	r1, [r2, #4]
90020edc:	466d      	mov	r5, sp
90020ede:	4616      	mov	r6, r2
90020ee0:	c503      	stmia	r5!, {r0, r1}
90020ee2:	6818      	ldr	r0, [r3, #0]
90020ee4:	6859      	ldr	r1, [r3, #4]
90020ee6:	c503      	stmia	r5!, {r0, r1}
90020ee8:	4668      	mov	r0, sp
90020eea:	4d2e      	ldr	r5, [pc, #184]	; (90020fa4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
90020eec:	f7f9 fdcc 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020ef0:	4631      	mov	r1, r6
90020ef2:	a802      	add	r0, sp, #8
90020ef4:	4e2c      	ldr	r6, [pc, #176]	; (90020fa8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
90020ef6:	f7f9 fe0b 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020efa:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
90020efe:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90020f02:	f8bd 1004 	ldrh.w	r1, [sp, #4]
90020f06:	6828      	ldr	r0, [r5, #0]
90020f08:	fb11 2103 	smlabb	r1, r1, r3, r2
90020f0c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90020f10:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
90020f14:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90020f18:	f8bd 1000 	ldrh.w	r1, [sp]
90020f1c:	440a      	add	r2, r1
90020f1e:	f8ad 2008 	strh.w	r2, [sp, #8]
90020f22:	f8bd 2002 	ldrh.w	r2, [sp, #2]
90020f26:	4413      	add	r3, r2
90020f28:	f8ad 300a 	strh.w	r3, [sp, #10]
90020f2c:	6803      	ldr	r3, [r0, #0]
90020f2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020f30:	4798      	blx	r3
90020f32:	8833      	ldrh	r3, [r6, #0]
90020f34:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
90020f38:	ea4f 0c47 	mov.w	ip, r7, lsl #1
90020f3c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90020f40:	f8df e068 	ldr.w	lr, [pc, #104]	; 90020fac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
90020f44:	fb03 1202 	mla	r2, r3, r2, r1
90020f48:	fb08 f303 	mul.w	r3, r8, r3
90020f4c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020f50:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020f54:	4298      	cmp	r0, r3
90020f56:	d21d      	bcs.n	90020f94 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
90020f58:	eb00 080c 	add.w	r8, r0, ip
90020f5c:	4540      	cmp	r0, r8
90020f5e:	d20f      	bcs.n	90020f80 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
90020f60:	f854 1b04 	ldr.w	r1, [r4], #4
90020f64:	ea4f 1951 	mov.w	r9, r1, lsr #5
90020f68:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
90020f6c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90020f70:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90020f74:	ea42 0209 	orr.w	r2, r2, r9
90020f78:	430a      	orrs	r2, r1
90020f7a:	f820 2b02 	strh.w	r2, [r0], #2
90020f7e:	e7ed      	b.n	90020f5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
90020f80:	8832      	ldrh	r2, [r6, #0]
90020f82:	1bd2      	subs	r2, r2, r7
90020f84:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020f88:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
90020f8c:	1bd2      	subs	r2, r2, r7
90020f8e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
90020f92:	e7df      	b.n	90020f54 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
90020f94:	6828      	ldr	r0, [r5, #0]
90020f96:	6803      	ldr	r3, [r0, #0]
90020f98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020f9a:	4798      	blx	r3
90020f9c:	b005      	add	sp, #20
90020f9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90020fa2:	bf00      	nop
90020fa4:	24028e2c 	.word	0x24028e2c
90020fa8:	24028e26 	.word	0x24028e26
90020fac:	fffff800 	.word	0xfffff800

90020fb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
90020fb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020fb4:	b08e      	sub	sp, #56	; 0x38
90020fb6:	460e      	mov	r6, r1
90020fb8:	4604      	mov	r4, r0
90020fba:	461d      	mov	r5, r3
90020fbc:	6808      	ldr	r0, [r1, #0]
90020fbe:	ab0a      	add	r3, sp, #40	; 0x28
90020fc0:	6849      	ldr	r1, [r1, #4]
90020fc2:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 90021198 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
90020fc6:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9002119c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
90020fca:	c303      	stmia	r3!, {r0, r1}
90020fcc:	6810      	ldr	r0, [r2, #0]
90020fce:	ab0c      	add	r3, sp, #48	; 0x30
90020fd0:	6851      	ldr	r1, [r2, #4]
90020fd2:	c303      	stmia	r3!, {r0, r1}
90020fd4:	a80a      	add	r0, sp, #40	; 0x28
90020fd6:	f7f9 fd57 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020fda:	4631      	mov	r1, r6
90020fdc:	a80c      	add	r0, sp, #48	; 0x30
90020fde:	f7f9 fd97 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020fe2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90020fe6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90020fea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
90020fee:	f8d8 0000 	ldr.w	r0, [r8]
90020ff2:	fb11 2103 	smlabb	r1, r1, r3, r2
90020ff6:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
90020ffa:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
90020ffe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90021002:	440c      	add	r4, r1
90021004:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
90021008:	440a      	add	r2, r1
9002100a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9002100e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
90021012:	4413      	add	r3, r2
90021014:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90021018:	6803      	ldr	r3, [r0, #0]
9002101a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002101c:	4798      	blx	r3
9002101e:	2dff      	cmp	r5, #255	; 0xff
90021020:	d124      	bne.n	9002106c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
90021022:	f010 0f01 	tst.w	r0, #1
90021026:	f8d8 0000 	ldr.w	r0, [r8]
9002102a:	d022      	beq.n	90021072 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9002102c:	2100      	movs	r1, #0
9002102e:	f04f 0e01 	mov.w	lr, #1
90021032:	f8d0 c000 	ldr.w	ip, [r0]
90021036:	b2b6      	uxth	r6, r6
90021038:	f8cd e018 	str.w	lr, [sp, #24]
9002103c:	b2bf      	uxth	r7, r7
9002103e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90021042:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
90021046:	e9cd 1107 	strd	r1, r1, [sp, #28]
9002104a:	f8b9 e000 	ldrh.w	lr, [r9]
9002104e:	9503      	str	r5, [sp, #12]
90021050:	9601      	str	r6, [sp, #4]
90021052:	9700      	str	r7, [sp, #0]
90021054:	e9cd 1e04 	strd	r1, lr, [sp, #16]
90021058:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9002105c:	9102      	str	r1, [sp, #8]
9002105e:	4621      	mov	r1, r4
90021060:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
90021064:	47a8      	blx	r5
90021066:	b00e      	add	sp, #56	; 0x38
90021068:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002106c:	f010 0f04 	tst.w	r0, #4
90021070:	e7d9      	b.n	90021026 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
90021072:	6803      	ldr	r3, [r0, #0]
90021074:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90021076:	4798      	blx	r3
90021078:	f8b9 3000 	ldrh.w	r3, [r9]
9002107c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
90021080:	ea4f 0e47 	mov.w	lr, r7, lsl #1
90021084:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
90021088:	435e      	muls	r6, r3
9002108a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9002108e:	2dff      	cmp	r5, #255	; 0xff
90021090:	fb03 1202 	mla	r2, r3, r2, r1
90021094:	ebac 0c07 	sub.w	ip, ip, r7
90021098:	eba3 0707 	sub.w	r7, r3, r7
9002109c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900210a0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900210a4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
900210a8:	ea4f 0747 	mov.w	r7, r7, lsl #1
900210ac:	d049      	beq.n	90021142 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
900210ae:	43eb      	mvns	r3, r5
900210b0:	fa1f f985 	uxth.w	r9, r5
900210b4:	b2db      	uxtb	r3, r3
900210b6:	42b0      	cmp	r0, r6
900210b8:	d266      	bcs.n	90021188 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
900210ba:	eb00 0a0e 	add.w	sl, r0, lr
900210be:	4550      	cmp	r0, sl
900210c0:	4621      	mov	r1, r4
900210c2:	f104 0403 	add.w	r4, r4, #3
900210c6:	d25b      	bcs.n	90021180 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
900210c8:	8802      	ldrh	r2, [r0, #0]
900210ca:	f814 1c01 	ldrb.w	r1, [r4, #-1]
900210ce:	ea4f 2822 	mov.w	r8, r2, asr #8
900210d2:	fb11 f109 	smulbb	r1, r1, r9
900210d6:	10d5      	asrs	r5, r2, #3
900210d8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
900210dc:	00d2      	lsls	r2, r2, #3
900210de:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
900210e2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
900210e6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
900210ea:	fb08 1803 	mla	r8, r8, r3, r1
900210ee:	f814 1c02 	ldrb.w	r1, [r4, #-2]
900210f2:	b2d2      	uxtb	r2, r2
900210f4:	fb11 f109 	smulbb	r1, r1, r9
900210f8:	fa1f f888 	uxth.w	r8, r8
900210fc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90021100:	fb05 1503 	mla	r5, r5, r3, r1
90021104:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90021108:	fb11 f109 	smulbb	r1, r1, r9
9002110c:	b2ad      	uxth	r5, r5
9002110e:	fb02 1203 	mla	r2, r2, r3, r1
90021112:	f108 0101 	add.w	r1, r8, #1
90021116:	b292      	uxth	r2, r2
90021118:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9002111c:	1c51      	adds	r1, r2, #1
9002111e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
90021122:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90021126:	1c69      	adds	r1, r5, #1
90021128:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9002112c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021130:	096d      	lsrs	r5, r5, #5
90021132:	ea42 0208 	orr.w	r2, r2, r8
90021136:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002113a:	432a      	orrs	r2, r5
9002113c:	f820 2b02 	strh.w	r2, [r0], #2
90021140:	e7bd      	b.n	900210be <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
90021142:	4a14      	ldr	r2, [pc, #80]	; (90021194 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
90021144:	42b0      	cmp	r0, r6
90021146:	d21f      	bcs.n	90021188 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90021148:	eb00 050e 	add.w	r5, r0, lr
9002114c:	42a8      	cmp	r0, r5
9002114e:	4621      	mov	r1, r4
90021150:	f104 0403 	add.w	r4, r4, #3
90021154:	d210      	bcs.n	90021178 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
90021156:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9002115a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9002115e:	00db      	lsls	r3, r3, #3
90021160:	ea02 2101 	and.w	r1, r2, r1, lsl #8
90021164:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021168:	430b      	orrs	r3, r1
9002116a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9002116e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
90021172:	f820 3b02 	strh.w	r3, [r0], #2
90021176:	e7e9      	b.n	9002114c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
90021178:	4438      	add	r0, r7
9002117a:	eb01 040c 	add.w	r4, r1, ip
9002117e:	e7e1      	b.n	90021144 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
90021180:	4438      	add	r0, r7
90021182:	eb01 040c 	add.w	r4, r1, ip
90021186:	e796      	b.n	900210b6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
90021188:	4b03      	ldr	r3, [pc, #12]	; (90021198 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9002118a:	6818      	ldr	r0, [r3, #0]
9002118c:	6803      	ldr	r3, [r0, #0]
9002118e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90021190:	4798      	blx	r3
90021192:	e768      	b.n	90021066 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
90021194:	fffff800 	.word	0xfffff800
90021198:	24028e2c 	.word	0x24028e2c
9002119c:	24028e26 	.word	0x24028e26

900211a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
900211a0:	b4f0      	push	{r4, r5, r6, r7}
900211a2:	4616      	mov	r6, r2
900211a4:	461c      	mov	r4, r3
900211a6:	460d      	mov	r5, r1
900211a8:	9a04      	ldr	r2, [sp, #16]
900211aa:	2e01      	cmp	r6, #1
900211ac:	f89d 3014 	ldrb.w	r3, [sp, #20]
900211b0:	f89d 7018 	ldrb.w	r7, [sp, #24]
900211b4:	d012      	beq.n	900211dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
900211b6:	d303      	bcc.n	900211c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
900211b8:	2e02      	cmp	r6, #2
900211ba:	d00a      	beq.n	900211d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
900211bc:	bcf0      	pop	{r4, r5, r6, r7}
900211be:	4770      	bx	lr
900211c0:	6805      	ldr	r5, [r0, #0]
900211c2:	e9cd 3704 	strd	r3, r7, [sp, #16]
900211c6:	68ed      	ldr	r5, [r5, #12]
900211c8:	4613      	mov	r3, r2
900211ca:	4622      	mov	r2, r4
900211cc:	46ac      	mov	ip, r5
900211ce:	bcf0      	pop	{r4, r5, r6, r7}
900211d0:	4760      	bx	ip
900211d2:	4621      	mov	r1, r4
900211d4:	4628      	mov	r0, r5
900211d6:	bcf0      	pop	{r4, r5, r6, r7}
900211d8:	f7ff bd94 	b.w	90020d04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900211dc:	4621      	mov	r1, r4
900211de:	4628      	mov	r0, r5
900211e0:	bcf0      	pop	{r4, r5, r6, r7}
900211e2:	f7ff bee5 	b.w	90020fb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

900211e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
900211e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900211ec:	b093      	sub	sp, #76	; 0x4c
900211ee:	4681      	mov	r9, r0
900211f0:	4688      	mov	r8, r1
900211f2:	6810      	ldr	r0, [r2, #0]
900211f4:	6851      	ldr	r1, [r2, #4]
900211f6:	ac0e      	add	r4, sp, #56	; 0x38
900211f8:	4616      	mov	r6, r2
900211fa:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
900211fe:	4f6b      	ldr	r7, [pc, #428]	; (900213ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90021200:	c403      	stmia	r4!, {r0, r1}
90021202:	6818      	ldr	r0, [r3, #0]
90021204:	ac10      	add	r4, sp, #64	; 0x40
90021206:	6859      	ldr	r1, [r3, #4]
90021208:	c403      	stmia	r4!, {r0, r1}
9002120a:	a80e      	add	r0, sp, #56	; 0x38
9002120c:	f7f9 fc3c 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021210:	4631      	mov	r1, r6
90021212:	a810      	add	r0, sp, #64	; 0x40
90021214:	4e66      	ldr	r6, [pc, #408]	; (900213b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90021216:	f7f9 fc7b 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002121a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9002121e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
90021222:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
90021226:	6830      	ldr	r0, [r6, #0]
90021228:	fb11 2103 	smlabb	r1, r1, r3, r2
9002122c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
90021230:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
90021234:	4489      	add	r9, r1
90021236:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9002123a:	440a      	add	r2, r1
9002123c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
90021240:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
90021244:	4413      	add	r3, r2
90021246:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9002124a:	6803      	ldr	r3, [r0, #0]
9002124c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002124e:	4798      	blx	r3
90021250:	f010 0f80 	tst.w	r0, #128	; 0x80
90021254:	6830      	ldr	r0, [r6, #0]
90021256:	d01d      	beq.n	90021294 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
90021258:	2200      	movs	r2, #0
9002125a:	6801      	ldr	r1, [r0, #0]
9002125c:	b2a4      	uxth	r4, r4
9002125e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90021262:	b2ad      	uxth	r5, r5
90021264:	e9cd 2208 	strd	r2, r2, [sp, #32]
90021268:	220b      	movs	r2, #11
9002126a:	9207      	str	r2, [sp, #28]
9002126c:	883a      	ldrh	r2, [r7, #0]
9002126e:	9502      	str	r5, [sp, #8]
90021270:	9206      	str	r2, [sp, #24]
90021272:	2201      	movs	r2, #1
90021274:	9401      	str	r4, [sp, #4]
90021276:	e9cd a204 	strd	sl, r2, [sp, #16]
9002127a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9002127e:	9203      	str	r2, [sp, #12]
90021280:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
90021284:	9200      	str	r2, [sp, #0]
90021286:	4642      	mov	r2, r8
90021288:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9002128a:	4649      	mov	r1, r9
9002128c:	47a0      	blx	r4
9002128e:	b013      	add	sp, #76	; 0x4c
90021290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021294:	6803      	ldr	r3, [r0, #0]
90021296:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90021298:	4798      	blx	r3
9002129a:	883b      	ldrh	r3, [r7, #0]
9002129c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
900212a0:	f04f 0e04 	mov.w	lr, #4
900212a4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
900212a8:	435d      	muls	r5, r3
900212aa:	fb03 1202 	mla	r2, r3, r2, r1
900212ae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900212b2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
900212b6:	920c      	str	r2, [sp, #48]	; 0x30
900212b8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
900212bc:	1b12      	subs	r2, r2, r4
900212be:	920d      	str	r2, [sp, #52]	; 0x34
900212c0:	0062      	lsls	r2, r4, #1
900212c2:	1b1c      	subs	r4, r3, r4
900212c4:	920a      	str	r2, [sp, #40]	; 0x28
900212c6:	0063      	lsls	r3, r4, #1
900212c8:	930b      	str	r3, [sp, #44]	; 0x2c
900212ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900212cc:	4298      	cmp	r0, r3
900212ce:	d266      	bcs.n	9002139e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
900212d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900212d2:	eb00 0b03 	add.w	fp, r0, r3
900212d6:	4558      	cmp	r0, fp
900212d8:	d25c      	bcs.n	90021394 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
900212da:	f819 3b01 	ldrb.w	r3, [r9], #1
900212de:	fb1e e303 	smlabb	r3, lr, r3, lr
900212e2:	f858 2003 	ldr.w	r2, [r8, r3]
900212e6:	0e11      	lsrs	r1, r2, #24
900212e8:	d012      	beq.n	90021310 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900212ea:	29ff      	cmp	r1, #255	; 0xff
900212ec:	ea4f 2712 	mov.w	r7, r2, lsr #8
900212f0:	d110      	bne.n	90021314 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
900212f2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
900212f6:	d10d      	bne.n	90021314 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
900212f8:	0953      	lsrs	r3, r2, #5
900212fa:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
900212fe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90021302:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021306:	f027 0707 	bic.w	r7, r7, #7
9002130a:	431f      	orrs	r7, r3
9002130c:	433a      	orrs	r2, r7
9002130e:	8002      	strh	r2, [r0, #0]
90021310:	3002      	adds	r0, #2
90021312:	e7e0      	b.n	900212d6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90021314:	fb0a f101 	mul.w	r1, sl, r1
90021318:	8806      	ldrh	r6, [r0, #0]
9002131a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9002131e:	b2d2      	uxtb	r2, r2
90021320:	1c4b      	adds	r3, r1, #1
90021322:	1235      	asrs	r5, r6, #8
90021324:	10f4      	asrs	r4, r6, #3
90021326:	eb03 2321 	add.w	r3, r3, r1, asr #8
9002132a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9002132e:	00f6      	lsls	r6, r6, #3
90021330:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90021334:	121b      	asrs	r3, r3, #8
90021336:	b2f6      	uxtb	r6, r6
90021338:	b299      	uxth	r1, r3
9002133a:	43db      	mvns	r3, r3
9002133c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90021340:	fb1c fc01 	smulbb	ip, ip, r1
90021344:	b2db      	uxtb	r3, r3
90021346:	fb12 f201 	smulbb	r2, r2, r1
9002134a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9002134e:	fb05 c503 	mla	r5, r5, r3, ip
90021352:	b2ff      	uxtb	r7, r7
90021354:	fb06 2203 	mla	r2, r6, r3, r2
90021358:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9002135c:	fb17 f701 	smulbb	r7, r7, r1
90021360:	b2ad      	uxth	r5, r5
90021362:	b292      	uxth	r2, r2
90021364:	fb04 7403 	mla	r4, r4, r3, r7
90021368:	f105 0c01 	add.w	ip, r5, #1
9002136c:	1c57      	adds	r7, r2, #1
9002136e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90021372:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90021376:	b2a4      	uxth	r4, r4
90021378:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002137c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021380:	433d      	orrs	r5, r7
90021382:	1c67      	adds	r7, r4, #1
90021384:	eb07 2414 	add.w	r4, r7, r4, lsr #8
90021388:	0964      	lsrs	r4, r4, #5
9002138a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002138e:	4325      	orrs	r5, r4
90021390:	8005      	strh	r5, [r0, #0]
90021392:	e7bd      	b.n	90021310 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
90021394:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021396:	4418      	add	r0, r3
90021398:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002139a:	4499      	add	r9, r3
9002139c:	e795      	b.n	900212ca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9002139e:	4b04      	ldr	r3, [pc, #16]	; (900213b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
900213a0:	6818      	ldr	r0, [r3, #0]
900213a2:	6803      	ldr	r3, [r0, #0]
900213a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900213a6:	4798      	blx	r3
900213a8:	e771      	b.n	9002128e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
900213aa:	bf00      	nop
900213ac:	24028e26 	.word	0x24028e26
900213b0:	24028e2c 	.word	0x24028e2c

900213b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
900213b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900213b8:	b087      	sub	sp, #28
900213ba:	4680      	mov	r8, r0
900213bc:	460d      	mov	r5, r1
900213be:	4614      	mov	r4, r2
900213c0:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
900213c4:	2e00      	cmp	r6, #0
900213c6:	f000 80b9 	beq.w	9002153c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
900213ca:	6810      	ldr	r0, [r2, #0]
900213cc:	af02      	add	r7, sp, #8
900213ce:	6851      	ldr	r1, [r2, #4]
900213d0:	c703      	stmia	r7!, {r0, r1}
900213d2:	6818      	ldr	r0, [r3, #0]
900213d4:	af04      	add	r7, sp, #16
900213d6:	6859      	ldr	r1, [r3, #4]
900213d8:	c703      	stmia	r7!, {r0, r1}
900213da:	a802      	add	r0, sp, #8
900213dc:	f7f9 fb54 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900213e0:	4621      	mov	r1, r4
900213e2:	a804      	add	r0, sp, #16
900213e4:	f7f9 fb94 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900213e8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900213ec:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900213f0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
900213f4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
900213f8:	fb14 2103 	smlabb	r1, r4, r3, r2
900213fc:	eb08 0401 	add.w	r4, r8, r1
90021400:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90021404:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90021408:	440a      	add	r2, r1
9002140a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9002140e:	f8ad 2010 	strh.w	r2, [sp, #16]
90021412:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90021416:	4413      	add	r3, r2
90021418:	f8ad 3012 	strh.w	r3, [sp, #18]
9002141c:	4b49      	ldr	r3, [pc, #292]	; (90021544 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9002141e:	6818      	ldr	r0, [r3, #0]
90021420:	6803      	ldr	r3, [r0, #0]
90021422:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90021424:	4798      	blx	r3
90021426:	4b48      	ldr	r3, [pc, #288]	; (90021548 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
90021428:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9002142c:	2eff      	cmp	r6, #255	; 0xff
9002142e:	881a      	ldrh	r2, [r3, #0]
90021430:	f9bd c010 	ldrsh.w	ip, [sp, #16]
90021434:	fb02 c101 	mla	r1, r2, r1, ip
90021438:	fb02 f207 	mul.w	r2, r2, r7
9002143c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90021440:	f105 0104 	add.w	r1, r5, #4
90021444:	461d      	mov	r5, r3
90021446:	d05a      	beq.n	900214fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
90021448:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9002144c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90021450:	b2b6      	uxth	r6, r6
90021452:	9301      	str	r3, [sp, #4]
90021454:	fa1f fe8e 	uxth.w	lr, lr
90021458:	4282      	cmp	r2, r0
9002145a:	d96a      	bls.n	90021532 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9002145c:	eb00 0b0a 	add.w	fp, r0, sl
90021460:	4583      	cmp	fp, r0
90021462:	d940      	bls.n	900214e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
90021464:	8805      	ldrh	r5, [r0, #0]
90021466:	f814 3b01 	ldrb.w	r3, [r4], #1
9002146a:	122f      	asrs	r7, r5, #8
9002146c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90021470:	ea4f 09e5 	mov.w	r9, r5, asr #3
90021474:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90021478:	00ed      	lsls	r5, r5, #3
9002147a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002147e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90021482:	fb17 f70e 	smulbb	r7, r7, lr
90021486:	b2ed      	uxtb	r5, r5
90021488:	fb19 f90e 	smulbb	r9, r9, lr
9002148c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90021490:	fb15 f50e 	smulbb	r5, r5, lr
90021494:	fb0c 7c06 	mla	ip, ip, r6, r7
90021498:	10df      	asrs	r7, r3, #3
9002149a:	00db      	lsls	r3, r3, #3
9002149c:	fa1f fc8c 	uxth.w	ip, ip
900214a0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900214a4:	b2db      	uxtb	r3, r3
900214a6:	fb07 9706 	mla	r7, r7, r6, r9
900214aa:	f10c 0901 	add.w	r9, ip, #1
900214ae:	fb03 5306 	mla	r3, r3, r6, r5
900214b2:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
900214b6:	b29b      	uxth	r3, r3
900214b8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
900214bc:	b2bf      	uxth	r7, r7
900214be:	f103 0c01 	add.w	ip, r3, #1
900214c2:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900214c6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900214ca:	ea4c 0c09 	orr.w	ip, ip, r9
900214ce:	f107 0901 	add.w	r9, r7, #1
900214d2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
900214d6:	097f      	lsrs	r7, r7, #5
900214d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900214dc:	ea4c 0c07 	orr.w	ip, ip, r7
900214e0:	f820 cb02 	strh.w	ip, [r0], #2
900214e4:	e7bc      	b.n	90021460 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
900214e6:	9b01      	ldr	r3, [sp, #4]
900214e8:	881b      	ldrh	r3, [r3, #0]
900214ea:	eba3 0308 	sub.w	r3, r3, r8
900214ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900214f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900214f6:	eba3 0308 	sub.w	r3, r3, r8
900214fa:	441c      	add	r4, r3
900214fc:	e7ac      	b.n	90021458 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
900214fe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90021502:	4282      	cmp	r2, r0
90021504:	d915      	bls.n	90021532 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90021506:	eb00 060a 	add.w	r6, r0, sl
9002150a:	4286      	cmp	r6, r0
9002150c:	d906      	bls.n	9002151c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9002150e:	f814 3b01 	ldrb.w	r3, [r4], #1
90021512:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90021516:	f820 3b02 	strh.w	r3, [r0], #2
9002151a:	e7f6      	b.n	9002150a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9002151c:	882b      	ldrh	r3, [r5, #0]
9002151e:	eba3 0308 	sub.w	r3, r3, r8
90021522:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021526:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002152a:	eba3 0308 	sub.w	r3, r3, r8
9002152e:	441c      	add	r4, r3
90021530:	e7e7      	b.n	90021502 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90021532:	4b04      	ldr	r3, [pc, #16]	; (90021544 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90021534:	6818      	ldr	r0, [r3, #0]
90021536:	6803      	ldr	r3, [r0, #0]
90021538:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002153a:	4798      	blx	r3
9002153c:	b007      	add	sp, #28
9002153e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021542:	bf00      	nop
90021544:	24028e2c 	.word	0x24028e2c
90021548:	24028e26 	.word	0x24028e26

9002154c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9002154c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021550:	b091      	sub	sp, #68	; 0x44
90021552:	4680      	mov	r8, r0
90021554:	460f      	mov	r7, r1
90021556:	4614      	mov	r4, r2
90021558:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9002155c:	2d00      	cmp	r5, #0
9002155e:	d051      	beq.n	90021604 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90021560:	6810      	ldr	r0, [r2, #0]
90021562:	ae0c      	add	r6, sp, #48	; 0x30
90021564:	6851      	ldr	r1, [r2, #4]
90021566:	f8df 9200 	ldr.w	r9, [pc, #512]	; 90021768 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9002156a:	c603      	stmia	r6!, {r0, r1}
9002156c:	6818      	ldr	r0, [r3, #0]
9002156e:	ae0e      	add	r6, sp, #56	; 0x38
90021570:	6859      	ldr	r1, [r3, #4]
90021572:	c603      	stmia	r6!, {r0, r1}
90021574:	a80c      	add	r0, sp, #48	; 0x30
90021576:	f7f9 fa87 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002157a:	4621      	mov	r1, r4
9002157c:	a80e      	add	r0, sp, #56	; 0x38
9002157e:	f7f9 fac7 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021582:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
90021586:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9002158a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9002158e:	f8d9 0000 	ldr.w	r0, [r9]
90021592:	fb11 2103 	smlabb	r1, r1, r3, r2
90021596:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9002159a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
9002159e:	eb08 0401 	add.w	r4, r8, r1
900215a2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
900215a6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9002176c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
900215aa:	440a      	add	r2, r1
900215ac:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
900215b0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
900215b4:	4413      	add	r3, r2
900215b6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
900215ba:	6803      	ldr	r3, [r0, #0]
900215bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900215be:	4798      	blx	r3
900215c0:	f010 0f80 	tst.w	r0, #128	; 0x80
900215c4:	f8d9 0000 	ldr.w	r0, [r9]
900215c8:	d01f      	beq.n	9002160a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
900215ca:	2200      	movs	r2, #0
900215cc:	6801      	ldr	r1, [r0, #0]
900215ce:	b2b6      	uxth	r6, r6
900215d0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900215d4:	e9cd 2208 	strd	r2, r2, [sp, #32]
900215d8:	220b      	movs	r2, #11
900215da:	9207      	str	r2, [sp, #28]
900215dc:	f8b8 2000 	ldrh.w	r2, [r8]
900215e0:	9601      	str	r6, [sp, #4]
900215e2:	9206      	str	r2, [sp, #24]
900215e4:	2201      	movs	r2, #1
900215e6:	e9cd 5204 	strd	r5, r2, [sp, #16]
900215ea:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
900215ee:	9203      	str	r2, [sp, #12]
900215f0:	fa1f f28a 	uxth.w	r2, sl
900215f4:	9202      	str	r2, [sp, #8]
900215f6:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
900215fa:	9200      	str	r2, [sp, #0]
900215fc:	463a      	mov	r2, r7
900215fe:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
90021600:	4621      	mov	r1, r4
90021602:	47a8      	blx	r5
90021604:	b011      	add	sp, #68	; 0x44
90021606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002160a:	6803      	ldr	r3, [r0, #0]
9002160c:	ea4f 0946 	mov.w	r9, r6, lsl #1
90021610:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90021612:	4798      	blx	r3
90021614:	f8b8 2000 	ldrh.w	r2, [r8]
90021618:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9002161c:	2dff      	cmp	r5, #255	; 0xff
9002161e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
90021622:	fb0a fa02 	mul.w	sl, sl, r2
90021626:	fb02 1303 	mla	r3, r2, r3, r1
9002162a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002162e:	d062      	beq.n	900216f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90021630:	ea6f 0c05 	mvn.w	ip, r5
90021634:	eb00 034a 	add.w	r3, r0, sl, lsl #1
90021638:	b2ad      	uxth	r5, r5
9002163a:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9002163e:	fa5f fc8c 	uxtb.w	ip, ip
90021642:	930a      	str	r3, [sp, #40]	; 0x28
90021644:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021646:	4298      	cmp	r0, r3
90021648:	f080 8085 	bcs.w	90021756 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9002164c:	eb00 0b09 	add.w	fp, r0, r9
90021650:	4558      	cmp	r0, fp
90021652:	d246      	bcs.n	900216e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
90021654:	f814 eb01 	ldrb.w	lr, [r4], #1
90021658:	2303      	movs	r3, #3
9002165a:	2204      	movs	r2, #4
9002165c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
90021660:	8803      	ldrh	r3, [r0, #0]
90021662:	eb07 0a0e 	add.w	sl, r7, lr
90021666:	1219      	asrs	r1, r3, #8
90021668:	10da      	asrs	r2, r3, #3
9002166a:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002166e:	f89a 8002 	ldrb.w	r8, [sl, #2]
90021672:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90021676:	00db      	lsls	r3, r3, #3
90021678:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002167c:	fb18 f805 	smulbb	r8, r8, r5
90021680:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90021684:	fb1e fe05 	smulbb	lr, lr, r5
90021688:	b2db      	uxtb	r3, r3
9002168a:	fb01 810c 	mla	r1, r1, ip, r8
9002168e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021692:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
90021696:	fb18 f805 	smulbb	r8, r8, r5
9002169a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9002169e:	b289      	uxth	r1, r1
900216a0:	fb02 820c 	mla	r2, r2, ip, r8
900216a4:	fb03 e30c 	mla	r3, r3, ip, lr
900216a8:	f101 0801 	add.w	r8, r1, #1
900216ac:	b292      	uxth	r2, r2
900216ae:	b29b      	uxth	r3, r3
900216b0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
900216b4:	f102 0801 	add.w	r8, r2, #1
900216b8:	f103 0e01 	add.w	lr, r3, #1
900216bc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
900216c0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900216c4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
900216c8:	ea4f 1858 	mov.w	r8, r8, lsr #5
900216cc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900216d0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900216d4:	ea4e 0101 	orr.w	r1, lr, r1
900216d8:	ea41 0108 	orr.w	r1, r1, r8
900216dc:	f820 1b02 	strh.w	r1, [r0], #2
900216e0:	e7b6      	b.n	90021650 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
900216e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900216e4:	881b      	ldrh	r3, [r3, #0]
900216e6:	1b9b      	subs	r3, r3, r6
900216e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900216ec:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
900216f0:	1b9b      	subs	r3, r3, r6
900216f2:	441c      	add	r4, r3
900216f4:	e7a6      	b.n	90021644 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
900216f6:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
900216fa:	2203      	movs	r2, #3
900216fc:	2504      	movs	r5, #4
900216fe:	4919      	ldr	r1, [pc, #100]	; (90021764 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90021700:	4550      	cmp	r0, sl
90021702:	d228      	bcs.n	90021756 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90021704:	eb00 0c09 	add.w	ip, r0, r9
90021708:	4560      	cmp	r0, ip
9002170a:	4623      	mov	r3, r4
9002170c:	d219      	bcs.n	90021742 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9002170e:	f893 e000 	ldrb.w	lr, [r3]
90021712:	3401      	adds	r4, #1
90021714:	fb12 5e0e 	smlabb	lr, r2, lr, r5
90021718:	eb07 0b0e 	add.w	fp, r7, lr
9002171c:	f817 e00e 	ldrb.w	lr, [r7, lr]
90021720:	f89b 3002 	ldrb.w	r3, [fp, #2]
90021724:	f89b b001 	ldrb.w	fp, [fp, #1]
90021728:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9002172c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90021730:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90021734:	ea43 030b 	orr.w	r3, r3, fp
90021738:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9002173c:	f820 3b02 	strh.w	r3, [r0], #2
90021740:	e7e2      	b.n	90021708 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
90021742:	f8b8 3000 	ldrh.w	r3, [r8]
90021746:	1b9b      	subs	r3, r3, r6
90021748:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002174c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90021750:	1b9b      	subs	r3, r3, r6
90021752:	441c      	add	r4, r3
90021754:	e7d4      	b.n	90021700 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
90021756:	4b04      	ldr	r3, [pc, #16]	; (90021768 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
90021758:	6818      	ldr	r0, [r3, #0]
9002175a:	6803      	ldr	r3, [r0, #0]
9002175c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002175e:	4798      	blx	r3
90021760:	e750      	b.n	90021604 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90021762:	bf00      	nop
90021764:	fffff800 	.word	0xfffff800
90021768:	24028e2c 	.word	0x24028e2c
9002176c:	24028e26 	.word	0x24028e26

90021770 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90021770:	b430      	push	{r4, r5}
90021772:	780d      	ldrb	r5, [r1, #0]
90021774:	f89d 4008 	ldrb.w	r4, [sp, #8]
90021778:	2d01      	cmp	r5, #1
9002177a:	d00a      	beq.n	90021792 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
9002177c:	d305      	bcc.n	9002178a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
9002177e:	2d02      	cmp	r5, #2
90021780:	d10b      	bne.n	9002179a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
90021782:	9402      	str	r4, [sp, #8]
90021784:	bc30      	pop	{r4, r5}
90021786:	f7ff be15 	b.w	900213b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9002178a:	9402      	str	r4, [sp, #8]
9002178c:	bc30      	pop	{r4, r5}
9002178e:	f7ff bd2b 	b.w	900211e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
90021792:	9402      	str	r4, [sp, #8]
90021794:	bc30      	pop	{r4, r5}
90021796:	f7ff bed9 	b.w	9002154c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9002179a:	bc30      	pop	{r4, r5}
9002179c:	4770      	bx	lr
	...

900217a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
900217a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900217a4:	b087      	sub	sp, #28
900217a6:	4604      	mov	r4, r0
900217a8:	460e      	mov	r6, r1
900217aa:	6810      	ldr	r0, [r2, #0]
900217ac:	6851      	ldr	r1, [r2, #4]
900217ae:	ad02      	add	r5, sp, #8
900217b0:	4617      	mov	r7, r2
900217b2:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
900217b6:	f8df 9230 	ldr.w	r9, [pc, #560]	; 900219e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
900217ba:	c503      	stmia	r5!, {r0, r1}
900217bc:	6818      	ldr	r0, [r3, #0]
900217be:	ad04      	add	r5, sp, #16
900217c0:	6859      	ldr	r1, [r3, #4]
900217c2:	c503      	stmia	r5!, {r0, r1}
900217c4:	a802      	add	r0, sp, #8
900217c6:	f7f9 f95f 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900217ca:	4639      	mov	r1, r7
900217cc:	a804      	add	r0, sp, #16
900217ce:	f7f9 f99f 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900217d2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900217d6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900217da:	f8bd 100c 	ldrh.w	r1, [sp, #12]
900217de:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
900217e2:	fb11 2103 	smlabb	r1, r1, r3, r2
900217e6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
900217ea:	eb04 0441 	add.w	r4, r4, r1, lsl #1
900217ee:	440e      	add	r6, r1
900217f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900217f4:	440a      	add	r2, r1
900217f6:	f8ad 2010 	strh.w	r2, [sp, #16]
900217fa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900217fe:	4413      	add	r3, r2
90021800:	f8ad 3012 	strh.w	r3, [sp, #18]
90021804:	4b77      	ldr	r3, [pc, #476]	; (900219e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90021806:	6818      	ldr	r0, [r3, #0]
90021808:	6803      	ldr	r3, [r0, #0]
9002180a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9002180c:	4798      	blx	r3
9002180e:	f8b9 b000 	ldrh.w	fp, [r9]
90021812:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021816:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9002181a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9002181e:	fb05 f50b 	mul.w	r5, r5, fp
90021822:	fb0b 2303 	mla	r3, fp, r3, r2
90021826:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002182a:	ea4f 0348 	mov.w	r3, r8, lsl #1
9002182e:	9300      	str	r3, [sp, #0]
90021830:	d069      	beq.n	90021906 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
90021832:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
90021836:	4558      	cmp	r0, fp
90021838:	f080 80cc 	bcs.w	900219d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9002183c:	9b00      	ldr	r3, [sp, #0]
9002183e:	4631      	mov	r1, r6
90021840:	18c3      	adds	r3, r0, r3
90021842:	9301      	str	r3, [sp, #4]
90021844:	9b01      	ldr	r3, [sp, #4]
90021846:	4298      	cmp	r0, r3
90021848:	d24f      	bcs.n	900218ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9002184a:	f811 2b01 	ldrb.w	r2, [r1], #1
9002184e:	2a00      	cmp	r2, #0
90021850:	d048      	beq.n	900218e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90021852:	fb0a f202 	mul.w	r2, sl, r2
90021856:	1c53      	adds	r3, r2, #1
90021858:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002185c:	121b      	asrs	r3, r3, #8
9002185e:	d041      	beq.n	900218e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90021860:	8802      	ldrh	r2, [r0, #0]
90021862:	b29e      	uxth	r6, r3
90021864:	f8b4 c000 	ldrh.w	ip, [r4]
90021868:	43db      	mvns	r3, r3
9002186a:	1215      	asrs	r5, r2, #8
9002186c:	b2db      	uxtb	r3, r3
9002186e:	ea4f 272c 	mov.w	r7, ip, asr #8
90021872:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021876:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9002187a:	fb15 f503 	smulbb	r5, r5, r3
9002187e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90021882:	00d2      	lsls	r2, r2, #3
90021884:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90021888:	fb07 5706 	mla	r7, r7, r6, r5
9002188c:	ea4f 05ec 	mov.w	r5, ip, asr #3
90021890:	b2d2      	uxtb	r2, r2
90021892:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90021896:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9002189a:	fb1e fe03 	smulbb	lr, lr, r3
9002189e:	b2bf      	uxth	r7, r7
900218a0:	fb12 f203 	smulbb	r2, r2, r3
900218a4:	fa5f fc8c 	uxtb.w	ip, ip
900218a8:	fb05 e506 	mla	r5, r5, r6, lr
900218ac:	f107 0e01 	add.w	lr, r7, #1
900218b0:	fb0c 2c06 	mla	ip, ip, r6, r2
900218b4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
900218b8:	fa1f fc8c 	uxth.w	ip, ip
900218bc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
900218c0:	b2ad      	uxth	r5, r5
900218c2:	f10c 0701 	add.w	r7, ip, #1
900218c6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900218ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900218ce:	ea47 070e 	orr.w	r7, r7, lr
900218d2:	f105 0e01 	add.w	lr, r5, #1
900218d6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
900218da:	096d      	lsrs	r5, r5, #5
900218dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900218e0:	432f      	orrs	r7, r5
900218e2:	8007      	strh	r7, [r0, #0]
900218e4:	3002      	adds	r0, #2
900218e6:	3402      	adds	r4, #2
900218e8:	e7ac      	b.n	90021844 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
900218ea:	f8b9 3000 	ldrh.w	r3, [r9]
900218ee:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900218f2:	eba3 0308 	sub.w	r3, r3, r8
900218f6:	eba6 0608 	sub.w	r6, r6, r8
900218fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900218fe:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90021902:	440e      	add	r6, r1
90021904:	e797      	b.n	90021836 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
90021906:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9002190a:	42a8      	cmp	r0, r5
9002190c:	d262      	bcs.n	900219d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9002190e:	9b00      	ldr	r3, [sp, #0]
90021910:	4631      	mov	r1, r6
90021912:	eb00 0b03 	add.w	fp, r0, r3
90021916:	4558      	cmp	r0, fp
90021918:	d24e      	bcs.n	900219b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9002191a:	f811 3b01 	ldrb.w	r3, [r1], #1
9002191e:	b12b      	cbz	r3, 9002192c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90021920:	2bff      	cmp	r3, #255	; 0xff
90021922:	f8b4 e000 	ldrh.w	lr, [r4]
90021926:	d104      	bne.n	90021932 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90021928:	f8a0 e000 	strh.w	lr, [r0]
9002192c:	3002      	adds	r0, #2
9002192e:	3402      	adds	r4, #2
90021930:	e7f1      	b.n	90021916 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
90021932:	8802      	ldrh	r2, [r0, #0]
90021934:	b29f      	uxth	r7, r3
90021936:	43db      	mvns	r3, r3
90021938:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9002193c:	1216      	asrs	r6, r2, #8
9002193e:	b2db      	uxtb	r3, r3
90021940:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90021944:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90021948:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9002194c:	00d2      	lsls	r2, r2, #3
9002194e:	fb16 f603 	smulbb	r6, r6, r3
90021952:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
90021956:	b2d2      	uxtb	r2, r2
90021958:	fb0c 6c07 	mla	ip, ip, r7, r6
9002195c:	ea4f 06ee 	mov.w	r6, lr, asr #3
90021960:	fb1a fa03 	smulbb	sl, sl, r3
90021964:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90021968:	fa1f fc8c 	uxth.w	ip, ip
9002196c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90021970:	fb12 f303 	smulbb	r3, r2, r3
90021974:	fa5f fe8e 	uxtb.w	lr, lr
90021978:	fb06 a607 	mla	r6, r6, r7, sl
9002197c:	f10c 0201 	add.w	r2, ip, #1
90021980:	fb0e 3307 	mla	r3, lr, r7, r3
90021984:	b2b6      	uxth	r6, r6
90021986:	b29b      	uxth	r3, r3
90021988:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9002198c:	f106 0a01 	add.w	sl, r6, #1
90021990:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
90021994:	f103 0c01 	add.w	ip, r3, #1
90021998:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9002199c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900219a0:	0976      	lsrs	r6, r6, #5
900219a2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900219a6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
900219aa:	ea4c 0c02 	orr.w	ip, ip, r2
900219ae:	ea4c 0c06 	orr.w	ip, ip, r6
900219b2:	f8a0 c000 	strh.w	ip, [r0]
900219b6:	e7b9      	b.n	9002192c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
900219b8:	f8b9 3000 	ldrh.w	r3, [r9]
900219bc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900219c0:	eba3 0308 	sub.w	r3, r3, r8
900219c4:	eba6 0608 	sub.w	r6, r6, r8
900219c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900219cc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
900219d0:	440e      	add	r6, r1
900219d2:	e79a      	b.n	9002190a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
900219d4:	4b03      	ldr	r3, [pc, #12]	; (900219e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
900219d6:	6818      	ldr	r0, [r3, #0]
900219d8:	6803      	ldr	r3, [r0, #0]
900219da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900219dc:	4798      	blx	r3
900219de:	b007      	add	sp, #28
900219e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900219e4:	24028e2c 	.word	0x24028e2c
900219e8:	24028e26 	.word	0x24028e26

900219ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
900219ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900219f0:	b089      	sub	sp, #36	; 0x24
900219f2:	4682      	mov	sl, r0
900219f4:	460f      	mov	r7, r1
900219f6:	4691      	mov	r9, r2
900219f8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
900219fc:	4698      	mov	r8, r3
900219fe:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021a00:	2e00      	cmp	r6, #0
90021a02:	d036      	beq.n	90021a72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90021a04:	4608      	mov	r0, r1
90021a06:	f7fc f863 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90021a0a:	4605      	mov	r5, r0
90021a0c:	4638      	mov	r0, r7
90021a0e:	f7fc f893 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
90021a12:	f8ad 000e 	strh.w	r0, [sp, #14]
90021a16:	4638      	mov	r0, r7
90021a18:	f8ad 9008 	strh.w	r9, [sp, #8]
90021a1c:	f8ad 500c 	strh.w	r5, [sp, #12]
90021a20:	f8ad 800a 	strh.w	r8, [sp, #10]
90021a24:	f7fc f940 	bl	9001dca8 <_ZNK8touchgfx6Bitmap7getDataEv>
90021a28:	4605      	mov	r5, r0
90021a2a:	4638      	mov	r0, r7
90021a2c:	f7fc f96c 	bl	9001dd08 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90021a30:	4681      	mov	r9, r0
90021a32:	4638      	mov	r0, r7
90021a34:	f7fc f9bc 	bl	9001ddb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
90021a38:	280b      	cmp	r0, #11
90021a3a:	d81a      	bhi.n	90021a72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90021a3c:	e8df f000 	tbb	[pc, r0]
90021a40:	1906aebd 	.word	0x1906aebd
90021a44:	19191919 	.word	0x19191919
90021a48:	b5191919 	.word	0xb5191919
90021a4c:	4bb0      	ldr	r3, [pc, #704]	; (90021d10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
90021a4e:	6818      	ldr	r0, [r3, #0]
90021a50:	6803      	ldr	r3, [r0, #0]
90021a52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90021a54:	4798      	blx	r3
90021a56:	2eff      	cmp	r6, #255	; 0xff
90021a58:	d121      	bne.n	90021a9e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
90021a5a:	0683      	lsls	r3, r0, #26
90021a5c:	d41f      	bmi.n	90021a9e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
90021a5e:	4638      	mov	r0, r7
90021a60:	f7fc f8ea 	bl	9001dc38 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90021a64:	b940      	cbnz	r0, 90021a78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
90021a66:	4623      	mov	r3, r4
90021a68:	aa02      	add	r2, sp, #8
90021a6a:	4629      	mov	r1, r5
90021a6c:	4650      	mov	r0, sl
90021a6e:	f7ff fa2f 	bl	90020ed0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90021a72:	b009      	add	sp, #36	; 0x24
90021a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021a78:	f10d 0818 	add.w	r8, sp, #24
90021a7c:	4639      	mov	r1, r7
90021a7e:	af04      	add	r7, sp, #16
90021a80:	4640      	mov	r0, r8
90021a82:	f7fc f88d 	bl	9001dba0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90021a86:	e898 0003 	ldmia.w	r8, {r0, r1}
90021a8a:	e887 0003 	stmia.w	r7, {r0, r1}
90021a8e:	4638      	mov	r0, r7
90021a90:	4621      	mov	r1, r4
90021a92:	f7f3 fb93 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
90021a96:	4638      	mov	r0, r7
90021a98:	f7f3 fbd3 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
90021a9c:	b130      	cbz	r0, 90021aac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
90021a9e:	4633      	mov	r3, r6
90021aa0:	4622      	mov	r2, r4
90021aa2:	a902      	add	r1, sp, #8
90021aa4:	4628      	mov	r0, r5
90021aa6:	f7ff f92d 	bl	90020d04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021aaa:	e7e2      	b.n	90021a72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90021aac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021ab0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90021ab4:	4293      	cmp	r3, r2
90021ab6:	dd12      	ble.n	90021ade <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
90021ab8:	1a9b      	subs	r3, r3, r2
90021aba:	f9b4 0000 	ldrsh.w	r0, [r4]
90021abe:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90021ac2:	f8ad 0018 	strh.w	r0, [sp, #24]
90021ac6:	4628      	mov	r0, r5
90021ac8:	f8ad 201a 	strh.w	r2, [sp, #26]
90021acc:	4642      	mov	r2, r8
90021ace:	f8ad 101c 	strh.w	r1, [sp, #28]
90021ad2:	a902      	add	r1, sp, #8
90021ad4:	f8ad 301e 	strh.w	r3, [sp, #30]
90021ad8:	4633      	mov	r3, r6
90021ada:	f7ff f913 	bl	90020d04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021ade:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90021ae2:	f9b4 2000 	ldrsh.w	r2, [r4]
90021ae6:	4293      	cmp	r3, r2
90021ae8:	dd12      	ble.n	90021b10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
90021aea:	1a9b      	subs	r3, r3, r2
90021aec:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90021af0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90021af4:	f8ad 2018 	strh.w	r2, [sp, #24]
90021af8:	4642      	mov	r2, r8
90021afa:	f8ad 001a 	strh.w	r0, [sp, #26]
90021afe:	4628      	mov	r0, r5
90021b00:	f8ad 301c 	strh.w	r3, [sp, #28]
90021b04:	23ff      	movs	r3, #255	; 0xff
90021b06:	f8ad 101e 	strh.w	r1, [sp, #30]
90021b0a:	a902      	add	r1, sp, #8
90021b0c:	f7ff f8fa 	bl	90020d04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021b10:	463b      	mov	r3, r7
90021b12:	aa02      	add	r2, sp, #8
90021b14:	4629      	mov	r1, r5
90021b16:	4650      	mov	r0, sl
90021b18:	f7ff f9da 	bl	90020ed0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90021b1c:	88a2      	ldrh	r2, [r4, #4]
90021b1e:	8823      	ldrh	r3, [r4, #0]
90021b20:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90021b24:	4413      	add	r3, r2
90021b26:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90021b2a:	440a      	add	r2, r1
90021b2c:	b29b      	uxth	r3, r3
90021b2e:	b292      	uxth	r2, r2
90021b30:	b218      	sxth	r0, r3
90021b32:	b211      	sxth	r1, r2
90021b34:	4288      	cmp	r0, r1
90021b36:	dd12      	ble.n	90021b5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
90021b38:	1a9b      	subs	r3, r3, r2
90021b3a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90021b3e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
90021b42:	4642      	mov	r2, r8
90021b44:	f8ad 1018 	strh.w	r1, [sp, #24]
90021b48:	a902      	add	r1, sp, #8
90021b4a:	f8ad 301c 	strh.w	r3, [sp, #28]
90021b4e:	23ff      	movs	r3, #255	; 0xff
90021b50:	f8ad 001e 	strh.w	r0, [sp, #30]
90021b54:	4628      	mov	r0, r5
90021b56:	f8ad 601a 	strh.w	r6, [sp, #26]
90021b5a:	f7ff f8d3 	bl	90020d04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021b5e:	88e2      	ldrh	r2, [r4, #6]
90021b60:	8863      	ldrh	r3, [r4, #2]
90021b62:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90021b66:	4413      	add	r3, r2
90021b68:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90021b6c:	440a      	add	r2, r1
90021b6e:	b29b      	uxth	r3, r3
90021b70:	b292      	uxth	r2, r2
90021b72:	b218      	sxth	r0, r3
90021b74:	b211      	sxth	r1, r2
90021b76:	4288      	cmp	r0, r1
90021b78:	f77f af7b 	ble.w	90021a72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90021b7c:	1a9b      	subs	r3, r3, r2
90021b7e:	f9b4 6000 	ldrsh.w	r6, [r4]
90021b82:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90021b86:	4642      	mov	r2, r8
90021b88:	f8ad 301e 	strh.w	r3, [sp, #30]
90021b8c:	23ff      	movs	r3, #255	; 0xff
90021b8e:	f8ad 6018 	strh.w	r6, [sp, #24]
90021b92:	f8ad 101a 	strh.w	r1, [sp, #26]
90021b96:	f8ad 001c 	strh.w	r0, [sp, #28]
90021b9a:	e782      	b.n	90021aa2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
90021b9c:	4633      	mov	r3, r6
90021b9e:	4622      	mov	r2, r4
90021ba0:	a902      	add	r1, sp, #8
90021ba2:	4628      	mov	r0, r5
90021ba4:	f7ff fa04 	bl	90020fb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90021ba8:	e763      	b.n	90021a72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90021baa:	9600      	str	r6, [sp, #0]
90021bac:	4623      	mov	r3, r4
90021bae:	aa02      	add	r2, sp, #8
90021bb0:	4649      	mov	r1, r9
90021bb2:	4628      	mov	r0, r5
90021bb4:	f7ff fddc 	bl	90021770 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90021bb8:	e75b      	b.n	90021a72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90021bba:	4638      	mov	r0, r7
90021bbc:	f7fc f83c 	bl	9001dc38 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90021bc0:	b950      	cbnz	r0, 90021bd8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
90021bc2:	f8da 3000 	ldr.w	r3, [sl]
90021bc6:	aa02      	add	r2, sp, #8
90021bc8:	4629      	mov	r1, r5
90021bca:	e9cd 6000 	strd	r6, r0, [sp]
90021bce:	4650      	mov	r0, sl
90021bd0:	68de      	ldr	r6, [r3, #12]
90021bd2:	4623      	mov	r3, r4
90021bd4:	47b0      	blx	r6
90021bd6:	e74c      	b.n	90021a72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90021bd8:	f10d 0818 	add.w	r8, sp, #24
90021bdc:	4639      	mov	r1, r7
90021bde:	af04      	add	r7, sp, #16
90021be0:	4640      	mov	r0, r8
90021be2:	f7fb ffdd 	bl	9001dba0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90021be6:	e898 0003 	ldmia.w	r8, {r0, r1}
90021bea:	e887 0003 	stmia.w	r7, {r0, r1}
90021bee:	4638      	mov	r0, r7
90021bf0:	4621      	mov	r1, r4
90021bf2:	f7f3 fae3 	bl	900151bc <_ZN8touchgfx4RectaNERKS0_>
90021bf6:	4638      	mov	r0, r7
90021bf8:	f7f3 fb23 	bl	90015242 <_ZNK8touchgfx4Rect7isEmptyEv>
90021bfc:	b138      	cbz	r0, 90021c0e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
90021bfe:	4623      	mov	r3, r4
90021c00:	9600      	str	r6, [sp, #0]
90021c02:	aa02      	add	r2, sp, #8
90021c04:	4649      	mov	r1, r9
90021c06:	4628      	mov	r0, r5
90021c08:	f7ff fdca 	bl	900217a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90021c0c:	e731      	b.n	90021a72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90021c0e:	f8da 3000 	ldr.w	r3, [sl]
90021c12:	aa02      	add	r2, sp, #8
90021c14:	4629      	mov	r1, r5
90021c16:	e9cd 6000 	strd	r6, r0, [sp]
90021c1a:	4650      	mov	r0, sl
90021c1c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90021c20:	463b      	mov	r3, r7
90021c22:	47d8      	blx	fp
90021c24:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021c28:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90021c2c:	4293      	cmp	r3, r2
90021c2e:	dd13      	ble.n	90021c58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
90021c30:	f9b4 0000 	ldrsh.w	r0, [r4]
90021c34:	1a9b      	subs	r3, r3, r2
90021c36:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90021c3a:	f8ad 0018 	strh.w	r0, [sp, #24]
90021c3e:	4628      	mov	r0, r5
90021c40:	f8ad 201a 	strh.w	r2, [sp, #26]
90021c44:	aa02      	add	r2, sp, #8
90021c46:	f8ad 101c 	strh.w	r1, [sp, #28]
90021c4a:	4649      	mov	r1, r9
90021c4c:	f8ad 301e 	strh.w	r3, [sp, #30]
90021c50:	4643      	mov	r3, r8
90021c52:	9600      	str	r6, [sp, #0]
90021c54:	f7ff fda4 	bl	900217a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90021c58:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90021c5c:	f9b4 2000 	ldrsh.w	r2, [r4]
90021c60:	4293      	cmp	r3, r2
90021c62:	dd13      	ble.n	90021c8c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
90021c64:	1a9b      	subs	r3, r3, r2
90021c66:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90021c6a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90021c6e:	f8ad 2018 	strh.w	r2, [sp, #24]
90021c72:	aa02      	add	r2, sp, #8
90021c74:	f8ad 001a 	strh.w	r0, [sp, #26]
90021c78:	4628      	mov	r0, r5
90021c7a:	f8ad 301c 	strh.w	r3, [sp, #28]
90021c7e:	4643      	mov	r3, r8
90021c80:	f8ad 101e 	strh.w	r1, [sp, #30]
90021c84:	4649      	mov	r1, r9
90021c86:	9600      	str	r6, [sp, #0]
90021c88:	f7ff fd8a 	bl	900217a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90021c8c:	88a2      	ldrh	r2, [r4, #4]
90021c8e:	8823      	ldrh	r3, [r4, #0]
90021c90:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90021c94:	4413      	add	r3, r2
90021c96:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90021c9a:	440a      	add	r2, r1
90021c9c:	b29b      	uxth	r3, r3
90021c9e:	b292      	uxth	r2, r2
90021ca0:	b218      	sxth	r0, r3
90021ca2:	b211      	sxth	r1, r2
90021ca4:	4288      	cmp	r0, r1
90021ca6:	dd13      	ble.n	90021cd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
90021ca8:	1a9b      	subs	r3, r3, r2
90021caa:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90021cae:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90021cb2:	aa02      	add	r2, sp, #8
90021cb4:	f8ad 1018 	strh.w	r1, [sp, #24]
90021cb8:	4649      	mov	r1, r9
90021cba:	f8ad 301c 	strh.w	r3, [sp, #28]
90021cbe:	4643      	mov	r3, r8
90021cc0:	f8ad 001e 	strh.w	r0, [sp, #30]
90021cc4:	4628      	mov	r0, r5
90021cc6:	9600      	str	r6, [sp, #0]
90021cc8:	f8ad 701a 	strh.w	r7, [sp, #26]
90021ccc:	f7ff fd68 	bl	900217a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90021cd0:	88e2      	ldrh	r2, [r4, #6]
90021cd2:	8863      	ldrh	r3, [r4, #2]
90021cd4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90021cd8:	4413      	add	r3, r2
90021cda:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90021cde:	440a      	add	r2, r1
90021ce0:	b29b      	uxth	r3, r3
90021ce2:	b292      	uxth	r2, r2
90021ce4:	b218      	sxth	r0, r3
90021ce6:	b211      	sxth	r1, r2
90021ce8:	4288      	cmp	r0, r1
90021cea:	f77f aec2 	ble.w	90021a72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90021cee:	f9b4 7000 	ldrsh.w	r7, [r4]
90021cf2:	1a9b      	subs	r3, r3, r2
90021cf4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90021cf8:	f8ad 301e 	strh.w	r3, [sp, #30]
90021cfc:	4643      	mov	r3, r8
90021cfe:	f8ad 7018 	strh.w	r7, [sp, #24]
90021d02:	f8ad 101a 	strh.w	r1, [sp, #26]
90021d06:	f8ad 001c 	strh.w	r0, [sp, #28]
90021d0a:	9600      	str	r6, [sp, #0]
90021d0c:	e779      	b.n	90021c02 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
90021d0e:	bf00      	nop
90021d10:	24028e2c 	.word	0x24028e2c

90021d14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90021d14:	b180      	cbz	r0, 90021d38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90021d16:	2903      	cmp	r1, #3
90021d18:	d81c      	bhi.n	90021d54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90021d1a:	e8df f001 	tbb	[pc, r1]
90021d1e:	1d02      	.short	0x1d02
90021d20:	1f08      	.short	0x1f08
90021d22:	4b10      	ldr	r3, [pc, #64]	; (90021d64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90021d24:	8818      	ldrh	r0, [r3, #0]
90021d26:	f3c0 000e 	ubfx	r0, r0, #0, #15
90021d2a:	4240      	negs	r0, r0
90021d2c:	4770      	bx	lr
90021d2e:	4b0d      	ldr	r3, [pc, #52]	; (90021d64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90021d30:	8818      	ldrh	r0, [r3, #0]
90021d32:	f3c0 000e 	ubfx	r0, r0, #0, #15
90021d36:	4770      	bx	lr
90021d38:	2903      	cmp	r1, #3
90021d3a:	d80b      	bhi.n	90021d54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90021d3c:	a301      	add	r3, pc, #4	; (adr r3, 90021d44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90021d3e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90021d42:	bf00      	nop
90021d44:	90021d59 	.word	0x90021d59
90021d48:	90021d2f 	.word	0x90021d2f
90021d4c:	90021d5d 	.word	0x90021d5d
90021d50:	90021d23 	.word	0x90021d23
90021d54:	2000      	movs	r0, #0
90021d56:	4770      	bx	lr
90021d58:	2001      	movs	r0, #1
90021d5a:	4770      	bx	lr
90021d5c:	f04f 30ff 	mov.w	r0, #4294967295
90021d60:	4770      	bx	lr
90021d62:	bf00      	nop
90021d64:	24028e26 	.word	0x24028e26

90021d68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90021d68:	b180      	cbz	r0, 90021d8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90021d6a:	2903      	cmp	r1, #3
90021d6c:	d81c      	bhi.n	90021da8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90021d6e:	e8df f001 	tbb	[pc, r1]
90021d72:	021d      	.short	0x021d
90021d74:	071f      	.short	0x071f
90021d76:	4b10      	ldr	r3, [pc, #64]	; (90021db8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90021d78:	8818      	ldrh	r0, [r3, #0]
90021d7a:	f3c0 000e 	ubfx	r0, r0, #0, #15
90021d7e:	4770      	bx	lr
90021d80:	4b0d      	ldr	r3, [pc, #52]	; (90021db8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90021d82:	8818      	ldrh	r0, [r3, #0]
90021d84:	f3c0 000e 	ubfx	r0, r0, #0, #15
90021d88:	4240      	negs	r0, r0
90021d8a:	4770      	bx	lr
90021d8c:	2903      	cmp	r1, #3
90021d8e:	d80b      	bhi.n	90021da8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90021d90:	a301      	add	r3, pc, #4	; (adr r3, 90021d98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90021d92:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90021d96:	bf00      	nop
90021d98:	90021d77 	.word	0x90021d77
90021d9c:	90021db1 	.word	0x90021db1
90021da0:	90021d81 	.word	0x90021d81
90021da4:	90021dad 	.word	0x90021dad
90021da8:	2000      	movs	r0, #0
90021daa:	4770      	bx	lr
90021dac:	2001      	movs	r0, #1
90021dae:	4770      	bx	lr
90021db0:	f04f 30ff 	mov.w	r0, #4294967295
90021db4:	4770      	bx	lr
90021db6:	bf00      	nop
90021db8:	24028e26 	.word	0x24028e26

90021dbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90021dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021dc0:	b099      	sub	sp, #100	; 0x64
90021dc2:	910b      	str	r1, [sp, #44]	; 0x2c
90021dc4:	a914      	add	r1, sp, #80	; 0x50
90021dc6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
90021dca:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
90021dce:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
90021dd2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
90021dd6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
90021dda:	e881 000c 	stmia.w	r1, {r2, r3}
90021dde:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
90021de2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
90021de6:	9309      	str	r3, [sp, #36]	; 0x24
90021de8:	f891 900d 	ldrb.w	r9, [r1, #13]
90021dec:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90021df0:	ea4f 1749 	mov.w	r7, r9, lsl #5
90021df4:	9310      	str	r3, [sp, #64]	; 0x40
90021df6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
90021dfa:	930c      	str	r3, [sp, #48]	; 0x30
90021dfc:	f407 7380 	and.w	r3, r7, #256	; 0x100
90021e00:	798f      	ldrb	r7, [r1, #6]
90021e02:	431f      	orrs	r7, r3
90021e04:	f000 8195 	beq.w	90022132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021e08:	ea4f 1909 	mov.w	r9, r9, lsl #4
90021e0c:	f409 7380 	and.w	r3, r9, #256	; 0x100
90021e10:	f891 9007 	ldrb.w	r9, [r1, #7]
90021e14:	ea59 0903 	orrs.w	r9, r9, r3
90021e18:	f000 818b 	beq.w	90022132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021e1c:	f991 3009 	ldrsb.w	r3, [r1, #9]
90021e20:	b29b      	uxth	r3, r3
90021e22:	2d00      	cmp	r5, #0
90021e24:	f000 812e 	beq.w	90022084 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
90021e28:	1aed      	subs	r5, r5, r3
90021e2a:	b2ad      	uxth	r5, r5
90021e2c:	042b      	lsls	r3, r5, #16
90021e2e:	d502      	bpl.n	90021e36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90021e30:	1b64      	subs	r4, r4, r5
90021e32:	2500      	movs	r5, #0
90021e34:	b224      	sxth	r4, r4
90021e36:	f9b2 1000 	ldrsh.w	r1, [r2]
90021e3a:	a814      	add	r0, sp, #80	; 0x50
90021e3c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90021e40:	428c      	cmp	r4, r1
90021e42:	b28b      	uxth	r3, r1
90021e44:	bfbf      	itttt	lt
90021e46:	18ed      	addlt	r5, r5, r3
90021e48:	1b2c      	sublt	r4, r5, r4
90021e4a:	b2a5      	uxthlt	r5, r4
90021e4c:	460c      	movlt	r4, r1
90021e4e:	8891      	ldrh	r1, [r2, #4]
90021e50:	440b      	add	r3, r1
90021e52:	4621      	mov	r1, r4
90021e54:	b21b      	sxth	r3, r3
90021e56:	930f      	str	r3, [sp, #60]	; 0x3c
90021e58:	88d3      	ldrh	r3, [r2, #6]
90021e5a:	8852      	ldrh	r2, [r2, #2]
90021e5c:	4413      	add	r3, r2
90021e5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90021e60:	b21b      	sxth	r3, r3
90021e62:	930d      	str	r3, [sp, #52]	; 0x34
90021e64:	4bbd      	ldr	r3, [pc, #756]	; (9002215c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
90021e66:	f893 b000 	ldrb.w	fp, [r3]
90021e6a:	f10b 3cff 	add.w	ip, fp, #4294967295
90021e6e:	f1dc 0300 	rsbs	r3, ip, #0
90021e72:	eb43 030c 	adc.w	r3, r3, ip
90021e76:	930e      	str	r3, [sp, #56]	; 0x38
90021e78:	4653      	mov	r3, sl
90021e7a:	f7f8 fc7f 	bl	9001a77c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90021e7e:	4621      	mov	r1, r4
90021e80:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
90021e84:	4653      	mov	r3, sl
90021e86:	9a09      	ldr	r2, [sp, #36]	; 0x24
90021e88:	a814      	add	r0, sp, #80	; 0x50
90021e8a:	f7f8 fc94 	bl	9001a7b6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90021e8e:	a918      	add	r1, sp, #96	; 0x60
90021e90:	f821 0d02 	strh.w	r0, [r1, #-2]!
90021e94:	a817      	add	r0, sp, #92	; 0x5c
90021e96:	f7f8 fdb5 	bl	9001aa04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90021e9a:	f1ba 0f00 	cmp.w	sl, #0
90021e9e:	f040 80f4 	bne.w	9002208a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
90021ea2:	f1bb 0f01 	cmp.w	fp, #1
90021ea6:	f040 80f8 	bne.w	9002209a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
90021eaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021eac:	2b00      	cmp	r3, #0
90021eae:	f040 8145 	bne.w	9002213c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
90021eb2:	b2ba      	uxth	r2, r7
90021eb4:	b905      	cbnz	r5, 90021eb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
90021eb6:	b16e      	cbz	r6, 90021ed4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
90021eb8:	fb06 5302 	mla	r3, r6, r2, r5
90021ebc:	9828      	ldr	r0, [sp, #160]	; 0xa0
90021ebe:	4631      	mov	r1, r6
90021ec0:	fb08 f303 	mul.w	r3, r8, r3
90021ec4:	f003 0607 	and.w	r6, r3, #7
90021ec8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
90021ecc:	9328      	str	r3, [sp, #160]	; 0xa0
90021ece:	eba9 0301 	sub.w	r3, r9, r1
90021ed2:	930a      	str	r3, [sp, #40]	; 0x28
90021ed4:	4651      	mov	r1, sl
90021ed6:	980e      	ldr	r0, [sp, #56]	; 0x38
90021ed8:	f7ff ff1c 	bl	90021d14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90021edc:	4681      	mov	r9, r0
90021ede:	980e      	ldr	r0, [sp, #56]	; 0x38
90021ee0:	f7ff ff42 	bl	90021d68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90021ee4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90021ee6:	9909      	ldr	r1, [sp, #36]	; 0x24
90021ee8:	4683      	mov	fp, r0
90021eea:	eba3 0a01 	sub.w	sl, r3, r1
90021eee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021ef0:	459a      	cmp	sl, r3
90021ef2:	bfa8      	it	ge
90021ef4:	469a      	movge	sl, r3
90021ef6:	f1ba 0f00 	cmp.w	sl, #0
90021efa:	f340 811a 	ble.w	90022132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021efe:	1b64      	subs	r4, r4, r5
90021f00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021f02:	1b1c      	subs	r4, r3, r4
90021f04:	42bc      	cmp	r4, r7
90021f06:	bfd4      	ite	le
90021f08:	ebc5 0504 	rsble	r5, r5, r4
90021f0c:	ebc5 0507 	rsbgt	r5, r5, r7
90021f10:	2d00      	cmp	r5, #0
90021f12:	f340 810e 	ble.w	90022132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021f16:	1b52      	subs	r2, r2, r5
90021f18:	fb08 f302 	mul.w	r3, r8, r2
90021f1c:	930f      	str	r3, [sp, #60]	; 0x3c
90021f1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021f20:	2b00      	cmp	r3, #0
90021f22:	f040 8116 	bne.w	90022152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
90021f26:	4b8e      	ldr	r3, [pc, #568]	; (90022160 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
90021f28:	6818      	ldr	r0, [r3, #0]
90021f2a:	6803      	ldr	r3, [r0, #0]
90021f2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90021f2e:	4798      	blx	r3
90021f30:	2301      	movs	r3, #1
90021f32:	4a8c      	ldr	r2, [pc, #560]	; (90022164 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
90021f34:	fa03 f308 	lsl.w	r3, r3, r8
90021f38:	8811      	ldrh	r1, [r2, #0]
90021f3a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
90021f3e:	3b01      	subs	r3, #1
90021f40:	b2db      	uxtb	r3, r3
90021f42:	930e      	str	r3, [sp, #56]	; 0x38
90021f44:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
90021f48:	fb01 2303 	mla	r3, r1, r3, r2
90021f4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90021f50:	930a      	str	r3, [sp, #40]	; 0x28
90021f52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021f54:	f3c3 4307 	ubfx	r3, r3, #16, #8
90021f58:	9313      	str	r3, [sp, #76]	; 0x4c
90021f5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021f5c:	0a19      	lsrs	r1, r3, #8
90021f5e:	b2cb      	uxtb	r3, r1
90021f60:	9312      	str	r3, [sp, #72]	; 0x48
90021f62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021f64:	b2db      	uxtb	r3, r3
90021f66:	9311      	str	r3, [sp, #68]	; 0x44
90021f68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021f6a:	095a      	lsrs	r2, r3, #5
90021f6c:	4b7e      	ldr	r3, [pc, #504]	; (90022168 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
90021f6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021f72:	400b      	ands	r3, r1
90021f74:	4313      	orrs	r3, r2
90021f76:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90021f78:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90021f7c:	4313      	orrs	r3, r2
90021f7e:	b29b      	uxth	r3, r3
90021f80:	9310      	str	r3, [sp, #64]	; 0x40
90021f82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021f84:	781a      	ldrb	r2, [r3, #0]
90021f86:	ea4f 0349 	mov.w	r3, r9, lsl #1
90021f8a:	fb05 b919 	mls	r9, r5, r9, fp
90021f8e:	4132      	asrs	r2, r6
90021f90:	fb03 fb05 	mul.w	fp, r3, r5
90021f94:	930d      	str	r3, [sp, #52]	; 0x34
90021f96:	b2d2      	uxtb	r2, r2
90021f98:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
90021f9c:	f11a 3aff 	adds.w	sl, sl, #4294967295
90021fa0:	f0c0 80f5 	bcc.w	9002218e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
90021fa4:	46ae      	mov	lr, r5
90021fa6:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
90021faa:	f11e 3eff 	adds.w	lr, lr, #4294967295
90021fae:	f0c0 80dd 	bcc.w	9002216c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
90021fb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021fb4:	4013      	ands	r3, r2
90021fb6:	d055      	beq.n	90022064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
90021fb8:	20ff      	movs	r0, #255	; 0xff
90021fba:	990e      	ldr	r1, [sp, #56]	; 0x38
90021fbc:	fb90 f1f1 	sdiv	r1, r0, r1
90021fc0:	434b      	muls	r3, r1
90021fc2:	2bfe      	cmp	r3, #254	; 0xfe
90021fc4:	dd03      	ble.n	90021fce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
90021fc6:	990c      	ldr	r1, [sp, #48]	; 0x30
90021fc8:	4281      	cmp	r1, r0
90021fca:	f000 80c4 	beq.w	90022156 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
90021fce:	990c      	ldr	r1, [sp, #48]	; 0x30
90021fd0:	f8bc 4000 	ldrh.w	r4, [ip]
90021fd4:	fb11 f303 	smulbb	r3, r1, r3
90021fd8:	1220      	asrs	r0, r4, #8
90021fda:	b29b      	uxth	r3, r3
90021fdc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90021fe0:	1c59      	adds	r1, r3, #1
90021fe2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
90021fe6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90021fea:	10e1      	asrs	r1, r4, #3
90021fec:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021ff0:	00e4      	lsls	r4, r4, #3
90021ff2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90021ff6:	b29f      	uxth	r7, r3
90021ff8:	43db      	mvns	r3, r3
90021ffa:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90021ffe:	b2db      	uxtb	r3, r3
90022000:	b2e4      	uxtb	r4, r4
90022002:	9309      	str	r3, [sp, #36]	; 0x24
90022004:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90022006:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002200a:	fb13 f907 	smulbb	r9, r3, r7
9002200e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022010:	fb00 9003 	mla	r0, r0, r3, r9
90022014:	9b12      	ldr	r3, [sp, #72]	; 0x48
90022016:	fb13 f907 	smulbb	r9, r3, r7
9002201a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002201c:	b280      	uxth	r0, r0
9002201e:	fb01 9103 	mla	r1, r1, r3, r9
90022022:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022024:	fb13 f707 	smulbb	r7, r3, r7
90022028:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002202a:	b289      	uxth	r1, r1
9002202c:	fb04 7403 	mla	r4, r4, r3, r7
90022030:	1c43      	adds	r3, r0, #1
90022032:	b2a4      	uxth	r4, r4
90022034:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90022038:	f104 0901 	add.w	r9, r4, #1
9002203c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90022040:	eb09 2914 	add.w	r9, r9, r4, lsr #8
90022044:	f3c9 29c4 	ubfx	r9, r9, #11, #5
90022048:	ea49 0000 	orr.w	r0, r9, r0
9002204c:	f101 0901 	add.w	r9, r1, #1
90022050:	eb09 2911 	add.w	r9, r9, r1, lsr #8
90022054:	ea4f 1959 	mov.w	r9, r9, lsr #5
90022058:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002205c:	ea40 0009 	orr.w	r0, r0, r9
90022060:	f8ac 0000 	strh.w	r0, [ip]
90022064:	4446      	add	r6, r8
90022066:	b2b6      	uxth	r6, r6
90022068:	2e07      	cmp	r6, #7
9002206a:	bf89      	itett	hi
9002206c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
9002206e:	fa42 f208 	asrls.w	r2, r2, r8
90022072:	2600      	movhi	r6, #0
90022074:	785a      	ldrbhi	r2, [r3, #1]
90022076:	bf8a      	itet	hi
90022078:	3301      	addhi	r3, #1
9002207a:	b2d2      	uxtbls	r2, r2
9002207c:	9328      	strhi	r3, [sp, #160]	; 0xa0
9002207e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90022080:	449c      	add	ip, r3
90022082:	e792      	b.n	90021faa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
90022084:	441c      	add	r4, r3
90022086:	b224      	sxth	r4, r4
90022088:	e6d5      	b.n	90021e36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9002208a:	f1ba 0f01 	cmp.w	sl, #1
9002208e:	f47f af0c 	bne.w	90021eaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022092:	f1bb 0f01 	cmp.w	fp, #1
90022096:	f47f af08 	bne.w	90021eaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002209a:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 90022160 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9002209e:	f8db 0000 	ldr.w	r0, [fp]
900220a2:	6803      	ldr	r3, [r0, #0]
900220a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900220a6:	4798      	blx	r3
900220a8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
900220ac:	465a      	mov	r2, fp
900220ae:	d006      	beq.n	900220be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
900220b0:	f1b8 0f04 	cmp.w	r8, #4
900220b4:	d140      	bne.n	90022138 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
900220b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
900220b8:	3300      	adds	r3, #0
900220ba:	bf18      	it	ne
900220bc:	2301      	movne	r3, #1
900220be:	0580      	lsls	r0, r0, #22
900220c0:	d56e      	bpl.n	900221a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
900220c2:	f1b8 0f08 	cmp.w	r8, #8
900220c6:	d16b      	bne.n	900221a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
900220c8:	2b00      	cmp	r3, #0
900220ca:	bf0c      	ite	eq
900220cc:	f44f 7100 	moveq.w	r1, #512	; 0x200
900220d0:	f44f 7180 	movne.w	r1, #256	; 0x100
900220d4:	2d00      	cmp	r5, #0
900220d6:	f47f aee8 	bne.w	90021eaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900220da:	2e00      	cmp	r6, #0
900220dc:	f47f aee5 	bne.w	90021eaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900220e0:	19e3      	adds	r3, r4, r7
900220e2:	980f      	ldr	r0, [sp, #60]	; 0x3c
900220e4:	4283      	cmp	r3, r0
900220e6:	f73f aee0 	bgt.w	90021eaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900220ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
900220ec:	980d      	ldr	r0, [sp, #52]	; 0x34
900220ee:	444b      	add	r3, r9
900220f0:	4283      	cmp	r3, r0
900220f2:	f73f aeda 	bgt.w	90021eaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900220f6:	b2bf      	uxth	r7, r7
900220f8:	f1b8 0f08 	cmp.w	r8, #8
900220fc:	6810      	ldr	r0, [r2, #0]
900220fe:	f04f 0500 	mov.w	r5, #0
90022102:	bf18      	it	ne
90022104:	3701      	addne	r7, #1
90022106:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
9002210a:	6804      	ldr	r4, [r0, #0]
9002210c:	bf18      	it	ne
9002210e:	f027 0701 	bicne.w	r7, r7, #1
90022112:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
90022116:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002211a:	990c      	ldr	r1, [sp, #48]	; 0x30
9002211c:	bf18      	it	ne
9002211e:	b2bf      	uxthne	r7, r7
90022120:	9104      	str	r1, [sp, #16]
90022122:	992a      	ldr	r1, [sp, #168]	; 0xa8
90022124:	e9cd 7900 	strd	r7, r9, [sp]
90022128:	e9cd 7102 	strd	r7, r1, [sp, #8]
9002212c:	9928      	ldr	r1, [sp, #160]	; 0xa0
9002212e:	6d64      	ldr	r4, [r4, #84]	; 0x54
90022130:	47a0      	blx	r4
90022132:	b019      	add	sp, #100	; 0x64
90022134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022138:	2300      	movs	r3, #0
9002213a:	e7c0      	b.n	900220be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9002213c:	2208      	movs	r2, #8
9002213e:	fb92 f3f8 	sdiv	r3, r2, r8
90022142:	1e5a      	subs	r2, r3, #1
90022144:	443a      	add	r2, r7
90022146:	fb92 f2f3 	sdiv	r2, r2, r3
9002214a:	fb12 f203 	smulbb	r2, r2, r3
9002214e:	b292      	uxth	r2, r2
90022150:	e6b0      	b.n	90021eb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90022152:	980b      	ldr	r0, [sp, #44]	; 0x2c
90022154:	e6ec      	b.n	90021f30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
90022156:	9810      	ldr	r0, [sp, #64]	; 0x40
90022158:	e782      	b.n	90022060 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9002215a:	bf00      	nop
9002215c:	24028e24 	.word	0x24028e24
90022160:	24028e2c 	.word	0x24028e2c
90022164:	24028e26 	.word	0x24028e26
90022168:	00fff800 	.word	0x00fff800
9002216c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002216e:	b153      	cbz	r3, 90022186 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
90022170:	441e      	add	r6, r3
90022172:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022174:	b2b6      	uxth	r6, r6
90022176:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9002217a:	f006 0607 	and.w	r6, r6, #7
9002217e:	781a      	ldrb	r2, [r3, #0]
90022180:	9328      	str	r3, [sp, #160]	; 0xa0
90022182:	4132      	asrs	r2, r6
90022184:	b2d2      	uxtb	r2, r2
90022186:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022188:	445b      	add	r3, fp
9002218a:	930a      	str	r3, [sp, #40]	; 0x28
9002218c:	e706      	b.n	90021f9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9002218e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022190:	2b00      	cmp	r3, #0
90022192:	d1ce      	bne.n	90022132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022194:	4b05      	ldr	r3, [pc, #20]	; (900221ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
90022196:	6818      	ldr	r0, [r3, #0]
90022198:	6803      	ldr	r3, [r0, #0]
9002219a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002219c:	4798      	blx	r3
9002219e:	e7c8      	b.n	90022132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900221a0:	2b00      	cmp	r3, #0
900221a2:	f43f ae82 	beq.w	90021eaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900221a6:	f44f 7180 	mov.w	r1, #256	; 0x100
900221aa:	e793      	b.n	900220d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
900221ac:	24028e2c 	.word	0x24028e2c

900221b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
900221b0:	b538      	push	{r3, r4, r5, lr}
900221b2:	4c15      	ldr	r4, [pc, #84]	; (90022208 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
900221b4:	4605      	mov	r5, r0
900221b6:	7823      	ldrb	r3, [r4, #0]
900221b8:	f3bf 8f5b 	dmb	ish
900221bc:	07da      	lsls	r2, r3, #31
900221be:	d40b      	bmi.n	900221d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
900221c0:	4620      	mov	r0, r4
900221c2:	f009 f92a 	bl	9002b41a <__cxa_guard_acquire>
900221c6:	b138      	cbz	r0, 900221d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
900221c8:	4620      	mov	r0, r4
900221ca:	f009 f932 	bl	9002b432 <__cxa_guard_release>
900221ce:	4a0f      	ldr	r2, [pc, #60]	; (9002220c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900221d0:	490f      	ldr	r1, [pc, #60]	; (90022210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
900221d2:	4810      	ldr	r0, [pc, #64]	; (90022214 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900221d4:	f009 f91a 	bl	9002b40c <__aeabi_atexit>
900221d8:	4c0f      	ldr	r4, [pc, #60]	; (90022218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
900221da:	7823      	ldrb	r3, [r4, #0]
900221dc:	f3bf 8f5b 	dmb	ish
900221e0:	07db      	lsls	r3, r3, #31
900221e2:	d40b      	bmi.n	900221fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900221e4:	4620      	mov	r0, r4
900221e6:	f009 f918 	bl	9002b41a <__cxa_guard_acquire>
900221ea:	b138      	cbz	r0, 900221fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900221ec:	4620      	mov	r0, r4
900221ee:	f009 f920 	bl	9002b432 <__cxa_guard_release>
900221f2:	4a06      	ldr	r2, [pc, #24]	; (9002220c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900221f4:	4909      	ldr	r1, [pc, #36]	; (9002221c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
900221f6:	480a      	ldr	r0, [pc, #40]	; (90022220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
900221f8:	f009 f908 	bl	9002b40c <__aeabi_atexit>
900221fc:	4b05      	ldr	r3, [pc, #20]	; (90022214 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900221fe:	612b      	str	r3, [r5, #16]
90022200:	4b07      	ldr	r3, [pc, #28]	; (90022220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90022202:	616b      	str	r3, [r5, #20]
90022204:	bd38      	pop	{r3, r4, r5, pc}
90022206:	bf00      	nop
90022208:	24028f00 	.word	0x24028f00
9002220c:	24000000 	.word	0x24000000
90022210:	900203bd 	.word	0x900203bd
90022214:	240000ac 	.word	0x240000ac
90022218:	24028f04 	.word	0x24028f04
9002221c:	900203bb 	.word	0x900203bb
90022220:	240000b0 	.word	0x240000b0

90022224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90022224:	b538      	push	{r3, r4, r5, lr}
90022226:	4c15      	ldr	r4, [pc, #84]	; (9002227c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
90022228:	4605      	mov	r5, r0
9002222a:	7823      	ldrb	r3, [r4, #0]
9002222c:	f3bf 8f5b 	dmb	ish
90022230:	07da      	lsls	r2, r3, #31
90022232:	d40b      	bmi.n	9002224c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90022234:	4620      	mov	r0, r4
90022236:	f009 f8f0 	bl	9002b41a <__cxa_guard_acquire>
9002223a:	b138      	cbz	r0, 9002224c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9002223c:	4620      	mov	r0, r4
9002223e:	f009 f8f8 	bl	9002b432 <__cxa_guard_release>
90022242:	4a0f      	ldr	r2, [pc, #60]	; (90022280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90022244:	490f      	ldr	r1, [pc, #60]	; (90022284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
90022246:	4810      	ldr	r0, [pc, #64]	; (90022288 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90022248:	f009 f8e0 	bl	9002b40c <__aeabi_atexit>
9002224c:	4c0f      	ldr	r4, [pc, #60]	; (9002228c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9002224e:	7823      	ldrb	r3, [r4, #0]
90022250:	f3bf 8f5b 	dmb	ish
90022254:	07db      	lsls	r3, r3, #31
90022256:	d40b      	bmi.n	90022270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90022258:	4620      	mov	r0, r4
9002225a:	f009 f8de 	bl	9002b41a <__cxa_guard_acquire>
9002225e:	b138      	cbz	r0, 90022270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90022260:	4620      	mov	r0, r4
90022262:	f009 f8e6 	bl	9002b432 <__cxa_guard_release>
90022266:	4a06      	ldr	r2, [pc, #24]	; (90022280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90022268:	4909      	ldr	r1, [pc, #36]	; (90022290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9002226a:	480a      	ldr	r0, [pc, #40]	; (90022294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9002226c:	f009 f8ce 	bl	9002b40c <__aeabi_atexit>
90022270:	4b05      	ldr	r3, [pc, #20]	; (90022288 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90022272:	60ab      	str	r3, [r5, #8]
90022274:	4b07      	ldr	r3, [pc, #28]	; (90022294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90022276:	60eb      	str	r3, [r5, #12]
90022278:	bd38      	pop	{r3, r4, r5, pc}
9002227a:	bf00      	nop
9002227c:	24028ed8 	.word	0x24028ed8
90022280:	24000000 	.word	0x24000000
90022284:	900203c1 	.word	0x900203c1
90022288:	24000084 	.word	0x24000084
9002228c:	24028edc 	.word	0x24028edc
90022290:	900203bf 	.word	0x900203bf
90022294:	24000088 	.word	0x24000088

90022298 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
90022298:	b510      	push	{r4, lr}
9002229a:	4604      	mov	r4, r0
9002229c:	f7ff ff88 	bl	900221b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
900222a0:	4620      	mov	r0, r4
900222a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900222a6:	f7ff bfbd 	b.w	90022224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

900222ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
900222ac:	b538      	push	{r3, r4, r5, lr}
900222ae:	4c15      	ldr	r4, [pc, #84]	; (90022304 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
900222b0:	4605      	mov	r5, r0
900222b2:	7823      	ldrb	r3, [r4, #0]
900222b4:	f3bf 8f5b 	dmb	ish
900222b8:	07da      	lsls	r2, r3, #31
900222ba:	d40b      	bmi.n	900222d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900222bc:	4620      	mov	r0, r4
900222be:	f009 f8ac 	bl	9002b41a <__cxa_guard_acquire>
900222c2:	b138      	cbz	r0, 900222d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900222c4:	4620      	mov	r0, r4
900222c6:	f009 f8b4 	bl	9002b432 <__cxa_guard_release>
900222ca:	4a0f      	ldr	r2, [pc, #60]	; (90022308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900222cc:	490f      	ldr	r1, [pc, #60]	; (9002230c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
900222ce:	4810      	ldr	r0, [pc, #64]	; (90022310 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900222d0:	f009 f89c 	bl	9002b40c <__aeabi_atexit>
900222d4:	4c0f      	ldr	r4, [pc, #60]	; (90022314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
900222d6:	7823      	ldrb	r3, [r4, #0]
900222d8:	f3bf 8f5b 	dmb	ish
900222dc:	07db      	lsls	r3, r3, #31
900222de:	d40b      	bmi.n	900222f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900222e0:	4620      	mov	r0, r4
900222e2:	f009 f89a 	bl	9002b41a <__cxa_guard_acquire>
900222e6:	b138      	cbz	r0, 900222f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900222e8:	4620      	mov	r0, r4
900222ea:	f009 f8a2 	bl	9002b432 <__cxa_guard_release>
900222ee:	4a06      	ldr	r2, [pc, #24]	; (90022308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900222f0:	4909      	ldr	r1, [pc, #36]	; (90022318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
900222f2:	480a      	ldr	r0, [pc, #40]	; (9002231c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900222f4:	f009 f88a 	bl	9002b40c <__aeabi_atexit>
900222f8:	4b05      	ldr	r3, [pc, #20]	; (90022310 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900222fa:	622b      	str	r3, [r5, #32]
900222fc:	4b07      	ldr	r3, [pc, #28]	; (9002231c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900222fe:	626b      	str	r3, [r5, #36]	; 0x24
90022300:	bd38      	pop	{r3, r4, r5, pc}
90022302:	bf00      	nop
90022304:	24028f08 	.word	0x24028f08
90022308:	24000000 	.word	0x24000000
9002230c:	900203b5 	.word	0x900203b5
90022310:	240000b4 	.word	0x240000b4
90022314:	24028f0c 	.word	0x24028f0c
90022318:	900203b3 	.word	0x900203b3
9002231c:	240000b8 	.word	0x240000b8

90022320 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90022320:	b538      	push	{r3, r4, r5, lr}
90022322:	4c15      	ldr	r4, [pc, #84]	; (90022378 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90022324:	4605      	mov	r5, r0
90022326:	7823      	ldrb	r3, [r4, #0]
90022328:	f3bf 8f5b 	dmb	ish
9002232c:	07da      	lsls	r2, r3, #31
9002232e:	d40b      	bmi.n	90022348 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90022330:	4620      	mov	r0, r4
90022332:	f009 f872 	bl	9002b41a <__cxa_guard_acquire>
90022336:	b138      	cbz	r0, 90022348 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90022338:	4620      	mov	r0, r4
9002233a:	f009 f87a 	bl	9002b432 <__cxa_guard_release>
9002233e:	4a0f      	ldr	r2, [pc, #60]	; (9002237c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90022340:	490f      	ldr	r1, [pc, #60]	; (90022380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90022342:	4810      	ldr	r0, [pc, #64]	; (90022384 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90022344:	f009 f862 	bl	9002b40c <__aeabi_atexit>
90022348:	4c0f      	ldr	r4, [pc, #60]	; (90022388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9002234a:	7823      	ldrb	r3, [r4, #0]
9002234c:	f3bf 8f5b 	dmb	ish
90022350:	07db      	lsls	r3, r3, #31
90022352:	d40b      	bmi.n	9002236c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90022354:	4620      	mov	r0, r4
90022356:	f009 f860 	bl	9002b41a <__cxa_guard_acquire>
9002235a:	b138      	cbz	r0, 9002236c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9002235c:	4620      	mov	r0, r4
9002235e:	f009 f868 	bl	9002b432 <__cxa_guard_release>
90022362:	4a06      	ldr	r2, [pc, #24]	; (9002237c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90022364:	4909      	ldr	r1, [pc, #36]	; (9002238c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
90022366:	480a      	ldr	r0, [pc, #40]	; (90022390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90022368:	f009 f850 	bl	9002b40c <__aeabi_atexit>
9002236c:	4b05      	ldr	r3, [pc, #20]	; (90022384 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9002236e:	61ab      	str	r3, [r5, #24]
90022370:	4b07      	ldr	r3, [pc, #28]	; (90022390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90022372:	61eb      	str	r3, [r5, #28]
90022374:	bd38      	pop	{r3, r4, r5, pc}
90022376:	bf00      	nop
90022378:	24028ee0 	.word	0x24028ee0
9002237c:	24000000 	.word	0x24000000
90022380:	900203b9 	.word	0x900203b9
90022384:	2400008c 	.word	0x2400008c
90022388:	24028ee4 	.word	0x24028ee4
9002238c:	900203b7 	.word	0x900203b7
90022390:	24000090 	.word	0x24000090

90022394 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90022394:	b510      	push	{r4, lr}
90022396:	4604      	mov	r4, r0
90022398:	f7ff ff88 	bl	900222ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9002239c:	4620      	mov	r0, r4
9002239e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900223a2:	f7ff bfbd 	b.w	90022320 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

900223a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
900223a8:	b538      	push	{r3, r4, r5, lr}
900223aa:	4c15      	ldr	r4, [pc, #84]	; (90022400 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
900223ac:	4605      	mov	r5, r0
900223ae:	7823      	ldrb	r3, [r4, #0]
900223b0:	f3bf 8f5b 	dmb	ish
900223b4:	07da      	lsls	r2, r3, #31
900223b6:	d40b      	bmi.n	900223d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900223b8:	4620      	mov	r0, r4
900223ba:	f009 f82e 	bl	9002b41a <__cxa_guard_acquire>
900223be:	b138      	cbz	r0, 900223d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900223c0:	4620      	mov	r0, r4
900223c2:	f009 f836 	bl	9002b432 <__cxa_guard_release>
900223c6:	4a0f      	ldr	r2, [pc, #60]	; (90022404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900223c8:	490f      	ldr	r1, [pc, #60]	; (90022408 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
900223ca:	4810      	ldr	r0, [pc, #64]	; (9002240c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900223cc:	f009 f81e 	bl	9002b40c <__aeabi_atexit>
900223d0:	4c0f      	ldr	r4, [pc, #60]	; (90022410 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
900223d2:	7823      	ldrb	r3, [r4, #0]
900223d4:	f3bf 8f5b 	dmb	ish
900223d8:	07db      	lsls	r3, r3, #31
900223da:	d40b      	bmi.n	900223f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900223dc:	4620      	mov	r0, r4
900223de:	f009 f81c 	bl	9002b41a <__cxa_guard_acquire>
900223e2:	b138      	cbz	r0, 900223f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900223e4:	4620      	mov	r0, r4
900223e6:	f009 f824 	bl	9002b432 <__cxa_guard_release>
900223ea:	4a06      	ldr	r2, [pc, #24]	; (90022404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900223ec:	4909      	ldr	r1, [pc, #36]	; (90022414 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
900223ee:	480a      	ldr	r0, [pc, #40]	; (90022418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900223f0:	f009 f80c 	bl	9002b40c <__aeabi_atexit>
900223f4:	4b05      	ldr	r3, [pc, #20]	; (9002240c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900223f6:	632b      	str	r3, [r5, #48]	; 0x30
900223f8:	4b07      	ldr	r3, [pc, #28]	; (90022418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900223fa:	636b      	str	r3, [r5, #52]	; 0x34
900223fc:	bd38      	pop	{r3, r4, r5, pc}
900223fe:	bf00      	nop
90022400:	24028f18 	.word	0x24028f18
90022404:	24000000 	.word	0x24000000
90022408:	900203ad 	.word	0x900203ad
9002240c:	240000c4 	.word	0x240000c4
90022410:	24028f1c 	.word	0x24028f1c
90022414:	900203ab 	.word	0x900203ab
90022418:	240000c8 	.word	0x240000c8

9002241c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9002241c:	b538      	push	{r3, r4, r5, lr}
9002241e:	4c15      	ldr	r4, [pc, #84]	; (90022474 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90022420:	4605      	mov	r5, r0
90022422:	7823      	ldrb	r3, [r4, #0]
90022424:	f3bf 8f5b 	dmb	ish
90022428:	07da      	lsls	r2, r3, #31
9002242a:	d40b      	bmi.n	90022444 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9002242c:	4620      	mov	r0, r4
9002242e:	f008 fff4 	bl	9002b41a <__cxa_guard_acquire>
90022432:	b138      	cbz	r0, 90022444 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90022434:	4620      	mov	r0, r4
90022436:	f008 fffc 	bl	9002b432 <__cxa_guard_release>
9002243a:	4a0f      	ldr	r2, [pc, #60]	; (90022478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9002243c:	490f      	ldr	r1, [pc, #60]	; (9002247c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9002243e:	4810      	ldr	r0, [pc, #64]	; (90022480 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90022440:	f008 ffe4 	bl	9002b40c <__aeabi_atexit>
90022444:	4c0f      	ldr	r4, [pc, #60]	; (90022484 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
90022446:	7823      	ldrb	r3, [r4, #0]
90022448:	f3bf 8f5b 	dmb	ish
9002244c:	07db      	lsls	r3, r3, #31
9002244e:	d40b      	bmi.n	90022468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90022450:	4620      	mov	r0, r4
90022452:	f008 ffe2 	bl	9002b41a <__cxa_guard_acquire>
90022456:	b138      	cbz	r0, 90022468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90022458:	4620      	mov	r0, r4
9002245a:	f008 ffea 	bl	9002b432 <__cxa_guard_release>
9002245e:	4a06      	ldr	r2, [pc, #24]	; (90022478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90022460:	4909      	ldr	r1, [pc, #36]	; (90022488 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90022462:	480a      	ldr	r0, [pc, #40]	; (9002248c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90022464:	f008 ffd2 	bl	9002b40c <__aeabi_atexit>
90022468:	4b05      	ldr	r3, [pc, #20]	; (90022480 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9002246a:	62ab      	str	r3, [r5, #40]	; 0x28
9002246c:	4b07      	ldr	r3, [pc, #28]	; (9002248c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9002246e:	62eb      	str	r3, [r5, #44]	; 0x2c
90022470:	bd38      	pop	{r3, r4, r5, pc}
90022472:	bf00      	nop
90022474:	24028ee8 	.word	0x24028ee8
90022478:	24000000 	.word	0x24000000
9002247c:	900203b1 	.word	0x900203b1
90022480:	24000094 	.word	0x24000094
90022484:	24028eec 	.word	0x24028eec
90022488:	900203af 	.word	0x900203af
9002248c:	24000098 	.word	0x24000098

90022490 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90022490:	b510      	push	{r4, lr}
90022492:	4604      	mov	r4, r0
90022494:	f7ff ff88 	bl	900223a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
90022498:	4620      	mov	r0, r4
9002249a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002249e:	f7ff bfbd 	b.w	9002241c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

900224a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
900224a4:	b538      	push	{r3, r4, r5, lr}
900224a6:	4c15      	ldr	r4, [pc, #84]	; (900224fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
900224a8:	4605      	mov	r5, r0
900224aa:	7823      	ldrb	r3, [r4, #0]
900224ac:	f3bf 8f5b 	dmb	ish
900224b0:	07da      	lsls	r2, r3, #31
900224b2:	d40b      	bmi.n	900224cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900224b4:	4620      	mov	r0, r4
900224b6:	f008 ffb0 	bl	9002b41a <__cxa_guard_acquire>
900224ba:	b138      	cbz	r0, 900224cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900224bc:	4620      	mov	r0, r4
900224be:	f008 ffb8 	bl	9002b432 <__cxa_guard_release>
900224c2:	4a0f      	ldr	r2, [pc, #60]	; (90022500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900224c4:	490f      	ldr	r1, [pc, #60]	; (90022504 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
900224c6:	4810      	ldr	r0, [pc, #64]	; (90022508 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900224c8:	f008 ffa0 	bl	9002b40c <__aeabi_atexit>
900224cc:	4c0f      	ldr	r4, [pc, #60]	; (9002250c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
900224ce:	7823      	ldrb	r3, [r4, #0]
900224d0:	f3bf 8f5b 	dmb	ish
900224d4:	07db      	lsls	r3, r3, #31
900224d6:	d40b      	bmi.n	900224f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900224d8:	4620      	mov	r0, r4
900224da:	f008 ff9e 	bl	9002b41a <__cxa_guard_acquire>
900224de:	b138      	cbz	r0, 900224f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900224e0:	4620      	mov	r0, r4
900224e2:	f008 ffa6 	bl	9002b432 <__cxa_guard_release>
900224e6:	4a06      	ldr	r2, [pc, #24]	; (90022500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900224e8:	4909      	ldr	r1, [pc, #36]	; (90022510 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
900224ea:	480a      	ldr	r0, [pc, #40]	; (90022514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
900224ec:	f008 ff8e 	bl	9002b40c <__aeabi_atexit>
900224f0:	4b05      	ldr	r3, [pc, #20]	; (90022508 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900224f2:	652b      	str	r3, [r5, #80]	; 0x50
900224f4:	4b07      	ldr	r3, [pc, #28]	; (90022514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
900224f6:	656b      	str	r3, [r5, #84]	; 0x54
900224f8:	bd38      	pop	{r3, r4, r5, pc}
900224fa:	bf00      	nop
900224fc:	24028f20 	.word	0x24028f20
90022500:	24000000 	.word	0x24000000
90022504:	9002039d 	.word	0x9002039d
90022508:	240000cc 	.word	0x240000cc
9002250c:	24028f24 	.word	0x24028f24
90022510:	9002039b 	.word	0x9002039b
90022514:	240000d0 	.word	0x240000d0

90022518 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
90022518:	b538      	push	{r3, r4, r5, lr}
9002251a:	4c15      	ldr	r4, [pc, #84]	; (90022570 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9002251c:	4605      	mov	r5, r0
9002251e:	7823      	ldrb	r3, [r4, #0]
90022520:	f3bf 8f5b 	dmb	ish
90022524:	07da      	lsls	r2, r3, #31
90022526:	d40b      	bmi.n	90022540 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90022528:	4620      	mov	r0, r4
9002252a:	f008 ff76 	bl	9002b41a <__cxa_guard_acquire>
9002252e:	b138      	cbz	r0, 90022540 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90022530:	4620      	mov	r0, r4
90022532:	f008 ff7e 	bl	9002b432 <__cxa_guard_release>
90022536:	4a0f      	ldr	r2, [pc, #60]	; (90022574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90022538:	490f      	ldr	r1, [pc, #60]	; (90022578 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9002253a:	4810      	ldr	r0, [pc, #64]	; (9002257c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9002253c:	f008 ff66 	bl	9002b40c <__aeabi_atexit>
90022540:	4c0f      	ldr	r4, [pc, #60]	; (90022580 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90022542:	7823      	ldrb	r3, [r4, #0]
90022544:	f3bf 8f5b 	dmb	ish
90022548:	07db      	lsls	r3, r3, #31
9002254a:	d40b      	bmi.n	90022564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9002254c:	4620      	mov	r0, r4
9002254e:	f008 ff64 	bl	9002b41a <__cxa_guard_acquire>
90022552:	b138      	cbz	r0, 90022564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90022554:	4620      	mov	r0, r4
90022556:	f008 ff6c 	bl	9002b432 <__cxa_guard_release>
9002255a:	4a06      	ldr	r2, [pc, #24]	; (90022574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9002255c:	4909      	ldr	r1, [pc, #36]	; (90022584 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9002255e:	480a      	ldr	r0, [pc, #40]	; (90022588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90022560:	f008 ff54 	bl	9002b40c <__aeabi_atexit>
90022564:	4b05      	ldr	r3, [pc, #20]	; (9002257c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90022566:	64ab      	str	r3, [r5, #72]	; 0x48
90022568:	4b07      	ldr	r3, [pc, #28]	; (90022588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9002256a:	64eb      	str	r3, [r5, #76]	; 0x4c
9002256c:	bd38      	pop	{r3, r4, r5, pc}
9002256e:	bf00      	nop
90022570:	24028f28 	.word	0x24028f28
90022574:	24000000 	.word	0x24000000
90022578:	900203a1 	.word	0x900203a1
9002257c:	240000d4 	.word	0x240000d4
90022580:	24028f2c 	.word	0x24028f2c
90022584:	9002039f 	.word	0x9002039f
90022588:	240000d8 	.word	0x240000d8

9002258c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9002258c:	b538      	push	{r3, r4, r5, lr}
9002258e:	4c15      	ldr	r4, [pc, #84]	; (900225e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90022590:	4605      	mov	r5, r0
90022592:	7823      	ldrb	r3, [r4, #0]
90022594:	f3bf 8f5b 	dmb	ish
90022598:	07da      	lsls	r2, r3, #31
9002259a:	d40b      	bmi.n	900225b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9002259c:	4620      	mov	r0, r4
9002259e:	f008 ff3c 	bl	9002b41a <__cxa_guard_acquire>
900225a2:	b138      	cbz	r0, 900225b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
900225a4:	4620      	mov	r0, r4
900225a6:	f008 ff44 	bl	9002b432 <__cxa_guard_release>
900225aa:	4a0f      	ldr	r2, [pc, #60]	; (900225e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900225ac:	490f      	ldr	r1, [pc, #60]	; (900225ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
900225ae:	4810      	ldr	r0, [pc, #64]	; (900225f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900225b0:	f008 ff2c 	bl	9002b40c <__aeabi_atexit>
900225b4:	4c0f      	ldr	r4, [pc, #60]	; (900225f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
900225b6:	7823      	ldrb	r3, [r4, #0]
900225b8:	f3bf 8f5b 	dmb	ish
900225bc:	07db      	lsls	r3, r3, #31
900225be:	d40b      	bmi.n	900225d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900225c0:	4620      	mov	r0, r4
900225c2:	f008 ff2a 	bl	9002b41a <__cxa_guard_acquire>
900225c6:	b138      	cbz	r0, 900225d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900225c8:	4620      	mov	r0, r4
900225ca:	f008 ff32 	bl	9002b432 <__cxa_guard_release>
900225ce:	4a06      	ldr	r2, [pc, #24]	; (900225e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900225d0:	4909      	ldr	r1, [pc, #36]	; (900225f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
900225d2:	480a      	ldr	r0, [pc, #40]	; (900225fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900225d4:	f008 ff1a 	bl	9002b40c <__aeabi_atexit>
900225d8:	4b05      	ldr	r3, [pc, #20]	; (900225f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900225da:	642b      	str	r3, [r5, #64]	; 0x40
900225dc:	4b07      	ldr	r3, [pc, #28]	; (900225fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900225de:	646b      	str	r3, [r5, #68]	; 0x44
900225e0:	bd38      	pop	{r3, r4, r5, pc}
900225e2:	bf00      	nop
900225e4:	24028ef0 	.word	0x24028ef0
900225e8:	24000000 	.word	0x24000000
900225ec:	900203a5 	.word	0x900203a5
900225f0:	2400009c 	.word	0x2400009c
900225f4:	24028ef4 	.word	0x24028ef4
900225f8:	900203a3 	.word	0x900203a3
900225fc:	240000a0 	.word	0x240000a0

90022600 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90022600:	b538      	push	{r3, r4, r5, lr}
90022602:	4c15      	ldr	r4, [pc, #84]	; (90022658 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90022604:	4605      	mov	r5, r0
90022606:	7823      	ldrb	r3, [r4, #0]
90022608:	f3bf 8f5b 	dmb	ish
9002260c:	07da      	lsls	r2, r3, #31
9002260e:	d40b      	bmi.n	90022628 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90022610:	4620      	mov	r0, r4
90022612:	f008 ff02 	bl	9002b41a <__cxa_guard_acquire>
90022616:	b138      	cbz	r0, 90022628 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90022618:	4620      	mov	r0, r4
9002261a:	f008 ff0a 	bl	9002b432 <__cxa_guard_release>
9002261e:	4a0f      	ldr	r2, [pc, #60]	; (9002265c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90022620:	490f      	ldr	r1, [pc, #60]	; (90022660 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90022622:	4810      	ldr	r0, [pc, #64]	; (90022664 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90022624:	f008 fef2 	bl	9002b40c <__aeabi_atexit>
90022628:	4c0f      	ldr	r4, [pc, #60]	; (90022668 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9002262a:	7823      	ldrb	r3, [r4, #0]
9002262c:	f3bf 8f5b 	dmb	ish
90022630:	07db      	lsls	r3, r3, #31
90022632:	d40b      	bmi.n	9002264c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90022634:	4620      	mov	r0, r4
90022636:	f008 fef0 	bl	9002b41a <__cxa_guard_acquire>
9002263a:	b138      	cbz	r0, 9002264c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9002263c:	4620      	mov	r0, r4
9002263e:	f008 fef8 	bl	9002b432 <__cxa_guard_release>
90022642:	4a06      	ldr	r2, [pc, #24]	; (9002265c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90022644:	4909      	ldr	r1, [pc, #36]	; (9002266c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
90022646:	480a      	ldr	r0, [pc, #40]	; (90022670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90022648:	f008 fee0 	bl	9002b40c <__aeabi_atexit>
9002264c:	4b05      	ldr	r3, [pc, #20]	; (90022664 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9002264e:	63ab      	str	r3, [r5, #56]	; 0x38
90022650:	4b07      	ldr	r3, [pc, #28]	; (90022670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90022652:	63eb      	str	r3, [r5, #60]	; 0x3c
90022654:	bd38      	pop	{r3, r4, r5, pc}
90022656:	bf00      	nop
90022658:	24028f10 	.word	0x24028f10
9002265c:	24000000 	.word	0x24000000
90022660:	900203a9 	.word	0x900203a9
90022664:	240000bc 	.word	0x240000bc
90022668:	24028f14 	.word	0x24028f14
9002266c:	900203a7 	.word	0x900203a7
90022670:	240000c0 	.word	0x240000c0

90022674 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90022674:	b510      	push	{r4, lr}
90022676:	4604      	mov	r4, r0
90022678:	f7ff ff14 	bl	900224a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9002267c:	4620      	mov	r0, r4
9002267e:	f7ff ff85 	bl	9002258c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90022682:	4620      	mov	r0, r4
90022684:	f7ff ff48 	bl	90022518 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90022688:	4620      	mov	r0, r4
9002268a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002268e:	f7ff bfb7 	b.w	90022600 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90022694 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90022694:	b538      	push	{r3, r4, r5, lr}
90022696:	4c15      	ldr	r4, [pc, #84]	; (900226ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90022698:	4605      	mov	r5, r0
9002269a:	7823      	ldrb	r3, [r4, #0]
9002269c:	f3bf 8f5b 	dmb	ish
900226a0:	07da      	lsls	r2, r3, #31
900226a2:	d40b      	bmi.n	900226bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
900226a4:	4620      	mov	r0, r4
900226a6:	f008 feb8 	bl	9002b41a <__cxa_guard_acquire>
900226aa:	b138      	cbz	r0, 900226bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
900226ac:	4620      	mov	r0, r4
900226ae:	f008 fec0 	bl	9002b432 <__cxa_guard_release>
900226b2:	4a0f      	ldr	r2, [pc, #60]	; (900226f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
900226b4:	490f      	ldr	r1, [pc, #60]	; (900226f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
900226b6:	4810      	ldr	r0, [pc, #64]	; (900226f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
900226b8:	f008 fea8 	bl	9002b40c <__aeabi_atexit>
900226bc:	4c0f      	ldr	r4, [pc, #60]	; (900226fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
900226be:	7823      	ldrb	r3, [r4, #0]
900226c0:	f3bf 8f5b 	dmb	ish
900226c4:	07db      	lsls	r3, r3, #31
900226c6:	d40b      	bmi.n	900226e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
900226c8:	4620      	mov	r0, r4
900226ca:	f008 fea6 	bl	9002b41a <__cxa_guard_acquire>
900226ce:	b138      	cbz	r0, 900226e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
900226d0:	4620      	mov	r0, r4
900226d2:	f008 feae 	bl	9002b432 <__cxa_guard_release>
900226d6:	4a06      	ldr	r2, [pc, #24]	; (900226f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
900226d8:	4909      	ldr	r1, [pc, #36]	; (90022700 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
900226da:	480a      	ldr	r0, [pc, #40]	; (90022704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
900226dc:	f008 fe96 	bl	9002b40c <__aeabi_atexit>
900226e0:	4b05      	ldr	r3, [pc, #20]	; (900226f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
900226e2:	662b      	str	r3, [r5, #96]	; 0x60
900226e4:	4b07      	ldr	r3, [pc, #28]	; (90022704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
900226e6:	666b      	str	r3, [r5, #100]	; 0x64
900226e8:	bd38      	pop	{r3, r4, r5, pc}
900226ea:	bf00      	nop
900226ec:	24028ef8 	.word	0x24028ef8
900226f0:	24000000 	.word	0x24000000
900226f4:	90020395 	.word	0x90020395
900226f8:	240000a4 	.word	0x240000a4
900226fc:	24028efc 	.word	0x24028efc
90022700:	90020393 	.word	0x90020393
90022704:	240000a8 	.word	0x240000a8

90022708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90022708:	b538      	push	{r3, r4, r5, lr}
9002270a:	4c15      	ldr	r4, [pc, #84]	; (90022760 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9002270c:	4605      	mov	r5, r0
9002270e:	7823      	ldrb	r3, [r4, #0]
90022710:	f3bf 8f5b 	dmb	ish
90022714:	07da      	lsls	r2, r3, #31
90022716:	d40b      	bmi.n	90022730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90022718:	4620      	mov	r0, r4
9002271a:	f008 fe7e 	bl	9002b41a <__cxa_guard_acquire>
9002271e:	b138      	cbz	r0, 90022730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90022720:	4620      	mov	r0, r4
90022722:	f008 fe86 	bl	9002b432 <__cxa_guard_release>
90022726:	4a0f      	ldr	r2, [pc, #60]	; (90022764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90022728:	490f      	ldr	r1, [pc, #60]	; (90022768 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9002272a:	4810      	ldr	r0, [pc, #64]	; (9002276c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9002272c:	f008 fe6e 	bl	9002b40c <__aeabi_atexit>
90022730:	4c0f      	ldr	r4, [pc, #60]	; (90022770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90022732:	7823      	ldrb	r3, [r4, #0]
90022734:	f3bf 8f5b 	dmb	ish
90022738:	07db      	lsls	r3, r3, #31
9002273a:	d40b      	bmi.n	90022754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9002273c:	4620      	mov	r0, r4
9002273e:	f008 fe6c 	bl	9002b41a <__cxa_guard_acquire>
90022742:	b138      	cbz	r0, 90022754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90022744:	4620      	mov	r0, r4
90022746:	f008 fe74 	bl	9002b432 <__cxa_guard_release>
9002274a:	4a06      	ldr	r2, [pc, #24]	; (90022764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9002274c:	4909      	ldr	r1, [pc, #36]	; (90022774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9002274e:	480a      	ldr	r0, [pc, #40]	; (90022778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90022750:	f008 fe5c 	bl	9002b40c <__aeabi_atexit>
90022754:	4b05      	ldr	r3, [pc, #20]	; (9002276c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90022756:	65ab      	str	r3, [r5, #88]	; 0x58
90022758:	4b07      	ldr	r3, [pc, #28]	; (90022778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9002275a:	65eb      	str	r3, [r5, #92]	; 0x5c
9002275c:	bd38      	pop	{r3, r4, r5, pc}
9002275e:	bf00      	nop
90022760:	24028ed0 	.word	0x24028ed0
90022764:	24000000 	.word	0x24000000
90022768:	90020399 	.word	0x90020399
9002276c:	2400007c 	.word	0x2400007c
90022770:	24028ed4 	.word	0x24028ed4
90022774:	90020397 	.word	0x90020397
90022778:	24000080 	.word	0x24000080

9002277c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9002277c:	b510      	push	{r4, lr}
9002277e:	4604      	mov	r4, r0
90022780:	f7ff ff88 	bl	90022694 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90022784:	4620      	mov	r0, r4
90022786:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002278a:	f7ff bfbd 	b.w	90022708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90022790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90022790:	b538      	push	{r3, r4, r5, lr}
90022792:	4c15      	ldr	r4, [pc, #84]	; (900227e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90022794:	4605      	mov	r5, r0
90022796:	7823      	ldrb	r3, [r4, #0]
90022798:	f3bf 8f5b 	dmb	ish
9002279c:	07da      	lsls	r2, r3, #31
9002279e:	d40b      	bmi.n	900227b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
900227a0:	4620      	mov	r0, r4
900227a2:	f008 fe3a 	bl	9002b41a <__cxa_guard_acquire>
900227a6:	b138      	cbz	r0, 900227b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
900227a8:	4620      	mov	r0, r4
900227aa:	f008 fe42 	bl	9002b432 <__cxa_guard_release>
900227ae:	4a0f      	ldr	r2, [pc, #60]	; (900227ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900227b0:	490f      	ldr	r1, [pc, #60]	; (900227f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
900227b2:	4810      	ldr	r0, [pc, #64]	; (900227f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900227b4:	f008 fe2a 	bl	9002b40c <__aeabi_atexit>
900227b8:	4c0f      	ldr	r4, [pc, #60]	; (900227f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
900227ba:	7823      	ldrb	r3, [r4, #0]
900227bc:	f3bf 8f5b 	dmb	ish
900227c0:	07db      	lsls	r3, r3, #31
900227c2:	d40b      	bmi.n	900227dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900227c4:	4620      	mov	r0, r4
900227c6:	f008 fe28 	bl	9002b41a <__cxa_guard_acquire>
900227ca:	b138      	cbz	r0, 900227dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900227cc:	4620      	mov	r0, r4
900227ce:	f008 fe30 	bl	9002b432 <__cxa_guard_release>
900227d2:	4a06      	ldr	r2, [pc, #24]	; (900227ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900227d4:	4909      	ldr	r1, [pc, #36]	; (900227fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
900227d6:	480a      	ldr	r0, [pc, #40]	; (90022800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900227d8:	f008 fe18 	bl	9002b40c <__aeabi_atexit>
900227dc:	4b05      	ldr	r3, [pc, #20]	; (900227f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900227de:	672b      	str	r3, [r5, #112]	; 0x70
900227e0:	4b07      	ldr	r3, [pc, #28]	; (90022800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900227e2:	676b      	str	r3, [r5, #116]	; 0x74
900227e4:	bd38      	pop	{r3, r4, r5, pc}
900227e6:	bf00      	nop
900227e8:	24028ec8 	.word	0x24028ec8
900227ec:	24000000 	.word	0x24000000
900227f0:	9002038d 	.word	0x9002038d
900227f4:	24000074 	.word	0x24000074
900227f8:	24028ecc 	.word	0x24028ecc
900227fc:	9002038b 	.word	0x9002038b
90022800:	24000078 	.word	0x24000078

90022804 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90022804:	b538      	push	{r3, r4, r5, lr}
90022806:	4c15      	ldr	r4, [pc, #84]	; (9002285c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90022808:	4605      	mov	r5, r0
9002280a:	7823      	ldrb	r3, [r4, #0]
9002280c:	f3bf 8f5b 	dmb	ish
90022810:	07da      	lsls	r2, r3, #31
90022812:	d40b      	bmi.n	9002282c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90022814:	4620      	mov	r0, r4
90022816:	f008 fe00 	bl	9002b41a <__cxa_guard_acquire>
9002281a:	b138      	cbz	r0, 9002282c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9002281c:	4620      	mov	r0, r4
9002281e:	f008 fe08 	bl	9002b432 <__cxa_guard_release>
90022822:	4a0f      	ldr	r2, [pc, #60]	; (90022860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90022824:	490f      	ldr	r1, [pc, #60]	; (90022864 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
90022826:	4810      	ldr	r0, [pc, #64]	; (90022868 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90022828:	f008 fdf0 	bl	9002b40c <__aeabi_atexit>
9002282c:	4c0f      	ldr	r4, [pc, #60]	; (9002286c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9002282e:	7823      	ldrb	r3, [r4, #0]
90022830:	f3bf 8f5b 	dmb	ish
90022834:	07db      	lsls	r3, r3, #31
90022836:	d40b      	bmi.n	90022850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90022838:	4620      	mov	r0, r4
9002283a:	f008 fdee 	bl	9002b41a <__cxa_guard_acquire>
9002283e:	b138      	cbz	r0, 90022850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90022840:	4620      	mov	r0, r4
90022842:	f008 fdf6 	bl	9002b432 <__cxa_guard_release>
90022846:	4a06      	ldr	r2, [pc, #24]	; (90022860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90022848:	4909      	ldr	r1, [pc, #36]	; (90022870 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9002284a:	480a      	ldr	r0, [pc, #40]	; (90022874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9002284c:	f008 fdde 	bl	9002b40c <__aeabi_atexit>
90022850:	4b05      	ldr	r3, [pc, #20]	; (90022868 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90022852:	66ab      	str	r3, [r5, #104]	; 0x68
90022854:	4b07      	ldr	r3, [pc, #28]	; (90022874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90022856:	66eb      	str	r3, [r5, #108]	; 0x6c
90022858:	bd38      	pop	{r3, r4, r5, pc}
9002285a:	bf00      	nop
9002285c:	24028ec0 	.word	0x24028ec0
90022860:	24000000 	.word	0x24000000
90022864:	90020391 	.word	0x90020391
90022868:	2400006c 	.word	0x2400006c
9002286c:	24028ec4 	.word	0x24028ec4
90022870:	9002038f 	.word	0x9002038f
90022874:	24000070 	.word	0x24000070

90022878 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90022878:	b510      	push	{r4, lr}
9002287a:	4604      	mov	r4, r0
9002287c:	f7ff ff88 	bl	90022790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90022880:	4620      	mov	r0, r4
90022882:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022886:	f7ff bfbd 	b.w	90022804 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9002288a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9002288a:	b510      	push	{r4, lr}
9002288c:	4604      	mov	r4, r0
9002288e:	f7ff fff3 	bl	90022878 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90022892:	4620      	mov	r0, r4
90022894:	f7ff ff72 	bl	9002277c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90022898:	4620      	mov	r0, r4
9002289a:	f7ff fdf9 	bl	90022490 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9002289e:	4620      	mov	r0, r4
900228a0:	f7ff fcfa 	bl	90022298 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
900228a4:	4620      	mov	r0, r4
900228a6:	f7ff fd75 	bl	90022394 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
900228aa:	4620      	mov	r0, r4
900228ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900228b0:	f7ff bee0 	b.w	90022674 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

900228b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
900228b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900228b8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
900228bc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
900228c0:	2d00      	cmp	r5, #0
900228c2:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
900228c6:	fb05 4c0e 	mla	ip, r5, lr, r4
900228ca:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
900228ce:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
900228d2:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
900228d6:	eb02 0a0c 	add.w	sl, r2, ip
900228da:	8808      	ldrh	r0, [r1, #0]
900228dc:	f2c0 80b0 	blt.w	90022a40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900228e0:	45ab      	cmp	fp, r5
900228e2:	f340 80ad 	ble.w	90022a40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900228e6:	2c00      	cmp	r4, #0
900228e8:	f2c0 80a8 	blt.w	90022a3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900228ec:	45a6      	cmp	lr, r4
900228ee:	f340 80a5 	ble.w	90022a3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900228f2:	f812 200c 	ldrb.w	r2, [r2, ip]
900228f6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
900228fa:	1c62      	adds	r2, r4, #1
900228fc:	f100 80a3 	bmi.w	90022a46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90022900:	4596      	cmp	lr, r2
90022902:	f340 80a0 	ble.w	90022a46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90022906:	f1b9 0f00 	cmp.w	r9, #0
9002290a:	f000 809c 	beq.w	90022a46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002290e:	f89a 2001 	ldrb.w	r2, [sl, #1]
90022912:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90022916:	3501      	adds	r5, #1
90022918:	f100 8099 	bmi.w	90022a4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9002291c:	45ab      	cmp	fp, r5
9002291e:	f340 8096 	ble.w	90022a4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90022922:	2f00      	cmp	r7, #0
90022924:	f000 8093 	beq.w	90022a4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90022928:	2c00      	cmp	r4, #0
9002292a:	f2c0 808e 	blt.w	90022a4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9002292e:	45a6      	cmp	lr, r4
90022930:	f340 808b 	ble.w	90022a4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90022934:	f81a 200e 	ldrb.w	r2, [sl, lr]
90022938:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9002293c:	3401      	adds	r4, #1
9002293e:	f100 8089 	bmi.w	90022a54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90022942:	45a6      	cmp	lr, r4
90022944:	f340 8086 	ble.w	90022a54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90022948:	f1b9 0f00 	cmp.w	r9, #0
9002294c:	f000 8082 	beq.w	90022a54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90022950:	44d6      	add	lr, sl
90022952:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022956:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9002295a:	ea4f 4408 	mov.w	r4, r8, lsl #16
9002295e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
90022962:	fb19 fe07 	smulbb	lr, r9, r7
90022966:	f1c7 0210 	rsb	r2, r7, #16
9002296a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002296e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90022972:	eba2 0209 	sub.w	r2, r2, r9
90022976:	ea44 0808 	orr.w	r8, r4, r8
9002297a:	ea4f 440c 	mov.w	r4, ip, lsl #16
9002297e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022982:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90022986:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002298a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9002298e:	ea44 0c0c 	orr.w	ip, r4, ip
90022992:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90022996:	fb04 f40c 	mul.w	r4, r4, ip
9002299a:	fb02 4808 	mla	r8, r2, r8, r4
9002299e:	041a      	lsls	r2, r3, #16
900229a0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900229a4:	b2b4      	uxth	r4, r6
900229a6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900229aa:	43f6      	mvns	r6, r6
900229ac:	4313      	orrs	r3, r2
900229ae:	042a      	lsls	r2, r5, #16
900229b0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
900229b4:	b2f6      	uxtb	r6, r6
900229b6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900229ba:	fb0e 8303 	mla	r3, lr, r3, r8
900229be:	432a      	orrs	r2, r5
900229c0:	fb07 3202 	mla	r2, r7, r2, r3
900229c4:	10c7      	asrs	r7, r0, #3
900229c6:	0d53      	lsrs	r3, r2, #21
900229c8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900229cc:	0952      	lsrs	r2, r2, #5
900229ce:	fb17 f706 	smulbb	r7, r7, r6
900229d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900229d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900229da:	431a      	orrs	r2, r3
900229dc:	b293      	uxth	r3, r2
900229de:	1202      	asrs	r2, r0, #8
900229e0:	121d      	asrs	r5, r3, #8
900229e2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
900229e6:	00c0      	lsls	r0, r0, #3
900229e8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900229ec:	fb12 f206 	smulbb	r2, r2, r6
900229f0:	b2c0      	uxtb	r0, r0
900229f2:	fb05 2504 	mla	r5, r5, r4, r2
900229f6:	10da      	asrs	r2, r3, #3
900229f8:	fb10 f006 	smulbb	r0, r0, r6
900229fc:	00db      	lsls	r3, r3, #3
900229fe:	b2ad      	uxth	r5, r5
90022a00:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90022a04:	b2db      	uxtb	r3, r3
90022a06:	fb02 7204 	mla	r2, r2, r4, r7
90022a0a:	fb03 0004 	mla	r0, r3, r4, r0
90022a0e:	1c6b      	adds	r3, r5, #1
90022a10:	b292      	uxth	r2, r2
90022a12:	b280      	uxth	r0, r0
90022a14:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022a18:	1c43      	adds	r3, r0, #1
90022a1a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022a1e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90022a22:	1c50      	adds	r0, r2, #1
90022a24:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90022a28:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022a2c:	0952      	lsrs	r2, r2, #5
90022a2e:	432b      	orrs	r3, r5
90022a30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022a34:	4313      	orrs	r3, r2
90022a36:	800b      	strh	r3, [r1, #0]
90022a38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022a3c:	4680      	mov	r8, r0
90022a3e:	e75c      	b.n	900228fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90022a40:	4684      	mov	ip, r0
90022a42:	4680      	mov	r8, r0
90022a44:	e767      	b.n	90022916 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90022a46:	4684      	mov	ip, r0
90022a48:	e765      	b.n	90022916 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90022a4a:	4605      	mov	r5, r0
90022a4c:	e776      	b.n	9002293c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90022a4e:	4603      	mov	r3, r0
90022a50:	4605      	mov	r5, r0
90022a52:	e782      	b.n	9002295a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90022a54:	4603      	mov	r3, r0
90022a56:	e780      	b.n	9002295a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90022a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022a58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022a5c:	b099      	sub	sp, #100	; 0x64
90022a5e:	9215      	str	r2, [sp, #84]	; 0x54
90022a60:	9309      	str	r3, [sp, #36]	; 0x24
90022a62:	9a27      	ldr	r2, [sp, #156]	; 0x9c
90022a64:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
90022a68:	9016      	str	r0, [sp, #88]	; 0x58
90022a6a:	930d      	str	r3, [sp, #52]	; 0x34
90022a6c:	6850      	ldr	r0, [r2, #4]
90022a6e:	910c      	str	r1, [sp, #48]	; 0x30
90022a70:	6812      	ldr	r2, [r2, #0]
90022a72:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
90022a76:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
90022a7a:	fb00 1303 	mla	r3, r0, r3, r1
90022a7e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
90022a82:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90022a84:	681b      	ldr	r3, [r3, #0]
90022a86:	930b      	str	r3, [sp, #44]	; 0x2c
90022a88:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90022a8a:	685e      	ldr	r6, [r3, #4]
90022a8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90022a8e:	3604      	adds	r6, #4
90022a90:	43db      	mvns	r3, r3
90022a92:	b2db      	uxtb	r3, r3
90022a94:	930a      	str	r3, [sp, #40]	; 0x28
90022a96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022a98:	2b00      	cmp	r3, #0
90022a9a:	dc03      	bgt.n	90022aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90022a9c:	9b15      	ldr	r3, [sp, #84]	; 0x54
90022a9e:	2b00      	cmp	r3, #0
90022aa0:	f340 8225 	ble.w	90022eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90022aa4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90022aa6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022aaa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022aae:	1e48      	subs	r0, r1, #1
90022ab0:	1e57      	subs	r7, r2, #1
90022ab2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022ab4:	2b00      	cmp	r3, #0
90022ab6:	f340 80e3 	ble.w	90022c80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90022aba:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90022abe:	ea4f 4325 	mov.w	r3, r5, asr #16
90022ac2:	d406      	bmi.n	90022ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022ac4:	4584      	cmp	ip, r0
90022ac6:	da04      	bge.n	90022ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022ac8:	2b00      	cmp	r3, #0
90022aca:	db02      	blt.n	90022ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022acc:	42bb      	cmp	r3, r7
90022ace:	f2c0 80d8 	blt.w	90022c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90022ad2:	f11c 0c01 	adds.w	ip, ip, #1
90022ad6:	f100 80c9 	bmi.w	90022c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90022ada:	4561      	cmp	r1, ip
90022adc:	f2c0 80c6 	blt.w	90022c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90022ae0:	3301      	adds	r3, #1
90022ae2:	f100 80c3 	bmi.w	90022c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90022ae6:	429a      	cmp	r2, r3
90022ae8:	f2c0 80c0 	blt.w	90022c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90022aec:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90022af0:	4647      	mov	r7, r8
90022af2:	f1bb 0f00 	cmp.w	fp, #0
90022af6:	f340 80e3 	ble.w	90022cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90022afa:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90022afc:	ea4f 4c25 	mov.w	ip, r5, asr #16
90022b00:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90022b02:	f3ca 3003 	ubfx	r0, sl, #12, #4
90022b06:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90022b0a:	ea5f 422a 	movs.w	r2, sl, asr #16
90022b0e:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022b12:	689b      	ldr	r3, [r3, #8]
90022b14:	f100 8121 	bmi.w	90022d5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90022b18:	f103 39ff 	add.w	r9, r3, #4294967295
90022b1c:	454a      	cmp	r2, r9
90022b1e:	f280 811c 	bge.w	90022d5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90022b22:	f1bc 0f00 	cmp.w	ip, #0
90022b26:	f2c0 8118 	blt.w	90022d5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90022b2a:	f10e 39ff 	add.w	r9, lr, #4294967295
90022b2e:	45cc      	cmp	ip, r9
90022b30:	f280 8113 	bge.w	90022d5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90022b34:	b21b      	sxth	r3, r3
90022b36:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022b38:	fb0c 2203 	mla	r2, ip, r3, r2
90022b3c:	eb04 0902 	add.w	r9, r4, r2
90022b40:	5ca2      	ldrb	r2, [r4, r2]
90022b42:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
90022b46:	2800      	cmp	r0, #0
90022b48:	f000 80fe 	beq.w	90022d48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90022b4c:	f899 2001 	ldrb.w	r2, [r9, #1]
90022b50:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90022b54:	9211      	str	r2, [sp, #68]	; 0x44
90022b56:	b151      	cbz	r1, 90022b6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022b58:	eb09 0203 	add.w	r2, r9, r3
90022b5c:	f819 3003 	ldrb.w	r3, [r9, r3]
90022b60:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022b64:	930f      	str	r3, [sp, #60]	; 0x3c
90022b66:	7853      	ldrb	r3, [r2, #1]
90022b68:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022b6c:	9312      	str	r3, [sp, #72]	; 0x48
90022b6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022b70:	fb10 f201 	smulbb	r2, r0, r1
90022b74:	9c12      	ldr	r4, [sp, #72]	; 0x48
90022b76:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90022b7a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022b7e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90022b82:	10d2      	asrs	r2, r2, #3
90022b84:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022b88:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90022b8c:	ea4c 0c03 	orr.w	ip, ip, r3
90022b90:	9b12      	ldr	r3, [sp, #72]	; 0x48
90022b92:	041b      	lsls	r3, r3, #16
90022b94:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022b98:	4323      	orrs	r3, r4
90022b9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90022b9c:	4353      	muls	r3, r2
90022b9e:	fb09 330c 	mla	r3, r9, ip, r3
90022ba2:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90022ba6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90022baa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022bae:	ea4c 0e0e 	orr.w	lr, ip, lr
90022bb2:	f1c1 0c10 	rsb	ip, r1, #16
90022bb6:	ebac 0c00 	sub.w	ip, ip, r0
90022bba:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90022bbe:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90022bc2:	fb0c 3c0e 	mla	ip, ip, lr, r3
90022bc6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022bc8:	0418      	lsls	r0, r3, #16
90022bca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022bce:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022bd2:	4318      	orrs	r0, r3
90022bd4:	fb02 c200 	mla	r2, r2, r0, ip
90022bd8:	8838      	ldrh	r0, [r7, #0]
90022bda:	0d53      	lsrs	r3, r2, #21
90022bdc:	0952      	lsrs	r2, r2, #5
90022bde:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022be2:	1201      	asrs	r1, r0, #8
90022be4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022be8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90022bec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90022bf0:	00c0      	lsls	r0, r0, #3
90022bf2:	431a      	orrs	r2, r3
90022bf4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
90022bf8:	fb11 f104 	smulbb	r1, r1, r4
90022bfc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90022c00:	b292      	uxth	r2, r2
90022c02:	fb1e fe04 	smulbb	lr, lr, r4
90022c06:	b2c0      	uxtb	r0, r0
90022c08:	ea4f 2c22 	mov.w	ip, r2, asr #8
90022c0c:	fb10 f004 	smulbb	r0, r0, r4
90022c10:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90022c14:	fb0c 1c03 	mla	ip, ip, r3, r1
90022c18:	10d1      	asrs	r1, r2, #3
90022c1a:	00d2      	lsls	r2, r2, #3
90022c1c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022c20:	fa1f fc8c 	uxth.w	ip, ip
90022c24:	b2d2      	uxtb	r2, r2
90022c26:	fb01 e103 	mla	r1, r1, r3, lr
90022c2a:	fb02 0303 	mla	r3, r2, r3, r0
90022c2e:	b289      	uxth	r1, r1
90022c30:	b29a      	uxth	r2, r3
90022c32:	f10c 0301 	add.w	r3, ip, #1
90022c36:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90022c3a:	1c53      	adds	r3, r2, #1
90022c3c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022c40:	1c4a      	adds	r2, r1, #1
90022c42:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90022c46:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022c4a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022c4e:	0949      	lsrs	r1, r1, #5
90022c50:	ea43 030c 	orr.w	r3, r3, ip
90022c54:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022c58:	430b      	orrs	r3, r1
90022c5a:	803b      	strh	r3, [r7, #0]
90022c5c:	9b25      	ldr	r3, [sp, #148]	; 0x94
90022c5e:	3702      	adds	r7, #2
90022c60:	f10b 3bff 	add.w	fp, fp, #4294967295
90022c64:	449a      	add	sl, r3
90022c66:	9b26      	ldr	r3, [sp, #152]	; 0x98
90022c68:	441d      	add	r5, r3
90022c6a:	e742      	b.n	90022af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022c6c:	9b25      	ldr	r3, [sp, #148]	; 0x94
90022c6e:	f108 0802 	add.w	r8, r8, #2
90022c72:	449a      	add	sl, r3
90022c74:	9b26      	ldr	r3, [sp, #152]	; 0x98
90022c76:	441d      	add	r5, r3
90022c78:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022c7a:	3b01      	subs	r3, #1
90022c7c:	9309      	str	r3, [sp, #36]	; 0x24
90022c7e:	e718      	b.n	90022ab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90022c80:	d023      	beq.n	90022cca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90022c82:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022c84:	9825      	ldr	r0, [sp, #148]	; 0x94
90022c86:	3b01      	subs	r3, #1
90022c88:	fb00 a003 	mla	r0, r0, r3, sl
90022c8c:	1400      	asrs	r0, r0, #16
90022c8e:	f53f af2d 	bmi.w	90022aec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90022c92:	3901      	subs	r1, #1
90022c94:	4288      	cmp	r0, r1
90022c96:	f6bf af29 	bge.w	90022aec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90022c9a:	9926      	ldr	r1, [sp, #152]	; 0x98
90022c9c:	fb01 5303 	mla	r3, r1, r3, r5
90022ca0:	141b      	asrs	r3, r3, #16
90022ca2:	f53f af23 	bmi.w	90022aec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90022ca6:	3a01      	subs	r2, #1
90022ca8:	4293      	cmp	r3, r2
90022caa:	f6bf af1f 	bge.w	90022aec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90022cae:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90022cb2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
90022cb6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
90022cba:	f1be 0f00 	cmp.w	lr, #0
90022cbe:	dc6c      	bgt.n	90022d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022cc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022cc2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022cc6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90022cca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022ccc:	2b00      	cmp	r3, #0
90022cce:	f340 810e 	ble.w	90022eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90022cd2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022cd6:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022cd8:	ee30 0a04 	vadd.f32	s0, s0, s8
90022cdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022ce0:	eef0 6a62 	vmov.f32	s13, s5
90022ce4:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022ce8:	ee31 1a05 	vadd.f32	s2, s2, s10
90022cec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022cf0:	ee16 aa90 	vmov	sl, s13
90022cf4:	eef0 6a43 	vmov.f32	s13, s6
90022cf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022cfc:	ee16 5a90 	vmov	r5, s13
90022d00:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022d04:	ee61 7a27 	vmul.f32	s15, s2, s15
90022d08:	ee77 2a62 	vsub.f32	s5, s14, s5
90022d0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022d10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022d14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022d18:	ee12 2a90 	vmov	r2, s5
90022d1c:	eef0 2a47 	vmov.f32	s5, s14
90022d20:	fb92 f3f3 	sdiv	r3, r2, r3
90022d24:	ee13 2a10 	vmov	r2, s6
90022d28:	9325      	str	r3, [sp, #148]	; 0x94
90022d2a:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022d2c:	eeb0 3a67 	vmov.f32	s6, s15
90022d30:	fb92 f3f3 	sdiv	r3, r2, r3
90022d34:	9326      	str	r3, [sp, #152]	; 0x98
90022d36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022d38:	9a15      	ldr	r2, [sp, #84]	; 0x54
90022d3a:	3b01      	subs	r3, #1
90022d3c:	930c      	str	r3, [sp, #48]	; 0x30
90022d3e:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022d40:	bf08      	it	eq
90022d42:	4613      	moveq	r3, r2
90022d44:	9309      	str	r3, [sp, #36]	; 0x24
90022d46:	e6a6      	b.n	90022a96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90022d48:	2900      	cmp	r1, #0
90022d4a:	f43f af10 	beq.w	90022b6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022d4e:	f819 3003 	ldrb.w	r3, [r9, r3]
90022d52:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022d56:	930f      	str	r3, [sp, #60]	; 0x3c
90022d58:	e709      	b.n	90022b6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022d5a:	f112 0901 	adds.w	r9, r2, #1
90022d5e:	f53f af7d 	bmi.w	90022c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022d62:	454b      	cmp	r3, r9
90022d64:	f6ff af7a 	blt.w	90022c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022d68:	f11c 0901 	adds.w	r9, ip, #1
90022d6c:	f53f af76 	bmi.w	90022c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022d70:	45ce      	cmp	lr, r9
90022d72:	f6ff af73 	blt.w	90022c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022d76:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022d78:	b21b      	sxth	r3, r3
90022d7a:	9202      	str	r2, [sp, #8]
90022d7c:	fa0f f28e 	sxth.w	r2, lr
90022d80:	9300      	str	r3, [sp, #0]
90022d82:	4633      	mov	r3, r6
90022d84:	9201      	str	r2, [sp, #4]
90022d86:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90022d88:	e9cd 1405 	strd	r1, r4, [sp, #20]
90022d8c:	e9cd c003 	strd	ip, r0, [sp, #12]
90022d90:	4639      	mov	r1, r7
90022d92:	9816      	ldr	r0, [sp, #88]	; 0x58
90022d94:	f7ff fd8e 	bl	900228b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90022d98:	e760      	b.n	90022c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022d9a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90022d9c:	ea4f 422a 	mov.w	r2, sl, asr #16
90022da0:	1429      	asrs	r1, r5, #16
90022da2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022da4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90022da8:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90022dac:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022db0:	fb03 2101 	mla	r1, r3, r1, r2
90022db4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90022db6:	440a      	add	r2, r1
90022db8:	5c61      	ldrb	r1, [r4, r1]
90022dba:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90022dbe:	f1bc 0f00 	cmp.w	ip, #0
90022dc2:	f000 808c 	beq.w	90022ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
90022dc6:	7857      	ldrb	r7, [r2, #1]
90022dc8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90022dcc:	9413      	str	r4, [sp, #76]	; 0x4c
90022dce:	b140      	cbz	r0, 90022de2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022dd0:	18d7      	adds	r7, r2, r3
90022dd2:	5cd3      	ldrb	r3, [r2, r3]
90022dd4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022dd8:	9310      	str	r3, [sp, #64]	; 0x40
90022dda:	787b      	ldrb	r3, [r7, #1]
90022ddc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022de0:	9314      	str	r3, [sp, #80]	; 0x50
90022de2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90022de4:	fb1c f200 	smulbb	r2, ip, r0
90022de8:	9c14      	ldr	r4, [sp, #80]	; 0x50
90022dea:	f10e 3eff 	add.w	lr, lr, #4294967295
90022dee:	041f      	lsls	r7, r3, #16
90022df0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022df4:	10d2      	asrs	r2, r2, #3
90022df6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
90022dfa:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
90022dfe:	431f      	orrs	r7, r3
90022e00:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90022e04:	9317      	str	r3, [sp, #92]	; 0x5c
90022e06:	9b14      	ldr	r3, [sp, #80]	; 0x50
90022e08:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90022e0a:	041b      	lsls	r3, r3, #16
90022e0c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022e10:	ea43 030b 	orr.w	r3, r3, fp
90022e14:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022e18:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022e1c:	4353      	muls	r3, r2
90022e1e:	fb04 3707 	mla	r7, r4, r7, r3
90022e22:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
90022e26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90022e28:	ea43 0b01 	orr.w	fp, r3, r1
90022e2c:	f1c0 0110 	rsb	r1, r0, #16
90022e30:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022e32:	eba1 0c0c 	sub.w	ip, r1, ip
90022e36:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90022e3a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90022e3e:	fb0c 770b 	mla	r7, ip, fp, r7
90022e42:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90022e46:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
90022e4a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022e4e:	ea4c 0c0b 	orr.w	ip, ip, fp
90022e52:	fb02 770c 	mla	r7, r2, ip, r7
90022e56:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90022e58:	0d79      	lsrs	r1, r7, #21
90022e5a:	8812      	ldrh	r2, [r2, #0]
90022e5c:	097f      	lsrs	r7, r7, #5
90022e5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022e62:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90022e66:	430f      	orrs	r7, r1
90022e68:	1211      	asrs	r1, r2, #8
90022e6a:	b2bb      	uxth	r3, r7
90022e6c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90022e70:	10d7      	asrs	r7, r2, #3
90022e72:	fb11 f104 	smulbb	r1, r1, r4
90022e76:	1218      	asrs	r0, r3, #8
90022e78:	00d2      	lsls	r2, r2, #3
90022e7a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90022e7e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90022e82:	fb17 f704 	smulbb	r7, r7, r4
90022e86:	b2d2      	uxtb	r2, r2
90022e88:	fb00 1009 	mla	r0, r0, r9, r1
90022e8c:	10d9      	asrs	r1, r3, #3
90022e8e:	fb12 f204 	smulbb	r2, r2, r4
90022e92:	00db      	lsls	r3, r3, #3
90022e94:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022e98:	b280      	uxth	r0, r0
90022e9a:	b2db      	uxtb	r3, r3
90022e9c:	fb01 7109 	mla	r1, r1, r9, r7
90022ea0:	fb03 2309 	mla	r3, r3, r9, r2
90022ea4:	1c42      	adds	r2, r0, #1
90022ea6:	b289      	uxth	r1, r1
90022ea8:	b29b      	uxth	r3, r3
90022eaa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022eae:	1c4f      	adds	r7, r1, #1
90022eb0:	1c5a      	adds	r2, r3, #1
90022eb2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90022eb6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90022eba:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90022ebe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022ec0:	0949      	lsrs	r1, r1, #5
90022ec2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022ec6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022eca:	4310      	orrs	r0, r2
90022ecc:	4308      	orrs	r0, r1
90022ece:	f823 0b02 	strh.w	r0, [r3], #2
90022ed2:	930e      	str	r3, [sp, #56]	; 0x38
90022ed4:	9b25      	ldr	r3, [sp, #148]	; 0x94
90022ed6:	449a      	add	sl, r3
90022ed8:	9b26      	ldr	r3, [sp, #152]	; 0x98
90022eda:	441d      	add	r5, r3
90022edc:	e6ed      	b.n	90022cba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90022ede:	2800      	cmp	r0, #0
90022ee0:	f43f af7f 	beq.w	90022de2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022ee4:	5cd3      	ldrb	r3, [r2, r3]
90022ee6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022eea:	9310      	str	r3, [sp, #64]	; 0x40
90022eec:	e779      	b.n	90022de2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022eee:	b019      	add	sp, #100	; 0x64
90022ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022ef4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90022ef4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90022ef8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
90022efc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90022f00:	f1b8 0f00 	cmp.w	r8, #0
90022f04:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
90022f08:	fb08 470e 	mla	r7, r8, lr, r4
90022f0c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
90022f10:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90022f14:	eb02 0907 	add.w	r9, r2, r7
90022f18:	8808      	ldrh	r0, [r1, #0]
90022f1a:	db67      	blt.n	90022fec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022f1c:	45c2      	cmp	sl, r8
90022f1e:	dd65      	ble.n	90022fec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022f20:	2c00      	cmp	r4, #0
90022f22:	db61      	blt.n	90022fe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90022f24:	45a6      	cmp	lr, r4
90022f26:	dd5f      	ble.n	90022fe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90022f28:	5dd2      	ldrb	r2, [r2, r7]
90022f2a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90022f2e:	1c62      	adds	r2, r4, #1
90022f30:	d45f      	bmi.n	90022ff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90022f32:	4596      	cmp	lr, r2
90022f34:	dd5d      	ble.n	90022ff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90022f36:	2d00      	cmp	r5, #0
90022f38:	d05b      	beq.n	90022ff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90022f3a:	f899 2001 	ldrb.w	r2, [r9, #1]
90022f3e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90022f42:	f118 0801 	adds.w	r8, r8, #1
90022f46:	d458      	bmi.n	90022ffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022f48:	45c2      	cmp	sl, r8
90022f4a:	dd56      	ble.n	90022ffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022f4c:	2e00      	cmp	r6, #0
90022f4e:	d054      	beq.n	90022ffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022f50:	2c00      	cmp	r4, #0
90022f52:	db50      	blt.n	90022ff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90022f54:	45a6      	cmp	lr, r4
90022f56:	dd4e      	ble.n	90022ff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90022f58:	f819 200e 	ldrb.w	r2, [r9, lr]
90022f5c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90022f60:	3401      	adds	r4, #1
90022f62:	d407      	bmi.n	90022f74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022f64:	45a6      	cmp	lr, r4
90022f66:	dd05      	ble.n	90022f74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022f68:	b125      	cbz	r5, 90022f74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022f6a:	44ce      	add	lr, r9
90022f6c:	f89e 0001 	ldrb.w	r0, [lr, #1]
90022f70:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90022f74:	fb15 f406 	smulbb	r4, r5, r6
90022f78:	ea4f 430c 	mov.w	r3, ip, lsl #16
90022f7c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90022f80:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022f84:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022f88:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90022f8c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90022f90:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90022f94:	ea43 0c0c 	orr.w	ip, r3, ip
90022f98:	f1c6 0310 	rsb	r3, r6, #16
90022f9c:	ea4e 0707 	orr.w	r7, lr, r7
90022fa0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90022fa4:	1b5b      	subs	r3, r3, r5
90022fa6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90022faa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90022fae:	437d      	muls	r5, r7
90022fb0:	fb03 5c0c 	mla	ip, r3, ip, r5
90022fb4:	0403      	lsls	r3, r0, #16
90022fb6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022fba:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022fbe:	4318      	orrs	r0, r3
90022fc0:	0413      	lsls	r3, r2, #16
90022fc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022fc6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022fca:	fb04 c000 	mla	r0, r4, r0, ip
90022fce:	4313      	orrs	r3, r2
90022fd0:	fb06 0003 	mla	r0, r6, r3, r0
90022fd4:	0d43      	lsrs	r3, r0, #21
90022fd6:	0940      	lsrs	r0, r0, #5
90022fd8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022fdc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022fe0:	4318      	orrs	r0, r3
90022fe2:	8008      	strh	r0, [r1, #0]
90022fe4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90022fe8:	4684      	mov	ip, r0
90022fea:	e7a0      	b.n	90022f2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90022fec:	4607      	mov	r7, r0
90022fee:	4684      	mov	ip, r0
90022ff0:	e7a7      	b.n	90022f42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90022ff2:	4607      	mov	r7, r0
90022ff4:	e7a5      	b.n	90022f42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90022ff6:	4602      	mov	r2, r0
90022ff8:	e7b2      	b.n	90022f60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90022ffa:	4602      	mov	r2, r0
90022ffc:	e7ba      	b.n	90022f74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90022ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022ffe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023002:	b093      	sub	sp, #76	; 0x4c
90023004:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90023008:	920f      	str	r2, [sp, #60]	; 0x3c
9002300a:	9a21      	ldr	r2, [sp, #132]	; 0x84
9002300c:	9010      	str	r0, [sp, #64]	; 0x40
9002300e:	9108      	str	r1, [sp, #32]
90023010:	6850      	ldr	r0, [r2, #4]
90023012:	9306      	str	r3, [sp, #24]
90023014:	6812      	ldr	r2, [r2, #0]
90023016:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
9002301a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
9002301e:	fb00 1303 	mla	r3, r0, r3, r1
90023022:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90023026:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023028:	681b      	ldr	r3, [r3, #0]
9002302a:	9307      	str	r3, [sp, #28]
9002302c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002302e:	685f      	ldr	r7, [r3, #4]
90023030:	3704      	adds	r7, #4
90023032:	9b08      	ldr	r3, [sp, #32]
90023034:	2b00      	cmp	r3, #0
90023036:	dc03      	bgt.n	90023040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90023038:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002303a:	2b00      	cmp	r3, #0
9002303c:	f340 81b2 	ble.w	900233a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90023040:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023042:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023046:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002304a:	1e48      	subs	r0, r1, #1
9002304c:	f102 3cff 	add.w	ip, r2, #4294967295
90023050:	9b06      	ldr	r3, [sp, #24]
90023052:	2b00      	cmp	r3, #0
90023054:	f340 80a9 	ble.w	900231aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023058:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002305c:	ea4f 4326 	mov.w	r3, r6, asr #16
90023060:	d406      	bmi.n	90023070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90023062:	4586      	cmp	lr, r0
90023064:	da04      	bge.n	90023070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90023066:	2b00      	cmp	r3, #0
90023068:	db02      	blt.n	90023070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002306a:	4563      	cmp	r3, ip
9002306c:	f2c0 809e 	blt.w	900231ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90023070:	f11e 0e01 	adds.w	lr, lr, #1
90023074:	f100 808f 	bmi.w	90023196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023078:	4571      	cmp	r1, lr
9002307a:	f2c0 808c 	blt.w	90023196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002307e:	3301      	adds	r3, #1
90023080:	f100 8089 	bmi.w	90023196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023084:	429a      	cmp	r2, r3
90023086:	f2c0 8086 	blt.w	90023196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002308a:	f8dd b018 	ldr.w	fp, [sp, #24]
9002308e:	46c8      	mov	r8, r9
90023090:	f1bb 0f00 	cmp.w	fp, #0
90023094:	f340 80a6 	ble.w	900231e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90023098:	9a24      	ldr	r2, [sp, #144]	; 0x90
9002309a:	ea4f 4c26 	mov.w	ip, r6, asr #16
9002309e:	9b24      	ldr	r3, [sp, #144]	; 0x90
900230a0:	f3c4 3003 	ubfx	r0, r4, #12, #4
900230a4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900230a8:	1422      	asrs	r2, r4, #16
900230aa:	f3c6 3103 	ubfx	r1, r6, #12, #4
900230ae:	689b      	ldr	r3, [r3, #8]
900230b0:	f100 80e3 	bmi.w	9002327a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900230b4:	f103 3aff 	add.w	sl, r3, #4294967295
900230b8:	4552      	cmp	r2, sl
900230ba:	f280 80de 	bge.w	9002327a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900230be:	f1bc 0f00 	cmp.w	ip, #0
900230c2:	f2c0 80da 	blt.w	9002327a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900230c6:	f10e 3aff 	add.w	sl, lr, #4294967295
900230ca:	45d4      	cmp	ip, sl
900230cc:	f280 80d5 	bge.w	9002327a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900230d0:	b21b      	sxth	r3, r3
900230d2:	9d07      	ldr	r5, [sp, #28]
900230d4:	fb0c 2203 	mla	r2, ip, r3, r2
900230d8:	eb05 0a02 	add.w	sl, r5, r2
900230dc:	5caa      	ldrb	r2, [r5, r2]
900230de:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900230e2:	2800      	cmp	r0, #0
900230e4:	f000 80c0 	beq.w	90023268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900230e8:	f89a 2001 	ldrb.w	r2, [sl, #1]
900230ec:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900230f0:	920b      	str	r2, [sp, #44]	; 0x2c
900230f2:	b151      	cbz	r1, 9002310a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900230f4:	eb0a 0203 	add.w	r2, sl, r3
900230f8:	f81a 3003 	ldrb.w	r3, [sl, r3]
900230fc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023100:	9309      	str	r3, [sp, #36]	; 0x24
90023102:	7853      	ldrb	r3, [r2, #1]
90023104:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023108:	930c      	str	r3, [sp, #48]	; 0x30
9002310a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002310c:	fb10 f201 	smulbb	r2, r0, r1
90023110:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023112:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90023116:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002311a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002311e:	10d2      	asrs	r2, r2, #3
90023120:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90023124:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90023128:	ea4c 0c03 	orr.w	ip, ip, r3
9002312c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002312e:	041b      	lsls	r3, r3, #16
90023130:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90023134:	432b      	orrs	r3, r5
90023136:	4353      	muls	r3, r2
90023138:	fb0a 330c 	mla	r3, sl, ip, r3
9002313c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90023140:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90023144:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90023148:	ea4c 0e0e 	orr.w	lr, ip, lr
9002314c:	f1c1 0c10 	rsb	ip, r1, #16
90023150:	ebac 0c00 	sub.w	ip, ip, r0
90023154:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90023158:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9002315c:	fb0c 3c0e 	mla	ip, ip, lr, r3
90023160:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023162:	0418      	lsls	r0, r3, #16
90023164:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90023168:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002316c:	4318      	orrs	r0, r3
9002316e:	fb02 c200 	mla	r2, r2, r0, ip
90023172:	0d53      	lsrs	r3, r2, #21
90023174:	0952      	lsrs	r2, r2, #5
90023176:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002317a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002317e:	431a      	orrs	r2, r3
90023180:	f8a8 2000 	strh.w	r2, [r8]
90023184:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90023186:	f108 0802 	add.w	r8, r8, #2
9002318a:	f10b 3bff 	add.w	fp, fp, #4294967295
9002318e:	441c      	add	r4, r3
90023190:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023192:	441e      	add	r6, r3
90023194:	e77c      	b.n	90023090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023196:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90023198:	f109 0902 	add.w	r9, r9, #2
9002319c:	441c      	add	r4, r3
9002319e:	9b20      	ldr	r3, [sp, #128]	; 0x80
900231a0:	441e      	add	r6, r3
900231a2:	9b06      	ldr	r3, [sp, #24]
900231a4:	3b01      	subs	r3, #1
900231a6:	9306      	str	r3, [sp, #24]
900231a8:	e752      	b.n	90023050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900231aa:	d020      	beq.n	900231ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900231ac:	9b06      	ldr	r3, [sp, #24]
900231ae:	981f      	ldr	r0, [sp, #124]	; 0x7c
900231b0:	3b01      	subs	r3, #1
900231b2:	fb00 4003 	mla	r0, r0, r3, r4
900231b6:	1400      	asrs	r0, r0, #16
900231b8:	f53f af67 	bmi.w	9002308a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900231bc:	3901      	subs	r1, #1
900231be:	4288      	cmp	r0, r1
900231c0:	f6bf af63 	bge.w	9002308a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900231c4:	9920      	ldr	r1, [sp, #128]	; 0x80
900231c6:	fb01 6303 	mla	r3, r1, r3, r6
900231ca:	141b      	asrs	r3, r3, #16
900231cc:	f53f af5d 	bmi.w	9002308a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900231d0:	3a01      	subs	r2, #1
900231d2:	4293      	cmp	r3, r2
900231d4:	f6bf af59 	bge.w	9002308a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900231d8:	f8dd 8018 	ldr.w	r8, [sp, #24]
900231dc:	46ca      	mov	sl, r9
900231de:	f1b8 0f00 	cmp.w	r8, #0
900231e2:	dc67      	bgt.n	900232b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900231e4:	9b06      	ldr	r3, [sp, #24]
900231e6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900231ea:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900231ee:	9b08      	ldr	r3, [sp, #32]
900231f0:	2b00      	cmp	r3, #0
900231f2:	f340 80d7 	ble.w	900233a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
900231f6:	ee30 0a04 	vadd.f32	s0, s0, s8
900231fa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900231fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023200:	eeb0 6a62 	vmov.f32	s12, s5
90023204:	eec6 7a80 	vdiv.f32	s15, s13, s0
90023208:	ee31 1a05 	vadd.f32	s2, s2, s10
9002320c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90023210:	ee16 4a10 	vmov	r4, s12
90023214:	eeb0 6a43 	vmov.f32	s12, s6
90023218:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9002321c:	ee16 6a10 	vmov	r6, s12
90023220:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023224:	ee61 7a27 	vmul.f32	s15, s2, s15
90023228:	ee77 2a62 	vsub.f32	s5, s14, s5
9002322c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023230:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023234:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023238:	ee12 2a90 	vmov	r2, s5
9002323c:	eef0 2a47 	vmov.f32	s5, s14
90023240:	fb92 f3f3 	sdiv	r3, r2, r3
90023244:	ee13 2a10 	vmov	r2, s6
90023248:	931f      	str	r3, [sp, #124]	; 0x7c
9002324a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002324c:	eeb0 3a67 	vmov.f32	s6, s15
90023250:	fb92 f3f3 	sdiv	r3, r2, r3
90023254:	9320      	str	r3, [sp, #128]	; 0x80
90023256:	9b08      	ldr	r3, [sp, #32]
90023258:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002325a:	3b01      	subs	r3, #1
9002325c:	9308      	str	r3, [sp, #32]
9002325e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023260:	bf08      	it	eq
90023262:	4613      	moveq	r3, r2
90023264:	9306      	str	r3, [sp, #24]
90023266:	e6e4      	b.n	90023032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90023268:	2900      	cmp	r1, #0
9002326a:	f43f af4e 	beq.w	9002310a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002326e:	f81a 3003 	ldrb.w	r3, [sl, r3]
90023272:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023276:	9309      	str	r3, [sp, #36]	; 0x24
90023278:	e747      	b.n	9002310a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002327a:	f112 0a01 	adds.w	sl, r2, #1
9002327e:	d481      	bmi.n	90023184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90023280:	4553      	cmp	r3, sl
90023282:	f6ff af7f 	blt.w	90023184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90023286:	f11c 0a01 	adds.w	sl, ip, #1
9002328a:	f53f af7b 	bmi.w	90023184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002328e:	45d6      	cmp	lr, sl
90023290:	f6ff af78 	blt.w	90023184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90023294:	b21b      	sxth	r3, r3
90023296:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9002329a:	fa0f f28e 	sxth.w	r2, lr
9002329e:	9300      	str	r3, [sp, #0]
900232a0:	463b      	mov	r3, r7
900232a2:	9201      	str	r2, [sp, #4]
900232a4:	9a07      	ldr	r2, [sp, #28]
900232a6:	e9cd 0104 	strd	r0, r1, [sp, #16]
900232aa:	4641      	mov	r1, r8
900232ac:	9810      	ldr	r0, [sp, #64]	; 0x40
900232ae:	f7ff fe21 	bl	90022ef4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900232b2:	e767      	b.n	90023184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900232b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
900232b6:	1422      	asrs	r2, r4, #16
900232b8:	1431      	asrs	r1, r6, #16
900232ba:	9d07      	ldr	r5, [sp, #28]
900232bc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900232c0:	f3c4 3e03 	ubfx	lr, r4, #12, #4
900232c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
900232c8:	fb03 2101 	mla	r1, r3, r1, r2
900232cc:	9a07      	ldr	r2, [sp, #28]
900232ce:	440a      	add	r2, r1
900232d0:	5c69      	ldrb	r1, [r5, r1]
900232d2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
900232d6:	f1be 0f00 	cmp.w	lr, #0
900232da:	d05c      	beq.n	90023396 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
900232dc:	f892 c001 	ldrb.w	ip, [r2, #1]
900232e0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
900232e4:	950d      	str	r5, [sp, #52]	; 0x34
900232e6:	b150      	cbz	r0, 900232fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900232e8:	eb02 0c03 	add.w	ip, r2, r3
900232ec:	5cd3      	ldrb	r3, [r2, r3]
900232ee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900232f2:	930a      	str	r3, [sp, #40]	; 0x28
900232f4:	f89c 3001 	ldrb.w	r3, [ip, #1]
900232f8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900232fc:	930e      	str	r3, [sp, #56]	; 0x38
900232fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90023300:	fb1e f200 	smulbb	r2, lr, r0
90023304:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023306:	f108 38ff 	add.w	r8, r8, #4294967295
9002330a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002330e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90023312:	10d2      	asrs	r2, r2, #3
90023314:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
90023318:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9002331c:	ea4c 0c03 	orr.w	ip, ip, r3
90023320:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90023324:	9311      	str	r3, [sp, #68]	; 0x44
90023326:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90023328:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002332a:	041b      	lsls	r3, r3, #16
9002332c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90023330:	ea43 030b 	orr.w	r3, r3, fp
90023334:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90023338:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002333c:	4353      	muls	r3, r2
9002333e:	fb05 3c0c 	mla	ip, r5, ip, r3
90023342:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
90023346:	ea43 0b01 	orr.w	fp, r3, r1
9002334a:	f1c0 0110 	rsb	r1, r0, #16
9002334e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023350:	eba1 0e0e 	sub.w	lr, r1, lr
90023354:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90023358:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9002335c:	fb0e cc0b 	mla	ip, lr, fp, ip
90023360:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90023364:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
90023368:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002336c:	ea4b 0e0e 	orr.w	lr, fp, lr
90023370:	fb02 cc0e 	mla	ip, r2, lr, ip
90023374:	ea4f 535c 	mov.w	r3, ip, lsr #21
90023378:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002337c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023380:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90023384:	ea43 0c0c 	orr.w	ip, r3, ip
90023388:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002338a:	441c      	add	r4, r3
9002338c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002338e:	f82a cb02 	strh.w	ip, [sl], #2
90023392:	441e      	add	r6, r3
90023394:	e723      	b.n	900231de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90023396:	2800      	cmp	r0, #0
90023398:	d0b1      	beq.n	900232fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9002339a:	5cd3      	ldrb	r3, [r2, r3]
9002339c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900233a0:	930a      	str	r3, [sp, #40]	; 0x28
900233a2:	e7ac      	b.n	900232fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900233a4:	b013      	add	sp, #76	; 0x4c
900233a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900233aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
900233aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900233ae:	880d      	ldrh	r5, [r1, #0]
900233b0:	b087      	sub	sp, #28
900233b2:	10ef      	asrs	r7, r5, #3
900233b4:	9103      	str	r1, [sp, #12]
900233b6:	ea4f 2a25 	mov.w	sl, r5, asr #8
900233ba:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
900233be:	00ed      	lsls	r5, r5, #3
900233c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900233c4:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
900233c8:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
900233cc:	b2ed      	uxtb	r5, r5
900233ce:	9701      	str	r7, [sp, #4]
900233d0:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
900233d4:	9502      	str	r5, [sp, #8]
900233d6:	9d01      	ldr	r5, [sp, #4]
900233d8:	9902      	ldr	r1, [sp, #8]
900233da:	022d      	lsls	r5, r5, #8
900233dc:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
900233e0:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
900233e4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
900233e8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
900233ec:	430d      	orrs	r5, r1
900233ee:	fb06 0709 	mla	r7, r6, r9, r0
900233f2:	2e00      	cmp	r6, #0
900233f4:	9505      	str	r5, [sp, #20]
900233f6:	eb02 0c07 	add.w	ip, r2, r7
900233fa:	f2c0 80b6 	blt.w	9002356a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
900233fe:	45b3      	cmp	fp, r6
90023400:	f340 80b3 	ble.w	9002356a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90023404:	2800      	cmp	r0, #0
90023406:	f2c0 80ae 	blt.w	90023566 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9002340a:	4581      	cmp	r9, r0
9002340c:	f340 80ab 	ble.w	90023566 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90023410:	5dd7      	ldrb	r7, [r2, r7]
90023412:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90023416:	441f      	add	r7, r3
90023418:	1c42      	adds	r2, r0, #1
9002341a:	f100 80a9 	bmi.w	90023570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002341e:	4591      	cmp	r9, r2
90023420:	f340 80a6 	ble.w	90023570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90023424:	2c00      	cmp	r4, #0
90023426:	f000 80a3 	beq.w	90023570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002342a:	f89c 5001 	ldrb.w	r5, [ip, #1]
9002342e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90023432:	441d      	add	r5, r3
90023434:	3601      	adds	r6, #1
90023436:	f100 809f 	bmi.w	90023578 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9002343a:	45b3      	cmp	fp, r6
9002343c:	f340 809c 	ble.w	90023578 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90023440:	f1be 0f00 	cmp.w	lr, #0
90023444:	f000 8098 	beq.w	90023578 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90023448:	2800      	cmp	r0, #0
9002344a:	f2c0 8093 	blt.w	90023574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9002344e:	4581      	cmp	r9, r0
90023450:	f340 8090 	ble.w	90023574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90023454:	f81c 6009 	ldrb.w	r6, [ip, r9]
90023458:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9002345c:	441e      	add	r6, r3
9002345e:	3001      	adds	r0, #1
90023460:	f100 808d 	bmi.w	9002357e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90023464:	4581      	cmp	r9, r0
90023466:	f340 808a 	ble.w	9002357e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002346a:	2c00      	cmp	r4, #0
9002346c:	f000 8087 	beq.w	9002357e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90023470:	44e1      	add	r9, ip
90023472:	f899 2001 	ldrb.w	r2, [r9, #1]
90023476:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002347a:	4413      	add	r3, r2
9002347c:	b2a4      	uxth	r4, r4
9002347e:	f897 c002 	ldrb.w	ip, [r7, #2]
90023482:	fa1f fe8e 	uxth.w	lr, lr
90023486:	9901      	ldr	r1, [sp, #4]
90023488:	fb04 fb0e 	mul.w	fp, r4, lr
9002348c:	0124      	lsls	r4, r4, #4
9002348e:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90023492:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
90023496:	eba4 040b 	sub.w	r4, r4, fp
9002349a:	fa1f f08e 	uxth.w	r0, lr
9002349e:	b2a2      	uxth	r2, r4
900234a0:	78ac      	ldrb	r4, [r5, #2]
900234a2:	eba9 0900 	sub.w	r9, r9, r0
900234a6:	fa1f fe88 	uxth.w	lr, r8
900234aa:	4354      	muls	r4, r2
900234ac:	ea6f 0808 	mvn.w	r8, r8
900234b0:	fa1f f989 	uxth.w	r9, r9
900234b4:	fa5f f888 	uxtb.w	r8, r8
900234b8:	fb09 440c 	mla	r4, r9, ip, r4
900234bc:	f896 c002 	ldrb.w	ip, [r6, #2]
900234c0:	fb1a fa08 	smulbb	sl, sl, r8
900234c4:	fb00 440c 	mla	r4, r0, ip, r4
900234c8:	f893 c002 	ldrb.w	ip, [r3, #2]
900234cc:	fb0b 4c0c 	mla	ip, fp, ip, r4
900234d0:	787c      	ldrb	r4, [r7, #1]
900234d2:	783f      	ldrb	r7, [r7, #0]
900234d4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900234d8:	fb0c ac0e 	mla	ip, ip, lr, sl
900234dc:	f895 a001 	ldrb.w	sl, [r5, #1]
900234e0:	782d      	ldrb	r5, [r5, #0]
900234e2:	fb02 fa0a 	mul.w	sl, r2, sl
900234e6:	fa1f fc8c 	uxth.w	ip, ip
900234ea:	436a      	muls	r2, r5
900234ec:	7835      	ldrb	r5, [r6, #0]
900234ee:	fb09 aa04 	mla	sl, r9, r4, sl
900234f2:	7874      	ldrb	r4, [r6, #1]
900234f4:	fb09 2207 	mla	r2, r9, r7, r2
900234f8:	fb00 aa04 	mla	sl, r0, r4, sl
900234fc:	785c      	ldrb	r4, [r3, #1]
900234fe:	fb00 2005 	mla	r0, r0, r5, r2
90023502:	781b      	ldrb	r3, [r3, #0]
90023504:	fb0b a404 	mla	r4, fp, r4, sl
90023508:	fb11 fa08 	smulbb	sl, r1, r8
9002350c:	fb0b 0b03 	mla	fp, fp, r3, r0
90023510:	9b02      	ldr	r3, [sp, #8]
90023512:	f3c4 2407 	ubfx	r4, r4, #8, #8
90023516:	fb13 f808 	smulbb	r8, r3, r8
9002351a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9002351e:	fb04 a40e 	mla	r4, r4, lr, sl
90023522:	f10c 0301 	add.w	r3, ip, #1
90023526:	fb0b 8e0e 	mla	lr, fp, lr, r8
9002352a:	b2a4      	uxth	r4, r4
9002352c:	fa1f fe8e 	uxth.w	lr, lr
90023530:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023534:	f104 0a01 	add.w	sl, r4, #1
90023538:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
9002353c:	f10e 0c01 	add.w	ip, lr, #1
90023540:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90023544:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023548:	0964      	lsrs	r4, r4, #5
9002354a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002354e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90023552:	ea4c 0c03 	orr.w	ip, ip, r3
90023556:	9b03      	ldr	r3, [sp, #12]
90023558:	ea4c 0c04 	orr.w	ip, ip, r4
9002355c:	f8a3 c000 	strh.w	ip, [r3]
90023560:	b007      	add	sp, #28
90023562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023566:	af05      	add	r7, sp, #20
90023568:	e756      	b.n	90023418 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
9002356a:	ad05      	add	r5, sp, #20
9002356c:	462f      	mov	r7, r5
9002356e:	e761      	b.n	90023434 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90023570:	ad05      	add	r5, sp, #20
90023572:	e75f      	b.n	90023434 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90023574:	ae05      	add	r6, sp, #20
90023576:	e772      	b.n	9002345e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90023578:	ab05      	add	r3, sp, #20
9002357a:	461e      	mov	r6, r3
9002357c:	e77e      	b.n	9002347c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
9002357e:	ab05      	add	r3, sp, #20
90023580:	e77c      	b.n	9002347c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90023582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023582:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023586:	b095      	sub	sp, #84	; 0x54
90023588:	9212      	str	r2, [sp, #72]	; 0x48
9002358a:	9309      	str	r3, [sp, #36]	; 0x24
9002358c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002358e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
90023592:	9013      	str	r0, [sp, #76]	; 0x4c
90023594:	930f      	str	r3, [sp, #60]	; 0x3c
90023596:	6850      	ldr	r0, [r2, #4]
90023598:	910e      	str	r1, [sp, #56]	; 0x38
9002359a:	6812      	ldr	r2, [r2, #0]
9002359c:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
900235a0:	fb00 1303 	mla	r3, r0, r3, r1
900235a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900235a8:	930a      	str	r3, [sp, #40]	; 0x28
900235aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
900235ac:	681b      	ldr	r3, [r3, #0]
900235ae:	930d      	str	r3, [sp, #52]	; 0x34
900235b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
900235b2:	685c      	ldr	r4, [r3, #4]
900235b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900235b6:	3404      	adds	r4, #4
900235b8:	43db      	mvns	r3, r3
900235ba:	b2db      	uxtb	r3, r3
900235bc:	930b      	str	r3, [sp, #44]	; 0x2c
900235be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900235c0:	2b00      	cmp	r3, #0
900235c2:	dc03      	bgt.n	900235cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900235c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
900235c6:	2b00      	cmp	r3, #0
900235c8:	f340 8255 	ble.w	90023a76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900235cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
900235ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900235d2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900235d6:	1e48      	subs	r0, r1, #1
900235d8:	1e55      	subs	r5, r2, #1
900235da:	9b09      	ldr	r3, [sp, #36]	; 0x24
900235dc:	2b00      	cmp	r3, #0
900235de:	f340 80f9 	ble.w	900237d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
900235e2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
900235e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900235e6:	1436      	asrs	r6, r6, #16
900235e8:	ea4f 4323 	mov.w	r3, r3, asr #16
900235ec:	d406      	bmi.n	900235fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900235ee:	4286      	cmp	r6, r0
900235f0:	da04      	bge.n	900235fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900235f2:	2b00      	cmp	r3, #0
900235f4:	db02      	blt.n	900235fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900235f6:	42ab      	cmp	r3, r5
900235f8:	f2c0 80ed 	blt.w	900237d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
900235fc:	3601      	adds	r6, #1
900235fe:	f100 80da 	bmi.w	900237b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023602:	42b1      	cmp	r1, r6
90023604:	f2c0 80d7 	blt.w	900237b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023608:	3301      	adds	r3, #1
9002360a:	f100 80d4 	bmi.w	900237b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002360e:	429a      	cmp	r2, r3
90023610:	f2c0 80d1 	blt.w	900237b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023614:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023616:	9311      	str	r3, [sp, #68]	; 0x44
90023618:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002361a:	930c      	str	r3, [sp, #48]	; 0x30
9002361c:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002361e:	2b00      	cmp	r3, #0
90023620:	f340 80fa 	ble.w	90023818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90023624:	9826      	ldr	r0, [sp, #152]	; 0x98
90023626:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023628:	9a20      	ldr	r2, [sp, #128]	; 0x80
9002362a:	68c6      	ldr	r6, [r0, #12]
9002362c:	141d      	asrs	r5, r3, #16
9002362e:	981f      	ldr	r0, [sp, #124]	; 0x7c
90023630:	f3c2 3103 	ubfx	r1, r2, #12, #4
90023634:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90023636:	9a26      	ldr	r2, [sp, #152]	; 0x98
90023638:	1400      	asrs	r0, r0, #16
9002363a:	f3c3 3303 	ubfx	r3, r3, #12, #4
9002363e:	6892      	ldr	r2, [r2, #8]
90023640:	f100 813e 	bmi.w	900238c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90023644:	1e57      	subs	r7, r2, #1
90023646:	42b8      	cmp	r0, r7
90023648:	f280 813a 	bge.w	900238c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002364c:	2d00      	cmp	r5, #0
9002364e:	f2c0 8137 	blt.w	900238c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90023652:	1e77      	subs	r7, r6, #1
90023654:	42bd      	cmp	r5, r7
90023656:	f280 8133 	bge.w	900238c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002365a:	b212      	sxth	r2, r2
9002365c:	fb05 0002 	mla	r0, r5, r2, r0
90023660:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90023662:	f815 a000 	ldrb.w	sl, [r5, r0]
90023666:	182e      	adds	r6, r5, r0
90023668:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
9002366c:	eb04 050a 	add.w	r5, r4, sl
90023670:	2b00      	cmp	r3, #0
90023672:	f000 8117 	beq.w	900238a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90023676:	f896 c001 	ldrb.w	ip, [r6, #1]
9002367a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9002367e:	44a4      	add	ip, r4
90023680:	2900      	cmp	r1, #0
90023682:	f000 8117 	beq.w	900238b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90023686:	18b0      	adds	r0, r6, r2
90023688:	5cb2      	ldrb	r2, [r6, r2]
9002368a:	7840      	ldrb	r0, [r0, #1]
9002368c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023690:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90023694:	4422      	add	r2, r4
90023696:	4420      	add	r0, r4
90023698:	b29b      	uxth	r3, r3
9002369a:	f89c 7002 	ldrb.w	r7, [ip, #2]
9002369e:	b289      	uxth	r1, r1
900236a0:	f895 b002 	ldrb.w	fp, [r5, #2]
900236a4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
900236a6:	fb03 f901 	mul.w	r9, r3, r1
900236aa:	011b      	lsls	r3, r3, #4
900236ac:	f8b6 e000 	ldrh.w	lr, [r6]
900236b0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900236b4:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
900236b8:	eba3 0309 	sub.w	r3, r3, r9
900236bc:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
900236c0:	b289      	uxth	r1, r1
900236c2:	f814 a00a 	ldrb.w	sl, [r4, sl]
900236c6:	b29b      	uxth	r3, r3
900236c8:	eba8 0801 	sub.w	r8, r8, r1
900236cc:	435f      	muls	r7, r3
900236ce:	fa1f f888 	uxth.w	r8, r8
900236d2:	9310      	str	r3, [sp, #64]	; 0x40
900236d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900236d6:	fb08 770b 	mla	r7, r8, fp, r7
900236da:	f892 b002 	ldrb.w	fp, [r2, #2]
900236de:	fb01 770b 	mla	r7, r1, fp, r7
900236e2:	f890 b002 	ldrb.w	fp, [r0, #2]
900236e6:	fb09 770b 	mla	r7, r9, fp, r7
900236ea:	ea4f 2b2e 	mov.w	fp, lr, asr #8
900236ee:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
900236f2:	f3c7 2707 	ubfx	r7, r7, #8, #8
900236f6:	fb1b fb03 	smulbb	fp, fp, r3
900236fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
900236fc:	fb07 b706 	mla	r7, r7, r6, fp
90023700:	f895 b001 	ldrb.w	fp, [r5, #1]
90023704:	f89c 5001 	ldrb.w	r5, [ip, #1]
90023708:	f89c c000 	ldrb.w	ip, [ip]
9002370c:	b2bf      	uxth	r7, r7
9002370e:	435d      	muls	r5, r3
90023710:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023712:	fb08 550b 	mla	r5, r8, fp, r5
90023716:	f892 b001 	ldrb.w	fp, [r2, #1]
9002371a:	fb01 550b 	mla	r5, r1, fp, r5
9002371e:	f890 b001 	ldrb.w	fp, [r0, #1]
90023722:	fb09 550b 	mla	r5, r9, fp, r5
90023726:	ea4f 0bee 	mov.w	fp, lr, asr #3
9002372a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002372e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90023732:	f3c5 2507 	ubfx	r5, r5, #8, #8
90023736:	fa5f fe8e 	uxtb.w	lr, lr
9002373a:	fb1b fb03 	smulbb	fp, fp, r3
9002373e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90023740:	fb03 f30c 	mul.w	r3, r3, ip
90023744:	f892 c000 	ldrb.w	ip, [r2]
90023748:	fb05 b506 	mla	r5, r5, r6, fp
9002374c:	fb08 330a 	mla	r3, r8, sl, r3
90023750:	b2ad      	uxth	r5, r5
90023752:	fb01 330c 	mla	r3, r1, ip, r3
90023756:	f890 c000 	ldrb.w	ip, [r0]
9002375a:	f105 0b01 	add.w	fp, r5, #1
9002375e:	fb09 3c0c 	mla	ip, r9, ip, r3
90023762:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023764:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90023768:	fb1e fe03 	smulbb	lr, lr, r3
9002376c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90023770:	1c7b      	adds	r3, r7, #1
90023772:	096d      	lsrs	r5, r5, #5
90023774:	fb0c e606 	mla	r6, ip, r6, lr
90023778:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9002377c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023780:	b2b6      	uxth	r6, r6
90023782:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
90023786:	1c77      	adds	r7, r6, #1
90023788:	eb07 2716 	add.w	r7, r7, r6, lsr #8
9002378c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023790:	431f      	orrs	r7, r3
90023792:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90023794:	433d      	orrs	r5, r7
90023796:	801d      	strh	r5, [r3, #0]
90023798:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002379a:	9a21      	ldr	r2, [sp, #132]	; 0x84
9002379c:	3302      	adds	r3, #2
9002379e:	930c      	str	r3, [sp, #48]	; 0x30
900237a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900237a2:	4413      	add	r3, r2
900237a4:	9a22      	ldr	r2, [sp, #136]	; 0x88
900237a6:	931f      	str	r3, [sp, #124]	; 0x7c
900237a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900237aa:	4413      	add	r3, r2
900237ac:	9320      	str	r3, [sp, #128]	; 0x80
900237ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
900237b0:	3b01      	subs	r3, #1
900237b2:	9311      	str	r3, [sp, #68]	; 0x44
900237b4:	e732      	b.n	9002361c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900237b6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900237b8:	9e21      	ldr	r6, [sp, #132]	; 0x84
900237ba:	4433      	add	r3, r6
900237bc:	9e22      	ldr	r6, [sp, #136]	; 0x88
900237be:	931f      	str	r3, [sp, #124]	; 0x7c
900237c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900237c2:	4433      	add	r3, r6
900237c4:	9320      	str	r3, [sp, #128]	; 0x80
900237c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900237c8:	3b01      	subs	r3, #1
900237ca:	9309      	str	r3, [sp, #36]	; 0x24
900237cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900237ce:	3302      	adds	r3, #2
900237d0:	930a      	str	r3, [sp, #40]	; 0x28
900237d2:	e702      	b.n	900235da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900237d4:	d027      	beq.n	90023826 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
900237d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900237d8:	9821      	ldr	r0, [sp, #132]	; 0x84
900237da:	3b01      	subs	r3, #1
900237dc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
900237de:	fb00 5003 	mla	r0, r0, r3, r5
900237e2:	1400      	asrs	r0, r0, #16
900237e4:	f53f af16 	bmi.w	90023614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900237e8:	3901      	subs	r1, #1
900237ea:	4288      	cmp	r0, r1
900237ec:	f6bf af12 	bge.w	90023614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900237f0:	9922      	ldr	r1, [sp, #136]	; 0x88
900237f2:	9820      	ldr	r0, [sp, #128]	; 0x80
900237f4:	fb01 0303 	mla	r3, r1, r3, r0
900237f8:	141b      	asrs	r3, r3, #16
900237fa:	f53f af0b 	bmi.w	90023614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900237fe:	3a01      	subs	r2, #1
90023800:	4293      	cmp	r3, r2
90023802:	f6bf af07 	bge.w	90023614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023806:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023808:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
9002380c:	9311      	str	r3, [sp, #68]	; 0x44
9002380e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023810:	930c      	str	r3, [sp, #48]	; 0x30
90023812:	9b11      	ldr	r3, [sp, #68]	; 0x44
90023814:	2b00      	cmp	r3, #0
90023816:	dc70      	bgt.n	900238fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90023818:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002381a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002381c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90023820:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023824:	930a      	str	r3, [sp, #40]	; 0x28
90023826:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90023828:	2b00      	cmp	r3, #0
9002382a:	f340 8124 	ble.w	90023a76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9002382e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023832:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023834:	ee30 0a04 	vadd.f32	s0, s0, s8
90023838:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002383c:	eef0 6a62 	vmov.f32	s13, s5
90023840:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023844:	ee31 1a05 	vadd.f32	s2, s2, s10
90023848:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002384c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90023850:	eef0 6a43 	vmov.f32	s13, s6
90023854:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023858:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
9002385c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023860:	ee61 7a27 	vmul.f32	s15, s2, s15
90023864:	ee77 2a62 	vsub.f32	s5, s14, s5
90023868:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002386c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023870:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023874:	ee12 2a90 	vmov	r2, s5
90023878:	eef0 2a47 	vmov.f32	s5, s14
9002387c:	fb92 f3f3 	sdiv	r3, r2, r3
90023880:	ee13 2a10 	vmov	r2, s6
90023884:	9321      	str	r3, [sp, #132]	; 0x84
90023886:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023888:	eeb0 3a67 	vmov.f32	s6, s15
9002388c:	fb92 f3f3 	sdiv	r3, r2, r3
90023890:	9322      	str	r3, [sp, #136]	; 0x88
90023892:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90023894:	9a12      	ldr	r2, [sp, #72]	; 0x48
90023896:	3b01      	subs	r3, #1
90023898:	930e      	str	r3, [sp, #56]	; 0x38
9002389a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9002389c:	bf08      	it	eq
9002389e:	4613      	moveq	r3, r2
900238a0:	9309      	str	r3, [sp, #36]	; 0x24
900238a2:	e68c      	b.n	900235be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900238a4:	b149      	cbz	r1, 900238ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
900238a6:	5cb2      	ldrb	r2, [r6, r2]
900238a8:	4628      	mov	r0, r5
900238aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900238ae:	4422      	add	r2, r4
900238b0:	46ac      	mov	ip, r5
900238b2:	e6f1      	b.n	90023698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900238b4:	4628      	mov	r0, r5
900238b6:	462a      	mov	r2, r5
900238b8:	e6ee      	b.n	90023698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900238ba:	4628      	mov	r0, r5
900238bc:	462a      	mov	r2, r5
900238be:	e7f7      	b.n	900238b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
900238c0:	1c47      	adds	r7, r0, #1
900238c2:	f53f af69 	bmi.w	90023798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900238c6:	42ba      	cmp	r2, r7
900238c8:	f6ff af66 	blt.w	90023798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900238cc:	1c6f      	adds	r7, r5, #1
900238ce:	f53f af63 	bmi.w	90023798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900238d2:	42be      	cmp	r6, r7
900238d4:	f6ff af60 	blt.w	90023798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900238d8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
900238da:	b236      	sxth	r6, r6
900238dc:	b212      	sxth	r2, r2
900238de:	9002      	str	r0, [sp, #8]
900238e0:	9601      	str	r6, [sp, #4]
900238e2:	9200      	str	r2, [sp, #0]
900238e4:	9813      	ldr	r0, [sp, #76]	; 0x4c
900238e6:	e9cd 1705 	strd	r1, r7, [sp, #20]
900238ea:	e9cd 5303 	strd	r5, r3, [sp, #12]
900238ee:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
900238f2:	4623      	mov	r3, r4
900238f4:	f7ff fd59 	bl	900233aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
900238f8:	e74e      	b.n	90023798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900238fa:	9a20      	ldr	r2, [sp, #128]	; 0x80
900238fc:	9820      	ldr	r0, [sp, #128]	; 0x80
900238fe:	f3c2 3103 	ubfx	r1, r2, #12, #4
90023902:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90023904:	9a26      	ldr	r2, [sp, #152]	; 0x98
90023906:	1400      	asrs	r0, r0, #16
90023908:	142d      	asrs	r5, r5, #16
9002390a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002390c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90023910:	f3c3 3303 	ubfx	r3, r3, #12, #4
90023914:	fb02 5000 	mla	r0, r2, r0, r5
90023918:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002391a:	f815 9000 	ldrb.w	r9, [r5, r0]
9002391e:	182e      	adds	r6, r5, r0
90023920:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90023924:	eb04 0509 	add.w	r5, r4, r9
90023928:	2b00      	cmp	r3, #0
9002392a:	f000 8096 	beq.w	90023a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9002392e:	7877      	ldrb	r7, [r6, #1]
90023930:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90023934:	4427      	add	r7, r4
90023936:	2900      	cmp	r1, #0
90023938:	f000 8097 	beq.w	90023a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
9002393c:	18b0      	adds	r0, r6, r2
9002393e:	5cb2      	ldrb	r2, [r6, r2]
90023940:	7840      	ldrb	r0, [r0, #1]
90023942:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023946:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002394a:	4422      	add	r2, r4
9002394c:	4420      	add	r0, r4
9002394e:	b29b      	uxth	r3, r3
90023950:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90023952:	b289      	uxth	r1, r1
90023954:	f895 b002 	ldrb.w	fp, [r5, #2]
90023958:	f8b6 c000 	ldrh.w	ip, [r6]
9002395c:	fb03 f801 	mul.w	r8, r3, r1
90023960:	011b      	lsls	r3, r3, #4
90023962:	78be      	ldrb	r6, [r7, #2]
90023964:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90023968:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9002396c:	eba3 0308 	sub.w	r3, r3, r8
90023970:	f814 9009 	ldrb.w	r9, [r4, r9]
90023974:	b289      	uxth	r1, r1
90023976:	b29b      	uxth	r3, r3
90023978:	ebae 0e01 	sub.w	lr, lr, r1
9002397c:	435e      	muls	r6, r3
9002397e:	fa1f fe8e 	uxth.w	lr, lr
90023982:	9310      	str	r3, [sp, #64]	; 0x40
90023984:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023986:	fb0e 660b 	mla	r6, lr, fp, r6
9002398a:	f892 b002 	ldrb.w	fp, [r2, #2]
9002398e:	fb01 660b 	mla	r6, r1, fp, r6
90023992:	f890 b002 	ldrb.w	fp, [r0, #2]
90023996:	fb08 660b 	mla	r6, r8, fp, r6
9002399a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
9002399e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
900239a2:	f3c6 2607 	ubfx	r6, r6, #8, #8
900239a6:	fb1b fb03 	smulbb	fp, fp, r3
900239aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
900239ac:	fb06 b60a 	mla	r6, r6, sl, fp
900239b0:	f895 b001 	ldrb.w	fp, [r5, #1]
900239b4:	787d      	ldrb	r5, [r7, #1]
900239b6:	783f      	ldrb	r7, [r7, #0]
900239b8:	b2b6      	uxth	r6, r6
900239ba:	435d      	muls	r5, r3
900239bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900239be:	fb0e 550b 	mla	r5, lr, fp, r5
900239c2:	f892 b001 	ldrb.w	fp, [r2, #1]
900239c6:	fb01 550b 	mla	r5, r1, fp, r5
900239ca:	f890 b001 	ldrb.w	fp, [r0, #1]
900239ce:	fb08 550b 	mla	r5, r8, fp, r5
900239d2:	ea4f 0bec 	mov.w	fp, ip, asr #3
900239d6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900239da:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
900239de:	f3c5 2507 	ubfx	r5, r5, #8, #8
900239e2:	fa5f fc8c 	uxtb.w	ip, ip
900239e6:	fb1b fb03 	smulbb	fp, fp, r3
900239ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
900239ec:	437b      	muls	r3, r7
900239ee:	7817      	ldrb	r7, [r2, #0]
900239f0:	fb05 b50a 	mla	r5, r5, sl, fp
900239f4:	fb0e 3309 	mla	r3, lr, r9, r3
900239f8:	b2ad      	uxth	r5, r5
900239fa:	fb01 3307 	mla	r3, r1, r7, r3
900239fe:	7807      	ldrb	r7, [r0, #0]
90023a00:	f105 0b01 	add.w	fp, r5, #1
90023a04:	fb08 3707 	mla	r7, r8, r7, r3
90023a08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023a0a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90023a0e:	fb1c fc03 	smulbb	ip, ip, r3
90023a12:	f3c7 2707 	ubfx	r7, r7, #8, #8
90023a16:	1c73      	adds	r3, r6, #1
90023a18:	096d      	lsrs	r5, r5, #5
90023a1a:	fb07 c70a 	mla	r7, r7, sl, ip
90023a1e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90023a22:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023a26:	b2bf      	uxth	r7, r7
90023a28:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90023a2a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90023a2e:	1c7a      	adds	r2, r7, #1
90023a30:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90023a34:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023a38:	4316      	orrs	r6, r2
90023a3a:	9a21      	ldr	r2, [sp, #132]	; 0x84
90023a3c:	432e      	orrs	r6, r5
90023a3e:	f823 6b02 	strh.w	r6, [r3], #2
90023a42:	930c      	str	r3, [sp, #48]	; 0x30
90023a44:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90023a46:	4413      	add	r3, r2
90023a48:	9a22      	ldr	r2, [sp, #136]	; 0x88
90023a4a:	931f      	str	r3, [sp, #124]	; 0x7c
90023a4c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023a4e:	4413      	add	r3, r2
90023a50:	9320      	str	r3, [sp, #128]	; 0x80
90023a52:	9b11      	ldr	r3, [sp, #68]	; 0x44
90023a54:	3b01      	subs	r3, #1
90023a56:	9311      	str	r3, [sp, #68]	; 0x44
90023a58:	e6db      	b.n	90023812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90023a5a:	b149      	cbz	r1, 90023a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90023a5c:	5cb2      	ldrb	r2, [r6, r2]
90023a5e:	4628      	mov	r0, r5
90023a60:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023a64:	4422      	add	r2, r4
90023a66:	462f      	mov	r7, r5
90023a68:	e771      	b.n	9002394e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90023a6a:	4628      	mov	r0, r5
90023a6c:	462a      	mov	r2, r5
90023a6e:	e76e      	b.n	9002394e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90023a70:	4628      	mov	r0, r5
90023a72:	462a      	mov	r2, r5
90023a74:	e7f7      	b.n	90023a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90023a76:	b015      	add	sp, #84	; 0x54
90023a78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023a7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90023a7c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023a80:	880f      	ldrh	r7, [r1, #0]
90023a82:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
90023a86:	023c      	lsls	r4, r7, #8
90023a88:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
90023a8c:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
90023a90:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
90023a94:	017c      	lsls	r4, r7, #5
90023a96:	00ff      	lsls	r7, r7, #3
90023a98:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90023a9c:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
90023aa0:	b2ff      	uxtb	r7, r7
90023aa2:	ea4b 0404 	orr.w	r4, fp, r4
90023aa6:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
90023aaa:	4327      	orrs	r7, r4
90023aac:	fb05 ca0e 	mla	sl, r5, lr, ip
90023ab0:	2d00      	cmp	r5, #0
90023ab2:	9701      	str	r7, [sp, #4]
90023ab4:	eb02 080a 	add.w	r8, r2, sl
90023ab8:	db7e      	blt.n	90023bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90023aba:	45a9      	cmp	r9, r5
90023abc:	dd7c      	ble.n	90023bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90023abe:	f1bc 0f00 	cmp.w	ip, #0
90023ac2:	db77      	blt.n	90023bb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90023ac4:	45e6      	cmp	lr, ip
90023ac6:	dd75      	ble.n	90023bb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90023ac8:	f812 700a 	ldrb.w	r7, [r2, sl]
90023acc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90023ad0:	441f      	add	r7, r3
90023ad2:	f11c 0201 	adds.w	r2, ip, #1
90023ad6:	d472      	bmi.n	90023bbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90023ad8:	4596      	cmp	lr, r2
90023ada:	dd70      	ble.n	90023bbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90023adc:	2800      	cmp	r0, #0
90023ade:	d06e      	beq.n	90023bbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90023ae0:	f898 4001 	ldrb.w	r4, [r8, #1]
90023ae4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90023ae8:	441c      	add	r4, r3
90023aea:	3501      	adds	r5, #1
90023aec:	d46b      	bmi.n	90023bc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90023aee:	45a9      	cmp	r9, r5
90023af0:	dd69      	ble.n	90023bc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90023af2:	2e00      	cmp	r6, #0
90023af4:	d067      	beq.n	90023bc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90023af6:	f1bc 0f00 	cmp.w	ip, #0
90023afa:	db62      	blt.n	90023bc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90023afc:	45e6      	cmp	lr, ip
90023afe:	dd60      	ble.n	90023bc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90023b00:	f818 500e 	ldrb.w	r5, [r8, lr]
90023b04:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90023b08:	441d      	add	r5, r3
90023b0a:	f11c 0201 	adds.w	r2, ip, #1
90023b0e:	d45d      	bmi.n	90023bcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90023b10:	4596      	cmp	lr, r2
90023b12:	dd5b      	ble.n	90023bcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90023b14:	2800      	cmp	r0, #0
90023b16:	d059      	beq.n	90023bcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90023b18:	44c6      	add	lr, r8
90023b1a:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023b1e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023b22:	4413      	add	r3, r2
90023b24:	b280      	uxth	r0, r0
90023b26:	f897 e002 	ldrb.w	lr, [r7, #2]
90023b2a:	b2b2      	uxth	r2, r6
90023b2c:	f897 9000 	ldrb.w	r9, [r7]
90023b30:	787f      	ldrb	r7, [r7, #1]
90023b32:	fb00 f602 	mul.w	r6, r0, r2
90023b36:	0100      	lsls	r0, r0, #4
90023b38:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90023b3c:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
90023b40:	1b80      	subs	r0, r0, r6
90023b42:	fa1f fc82 	uxth.w	ip, r2
90023b46:	b282      	uxth	r2, r0
90023b48:	78a0      	ldrb	r0, [r4, #2]
90023b4a:	eba8 080c 	sub.w	r8, r8, ip
90023b4e:	4350      	muls	r0, r2
90023b50:	fa1f f888 	uxth.w	r8, r8
90023b54:	fb08 0e0e 	mla	lr, r8, lr, r0
90023b58:	78a8      	ldrb	r0, [r5, #2]
90023b5a:	fb0c e000 	mla	r0, ip, r0, lr
90023b5e:	f893 e002 	ldrb.w	lr, [r3, #2]
90023b62:	fb06 0e0e 	mla	lr, r6, lr, r0
90023b66:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
90023b6a:	f894 e000 	ldrb.w	lr, [r4]
90023b6e:	fb02 fe0e 	mul.w	lr, r2, lr
90023b72:	fb08 e909 	mla	r9, r8, r9, lr
90023b76:	f895 e000 	ldrb.w	lr, [r5]
90023b7a:	fb0c 990e 	mla	r9, ip, lr, r9
90023b7e:	f893 e000 	ldrb.w	lr, [r3]
90023b82:	785b      	ldrb	r3, [r3, #1]
90023b84:	fb06 9e0e 	mla	lr, r6, lr, r9
90023b88:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90023b8c:	ea4e 0e00 	orr.w	lr, lr, r0
90023b90:	7860      	ldrb	r0, [r4, #1]
90023b92:	4350      	muls	r0, r2
90023b94:	786a      	ldrb	r2, [r5, #1]
90023b96:	fb08 0007 	mla	r0, r8, r7, r0
90023b9a:	fb0c 0202 	mla	r2, ip, r2, r0
90023b9e:	fb06 2303 	mla	r3, r6, r3, r2
90023ba2:	095b      	lsrs	r3, r3, #5
90023ba4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023ba8:	ea4e 0303 	orr.w	r3, lr, r3
90023bac:	800b      	strh	r3, [r1, #0]
90023bae:	b003      	add	sp, #12
90023bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023bb4:	af01      	add	r7, sp, #4
90023bb6:	e78c      	b.n	90023ad2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90023bb8:	ac01      	add	r4, sp, #4
90023bba:	4627      	mov	r7, r4
90023bbc:	e795      	b.n	90023aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90023bbe:	ac01      	add	r4, sp, #4
90023bc0:	e793      	b.n	90023aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90023bc2:	ad01      	add	r5, sp, #4
90023bc4:	e7a1      	b.n	90023b0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90023bc6:	ab01      	add	r3, sp, #4
90023bc8:	461d      	mov	r5, r3
90023bca:	e7ab      	b.n	90023b24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90023bcc:	ab01      	add	r3, sp, #4
90023bce:	e7a9      	b.n	90023b24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90023bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023bd4:	b08f      	sub	sp, #60	; 0x3c
90023bd6:	920c      	str	r2, [sp, #48]	; 0x30
90023bd8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90023bda:	900d      	str	r0, [sp, #52]	; 0x34
90023bdc:	910a      	str	r1, [sp, #40]	; 0x28
90023bde:	6850      	ldr	r0, [r2, #4]
90023be0:	9306      	str	r3, [sp, #24]
90023be2:	6812      	ldr	r2, [r2, #0]
90023be4:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
90023be8:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
90023bec:	fb00 1303 	mla	r3, r0, r3, r1
90023bf0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023bf4:	9307      	str	r3, [sp, #28]
90023bf6:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023bf8:	681b      	ldr	r3, [r3, #0]
90023bfa:	9308      	str	r3, [sp, #32]
90023bfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023bfe:	685c      	ldr	r4, [r3, #4]
90023c00:	3404      	adds	r4, #4
90023c02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023c04:	2b00      	cmp	r3, #0
90023c06:	dc03      	bgt.n	90023c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90023c08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90023c0a:	2b00      	cmp	r3, #0
90023c0c:	f340 81d5 	ble.w	90023fba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90023c10:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023c12:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023c16:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023c1a:	1e48      	subs	r0, r1, #1
90023c1c:	1e56      	subs	r6, r2, #1
90023c1e:	9b06      	ldr	r3, [sp, #24]
90023c20:	2b00      	cmp	r3, #0
90023c22:	f340 80b6 	ble.w	90023d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90023c26:	ea5f 472b 	movs.w	r7, fp, asr #16
90023c2a:	ea4f 4325 	mov.w	r3, r5, asr #16
90023c2e:	d406      	bmi.n	90023c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90023c30:	4287      	cmp	r7, r0
90023c32:	da04      	bge.n	90023c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90023c34:	2b00      	cmp	r3, #0
90023c36:	db02      	blt.n	90023c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90023c38:	42b3      	cmp	r3, r6
90023c3a:	f2c0 80ab 	blt.w	90023d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90023c3e:	3701      	adds	r7, #1
90023c40:	f100 809c 	bmi.w	90023d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023c44:	42b9      	cmp	r1, r7
90023c46:	f2c0 8099 	blt.w	90023d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023c4a:	3301      	adds	r3, #1
90023c4c:	f100 8096 	bmi.w	90023d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023c50:	429a      	cmp	r2, r3
90023c52:	f2c0 8093 	blt.w	90023d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023c56:	9b06      	ldr	r3, [sp, #24]
90023c58:	930b      	str	r3, [sp, #44]	; 0x2c
90023c5a:	9b07      	ldr	r3, [sp, #28]
90023c5c:	9309      	str	r3, [sp, #36]	; 0x24
90023c5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023c60:	2b00      	cmp	r3, #0
90023c62:	f340 80b4 	ble.w	90023dce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90023c66:	9820      	ldr	r0, [sp, #128]	; 0x80
90023c68:	142e      	asrs	r6, r5, #16
90023c6a:	9a20      	ldr	r2, [sp, #128]	; 0x80
90023c6c:	f3cb 3303 	ubfx	r3, fp, #12, #4
90023c70:	68c7      	ldr	r7, [r0, #12]
90023c72:	ea5f 402b 	movs.w	r0, fp, asr #16
90023c76:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023c7a:	6892      	ldr	r2, [r2, #8]
90023c7c:	f100 80fb 	bmi.w	90023e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90023c80:	f102 3cff 	add.w	ip, r2, #4294967295
90023c84:	4560      	cmp	r0, ip
90023c86:	f280 80f6 	bge.w	90023e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90023c8a:	2e00      	cmp	r6, #0
90023c8c:	f2c0 80f3 	blt.w	90023e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90023c90:	f107 3cff 	add.w	ip, r7, #4294967295
90023c94:	4566      	cmp	r6, ip
90023c96:	f280 80ee 	bge.w	90023e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90023c9a:	b212      	sxth	r2, r2
90023c9c:	fb06 0002 	mla	r0, r6, r2, r0
90023ca0:	9e08      	ldr	r6, [sp, #32]
90023ca2:	1837      	adds	r7, r6, r0
90023ca4:	5c30      	ldrb	r0, [r6, r0]
90023ca6:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90023caa:	eb04 0c08 	add.w	ip, r4, r8
90023cae:	2b00      	cmp	r3, #0
90023cb0:	f000 80d3 	beq.w	90023e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90023cb4:	787e      	ldrb	r6, [r7, #1]
90023cb6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90023cba:	4426      	add	r6, r4
90023cbc:	2900      	cmp	r1, #0
90023cbe:	f000 80d4 	beq.w	90023e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90023cc2:	18b8      	adds	r0, r7, r2
90023cc4:	5cba      	ldrb	r2, [r7, r2]
90023cc6:	7840      	ldrb	r0, [r0, #1]
90023cc8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023ccc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90023cd0:	4422      	add	r2, r4
90023cd2:	4420      	add	r0, r4
90023cd4:	b29b      	uxth	r3, r3
90023cd6:	78b7      	ldrb	r7, [r6, #2]
90023cd8:	b289      	uxth	r1, r1
90023cda:	f89c a002 	ldrb.w	sl, [ip, #2]
90023cde:	f89c c001 	ldrb.w	ip, [ip, #1]
90023ce2:	fb03 f901 	mul.w	r9, r3, r1
90023ce6:	011b      	lsls	r3, r3, #4
90023ce8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023cec:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90023cf0:	eba3 0309 	sub.w	r3, r3, r9
90023cf4:	b289      	uxth	r1, r1
90023cf6:	b29b      	uxth	r3, r3
90023cf8:	ebae 0e01 	sub.w	lr, lr, r1
90023cfc:	435f      	muls	r7, r3
90023cfe:	fa1f fe8e 	uxth.w	lr, lr
90023d02:	fb0e 770a 	mla	r7, lr, sl, r7
90023d06:	f892 a002 	ldrb.w	sl, [r2, #2]
90023d0a:	fb01 770a 	mla	r7, r1, sl, r7
90023d0e:	f890 a002 	ldrb.w	sl, [r0, #2]
90023d12:	fb09 7a0a 	mla	sl, r9, sl, r7
90023d16:	f814 7008 	ldrb.w	r7, [r4, r8]
90023d1a:	f896 8000 	ldrb.w	r8, [r6]
90023d1e:	7876      	ldrb	r6, [r6, #1]
90023d20:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90023d24:	fb03 f808 	mul.w	r8, r3, r8
90023d28:	4373      	muls	r3, r6
90023d2a:	fb0e 8807 	mla	r8, lr, r7, r8
90023d2e:	7817      	ldrb	r7, [r2, #0]
90023d30:	fb0e 330c 	mla	r3, lr, ip, r3
90023d34:	fb01 8807 	mla	r8, r1, r7, r8
90023d38:	7807      	ldrb	r7, [r0, #0]
90023d3a:	fb09 8707 	mla	r7, r9, r7, r8
90023d3e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023d42:	ea47 070a 	orr.w	r7, r7, sl
90023d46:	f892 a001 	ldrb.w	sl, [r2, #1]
90023d4a:	fb01 310a 	mla	r1, r1, sl, r3
90023d4e:	f890 a001 	ldrb.w	sl, [r0, #1]
90023d52:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023d54:	fb09 1a0a 	mla	sl, r9, sl, r1
90023d58:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90023d5c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90023d60:	ea47 070a 	orr.w	r7, r7, sl
90023d64:	801f      	strh	r7, [r3, #0]
90023d66:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023d68:	3302      	adds	r3, #2
90023d6a:	9309      	str	r3, [sp, #36]	; 0x24
90023d6c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90023d6e:	449b      	add	fp, r3
90023d70:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023d72:	441d      	add	r5, r3
90023d74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023d76:	3b01      	subs	r3, #1
90023d78:	930b      	str	r3, [sp, #44]	; 0x2c
90023d7a:	e770      	b.n	90023c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023d7c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90023d7e:	449b      	add	fp, r3
90023d80:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023d82:	441d      	add	r5, r3
90023d84:	9b06      	ldr	r3, [sp, #24]
90023d86:	3b01      	subs	r3, #1
90023d88:	9306      	str	r3, [sp, #24]
90023d8a:	9b07      	ldr	r3, [sp, #28]
90023d8c:	3302      	adds	r3, #2
90023d8e:	9307      	str	r3, [sp, #28]
90023d90:	e745      	b.n	90023c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90023d92:	d023      	beq.n	90023ddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90023d94:	9b06      	ldr	r3, [sp, #24]
90023d96:	981b      	ldr	r0, [sp, #108]	; 0x6c
90023d98:	3b01      	subs	r3, #1
90023d9a:	fb00 b003 	mla	r0, r0, r3, fp
90023d9e:	1400      	asrs	r0, r0, #16
90023da0:	f53f af59 	bmi.w	90023c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023da4:	3901      	subs	r1, #1
90023da6:	4288      	cmp	r0, r1
90023da8:	f6bf af55 	bge.w	90023c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023dac:	991c      	ldr	r1, [sp, #112]	; 0x70
90023dae:	fb01 5303 	mla	r3, r1, r3, r5
90023db2:	141b      	asrs	r3, r3, #16
90023db4:	f53f af4f 	bmi.w	90023c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023db8:	3a01      	subs	r2, #1
90023dba:	4293      	cmp	r3, r2
90023dbc:	f6bf af4b 	bge.w	90023c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023dc0:	9b06      	ldr	r3, [sp, #24]
90023dc2:	9309      	str	r3, [sp, #36]	; 0x24
90023dc4:	9b07      	ldr	r3, [sp, #28]
90023dc6:	930b      	str	r3, [sp, #44]	; 0x2c
90023dc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023dca:	2b00      	cmp	r3, #0
90023dcc:	dc70      	bgt.n	90023eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90023dce:	9b06      	ldr	r3, [sp, #24]
90023dd0:	9a07      	ldr	r2, [sp, #28]
90023dd2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90023dd6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023dda:	9307      	str	r3, [sp, #28]
90023ddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023dde:	2b00      	cmp	r3, #0
90023de0:	f340 80eb 	ble.w	90023fba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90023de4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023de8:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023dea:	ee30 0a04 	vadd.f32	s0, s0, s8
90023dee:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023df2:	eef0 6a62 	vmov.f32	s13, s5
90023df6:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023dfa:	ee31 1a05 	vadd.f32	s2, s2, s10
90023dfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023e02:	ee16 ba90 	vmov	fp, s13
90023e06:	eef0 6a43 	vmov.f32	s13, s6
90023e0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023e0e:	ee16 5a90 	vmov	r5, s13
90023e12:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023e16:	ee61 7a27 	vmul.f32	s15, s2, s15
90023e1a:	ee77 2a62 	vsub.f32	s5, s14, s5
90023e1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023e22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023e26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023e2a:	ee12 2a90 	vmov	r2, s5
90023e2e:	eef0 2a47 	vmov.f32	s5, s14
90023e32:	fb92 f3f3 	sdiv	r3, r2, r3
90023e36:	ee13 2a10 	vmov	r2, s6
90023e3a:	931b      	str	r3, [sp, #108]	; 0x6c
90023e3c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023e3e:	eeb0 3a67 	vmov.f32	s6, s15
90023e42:	fb92 f3f3 	sdiv	r3, r2, r3
90023e46:	931c      	str	r3, [sp, #112]	; 0x70
90023e48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023e4a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90023e4c:	3b01      	subs	r3, #1
90023e4e:	930a      	str	r3, [sp, #40]	; 0x28
90023e50:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023e52:	bf08      	it	eq
90023e54:	4613      	moveq	r3, r2
90023e56:	9306      	str	r3, [sp, #24]
90023e58:	e6d3      	b.n	90023c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90023e5a:	b149      	cbz	r1, 90023e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90023e5c:	5cba      	ldrb	r2, [r7, r2]
90023e5e:	4660      	mov	r0, ip
90023e60:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023e64:	4422      	add	r2, r4
90023e66:	4666      	mov	r6, ip
90023e68:	e734      	b.n	90023cd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90023e6a:	4660      	mov	r0, ip
90023e6c:	4662      	mov	r2, ip
90023e6e:	e731      	b.n	90023cd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90023e70:	4660      	mov	r0, ip
90023e72:	4662      	mov	r2, ip
90023e74:	e7f7      	b.n	90023e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90023e76:	f110 0c01 	adds.w	ip, r0, #1
90023e7a:	f53f af74 	bmi.w	90023d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023e7e:	4562      	cmp	r2, ip
90023e80:	f6ff af71 	blt.w	90023d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023e84:	f116 0c01 	adds.w	ip, r6, #1
90023e88:	f53f af6d 	bmi.w	90023d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023e8c:	4567      	cmp	r7, ip
90023e8e:	f6ff af6a 	blt.w	90023d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023e92:	b23f      	sxth	r7, r7
90023e94:	b212      	sxth	r2, r2
90023e96:	9701      	str	r7, [sp, #4]
90023e98:	9200      	str	r2, [sp, #0]
90023e9a:	e9cd 3104 	strd	r3, r1, [sp, #16]
90023e9e:	e9cd 0602 	strd	r0, r6, [sp, #8]
90023ea2:	4623      	mov	r3, r4
90023ea4:	980d      	ldr	r0, [sp, #52]	; 0x34
90023ea6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90023eaa:	f7ff fde7 	bl	90023a7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90023eae:	e75a      	b.n	90023d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023eb0:	9a20      	ldr	r2, [sp, #128]	; 0x80
90023eb2:	ea4f 462b 	mov.w	r6, fp, asr #16
90023eb6:	1428      	asrs	r0, r5, #16
90023eb8:	f3cb 3303 	ubfx	r3, fp, #12, #4
90023ebc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90023ec0:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023ec4:	fb02 6000 	mla	r0, r2, r0, r6
90023ec8:	9e08      	ldr	r6, [sp, #32]
90023eca:	f816 8000 	ldrb.w	r8, [r6, r0]
90023ece:	1837      	adds	r7, r6, r0
90023ed0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90023ed4:	eb04 0c08 	add.w	ip, r4, r8
90023ed8:	2b00      	cmp	r3, #0
90023eda:	d060      	beq.n	90023f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90023edc:	787e      	ldrb	r6, [r7, #1]
90023ede:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90023ee2:	4426      	add	r6, r4
90023ee4:	2900      	cmp	r1, #0
90023ee6:	d062      	beq.n	90023fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90023ee8:	18b8      	adds	r0, r7, r2
90023eea:	5cba      	ldrb	r2, [r7, r2]
90023eec:	7840      	ldrb	r0, [r0, #1]
90023eee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023ef2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90023ef6:	4422      	add	r2, r4
90023ef8:	4420      	add	r0, r4
90023efa:	b29b      	uxth	r3, r3
90023efc:	78b7      	ldrb	r7, [r6, #2]
90023efe:	b289      	uxth	r1, r1
90023f00:	f89c a002 	ldrb.w	sl, [ip, #2]
90023f04:	f89c c001 	ldrb.w	ip, [ip, #1]
90023f08:	fb03 f901 	mul.w	r9, r3, r1
90023f0c:	011b      	lsls	r3, r3, #4
90023f0e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023f12:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90023f16:	eba3 0309 	sub.w	r3, r3, r9
90023f1a:	b289      	uxth	r1, r1
90023f1c:	b29b      	uxth	r3, r3
90023f1e:	ebae 0e01 	sub.w	lr, lr, r1
90023f22:	435f      	muls	r7, r3
90023f24:	fa1f fe8e 	uxth.w	lr, lr
90023f28:	fb0e 770a 	mla	r7, lr, sl, r7
90023f2c:	f892 a002 	ldrb.w	sl, [r2, #2]
90023f30:	fb01 770a 	mla	r7, r1, sl, r7
90023f34:	f890 a002 	ldrb.w	sl, [r0, #2]
90023f38:	fb09 7a0a 	mla	sl, r9, sl, r7
90023f3c:	f814 7008 	ldrb.w	r7, [r4, r8]
90023f40:	f896 8000 	ldrb.w	r8, [r6]
90023f44:	7876      	ldrb	r6, [r6, #1]
90023f46:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90023f4a:	fb03 f808 	mul.w	r8, r3, r8
90023f4e:	4373      	muls	r3, r6
90023f50:	7856      	ldrb	r6, [r2, #1]
90023f52:	fb0e 8807 	mla	r8, lr, r7, r8
90023f56:	7817      	ldrb	r7, [r2, #0]
90023f58:	fb0e 330c 	mla	r3, lr, ip, r3
90023f5c:	fb01 8807 	mla	r8, r1, r7, r8
90023f60:	7807      	ldrb	r7, [r0, #0]
90023f62:	fb01 3306 	mla	r3, r1, r6, r3
90023f66:	fb09 8707 	mla	r7, r9, r7, r8
90023f6a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023f6e:	ea47 070a 	orr.w	r7, r7, sl
90023f72:	f890 a001 	ldrb.w	sl, [r0, #1]
90023f76:	fb09 3a0a 	mla	sl, r9, sl, r3
90023f7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023f7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90023f80:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90023f84:	ea47 070a 	orr.w	r7, r7, sl
90023f88:	f823 7b02 	strh.w	r7, [r3], #2
90023f8c:	930b      	str	r3, [sp, #44]	; 0x2c
90023f8e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90023f90:	449b      	add	fp, r3
90023f92:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023f94:	441d      	add	r5, r3
90023f96:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023f98:	3b01      	subs	r3, #1
90023f9a:	9309      	str	r3, [sp, #36]	; 0x24
90023f9c:	e714      	b.n	90023dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90023f9e:	b149      	cbz	r1, 90023fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90023fa0:	5cba      	ldrb	r2, [r7, r2]
90023fa2:	4660      	mov	r0, ip
90023fa4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023fa8:	4422      	add	r2, r4
90023faa:	4666      	mov	r6, ip
90023fac:	e7a5      	b.n	90023efa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90023fae:	4660      	mov	r0, ip
90023fb0:	4662      	mov	r2, ip
90023fb2:	e7a2      	b.n	90023efa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90023fb4:	4660      	mov	r0, ip
90023fb6:	4662      	mov	r2, ip
90023fb8:	e7f7      	b.n	90023faa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90023fba:	b00f      	add	sp, #60	; 0x3c
90023fbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023fc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90023fc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023fc4:	b085      	sub	sp, #20
90023fc6:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
90023fca:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
90023fce:	9102      	str	r1, [sp, #8]
90023fd0:	2c00      	cmp	r4, #0
90023fd2:	fb04 710c 	mla	r1, r4, ip, r7
90023fd6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
90023fda:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
90023fde:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90023fe2:	eb02 0e01 	add.w	lr, r2, r1
90023fe6:	f2c0 8122 	blt.w	9002422e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90023fea:	45a0      	cmp	r8, r4
90023fec:	f340 811f 	ble.w	9002422e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90023ff0:	2f00      	cmp	r7, #0
90023ff2:	f2c0 811a 	blt.w	9002422a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90023ff6:	45bc      	cmp	ip, r7
90023ff8:	f340 8117 	ble.w	9002422a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90023ffc:	5c52      	ldrb	r2, [r2, r1]
90023ffe:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90024002:	1c7a      	adds	r2, r7, #1
90024004:	f100 8116 	bmi.w	90024234 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90024008:	4594      	cmp	ip, r2
9002400a:	f340 8113 	ble.w	90024234 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9002400e:	2e00      	cmp	r6, #0
90024010:	f000 8112 	beq.w	90024238 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90024014:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024018:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9002401c:	3401      	adds	r4, #1
9002401e:	f100 810f 	bmi.w	90024240 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90024022:	45a0      	cmp	r8, r4
90024024:	f340 810c 	ble.w	90024240 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90024028:	2800      	cmp	r0, #0
9002402a:	f000 810c 	beq.w	90024246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
9002402e:	2f00      	cmp	r7, #0
90024030:	f2c0 8104 	blt.w	9002423c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90024034:	45bc      	cmp	ip, r7
90024036:	f340 8101 	ble.w	9002423c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002403a:	f81e 200c 	ldrb.w	r2, [lr, ip]
9002403e:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90024042:	3701      	adds	r7, #1
90024044:	f100 8102 	bmi.w	9002424c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90024048:	45bc      	cmp	ip, r7
9002404a:	f340 80ff 	ble.w	9002424c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9002404e:	2e00      	cmp	r6, #0
90024050:	f000 80fe 	beq.w	90024250 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90024054:	44f4      	add	ip, lr
90024056:	f89c 2001 	ldrb.w	r2, [ip, #1]
9002405a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9002405e:	b2b6      	uxth	r6, r6
90024060:	b280      	uxth	r0, r0
90024062:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90024066:	fb00 fe06 	mul.w	lr, r0, r6
9002406a:	0136      	lsls	r6, r6, #4
9002406c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90024070:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90024074:	eba6 070e 	sub.w	r7, r6, lr
90024078:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
9002407c:	ea4f 6914 	mov.w	r9, r4, lsr #24
90024080:	b280      	uxth	r0, r0
90024082:	b2bf      	uxth	r7, r7
90024084:	1a1b      	subs	r3, r3, r0
90024086:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002408a:	fb0a f607 	mul.w	r6, sl, r7
9002408e:	b29b      	uxth	r3, r3
90024090:	fb0b 6603 	mla	r6, fp, r3, r6
90024094:	fb00 6609 	mla	r6, r0, r9, r6
90024098:	fb0e 6608 	mla	r6, lr, r8, r6
9002409c:	f3c6 2607 	ubfx	r6, r6, #8, #8
900240a0:	9600      	str	r6, [sp, #0]
900240a2:	2e00      	cmp	r6, #0
900240a4:	f000 80be 	beq.w	90024224 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
900240a8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900240ac:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900240b0:	9e02      	ldr	r6, [sp, #8]
900240b2:	fb0b fc0c 	mul.w	ip, fp, ip
900240b6:	fb0b f505 	mul.w	r5, fp, r5
900240ba:	8836      	ldrh	r6, [r6, #0]
900240bc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900240c0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900240c4:	9501      	str	r5, [sp, #4]
900240c6:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900240ca:	44dc      	add	ip, fp
900240cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900240d0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
900240d4:	9503      	str	r5, [sp, #12]
900240d6:	9d01      	ldr	r5, [sp, #4]
900240d8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
900240dc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900240e0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
900240e4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900240e8:	fb0a fc0c 	mul.w	ip, sl, ip
900240ec:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900240f0:	fb0a fa01 	mul.w	sl, sl, r1
900240f4:	ea4f 251c 	mov.w	r5, ip, lsr #8
900240f8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900240fc:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90024100:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024104:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024108:	4465      	add	r5, ip
9002410a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002410e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90024112:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024116:	fb09 fc0c 	mul.w	ip, r9, ip
9002411a:	0a2d      	lsrs	r5, r5, #8
9002411c:	fb09 f904 	mul.w	r9, r9, r4
90024120:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024124:	ea4f 211c 	mov.w	r1, ip, lsr #8
90024128:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002412c:	f509 7480 	add.w	r4, r9, #256	; 0x100
90024130:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024134:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90024138:	437d      	muls	r5, r7
9002413a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9002413e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90024142:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90024146:	4461      	add	r1, ip
90024148:	fb08 f404 	mul.w	r4, r8, r4
9002414c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024150:	fb08 f802 	mul.w	r8, r8, r2
90024154:	0a09      	lsrs	r1, r1, #8
90024156:	0a22      	lsrs	r2, r4, #8
90024158:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9002415c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90024160:	fb07 f70a 	mul.w	r7, r7, sl
90024164:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90024168:	4414      	add	r4, r2
9002416a:	f508 7280 	add.w	r2, r8, #256	; 0x100
9002416e:	0a24      	lsrs	r4, r4, #8
90024170:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90024174:	9a03      	ldr	r2, [sp, #12]
90024176:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9002417a:	fb02 5503 	mla	r5, r2, r3, r5
9002417e:	ea4f 2818 	mov.w	r8, r8, lsr #8
90024182:	9a00      	ldr	r2, [sp, #0]
90024184:	fb04 540e 	mla	r4, r4, lr, r5
90024188:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9002418c:	1235      	asrs	r5, r6, #8
9002418e:	fb01 4100 	mla	r1, r1, r0, r4
90024192:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024196:	0a09      	lsrs	r1, r1, #8
90024198:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9002419c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900241a0:	fb03 7101 	mla	r1, r3, r1, r7
900241a4:	fb0e 1e08 	mla	lr, lr, r8, r1
900241a8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900241ac:	fb00 e101 	mla	r1, r0, r1, lr
900241b0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
900241b4:	b287      	uxth	r7, r0
900241b6:	0a09      	lsrs	r1, r1, #8
900241b8:	437a      	muls	r2, r7
900241ba:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900241be:	1c53      	adds	r3, r2, #1
900241c0:	4321      	orrs	r1, r4
900241c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900241c6:	0c0a      	lsrs	r2, r1, #16
900241c8:	f3c1 2407 	ubfx	r4, r1, #8, #8
900241cc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900241d0:	b2c8      	uxtb	r0, r1
900241d2:	fb12 f207 	smulbb	r2, r2, r7
900241d6:	fb14 f407 	smulbb	r4, r4, r7
900241da:	b2db      	uxtb	r3, r3
900241dc:	fb10 f007 	smulbb	r0, r0, r7
900241e0:	fb05 2503 	mla	r5, r5, r3, r2
900241e4:	10f2      	asrs	r2, r6, #3
900241e6:	00f6      	lsls	r6, r6, #3
900241e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900241ec:	b2ad      	uxth	r5, r5
900241ee:	b2f6      	uxtb	r6, r6
900241f0:	fb02 4203 	mla	r2, r2, r3, r4
900241f4:	fb06 0303 	mla	r3, r6, r3, r0
900241f8:	b294      	uxth	r4, r2
900241fa:	b299      	uxth	r1, r3
900241fc:	1c6b      	adds	r3, r5, #1
900241fe:	1c62      	adds	r2, r4, #1
90024200:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024204:	1c4b      	adds	r3, r1, #1
90024206:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9002420a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002420e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024212:	0952      	lsrs	r2, r2, #5
90024214:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024218:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002421c:	432b      	orrs	r3, r5
9002421e:	4313      	orrs	r3, r2
90024220:	9a02      	ldr	r2, [sp, #8]
90024222:	8013      	strh	r3, [r2, #0]
90024224:	b005      	add	sp, #20
90024226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002422a:	2500      	movs	r5, #0
9002422c:	e6e9      	b.n	90024002 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
9002422e:	2100      	movs	r1, #0
90024230:	460d      	mov	r5, r1
90024232:	e6f3      	b.n	9002401c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90024234:	2100      	movs	r1, #0
90024236:	e6f1      	b.n	9002401c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90024238:	4631      	mov	r1, r6
9002423a:	e6ef      	b.n	9002401c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002423c:	2400      	movs	r4, #0
9002423e:	e700      	b.n	90024042 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90024240:	2200      	movs	r2, #0
90024242:	4614      	mov	r4, r2
90024244:	e70b      	b.n	9002405e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90024246:	4602      	mov	r2, r0
90024248:	4604      	mov	r4, r0
9002424a:	e708      	b.n	9002405e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002424c:	2200      	movs	r2, #0
9002424e:	e706      	b.n	9002405e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90024250:	4632      	mov	r2, r6
90024252:	e704      	b.n	9002405e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90024254 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024258:	b09f      	sub	sp, #124	; 0x7c
9002425a:	921b      	str	r2, [sp, #108]	; 0x6c
9002425c:	9309      	str	r3, [sp, #36]	; 0x24
9002425e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90024260:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
90024264:	901d      	str	r0, [sp, #116]	; 0x74
90024266:	931c      	str	r3, [sp, #112]	; 0x70
90024268:	6850      	ldr	r0, [r2, #4]
9002426a:	9119      	str	r1, [sp, #100]	; 0x64
9002426c:	6812      	ldr	r2, [r2, #0]
9002426e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90024270:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
90024274:	fb00 1303 	mla	r3, r0, r3, r1
90024278:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002427c:	930c      	str	r3, [sp, #48]	; 0x30
9002427e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90024280:	681b      	ldr	r3, [r3, #0]
90024282:	9312      	str	r3, [sp, #72]	; 0x48
90024284:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90024286:	685e      	ldr	r6, [r3, #4]
90024288:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
9002428c:	3604      	adds	r6, #4
9002428e:	930d      	str	r3, [sp, #52]	; 0x34
90024290:	9b19      	ldr	r3, [sp, #100]	; 0x64
90024292:	2b00      	cmp	r3, #0
90024294:	dc03      	bgt.n	9002429e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90024296:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90024298:	2b00      	cmp	r3, #0
9002429a:	f340 8387 	ble.w	900249ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9002429e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900242a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900242a4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900242a8:	1e48      	subs	r0, r1, #1
900242aa:	1e57      	subs	r7, r2, #1
900242ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
900242ae:	2b00      	cmp	r3, #0
900242b0:	f340 8194 	ble.w	900245dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900242b4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900242b6:	142b      	asrs	r3, r5, #16
900242b8:	ea5f 4c24 	movs.w	ip, r4, asr #16
900242bc:	d406      	bmi.n	900242cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900242be:	4584      	cmp	ip, r0
900242c0:	da04      	bge.n	900242cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900242c2:	2b00      	cmp	r3, #0
900242c4:	db02      	blt.n	900242cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900242c6:	42bb      	cmp	r3, r7
900242c8:	f2c0 8189 	blt.w	900245de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900242cc:	f11c 0c01 	adds.w	ip, ip, #1
900242d0:	f100 8177 	bmi.w	900245c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900242d4:	4561      	cmp	r1, ip
900242d6:	f2c0 8174 	blt.w	900245c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900242da:	3301      	adds	r3, #1
900242dc:	f100 8171 	bmi.w	900245c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900242e0:	429a      	cmp	r2, r3
900242e2:	f2c0 816e 	blt.w	900245c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900242e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900242e8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
900242ea:	931a      	str	r3, [sp, #104]	; 0x68
900242ec:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900242ee:	2b00      	cmp	r3, #0
900242f0:	f340 8193 	ble.w	9002461a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
900242f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900242f6:	ea4f 4c25 	mov.w	ip, r5, asr #16
900242fa:	f3c5 3103 	ubfx	r1, r5, #12, #4
900242fe:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024302:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90024304:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90024308:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002430a:	141b      	asrs	r3, r3, #16
9002430c:	f100 81d6 	bmi.w	900246bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90024310:	f100 38ff 	add.w	r8, r0, #4294967295
90024314:	4543      	cmp	r3, r8
90024316:	f280 81d1 	bge.w	900246bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002431a:	f1bc 0f00 	cmp.w	ip, #0
9002431e:	f2c0 81cd 	blt.w	900246bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90024322:	f10e 38ff 	add.w	r8, lr, #4294967295
90024326:	45c4      	cmp	ip, r8
90024328:	f280 81c8 	bge.w	900246bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002432c:	b200      	sxth	r0, r0
9002432e:	9c12      	ldr	r4, [sp, #72]	; 0x48
90024330:	fb0c 3300 	mla	r3, ip, r0, r3
90024334:	eb04 0803 	add.w	r8, r4, r3
90024338:	5ce3      	ldrb	r3, [r4, r3]
9002433a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002433e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90024342:	2a00      	cmp	r2, #0
90024344:	f000 81af 	beq.w	900246a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024348:	f898 c001 	ldrb.w	ip, [r8, #1]
9002434c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90024350:	940e      	str	r4, [sp, #56]	; 0x38
90024352:	0e24      	lsrs	r4, r4, #24
90024354:	9415      	str	r4, [sp, #84]	; 0x54
90024356:	b179      	cbz	r1, 90024378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90024358:	eb08 0c00 	add.w	ip, r8, r0
9002435c:	f818 0000 	ldrb.w	r0, [r8, r0]
90024360:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90024364:	900a      	str	r0, [sp, #40]	; 0x28
90024366:	0e00      	lsrs	r0, r0, #24
90024368:	9013      	str	r0, [sp, #76]	; 0x4c
9002436a:	f89c 0001 	ldrb.w	r0, [ip, #1]
9002436e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90024372:	900f      	str	r0, [sp, #60]	; 0x3c
90024374:	0e00      	lsrs	r0, r0, #24
90024376:	9016      	str	r0, [sp, #88]	; 0x58
90024378:	b292      	uxth	r2, r2
9002437a:	9815      	ldr	r0, [sp, #84]	; 0x54
9002437c:	b289      	uxth	r1, r1
9002437e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90024380:	fb02 f901 	mul.w	r9, r2, r1
90024384:	0112      	lsls	r2, r2, #4
90024386:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002438a:	eba2 0809 	sub.w	r8, r2, r9
9002438e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90024392:	b289      	uxth	r1, r1
90024394:	fa1f f888 	uxth.w	r8, r8
90024398:	1a52      	subs	r2, r2, r1
9002439a:	fb08 f000 	mul.w	r0, r8, r0
9002439e:	b292      	uxth	r2, r2
900243a0:	fb02 000e 	mla	r0, r2, lr, r0
900243a4:	fb01 0004 	mla	r0, r1, r4, r0
900243a8:	9c16      	ldr	r4, [sp, #88]	; 0x58
900243aa:	fb09 0004 	mla	r0, r9, r4, r0
900243ae:	f3c0 2007 	ubfx	r0, r0, #8, #8
900243b2:	2800      	cmp	r0, #0
900243b4:	f000 80fa 	beq.w	900245ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900243b8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900243bc:	d01b      	beq.n	900243f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900243be:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900243c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900243c6:	fb0e fa0a 	mul.w	sl, lr, sl
900243ca:	fb0e fe03 	mul.w	lr, lr, r3
900243ce:	ea4f 231a 	mov.w	r3, sl, lsr #8
900243d2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900243d6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900243da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900243de:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900243e2:	4453      	add	r3, sl
900243e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900243e8:	0a1b      	lsrs	r3, r3, #8
900243ea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900243ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900243f2:	ea43 030c 	orr.w	r3, r3, ip
900243f6:	9c15      	ldr	r4, [sp, #84]	; 0x54
900243f8:	2cff      	cmp	r4, #255	; 0xff
900243fa:	d021      	beq.n	90024440 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900243fc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900243fe:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90024402:	9c15      	ldr	r4, [sp, #84]	; 0x54
90024404:	fb04 fb0b 	mul.w	fp, r4, fp
90024408:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002440a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002440e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90024410:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024414:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024418:	fb04 fa0a 	mul.w	sl, r4, sl
9002441c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024420:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90024424:	44de      	add	lr, fp
90024426:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002442a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002442e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024432:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024436:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002443a:	ea4e 040a 	orr.w	r4, lr, sl
9002443e:	940e      	str	r4, [sp, #56]	; 0x38
90024440:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90024442:	2cff      	cmp	r4, #255	; 0xff
90024444:	d021      	beq.n	9002448a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90024446:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90024448:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002444c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002444e:	fb04 fb0b 	mul.w	fp, r4, fp
90024452:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90024454:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024458:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002445a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002445e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024462:	fb04 fa0a 	mul.w	sl, r4, sl
90024466:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002446a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002446e:	44de      	add	lr, fp
90024470:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024474:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024478:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002447c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024480:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024484:	ea4e 040a 	orr.w	r4, lr, sl
90024488:	940a      	str	r4, [sp, #40]	; 0x28
9002448a:	9c16      	ldr	r4, [sp, #88]	; 0x58
9002448c:	2cff      	cmp	r4, #255	; 0xff
9002448e:	d021      	beq.n	900244d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90024490:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90024492:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90024496:	9c16      	ldr	r4, [sp, #88]	; 0x58
90024498:	fb04 fb0b 	mul.w	fp, r4, fp
9002449c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002449e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900244a2:	9c16      	ldr	r4, [sp, #88]	; 0x58
900244a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900244a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900244ac:	fb04 fa0a 	mul.w	sl, r4, sl
900244b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900244b4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900244b8:	44de      	add	lr, fp
900244ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900244be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900244c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900244c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900244ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900244ce:	ea4e 040a 	orr.w	r4, lr, sl
900244d2:	940f      	str	r4, [sp, #60]	; 0x3c
900244d4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900244d6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
900244da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900244de:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900244e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900244e4:	fb08 fc0c 	mul.w	ip, r8, ip
900244e8:	fb02 cc0e 	mla	ip, r2, lr, ip
900244ec:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900244f0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900244f2:	fb01 cc0e 	mla	ip, r1, lr, ip
900244f6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900244fa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900244fc:	fb09 cc0e 	mla	ip, r9, lr, ip
90024500:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90024504:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90024506:	fb08 f80e 	mul.w	r8, r8, lr
9002450a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002450e:	fb02 8303 	mla	r3, r2, r3, r8
90024512:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90024514:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024518:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002451c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002451e:	fb01 330a 	mla	r3, r1, sl, r3
90024522:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
90024526:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90024528:	fb09 3901 	mla	r9, r9, r1, r3
9002452c:	883b      	ldrh	r3, [r7, #0]
9002452e:	4342      	muls	r2, r0
90024530:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024534:	1c50      	adds	r0, r2, #1
90024536:	1219      	asrs	r1, r3, #8
90024538:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9002453c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90024540:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024544:	ea4c 0c09 	orr.w	ip, ip, r9
90024548:	ea6f 2010 	mvn.w	r0, r0, lsr #8
9002454c:	ea4f 421c 	mov.w	r2, ip, lsr #16
90024550:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90024554:	b2c0      	uxtb	r0, r0
90024556:	fb12 f204 	smulbb	r2, r2, r4
9002455a:	fa5f fc8c 	uxtb.w	ip, ip
9002455e:	fb1e fe04 	smulbb	lr, lr, r4
90024562:	fb01 2100 	mla	r1, r1, r0, r2
90024566:	10da      	asrs	r2, r3, #3
90024568:	fb1c fc04 	smulbb	ip, ip, r4
9002456c:	00db      	lsls	r3, r3, #3
9002456e:	b289      	uxth	r1, r1
90024570:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90024574:	b2db      	uxtb	r3, r3
90024576:	fb02 e200 	mla	r2, r2, r0, lr
9002457a:	fb03 c300 	mla	r3, r3, r0, ip
9002457e:	b292      	uxth	r2, r2
90024580:	fa1f fc83 	uxth.w	ip, r3
90024584:	1c4b      	adds	r3, r1, #1
90024586:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002458a:	f10c 0301 	add.w	r3, ip, #1
9002458e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90024592:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90024596:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002459a:	430b      	orrs	r3, r1
9002459c:	1c51      	adds	r1, r2, #1
9002459e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900245a2:	0952      	lsrs	r2, r2, #5
900245a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900245a8:	4313      	orrs	r3, r2
900245aa:	803b      	strh	r3, [r7, #0]
900245ac:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900245ae:	3702      	adds	r7, #2
900245b0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900245b2:	441a      	add	r2, r3
900245b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900245b6:	441d      	add	r5, r3
900245b8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900245ba:	9229      	str	r2, [sp, #164]	; 0xa4
900245bc:	3b01      	subs	r3, #1
900245be:	931a      	str	r3, [sp, #104]	; 0x68
900245c0:	e694      	b.n	900242ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900245c2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900245c4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900245c6:	441c      	add	r4, r3
900245c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900245ca:	441d      	add	r5, r3
900245cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900245ce:	9429      	str	r4, [sp, #164]	; 0xa4
900245d0:	3b01      	subs	r3, #1
900245d2:	9309      	str	r3, [sp, #36]	; 0x24
900245d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900245d6:	3302      	adds	r3, #2
900245d8:	930c      	str	r3, [sp, #48]	; 0x30
900245da:	e667      	b.n	900242ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900245dc:	d024      	beq.n	90024628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
900245de:	9b09      	ldr	r3, [sp, #36]	; 0x24
900245e0:	982b      	ldr	r0, [sp, #172]	; 0xac
900245e2:	3b01      	subs	r3, #1
900245e4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900245e6:	fb00 4003 	mla	r0, r0, r3, r4
900245ea:	1400      	asrs	r0, r0, #16
900245ec:	f53f ae7b 	bmi.w	900242e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900245f0:	3901      	subs	r1, #1
900245f2:	4288      	cmp	r0, r1
900245f4:	f6bf ae77 	bge.w	900242e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900245f8:	992c      	ldr	r1, [sp, #176]	; 0xb0
900245fa:	fb01 5303 	mla	r3, r1, r3, r5
900245fe:	141b      	asrs	r3, r3, #16
90024600:	f53f ae71 	bmi.w	900242e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024604:	3a01      	subs	r2, #1
90024606:	4293      	cmp	r3, r2
90024608:	f6bf ae6d 	bge.w	900242e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002460c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90024610:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
90024614:	f1bb 0f00 	cmp.w	fp, #0
90024618:	dc70      	bgt.n	900246fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
9002461a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002461c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024620:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024622:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024626:	930c      	str	r3, [sp, #48]	; 0x30
90024628:	9b19      	ldr	r3, [sp, #100]	; 0x64
9002462a:	2b00      	cmp	r3, #0
9002462c:	f340 81be 	ble.w	900249ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90024630:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024634:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024636:	ee30 0a04 	vadd.f32	s0, s0, s8
9002463a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002463e:	eef0 6a62 	vmov.f32	s13, s5
90024642:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024646:	ee31 1a05 	vadd.f32	s2, s2, s10
9002464a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002464e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
90024652:	eef0 6a43 	vmov.f32	s13, s6
90024656:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002465a:	ee16 5a90 	vmov	r5, s13
9002465e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024662:	ee61 7a27 	vmul.f32	s15, s2, s15
90024666:	ee77 2a62 	vsub.f32	s5, s14, s5
9002466a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002466e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024672:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024676:	ee12 2a90 	vmov	r2, s5
9002467a:	eef0 2a47 	vmov.f32	s5, s14
9002467e:	fb92 f3f3 	sdiv	r3, r2, r3
90024682:	ee13 2a10 	vmov	r2, s6
90024686:	932b      	str	r3, [sp, #172]	; 0xac
90024688:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002468a:	eeb0 3a67 	vmov.f32	s6, s15
9002468e:	fb92 f3f3 	sdiv	r3, r2, r3
90024692:	932c      	str	r3, [sp, #176]	; 0xb0
90024694:	9b19      	ldr	r3, [sp, #100]	; 0x64
90024696:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90024698:	3b01      	subs	r3, #1
9002469a:	9319      	str	r3, [sp, #100]	; 0x64
9002469c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002469e:	bf08      	it	eq
900246a0:	4613      	moveq	r3, r2
900246a2:	9309      	str	r3, [sp, #36]	; 0x24
900246a4:	e5f4      	b.n	90024290 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900246a6:	2900      	cmp	r1, #0
900246a8:	f43f ae66 	beq.w	90024378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900246ac:	f818 0000 	ldrb.w	r0, [r8, r0]
900246b0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900246b4:	900a      	str	r0, [sp, #40]	; 0x28
900246b6:	0e00      	lsrs	r0, r0, #24
900246b8:	9013      	str	r0, [sp, #76]	; 0x4c
900246ba:	e65d      	b.n	90024378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900246bc:	f113 0801 	adds.w	r8, r3, #1
900246c0:	f53f af74 	bmi.w	900245ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900246c4:	4540      	cmp	r0, r8
900246c6:	f6ff af71 	blt.w	900245ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900246ca:	f11c 0801 	adds.w	r8, ip, #1
900246ce:	f53f af6d 	bmi.w	900245ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900246d2:	45c6      	cmp	lr, r8
900246d4:	f6ff af6a 	blt.w	900245ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900246d8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
900246da:	b200      	sxth	r0, r0
900246dc:	9302      	str	r3, [sp, #8]
900246de:	fa0f f38e 	sxth.w	r3, lr
900246e2:	9000      	str	r0, [sp, #0]
900246e4:	9301      	str	r3, [sp, #4]
900246e6:	4633      	mov	r3, r6
900246e8:	981d      	ldr	r0, [sp, #116]	; 0x74
900246ea:	e9cd 1405 	strd	r1, r4, [sp, #20]
900246ee:	e9cd c203 	strd	ip, r2, [sp, #12]
900246f2:	4639      	mov	r1, r7
900246f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
900246f6:	f7ff fc63 	bl	90023fc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
900246fa:	e757      	b.n	900245ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900246fc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900246fe:	f3c5 3003 	ubfx	r0, r5, #12, #4
90024702:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90024704:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024708:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9002470a:	1427      	asrs	r7, r4, #16
9002470c:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002470e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024712:	142b      	asrs	r3, r5, #16
90024714:	fb01 7303 	mla	r3, r1, r3, r7
90024718:	18e7      	adds	r7, r4, r3
9002471a:	5ce3      	ldrb	r3, [r4, r3]
9002471c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90024720:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024724:	2a00      	cmp	r2, #0
90024726:	f000 8137 	beq.w	90024998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
9002472a:	f897 e001 	ldrb.w	lr, [r7, #1]
9002472e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90024732:	9410      	str	r4, [sp, #64]	; 0x40
90024734:	0e24      	lsrs	r4, r4, #24
90024736:	9417      	str	r4, [sp, #92]	; 0x5c
90024738:	b170      	cbz	r0, 90024758 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002473a:	eb07 0e01 	add.w	lr, r7, r1
9002473e:	5c79      	ldrb	r1, [r7, r1]
90024740:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024744:	910b      	str	r1, [sp, #44]	; 0x2c
90024746:	0e09      	lsrs	r1, r1, #24
90024748:	9114      	str	r1, [sp, #80]	; 0x50
9002474a:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002474e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024752:	9111      	str	r1, [sp, #68]	; 0x44
90024754:	0e09      	lsrs	r1, r1, #24
90024756:	9118      	str	r1, [sp, #96]	; 0x60
90024758:	b292      	uxth	r2, r2
9002475a:	9917      	ldr	r1, [sp, #92]	; 0x5c
9002475c:	b280      	uxth	r0, r0
9002475e:	9c14      	ldr	r4, [sp, #80]	; 0x50
90024760:	fb02 f800 	mul.w	r8, r2, r0
90024764:	0112      	lsls	r2, r2, #4
90024766:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002476a:	eba2 0e08 	sub.w	lr, r2, r8
9002476e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90024772:	b280      	uxth	r0, r0
90024774:	fa1f fe8e 	uxth.w	lr, lr
90024778:	1a12      	subs	r2, r2, r0
9002477a:	fb0e f101 	mul.w	r1, lr, r1
9002477e:	b292      	uxth	r2, r2
90024780:	fb02 110c 	mla	r1, r2, ip, r1
90024784:	fb00 1104 	mla	r1, r0, r4, r1
90024788:	9c18      	ldr	r4, [sp, #96]	; 0x60
9002478a:	fb08 1104 	mla	r1, r8, r4, r1
9002478e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90024792:	2900      	cmp	r1, #0
90024794:	f000 80f5 	beq.w	90024982 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90024798:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9002479c:	d019      	beq.n	900247d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
9002479e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900247a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900247a6:	fb0c fa0a 	mul.w	sl, ip, sl
900247aa:	fb0c fc03 	mul.w	ip, ip, r3
900247ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
900247b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900247b6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900247ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900247be:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900247c2:	4453      	add	r3, sl
900247c4:	0a3f      	lsrs	r7, r7, #8
900247c6:	0a1b      	lsrs	r3, r3, #8
900247c8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900247cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900247d0:	433b      	orrs	r3, r7
900247d2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900247d4:	2cff      	cmp	r4, #255	; 0xff
900247d6:	d020      	beq.n	9002481a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
900247d8:	9c10      	ldr	r4, [sp, #64]	; 0x40
900247da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900247de:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900247e0:	4367      	muls	r7, r4
900247e2:	9c10      	ldr	r4, [sp, #64]	; 0x40
900247e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900247e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900247ec:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900247ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900247f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900247f6:	fb04 fa0a 	mul.w	sl, r4, sl
900247fa:	44bc      	add	ip, r7
900247fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024800:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024804:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024808:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002480c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024810:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024814:	ea4c 040a 	orr.w	r4, ip, sl
90024818:	9410      	str	r4, [sp, #64]	; 0x40
9002481a:	9c14      	ldr	r4, [sp, #80]	; 0x50
9002481c:	2cff      	cmp	r4, #255	; 0xff
9002481e:	d020      	beq.n	90024862 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90024820:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024822:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90024826:	9c14      	ldr	r4, [sp, #80]	; 0x50
90024828:	4367      	muls	r7, r4
9002482a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002482c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024830:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024834:	9c14      	ldr	r4, [sp, #80]	; 0x50
90024836:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002483a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002483e:	fb04 fa0a 	mul.w	sl, r4, sl
90024842:	44bc      	add	ip, r7
90024844:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024848:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002484c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024850:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024854:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024858:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002485c:	ea4c 040a 	orr.w	r4, ip, sl
90024860:	940b      	str	r4, [sp, #44]	; 0x2c
90024862:	9c18      	ldr	r4, [sp, #96]	; 0x60
90024864:	2cff      	cmp	r4, #255	; 0xff
90024866:	d020      	beq.n	900248aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90024868:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002486a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002486e:	9c18      	ldr	r4, [sp, #96]	; 0x60
90024870:	4367      	muls	r7, r4
90024872:	9c11      	ldr	r4, [sp, #68]	; 0x44
90024874:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024878:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002487c:	9c18      	ldr	r4, [sp, #96]	; 0x60
9002487e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024882:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024886:	fb04 fa0a 	mul.w	sl, r4, sl
9002488a:	44bc      	add	ip, r7
9002488c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024890:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024894:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024898:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002489c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900248a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900248a4:	ea4c 040a 	orr.w	r4, ip, sl
900248a8:	9411      	str	r4, [sp, #68]	; 0x44
900248aa:	9c10      	ldr	r4, [sp, #64]	; 0x40
900248ac:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900248b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900248b4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900248b8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900248ba:	fb0e f707 	mul.w	r7, lr, r7
900248be:	fb02 770c 	mla	r7, r2, ip, r7
900248c2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900248c6:	9c11      	ldr	r4, [sp, #68]	; 0x44
900248c8:	fb00 770c 	mla	r7, r0, ip, r7
900248cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900248d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
900248d2:	fb08 770c 	mla	r7, r8, ip, r7
900248d6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
900248da:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900248dc:	fb0e fe0c 	mul.w	lr, lr, ip
900248e0:	0a3f      	lsrs	r7, r7, #8
900248e2:	fb02 e303 	mla	r3, r2, r3, lr
900248e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900248e8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900248ec:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
900248f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
900248f2:	fb00 330a 	mla	r3, r0, sl, r3
900248f6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
900248fa:	f8b9 0000 	ldrh.w	r0, [r9]
900248fe:	fb08 3c0c 	mla	ip, r8, ip, r3
90024902:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90024904:	1202      	asrs	r2, r0, #8
90024906:	434b      	muls	r3, r1
90024908:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002490c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90024910:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024914:	1c59      	adds	r1, r3, #1
90024916:	ea47 070c 	orr.w	r7, r7, ip
9002491a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002491e:	0c3b      	lsrs	r3, r7, #16
90024920:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90024924:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90024928:	b2ff      	uxtb	r7, r7
9002492a:	fb13 f304 	smulbb	r3, r3, r4
9002492e:	b2c9      	uxtb	r1, r1
90024930:	fb1c fc04 	smulbb	ip, ip, r4
90024934:	fb02 3201 	mla	r2, r2, r1, r3
90024938:	10c3      	asrs	r3, r0, #3
9002493a:	fb17 f704 	smulbb	r7, r7, r4
9002493e:	00c0      	lsls	r0, r0, #3
90024940:	b292      	uxth	r2, r2
90024942:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90024946:	b2c0      	uxtb	r0, r0
90024948:	fb03 c301 	mla	r3, r3, r1, ip
9002494c:	f102 0c01 	add.w	ip, r2, #1
90024950:	fb00 7001 	mla	r0, r0, r1, r7
90024954:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90024958:	b280      	uxth	r0, r0
9002495a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
9002495e:	b29b      	uxth	r3, r3
90024960:	1c42      	adds	r2, r0, #1
90024962:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90024966:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002496a:	ea42 020c 	orr.w	r2, r2, ip
9002496e:	f103 0c01 	add.w	ip, r3, #1
90024972:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90024976:	095b      	lsrs	r3, r3, #5
90024978:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002497c:	431a      	orrs	r2, r3
9002497e:	f8a9 2000 	strh.w	r2, [r9]
90024982:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90024984:	f109 0902 	add.w	r9, r9, #2
90024988:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9002498a:	f10b 3bff 	add.w	fp, fp, #4294967295
9002498e:	441a      	add	r2, r3
90024990:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90024992:	9229      	str	r2, [sp, #164]	; 0xa4
90024994:	441d      	add	r5, r3
90024996:	e63d      	b.n	90024614 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90024998:	2800      	cmp	r0, #0
9002499a:	f43f aedd 	beq.w	90024758 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002499e:	5c79      	ldrb	r1, [r7, r1]
900249a0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900249a4:	910b      	str	r1, [sp, #44]	; 0x2c
900249a6:	0e09      	lsrs	r1, r1, #24
900249a8:	9114      	str	r1, [sp, #80]	; 0x50
900249aa:	e6d5      	b.n	90024758 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900249ac:	b01f      	add	sp, #124	; 0x7c
900249ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900249b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
900249b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900249b6:	b089      	sub	sp, #36	; 0x24
900249b8:	9101      	str	r1, [sp, #4]
900249ba:	9801      	ldr	r0, [sp, #4]
900249bc:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
900249c0:	8800      	ldrh	r0, [r0, #0]
900249c2:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
900249c6:	1206      	asrs	r6, r0, #8
900249c8:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
900249cc:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
900249d0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
900249d4:	9602      	str	r6, [sp, #8]
900249d6:	10c6      	asrs	r6, r0, #3
900249d8:	00c0      	lsls	r0, r0, #3
900249da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900249de:	b2c0      	uxtb	r0, r0
900249e0:	9603      	str	r6, [sp, #12]
900249e2:	9004      	str	r0, [sp, #16]
900249e4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
900249e8:	fb07 100c 	mla	r0, r7, ip, r1
900249ec:	2f00      	cmp	r7, #0
900249ee:	eb02 0e00 	add.w	lr, r2, r0
900249f2:	f2c0 810a 	blt.w	90024c0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900249f6:	45b8      	cmp	r8, r7
900249f8:	f340 8107 	ble.w	90024c0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900249fc:	2900      	cmp	r1, #0
900249fe:	f2c0 8102 	blt.w	90024c06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90024a02:	458c      	cmp	ip, r1
90024a04:	f340 80ff 	ble.w	90024c06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90024a08:	5c12      	ldrb	r2, [r2, r0]
90024a0a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90024a0e:	1c4a      	adds	r2, r1, #1
90024a10:	f100 80fe 	bmi.w	90024c10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90024a14:	4594      	cmp	ip, r2
90024a16:	f340 80fb 	ble.w	90024c10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90024a1a:	2d00      	cmp	r5, #0
90024a1c:	f000 80fa 	beq.w	90024c14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90024a20:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024a24:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90024a28:	3701      	adds	r7, #1
90024a2a:	f100 80f7 	bmi.w	90024c1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90024a2e:	45b8      	cmp	r8, r7
90024a30:	f340 80f4 	ble.w	90024c1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90024a34:	2c00      	cmp	r4, #0
90024a36:	f000 80f4 	beq.w	90024c22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90024a3a:	2900      	cmp	r1, #0
90024a3c:	eb0e 020c 	add.w	r2, lr, ip
90024a40:	f2c0 80ea 	blt.w	90024c18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90024a44:	458c      	cmp	ip, r1
90024a46:	f340 80e7 	ble.w	90024c18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90024a4a:	f81e 700c 	ldrb.w	r7, [lr, ip]
90024a4e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90024a52:	3101      	adds	r1, #1
90024a54:	f100 80e8 	bmi.w	90024c28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90024a58:	458c      	cmp	ip, r1
90024a5a:	f340 80e5 	ble.w	90024c28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90024a5e:	2d00      	cmp	r5, #0
90024a60:	f000 80e4 	beq.w	90024c2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90024a64:	7852      	ldrb	r2, [r2, #1]
90024a66:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90024a6a:	0e0b      	lsrs	r3, r1, #24
90024a6c:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
90024a70:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90024a74:	9300      	str	r3, [sp, #0]
90024a76:	b2a4      	uxth	r4, r4
90024a78:	b2ab      	uxth	r3, r5
90024a7a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
90024a7e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90024a82:	fb03 f904 	mul.w	r9, r3, r4
90024a86:	011b      	lsls	r3, r3, #4
90024a88:	fb0a f505 	mul.w	r5, sl, r5
90024a8c:	ea4f 6817 	mov.w	r8, r7, lsr #24
90024a90:	eba3 0e09 	sub.w	lr, r3, r9
90024a94:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
90024a98:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
90024a9c:	0a28      	lsrs	r0, r5, #8
90024a9e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
90024aa2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90024aa6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90024aaa:	fb0a f303 	mul.w	r3, sl, r3
90024aae:	fb08 f707 	mul.w	r7, r8, r7
90024ab2:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90024ab6:	4405      	add	r5, r0
90024ab8:	fb08 fc0c 	mul.w	ip, r8, ip
90024abc:	b2a4      	uxth	r4, r4
90024abe:	0a2d      	lsrs	r5, r5, #8
90024ac0:	fa1f fe8e 	uxth.w	lr, lr
90024ac4:	1b12      	subs	r2, r2, r4
90024ac6:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90024aca:	b292      	uxth	r2, r2
90024acc:	9005      	str	r0, [sp, #20]
90024ace:	f503 7080 	add.w	r0, r3, #256	; 0x100
90024ad2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90024ad6:	ea4f 201c 	mov.w	r0, ip, lsr #8
90024ada:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024ade:	0a1b      	lsrs	r3, r3, #8
90024ae0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90024ae4:	9306      	str	r3, [sp, #24]
90024ae6:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90024aea:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90024aee:	4460      	add	r0, ip
90024af0:	fb0b f303 	mul.w	r3, fp, r3
90024af4:	fb0b f606 	mul.w	r6, fp, r6
90024af8:	0a00      	lsrs	r0, r0, #8
90024afa:	0a1d      	lsrs	r5, r3, #8
90024afc:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
90024b00:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90024b04:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024b08:	441d      	add	r5, r3
90024b0a:	f506 7380 	add.w	r3, r6, #256	; 0x100
90024b0e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90024b12:	f507 7380 	add.w	r3, r7, #256	; 0x100
90024b16:	0a2d      	lsrs	r5, r5, #8
90024b18:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90024b1c:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
90024b20:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024b24:	0a36      	lsrs	r6, r6, #8
90024b26:	0a1b      	lsrs	r3, r3, #8
90024b28:	fb05 f50e 	mul.w	r5, r5, lr
90024b2c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90024b30:	9307      	str	r3, [sp, #28]
90024b32:	0e0b      	lsrs	r3, r1, #24
90024b34:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90024b38:	fb0e f606 	mul.w	r6, lr, r6
90024b3c:	435f      	muls	r7, r3
90024b3e:	4359      	muls	r1, r3
90024b40:	9b05      	ldr	r3, [sp, #20]
90024b42:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024b46:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024b4a:	fb03 5502 	mla	r5, r3, r2, r5
90024b4e:	9b06      	ldr	r3, [sp, #24]
90024b50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024b54:	fb0e fe0b 	mul.w	lr, lr, fp
90024b58:	44bc      	add	ip, r7
90024b5a:	f501 7780 	add.w	r7, r1, #256	; 0x100
90024b5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024b62:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90024b66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024b6a:	0a09      	lsrs	r1, r1, #8
90024b6c:	fb0c 5509 	mla	r5, ip, r9, r5
90024b70:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90024b74:	fb00 5504 	mla	r5, r0, r4, r5
90024b78:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
90024b7c:	9b07      	ldr	r3, [sp, #28]
90024b7e:	fb02 6000 	mla	r0, r2, r0, r6
90024b82:	0a2d      	lsrs	r5, r5, #8
90024b84:	fb02 e20a 	mla	r2, r2, sl, lr
90024b88:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024b8c:	fb09 0001 	mla	r0, r9, r1, r0
90024b90:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024b94:	fb04 0003 	mla	r0, r4, r3, r0
90024b98:	9b00      	ldr	r3, [sp, #0]
90024b9a:	fb04 2408 	mla	r4, r4, r8, r2
90024b9e:	9a04      	ldr	r2, [sp, #16]
90024ba0:	0a00      	lsrs	r0, r0, #8
90024ba2:	fb09 4903 	mla	r9, r9, r3, r4
90024ba6:	9b02      	ldr	r3, [sp, #8]
90024ba8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90024bac:	ea6f 2929 	mvn.w	r9, r9, asr #8
90024bb0:	4305      	orrs	r5, r0
90024bb2:	fa5f f989 	uxtb.w	r9, r9
90024bb6:	fb03 f109 	mul.w	r1, r3, r9
90024bba:	9b03      	ldr	r3, [sp, #12]
90024bbc:	fb03 f309 	mul.w	r3, r3, r9
90024bc0:	fb02 f909 	mul.w	r9, r2, r9
90024bc4:	1c4a      	adds	r2, r1, #1
90024bc6:	1c58      	adds	r0, r3, #1
90024bc8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024bcc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024bd0:	0c2a      	lsrs	r2, r5, #16
90024bd2:	0a2b      	lsrs	r3, r5, #8
90024bd4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90024bd8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90024bdc:	0212      	lsls	r2, r2, #8
90024bde:	00db      	lsls	r3, r3, #3
90024be0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90024be4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024be8:	4313      	orrs	r3, r2
90024bea:	f109 0201 	add.w	r2, r9, #1
90024bee:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90024bf2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90024bf6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90024bfa:	431d      	orrs	r5, r3
90024bfc:	9b01      	ldr	r3, [sp, #4]
90024bfe:	801d      	strh	r5, [r3, #0]
90024c00:	b009      	add	sp, #36	; 0x24
90024c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024c06:	2000      	movs	r0, #0
90024c08:	e701      	b.n	90024a0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90024c0a:	2600      	movs	r6, #0
90024c0c:	4630      	mov	r0, r6
90024c0e:	e70b      	b.n	90024a28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90024c10:	2600      	movs	r6, #0
90024c12:	e709      	b.n	90024a28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90024c14:	462e      	mov	r6, r5
90024c16:	e707      	b.n	90024a28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90024c18:	2700      	movs	r7, #0
90024c1a:	e71a      	b.n	90024a52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90024c1c:	2100      	movs	r1, #0
90024c1e:	460f      	mov	r7, r1
90024c20:	e723      	b.n	90024a6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90024c22:	4621      	mov	r1, r4
90024c24:	4627      	mov	r7, r4
90024c26:	e720      	b.n	90024a6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90024c28:	2100      	movs	r1, #0
90024c2a:	e71e      	b.n	90024a6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90024c2c:	4629      	mov	r1, r5
90024c2e:	e71c      	b.n	90024a6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90024c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024c30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024c34:	b09b      	sub	sp, #108	; 0x6c
90024c36:	9218      	str	r2, [sp, #96]	; 0x60
90024c38:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90024c3a:	9019      	str	r0, [sp, #100]	; 0x64
90024c3c:	9116      	str	r1, [sp, #88]	; 0x58
90024c3e:	6850      	ldr	r0, [r2, #4]
90024c40:	9307      	str	r3, [sp, #28]
90024c42:	6812      	ldr	r2, [r2, #0]
90024c44:	9d26      	ldr	r5, [sp, #152]	; 0x98
90024c46:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90024c4a:	fb00 1303 	mla	r3, r0, r3, r1
90024c4e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024c52:	930a      	str	r3, [sp, #40]	; 0x28
90024c54:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90024c56:	681b      	ldr	r3, [r3, #0]
90024c58:	930f      	str	r3, [sp, #60]	; 0x3c
90024c5a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90024c5c:	685e      	ldr	r6, [r3, #4]
90024c5e:	3604      	adds	r6, #4
90024c60:	9b16      	ldr	r3, [sp, #88]	; 0x58
90024c62:	2b00      	cmp	r3, #0
90024c64:	dc03      	bgt.n	90024c6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90024c66:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024c68:	2b00      	cmp	r3, #0
90024c6a:	f340 8373 	ble.w	90025354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90024c6e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90024c70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024c74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024c78:	1e48      	subs	r0, r1, #1
90024c7a:	1e57      	subs	r7, r2, #1
90024c7c:	9b07      	ldr	r3, [sp, #28]
90024c7e:	2b00      	cmp	r3, #0
90024c80:	f340 818f 	ble.w	90024fa2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90024c84:	9c25      	ldr	r4, [sp, #148]	; 0x94
90024c86:	142b      	asrs	r3, r5, #16
90024c88:	ea5f 4c24 	movs.w	ip, r4, asr #16
90024c8c:	d406      	bmi.n	90024c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024c8e:	4584      	cmp	ip, r0
90024c90:	da04      	bge.n	90024c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024c92:	2b00      	cmp	r3, #0
90024c94:	db02      	blt.n	90024c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024c96:	42bb      	cmp	r3, r7
90024c98:	f2c0 8184 	blt.w	90024fa4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90024c9c:	f11c 0c01 	adds.w	ip, ip, #1
90024ca0:	f100 8172 	bmi.w	90024f88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024ca4:	4561      	cmp	r1, ip
90024ca6:	f2c0 816f 	blt.w	90024f88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024caa:	3301      	adds	r3, #1
90024cac:	f100 816c 	bmi.w	90024f88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024cb0:	429a      	cmp	r2, r3
90024cb2:	f2c0 8169 	blt.w	90024f88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024cb6:	9b07      	ldr	r3, [sp, #28]
90024cb8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90024cba:	9317      	str	r3, [sp, #92]	; 0x5c
90024cbc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90024cbe:	2b00      	cmp	r3, #0
90024cc0:	f340 818e 	ble.w	90024fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90024cc4:	9b25      	ldr	r3, [sp, #148]	; 0x94
90024cc6:	ea4f 4c25 	mov.w	ip, r5, asr #16
90024cca:	f3c5 3003 	ubfx	r0, r5, #12, #4
90024cce:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024cd2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90024cd4:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90024cd8:	9b25      	ldr	r3, [sp, #148]	; 0x94
90024cda:	141b      	asrs	r3, r3, #16
90024cdc:	f100 81d1 	bmi.w	90025082 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024ce0:	f101 38ff 	add.w	r8, r1, #4294967295
90024ce4:	4543      	cmp	r3, r8
90024ce6:	f280 81cc 	bge.w	90025082 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024cea:	f1bc 0f00 	cmp.w	ip, #0
90024cee:	f2c0 81c8 	blt.w	90025082 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024cf2:	f10e 38ff 	add.w	r8, lr, #4294967295
90024cf6:	45c4      	cmp	ip, r8
90024cf8:	f280 81c3 	bge.w	90025082 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024cfc:	b209      	sxth	r1, r1
90024cfe:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90024d00:	fb0c 3301 	mla	r3, ip, r1, r3
90024d04:	eb04 0803 	add.w	r8, r4, r3
90024d08:	5ce3      	ldrb	r3, [r4, r3]
90024d0a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90024d0e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90024d12:	2a00      	cmp	r2, #0
90024d14:	f000 81aa 	beq.w	9002506c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90024d18:	f898 c001 	ldrb.w	ip, [r8, #1]
90024d1c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90024d20:	940b      	str	r4, [sp, #44]	; 0x2c
90024d22:	0e24      	lsrs	r4, r4, #24
90024d24:	9412      	str	r4, [sp, #72]	; 0x48
90024d26:	b178      	cbz	r0, 90024d48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90024d28:	eb08 0c01 	add.w	ip, r8, r1
90024d2c:	f818 1001 	ldrb.w	r1, [r8, r1]
90024d30:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024d34:	9108      	str	r1, [sp, #32]
90024d36:	0e09      	lsrs	r1, r1, #24
90024d38:	9110      	str	r1, [sp, #64]	; 0x40
90024d3a:	f89c 1001 	ldrb.w	r1, [ip, #1]
90024d3e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024d42:	910c      	str	r1, [sp, #48]	; 0x30
90024d44:	0e09      	lsrs	r1, r1, #24
90024d46:	9113      	str	r1, [sp, #76]	; 0x4c
90024d48:	b292      	uxth	r2, r2
90024d4a:	9912      	ldr	r1, [sp, #72]	; 0x48
90024d4c:	b280      	uxth	r0, r0
90024d4e:	9c10      	ldr	r4, [sp, #64]	; 0x40
90024d50:	fb02 f900 	mul.w	r9, r2, r0
90024d54:	0112      	lsls	r2, r2, #4
90024d56:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90024d5a:	eba2 0809 	sub.w	r8, r2, r9
90024d5e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90024d62:	b280      	uxth	r0, r0
90024d64:	fa1f f888 	uxth.w	r8, r8
90024d68:	1a12      	subs	r2, r2, r0
90024d6a:	fb08 f101 	mul.w	r1, r8, r1
90024d6e:	b292      	uxth	r2, r2
90024d70:	fb02 110e 	mla	r1, r2, lr, r1
90024d74:	fb00 1104 	mla	r1, r0, r4, r1
90024d78:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90024d7a:	fb09 1104 	mla	r1, r9, r4, r1
90024d7e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90024d82:	2900      	cmp	r1, #0
90024d84:	f000 80f5 	beq.w	90024f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024d88:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90024d8c:	d01b      	beq.n	90024dc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024d8e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90024d92:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024d96:	fb0e fa0a 	mul.w	sl, lr, sl
90024d9a:	fb0e fe03 	mul.w	lr, lr, r3
90024d9e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024da2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90024da6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90024daa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024dae:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90024db2:	4453      	add	r3, sl
90024db4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024db8:	0a1b      	lsrs	r3, r3, #8
90024dba:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024dbe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024dc2:	ea43 030c 	orr.w	r3, r3, ip
90024dc6:	9c12      	ldr	r4, [sp, #72]	; 0x48
90024dc8:	2cff      	cmp	r4, #255	; 0xff
90024dca:	d021      	beq.n	90024e10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90024dcc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024dce:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90024dd2:	9c12      	ldr	r4, [sp, #72]	; 0x48
90024dd4:	fb04 fb0b 	mul.w	fp, r4, fp
90024dd8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024dda:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024dde:	9c12      	ldr	r4, [sp, #72]	; 0x48
90024de0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024de4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024de8:	fb04 fa0a 	mul.w	sl, r4, sl
90024dec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024df0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90024df4:	44de      	add	lr, fp
90024df6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024dfa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024dfe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024e02:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024e06:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024e0a:	ea4e 040a 	orr.w	r4, lr, sl
90024e0e:	940b      	str	r4, [sp, #44]	; 0x2c
90024e10:	9c10      	ldr	r4, [sp, #64]	; 0x40
90024e12:	2cff      	cmp	r4, #255	; 0xff
90024e14:	d021      	beq.n	90024e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90024e16:	9c08      	ldr	r4, [sp, #32]
90024e18:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90024e1c:	9c10      	ldr	r4, [sp, #64]	; 0x40
90024e1e:	fb04 fb0b 	mul.w	fp, r4, fp
90024e22:	9c08      	ldr	r4, [sp, #32]
90024e24:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024e28:	9c10      	ldr	r4, [sp, #64]	; 0x40
90024e2a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024e2e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024e32:	fb04 fa0a 	mul.w	sl, r4, sl
90024e36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024e3a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90024e3e:	44de      	add	lr, fp
90024e40:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024e44:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024e48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024e4c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024e50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024e54:	ea4e 040a 	orr.w	r4, lr, sl
90024e58:	9408      	str	r4, [sp, #32]
90024e5a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90024e5c:	2cff      	cmp	r4, #255	; 0xff
90024e5e:	d021      	beq.n	90024ea4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90024e60:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90024e62:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90024e66:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90024e68:	fb04 fb0b 	mul.w	fp, r4, fp
90024e6c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90024e6e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024e72:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90024e74:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024e78:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024e7c:	fb04 fa0a 	mul.w	sl, r4, sl
90024e80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024e84:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90024e88:	44de      	add	lr, fp
90024e8a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024e8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024e92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024e96:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024e9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024e9e:	ea4e 040a 	orr.w	r4, lr, sl
90024ea2:	940c      	str	r4, [sp, #48]	; 0x30
90024ea4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024ea6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90024eaa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024eae:	43c9      	mvns	r1, r1
90024eb0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90024eb4:	9c08      	ldr	r4, [sp, #32]
90024eb6:	fb08 fc0c 	mul.w	ip, r8, ip
90024eba:	fb02 cc0e 	mla	ip, r2, lr, ip
90024ebe:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90024ec2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90024ec4:	fb00 cc0e 	mla	ip, r0, lr, ip
90024ec8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90024ecc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024ece:	fb09 cc0e 	mla	ip, r9, lr, ip
90024ed2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90024ed6:	fb08 f80e 	mul.w	r8, r8, lr
90024eda:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024ede:	fa5f fe81 	uxtb.w	lr, r1
90024ee2:	fb02 8303 	mla	r3, r2, r3, r8
90024ee6:	9a08      	ldr	r2, [sp, #32]
90024ee8:	f8b7 8000 	ldrh.w	r8, [r7]
90024eec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024ef0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90024ef4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90024ef6:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90024efa:	fb00 330a 	mla	r3, r0, sl, r3
90024efe:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
90024f02:	ea4f 2228 	mov.w	r2, r8, asr #8
90024f06:	fb09 3900 	mla	r9, r9, r0, r3
90024f0a:	ea4f 00e8 	mov.w	r0, r8, asr #3
90024f0e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90024f12:	b2c9      	uxtb	r1, r1
90024f14:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024f18:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024f1c:	fb02 f20e 	mul.w	r2, r2, lr
90024f20:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90024f24:	fb00 f00e 	mul.w	r0, r0, lr
90024f28:	1c53      	adds	r3, r2, #1
90024f2a:	fb01 f10e 	mul.w	r1, r1, lr
90024f2e:	ea4c 0c09 	orr.w	ip, ip, r9
90024f32:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90024f36:	ea4f 431c 	mov.w	r3, ip, lsr #16
90024f3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024f3e:	4a60      	ldr	r2, [pc, #384]	; (900250c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90024f40:	b2db      	uxtb	r3, r3
90024f42:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90024f46:	1c43      	adds	r3, r0, #1
90024f48:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024f4c:	ea4f 231c 	mov.w	r3, ip, lsr #8
90024f50:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90024f54:	00db      	lsls	r3, r3, #3
90024f56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024f5a:	4313      	orrs	r3, r2
90024f5c:	1c4a      	adds	r2, r1, #1
90024f5e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024f62:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90024f66:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90024f6a:	ea4c 0c03 	orr.w	ip, ip, r3
90024f6e:	f8a7 c000 	strh.w	ip, [r7]
90024f72:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90024f74:	3702      	adds	r7, #2
90024f76:	9a25      	ldr	r2, [sp, #148]	; 0x94
90024f78:	441a      	add	r2, r3
90024f7a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024f7c:	441d      	add	r5, r3
90024f7e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90024f80:	9225      	str	r2, [sp, #148]	; 0x94
90024f82:	3b01      	subs	r3, #1
90024f84:	9317      	str	r3, [sp, #92]	; 0x5c
90024f86:	e699      	b.n	90024cbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90024f88:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90024f8a:	9c25      	ldr	r4, [sp, #148]	; 0x94
90024f8c:	441c      	add	r4, r3
90024f8e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024f90:	441d      	add	r5, r3
90024f92:	9b07      	ldr	r3, [sp, #28]
90024f94:	9425      	str	r4, [sp, #148]	; 0x94
90024f96:	3b01      	subs	r3, #1
90024f98:	9307      	str	r3, [sp, #28]
90024f9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024f9c:	3302      	adds	r3, #2
90024f9e:	930a      	str	r3, [sp, #40]	; 0x28
90024fa0:	e66c      	b.n	90024c7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90024fa2:	d024      	beq.n	90024fee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90024fa4:	9b07      	ldr	r3, [sp, #28]
90024fa6:	9827      	ldr	r0, [sp, #156]	; 0x9c
90024fa8:	3b01      	subs	r3, #1
90024faa:	9c25      	ldr	r4, [sp, #148]	; 0x94
90024fac:	fb00 4003 	mla	r0, r0, r3, r4
90024fb0:	1400      	asrs	r0, r0, #16
90024fb2:	f53f ae80 	bmi.w	90024cb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024fb6:	3901      	subs	r1, #1
90024fb8:	4288      	cmp	r0, r1
90024fba:	f6bf ae7c 	bge.w	90024cb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024fbe:	9928      	ldr	r1, [sp, #160]	; 0xa0
90024fc0:	fb01 5303 	mla	r3, r1, r3, r5
90024fc4:	141b      	asrs	r3, r3, #16
90024fc6:	f53f ae76 	bmi.w	90024cb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024fca:	3a01      	subs	r2, #1
90024fcc:	4293      	cmp	r3, r2
90024fce:	f6bf ae72 	bge.w	90024cb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024fd2:	f8dd b01c 	ldr.w	fp, [sp, #28]
90024fd6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90024fda:	f1bb 0f00 	cmp.w	fp, #0
90024fde:	dc71      	bgt.n	900250c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024fe0:	9b07      	ldr	r3, [sp, #28]
90024fe2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024fe6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024fe8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024fec:	930a      	str	r3, [sp, #40]	; 0x28
90024fee:	9b16      	ldr	r3, [sp, #88]	; 0x58
90024ff0:	2b00      	cmp	r3, #0
90024ff2:	f340 81af 	ble.w	90025354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90024ff6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024ffa:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024ffc:	ee30 0a04 	vadd.f32	s0, s0, s8
90025000:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025004:	eef0 6a62 	vmov.f32	s13, s5
90025008:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002500c:	ee31 1a05 	vadd.f32	s2, s2, s10
90025010:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025014:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90025018:	eef0 6a43 	vmov.f32	s13, s6
9002501c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025020:	ee16 5a90 	vmov	r5, s13
90025024:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025028:	ee61 7a27 	vmul.f32	s15, s2, s15
9002502c:	ee77 2a62 	vsub.f32	s5, s14, s5
90025030:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025034:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025038:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002503c:	ee12 2a90 	vmov	r2, s5
90025040:	eef0 2a47 	vmov.f32	s5, s14
90025044:	fb92 f3f3 	sdiv	r3, r2, r3
90025048:	ee13 2a10 	vmov	r2, s6
9002504c:	9327      	str	r3, [sp, #156]	; 0x9c
9002504e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025050:	eeb0 3a67 	vmov.f32	s6, s15
90025054:	fb92 f3f3 	sdiv	r3, r2, r3
90025058:	9328      	str	r3, [sp, #160]	; 0xa0
9002505a:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002505c:	9a18      	ldr	r2, [sp, #96]	; 0x60
9002505e:	3b01      	subs	r3, #1
90025060:	9316      	str	r3, [sp, #88]	; 0x58
90025062:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025064:	bf08      	it	eq
90025066:	4613      	moveq	r3, r2
90025068:	9307      	str	r3, [sp, #28]
9002506a:	e5f9      	b.n	90024c60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9002506c:	2800      	cmp	r0, #0
9002506e:	f43f ae6b 	beq.w	90024d48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90025072:	f818 1001 	ldrb.w	r1, [r8, r1]
90025076:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002507a:	9108      	str	r1, [sp, #32]
9002507c:	0e09      	lsrs	r1, r1, #24
9002507e:	9110      	str	r1, [sp, #64]	; 0x40
90025080:	e662      	b.n	90024d48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90025082:	f113 0801 	adds.w	r8, r3, #1
90025086:	f53f af74 	bmi.w	90024f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002508a:	4541      	cmp	r1, r8
9002508c:	f6ff af71 	blt.w	90024f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025090:	f11c 0801 	adds.w	r8, ip, #1
90025094:	f53f af6d 	bmi.w	90024f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025098:	45c6      	cmp	lr, r8
9002509a:	f6ff af6a 	blt.w	90024f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002509e:	b209      	sxth	r1, r1
900250a0:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900250a4:	fa0f f38e 	sxth.w	r3, lr
900250a8:	9100      	str	r1, [sp, #0]
900250aa:	4639      	mov	r1, r7
900250ac:	9301      	str	r3, [sp, #4]
900250ae:	4633      	mov	r3, r6
900250b0:	e9cd 2004 	strd	r2, r0, [sp, #16]
900250b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900250b6:	9819      	ldr	r0, [sp, #100]	; 0x64
900250b8:	f7ff fc7b 	bl	900249b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900250bc:	e759      	b.n	90024f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900250be:	bf00      	nop
900250c0:	fffff800 	.word	0xfffff800
900250c4:	9b25      	ldr	r3, [sp, #148]	; 0x94
900250c6:	f3c5 3003 	ubfx	r0, r5, #12, #4
900250ca:	9c25      	ldr	r4, [sp, #148]	; 0x94
900250cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
900250d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900250d2:	1427      	asrs	r7, r4, #16
900250d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900250d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900250da:	142b      	asrs	r3, r5, #16
900250dc:	fb01 7303 	mla	r3, r1, r3, r7
900250e0:	18e7      	adds	r7, r4, r3
900250e2:	5ce3      	ldrb	r3, [r4, r3]
900250e4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900250e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900250ec:	2a00      	cmp	r2, #0
900250ee:	f000 8127 	beq.w	90025340 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
900250f2:	f897 e001 	ldrb.w	lr, [r7, #1]
900250f6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900250fa:	940d      	str	r4, [sp, #52]	; 0x34
900250fc:	0e24      	lsrs	r4, r4, #24
900250fe:	9414      	str	r4, [sp, #80]	; 0x50
90025100:	b170      	cbz	r0, 90025120 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90025102:	eb07 0e01 	add.w	lr, r7, r1
90025106:	5c79      	ldrb	r1, [r7, r1]
90025108:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002510c:	9109      	str	r1, [sp, #36]	; 0x24
9002510e:	0e09      	lsrs	r1, r1, #24
90025110:	9111      	str	r1, [sp, #68]	; 0x44
90025112:	f89e 1001 	ldrb.w	r1, [lr, #1]
90025116:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002511a:	910e      	str	r1, [sp, #56]	; 0x38
9002511c:	0e09      	lsrs	r1, r1, #24
9002511e:	9115      	str	r1, [sp, #84]	; 0x54
90025120:	b292      	uxth	r2, r2
90025122:	9c11      	ldr	r4, [sp, #68]	; 0x44
90025124:	b280      	uxth	r0, r0
90025126:	fb02 f800 	mul.w	r8, r2, r0
9002512a:	0112      	lsls	r2, r2, #4
9002512c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90025130:	eba2 0e08 	sub.w	lr, r2, r8
90025134:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90025138:	9a14      	ldr	r2, [sp, #80]	; 0x50
9002513a:	b280      	uxth	r0, r0
9002513c:	fa1f fe8e 	uxth.w	lr, lr
90025140:	1a09      	subs	r1, r1, r0
90025142:	fb0e f202 	mul.w	r2, lr, r2
90025146:	b289      	uxth	r1, r1
90025148:	fb01 220c 	mla	r2, r1, ip, r2
9002514c:	fb00 2204 	mla	r2, r0, r4, r2
90025150:	9c15      	ldr	r4, [sp, #84]	; 0x54
90025152:	fb08 2204 	mla	r2, r8, r4, r2
90025156:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002515a:	2a00      	cmp	r2, #0
9002515c:	f000 80e5 	beq.w	9002532a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90025160:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90025164:	d019      	beq.n	9002519a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90025166:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002516a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002516e:	fb0c fa0a 	mul.w	sl, ip, sl
90025172:	fb0c fc03 	mul.w	ip, ip, r3
90025176:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002517a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9002517e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90025182:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90025186:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002518a:	4453      	add	r3, sl
9002518c:	0a3f      	lsrs	r7, r7, #8
9002518e:	0a1b      	lsrs	r3, r3, #8
90025190:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90025194:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90025198:	433b      	orrs	r3, r7
9002519a:	9c14      	ldr	r4, [sp, #80]	; 0x50
9002519c:	2cff      	cmp	r4, #255	; 0xff
9002519e:	d020      	beq.n	900251e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
900251a0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900251a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900251a6:	9c14      	ldr	r4, [sp, #80]	; 0x50
900251a8:	4367      	muls	r7, r4
900251aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900251ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900251b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900251b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
900251b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900251ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900251be:	fb04 fa0a 	mul.w	sl, r4, sl
900251c2:	44bc      	add	ip, r7
900251c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900251c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900251cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900251d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900251d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900251d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900251dc:	ea4c 040a 	orr.w	r4, ip, sl
900251e0:	940d      	str	r4, [sp, #52]	; 0x34
900251e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
900251e4:	2cff      	cmp	r4, #255	; 0xff
900251e6:	d020      	beq.n	9002522a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
900251e8:	9c09      	ldr	r4, [sp, #36]	; 0x24
900251ea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900251ee:	9c11      	ldr	r4, [sp, #68]	; 0x44
900251f0:	4367      	muls	r7, r4
900251f2:	9c09      	ldr	r4, [sp, #36]	; 0x24
900251f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900251f8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900251fc:	9c11      	ldr	r4, [sp, #68]	; 0x44
900251fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90025202:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025206:	fb04 fa0a 	mul.w	sl, r4, sl
9002520a:	44bc      	add	ip, r7
9002520c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025210:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025214:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025218:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002521c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025220:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025224:	ea4c 040a 	orr.w	r4, ip, sl
90025228:	9409      	str	r4, [sp, #36]	; 0x24
9002522a:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002522c:	2cff      	cmp	r4, #255	; 0xff
9002522e:	d020      	beq.n	90025272 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90025230:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90025232:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90025236:	9c15      	ldr	r4, [sp, #84]	; 0x54
90025238:	4367      	muls	r7, r4
9002523a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002523c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025240:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90025244:	9c15      	ldr	r4, [sp, #84]	; 0x54
90025246:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002524a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002524e:	fb04 fa0a 	mul.w	sl, r4, sl
90025252:	44bc      	add	ip, r7
90025254:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025258:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002525c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025260:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025264:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025268:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002526c:	ea4c 040a 	orr.w	r4, ip, sl
90025270:	940e      	str	r4, [sp, #56]	; 0x38
90025272:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90025274:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90025278:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002527c:	43d2      	mvns	r2, r2
9002527e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90025282:	9c09      	ldr	r4, [sp, #36]	; 0x24
90025284:	b2d2      	uxtb	r2, r2
90025286:	fb0e f707 	mul.w	r7, lr, r7
9002528a:	fb01 770c 	mla	r7, r1, ip, r7
9002528e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90025292:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90025294:	fb00 770c 	mla	r7, r0, ip, r7
90025298:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002529c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002529e:	fb08 770c 	mla	r7, r8, ip, r7
900252a2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
900252a6:	fb0e fe0c 	mul.w	lr, lr, ip
900252aa:	0a3f      	lsrs	r7, r7, #8
900252ac:	fb01 e303 	mla	r3, r1, r3, lr
900252b0:	9909      	ldr	r1, [sp, #36]	; 0x24
900252b2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900252b6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900252ba:	990e      	ldr	r1, [sp, #56]	; 0x38
900252bc:	fb00 330a 	mla	r3, r0, sl, r3
900252c0:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
900252c4:	fb08 3c0c 	mla	ip, r8, ip, r3
900252c8:	f8b9 3000 	ldrh.w	r3, [r9]
900252cc:	1218      	asrs	r0, r3, #8
900252ce:	10d9      	asrs	r1, r3, #3
900252d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900252d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900252d8:	00db      	lsls	r3, r3, #3
900252da:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900252de:	4350      	muls	r0, r2
900252e0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900252e4:	b2db      	uxtb	r3, r3
900252e6:	4351      	muls	r1, r2
900252e8:	ea47 070c 	orr.w	r7, r7, ip
900252ec:	4353      	muls	r3, r2
900252ee:	1c42      	adds	r2, r0, #1
900252f0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900252f4:	0c3a      	lsrs	r2, r7, #16
900252f6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900252fa:	4a18      	ldr	r2, [pc, #96]	; (9002535c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
900252fc:	b2c0      	uxtb	r0, r0
900252fe:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90025302:	1c4a      	adds	r2, r1, #1
90025304:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025308:	0a3a      	lsrs	r2, r7, #8
9002530a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002530e:	00c9      	lsls	r1, r1, #3
90025310:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025314:	4301      	orrs	r1, r0
90025316:	1c58      	adds	r0, r3, #1
90025318:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002531c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90025320:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90025324:	4308      	orrs	r0, r1
90025326:	f8a9 0000 	strh.w	r0, [r9]
9002532a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9002532c:	f109 0902 	add.w	r9, r9, #2
90025330:	9a25      	ldr	r2, [sp, #148]	; 0x94
90025332:	f10b 3bff 	add.w	fp, fp, #4294967295
90025336:	441a      	add	r2, r3
90025338:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002533a:	9225      	str	r2, [sp, #148]	; 0x94
9002533c:	441d      	add	r5, r3
9002533e:	e64c      	b.n	90024fda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90025340:	2800      	cmp	r0, #0
90025342:	f43f aeed 	beq.w	90025120 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90025346:	5c79      	ldrb	r1, [r7, r1]
90025348:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002534c:	9109      	str	r1, [sp, #36]	; 0x24
9002534e:	0e09      	lsrs	r1, r1, #24
90025350:	9111      	str	r1, [sp, #68]	; 0x44
90025352:	e6e5      	b.n	90025120 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90025354:	b01b      	add	sp, #108	; 0x6c
90025356:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002535a:	bf00      	nop
9002535c:	fffff800 	.word	0xfffff800

90025360 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90025360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025364:	b085      	sub	sp, #20
90025366:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
9002536a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
9002536e:	2800      	cmp	r0, #0
90025370:	9103      	str	r1, [sp, #12]
90025372:	fb00 7406 	mla	r4, r0, r6, r7
90025376:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
9002537a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
9002537e:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90025382:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90025386:	eb03 0904 	add.w	r9, r3, r4
9002538a:	9501      	str	r5, [sp, #4]
9002538c:	f2c0 8150 	blt.w	90025630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90025390:	4583      	cmp	fp, r0
90025392:	f340 814d 	ble.w	90025630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90025396:	2f00      	cmp	r7, #0
90025398:	f2c0 8146 	blt.w	90025628 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
9002539c:	42be      	cmp	r6, r7
9002539e:	f340 8143 	ble.w	90025628 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900253a2:	f813 c004 	ldrb.w	ip, [r3, r4]
900253a6:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
900253aa:	f64f 041f 	movw	r4, #63519	; 0xf81f
900253ae:	ea4f 02ec 	mov.w	r2, ip, asr #3
900253b2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
900253b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900253ba:	4355      	muls	r5, r2
900253bc:	fb0c f203 	mul.w	r2, ip, r3
900253c0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900253c4:	f605 0501 	addw	r5, r5, #2049	; 0x801
900253c8:	441d      	add	r5, r3
900253ca:	f102 0320 	add.w	r3, r2, #32
900253ce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900253d2:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900253d6:	0a1b      	lsrs	r3, r3, #8
900253d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900253dc:	431c      	orrs	r4, r3
900253de:	1c7b      	adds	r3, r7, #1
900253e0:	f100 812b 	bmi.w	9002563a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900253e4:	429e      	cmp	r6, r3
900253e6:	f340 8128 	ble.w	9002563a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900253ea:	2900      	cmp	r1, #0
900253ec:	f000 8128 	beq.w	90025640 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
900253f0:	9a01      	ldr	r2, [sp, #4]
900253f2:	f899 3001 	ldrb.w	r3, [r9, #1]
900253f6:	8855      	ldrh	r5, [r2, #2]
900253f8:	ea4f 08e3 	mov.w	r8, r3, asr #3
900253fc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90025400:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90025404:	fb08 f802 	mul.w	r8, r8, r2
90025408:	f64f 021f 	movw	r2, #63519	; 0xf81f
9002540c:	435d      	muls	r5, r3
9002540e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90025412:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025416:	44d0      	add	r8, sl
90025418:	f105 0a20 	add.w	sl, r5, #32
9002541c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90025420:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90025424:	0a2d      	lsrs	r5, r5, #8
90025426:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002542a:	432a      	orrs	r2, r5
9002542c:	3001      	adds	r0, #1
9002542e:	f100 810d 	bmi.w	9002564c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90025432:	4583      	cmp	fp, r0
90025434:	f340 810a 	ble.w	9002564c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90025438:	f1be 0f00 	cmp.w	lr, #0
9002543c:	f000 810b 	beq.w	90025656 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90025440:	2f00      	cmp	r7, #0
90025442:	f2c0 8100 	blt.w	90025646 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90025446:	42be      	cmp	r6, r7
90025448:	f340 80fd 	ble.w	90025646 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002544c:	9801      	ldr	r0, [sp, #4]
9002544e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90025452:	f819 5006 	ldrb.w	r5, [r9, r6]
90025456:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002545a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002545e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90025462:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90025466:	fb0a fa00 	mul.w	sl, sl, r0
9002546a:	fb05 f808 	mul.w	r8, r5, r8
9002546e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90025472:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90025476:	4482      	add	sl, r0
90025478:	f108 0020 	add.w	r0, r8, #32
9002547c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025480:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90025484:	0a00      	lsrs	r0, r0, #8
90025486:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002548a:	ea4b 0b00 	orr.w	fp, fp, r0
9002548e:	3701      	adds	r7, #1
90025490:	f100 80e6 	bmi.w	90025660 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90025494:	42be      	cmp	r6, r7
90025496:	f340 80e3 	ble.w	90025660 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
9002549a:	2900      	cmp	r1, #0
9002549c:	f000 80e3 	beq.w	90025666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
900254a0:	3601      	adds	r6, #1
900254a2:	9801      	ldr	r0, [sp, #4]
900254a4:	f819 7006 	ldrb.w	r7, [r9, r6]
900254a8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900254ac:	ea4f 09e7 	mov.w	r9, r7, asr #3
900254b0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
900254b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900254b8:	fb09 f906 	mul.w	r9, r9, r6
900254bc:	fb07 f800 	mul.w	r8, r7, r0
900254c0:	f64f 001f 	movw	r0, #63519	; 0xf81f
900254c4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900254c8:	f609 0901 	addw	r9, r9, #2049	; 0x801
900254cc:	44d1      	add	r9, sl
900254ce:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900254d2:	f108 0020 	add.w	r0, r8, #32
900254d6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900254da:	0a00      	lsrs	r0, r0, #8
900254dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900254e0:	4330      	orrs	r0, r6
900254e2:	b28e      	uxth	r6, r1
900254e4:	fa1f f98e 	uxth.w	r9, lr
900254e8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900254ec:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
900254f0:	fb06 f809 	mul.w	r8, r6, r9
900254f4:	0136      	lsls	r6, r6, #4
900254f6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900254fa:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900254fe:	9601      	str	r6, [sp, #4]
90025500:	ea4a 0404 	orr.w	r4, sl, r4
90025504:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025508:	fa1f f689 	uxth.w	r6, r9
9002550c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025510:	fb11 f90e 	smulbb	r9, r1, lr
90025514:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025518:	9602      	str	r6, [sp, #8]
9002551a:	4626      	mov	r6, r4
9002551c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90025520:	f1ce 0410 	rsb	r4, lr, #16
90025524:	ea4a 0202 	orr.w	r2, sl, r2
90025528:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002552c:	1a64      	subs	r4, r4, r1
9002552e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90025532:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025536:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002553a:	434a      	muls	r2, r1
9002553c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90025540:	ea4a 0000 	orr.w	r0, sl, r0
90025544:	9903      	ldr	r1, [sp, #12]
90025546:	fb04 2406 	mla	r4, r4, r6, r2
9002554a:	9e02      	ldr	r6, [sp, #8]
9002554c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90025550:	fb09 4200 	mla	r2, r9, r0, r4
90025554:	ea4f 440b 	mov.w	r4, fp, lsl #16
90025558:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
9002555c:	8808      	ldrh	r0, [r1, #0]
9002555e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90025562:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
90025566:	ea44 0b0b 	orr.w	fp, r4, fp
9002556a:	9c01      	ldr	r4, [sp, #4]
9002556c:	b289      	uxth	r1, r1
9002556e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
90025572:	fb0e 2e0b 	mla	lr, lr, fp, r2
90025576:	1ba4      	subs	r4, r4, r6
90025578:	9e01      	ldr	r6, [sp, #4]
9002557a:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002557e:	eba6 0608 	sub.w	r6, r6, r8
90025582:	b2a4      	uxth	r4, r4
90025584:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025588:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002558c:	b2b6      	uxth	r6, r6
9002558e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90025592:	4373      	muls	r3, r6
90025594:	ea42 0e0e 	orr.w	lr, r2, lr
90025598:	fb0c 3304 	mla	r3, ip, r4, r3
9002559c:	9c02      	ldr	r4, [sp, #8]
9002559e:	fa1f f28e 	uxth.w	r2, lr
900255a2:	fb04 3505 	mla	r5, r4, r5, r3
900255a6:	10d4      	asrs	r4, r2, #3
900255a8:	fb08 5707 	mla	r7, r8, r7, r5
900255ac:	1215      	asrs	r5, r2, #8
900255ae:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
900255b2:	00d2      	lsls	r2, r2, #3
900255b4:	f3c7 2707 	ubfx	r7, r7, #8, #8
900255b8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900255bc:	b2d2      	uxtb	r2, r2
900255be:	434f      	muls	r7, r1
900255c0:	1c7b      	adds	r3, r7, #1
900255c2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900255c6:	1203      	asrs	r3, r0, #8
900255c8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
900255cc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900255d0:	b2ff      	uxtb	r7, r7
900255d2:	fb13 f307 	smulbb	r3, r3, r7
900255d6:	fb05 3501 	mla	r5, r5, r1, r3
900255da:	10c3      	asrs	r3, r0, #3
900255dc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900255e0:	b2ad      	uxth	r5, r5
900255e2:	fb13 f307 	smulbb	r3, r3, r7
900255e6:	fb04 3401 	mla	r4, r4, r1, r3
900255ea:	00c3      	lsls	r3, r0, #3
900255ec:	b2db      	uxtb	r3, r3
900255ee:	b2a4      	uxth	r4, r4
900255f0:	fb13 f307 	smulbb	r3, r3, r7
900255f4:	fb02 3101 	mla	r1, r2, r1, r3
900255f8:	1c6b      	adds	r3, r5, #1
900255fa:	1c62      	adds	r2, r4, #1
900255fc:	b289      	uxth	r1, r1
900255fe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025602:	1c4b      	adds	r3, r1, #1
90025604:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90025608:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002560c:	9a03      	ldr	r2, [sp, #12]
9002560e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90025612:	0964      	lsrs	r4, r4, #5
90025614:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025618:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002561c:	432b      	orrs	r3, r5
9002561e:	4323      	orrs	r3, r4
90025620:	8013      	strh	r3, [r2, #0]
90025622:	b005      	add	sp, #20
90025624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025628:	f04f 0c00 	mov.w	ip, #0
9002562c:	4664      	mov	r4, ip
9002562e:	e6d6      	b.n	900253de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90025630:	2300      	movs	r3, #0
90025632:	469c      	mov	ip, r3
90025634:	461a      	mov	r2, r3
90025636:	461c      	mov	r4, r3
90025638:	e6f8      	b.n	9002542c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002563a:	2300      	movs	r3, #0
9002563c:	461a      	mov	r2, r3
9002563e:	e6f5      	b.n	9002542c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90025640:	460b      	mov	r3, r1
90025642:	460a      	mov	r2, r1
90025644:	e6f2      	b.n	9002542c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90025646:	2500      	movs	r5, #0
90025648:	46ab      	mov	fp, r5
9002564a:	e720      	b.n	9002548e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
9002564c:	2700      	movs	r7, #0
9002564e:	463d      	mov	r5, r7
90025650:	4638      	mov	r0, r7
90025652:	46bb      	mov	fp, r7
90025654:	e745      	b.n	900254e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90025656:	4677      	mov	r7, lr
90025658:	4675      	mov	r5, lr
9002565a:	4670      	mov	r0, lr
9002565c:	46f3      	mov	fp, lr
9002565e:	e740      	b.n	900254e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90025660:	2700      	movs	r7, #0
90025662:	4638      	mov	r0, r7
90025664:	e73d      	b.n	900254e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90025666:	460f      	mov	r7, r1
90025668:	4608      	mov	r0, r1
9002566a:	e73a      	b.n	900254e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

9002566c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002566c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025670:	b097      	sub	sp, #92	; 0x5c
90025672:	9214      	str	r2, [sp, #80]	; 0x50
90025674:	9308      	str	r3, [sp, #32]
90025676:	9a25      	ldr	r2, [sp, #148]	; 0x94
90025678:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
9002567c:	9015      	str	r0, [sp, #84]	; 0x54
9002567e:	9312      	str	r3, [sp, #72]	; 0x48
90025680:	6850      	ldr	r0, [r2, #4]
90025682:	9111      	str	r1, [sp, #68]	; 0x44
90025684:	6812      	ldr	r2, [r2, #0]
90025686:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
9002568a:	fb00 1303 	mla	r3, r0, r3, r1
9002568e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025692:	9309      	str	r3, [sp, #36]	; 0x24
90025694:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025696:	681b      	ldr	r3, [r3, #0]
90025698:	930b      	str	r3, [sp, #44]	; 0x2c
9002569a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002569c:	685b      	ldr	r3, [r3, #4]
9002569e:	930c      	str	r3, [sp, #48]	; 0x30
900256a0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900256a4:	930a      	str	r3, [sp, #40]	; 0x28
900256a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
900256a8:	2b00      	cmp	r3, #0
900256aa:	dc03      	bgt.n	900256b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900256ac:	9b14      	ldr	r3, [sp, #80]	; 0x50
900256ae:	2b00      	cmp	r3, #0
900256b0:	f340 83cd 	ble.w	90025e4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900256b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900256b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900256ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900256be:	1e48      	subs	r0, r1, #1
900256c0:	1e55      	subs	r5, r2, #1
900256c2:	9b08      	ldr	r3, [sp, #32]
900256c4:	2b00      	cmp	r3, #0
900256c6:	f340 81a5 	ble.w	90025a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
900256ca:	9e21      	ldr	r6, [sp, #132]	; 0x84
900256cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
900256ce:	1436      	asrs	r6, r6, #16
900256d0:	ea4f 4323 	mov.w	r3, r3, asr #16
900256d4:	d406      	bmi.n	900256e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900256d6:	4286      	cmp	r6, r0
900256d8:	da04      	bge.n	900256e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900256da:	2b00      	cmp	r3, #0
900256dc:	db02      	blt.n	900256e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900256de:	42ab      	cmp	r3, r5
900256e0:	f2c0 8199 	blt.w	90025a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900256e4:	3601      	adds	r6, #1
900256e6:	f100 8186 	bmi.w	900259f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900256ea:	42b1      	cmp	r1, r6
900256ec:	f2c0 8183 	blt.w	900259f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900256f0:	3301      	adds	r3, #1
900256f2:	f100 8180 	bmi.w	900259f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900256f6:	429a      	cmp	r2, r3
900256f8:	f2c0 817d 	blt.w	900259f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900256fc:	9b08      	ldr	r3, [sp, #32]
900256fe:	f64f 061f 	movw	r6, #63519	; 0xf81f
90025702:	9f09      	ldr	r7, [sp, #36]	; 0x24
90025704:	9313      	str	r3, [sp, #76]	; 0x4c
90025706:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90025708:	2b00      	cmp	r3, #0
9002570a:	f340 81a6 	ble.w	90025a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002570e:	9b22      	ldr	r3, [sp, #136]	; 0x88
90025710:	9d21      	ldr	r5, [sp, #132]	; 0x84
90025712:	1418      	asrs	r0, r3, #16
90025714:	9b21      	ldr	r3, [sp, #132]	; 0x84
90025716:	142d      	asrs	r5, r5, #16
90025718:	f3c3 3103 	ubfx	r1, r3, #12, #4
9002571c:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002571e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90025722:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025724:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90025728:	f100 81fa 	bmi.w	90025b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002572c:	f102 3eff 	add.w	lr, r2, #4294967295
90025730:	4575      	cmp	r5, lr
90025732:	f280 81f5 	bge.w	90025b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90025736:	2800      	cmp	r0, #0
90025738:	f2c0 81f2 	blt.w	90025b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002573c:	f103 3eff 	add.w	lr, r3, #4294967295
90025740:	4570      	cmp	r0, lr
90025742:	f280 81ed 	bge.w	90025b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90025746:	b212      	sxth	r2, r2
90025748:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002574a:	fa1f fe81 	uxth.w	lr, r1
9002574e:	fb00 5002 	mla	r0, r0, r2, r5
90025752:	ea4f 150e 	mov.w	r5, lr, lsl #4
90025756:	eb03 0a00 	add.w	sl, r3, r0
9002575a:	f813 9000 	ldrb.w	r9, [r3, r0]
9002575e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90025762:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025766:	b29b      	uxth	r3, r3
90025768:	f1bc 0f00 	cmp.w	ip, #0
9002576c:	f000 81bb 	beq.w	90025ae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90025770:	f81a 4002 	ldrb.w	r4, [sl, r2]
90025774:	eb0a 0b02 	add.w	fp, sl, r2
90025778:	fa1f fa8c 	uxth.w	sl, ip
9002577c:	940d      	str	r4, [sp, #52]	; 0x34
9002577e:	fb0a fe0e 	mul.w	lr, sl, lr
90025782:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025786:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002578a:	eba5 050e 	sub.w	r5, r5, lr
9002578e:	940e      	str	r4, [sp, #56]	; 0x38
90025790:	fa1f fa8a 	uxth.w	sl, sl
90025794:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90025796:	b2ad      	uxth	r5, r5
90025798:	eba3 030a 	sub.w	r3, r3, sl
9002579c:	fb08 f505 	mul.w	r5, r8, r5
900257a0:	b29b      	uxth	r3, r3
900257a2:	fb09 5303 	mla	r3, r9, r3, r5
900257a6:	fb0a 3304 	mla	r3, sl, r4, r3
900257aa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900257ac:	fb0e 3304 	mla	r3, lr, r4, r3
900257b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900257b4:	2b00      	cmp	r3, #0
900257b6:	f000 8111 	beq.w	900259dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900257ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900257bc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900257c0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900257c4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900257c8:	f000 8192 	beq.w	90025af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
900257cc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900257d0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900257d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900257d8:	fb0a fe0e 	mul.w	lr, sl, lr
900257dc:	fb09 f000 	mul.w	r0, r9, r0
900257e0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900257e4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900257e8:	f100 0b20 	add.w	fp, r0, #32
900257ec:	44ce      	add	lr, r9
900257ee:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900257f2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900257f6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900257fa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900257fe:	ea4e 0909 	orr.w	r9, lr, r9
90025802:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90025806:	8868      	ldrh	r0, [r5, #2]
90025808:	d019      	beq.n	9002583e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9002580a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002580e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025812:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025816:	fb0a fe0e 	mul.w	lr, sl, lr
9002581a:	fb08 f800 	mul.w	r8, r8, r0
9002581e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90025822:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90025826:	f108 0b20 	add.w	fp, r8, #32
9002582a:	4486      	add	lr, r0
9002582c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90025830:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90025834:	0a00      	lsrs	r0, r0, #8
90025836:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002583a:	ea4e 0000 	orr.w	r0, lr, r0
9002583e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90025842:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90025846:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002584a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002584e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90025852:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025856:	ea4e 0909 	orr.w	r9, lr, r9
9002585a:	ea4a 0000 	orr.w	r0, sl, r0
9002585e:	f1bc 0f00 	cmp.w	ip, #0
90025862:	f000 8147 	beq.w	90025af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90025866:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
9002586a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002586c:	3a01      	subs	r2, #1
9002586e:	2cff      	cmp	r4, #255	; 0xff
90025870:	ea4f 0242 	mov.w	r2, r2, lsl #1
90025874:	f102 0202 	add.w	r2, r2, #2
90025878:	eb05 0e02 	add.w	lr, r5, r2
9002587c:	5aaa      	ldrh	r2, [r5, r2]
9002587e:	d018      	beq.n	900258b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90025880:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90025884:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025888:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002588c:	fb04 fa02 	mul.w	sl, r4, r2
90025890:	fb08 f805 	mul.w	r8, r8, r5
90025894:	f10a 0520 	add.w	r5, sl, #32
90025898:	ea06 1258 	and.w	r2, r6, r8, lsr #5
9002589c:	f608 0801 	addw	r8, r8, #2049	; 0x801
900258a0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900258a4:	4442      	add	r2, r8
900258a6:	0a2d      	lsrs	r5, r5, #8
900258a8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900258ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900258b0:	432a      	orrs	r2, r5
900258b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900258b4:	f8be 5002 	ldrh.w	r5, [lr, #2]
900258b8:	2cff      	cmp	r4, #255	; 0xff
900258ba:	d01a      	beq.n	900258f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
900258bc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
900258c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900258c4:	ea4f 08e4 	mov.w	r8, r4, asr #3
900258c8:	fb04 fa05 	mul.w	sl, r4, r5
900258cc:	fb08 f80e 	mul.w	r8, r8, lr
900258d0:	f10a 0e20 	add.w	lr, sl, #32
900258d4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900258d8:	f608 0801 	addw	r8, r8, #2049	; 0x801
900258dc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900258e0:	4445      	add	r5, r8
900258e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900258e6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900258ea:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900258ee:	ea45 050e 	orr.w	r5, r5, lr
900258f2:	fb1c fe01 	smulbb	lr, ip, r1
900258f6:	f1cc 0810 	rsb	r8, ip, #16
900258fa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900258fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025902:	ea4f 0eee 	mov.w	lr, lr, asr #3
90025906:	eba8 0801 	sub.w	r8, r8, r1
9002590a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9002590e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025912:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90025916:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002591a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9002591e:	ea4a 0202 	orr.w	r2, sl, r2
90025922:	4341      	muls	r1, r0
90025924:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90025928:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002592c:	fb09 1108 	mla	r1, r9, r8, r1
90025930:	ea4b 0505 	orr.w	r5, fp, r5
90025934:	fb0c 1102 	mla	r1, ip, r2, r1
90025938:	fb0e 1e05 	mla	lr, lr, r5, r1
9002593c:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025940:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025944:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025948:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002594c:	ea42 0e0e 	orr.w	lr, r2, lr
90025950:	fa1f f28e 	uxth.w	r2, lr
90025954:	2bff      	cmp	r3, #255	; 0xff
90025956:	d103      	bne.n	90025960 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025958:	9912      	ldr	r1, [sp, #72]	; 0x48
9002595a:	29ff      	cmp	r1, #255	; 0xff
9002595c:	f000 80de 	beq.w	90025b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90025960:	990a      	ldr	r1, [sp, #40]	; 0x28
90025962:	1215      	asrs	r5, r2, #8
90025964:	8838      	ldrh	r0, [r7, #0]
90025966:	434b      	muls	r3, r1
90025968:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9002596c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002596e:	f103 0c01 	add.w	ip, r3, #1
90025972:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90025976:	ea6f 2323 	mvn.w	r3, r3, asr #8
9002597a:	fa5f fc83 	uxtb.w	ip, r3
9002597e:	1203      	asrs	r3, r0, #8
90025980:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90025984:	fb13 f30c 	smulbb	r3, r3, ip
90025988:	fb05 3501 	mla	r5, r5, r1, r3
9002598c:	10c3      	asrs	r3, r0, #3
9002598e:	10d1      	asrs	r1, r2, #3
90025990:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90025994:	00d2      	lsls	r2, r2, #3
90025996:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9002599a:	b2ad      	uxth	r5, r5
9002599c:	fb13 f30c 	smulbb	r3, r3, ip
900259a0:	b2d2      	uxtb	r2, r2
900259a2:	fb01 3104 	mla	r1, r1, r4, r3
900259a6:	00c3      	lsls	r3, r0, #3
900259a8:	b2db      	uxtb	r3, r3
900259aa:	b289      	uxth	r1, r1
900259ac:	fb13 f30c 	smulbb	r3, r3, ip
900259b0:	fb02 3304 	mla	r3, r2, r4, r3
900259b4:	b29a      	uxth	r2, r3
900259b6:	1c6b      	adds	r3, r5, #1
900259b8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900259bc:	1c53      	adds	r3, r2, #1
900259be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900259c2:	1c4a      	adds	r2, r1, #1
900259c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900259c8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900259cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900259d0:	0949      	lsrs	r1, r1, #5
900259d2:	432b      	orrs	r3, r5
900259d4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900259d8:	430b      	orrs	r3, r1
900259da:	803b      	strh	r3, [r7, #0]
900259dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
900259de:	3702      	adds	r7, #2
900259e0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
900259e2:	4413      	add	r3, r2
900259e4:	9a22      	ldr	r2, [sp, #136]	; 0x88
900259e6:	9321      	str	r3, [sp, #132]	; 0x84
900259e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
900259ea:	441a      	add	r2, r3
900259ec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900259ee:	3b01      	subs	r3, #1
900259f0:	9222      	str	r2, [sp, #136]	; 0x88
900259f2:	9313      	str	r3, [sp, #76]	; 0x4c
900259f4:	e687      	b.n	90025706 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900259f6:	9b21      	ldr	r3, [sp, #132]	; 0x84
900259f8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
900259fa:	9c22      	ldr	r4, [sp, #136]	; 0x88
900259fc:	4433      	add	r3, r6
900259fe:	9321      	str	r3, [sp, #132]	; 0x84
90025a00:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025a02:	441c      	add	r4, r3
90025a04:	9b08      	ldr	r3, [sp, #32]
90025a06:	3b01      	subs	r3, #1
90025a08:	9422      	str	r4, [sp, #136]	; 0x88
90025a0a:	9308      	str	r3, [sp, #32]
90025a0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025a0e:	3302      	adds	r3, #2
90025a10:	9309      	str	r3, [sp, #36]	; 0x24
90025a12:	e656      	b.n	900256c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90025a14:	d028      	beq.n	90025a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90025a16:	9b08      	ldr	r3, [sp, #32]
90025a18:	9823      	ldr	r0, [sp, #140]	; 0x8c
90025a1a:	3b01      	subs	r3, #1
90025a1c:	9d21      	ldr	r5, [sp, #132]	; 0x84
90025a1e:	fb00 5003 	mla	r0, r0, r3, r5
90025a22:	1400      	asrs	r0, r0, #16
90025a24:	f53f ae6a 	bmi.w	900256fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025a28:	3901      	subs	r1, #1
90025a2a:	4288      	cmp	r0, r1
90025a2c:	f6bf ae66 	bge.w	900256fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025a30:	9924      	ldr	r1, [sp, #144]	; 0x90
90025a32:	9822      	ldr	r0, [sp, #136]	; 0x88
90025a34:	fb01 0303 	mla	r3, r1, r3, r0
90025a38:	141b      	asrs	r3, r3, #16
90025a3a:	f53f ae5f 	bmi.w	900256fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025a3e:	3a01      	subs	r2, #1
90025a40:	4293      	cmp	r3, r2
90025a42:	f6bf ae5b 	bge.w	900256fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025a46:	9b08      	ldr	r3, [sp, #32]
90025a48:	f64f 061f 	movw	r6, #63519	; 0xf81f
90025a4c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90025a50:	9313      	str	r3, [sp, #76]	; 0x4c
90025a52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90025a54:	2b00      	cmp	r3, #0
90025a56:	f300 8082 	bgt.w	90025b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90025a5a:	9b08      	ldr	r3, [sp, #32]
90025a5c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025a60:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025a62:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025a66:	9309      	str	r3, [sp, #36]	; 0x24
90025a68:	9b11      	ldr	r3, [sp, #68]	; 0x44
90025a6a:	2b00      	cmp	r3, #0
90025a6c:	f340 81ef 	ble.w	90025e4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90025a70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90025a74:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025a76:	ee30 0a04 	vadd.f32	s0, s0, s8
90025a7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025a7e:	eef0 6a62 	vmov.f32	s13, s5
90025a82:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025a86:	ee31 1a05 	vadd.f32	s2, s2, s10
90025a8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025a8e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
90025a92:	eef0 6a43 	vmov.f32	s13, s6
90025a96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025a9a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
90025a9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025aa2:	ee61 7a27 	vmul.f32	s15, s2, s15
90025aa6:	ee77 2a62 	vsub.f32	s5, s14, s5
90025aaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025aae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025ab2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025ab6:	ee12 2a90 	vmov	r2, s5
90025aba:	eef0 2a47 	vmov.f32	s5, s14
90025abe:	fb92 f3f3 	sdiv	r3, r2, r3
90025ac2:	ee13 2a10 	vmov	r2, s6
90025ac6:	9323      	str	r3, [sp, #140]	; 0x8c
90025ac8:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025aca:	eeb0 3a67 	vmov.f32	s6, s15
90025ace:	fb92 f3f3 	sdiv	r3, r2, r3
90025ad2:	9324      	str	r3, [sp, #144]	; 0x90
90025ad4:	9b11      	ldr	r3, [sp, #68]	; 0x44
90025ad6:	9a14      	ldr	r2, [sp, #80]	; 0x50
90025ad8:	3b01      	subs	r3, #1
90025ada:	9311      	str	r3, [sp, #68]	; 0x44
90025adc:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025ade:	bf08      	it	eq
90025ae0:	4613      	moveq	r3, r2
90025ae2:	9308      	str	r3, [sp, #32]
90025ae4:	e5df      	b.n	900256a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025ae6:	fb08 f505 	mul.w	r5, r8, r5
90025aea:	fb09 5303 	mla	r3, r9, r3, r5
90025aee:	e65f      	b.n	900257b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90025af0:	4681      	mov	r9, r0
90025af2:	e686      	b.n	90025802 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90025af4:	f1c1 0210 	rsb	r2, r1, #16
90025af8:	4341      	muls	r1, r0
90025afa:	fb09 1902 	mla	r9, r9, r2, r1
90025afe:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025b02:	ea4f 5259 	mov.w	r2, r9, lsr #21
90025b06:	ea4f 1959 	mov.w	r9, r9, lsr #5
90025b0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025b0e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90025b12:	ea42 0909 	orr.w	r9, r2, r9
90025b16:	fa1f f289 	uxth.w	r2, r9
90025b1a:	e71b      	b.n	90025954 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90025b1c:	803a      	strh	r2, [r7, #0]
90025b1e:	e75d      	b.n	900259dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025b20:	f115 0e01 	adds.w	lr, r5, #1
90025b24:	f53f af5a 	bmi.w	900259dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025b28:	4572      	cmp	r2, lr
90025b2a:	f6ff af57 	blt.w	900259dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025b2e:	f110 0e01 	adds.w	lr, r0, #1
90025b32:	f53f af53 	bmi.w	900259dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025b36:	4573      	cmp	r3, lr
90025b38:	f6ff af50 	blt.w	900259dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025b3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
90025b3e:	b21b      	sxth	r3, r3
90025b40:	b212      	sxth	r2, r2
90025b42:	9502      	str	r5, [sp, #8]
90025b44:	9301      	str	r3, [sp, #4]
90025b46:	9200      	str	r2, [sp, #0]
90025b48:	e9cd 0103 	strd	r0, r1, [sp, #12]
90025b4c:	e9cd c405 	strd	ip, r4, [sp, #20]
90025b50:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
90025b54:	4639      	mov	r1, r7
90025b56:	9815      	ldr	r0, [sp, #84]	; 0x54
90025b58:	f7ff fc02 	bl	90025360 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90025b5c:	e73e      	b.n	900259dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025b5e:	9b21      	ldr	r3, [sp, #132]	; 0x84
90025b60:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025b64:	9b22      	ldr	r3, [sp, #136]	; 0x88
90025b66:	f3c3 3503 	ubfx	r5, r3, #12, #4
90025b6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025b6c:	fa1f fc82 	uxth.w	ip, r2
90025b70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025b74:	9b22      	ldr	r3, [sp, #136]	; 0x88
90025b76:	ea4f 100c 	mov.w	r0, ip, lsl #4
90025b7a:	141f      	asrs	r7, r3, #16
90025b7c:	9b21      	ldr	r3, [sp, #132]	; 0x84
90025b7e:	141b      	asrs	r3, r3, #16
90025b80:	fb01 3707 	mla	r7, r1, r7, r3
90025b84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90025b86:	eb03 0a07 	add.w	sl, r3, r7
90025b8a:	f813 9007 	ldrb.w	r9, [r3, r7]
90025b8e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90025b92:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025b96:	b29b      	uxth	r3, r3
90025b98:	2d00      	cmp	r5, #0
90025b9a:	f000 813d 	beq.w	90025e18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90025b9e:	f81a 4001 	ldrb.w	r4, [sl, r1]
90025ba2:	eb0a 0b01 	add.w	fp, sl, r1
90025ba6:	fa1f fa85 	uxth.w	sl, r5
90025baa:	940f      	str	r4, [sp, #60]	; 0x3c
90025bac:	fb0a fc0c 	mul.w	ip, sl, ip
90025bb0:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025bb4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90025bb8:	eba0 000c 	sub.w	r0, r0, ip
90025bbc:	9410      	str	r4, [sp, #64]	; 0x40
90025bbe:	fa1f fa8a 	uxth.w	sl, sl
90025bc2:	b280      	uxth	r0, r0
90025bc4:	eba3 030a 	sub.w	r3, r3, sl
90025bc8:	fb08 f000 	mul.w	r0, r8, r0
90025bcc:	b29b      	uxth	r3, r3
90025bce:	fb09 0303 	mla	r3, r9, r3, r0
90025bd2:	980f      	ldr	r0, [sp, #60]	; 0x3c
90025bd4:	fb0a 3300 	mla	r3, sl, r0, r3
90025bd8:	fb0c 3304 	mla	r3, ip, r4, r3
90025bdc:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025be0:	2b00      	cmp	r3, #0
90025be2:	f000 810b 	beq.w	90025dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90025be6:	980b      	ldr	r0, [sp, #44]	; 0x2c
90025be8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90025bec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90025bee:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90025bf2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90025bf6:	f000 8114 	beq.w	90025e22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90025bfa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90025bfe:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025c02:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025c06:	fb0a fc0c 	mul.w	ip, sl, ip
90025c0a:	fb09 f707 	mul.w	r7, r9, r7
90025c0e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90025c12:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90025c16:	f107 0b20 	add.w	fp, r7, #32
90025c1a:	44cc      	add	ip, r9
90025c1c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90025c20:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025c24:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025c28:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90025c2c:	ea4c 0909 	orr.w	r9, ip, r9
90025c30:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90025c34:	8847      	ldrh	r7, [r0, #2]
90025c36:	d019      	beq.n	90025c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90025c38:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90025c3c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025c40:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025c44:	fb0a fc0c 	mul.w	ip, sl, ip
90025c48:	fb08 f807 	mul.w	r8, r8, r7
90025c4c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025c50:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90025c54:	f108 0b20 	add.w	fp, r8, #32
90025c58:	44bc      	add	ip, r7
90025c5a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90025c5e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025c62:	0a3f      	lsrs	r7, r7, #8
90025c64:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025c68:	ea4c 0707 	orr.w	r7, ip, r7
90025c6c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90025c70:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90025c74:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90025c78:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90025c7c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90025c80:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025c84:	ea4c 0909 	orr.w	r9, ip, r9
90025c88:	ea4a 0707 	orr.w	r7, sl, r7
90025c8c:	2d00      	cmp	r5, #0
90025c8e:	f000 80ca 	beq.w	90025e26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90025c92:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90025c96:	3901      	subs	r1, #1
90025c98:	0049      	lsls	r1, r1, #1
90025c9a:	3102      	adds	r1, #2
90025c9c:	eb00 0c01 	add.w	ip, r0, r1
90025ca0:	5a41      	ldrh	r1, [r0, r1]
90025ca2:	980f      	ldr	r0, [sp, #60]	; 0x3c
90025ca4:	28ff      	cmp	r0, #255	; 0xff
90025ca6:	d019      	beq.n	90025cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90025ca8:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90025cac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90025cae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025cb2:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025cb6:	fb04 fa01 	mul.w	sl, r4, r1
90025cba:	fb08 f800 	mul.w	r8, r8, r0
90025cbe:	f10a 0020 	add.w	r0, sl, #32
90025cc2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90025cc6:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025cca:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90025cce:	4441      	add	r1, r8
90025cd0:	0a00      	lsrs	r0, r0, #8
90025cd2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90025cd6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025cda:	4301      	orrs	r1, r0
90025cdc:	9c10      	ldr	r4, [sp, #64]	; 0x40
90025cde:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90025ce2:	2cff      	cmp	r4, #255	; 0xff
90025ce4:	d01a      	beq.n	90025d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90025ce6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90025cea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025cee:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025cf2:	fb04 fa00 	mul.w	sl, r4, r0
90025cf6:	fb08 f80c 	mul.w	r8, r8, ip
90025cfa:	f10a 0c20 	add.w	ip, sl, #32
90025cfe:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90025d02:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025d06:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90025d0a:	4440      	add	r0, r8
90025d0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025d10:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90025d14:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025d18:	ea40 000c 	orr.w	r0, r0, ip
90025d1c:	fb15 fc02 	smulbb	ip, r5, r2
90025d20:	f1c5 0810 	rsb	r8, r5, #16
90025d24:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025d28:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90025d2c:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025d30:	eba8 0802 	sub.w	r8, r8, r2
90025d34:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025d38:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025d3c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025d40:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025d44:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025d48:	ea4a 0101 	orr.w	r1, sl, r1
90025d4c:	437a      	muls	r2, r7
90025d4e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025d52:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025d56:	fb09 2208 	mla	r2, r9, r8, r2
90025d5a:	ea4b 0000 	orr.w	r0, fp, r0
90025d5e:	fb05 2201 	mla	r2, r5, r1, r2
90025d62:	fb0c 2200 	mla	r2, ip, r0, r2
90025d66:	0d57      	lsrs	r7, r2, #21
90025d68:	0952      	lsrs	r2, r2, #5
90025d6a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025d6e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025d72:	433a      	orrs	r2, r7
90025d74:	2bff      	cmp	r3, #255	; 0xff
90025d76:	b292      	uxth	r2, r2
90025d78:	d102      	bne.n	90025d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90025d7a:	9912      	ldr	r1, [sp, #72]	; 0x48
90025d7c:	29ff      	cmp	r1, #255	; 0xff
90025d7e:	d063      	beq.n	90025e48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90025d80:	980a      	ldr	r0, [sp, #40]	; 0x28
90025d82:	1215      	asrs	r5, r2, #8
90025d84:	f8be 1000 	ldrh.w	r1, [lr]
90025d88:	4343      	muls	r3, r0
90025d8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90025d8c:	10cf      	asrs	r7, r1, #3
90025d8e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90025d92:	1c58      	adds	r0, r3, #1
90025d94:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90025d98:	eb00 2323 	add.w	r3, r0, r3, asr #8
90025d9c:	1208      	asrs	r0, r1, #8
90025d9e:	ea6f 2323 	mvn.w	r3, r3, asr #8
90025da2:	00c9      	lsls	r1, r1, #3
90025da4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025da8:	b2db      	uxtb	r3, r3
90025daa:	b2c9      	uxtb	r1, r1
90025dac:	fb10 f003 	smulbb	r0, r0, r3
90025db0:	fb11 f103 	smulbb	r1, r1, r3
90025db4:	fb05 0504 	mla	r5, r5, r4, r0
90025db8:	10d0      	asrs	r0, r2, #3
90025dba:	fb17 f703 	smulbb	r7, r7, r3
90025dbe:	00d2      	lsls	r2, r2, #3
90025dc0:	b2ad      	uxth	r5, r5
90025dc2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025dc6:	b2d2      	uxtb	r2, r2
90025dc8:	fb00 7004 	mla	r0, r0, r4, r7
90025dcc:	1c6b      	adds	r3, r5, #1
90025dce:	fb02 1204 	mla	r2, r2, r4, r1
90025dd2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025dd6:	b292      	uxth	r2, r2
90025dd8:	b280      	uxth	r0, r0
90025dda:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90025dde:	1c57      	adds	r7, r2, #1
90025de0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90025de4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90025de8:	433d      	orrs	r5, r7
90025dea:	1c47      	adds	r7, r0, #1
90025dec:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90025df0:	097f      	lsrs	r7, r7, #5
90025df2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025df6:	433d      	orrs	r5, r7
90025df8:	f8ae 5000 	strh.w	r5, [lr]
90025dfc:	9b21      	ldr	r3, [sp, #132]	; 0x84
90025dfe:	f10e 0e02 	add.w	lr, lr, #2
90025e02:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90025e04:	4413      	add	r3, r2
90025e06:	9a22      	ldr	r2, [sp, #136]	; 0x88
90025e08:	9321      	str	r3, [sp, #132]	; 0x84
90025e0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025e0c:	441a      	add	r2, r3
90025e0e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90025e10:	3b01      	subs	r3, #1
90025e12:	9222      	str	r2, [sp, #136]	; 0x88
90025e14:	9313      	str	r3, [sp, #76]	; 0x4c
90025e16:	e61c      	b.n	90025a52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90025e18:	fb08 f000 	mul.w	r0, r8, r0
90025e1c:	fb09 0303 	mla	r3, r9, r3, r0
90025e20:	e6dc      	b.n	90025bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90025e22:	46b9      	mov	r9, r7
90025e24:	e704      	b.n	90025c30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90025e26:	f1c2 0110 	rsb	r1, r2, #16
90025e2a:	437a      	muls	r2, r7
90025e2c:	fb09 2901 	mla	r9, r9, r1, r2
90025e30:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025e34:	ea4f 5059 	mov.w	r0, r9, lsr #21
90025e38:	ea4f 1259 	mov.w	r2, r9, lsr #5
90025e3c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025e40:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025e44:	4302      	orrs	r2, r0
90025e46:	e795      	b.n	90025d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90025e48:	f8ae 2000 	strh.w	r2, [lr]
90025e4c:	e7d6      	b.n	90025dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90025e4e:	b017      	add	sp, #92	; 0x5c
90025e50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025e54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90025e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025e58:	b085      	sub	sp, #20
90025e5a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90025e5e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90025e62:	2800      	cmp	r0, #0
90025e64:	9103      	str	r1, [sp, #12]
90025e66:	fb00 7406 	mla	r4, r0, r6, r7
90025e6a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90025e6e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90025e72:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90025e76:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90025e7a:	eb02 0904 	add.w	r9, r2, r4
90025e7e:	9501      	str	r5, [sp, #4]
90025e80:	f2c0 8141 	blt.w	90026106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90025e84:	4583      	cmp	fp, r0
90025e86:	f340 813e 	ble.w	90026106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90025e8a:	2f00      	cmp	r7, #0
90025e8c:	f2c0 8137 	blt.w	900260fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90025e90:	42be      	cmp	r6, r7
90025e92:	f340 8134 	ble.w	900260fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90025e96:	f812 c004 	ldrb.w	ip, [r2, r4]
90025e9a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90025e9e:	f64f 041f 	movw	r4, #63519	; 0xf81f
90025ea2:	ea4f 02ec 	mov.w	r2, ip, asr #3
90025ea6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90025eaa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025eae:	4355      	muls	r5, r2
90025eb0:	fb0c f203 	mul.w	r2, ip, r3
90025eb4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90025eb8:	f605 0501 	addw	r5, r5, #2049	; 0x801
90025ebc:	441d      	add	r5, r3
90025ebe:	f102 0320 	add.w	r3, r2, #32
90025ec2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025ec6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90025eca:	0a1b      	lsrs	r3, r3, #8
90025ecc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025ed0:	431c      	orrs	r4, r3
90025ed2:	1c7b      	adds	r3, r7, #1
90025ed4:	f100 811c 	bmi.w	90026110 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90025ed8:	429e      	cmp	r6, r3
90025eda:	f340 8119 	ble.w	90026110 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90025ede:	2900      	cmp	r1, #0
90025ee0:	f000 8119 	beq.w	90026116 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90025ee4:	9a01      	ldr	r2, [sp, #4]
90025ee6:	f899 3001 	ldrb.w	r3, [r9, #1]
90025eea:	8855      	ldrh	r5, [r2, #2]
90025eec:	ea4f 08e3 	mov.w	r8, r3, asr #3
90025ef0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90025ef4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90025ef8:	fb08 f802 	mul.w	r8, r8, r2
90025efc:	f64f 021f 	movw	r2, #63519	; 0xf81f
90025f00:	435d      	muls	r5, r3
90025f02:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90025f06:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025f0a:	44d0      	add	r8, sl
90025f0c:	f105 0a20 	add.w	sl, r5, #32
90025f10:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90025f14:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90025f18:	0a2d      	lsrs	r5, r5, #8
90025f1a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90025f1e:	432a      	orrs	r2, r5
90025f20:	3001      	adds	r0, #1
90025f22:	f100 80fe 	bmi.w	90026122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90025f26:	4583      	cmp	fp, r0
90025f28:	f340 80fb 	ble.w	90026122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90025f2c:	f1be 0f00 	cmp.w	lr, #0
90025f30:	f000 80fc 	beq.w	9002612c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90025f34:	2f00      	cmp	r7, #0
90025f36:	f2c0 80f1 	blt.w	9002611c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90025f3a:	42be      	cmp	r6, r7
90025f3c:	f340 80ee 	ble.w	9002611c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90025f40:	9801      	ldr	r0, [sp, #4]
90025f42:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90025f46:	f819 5006 	ldrb.w	r5, [r9, r6]
90025f4a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90025f4e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90025f52:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90025f56:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90025f5a:	fb0a fa00 	mul.w	sl, sl, r0
90025f5e:	fb05 f808 	mul.w	r8, r5, r8
90025f62:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90025f66:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90025f6a:	4482      	add	sl, r0
90025f6c:	f108 0020 	add.w	r0, r8, #32
90025f70:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025f74:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90025f78:	0a00      	lsrs	r0, r0, #8
90025f7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025f7e:	ea4b 0b00 	orr.w	fp, fp, r0
90025f82:	3701      	adds	r7, #1
90025f84:	f100 80d7 	bmi.w	90026136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90025f88:	42be      	cmp	r6, r7
90025f8a:	f340 80d4 	ble.w	90026136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90025f8e:	2900      	cmp	r1, #0
90025f90:	f000 80d4 	beq.w	9002613c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90025f94:	3601      	adds	r6, #1
90025f96:	9801      	ldr	r0, [sp, #4]
90025f98:	f819 7006 	ldrb.w	r7, [r9, r6]
90025f9c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90025fa0:	ea4f 09e7 	mov.w	r9, r7, asr #3
90025fa4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90025fa8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025fac:	fb09 f906 	mul.w	r9, r9, r6
90025fb0:	fb07 f800 	mul.w	r8, r7, r0
90025fb4:	f64f 001f 	movw	r0, #63519	; 0xf81f
90025fb8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90025fbc:	f609 0901 	addw	r9, r9, #2049	; 0x801
90025fc0:	44d1      	add	r9, sl
90025fc2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90025fc6:	f108 0020 	add.w	r0, r8, #32
90025fca:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025fce:	0a00      	lsrs	r0, r0, #8
90025fd0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025fd4:	4330      	orrs	r0, r6
90025fd6:	b28e      	uxth	r6, r1
90025fd8:	fa1f f98e 	uxth.w	r9, lr
90025fdc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90025fe0:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90025fe4:	fb06 f809 	mul.w	r8, r6, r9
90025fe8:	0136      	lsls	r6, r6, #4
90025fea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025fee:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90025ff2:	9601      	str	r6, [sp, #4]
90025ff4:	ea4a 0404 	orr.w	r4, sl, r4
90025ff8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025ffc:	fa1f f689 	uxth.w	r6, r9
90026000:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90026004:	fb11 f90e 	smulbb	r9, r1, lr
90026008:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002600c:	9602      	str	r6, [sp, #8]
9002600e:	4626      	mov	r6, r4
90026010:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90026014:	f1ce 0410 	rsb	r4, lr, #16
90026018:	ea4a 0202 	orr.w	r2, sl, r2
9002601c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026020:	1a64      	subs	r4, r4, r1
90026022:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90026026:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002602a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002602e:	434a      	muls	r2, r1
90026030:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90026034:	ea4a 0000 	orr.w	r0, sl, r0
90026038:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
9002603c:	fb04 2406 	mla	r4, r4, r6, r2
90026040:	9903      	ldr	r1, [sp, #12]
90026042:	fb09 4200 	mla	r2, r9, r0, r4
90026046:	ea4f 440b 	mov.w	r4, fp, lsl #16
9002604a:	9801      	ldr	r0, [sp, #4]
9002604c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90026050:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90026054:	8809      	ldrh	r1, [r1, #0]
90026056:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
9002605a:	ea44 0b0b 	orr.w	fp, r4, fp
9002605e:	9c02      	ldr	r4, [sp, #8]
90026060:	1b00      	subs	r0, r0, r4
90026062:	9c01      	ldr	r4, [sp, #4]
90026064:	fb0e 2e0b 	mla	lr, lr, fp, r2
90026068:	eba4 0608 	sub.w	r6, r4, r8
9002606c:	b280      	uxth	r0, r0
9002606e:	ea4f 525e 	mov.w	r2, lr, lsr #21
90026072:	b2b6      	uxth	r6, r6
90026074:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90026078:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002607c:	4373      	muls	r3, r6
9002607e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90026082:	fb0c 3300 	mla	r3, ip, r0, r3
90026086:	9802      	ldr	r0, [sp, #8]
90026088:	ea42 0e0e 	orr.w	lr, r2, lr
9002608c:	fb00 3505 	mla	r5, r0, r5, r3
90026090:	120b      	asrs	r3, r1, #8
90026092:	10c8      	asrs	r0, r1, #3
90026094:	fb08 5707 	mla	r7, r8, r7, r5
90026098:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9002609c:	00c9      	lsls	r1, r1, #3
9002609e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900260a2:	ea6f 2727 	mvn.w	r7, r7, asr #8
900260a6:	fa1f f28e 	uxth.w	r2, lr
900260aa:	b2c9      	uxtb	r1, r1
900260ac:	b2ff      	uxtb	r7, r7
900260ae:	437b      	muls	r3, r7
900260b0:	4378      	muls	r0, r7
900260b2:	434f      	muls	r7, r1
900260b4:	1c59      	adds	r1, r3, #1
900260b6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900260ba:	1213      	asrs	r3, r2, #8
900260bc:	f023 0307 	bic.w	r3, r3, #7
900260c0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900260c4:	1c41      	adds	r1, r0, #1
900260c6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900260ca:	10d1      	asrs	r1, r2, #3
900260cc:	021b      	lsls	r3, r3, #8
900260ce:	f021 0103 	bic.w	r1, r1, #3
900260d2:	00d2      	lsls	r2, r2, #3
900260d4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
900260d8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900260dc:	00c9      	lsls	r1, r1, #3
900260de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900260e2:	430b      	orrs	r3, r1
900260e4:	1c79      	adds	r1, r7, #1
900260e6:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900260ea:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900260ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900260f2:	431a      	orrs	r2, r3
900260f4:	9b03      	ldr	r3, [sp, #12]
900260f6:	801a      	strh	r2, [r3, #0]
900260f8:	b005      	add	sp, #20
900260fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900260fe:	f04f 0c00 	mov.w	ip, #0
90026102:	4664      	mov	r4, ip
90026104:	e6e5      	b.n	90025ed2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90026106:	2300      	movs	r3, #0
90026108:	469c      	mov	ip, r3
9002610a:	461a      	mov	r2, r3
9002610c:	461c      	mov	r4, r3
9002610e:	e707      	b.n	90025f20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90026110:	2300      	movs	r3, #0
90026112:	461a      	mov	r2, r3
90026114:	e704      	b.n	90025f20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90026116:	460b      	mov	r3, r1
90026118:	460a      	mov	r2, r1
9002611a:	e701      	b.n	90025f20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002611c:	2500      	movs	r5, #0
9002611e:	46ab      	mov	fp, r5
90026120:	e72f      	b.n	90025f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90026122:	2700      	movs	r7, #0
90026124:	463d      	mov	r5, r7
90026126:	4638      	mov	r0, r7
90026128:	46bb      	mov	fp, r7
9002612a:	e754      	b.n	90025fd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002612c:	4677      	mov	r7, lr
9002612e:	4675      	mov	r5, lr
90026130:	4670      	mov	r0, lr
90026132:	46f3      	mov	fp, lr
90026134:	e74f      	b.n	90025fd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90026136:	2700      	movs	r7, #0
90026138:	4638      	mov	r0, r7
9002613a:	e74c      	b.n	90025fd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002613c:	460f      	mov	r7, r1
9002613e:	4608      	mov	r0, r1
90026140:	e749      	b.n	90025fd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90026144 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026148:	b093      	sub	sp, #76	; 0x4c
9002614a:	9210      	str	r2, [sp, #64]	; 0x40
9002614c:	9a21      	ldr	r2, [sp, #132]	; 0x84
9002614e:	9011      	str	r0, [sp, #68]	; 0x44
90026150:	910e      	str	r1, [sp, #56]	; 0x38
90026152:	6850      	ldr	r0, [r2, #4]
90026154:	9306      	str	r3, [sp, #24]
90026156:	6812      	ldr	r2, [r2, #0]
90026158:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
9002615c:	fb00 1303 	mla	r3, r0, r3, r1
90026160:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026164:	9307      	str	r3, [sp, #28]
90026166:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026168:	681b      	ldr	r3, [r3, #0]
9002616a:	9308      	str	r3, [sp, #32]
9002616c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002616e:	685b      	ldr	r3, [r3, #4]
90026170:	9309      	str	r3, [sp, #36]	; 0x24
90026172:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90026174:	2b00      	cmp	r3, #0
90026176:	dc03      	bgt.n	90026180 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90026178:	9b10      	ldr	r3, [sp, #64]	; 0x40
9002617a:	2b00      	cmp	r3, #0
9002617c:	f340 83b6 	ble.w	900268ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90026180:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026182:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026186:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002618a:	1e48      	subs	r0, r1, #1
9002618c:	1e55      	subs	r5, r2, #1
9002618e:	9b06      	ldr	r3, [sp, #24]
90026190:	2b00      	cmp	r3, #0
90026192:	f340 8165 	ble.w	90026460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90026196:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90026198:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9002619a:	1436      	asrs	r6, r6, #16
9002619c:	ea4f 4323 	mov.w	r3, r3, asr #16
900261a0:	d406      	bmi.n	900261b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900261a2:	4286      	cmp	r6, r0
900261a4:	da04      	bge.n	900261b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900261a6:	2b00      	cmp	r3, #0
900261a8:	db02      	blt.n	900261b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900261aa:	42ab      	cmp	r3, r5
900261ac:	f2c0 8159 	blt.w	90026462 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900261b0:	3601      	adds	r6, #1
900261b2:	f100 8146 	bmi.w	90026442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900261b6:	42b1      	cmp	r1, r6
900261b8:	f2c0 8143 	blt.w	90026442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900261bc:	3301      	adds	r3, #1
900261be:	f100 8140 	bmi.w	90026442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900261c2:	429a      	cmp	r2, r3
900261c4:	f2c0 813d 	blt.w	90026442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900261c8:	9b06      	ldr	r3, [sp, #24]
900261ca:	f64f 061f 	movw	r6, #63519	; 0xf81f
900261ce:	9f07      	ldr	r7, [sp, #28]
900261d0:	930f      	str	r3, [sp, #60]	; 0x3c
900261d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900261d4:	2b00      	cmp	r3, #0
900261d6:	f340 8166 	ble.w	900264a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900261da:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900261dc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
900261de:	1418      	asrs	r0, r3, #16
900261e0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900261e2:	142d      	asrs	r5, r5, #16
900261e4:	f3c3 3103 	ubfx	r1, r3, #12, #4
900261e8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900261ea:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900261ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
900261f0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900261f4:	f100 81f0 	bmi.w	900265d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900261f8:	f102 3eff 	add.w	lr, r2, #4294967295
900261fc:	4575      	cmp	r5, lr
900261fe:	f280 81eb 	bge.w	900265d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90026202:	2800      	cmp	r0, #0
90026204:	f2c0 81e8 	blt.w	900265d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90026208:	f103 3eff 	add.w	lr, r3, #4294967295
9002620c:	4570      	cmp	r0, lr
9002620e:	f280 81e3 	bge.w	900265d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90026212:	b212      	sxth	r2, r2
90026214:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026216:	fa1f fe81 	uxth.w	lr, r1
9002621a:	fb00 5002 	mla	r0, r0, r2, r5
9002621e:	ea4f 150e 	mov.w	r5, lr, lsl #4
90026222:	eb03 0a00 	add.w	sl, r3, r0
90026226:	f813 9000 	ldrb.w	r9, [r3, r0]
9002622a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
9002622e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90026232:	b29b      	uxth	r3, r3
90026234:	f1bc 0f00 	cmp.w	ip, #0
90026238:	f000 817b 	beq.w	90026532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002623c:	f81a 4002 	ldrb.w	r4, [sl, r2]
90026240:	eb0a 0b02 	add.w	fp, sl, r2
90026244:	fa1f fa8c 	uxth.w	sl, ip
90026248:	940a      	str	r4, [sp, #40]	; 0x28
9002624a:	fb0a fe0e 	mul.w	lr, sl, lr
9002624e:	f89b 4001 	ldrb.w	r4, [fp, #1]
90026252:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90026256:	eba5 050e 	sub.w	r5, r5, lr
9002625a:	940b      	str	r4, [sp, #44]	; 0x2c
9002625c:	fa1f fa8a 	uxth.w	sl, sl
90026260:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90026262:	b2ad      	uxth	r5, r5
90026264:	eba3 030a 	sub.w	r3, r3, sl
90026268:	fb08 f505 	mul.w	r5, r8, r5
9002626c:	b29b      	uxth	r3, r3
9002626e:	fb09 5303 	mla	r3, r9, r3, r5
90026272:	fb0a 3304 	mla	r3, sl, r4, r3
90026276:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90026278:	fb0e 3304 	mla	r3, lr, r4, r3
9002627c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026280:	2b00      	cmp	r3, #0
90026282:	f000 80d1 	beq.w	90026428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026286:	9c08      	ldr	r4, [sp, #32]
90026288:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002628c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90026290:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90026294:	f000 8152 	beq.w	9002653c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90026298:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002629c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900262a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900262a4:	fb0a fe0e 	mul.w	lr, sl, lr
900262a8:	fb09 f000 	mul.w	r0, r9, r0
900262ac:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900262b0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900262b4:	f100 0b20 	add.w	fp, r0, #32
900262b8:	44ce      	add	lr, r9
900262ba:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900262be:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900262c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
900262c6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900262ca:	ea4e 0909 	orr.w	r9, lr, r9
900262ce:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900262d2:	8868      	ldrh	r0, [r5, #2]
900262d4:	d019      	beq.n	9002630a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900262d6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900262da:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900262de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900262e2:	fb0a fe0e 	mul.w	lr, sl, lr
900262e6:	fb08 f800 	mul.w	r8, r8, r0
900262ea:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900262ee:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900262f2:	f108 0b20 	add.w	fp, r8, #32
900262f6:	4486      	add	lr, r0
900262f8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900262fc:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90026300:	0a00      	lsrs	r0, r0, #8
90026302:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90026306:	ea4e 0000 	orr.w	r0, lr, r0
9002630a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002630e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90026312:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026316:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002631a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9002631e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90026322:	ea4e 0909 	orr.w	r9, lr, r9
90026326:	ea4a 0000 	orr.w	r0, sl, r0
9002632a:	f1bc 0f00 	cmp.w	ip, #0
9002632e:	f000 8107 	beq.w	90026540 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90026332:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90026336:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90026338:	3a01      	subs	r2, #1
9002633a:	2cff      	cmp	r4, #255	; 0xff
9002633c:	ea4f 0242 	mov.w	r2, r2, lsl #1
90026340:	f102 0202 	add.w	r2, r2, #2
90026344:	eb05 0e02 	add.w	lr, r5, r2
90026348:	5aaa      	ldrh	r2, [r5, r2]
9002634a:	d018      	beq.n	9002637e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
9002634c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90026350:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026354:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026358:	fb04 fa02 	mul.w	sl, r4, r2
9002635c:	fb08 f805 	mul.w	r8, r8, r5
90026360:	f10a 0520 	add.w	r5, sl, #32
90026364:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90026368:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002636c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90026370:	4442      	add	r2, r8
90026372:	0a2d      	lsrs	r5, r5, #8
90026374:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90026378:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002637c:	432a      	orrs	r2, r5
9002637e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90026380:	f8be 5002 	ldrh.w	r5, [lr, #2]
90026384:	2cff      	cmp	r4, #255	; 0xff
90026386:	d01a      	beq.n	900263be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90026388:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
9002638c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90026390:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026394:	fb04 fa05 	mul.w	sl, r4, r5
90026398:	fb08 f80e 	mul.w	r8, r8, lr
9002639c:	f10a 0e20 	add.w	lr, sl, #32
900263a0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900263a4:	f608 0801 	addw	r8, r8, #2049	; 0x801
900263a8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900263ac:	4445      	add	r5, r8
900263ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900263b2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900263b6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900263ba:	ea45 050e 	orr.w	r5, r5, lr
900263be:	fb1c fe01 	smulbb	lr, ip, r1
900263c2:	f1cc 0810 	rsb	r8, ip, #16
900263c6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900263ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900263ce:	ea4f 0eee 	mov.w	lr, lr, asr #3
900263d2:	eba8 0801 	sub.w	r8, r8, r1
900263d6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900263da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900263de:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900263e2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
900263e6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900263ea:	ea4a 0202 	orr.w	r2, sl, r2
900263ee:	4341      	muls	r1, r0
900263f0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900263f4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900263f8:	fb09 1108 	mla	r1, r9, r8, r1
900263fc:	ea4b 0505 	orr.w	r5, fp, r5
90026400:	fb0c 1102 	mla	r1, ip, r2, r1
90026404:	fb0e 1e05 	mla	lr, lr, r5, r1
90026408:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002640c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90026410:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026414:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90026418:	ea42 0e0e 	orr.w	lr, r2, lr
9002641c:	fa1f f28e 	uxth.w	r2, lr
90026420:	2bff      	cmp	r3, #255	; 0xff
90026422:	f040 80a1 	bne.w	90026568 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90026426:	803a      	strh	r2, [r7, #0]
90026428:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002642a:	3702      	adds	r7, #2
9002642c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
9002642e:	4413      	add	r3, r2
90026430:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90026432:	931d      	str	r3, [sp, #116]	; 0x74
90026434:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026436:	441a      	add	r2, r3
90026438:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002643a:	3b01      	subs	r3, #1
9002643c:	921e      	str	r2, [sp, #120]	; 0x78
9002643e:	930f      	str	r3, [sp, #60]	; 0x3c
90026440:	e6c7      	b.n	900261d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026442:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90026444:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90026446:	9c1e      	ldr	r4, [sp, #120]	; 0x78
90026448:	4433      	add	r3, r6
9002644a:	931d      	str	r3, [sp, #116]	; 0x74
9002644c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002644e:	441c      	add	r4, r3
90026450:	9b06      	ldr	r3, [sp, #24]
90026452:	3b01      	subs	r3, #1
90026454:	941e      	str	r4, [sp, #120]	; 0x78
90026456:	9306      	str	r3, [sp, #24]
90026458:	9b07      	ldr	r3, [sp, #28]
9002645a:	3302      	adds	r3, #2
9002645c:	9307      	str	r3, [sp, #28]
9002645e:	e696      	b.n	9002618e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90026460:	d028      	beq.n	900264b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026462:	9b06      	ldr	r3, [sp, #24]
90026464:	981f      	ldr	r0, [sp, #124]	; 0x7c
90026466:	3b01      	subs	r3, #1
90026468:	9d1d      	ldr	r5, [sp, #116]	; 0x74
9002646a:	fb00 5003 	mla	r0, r0, r3, r5
9002646e:	1400      	asrs	r0, r0, #16
90026470:	f53f aeaa 	bmi.w	900261c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90026474:	3901      	subs	r1, #1
90026476:	4288      	cmp	r0, r1
90026478:	f6bf aea6 	bge.w	900261c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002647c:	9920      	ldr	r1, [sp, #128]	; 0x80
9002647e:	981e      	ldr	r0, [sp, #120]	; 0x78
90026480:	fb01 0303 	mla	r3, r1, r3, r0
90026484:	141b      	asrs	r3, r3, #16
90026486:	f53f ae9f 	bmi.w	900261c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002648a:	3a01      	subs	r2, #1
9002648c:	4293      	cmp	r3, r2
9002648e:	f6bf ae9b 	bge.w	900261c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90026492:	9b06      	ldr	r3, [sp, #24]
90026494:	f64f 061f 	movw	r6, #63519	; 0xf81f
90026498:	f8dd e01c 	ldr.w	lr, [sp, #28]
9002649c:	930f      	str	r3, [sp, #60]	; 0x3c
9002649e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900264a0:	2b00      	cmp	r3, #0
900264a2:	f300 80b6 	bgt.w	90026612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
900264a6:	9b06      	ldr	r3, [sp, #24]
900264a8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900264ac:	9b07      	ldr	r3, [sp, #28]
900264ae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900264b2:	9307      	str	r3, [sp, #28]
900264b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900264b6:	2b00      	cmp	r3, #0
900264b8:	f340 8218 	ble.w	900268ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900264bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900264c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900264c2:	ee30 0a04 	vadd.f32	s0, s0, s8
900264c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900264ca:	eef0 6a62 	vmov.f32	s13, s5
900264ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
900264d2:	ee31 1a05 	vadd.f32	s2, s2, s10
900264d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900264da:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
900264de:	eef0 6a43 	vmov.f32	s13, s6
900264e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900264e6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
900264ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
900264ee:	ee61 7a27 	vmul.f32	s15, s2, s15
900264f2:	ee77 2a62 	vsub.f32	s5, s14, s5
900264f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900264fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900264fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026502:	ee12 2a90 	vmov	r2, s5
90026506:	eef0 2a47 	vmov.f32	s5, s14
9002650a:	fb92 f3f3 	sdiv	r3, r2, r3
9002650e:	ee13 2a10 	vmov	r2, s6
90026512:	931f      	str	r3, [sp, #124]	; 0x7c
90026514:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026516:	eeb0 3a67 	vmov.f32	s6, s15
9002651a:	fb92 f3f3 	sdiv	r3, r2, r3
9002651e:	9320      	str	r3, [sp, #128]	; 0x80
90026520:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90026522:	9a10      	ldr	r2, [sp, #64]	; 0x40
90026524:	3b01      	subs	r3, #1
90026526:	930e      	str	r3, [sp, #56]	; 0x38
90026528:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002652a:	bf08      	it	eq
9002652c:	4613      	moveq	r3, r2
9002652e:	9306      	str	r3, [sp, #24]
90026530:	e61f      	b.n	90026172 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90026532:	fb08 f505 	mul.w	r5, r8, r5
90026536:	fb09 5303 	mla	r3, r9, r3, r5
9002653a:	e69f      	b.n	9002627c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
9002653c:	4681      	mov	r9, r0
9002653e:	e6c6      	b.n	900262ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90026540:	f1c1 0210 	rsb	r2, r1, #16
90026544:	4341      	muls	r1, r0
90026546:	fb09 1902 	mla	r9, r9, r2, r1
9002654a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002654e:	ea4f 5259 	mov.w	r2, r9, lsr #21
90026552:	ea4f 1959 	mov.w	r9, r9, lsr #5
90026556:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002655a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002655e:	ea42 0909 	orr.w	r9, r2, r9
90026562:	fa1f f289 	uxth.w	r2, r9
90026566:	e75b      	b.n	90026420 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90026568:	f8b7 c000 	ldrh.w	ip, [r7]
9002656c:	43db      	mvns	r3, r3
9002656e:	ea4f 202c 	mov.w	r0, ip, asr #8
90026572:	fa5f fe83 	uxtb.w	lr, r3
90026576:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002657a:	ea4f 05ec 	mov.w	r5, ip, asr #3
9002657e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90026582:	fb00 f00e 	mul.w	r0, r0, lr
90026586:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9002658a:	b2db      	uxtb	r3, r3
9002658c:	1c41      	adds	r1, r0, #1
9002658e:	fb05 f50e 	mul.w	r5, r5, lr
90026592:	fb03 f30e 	mul.w	r3, r3, lr
90026596:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002659a:	1211      	asrs	r1, r2, #8
9002659c:	f021 0107 	bic.w	r1, r1, #7
900265a0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900265a4:	48d3      	ldr	r0, [pc, #844]	; (900268f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900265a6:	b2c9      	uxtb	r1, r1
900265a8:	ea00 2001 	and.w	r0, r0, r1, lsl #8
900265ac:	1c69      	adds	r1, r5, #1
900265ae:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900265b2:	10d1      	asrs	r1, r2, #3
900265b4:	00d2      	lsls	r2, r2, #3
900265b6:	f021 0103 	bic.w	r1, r1, #3
900265ba:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900265be:	00c9      	lsls	r1, r1, #3
900265c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900265c4:	4301      	orrs	r1, r0
900265c6:	1c58      	adds	r0, r3, #1
900265c8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900265cc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900265d0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900265d4:	430a      	orrs	r2, r1
900265d6:	e726      	b.n	90026426 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
900265d8:	f115 0e01 	adds.w	lr, r5, #1
900265dc:	f53f af24 	bmi.w	90026428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900265e0:	4572      	cmp	r2, lr
900265e2:	f6ff af21 	blt.w	90026428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900265e6:	f110 0e01 	adds.w	lr, r0, #1
900265ea:	f53f af1d 	bmi.w	90026428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900265ee:	4573      	cmp	r3, lr
900265f0:	f6ff af1a 	blt.w	90026428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900265f4:	b21b      	sxth	r3, r3
900265f6:	b212      	sxth	r2, r2
900265f8:	9301      	str	r3, [sp, #4]
900265fa:	9200      	str	r2, [sp, #0]
900265fc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90026600:	e9cd 5002 	strd	r5, r0, [sp, #8]
90026604:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90026608:	4639      	mov	r1, r7
9002660a:	9811      	ldr	r0, [sp, #68]	; 0x44
9002660c:	f7ff fc22 	bl	90025e54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90026610:	e70a      	b.n	90026428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026612:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90026614:	f3c3 3203 	ubfx	r2, r3, #12, #4
90026618:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9002661a:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002661e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026620:	fa1f fc82 	uxth.w	ip, r2
90026624:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026628:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9002662a:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002662e:	141f      	asrs	r7, r3, #16
90026630:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90026632:	141b      	asrs	r3, r3, #16
90026634:	fb01 3707 	mla	r7, r1, r7, r3
90026638:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002663a:	eb03 0a07 	add.w	sl, r3, r7
9002663e:	f813 9007 	ldrb.w	r9, [r3, r7]
90026642:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90026646:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002664a:	b29b      	uxth	r3, r3
9002664c:	2d00      	cmp	r5, #0
9002664e:	f000 80fe 	beq.w	9002684e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90026652:	f81a 4001 	ldrb.w	r4, [sl, r1]
90026656:	eb0a 0b01 	add.w	fp, sl, r1
9002665a:	fa1f fa85 	uxth.w	sl, r5
9002665e:	940c      	str	r4, [sp, #48]	; 0x30
90026660:	fb0a fc0c 	mul.w	ip, sl, ip
90026664:	f89b 4001 	ldrb.w	r4, [fp, #1]
90026668:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
9002666c:	eba0 000c 	sub.w	r0, r0, ip
90026670:	940d      	str	r4, [sp, #52]	; 0x34
90026672:	fa1f fa8a 	uxth.w	sl, sl
90026676:	b280      	uxth	r0, r0
90026678:	eba3 030a 	sub.w	r3, r3, sl
9002667c:	fb08 f000 	mul.w	r0, r8, r0
90026680:	b29b      	uxth	r3, r3
90026682:	fb09 0303 	mla	r3, r9, r3, r0
90026686:	980c      	ldr	r0, [sp, #48]	; 0x30
90026688:	fb0a 3300 	mla	r3, sl, r0, r3
9002668c:	fb0c 3304 	mla	r3, ip, r4, r3
90026690:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026694:	2b00      	cmp	r3, #0
90026696:	f000 80cc 	beq.w	90026832 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
9002669a:	9808      	ldr	r0, [sp, #32]
9002669c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900266a0:	9c08      	ldr	r4, [sp, #32]
900266a2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900266a6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900266aa:	f000 80d5 	beq.w	90026858 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900266ae:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900266b2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900266b6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900266ba:	fb0a fc0c 	mul.w	ip, sl, ip
900266be:	fb09 f707 	mul.w	r7, r9, r7
900266c2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900266c6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
900266ca:	f107 0b20 	add.w	fp, r7, #32
900266ce:	44cc      	add	ip, r9
900266d0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900266d4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900266d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
900266dc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900266e0:	ea4c 0909 	orr.w	r9, ip, r9
900266e4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900266e8:	8847      	ldrh	r7, [r0, #2]
900266ea:	d019      	beq.n	90026720 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
900266ec:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900266f0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900266f4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900266f8:	fb0a fc0c 	mul.w	ip, sl, ip
900266fc:	fb08 f807 	mul.w	r8, r8, r7
90026700:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90026704:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90026708:	f108 0b20 	add.w	fp, r8, #32
9002670c:	44bc      	add	ip, r7
9002670e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90026712:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90026716:	0a3f      	lsrs	r7, r7, #8
90026718:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002671c:	ea4c 0707 	orr.w	r7, ip, r7
90026720:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90026724:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90026728:	ea4f 4a07 	mov.w	sl, r7, lsl #16
9002672c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90026730:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90026734:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90026738:	ea4c 0909 	orr.w	r9, ip, r9
9002673c:	ea4a 0707 	orr.w	r7, sl, r7
90026740:	2d00      	cmp	r5, #0
90026742:	f000 808b 	beq.w	9002685c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90026746:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
9002674a:	3901      	subs	r1, #1
9002674c:	0049      	lsls	r1, r1, #1
9002674e:	3102      	adds	r1, #2
90026750:	eb00 0c01 	add.w	ip, r0, r1
90026754:	5a41      	ldrh	r1, [r0, r1]
90026756:	980c      	ldr	r0, [sp, #48]	; 0x30
90026758:	28ff      	cmp	r0, #255	; 0xff
9002675a:	d019      	beq.n	90026790 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
9002675c:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90026760:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90026762:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90026766:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002676a:	fb04 fa01 	mul.w	sl, r4, r1
9002676e:	fb08 f800 	mul.w	r8, r8, r0
90026772:	f10a 0020 	add.w	r0, sl, #32
90026776:	ea06 1158 	and.w	r1, r6, r8, lsr #5
9002677a:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002677e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90026782:	4441      	add	r1, r8
90026784:	0a00      	lsrs	r0, r0, #8
90026786:	ea06 1151 	and.w	r1, r6, r1, lsr #5
9002678a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002678e:	4301      	orrs	r1, r0
90026790:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90026792:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90026796:	2cff      	cmp	r4, #255	; 0xff
90026798:	d01a      	beq.n	900267d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
9002679a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
9002679e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900267a2:	ea4f 08e4 	mov.w	r8, r4, asr #3
900267a6:	fb04 fa00 	mul.w	sl, r4, r0
900267aa:	fb08 f80c 	mul.w	r8, r8, ip
900267ae:	f10a 0c20 	add.w	ip, sl, #32
900267b2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900267b6:	f608 0801 	addw	r8, r8, #2049	; 0x801
900267ba:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900267be:	4440      	add	r0, r8
900267c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900267c4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900267c8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900267cc:	ea40 000c 	orr.w	r0, r0, ip
900267d0:	fb15 fc02 	smulbb	ip, r5, r2
900267d4:	f1c5 0810 	rsb	r8, r5, #16
900267d8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900267dc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900267e0:	ea4f 0cec 	mov.w	ip, ip, asr #3
900267e4:	eba8 0802 	sub.w	r8, r8, r2
900267e8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900267ec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900267f0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900267f4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900267f8:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
900267fc:	ea4a 0101 	orr.w	r1, sl, r1
90026800:	437a      	muls	r2, r7
90026802:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90026806:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002680a:	fb09 2208 	mla	r2, r9, r8, r2
9002680e:	ea4b 0000 	orr.w	r0, fp, r0
90026812:	fb05 2201 	mla	r2, r5, r1, r2
90026816:	fb0c 2200 	mla	r2, ip, r0, r2
9002681a:	0d57      	lsrs	r7, r2, #21
9002681c:	0952      	lsrs	r2, r2, #5
9002681e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90026822:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90026826:	433a      	orrs	r2, r7
90026828:	2bff      	cmp	r3, #255	; 0xff
9002682a:	b292      	uxth	r2, r2
9002682c:	d127      	bne.n	9002687e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
9002682e:	f8ae 2000 	strh.w	r2, [lr]
90026832:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90026834:	f10e 0e02 	add.w	lr, lr, #2
90026838:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
9002683a:	4413      	add	r3, r2
9002683c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
9002683e:	931d      	str	r3, [sp, #116]	; 0x74
90026840:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026842:	441a      	add	r2, r3
90026844:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90026846:	3b01      	subs	r3, #1
90026848:	921e      	str	r2, [sp, #120]	; 0x78
9002684a:	930f      	str	r3, [sp, #60]	; 0x3c
9002684c:	e627      	b.n	9002649e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002684e:	fb08 f000 	mul.w	r0, r8, r0
90026852:	fb09 0303 	mla	r3, r9, r3, r0
90026856:	e71b      	b.n	90026690 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90026858:	46b9      	mov	r9, r7
9002685a:	e743      	b.n	900266e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
9002685c:	f1c2 0110 	rsb	r1, r2, #16
90026860:	437a      	muls	r2, r7
90026862:	fb09 2901 	mla	r9, r9, r1, r2
90026866:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002686a:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002686e:	ea4f 1259 	mov.w	r2, r9, lsr #5
90026872:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90026876:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002687a:	4302      	orrs	r2, r0
9002687c:	e7d4      	b.n	90026828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
9002687e:	f8be 7000 	ldrh.w	r7, [lr]
90026882:	43db      	mvns	r3, r3
90026884:	4c1b      	ldr	r4, [pc, #108]	; (900268f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90026886:	1238      	asrs	r0, r7, #8
90026888:	fa5f fc83 	uxtb.w	ip, r3
9002688c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90026890:	10fd      	asrs	r5, r7, #3
90026892:	00fb      	lsls	r3, r7, #3
90026894:	fb00 f00c 	mul.w	r0, r0, ip
90026898:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9002689c:	b2db      	uxtb	r3, r3
9002689e:	fb05 f10c 	mul.w	r1, r5, ip
900268a2:	1c45      	adds	r5, r0, #1
900268a4:	fb03 f30c 	mul.w	r3, r3, ip
900268a8:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900268ac:	1215      	asrs	r5, r2, #8
900268ae:	f025 0507 	bic.w	r5, r5, #7
900268b2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900268b6:	1c4d      	adds	r5, r1, #1
900268b8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900268bc:	10d1      	asrs	r1, r2, #3
900268be:	b2c0      	uxtb	r0, r0
900268c0:	f021 0103 	bic.w	r1, r1, #3
900268c4:	00d2      	lsls	r2, r2, #3
900268c6:	ea04 2000 	and.w	r0, r4, r0, lsl #8
900268ca:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900268ce:	00c9      	lsls	r1, r1, #3
900268d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900268d4:	4308      	orrs	r0, r1
900268d6:	1c59      	adds	r1, r3, #1
900268d8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900268dc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900268e0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
900268e4:	4318      	orrs	r0, r3
900268e6:	f8ae 0000 	strh.w	r0, [lr]
900268ea:	e7a2      	b.n	90026832 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900268ec:	b013      	add	sp, #76	; 0x4c
900268ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900268f2:	bf00      	nop
900268f4:	fffff800 	.word	0xfffff800

900268f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
900268f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900268fc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
90026900:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90026904:	fb05 4c03 	mla	ip, r5, r3, r4
90026908:	2d00      	cmp	r5, #0
9002690a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
9002690e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90026912:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90026916:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
9002691a:	8808      	ldrh	r0, [r1, #0]
9002691c:	f2c0 80a7 	blt.w	90026a6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90026920:	45aa      	cmp	sl, r5
90026922:	f340 80a4 	ble.w	90026a6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90026926:	2c00      	cmp	r4, #0
90026928:	f2c0 809f 	blt.w	90026a6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
9002692c:	42a3      	cmp	r3, r4
9002692e:	f340 809c 	ble.w	90026a6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90026932:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90026936:	1c62      	adds	r2, r4, #1
90026938:	f100 809c 	bmi.w	90026a74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002693c:	4293      	cmp	r3, r2
9002693e:	f340 8099 	ble.w	90026a74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90026942:	f1b9 0f00 	cmp.w	r9, #0
90026946:	f000 8095 	beq.w	90026a74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002694a:	f8be c002 	ldrh.w	ip, [lr, #2]
9002694e:	3501      	adds	r5, #1
90026950:	f100 8094 	bmi.w	90026a7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90026954:	45aa      	cmp	sl, r5
90026956:	f340 8091 	ble.w	90026a7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002695a:	2f00      	cmp	r7, #0
9002695c:	f000 808e 	beq.w	90026a7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90026960:	2c00      	cmp	r4, #0
90026962:	f2c0 8089 	blt.w	90026a78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90026966:	42a3      	cmp	r3, r4
90026968:	f340 8086 	ble.w	90026a78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
9002696c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90026970:	3401      	adds	r4, #1
90026972:	f100 8086 	bmi.w	90026a82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90026976:	42a3      	cmp	r3, r4
90026978:	f340 8083 	ble.w	90026a82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002697c:	f1b9 0f00 	cmp.w	r9, #0
90026980:	d07f      	beq.n	90026a82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90026982:	3301      	adds	r3, #1
90026984:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90026988:	ea4f 4408 	mov.w	r4, r8, lsl #16
9002698c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
90026990:	fb19 fe07 	smulbb	lr, r9, r7
90026994:	f1c7 0210 	rsb	r2, r7, #16
90026998:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002699c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900269a0:	eba2 0209 	sub.w	r2, r2, r9
900269a4:	ea44 0808 	orr.w	r8, r4, r8
900269a8:	ea4f 440c 	mov.w	r4, ip, lsl #16
900269ac:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900269b0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
900269b4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900269b8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
900269bc:	ea44 0c0c 	orr.w	ip, r4, ip
900269c0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900269c4:	fb04 f40c 	mul.w	r4, r4, ip
900269c8:	fb02 4808 	mla	r8, r2, r8, r4
900269cc:	041a      	lsls	r2, r3, #16
900269ce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900269d2:	b2b4      	uxth	r4, r6
900269d4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900269d8:	43f6      	mvns	r6, r6
900269da:	4313      	orrs	r3, r2
900269dc:	042a      	lsls	r2, r5, #16
900269de:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
900269e2:	b2f6      	uxtb	r6, r6
900269e4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900269e8:	fb0e 8303 	mla	r3, lr, r3, r8
900269ec:	432a      	orrs	r2, r5
900269ee:	fb07 3202 	mla	r2, r7, r2, r3
900269f2:	10c7      	asrs	r7, r0, #3
900269f4:	0d53      	lsrs	r3, r2, #21
900269f6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900269fa:	0952      	lsrs	r2, r2, #5
900269fc:	fb17 f706 	smulbb	r7, r7, r6
90026a00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90026a04:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90026a08:	431a      	orrs	r2, r3
90026a0a:	b293      	uxth	r3, r2
90026a0c:	1202      	asrs	r2, r0, #8
90026a0e:	121d      	asrs	r5, r3, #8
90026a10:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90026a14:	00c0      	lsls	r0, r0, #3
90026a16:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90026a1a:	fb12 f206 	smulbb	r2, r2, r6
90026a1e:	b2c0      	uxtb	r0, r0
90026a20:	fb05 2504 	mla	r5, r5, r4, r2
90026a24:	10da      	asrs	r2, r3, #3
90026a26:	fb10 f006 	smulbb	r0, r0, r6
90026a2a:	00db      	lsls	r3, r3, #3
90026a2c:	b2ad      	uxth	r5, r5
90026a2e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90026a32:	b2db      	uxtb	r3, r3
90026a34:	fb02 7204 	mla	r2, r2, r4, r7
90026a38:	fb03 0004 	mla	r0, r3, r4, r0
90026a3c:	1c6b      	adds	r3, r5, #1
90026a3e:	b292      	uxth	r2, r2
90026a40:	b280      	uxth	r0, r0
90026a42:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026a46:	1c43      	adds	r3, r0, #1
90026a48:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90026a4c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90026a50:	1c50      	adds	r0, r2, #1
90026a52:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90026a56:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026a5a:	0952      	lsrs	r2, r2, #5
90026a5c:	432b      	orrs	r3, r5
90026a5e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026a62:	4313      	orrs	r3, r2
90026a64:	800b      	strh	r3, [r1, #0]
90026a66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026a6a:	4680      	mov	r8, r0
90026a6c:	e763      	b.n	90026936 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90026a6e:	4684      	mov	ip, r0
90026a70:	4680      	mov	r8, r0
90026a72:	e76c      	b.n	9002694e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90026a74:	4684      	mov	ip, r0
90026a76:	e76a      	b.n	9002694e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90026a78:	4605      	mov	r5, r0
90026a7a:	e779      	b.n	90026970 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90026a7c:	4603      	mov	r3, r0
90026a7e:	4605      	mov	r5, r0
90026a80:	e782      	b.n	90026988 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90026a82:	4603      	mov	r3, r0
90026a84:	e780      	b.n	90026988 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90026a86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026a86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026a8a:	b093      	sub	sp, #76	; 0x4c
90026a8c:	461d      	mov	r5, r3
90026a8e:	9210      	str	r2, [sp, #64]	; 0x40
90026a90:	9b21      	ldr	r3, [sp, #132]	; 0x84
90026a92:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
90026a96:	910a      	str	r1, [sp, #40]	; 0x28
90026a98:	920b      	str	r2, [sp, #44]	; 0x2c
90026a9a:	6859      	ldr	r1, [r3, #4]
90026a9c:	681b      	ldr	r3, [r3, #0]
90026a9e:	9011      	str	r0, [sp, #68]	; 0x44
90026aa0:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
90026aa4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90026aa8:	fb01 2707 	mla	r7, r1, r7, r2
90026aac:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90026ab0:	9307      	str	r3, [sp, #28]
90026ab2:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026ab4:	681b      	ldr	r3, [r3, #0]
90026ab6:	9309      	str	r3, [sp, #36]	; 0x24
90026ab8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90026aba:	43db      	mvns	r3, r3
90026abc:	b2db      	uxtb	r3, r3
90026abe:	9308      	str	r3, [sp, #32]
90026ac0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90026ac2:	2b00      	cmp	r3, #0
90026ac4:	dc03      	bgt.n	90026ace <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90026ac6:	9b10      	ldr	r3, [sp, #64]	; 0x40
90026ac8:	2b00      	cmp	r3, #0
90026aca:	f340 8205 	ble.w	90026ed8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026ace:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026ad0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026ad4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026ad8:	1e48      	subs	r0, r1, #1
90026ada:	f102 3cff 	add.w	ip, r2, #4294967295
90026ade:	2d00      	cmp	r5, #0
90026ae0:	f340 80da 	ble.w	90026c98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90026ae4:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026ae8:	ea4f 4326 	mov.w	r3, r6, asr #16
90026aec:	d406      	bmi.n	90026afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90026aee:	4586      	cmp	lr, r0
90026af0:	da04      	bge.n	90026afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90026af2:	2b00      	cmp	r3, #0
90026af4:	db02      	blt.n	90026afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90026af6:	4563      	cmp	r3, ip
90026af8:	f2c0 80cf 	blt.w	90026c9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90026afc:	f11e 0e01 	adds.w	lr, lr, #1
90026b00:	f100 80c1 	bmi.w	90026c86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90026b04:	4571      	cmp	r1, lr
90026b06:	f2c0 80be 	blt.w	90026c86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90026b0a:	3301      	adds	r3, #1
90026b0c:	f100 80bb 	bmi.w	90026c86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90026b10:	429a      	cmp	r2, r3
90026b12:	f2c0 80b8 	blt.w	90026c86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90026b16:	46a9      	mov	r9, r5
90026b18:	f8dd 801c 	ldr.w	r8, [sp, #28]
90026b1c:	f1b9 0f00 	cmp.w	r9, #0
90026b20:	f340 80d8 	ble.w	90026cd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90026b24:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026b26:	1421      	asrs	r1, r4, #16
90026b28:	ea4f 4026 	mov.w	r0, r6, asr #16
90026b2c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026b30:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90026b34:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90026b38:	f100 8112 	bmi.w	90026d60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026b3c:	f10e 3aff 	add.w	sl, lr, #4294967295
90026b40:	4551      	cmp	r1, sl
90026b42:	f280 810d 	bge.w	90026d60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026b46:	2800      	cmp	r0, #0
90026b48:	f2c0 810a 	blt.w	90026d60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026b4c:	f103 3aff 	add.w	sl, r3, #4294967295
90026b50:	4550      	cmp	r0, sl
90026b52:	f280 8105 	bge.w	90026d60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026b56:	fa0f f38e 	sxth.w	r3, lr
90026b5a:	fb00 1103 	mla	r1, r0, r3, r1
90026b5e:	9809      	ldr	r0, [sp, #36]	; 0x24
90026b60:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90026b64:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90026b68:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90026b6c:	f1bc 0f00 	cmp.w	ip, #0
90026b70:	d007      	beq.n	90026b82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90026b72:	005b      	lsls	r3, r3, #1
90026b74:	eb0a 0003 	add.w	r0, sl, r3
90026b78:	f83a 3003 	ldrh.w	r3, [sl, r3]
90026b7c:	930c      	str	r3, [sp, #48]	; 0x30
90026b7e:	8843      	ldrh	r3, [r0, #2]
90026b80:	930d      	str	r3, [sp, #52]	; 0x34
90026b82:	ea4f 400e 	mov.w	r0, lr, lsl #16
90026b86:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90026b8a:	fb12 f30c 	smulbb	r3, r2, ip
90026b8e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90026b92:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90026b96:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90026b9a:	10db      	asrs	r3, r3, #3
90026b9c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90026ba0:	ea40 000e 	orr.w	r0, r0, lr
90026ba4:	f1cc 0e10 	rsb	lr, ip, #16
90026ba8:	ea4a 0101 	orr.w	r1, sl, r1
90026bac:	9f08      	ldr	r7, [sp, #32]
90026bae:	ebae 0e02 	sub.w	lr, lr, r2
90026bb2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026bb6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90026bba:	4351      	muls	r1, r2
90026bbc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90026bbe:	fb0e 1e00 	mla	lr, lr, r0, r1
90026bc2:	990c      	ldr	r1, [sp, #48]	; 0x30
90026bc4:	0410      	lsls	r0, r2, #16
90026bc6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90026bca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90026bce:	4310      	orrs	r0, r2
90026bd0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90026bd2:	0412      	lsls	r2, r2, #16
90026bd4:	fb03 e000 	mla	r0, r3, r0, lr
90026bd8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90026bdc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90026be0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90026be4:	ea42 020e 	orr.w	r2, r2, lr
90026be8:	fb03 0302 	mla	r3, r3, r2, r0
90026bec:	f8b8 0000 	ldrh.w	r0, [r8]
90026bf0:	0d5a      	lsrs	r2, r3, #21
90026bf2:	095b      	lsrs	r3, r3, #5
90026bf4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026bf8:	1201      	asrs	r1, r0, #8
90026bfa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90026bfe:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90026c02:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90026c06:	00c0      	lsls	r0, r0, #3
90026c08:	4313      	orrs	r3, r2
90026c0a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90026c0e:	fb11 f107 	smulbb	r1, r1, r7
90026c12:	b2c0      	uxtb	r0, r0
90026c14:	b29b      	uxth	r3, r3
90026c16:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90026c1a:	fb10 f007 	smulbb	r0, r0, r7
90026c1e:	fb1e fe07 	smulbb	lr, lr, r7
90026c22:	ea4f 2c23 	mov.w	ip, r3, asr #8
90026c26:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90026c2a:	fb0c 1c02 	mla	ip, ip, r2, r1
90026c2e:	10d9      	asrs	r1, r3, #3
90026c30:	00db      	lsls	r3, r3, #3
90026c32:	fa1f fc8c 	uxth.w	ip, ip
90026c36:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90026c3a:	b2db      	uxtb	r3, r3
90026c3c:	fb01 e102 	mla	r1, r1, r2, lr
90026c40:	fb03 0302 	mla	r3, r3, r2, r0
90026c44:	b289      	uxth	r1, r1
90026c46:	b29a      	uxth	r2, r3
90026c48:	f10c 0301 	add.w	r3, ip, #1
90026c4c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90026c50:	1c53      	adds	r3, r2, #1
90026c52:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026c56:	1c4a      	adds	r2, r1, #1
90026c58:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90026c5c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90026c60:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026c64:	0949      	lsrs	r1, r1, #5
90026c66:	ea43 030c 	orr.w	r3, r3, ip
90026c6a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90026c6e:	430b      	orrs	r3, r1
90026c70:	f8a8 3000 	strh.w	r3, [r8]
90026c74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026c76:	f108 0802 	add.w	r8, r8, #2
90026c7a:	f109 39ff 	add.w	r9, r9, #4294967295
90026c7e:	441c      	add	r4, r3
90026c80:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026c82:	441e      	add	r6, r3
90026c84:	e74a      	b.n	90026b1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90026c86:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026c88:	3d01      	subs	r5, #1
90026c8a:	441c      	add	r4, r3
90026c8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026c8e:	441e      	add	r6, r3
90026c90:	9b07      	ldr	r3, [sp, #28]
90026c92:	3302      	adds	r3, #2
90026c94:	9307      	str	r3, [sp, #28]
90026c96:	e722      	b.n	90026ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90026c98:	d022      	beq.n	90026ce0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90026c9a:	1e6b      	subs	r3, r5, #1
90026c9c:	981f      	ldr	r0, [sp, #124]	; 0x7c
90026c9e:	fb00 4003 	mla	r0, r0, r3, r4
90026ca2:	1400      	asrs	r0, r0, #16
90026ca4:	f53f af37 	bmi.w	90026b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026ca8:	3901      	subs	r1, #1
90026caa:	4288      	cmp	r0, r1
90026cac:	f6bf af33 	bge.w	90026b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026cb0:	9920      	ldr	r1, [sp, #128]	; 0x80
90026cb2:	fb01 6303 	mla	r3, r1, r3, r6
90026cb6:	141b      	asrs	r3, r3, #16
90026cb8:	f53f af2d 	bmi.w	90026b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026cbc:	3a01      	subs	r2, #1
90026cbe:	4293      	cmp	r3, r2
90026cc0:	f6bf af29 	bge.w	90026b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026cc4:	46a8      	mov	r8, r5
90026cc6:	f8dd 901c 	ldr.w	r9, [sp, #28]
90026cca:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
90026cce:	f1b8 0f00 	cmp.w	r8, #0
90026cd2:	dc60      	bgt.n	90026d96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90026cd4:	9b07      	ldr	r3, [sp, #28]
90026cd6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026cda:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90026cde:	9307      	str	r3, [sp, #28]
90026ce0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90026ce2:	2b00      	cmp	r3, #0
90026ce4:	f340 80f8 	ble.w	90026ed8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026ce8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90026cec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026cee:	ee30 0a04 	vadd.f32	s0, s0, s8
90026cf2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026cf6:	eef0 6a62 	vmov.f32	s13, s5
90026cfa:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026cfe:	ee31 1a05 	vadd.f32	s2, s2, s10
90026d02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026d06:	ee16 4a90 	vmov	r4, s13
90026d0a:	eef0 6a43 	vmov.f32	s13, s6
90026d0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026d12:	ee16 6a90 	vmov	r6, s13
90026d16:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026d1a:	ee61 7a27 	vmul.f32	s15, s2, s15
90026d1e:	ee77 2a62 	vsub.f32	s5, s14, s5
90026d22:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026d26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026d2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026d2e:	ee12 2a90 	vmov	r2, s5
90026d32:	eef0 2a47 	vmov.f32	s5, s14
90026d36:	fb92 f3f3 	sdiv	r3, r2, r3
90026d3a:	ee13 2a10 	vmov	r2, s6
90026d3e:	931f      	str	r3, [sp, #124]	; 0x7c
90026d40:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026d42:	eeb0 3a67 	vmov.f32	s6, s15
90026d46:	fb92 f3f3 	sdiv	r3, r2, r3
90026d4a:	9320      	str	r3, [sp, #128]	; 0x80
90026d4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90026d4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90026d50:	3b01      	subs	r3, #1
90026d52:	930a      	str	r3, [sp, #40]	; 0x28
90026d54:	bf08      	it	eq
90026d56:	4615      	moveq	r5, r2
90026d58:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026d5a:	bf18      	it	ne
90026d5c:	461d      	movne	r5, r3
90026d5e:	e6af      	b.n	90026ac0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026d60:	f111 0a01 	adds.w	sl, r1, #1
90026d64:	d486      	bmi.n	90026c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026d66:	45d6      	cmp	lr, sl
90026d68:	db84      	blt.n	90026c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026d6a:	f110 0a01 	adds.w	sl, r0, #1
90026d6e:	d481      	bmi.n	90026c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026d70:	4553      	cmp	r3, sl
90026d72:	f6ff af7f 	blt.w	90026c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026d76:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90026d78:	b21b      	sxth	r3, r3
90026d7a:	9101      	str	r1, [sp, #4]
90026d7c:	4641      	mov	r1, r8
90026d7e:	9300      	str	r3, [sp, #0]
90026d80:	fa0f f38e 	sxth.w	r3, lr
90026d84:	e9cd 0202 	strd	r0, r2, [sp, #8]
90026d88:	e9cd c704 	strd	ip, r7, [sp, #16]
90026d8c:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026d8e:	9811      	ldr	r0, [sp, #68]	; 0x44
90026d90:	f7ff fdb2 	bl	900268f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90026d94:	e76e      	b.n	90026c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026d96:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026d98:	1430      	asrs	r0, r6, #16
90026d9a:	9f09      	ldr	r7, [sp, #36]	; 0x24
90026d9c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90026da0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026da4:	1423      	asrs	r3, r4, #16
90026da6:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026daa:	fb01 3000 	mla	r0, r1, r0, r3
90026dae:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026db0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90026db4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90026db8:	8858      	ldrh	r0, [r3, #2]
90026dba:	f1be 0f00 	cmp.w	lr, #0
90026dbe:	d00b      	beq.n	90026dd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90026dc0:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90026dc4:	3901      	subs	r1, #1
90026dc6:	0049      	lsls	r1, r1, #1
90026dc8:	3102      	adds	r1, #2
90026dca:	eb03 0b01 	add.w	fp, r3, r1
90026dce:	5a5b      	ldrh	r3, [r3, r1]
90026dd0:	930e      	str	r3, [sp, #56]	; 0x38
90026dd2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90026dd6:	930f      	str	r3, [sp, #60]	; 0x3c
90026dd8:	ea4f 410c 	mov.w	r1, ip, lsl #16
90026ddc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90026de0:	fb12 f30e 	smulbb	r3, r2, lr
90026de4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90026de8:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90026dec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90026df0:	10db      	asrs	r3, r3, #3
90026df2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90026df6:	ea41 010c 	orr.w	r1, r1, ip
90026dfa:	f1ce 0c10 	rsb	ip, lr, #16
90026dfe:	ea4b 0000 	orr.w	r0, fp, r0
90026e02:	9f08      	ldr	r7, [sp, #32]
90026e04:	ebac 0c02 	sub.w	ip, ip, r2
90026e08:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026e0c:	f108 38ff 	add.w	r8, r8, #4294967295
90026e10:	4350      	muls	r0, r2
90026e12:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90026e16:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90026e18:	fb0c 0c01 	mla	ip, ip, r1, r0
90026e1c:	980e      	ldr	r0, [sp, #56]	; 0x38
90026e1e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90026e22:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90026e26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90026e28:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90026e2c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90026e30:	0412      	lsls	r2, r2, #16
90026e32:	ea4b 0101 	orr.w	r1, fp, r1
90026e36:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90026e3a:	fb03 c101 	mla	r1, r3, r1, ip
90026e3e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90026e42:	4302      	orrs	r2, r0
90026e44:	fb03 1202 	mla	r2, r3, r2, r1
90026e48:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90026e4c:	0952      	lsrs	r2, r2, #5
90026e4e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90026e52:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
90026e56:	f8b9 2000 	ldrh.w	r2, [r9]
90026e5a:	ea4b 0303 	orr.w	r3, fp, r3
90026e5e:	1211      	asrs	r1, r2, #8
90026e60:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90026e64:	b29b      	uxth	r3, r3
90026e66:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90026e6a:	00d2      	lsls	r2, r2, #3
90026e6c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90026e70:	fb11 f107 	smulbb	r1, r1, r7
90026e74:	1218      	asrs	r0, r3, #8
90026e76:	fb1c fc07 	smulbb	ip, ip, r7
90026e7a:	b2d2      	uxtb	r2, r2
90026e7c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90026e80:	fb12 f207 	smulbb	r2, r2, r7
90026e84:	fb00 100a 	mla	r0, r0, sl, r1
90026e88:	10d9      	asrs	r1, r3, #3
90026e8a:	00db      	lsls	r3, r3, #3
90026e8c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90026e90:	b280      	uxth	r0, r0
90026e92:	b2db      	uxtb	r3, r3
90026e94:	fb01 c10a 	mla	r1, r1, sl, ip
90026e98:	fb03 230a 	mla	r3, r3, sl, r2
90026e9c:	1c42      	adds	r2, r0, #1
90026e9e:	b289      	uxth	r1, r1
90026ea0:	b29b      	uxth	r3, r3
90026ea2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026ea6:	f101 0c01 	add.w	ip, r1, #1
90026eaa:	1c5a      	adds	r2, r3, #1
90026eac:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90026eb0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90026eb4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90026eb8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026eba:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90026ebe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90026ec2:	441c      	add	r4, r3
90026ec4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90026ec8:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026eca:	4310      	orrs	r0, r2
90026ecc:	441e      	add	r6, r3
90026ece:	ea40 000c 	orr.w	r0, r0, ip
90026ed2:	f829 0b02 	strh.w	r0, [r9], #2
90026ed6:	e6fa      	b.n	90026cce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90026ed8:	b013      	add	sp, #76	; 0x4c
90026eda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026ede <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90026ede:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90026ee2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90026ee6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90026eea:	fb0e 4703 	mla	r7, lr, r3, r4
90026eee:	f1be 0f00 	cmp.w	lr, #0
90026ef2:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
90026ef6:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90026efa:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90026efe:	8808      	ldrh	r0, [r1, #0]
90026f00:	db60      	blt.n	90026fc4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90026f02:	45f1      	cmp	r9, lr
90026f04:	dd5e      	ble.n	90026fc4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90026f06:	2c00      	cmp	r4, #0
90026f08:	db5a      	blt.n	90026fc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90026f0a:	42a3      	cmp	r3, r4
90026f0c:	dd58      	ble.n	90026fc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90026f0e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90026f12:	1c62      	adds	r2, r4, #1
90026f14:	d459      	bmi.n	90026fca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90026f16:	4293      	cmp	r3, r2
90026f18:	dd57      	ble.n	90026fca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90026f1a:	2d00      	cmp	r5, #0
90026f1c:	d055      	beq.n	90026fca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90026f1e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90026f22:	f11e 0e01 	adds.w	lr, lr, #1
90026f26:	d454      	bmi.n	90026fd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026f28:	45f1      	cmp	r9, lr
90026f2a:	dd52      	ble.n	90026fd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026f2c:	2e00      	cmp	r6, #0
90026f2e:	d050      	beq.n	90026fd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026f30:	2c00      	cmp	r4, #0
90026f32:	db4c      	blt.n	90026fce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90026f34:	42a3      	cmp	r3, r4
90026f36:	dd4a      	ble.n	90026fce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90026f38:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90026f3c:	3401      	adds	r4, #1
90026f3e:	d405      	bmi.n	90026f4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026f40:	42a3      	cmp	r3, r4
90026f42:	dd03      	ble.n	90026f4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026f44:	b115      	cbz	r5, 90026f4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026f46:	3301      	adds	r3, #1
90026f48:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90026f4c:	fb15 f406 	smulbb	r4, r5, r6
90026f50:	ea4f 430c 	mov.w	r3, ip, lsl #16
90026f54:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90026f58:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90026f5c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90026f60:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90026f64:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90026f68:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90026f6c:	ea43 0c0c 	orr.w	ip, r3, ip
90026f70:	f1c6 0310 	rsb	r3, r6, #16
90026f74:	ea4e 0707 	orr.w	r7, lr, r7
90026f78:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90026f7c:	1b5b      	subs	r3, r3, r5
90026f7e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90026f82:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90026f86:	437d      	muls	r5, r7
90026f88:	fb03 5c0c 	mla	ip, r3, ip, r5
90026f8c:	0403      	lsls	r3, r0, #16
90026f8e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90026f92:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90026f96:	4318      	orrs	r0, r3
90026f98:	0413      	lsls	r3, r2, #16
90026f9a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90026f9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90026fa2:	fb04 c000 	mla	r0, r4, r0, ip
90026fa6:	4313      	orrs	r3, r2
90026fa8:	fb06 0003 	mla	r0, r6, r3, r0
90026fac:	0d43      	lsrs	r3, r0, #21
90026fae:	0940      	lsrs	r0, r0, #5
90026fb0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90026fb4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90026fb8:	4318      	orrs	r0, r3
90026fba:	8008      	strh	r0, [r1, #0]
90026fbc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90026fc0:	4684      	mov	ip, r0
90026fc2:	e7a6      	b.n	90026f12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90026fc4:	4607      	mov	r7, r0
90026fc6:	4684      	mov	ip, r0
90026fc8:	e7ab      	b.n	90026f22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90026fca:	4607      	mov	r7, r0
90026fcc:	e7a9      	b.n	90026f22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90026fce:	4602      	mov	r2, r0
90026fd0:	e7b4      	b.n	90026f3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90026fd2:	4602      	mov	r2, r0
90026fd4:	e7ba      	b.n	90026f4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90026fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026fd6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026fda:	b08f      	sub	sp, #60	; 0x3c
90026fdc:	461d      	mov	r5, r3
90026fde:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90026fe0:	9107      	str	r1, [sp, #28]
90026fe2:	920c      	str	r2, [sp, #48]	; 0x30
90026fe4:	6859      	ldr	r1, [r3, #4]
90026fe6:	681b      	ldr	r3, [r3, #0]
90026fe8:	900d      	str	r0, [sp, #52]	; 0x34
90026fea:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
90026fee:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
90026ff2:	fb01 2707 	mla	r7, r1, r7, r2
90026ff6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90026ffa:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026ffc:	f8d3 8000 	ldr.w	r8, [r3]
90027000:	9b07      	ldr	r3, [sp, #28]
90027002:	2b00      	cmp	r3, #0
90027004:	dc03      	bgt.n	9002700e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90027006:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90027008:	2b00      	cmp	r3, #0
9002700a:	f340 8182 	ble.w	90027312 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
9002700e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027010:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027014:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027018:	1e48      	subs	r0, r1, #1
9002701a:	f102 3cff 	add.w	ip, r2, #4294967295
9002701e:	2d00      	cmp	r5, #0
90027020:	f340 809b 	ble.w	9002715a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90027024:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027028:	ea4f 4326 	mov.w	r3, r6, asr #16
9002702c:	d406      	bmi.n	9002703c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002702e:	4586      	cmp	lr, r0
90027030:	da04      	bge.n	9002703c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90027032:	2b00      	cmp	r3, #0
90027034:	db02      	blt.n	9002703c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90027036:	4563      	cmp	r3, ip
90027038:	f2c0 8090 	blt.w	9002715c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002703c:	f11e 0e01 	adds.w	lr, lr, #1
90027040:	f100 8084 	bmi.w	9002714c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027044:	4571      	cmp	r1, lr
90027046:	f2c0 8081 	blt.w	9002714c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002704a:	3301      	adds	r3, #1
9002704c:	d47e      	bmi.n	9002714c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002704e:	429a      	cmp	r2, r3
90027050:	db7c      	blt.n	9002714c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027052:	46aa      	mov	sl, r5
90027054:	46b9      	mov	r9, r7
90027056:	f1ba 0f00 	cmp.w	sl, #0
9002705a:	f340 8099 	ble.w	90027190 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
9002705e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027060:	1421      	asrs	r1, r4, #16
90027062:	ea4f 4026 	mov.w	r0, r6, asr #16
90027066:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002706a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002706e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90027072:	f100 80d1 	bmi.w	90027218 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027076:	f10e 3bff 	add.w	fp, lr, #4294967295
9002707a:	4559      	cmp	r1, fp
9002707c:	f280 80cc 	bge.w	90027218 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027080:	2800      	cmp	r0, #0
90027082:	f2c0 80c9 	blt.w	90027218 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027086:	f103 3bff 	add.w	fp, r3, #4294967295
9002708a:	4558      	cmp	r0, fp
9002708c:	f280 80c4 	bge.w	90027218 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027090:	fa0f fe8e 	sxth.w	lr, lr
90027094:	fb00 110e 	mla	r1, r0, lr, r1
90027098:	eb08 0041 	add.w	r0, r8, r1, lsl #1
9002709c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
900270a0:	8841      	ldrh	r1, [r0, #2]
900270a2:	f1bc 0f00 	cmp.w	ip, #0
900270a6:	d00b      	beq.n	900270c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900270a8:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
900270ac:	3b01      	subs	r3, #1
900270ae:	005b      	lsls	r3, r3, #1
900270b0:	3302      	adds	r3, #2
900270b2:	eb00 0e03 	add.w	lr, r0, r3
900270b6:	5ac3      	ldrh	r3, [r0, r3]
900270b8:	9308      	str	r3, [sp, #32]
900270ba:	f8be 3002 	ldrh.w	r3, [lr, #2]
900270be:	9309      	str	r3, [sp, #36]	; 0x24
900270c0:	ea4f 400b 	mov.w	r0, fp, lsl #16
900270c4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
900270c8:	fb12 f30c 	smulbb	r3, r2, ip
900270cc:	f1cc 0e10 	rsb	lr, ip, #16
900270d0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900270d4:	10db      	asrs	r3, r3, #3
900270d6:	ebae 0e02 	sub.w	lr, lr, r2
900270da:	ea40 000b 	orr.w	r0, r0, fp
900270de:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900270e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900270e6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900270ea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900270ee:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900270f2:	ea4b 0101 	orr.w	r1, fp, r1
900270f6:	4351      	muls	r1, r2
900270f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
900270fa:	fb0e 1e00 	mla	lr, lr, r0, r1
900270fe:	0410      	lsls	r0, r2, #16
90027100:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90027104:	9908      	ldr	r1, [sp, #32]
90027106:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002710a:	4310      	orrs	r0, r2
9002710c:	9a08      	ldr	r2, [sp, #32]
9002710e:	0412      	lsls	r2, r2, #16
90027110:	fb03 e000 	mla	r0, r3, r0, lr
90027114:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90027118:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
9002711c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90027120:	ea42 020e 	orr.w	r2, r2, lr
90027124:	fb03 0302 	mla	r3, r3, r2, r0
90027128:	0d5a      	lsrs	r2, r3, #21
9002712a:	095b      	lsrs	r3, r3, #5
9002712c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90027130:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90027134:	4313      	orrs	r3, r2
90027136:	f8a9 3000 	strh.w	r3, [r9]
9002713a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9002713c:	f109 0902 	add.w	r9, r9, #2
90027140:	f10a 3aff 	add.w	sl, sl, #4294967295
90027144:	441c      	add	r4, r3
90027146:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90027148:	441e      	add	r6, r3
9002714a:	e784      	b.n	90027056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9002714c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9002714e:	3d01      	subs	r5, #1
90027150:	3702      	adds	r7, #2
90027152:	441c      	add	r4, r3
90027154:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90027156:	441e      	add	r6, r3
90027158:	e761      	b.n	9002701e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002715a:	d01d      	beq.n	90027198 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002715c:	1e6b      	subs	r3, r5, #1
9002715e:	981b      	ldr	r0, [sp, #108]	; 0x6c
90027160:	fb00 4003 	mla	r0, r0, r3, r4
90027164:	1400      	asrs	r0, r0, #16
90027166:	f53f af74 	bmi.w	90027052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002716a:	3901      	subs	r1, #1
9002716c:	4288      	cmp	r0, r1
9002716e:	f6bf af70 	bge.w	90027052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90027172:	991c      	ldr	r1, [sp, #112]	; 0x70
90027174:	fb01 6303 	mla	r3, r1, r3, r6
90027178:	141b      	asrs	r3, r3, #16
9002717a:	f53f af6a 	bmi.w	90027052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002717e:	3a01      	subs	r2, #1
90027180:	4293      	cmp	r3, r2
90027182:	f6bf af66 	bge.w	90027052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90027186:	46a9      	mov	r9, r5
90027188:	46ba      	mov	sl, r7
9002718a:	f1b9 0f00 	cmp.w	r9, #0
9002718e:	dc5b      	bgt.n	90027248 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90027190:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90027194:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90027198:	9b07      	ldr	r3, [sp, #28]
9002719a:	2b00      	cmp	r3, #0
9002719c:	f340 80b9 	ble.w	90027312 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900271a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900271a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
900271a6:	ee30 0a04 	vadd.f32	s0, s0, s8
900271aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
900271ae:	eef0 6a62 	vmov.f32	s13, s5
900271b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900271b6:	ee31 1a05 	vadd.f32	s2, s2, s10
900271ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900271be:	ee16 4a90 	vmov	r4, s13
900271c2:	eef0 6a43 	vmov.f32	s13, s6
900271c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900271ca:	ee16 6a90 	vmov	r6, s13
900271ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
900271d2:	ee61 7a27 	vmul.f32	s15, s2, s15
900271d6:	ee77 2a62 	vsub.f32	s5, s14, s5
900271da:	ee37 3ac3 	vsub.f32	s6, s15, s6
900271de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900271e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900271e6:	ee12 2a90 	vmov	r2, s5
900271ea:	eef0 2a47 	vmov.f32	s5, s14
900271ee:	fb92 f3f3 	sdiv	r3, r2, r3
900271f2:	ee13 2a10 	vmov	r2, s6
900271f6:	931b      	str	r3, [sp, #108]	; 0x6c
900271f8:	9b18      	ldr	r3, [sp, #96]	; 0x60
900271fa:	eeb0 3a67 	vmov.f32	s6, s15
900271fe:	fb92 f3f3 	sdiv	r3, r2, r3
90027202:	931c      	str	r3, [sp, #112]	; 0x70
90027204:	9b07      	ldr	r3, [sp, #28]
90027206:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90027208:	3b01      	subs	r3, #1
9002720a:	9307      	str	r3, [sp, #28]
9002720c:	bf08      	it	eq
9002720e:	4615      	moveq	r5, r2
90027210:	9b18      	ldr	r3, [sp, #96]	; 0x60
90027212:	bf18      	it	ne
90027214:	461d      	movne	r5, r3
90027216:	e6f3      	b.n	90027000 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90027218:	f111 0b01 	adds.w	fp, r1, #1
9002721c:	d48d      	bmi.n	9002713a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002721e:	45de      	cmp	lr, fp
90027220:	db8b      	blt.n	9002713a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027222:	f110 0b01 	adds.w	fp, r0, #1
90027226:	d488      	bmi.n	9002713a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027228:	455b      	cmp	r3, fp
9002722a:	db86      	blt.n	9002713a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002722c:	b21b      	sxth	r3, r3
9002722e:	e9cd 1001 	strd	r1, r0, [sp, #4]
90027232:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90027236:	9300      	str	r3, [sp, #0]
90027238:	4642      	mov	r2, r8
9002723a:	fa0f f38e 	sxth.w	r3, lr
9002723e:	4649      	mov	r1, r9
90027240:	980d      	ldr	r0, [sp, #52]	; 0x34
90027242:	f7ff fe4c 	bl	90026ede <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90027246:	e778      	b.n	9002713a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027248:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002724a:	1420      	asrs	r0, r4, #16
9002724c:	1431      	asrs	r1, r6, #16
9002724e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90027252:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90027256:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002725a:	fb03 0101 	mla	r1, r3, r1, r0
9002725e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90027262:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90027266:	8841      	ldrh	r1, [r0, #2]
90027268:	f1be 0f00 	cmp.w	lr, #0
9002726c:	d00b      	beq.n	90027286 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
9002726e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
90027272:	3b01      	subs	r3, #1
90027274:	005b      	lsls	r3, r3, #1
90027276:	3302      	adds	r3, #2
90027278:	eb00 0b03 	add.w	fp, r0, r3
9002727c:	5ac3      	ldrh	r3, [r0, r3]
9002727e:	930a      	str	r3, [sp, #40]	; 0x28
90027280:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90027284:	930b      	str	r3, [sp, #44]	; 0x2c
90027286:	ea4f 400c 	mov.w	r0, ip, lsl #16
9002728a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002728e:	fb12 f30e 	smulbb	r3, r2, lr
90027292:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90027296:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002729a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002729e:	10db      	asrs	r3, r3, #3
900272a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900272a4:	ea40 000c 	orr.w	r0, r0, ip
900272a8:	f1ce 0c10 	rsb	ip, lr, #16
900272ac:	ea4b 0101 	orr.w	r1, fp, r1
900272b0:	f109 39ff 	add.w	r9, r9, #4294967295
900272b4:	ebac 0c02 	sub.w	ip, ip, r2
900272b8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900272bc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900272c0:	4351      	muls	r1, r2
900272c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900272c4:	fb0c 1c00 	mla	ip, ip, r0, r1
900272c8:	990a      	ldr	r1, [sp, #40]	; 0x28
900272ca:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900272ce:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
900272d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900272d4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900272d8:	0412      	lsls	r2, r2, #16
900272da:	ea4b 0000 	orr.w	r0, fp, r0
900272de:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
900272e2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900272e6:	fb03 c000 	mla	r0, r3, r0, ip
900272ea:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900272ee:	ea42 0b0b 	orr.w	fp, r2, fp
900272f2:	fb03 000b 	mla	r0, r3, fp, r0
900272f6:	0d43      	lsrs	r3, r0, #21
900272f8:	0940      	lsrs	r0, r0, #5
900272fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900272fe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90027302:	4318      	orrs	r0, r3
90027304:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90027306:	441c      	add	r4, r3
90027308:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002730a:	f82a 0b02 	strh.w	r0, [sl], #2
9002730e:	441e      	add	r6, r3
90027310:	e73b      	b.n	9002718a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90027312:	b00f      	add	sp, #60	; 0x3c
90027314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027318 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90027318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002731c:	b085      	sub	sp, #20
9002731e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90027322:	9102      	str	r1, [sp, #8]
90027324:	2c00      	cmp	r4, #0
90027326:	fb04 7103 	mla	r1, r4, r3, r7
9002732a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
9002732e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90027332:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90027336:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
9002733a:	f2c0 811b 	blt.w	90027574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
9002733e:	45a6      	cmp	lr, r4
90027340:	f340 8118 	ble.w	90027574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90027344:	2f00      	cmp	r7, #0
90027346:	f2c0 8113 	blt.w	90027570 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
9002734a:	42bb      	cmp	r3, r7
9002734c:	f340 8110 	ble.w	90027570 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90027350:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90027354:	1c7a      	adds	r2, r7, #1
90027356:	f100 8110 	bmi.w	9002757a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
9002735a:	4293      	cmp	r3, r2
9002735c:	f340 810d 	ble.w	9002757a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90027360:	2e00      	cmp	r6, #0
90027362:	f000 810c 	beq.w	9002757e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90027366:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002736a:	3401      	adds	r4, #1
9002736c:	f100 810b 	bmi.w	90027586 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90027370:	45a6      	cmp	lr, r4
90027372:	f340 8108 	ble.w	90027586 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90027376:	2800      	cmp	r0, #0
90027378:	f000 8108 	beq.w	9002758c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
9002737c:	2f00      	cmp	r7, #0
9002737e:	f2c0 8100 	blt.w	90027582 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90027382:	42bb      	cmp	r3, r7
90027384:	f340 80fd 	ble.w	90027582 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90027388:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
9002738c:	3701      	adds	r7, #1
9002738e:	f100 8100 	bmi.w	90027592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90027392:	42bb      	cmp	r3, r7
90027394:	f340 80fd 	ble.w	90027592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90027398:	2e00      	cmp	r6, #0
9002739a:	f000 80fc 	beq.w	90027596 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
9002739e:	3301      	adds	r3, #1
900273a0:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
900273a4:	b2b6      	uxth	r6, r6
900273a6:	b280      	uxth	r0, r0
900273a8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900273ac:	fb00 fe06 	mul.w	lr, r0, r6
900273b0:	0136      	lsls	r6, r6, #4
900273b2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900273b6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900273ba:	eba6 070e 	sub.w	r7, r6, lr
900273be:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900273c2:	ea4f 6914 	mov.w	r9, r4, lsr #24
900273c6:	b280      	uxth	r0, r0
900273c8:	b2bf      	uxth	r7, r7
900273ca:	1a1b      	subs	r3, r3, r0
900273cc:	ea4f 6812 	mov.w	r8, r2, lsr #24
900273d0:	fb0a f607 	mul.w	r6, sl, r7
900273d4:	b29b      	uxth	r3, r3
900273d6:	fb0b 6603 	mla	r6, fp, r3, r6
900273da:	fb00 6609 	mla	r6, r0, r9, r6
900273de:	fb0e 6608 	mla	r6, lr, r8, r6
900273e2:	f3c6 2607 	ubfx	r6, r6, #8, #8
900273e6:	9600      	str	r6, [sp, #0]
900273e8:	2e00      	cmp	r6, #0
900273ea:	f000 80be 	beq.w	9002756a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
900273ee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900273f2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900273f6:	9e02      	ldr	r6, [sp, #8]
900273f8:	fb0b fc0c 	mul.w	ip, fp, ip
900273fc:	fb0b f505 	mul.w	r5, fp, r5
90027400:	8836      	ldrh	r6, [r6, #0]
90027402:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90027406:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002740a:	9501      	str	r5, [sp, #4]
9002740c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90027410:	44dc      	add	ip, fp
90027412:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027416:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9002741a:	9503      	str	r5, [sp, #12]
9002741c:	9d01      	ldr	r5, [sp, #4]
9002741e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90027422:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90027426:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9002742a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002742e:	fb0a fc0c 	mul.w	ip, sl, ip
90027432:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90027436:	fb0a fa01 	mul.w	sl, sl, r1
9002743a:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002743e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90027442:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90027446:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002744a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002744e:	4465      	add	r5, ip
90027450:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90027454:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90027458:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002745c:	fb09 fc0c 	mul.w	ip, r9, ip
90027460:	0a2d      	lsrs	r5, r5, #8
90027462:	fb09 f904 	mul.w	r9, r9, r4
90027466:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002746a:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002746e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90027472:	f509 7480 	add.w	r4, r9, #256	; 0x100
90027476:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002747a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9002747e:	437d      	muls	r5, r7
90027480:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90027484:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90027488:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002748c:	4461      	add	r1, ip
9002748e:	fb08 f404 	mul.w	r4, r8, r4
90027492:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027496:	fb08 f802 	mul.w	r8, r8, r2
9002749a:	0a09      	lsrs	r1, r1, #8
9002749c:	0a22      	lsrs	r2, r4, #8
9002749e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
900274a2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900274a6:	fb07 f70a 	mul.w	r7, r7, sl
900274aa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900274ae:	4414      	add	r4, r2
900274b0:	f508 7280 	add.w	r2, r8, #256	; 0x100
900274b4:	0a24      	lsrs	r4, r4, #8
900274b6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900274ba:	9a03      	ldr	r2, [sp, #12]
900274bc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900274c0:	fb02 5503 	mla	r5, r2, r3, r5
900274c4:	ea4f 2818 	mov.w	r8, r8, lsr #8
900274c8:	9a00      	ldr	r2, [sp, #0]
900274ca:	fb04 540e 	mla	r4, r4, lr, r5
900274ce:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900274d2:	1235      	asrs	r5, r6, #8
900274d4:	fb01 4100 	mla	r1, r1, r0, r4
900274d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900274dc:	0a09      	lsrs	r1, r1, #8
900274de:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900274e2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900274e6:	fb03 7101 	mla	r1, r3, r1, r7
900274ea:	fb0e 1e08 	mla	lr, lr, r8, r1
900274ee:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900274f2:	fb00 e101 	mla	r1, r0, r1, lr
900274f6:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
900274fa:	b287      	uxth	r7, r0
900274fc:	0a09      	lsrs	r1, r1, #8
900274fe:	437a      	muls	r2, r7
90027500:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90027504:	1c53      	adds	r3, r2, #1
90027506:	4321      	orrs	r1, r4
90027508:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002750c:	0c0a      	lsrs	r2, r1, #16
9002750e:	f3c1 2407 	ubfx	r4, r1, #8, #8
90027512:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90027516:	b2c8      	uxtb	r0, r1
90027518:	fb12 f207 	smulbb	r2, r2, r7
9002751c:	fb14 f407 	smulbb	r4, r4, r7
90027520:	b2db      	uxtb	r3, r3
90027522:	fb10 f007 	smulbb	r0, r0, r7
90027526:	fb05 2503 	mla	r5, r5, r3, r2
9002752a:	10f2      	asrs	r2, r6, #3
9002752c:	00f6      	lsls	r6, r6, #3
9002752e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90027532:	b2ad      	uxth	r5, r5
90027534:	b2f6      	uxtb	r6, r6
90027536:	fb02 4203 	mla	r2, r2, r3, r4
9002753a:	fb06 0303 	mla	r3, r6, r3, r0
9002753e:	b294      	uxth	r4, r2
90027540:	b299      	uxth	r1, r3
90027542:	1c6b      	adds	r3, r5, #1
90027544:	1c62      	adds	r2, r4, #1
90027546:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002754a:	1c4b      	adds	r3, r1, #1
9002754c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90027550:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90027554:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90027558:	0952      	lsrs	r2, r2, #5
9002755a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002755e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90027562:	432b      	orrs	r3, r5
90027564:	4313      	orrs	r3, r2
90027566:	9a02      	ldr	r2, [sp, #8]
90027568:	8013      	strh	r3, [r2, #0]
9002756a:	b005      	add	sp, #20
9002756c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027570:	2500      	movs	r5, #0
90027572:	e6ef      	b.n	90027354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90027574:	2100      	movs	r1, #0
90027576:	460d      	mov	r5, r1
90027578:	e6f7      	b.n	9002736a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002757a:	2100      	movs	r1, #0
9002757c:	e6f5      	b.n	9002736a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002757e:	4631      	mov	r1, r6
90027580:	e6f3      	b.n	9002736a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90027582:	2400      	movs	r4, #0
90027584:	e702      	b.n	9002738c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90027586:	2200      	movs	r2, #0
90027588:	4614      	mov	r4, r2
9002758a:	e70b      	b.n	900273a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002758c:	4602      	mov	r2, r0
9002758e:	4604      	mov	r4, r0
90027590:	e708      	b.n	900273a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90027592:	2200      	movs	r2, #0
90027594:	e706      	b.n	900273a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90027596:	4632      	mov	r2, r6
90027598:	e704      	b.n	900273a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

9002759a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002759a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002759e:	b09d      	sub	sp, #116	; 0x74
900275a0:	9219      	str	r2, [sp, #100]	; 0x64
900275a2:	9307      	str	r3, [sp, #28]
900275a4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
900275a6:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
900275aa:	901b      	str	r0, [sp, #108]	; 0x6c
900275ac:	931a      	str	r3, [sp, #104]	; 0x68
900275ae:	6850      	ldr	r0, [r2, #4]
900275b0:	9117      	str	r1, [sp, #92]	; 0x5c
900275b2:	6812      	ldr	r2, [r2, #0]
900275b4:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
900275b8:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
900275bc:	fb00 1303 	mla	r3, r0, r3, r1
900275c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900275c4:	930a      	str	r3, [sp, #40]	; 0x28
900275c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900275c8:	681b      	ldr	r3, [r3, #0]
900275ca:	9310      	str	r3, [sp, #64]	; 0x40
900275cc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
900275d0:	930b      	str	r3, [sp, #44]	; 0x2c
900275d2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900275d4:	2b00      	cmp	r3, #0
900275d6:	dc03      	bgt.n	900275e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900275d8:	9b19      	ldr	r3, [sp, #100]	; 0x64
900275da:	2b00      	cmp	r3, #0
900275dc:	f340 8375 	ble.w	90027cca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900275e0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900275e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900275e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900275ea:	1e48      	subs	r0, r1, #1
900275ec:	1e57      	subs	r7, r2, #1
900275ee:	9b07      	ldr	r3, [sp, #28]
900275f0:	2b00      	cmp	r3, #0
900275f2:	f340 818e 	ble.w	90027912 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900275f6:	ea5f 4c24 	movs.w	ip, r4, asr #16
900275fa:	ea4f 4326 	mov.w	r3, r6, asr #16
900275fe:	d406      	bmi.n	9002760e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90027600:	4584      	cmp	ip, r0
90027602:	da04      	bge.n	9002760e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90027604:	2b00      	cmp	r3, #0
90027606:	db02      	blt.n	9002760e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90027608:	42bb      	cmp	r3, r7
9002760a:	f2c0 8183 	blt.w	90027914 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
9002760e:	f11c 0c01 	adds.w	ip, ip, #1
90027612:	f100 8173 	bmi.w	900278fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027616:	4561      	cmp	r1, ip
90027618:	f2c0 8170 	blt.w	900278fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002761c:	3301      	adds	r3, #1
9002761e:	f100 816d 	bmi.w	900278fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027622:	429a      	cmp	r2, r3
90027624:	f2c0 816a 	blt.w	900278fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027628:	9b07      	ldr	r3, [sp, #28]
9002762a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9002762c:	9318      	str	r3, [sp, #96]	; 0x60
9002762e:	9b18      	ldr	r3, [sp, #96]	; 0x60
90027630:	2b00      	cmp	r3, #0
90027632:	f340 818c 	ble.w	9002794e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90027636:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90027638:	ea4f 4c26 	mov.w	ip, r6, asr #16
9002763c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9002763e:	f3c4 3003 	ubfx	r0, r4, #12, #4
90027642:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90027646:	1422      	asrs	r2, r4, #16
90027648:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002764c:	689b      	ldr	r3, [r3, #8]
9002764e:	f100 81cd 	bmi.w	900279ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027652:	f103 38ff 	add.w	r8, r3, #4294967295
90027656:	4542      	cmp	r2, r8
90027658:	f280 81c8 	bge.w	900279ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002765c:	f1bc 0f00 	cmp.w	ip, #0
90027660:	f2c0 81c4 	blt.w	900279ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027664:	f10e 38ff 	add.w	r8, lr, #4294967295
90027668:	45c4      	cmp	ip, r8
9002766a:	f280 81bf 	bge.w	900279ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002766e:	b21b      	sxth	r3, r3
90027670:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027672:	fb0c 2203 	mla	r2, ip, r3, r2
90027676:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9002767a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
9002767e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90027682:	2800      	cmp	r0, #0
90027684:	f000 81a9 	beq.w	900279da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90027688:	f8d8 5004 	ldr.w	r5, [r8, #4]
9002768c:	950c      	str	r5, [sp, #48]	; 0x30
9002768e:	0e2d      	lsrs	r5, r5, #24
90027690:	9513      	str	r5, [sp, #76]	; 0x4c
90027692:	b181      	cbz	r1, 900276b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90027694:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90027698:	3b01      	subs	r3, #1
9002769a:	009b      	lsls	r3, r3, #2
9002769c:	3304      	adds	r3, #4
9002769e:	eb08 0c03 	add.w	ip, r8, r3
900276a2:	f858 3003 	ldr.w	r3, [r8, r3]
900276a6:	9308      	str	r3, [sp, #32]
900276a8:	0e1b      	lsrs	r3, r3, #24
900276aa:	9311      	str	r3, [sp, #68]	; 0x44
900276ac:	f8dc 3004 	ldr.w	r3, [ip, #4]
900276b0:	930d      	str	r3, [sp, #52]	; 0x34
900276b2:	0e1b      	lsrs	r3, r3, #24
900276b4:	9314      	str	r3, [sp, #80]	; 0x50
900276b6:	b280      	uxth	r0, r0
900276b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
900276ba:	b289      	uxth	r1, r1
900276bc:	fb00 f901 	mul.w	r9, r0, r1
900276c0:	0100      	lsls	r0, r0, #4
900276c2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900276c6:	eba0 0809 	sub.w	r8, r0, r9
900276ca:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900276ce:	9813      	ldr	r0, [sp, #76]	; 0x4c
900276d0:	b289      	uxth	r1, r1
900276d2:	fa1f f888 	uxth.w	r8, r8
900276d6:	1a5b      	subs	r3, r3, r1
900276d8:	fb08 f000 	mul.w	r0, r8, r0
900276dc:	b29b      	uxth	r3, r3
900276de:	fb03 000e 	mla	r0, r3, lr, r0
900276e2:	fb01 0005 	mla	r0, r1, r5, r0
900276e6:	9d14      	ldr	r5, [sp, #80]	; 0x50
900276e8:	fb09 0005 	mla	r0, r9, r5, r0
900276ec:	f3c0 2007 	ubfx	r0, r0, #8, #8
900276f0:	2800      	cmp	r0, #0
900276f2:	f000 80fa 	beq.w	900278ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900276f6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900276fa:	d01b      	beq.n	90027734 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
900276fc:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
90027700:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90027704:	fb0e fa0a 	mul.w	sl, lr, sl
90027708:	fb0e fe02 	mul.w	lr, lr, r2
9002770c:	ea4f 221a 	mov.w	r2, sl, lsr #8
90027710:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90027714:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90027718:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002771c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90027720:	4452      	add	r2, sl
90027722:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027726:	0a12      	lsrs	r2, r2, #8
90027728:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002772c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90027730:	ea42 020c 	orr.w	r2, r2, ip
90027734:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90027736:	2dff      	cmp	r5, #255	; 0xff
90027738:	d021      	beq.n	9002777e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
9002773a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002773c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90027740:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90027742:	fb05 fb0b 	mul.w	fp, r5, fp
90027746:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90027748:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002774c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002774e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027752:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90027756:	fb05 fa0a 	mul.w	sl, r5, sl
9002775a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002775e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90027762:	44de      	add	lr, fp
90027764:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027768:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002776c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027770:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90027774:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027778:	ea4e 050a 	orr.w	r5, lr, sl
9002777c:	950c      	str	r5, [sp, #48]	; 0x30
9002777e:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027780:	2dff      	cmp	r5, #255	; 0xff
90027782:	d021      	beq.n	900277c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90027784:	9d08      	ldr	r5, [sp, #32]
90027786:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002778a:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002778c:	fb05 fb0b 	mul.w	fp, r5, fp
90027790:	9d08      	ldr	r5, [sp, #32]
90027792:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027796:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027798:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002779c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900277a0:	fb05 fa0a 	mul.w	sl, r5, sl
900277a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900277a8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900277ac:	44de      	add	lr, fp
900277ae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900277b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900277b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900277ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900277be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900277c2:	ea4e 050a 	orr.w	r5, lr, sl
900277c6:	9508      	str	r5, [sp, #32]
900277c8:	9d14      	ldr	r5, [sp, #80]	; 0x50
900277ca:	2dff      	cmp	r5, #255	; 0xff
900277cc:	d021      	beq.n	90027812 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
900277ce:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900277d0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900277d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
900277d6:	fb05 fb0b 	mul.w	fp, r5, fp
900277da:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900277dc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900277e0:	9d14      	ldr	r5, [sp, #80]	; 0x50
900277e2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900277e6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900277ea:	fb05 fa0a 	mul.w	sl, r5, sl
900277ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900277f2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900277f6:	44de      	add	lr, fp
900277f8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900277fc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027800:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027804:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90027808:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002780c:	ea4e 050a 	orr.w	r5, lr, sl
90027810:	950d      	str	r5, [sp, #52]	; 0x34
90027812:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90027814:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90027818:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002781c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90027820:	9d08      	ldr	r5, [sp, #32]
90027822:	fb08 fc0c 	mul.w	ip, r8, ip
90027826:	fb03 cc0e 	mla	ip, r3, lr, ip
9002782a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9002782e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027830:	fb01 cc0e 	mla	ip, r1, lr, ip
90027834:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90027838:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002783a:	fb09 cc0e 	mla	ip, r9, lr, ip
9002783e:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90027842:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90027844:	fb08 f80e 	mul.w	r8, r8, lr
90027848:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002784c:	fb03 8202 	mla	r2, r3, r2, r8
90027850:	9b08      	ldr	r3, [sp, #32]
90027852:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027856:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
9002785a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002785c:	fb01 220a 	mla	r2, r1, sl, r2
90027860:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
90027864:	883b      	ldrh	r3, [r7, #0]
90027866:	fb09 2901 	mla	r9, r9, r1, r2
9002786a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9002786c:	1219      	asrs	r1, r3, #8
9002786e:	4342      	muls	r2, r0
90027870:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027874:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90027878:	1c50      	adds	r0, r2, #1
9002787a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9002787e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90027882:	ea4c 0c09 	orr.w	ip, ip, r9
90027886:	ea6f 2010 	mvn.w	r0, r0, lsr #8
9002788a:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002788e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90027892:	fa5f fc8c 	uxtb.w	ip, ip
90027896:	fb12 f205 	smulbb	r2, r2, r5
9002789a:	b2c0      	uxtb	r0, r0
9002789c:	fb1c fc05 	smulbb	ip, ip, r5
900278a0:	fb01 2100 	mla	r1, r1, r0, r2
900278a4:	10da      	asrs	r2, r3, #3
900278a6:	fb1e fe05 	smulbb	lr, lr, r5
900278aa:	00db      	lsls	r3, r3, #3
900278ac:	b289      	uxth	r1, r1
900278ae:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900278b2:	b2db      	uxtb	r3, r3
900278b4:	fb02 e200 	mla	r2, r2, r0, lr
900278b8:	fb03 c300 	mla	r3, r3, r0, ip
900278bc:	b292      	uxth	r2, r2
900278be:	fa1f fc83 	uxth.w	ip, r3
900278c2:	1c4b      	adds	r3, r1, #1
900278c4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900278c8:	f10c 0301 	add.w	r3, ip, #1
900278cc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900278d0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900278d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900278d8:	430b      	orrs	r3, r1
900278da:	1c51      	adds	r1, r2, #1
900278dc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900278e0:	0952      	lsrs	r2, r2, #5
900278e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900278e6:	4313      	orrs	r3, r2
900278e8:	803b      	strh	r3, [r7, #0]
900278ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900278ec:	3702      	adds	r7, #2
900278ee:	441c      	add	r4, r3
900278f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900278f2:	441e      	add	r6, r3
900278f4:	9b18      	ldr	r3, [sp, #96]	; 0x60
900278f6:	3b01      	subs	r3, #1
900278f8:	9318      	str	r3, [sp, #96]	; 0x60
900278fa:	e698      	b.n	9002762e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900278fc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900278fe:	441c      	add	r4, r3
90027900:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90027902:	441e      	add	r6, r3
90027904:	9b07      	ldr	r3, [sp, #28]
90027906:	3b01      	subs	r3, #1
90027908:	9307      	str	r3, [sp, #28]
9002790a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002790c:	3302      	adds	r3, #2
9002790e:	930a      	str	r3, [sp, #40]	; 0x28
90027910:	e66d      	b.n	900275ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90027912:	d023      	beq.n	9002795c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90027914:	9b07      	ldr	r3, [sp, #28]
90027916:	9829      	ldr	r0, [sp, #164]	; 0xa4
90027918:	3b01      	subs	r3, #1
9002791a:	fb00 4003 	mla	r0, r0, r3, r4
9002791e:	1400      	asrs	r0, r0, #16
90027920:	f53f ae82 	bmi.w	90027628 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027924:	3901      	subs	r1, #1
90027926:	4288      	cmp	r0, r1
90027928:	f6bf ae7e 	bge.w	90027628 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002792c:	992a      	ldr	r1, [sp, #168]	; 0xa8
9002792e:	fb01 6303 	mla	r3, r1, r3, r6
90027932:	141b      	asrs	r3, r3, #16
90027934:	f53f ae78 	bmi.w	90027628 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027938:	3a01      	subs	r2, #1
9002793a:	4293      	cmp	r3, r2
9002793c:	f6bf ae74 	bge.w	90027628 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027940:	f8dd b01c 	ldr.w	fp, [sp, #28]
90027944:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90027948:	f1bb 0f00 	cmp.w	fp, #0
9002794c:	dc6c      	bgt.n	90027a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002794e:	9b07      	ldr	r3, [sp, #28]
90027950:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027954:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90027956:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002795a:	930a      	str	r3, [sp, #40]	; 0x28
9002795c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002795e:	2b00      	cmp	r3, #0
90027960:	f340 81b3 	ble.w	90027cca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90027964:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90027968:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002796a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002796e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027972:	eef0 6a62 	vmov.f32	s13, s5
90027976:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002797a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002797e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027982:	ee16 4a90 	vmov	r4, s13
90027986:	eef0 6a43 	vmov.f32	s13, s6
9002798a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002798e:	ee16 6a90 	vmov	r6, s13
90027992:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027996:	ee61 7a27 	vmul.f32	s15, s2, s15
9002799a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002799e:	ee37 3ac3 	vsub.f32	s6, s15, s6
900279a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900279a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900279aa:	ee12 2a90 	vmov	r2, s5
900279ae:	eef0 2a47 	vmov.f32	s5, s14
900279b2:	fb92 f3f3 	sdiv	r3, r2, r3
900279b6:	ee13 2a10 	vmov	r2, s6
900279ba:	9329      	str	r3, [sp, #164]	; 0xa4
900279bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
900279be:	eeb0 3a67 	vmov.f32	s6, s15
900279c2:	fb92 f3f3 	sdiv	r3, r2, r3
900279c6:	932a      	str	r3, [sp, #168]	; 0xa8
900279c8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900279ca:	9a19      	ldr	r2, [sp, #100]	; 0x64
900279cc:	3b01      	subs	r3, #1
900279ce:	9317      	str	r3, [sp, #92]	; 0x5c
900279d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
900279d2:	bf08      	it	eq
900279d4:	4613      	moveq	r3, r2
900279d6:	9307      	str	r3, [sp, #28]
900279d8:	e5fb      	b.n	900275d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900279da:	2900      	cmp	r1, #0
900279dc:	f43f ae6b 	beq.w	900276b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900279e0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900279e4:	9308      	str	r3, [sp, #32]
900279e6:	0e1b      	lsrs	r3, r3, #24
900279e8:	9311      	str	r3, [sp, #68]	; 0x44
900279ea:	e664      	b.n	900276b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900279ec:	f112 0801 	adds.w	r8, r2, #1
900279f0:	f53f af7b 	bmi.w	900278ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900279f4:	4543      	cmp	r3, r8
900279f6:	f6ff af78 	blt.w	900278ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900279fa:	f11c 0801 	adds.w	r8, ip, #1
900279fe:	f53f af74 	bmi.w	900278ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027a02:	45c6      	cmp	lr, r8
90027a04:	f6ff af71 	blt.w	900278ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027a08:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90027a0a:	b21b      	sxth	r3, r3
90027a0c:	9201      	str	r2, [sp, #4]
90027a0e:	fa0f f28e 	sxth.w	r2, lr
90027a12:	e9cd 1504 	strd	r1, r5, [sp, #16]
90027a16:	e9cd c002 	strd	ip, r0, [sp, #8]
90027a1a:	9200      	str	r2, [sp, #0]
90027a1c:	4639      	mov	r1, r7
90027a1e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90027a20:	981b      	ldr	r0, [sp, #108]	; 0x6c
90027a22:	f7ff fc79 	bl	90027318 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90027a26:	e760      	b.n	900278ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027a28:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90027a2a:	1427      	asrs	r7, r4, #16
90027a2c:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027a2e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027a32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027a36:	1433      	asrs	r3, r6, #16
90027a38:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027a3c:	fb01 7303 	mla	r3, r1, r3, r7
90027a40:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90027a44:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90027a48:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90027a4c:	2a00      	cmp	r2, #0
90027a4e:	f000 8133 	beq.w	90027cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90027a52:	687d      	ldr	r5, [r7, #4]
90027a54:	950e      	str	r5, [sp, #56]	; 0x38
90027a56:	0e2d      	lsrs	r5, r5, #24
90027a58:	9515      	str	r5, [sp, #84]	; 0x54
90027a5a:	b178      	cbz	r0, 90027a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90027a5c:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
90027a60:	3901      	subs	r1, #1
90027a62:	0089      	lsls	r1, r1, #2
90027a64:	3104      	adds	r1, #4
90027a66:	eb07 0e01 	add.w	lr, r7, r1
90027a6a:	5879      	ldr	r1, [r7, r1]
90027a6c:	9109      	str	r1, [sp, #36]	; 0x24
90027a6e:	0e09      	lsrs	r1, r1, #24
90027a70:	9112      	str	r1, [sp, #72]	; 0x48
90027a72:	f8de 1004 	ldr.w	r1, [lr, #4]
90027a76:	910f      	str	r1, [sp, #60]	; 0x3c
90027a78:	0e09      	lsrs	r1, r1, #24
90027a7a:	9116      	str	r1, [sp, #88]	; 0x58
90027a7c:	b292      	uxth	r2, r2
90027a7e:	9915      	ldr	r1, [sp, #84]	; 0x54
90027a80:	b280      	uxth	r0, r0
90027a82:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027a84:	fb02 f800 	mul.w	r8, r2, r0
90027a88:	0112      	lsls	r2, r2, #4
90027a8a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90027a8e:	eba2 0e08 	sub.w	lr, r2, r8
90027a92:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90027a96:	b280      	uxth	r0, r0
90027a98:	fa1f fe8e 	uxth.w	lr, lr
90027a9c:	1a12      	subs	r2, r2, r0
90027a9e:	fb0e f101 	mul.w	r1, lr, r1
90027aa2:	b292      	uxth	r2, r2
90027aa4:	fb02 110c 	mla	r1, r2, ip, r1
90027aa8:	fb00 1105 	mla	r1, r0, r5, r1
90027aac:	9d16      	ldr	r5, [sp, #88]	; 0x58
90027aae:	fb08 1105 	mla	r1, r8, r5, r1
90027ab2:	f3c1 2107 	ubfx	r1, r1, #8, #8
90027ab6:	2900      	cmp	r1, #0
90027ab8:	f000 80f5 	beq.w	90027ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90027abc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90027ac0:	d019      	beq.n	90027af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90027ac2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90027ac6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90027aca:	fb0c fa0a 	mul.w	sl, ip, sl
90027ace:	fb0c fc03 	mul.w	ip, ip, r3
90027ad2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90027ad6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90027ada:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90027ade:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90027ae2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90027ae6:	4453      	add	r3, sl
90027ae8:	0a3f      	lsrs	r7, r7, #8
90027aea:	0a1b      	lsrs	r3, r3, #8
90027aec:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90027af0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90027af4:	433b      	orrs	r3, r7
90027af6:	9d15      	ldr	r5, [sp, #84]	; 0x54
90027af8:	2dff      	cmp	r5, #255	; 0xff
90027afa:	d020      	beq.n	90027b3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90027afc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027afe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027b02:	9d15      	ldr	r5, [sp, #84]	; 0x54
90027b04:	436f      	muls	r7, r5
90027b06:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027b08:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027b0c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027b10:	9d15      	ldr	r5, [sp, #84]	; 0x54
90027b12:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90027b16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027b1a:	fb05 fa0a 	mul.w	sl, r5, sl
90027b1e:	44bc      	add	ip, r7
90027b20:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90027b24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027b28:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027b2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027b30:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027b34:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027b38:	ea4c 050a 	orr.w	r5, ip, sl
90027b3c:	950e      	str	r5, [sp, #56]	; 0x38
90027b3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027b40:	2dff      	cmp	r5, #255	; 0xff
90027b42:	d020      	beq.n	90027b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90027b44:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027b46:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027b4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027b4c:	436f      	muls	r7, r5
90027b4e:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027b50:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027b54:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027b58:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027b5a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90027b5e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027b62:	fb05 fa0a 	mul.w	sl, r5, sl
90027b66:	44bc      	add	ip, r7
90027b68:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90027b6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027b70:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027b74:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027b78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027b7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027b80:	ea4c 050a 	orr.w	r5, ip, sl
90027b84:	9509      	str	r5, [sp, #36]	; 0x24
90027b86:	9d16      	ldr	r5, [sp, #88]	; 0x58
90027b88:	2dff      	cmp	r5, #255	; 0xff
90027b8a:	d020      	beq.n	90027bce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90027b8c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027b8e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027b92:	9d16      	ldr	r5, [sp, #88]	; 0x58
90027b94:	436f      	muls	r7, r5
90027b96:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027b98:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027b9c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027ba0:	9d16      	ldr	r5, [sp, #88]	; 0x58
90027ba2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90027ba6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027baa:	fb05 fa0a 	mul.w	sl, r5, sl
90027bae:	44bc      	add	ip, r7
90027bb0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90027bb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027bb8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027bbc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027bc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027bc4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027bc8:	ea4c 050a 	orr.w	r5, ip, sl
90027bcc:	950f      	str	r5, [sp, #60]	; 0x3c
90027bce:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027bd0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90027bd4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90027bd8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027bdc:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027bde:	fb0e f707 	mul.w	r7, lr, r7
90027be2:	fb02 770c 	mla	r7, r2, ip, r7
90027be6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90027bea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027bec:	fb00 770c 	mla	r7, r0, ip, r7
90027bf0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90027bf4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027bf6:	fb08 770c 	mla	r7, r8, ip, r7
90027bfa:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90027bfe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90027c00:	fb0e fe0c 	mul.w	lr, lr, ip
90027c04:	0a3f      	lsrs	r7, r7, #8
90027c06:	fb02 e303 	mla	r3, r2, r3, lr
90027c0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
90027c0c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90027c10:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90027c14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90027c16:	fb00 330a 	mla	r3, r0, sl, r3
90027c1a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90027c1e:	f8b9 0000 	ldrh.w	r0, [r9]
90027c22:	fb08 3c0c 	mla	ip, r8, ip, r3
90027c26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90027c28:	1202      	asrs	r2, r0, #8
90027c2a:	4359      	muls	r1, r3
90027c2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027c30:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90027c34:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90027c38:	1c4b      	adds	r3, r1, #1
90027c3a:	ea47 070c 	orr.w	r7, r7, ip
90027c3e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90027c42:	0c3b      	lsrs	r3, r7, #16
90027c44:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90027c48:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90027c4c:	b2ff      	uxtb	r7, r7
90027c4e:	fb13 f305 	smulbb	r3, r3, r5
90027c52:	b2c9      	uxtb	r1, r1
90027c54:	fb17 f705 	smulbb	r7, r7, r5
90027c58:	fb02 3201 	mla	r2, r2, r1, r3
90027c5c:	10c3      	asrs	r3, r0, #3
90027c5e:	fb1c fc05 	smulbb	ip, ip, r5
90027c62:	00c0      	lsls	r0, r0, #3
90027c64:	b292      	uxth	r2, r2
90027c66:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90027c6a:	b2c0      	uxtb	r0, r0
90027c6c:	fb03 c301 	mla	r3, r3, r1, ip
90027c70:	fb00 7001 	mla	r0, r0, r1, r7
90027c74:	1c51      	adds	r1, r2, #1
90027c76:	b29b      	uxth	r3, r3
90027c78:	b280      	uxth	r0, r0
90027c7a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90027c7e:	f100 0c01 	add.w	ip, r0, #1
90027c82:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90027c86:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90027c8a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90027c8e:	ea4c 0202 	orr.w	r2, ip, r2
90027c92:	f103 0c01 	add.w	ip, r3, #1
90027c96:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90027c9a:	095b      	lsrs	r3, r3, #5
90027c9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90027ca0:	431a      	orrs	r2, r3
90027ca2:	f8a9 2000 	strh.w	r2, [r9]
90027ca6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90027ca8:	f109 0902 	add.w	r9, r9, #2
90027cac:	f10b 3bff 	add.w	fp, fp, #4294967295
90027cb0:	441c      	add	r4, r3
90027cb2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90027cb4:	441e      	add	r6, r3
90027cb6:	e647      	b.n	90027948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90027cb8:	2800      	cmp	r0, #0
90027cba:	f43f aedf 	beq.w	90027a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90027cbe:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90027cc2:	9109      	str	r1, [sp, #36]	; 0x24
90027cc4:	0e09      	lsrs	r1, r1, #24
90027cc6:	9112      	str	r1, [sp, #72]	; 0x48
90027cc8:	e6d8      	b.n	90027a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90027cca:	b01d      	add	sp, #116	; 0x74
90027ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027cd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90027cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027cd4:	b085      	sub	sp, #20
90027cd6:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90027cda:	9102      	str	r1, [sp, #8]
90027cdc:	2c00      	cmp	r4, #0
90027cde:	fb04 7103 	mla	r1, r4, r3, r7
90027ce2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90027ce6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90027cea:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90027cee:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90027cf2:	f2c0 810c 	blt.w	90027f0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90027cf6:	45a6      	cmp	lr, r4
90027cf8:	f340 8109 	ble.w	90027f0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90027cfc:	2f00      	cmp	r7, #0
90027cfe:	f2c0 8104 	blt.w	90027f0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90027d02:	42bb      	cmp	r3, r7
90027d04:	f340 8101 	ble.w	90027f0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90027d08:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90027d0c:	1c7a      	adds	r2, r7, #1
90027d0e:	f100 8101 	bmi.w	90027f14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90027d12:	4293      	cmp	r3, r2
90027d14:	f340 80fe 	ble.w	90027f14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90027d18:	2e00      	cmp	r6, #0
90027d1a:	f000 80fd 	beq.w	90027f18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90027d1e:	f8dc 1004 	ldr.w	r1, [ip, #4]
90027d22:	3401      	adds	r4, #1
90027d24:	f100 80fc 	bmi.w	90027f20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90027d28:	45a6      	cmp	lr, r4
90027d2a:	f340 80f9 	ble.w	90027f20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90027d2e:	2800      	cmp	r0, #0
90027d30:	f000 80f9 	beq.w	90027f26 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90027d34:	2f00      	cmp	r7, #0
90027d36:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90027d3a:	f2c0 80ef 	blt.w	90027f1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90027d3e:	42bb      	cmp	r3, r7
90027d40:	f340 80ec 	ble.w	90027f1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90027d44:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90027d48:	3701      	adds	r7, #1
90027d4a:	f100 80ef 	bmi.w	90027f2c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90027d4e:	42bb      	cmp	r3, r7
90027d50:	f340 80ec 	ble.w	90027f2c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90027d54:	2e00      	cmp	r6, #0
90027d56:	f000 80eb 	beq.w	90027f30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90027d5a:	6852      	ldr	r2, [r2, #4]
90027d5c:	b2b6      	uxth	r6, r6
90027d5e:	b280      	uxth	r0, r0
90027d60:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90027d64:	fb00 fe06 	mul.w	lr, r0, r6
90027d68:	0136      	lsls	r6, r6, #4
90027d6a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90027d6e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90027d72:	eba6 070e 	sub.w	r7, r6, lr
90027d76:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90027d7a:	ea4f 6914 	mov.w	r9, r4, lsr #24
90027d7e:	b280      	uxth	r0, r0
90027d80:	b2bf      	uxth	r7, r7
90027d82:	1a1b      	subs	r3, r3, r0
90027d84:	ea4f 6812 	mov.w	r8, r2, lsr #24
90027d88:	fb07 f60a 	mul.w	r6, r7, sl
90027d8c:	b29b      	uxth	r3, r3
90027d8e:	fb0b 6603 	mla	r6, fp, r3, r6
90027d92:	fb00 6609 	mla	r6, r0, r9, r6
90027d96:	fb0e 6608 	mla	r6, lr, r8, r6
90027d9a:	f3c6 2607 	ubfx	r6, r6, #8, #8
90027d9e:	9600      	str	r6, [sp, #0]
90027da0:	2e00      	cmp	r6, #0
90027da2:	f000 80af 	beq.w	90027f04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90027da6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90027daa:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90027dae:	9e02      	ldr	r6, [sp, #8]
90027db0:	fb0b fc0c 	mul.w	ip, fp, ip
90027db4:	fb0b f505 	mul.w	r5, fp, r5
90027db8:	8836      	ldrh	r6, [r6, #0]
90027dba:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90027dbe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90027dc2:	9501      	str	r5, [sp, #4]
90027dc4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90027dc8:	44dc      	add	ip, fp
90027dca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027dce:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90027dd2:	9503      	str	r5, [sp, #12]
90027dd4:	9d01      	ldr	r5, [sp, #4]
90027dd6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90027dda:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90027dde:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90027de2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90027de6:	fb0a fc0c 	mul.w	ip, sl, ip
90027dea:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90027dee:	fb0a fa01 	mul.w	sl, sl, r1
90027df2:	ea4f 251c 	mov.w	r5, ip, lsr #8
90027df6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90027dfa:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90027dfe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90027e02:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90027e06:	4465      	add	r5, ip
90027e08:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90027e0c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90027e10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027e14:	fb09 fc0c 	mul.w	ip, r9, ip
90027e18:	0a2d      	lsrs	r5, r5, #8
90027e1a:	fb09 f904 	mul.w	r9, r9, r4
90027e1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027e22:	ea4f 211c 	mov.w	r1, ip, lsr #8
90027e26:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90027e2a:	f509 7480 	add.w	r4, r9, #256	; 0x100
90027e2e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90027e32:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90027e36:	437d      	muls	r5, r7
90027e38:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90027e3c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90027e40:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90027e44:	4461      	add	r1, ip
90027e46:	fb08 f404 	mul.w	r4, r8, r4
90027e4a:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027e4e:	fb08 f802 	mul.w	r8, r8, r2
90027e52:	0a09      	lsrs	r1, r1, #8
90027e54:	0a22      	lsrs	r2, r4, #8
90027e56:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90027e5a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90027e5e:	fb07 f70a 	mul.w	r7, r7, sl
90027e62:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90027e66:	4414      	add	r4, r2
90027e68:	f508 7280 	add.w	r2, r8, #256	; 0x100
90027e6c:	0a24      	lsrs	r4, r4, #8
90027e6e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90027e72:	9a03      	ldr	r2, [sp, #12]
90027e74:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90027e78:	fb02 5503 	mla	r5, r2, r3, r5
90027e7c:	ea4f 2818 	mov.w	r8, r8, lsr #8
90027e80:	fb04 540e 	mla	r4, r4, lr, r5
90027e84:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90027e88:	fb01 4100 	mla	r1, r1, r0, r4
90027e8c:	0a09      	lsrs	r1, r1, #8
90027e8e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90027e92:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90027e96:	fb03 7101 	mla	r1, r3, r1, r7
90027e9a:	9b00      	ldr	r3, [sp, #0]
90027e9c:	fb0e 1e08 	mla	lr, lr, r8, r1
90027ea0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90027ea4:	43da      	mvns	r2, r3
90027ea6:	1233      	asrs	r3, r6, #8
90027ea8:	fb00 e101 	mla	r1, r0, r1, lr
90027eac:	10f0      	asrs	r0, r6, #3
90027eae:	b2d2      	uxtb	r2, r2
90027eb0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90027eb4:	0a09      	lsrs	r1, r1, #8
90027eb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90027eba:	00f6      	lsls	r6, r6, #3
90027ebc:	4353      	muls	r3, r2
90027ebe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90027ec2:	4350      	muls	r0, r2
90027ec4:	b2f6      	uxtb	r6, r6
90027ec6:	4321      	orrs	r1, r4
90027ec8:	4356      	muls	r6, r2
90027eca:	1c5a      	adds	r2, r3, #1
90027ecc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90027ed0:	0c0b      	lsrs	r3, r1, #16
90027ed2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027ed6:	1c42      	adds	r2, r0, #1
90027ed8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027edc:	0a0a      	lsrs	r2, r1, #8
90027ede:	021b      	lsls	r3, r3, #8
90027ee0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90027ee4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90027ee8:	00d2      	lsls	r2, r2, #3
90027eea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90027eee:	4313      	orrs	r3, r2
90027ef0:	1c72      	adds	r2, r6, #1
90027ef2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90027ef6:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90027efa:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90027efe:	4319      	orrs	r1, r3
90027f00:	9b02      	ldr	r3, [sp, #8]
90027f02:	8019      	strh	r1, [r3, #0]
90027f04:	b005      	add	sp, #20
90027f06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027f0a:	2500      	movs	r5, #0
90027f0c:	e6fe      	b.n	90027d0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90027f0e:	2100      	movs	r1, #0
90027f10:	460d      	mov	r5, r1
90027f12:	e706      	b.n	90027d22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027f14:	2100      	movs	r1, #0
90027f16:	e704      	b.n	90027d22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027f18:	4631      	mov	r1, r6
90027f1a:	e702      	b.n	90027d22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027f1c:	2400      	movs	r4, #0
90027f1e:	e713      	b.n	90027d48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90027f20:	2200      	movs	r2, #0
90027f22:	4614      	mov	r4, r2
90027f24:	e71a      	b.n	90027d5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027f26:	4602      	mov	r2, r0
90027f28:	4604      	mov	r4, r0
90027f2a:	e717      	b.n	90027d5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027f2c:	2200      	movs	r2, #0
90027f2e:	e715      	b.n	90027d5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027f30:	4632      	mov	r2, r6
90027f32:	e713      	b.n	90027d5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90027f34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027f38:	b09b      	sub	sp, #108	; 0x6c
90027f3a:	9218      	str	r2, [sp, #96]	; 0x60
90027f3c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90027f3e:	9019      	str	r0, [sp, #100]	; 0x64
90027f40:	9116      	str	r1, [sp, #88]	; 0x58
90027f42:	6850      	ldr	r0, [r2, #4]
90027f44:	9307      	str	r3, [sp, #28]
90027f46:	6812      	ldr	r2, [r2, #0]
90027f48:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90027f4c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
90027f50:	fb00 1303 	mla	r3, r0, r3, r1
90027f54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90027f58:	930a      	str	r3, [sp, #40]	; 0x28
90027f5a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90027f5c:	681b      	ldr	r3, [r3, #0]
90027f5e:	930f      	str	r3, [sp, #60]	; 0x3c
90027f60:	9b16      	ldr	r3, [sp, #88]	; 0x58
90027f62:	2b00      	cmp	r3, #0
90027f64:	dc03      	bgt.n	90027f6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027f66:	9b18      	ldr	r3, [sp, #96]	; 0x60
90027f68:	2b00      	cmp	r3, #0
90027f6a:	f340 8387 	ble.w	9002867c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90027f6e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90027f70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027f74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027f78:	1e48      	subs	r0, r1, #1
90027f7a:	1e57      	subs	r7, r2, #1
90027f7c:	9b07      	ldr	r3, [sp, #28]
90027f7e:	2b00      	cmp	r3, #0
90027f80:	f340 8166 	ble.w	90028250 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90027f84:	ea5f 4c24 	movs.w	ip, r4, asr #16
90027f88:	ea4f 4326 	mov.w	r3, r6, asr #16
90027f8c:	d406      	bmi.n	90027f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027f8e:	4584      	cmp	ip, r0
90027f90:	da04      	bge.n	90027f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027f92:	2b00      	cmp	r3, #0
90027f94:	db02      	blt.n	90027f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027f96:	42bb      	cmp	r3, r7
90027f98:	f2c0 815b 	blt.w	90028252 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90027f9c:	f11c 0c01 	adds.w	ip, ip, #1
90027fa0:	f100 814b 	bmi.w	9002823a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027fa4:	4561      	cmp	r1, ip
90027fa6:	f2c0 8148 	blt.w	9002823a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027faa:	3301      	adds	r3, #1
90027fac:	f100 8145 	bmi.w	9002823a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027fb0:	429a      	cmp	r2, r3
90027fb2:	f2c0 8142 	blt.w	9002823a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90027fb6:	9b07      	ldr	r3, [sp, #28]
90027fb8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90027fba:	9317      	str	r3, [sp, #92]	; 0x5c
90027fbc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90027fbe:	2b00      	cmp	r3, #0
90027fc0:	f340 8165 	ble.w	9002828e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90027fc4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
90027fc6:	ea4f 4c26 	mov.w	ip, r6, asr #16
90027fca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90027fcc:	f3c4 3103 	ubfx	r1, r4, #12, #4
90027fd0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90027fd4:	1422      	asrs	r2, r4, #16
90027fd6:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027fda:	689b      	ldr	r3, [r3, #8]
90027fdc:	f100 81d5 	bmi.w	9002838a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027fe0:	f103 38ff 	add.w	r8, r3, #4294967295
90027fe4:	4542      	cmp	r2, r8
90027fe6:	f280 81d0 	bge.w	9002838a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027fea:	f1bc 0f00 	cmp.w	ip, #0
90027fee:	f2c0 81cc 	blt.w	9002838a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027ff2:	f10e 38ff 	add.w	r8, lr, #4294967295
90027ff6:	45c4      	cmp	ip, r8
90027ff8:	f280 81c7 	bge.w	9002838a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027ffc:	b21b      	sxth	r3, r3
90027ffe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90028000:	fb0c 2203 	mla	r2, ip, r3, r2
90028004:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90028008:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
9002800c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90028010:	2900      	cmp	r1, #0
90028012:	f000 8182 	beq.w	9002831a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90028016:	f8d8 5004 	ldr.w	r5, [r8, #4]
9002801a:	950b      	str	r5, [sp, #44]	; 0x2c
9002801c:	0e2d      	lsrs	r5, r5, #24
9002801e:	9512      	str	r5, [sp, #72]	; 0x48
90028020:	b180      	cbz	r0, 90028044 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90028022:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90028026:	3b01      	subs	r3, #1
90028028:	009b      	lsls	r3, r3, #2
9002802a:	3304      	adds	r3, #4
9002802c:	eb08 0c03 	add.w	ip, r8, r3
90028030:	f858 3003 	ldr.w	r3, [r8, r3]
90028034:	9308      	str	r3, [sp, #32]
90028036:	0e1b      	lsrs	r3, r3, #24
90028038:	9310      	str	r3, [sp, #64]	; 0x40
9002803a:	f8dc 3004 	ldr.w	r3, [ip, #4]
9002803e:	930c      	str	r3, [sp, #48]	; 0x30
90028040:	0e1b      	lsrs	r3, r3, #24
90028042:	9313      	str	r3, [sp, #76]	; 0x4c
90028044:	b289      	uxth	r1, r1
90028046:	9b12      	ldr	r3, [sp, #72]	; 0x48
90028048:	b280      	uxth	r0, r0
9002804a:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002804c:	fb01 f900 	mul.w	r9, r1, r0
90028050:	0109      	lsls	r1, r1, #4
90028052:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90028056:	eba1 0809 	sub.w	r8, r1, r9
9002805a:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
9002805e:	b280      	uxth	r0, r0
90028060:	fa1f f888 	uxth.w	r8, r8
90028064:	1a09      	subs	r1, r1, r0
90028066:	fb08 f303 	mul.w	r3, r8, r3
9002806a:	b289      	uxth	r1, r1
9002806c:	fb01 330e 	mla	r3, r1, lr, r3
90028070:	fb00 3305 	mla	r3, r0, r5, r3
90028074:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90028076:	fb09 3305 	mla	r3, r9, r5, r3
9002807a:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002807e:	2b00      	cmp	r3, #0
90028080:	f000 80d2 	beq.w	90028228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90028084:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90028088:	d01b      	beq.n	900280c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
9002808a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9002808e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90028092:	fb0e fa0a 	mul.w	sl, lr, sl
90028096:	fb0e fe02 	mul.w	lr, lr, r2
9002809a:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002809e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900280a2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900280a6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900280aa:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900280ae:	4452      	add	r2, sl
900280b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900280b4:	0a12      	lsrs	r2, r2, #8
900280b6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900280ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900280be:	ea42 020c 	orr.w	r2, r2, ip
900280c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
900280c4:	2dff      	cmp	r5, #255	; 0xff
900280c6:	d021      	beq.n	9002810c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
900280c8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900280ca:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900280ce:	9d12      	ldr	r5, [sp, #72]	; 0x48
900280d0:	fb05 fb0b 	mul.w	fp, r5, fp
900280d4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900280d6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900280da:	9d12      	ldr	r5, [sp, #72]	; 0x48
900280dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900280e0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900280e4:	fb05 fa0a 	mul.w	sl, r5, sl
900280e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900280ec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900280f0:	44de      	add	lr, fp
900280f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900280f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900280fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900280fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90028102:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90028106:	ea4e 050a 	orr.w	r5, lr, sl
9002810a:	950b      	str	r5, [sp, #44]	; 0x2c
9002810c:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002810e:	2dff      	cmp	r5, #255	; 0xff
90028110:	d021      	beq.n	90028156 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90028112:	9d08      	ldr	r5, [sp, #32]
90028114:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90028118:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002811a:	fb05 fb0b 	mul.w	fp, r5, fp
9002811e:	9d08      	ldr	r5, [sp, #32]
90028120:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90028124:	9d10      	ldr	r5, [sp, #64]	; 0x40
90028126:	fb05 fa0e 	mul.w	sl, r5, lr
9002812a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002812e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90028132:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90028136:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002813a:	44de      	add	lr, fp
9002813c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028140:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028144:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028148:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002814c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90028150:	ea4e 050a 	orr.w	r5, lr, sl
90028154:	9508      	str	r5, [sp, #32]
90028156:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90028158:	2dff      	cmp	r5, #255	; 0xff
9002815a:	d021      	beq.n	900281a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
9002815c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002815e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90028162:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90028164:	fb05 fb0b 	mul.w	fp, r5, fp
90028168:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002816a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002816e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90028170:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90028174:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90028178:	fb05 fa0a 	mul.w	sl, r5, sl
9002817c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90028180:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90028184:	44de      	add	lr, fp
90028186:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002818a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002818e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028192:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90028196:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002819a:	ea4e 050a 	orr.w	r5, lr, sl
9002819e:	950c      	str	r5, [sp, #48]	; 0x30
900281a0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900281a2:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
900281a6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900281aa:	2bff      	cmp	r3, #255	; 0xff
900281ac:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900281b0:	9d08      	ldr	r5, [sp, #32]
900281b2:	fb08 fc0c 	mul.w	ip, r8, ip
900281b6:	fb01 cc0e 	mla	ip, r1, lr, ip
900281ba:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900281be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900281c0:	fb00 cc0e 	mla	ip, r0, lr, ip
900281c4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900281c8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900281ca:	fb09 cc0e 	mla	ip, r9, lr, ip
900281ce:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
900281d2:	fb08 f80e 	mul.w	r8, r8, lr
900281d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900281da:	fb01 8202 	mla	r2, r1, r2, r8
900281de:	9908      	ldr	r1, [sp, #32]
900281e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900281e4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900281e8:	990c      	ldr	r1, [sp, #48]	; 0x30
900281ea:	fb00 220a 	mla	r2, r0, sl, r2
900281ee:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
900281f2:	fb09 2900 	mla	r9, r9, r0, r2
900281f6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900281fa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900281fe:	ea4c 0c09 	orr.w	ip, ip, r9
90028202:	ea4f 221c 	mov.w	r2, ip, lsr #8
90028206:	f040 8091 	bne.w	9002832c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002820a:	ea4f 135c 	mov.w	r3, ip, lsr #5
9002820e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
90028212:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90028216:	f022 0207 	bic.w	r2, r2, #7
9002821a:	431a      	orrs	r2, r3
9002821c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90028220:	ea4c 0c02 	orr.w	ip, ip, r2
90028224:	f8a7 c000 	strh.w	ip, [r7]
90028228:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9002822a:	3702      	adds	r7, #2
9002822c:	441c      	add	r4, r3
9002822e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90028230:	441e      	add	r6, r3
90028232:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90028234:	3b01      	subs	r3, #1
90028236:	9317      	str	r3, [sp, #92]	; 0x5c
90028238:	e6c0      	b.n	90027fbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
9002823a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9002823c:	441c      	add	r4, r3
9002823e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90028240:	441e      	add	r6, r3
90028242:	9b07      	ldr	r3, [sp, #28]
90028244:	3b01      	subs	r3, #1
90028246:	9307      	str	r3, [sp, #28]
90028248:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002824a:	3302      	adds	r3, #2
9002824c:	930a      	str	r3, [sp, #40]	; 0x28
9002824e:	e695      	b.n	90027f7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90028250:	d024      	beq.n	9002829c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90028252:	9b07      	ldr	r3, [sp, #28]
90028254:	9827      	ldr	r0, [sp, #156]	; 0x9c
90028256:	3b01      	subs	r3, #1
90028258:	fb00 4003 	mla	r0, r0, r3, r4
9002825c:	1400      	asrs	r0, r0, #16
9002825e:	f53f aeaa 	bmi.w	90027fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90028262:	3901      	subs	r1, #1
90028264:	4288      	cmp	r0, r1
90028266:	f6bf aea6 	bge.w	90027fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002826a:	9928      	ldr	r1, [sp, #160]	; 0xa0
9002826c:	fb01 6303 	mla	r3, r1, r3, r6
90028270:	141b      	asrs	r3, r3, #16
90028272:	f53f aea0 	bmi.w	90027fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90028276:	3a01      	subs	r2, #1
90028278:	4293      	cmp	r3, r2
9002827a:	f6bf ae9c 	bge.w	90027fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002827e:	f8dd b01c 	ldr.w	fp, [sp, #28]
90028282:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
90028286:	f1bb 0f00 	cmp.w	fp, #0
9002828a:	f300 809a 	bgt.w	900283c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002828e:	9b07      	ldr	r3, [sp, #28]
90028290:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90028294:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90028296:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002829a:	930a      	str	r3, [sp, #40]	; 0x28
9002829c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002829e:	2b00      	cmp	r3, #0
900282a0:	f340 81ec 	ble.w	9002867c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900282a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900282a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
900282aa:	ee30 0a04 	vadd.f32	s0, s0, s8
900282ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
900282b2:	eef0 6a62 	vmov.f32	s13, s5
900282b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900282ba:	ee31 1a05 	vadd.f32	s2, s2, s10
900282be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900282c2:	ee16 4a90 	vmov	r4, s13
900282c6:	eef0 6a43 	vmov.f32	s13, s6
900282ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900282ce:	ee16 6a90 	vmov	r6, s13
900282d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900282d6:	ee61 7a27 	vmul.f32	s15, s2, s15
900282da:	ee77 2a62 	vsub.f32	s5, s14, s5
900282de:	ee37 3ac3 	vsub.f32	s6, s15, s6
900282e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900282e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900282ea:	ee12 2a90 	vmov	r2, s5
900282ee:	eef0 2a47 	vmov.f32	s5, s14
900282f2:	fb92 f3f3 	sdiv	r3, r2, r3
900282f6:	ee13 2a10 	vmov	r2, s6
900282fa:	9327      	str	r3, [sp, #156]	; 0x9c
900282fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
900282fe:	eeb0 3a67 	vmov.f32	s6, s15
90028302:	fb92 f3f3 	sdiv	r3, r2, r3
90028306:	9328      	str	r3, [sp, #160]	; 0xa0
90028308:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002830a:	9a18      	ldr	r2, [sp, #96]	; 0x60
9002830c:	3b01      	subs	r3, #1
9002830e:	9316      	str	r3, [sp, #88]	; 0x58
90028310:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028312:	bf08      	it	eq
90028314:	4613      	moveq	r3, r2
90028316:	9307      	str	r3, [sp, #28]
90028318:	e622      	b.n	90027f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
9002831a:	2800      	cmp	r0, #0
9002831c:	f43f ae92 	beq.w	90028044 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90028320:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90028324:	9308      	str	r3, [sp, #32]
90028326:	0e1b      	lsrs	r3, r3, #24
90028328:	9310      	str	r3, [sp, #64]	; 0x40
9002832a:	e68b      	b.n	90028044 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002832c:	8839      	ldrh	r1, [r7, #0]
9002832e:	43db      	mvns	r3, r3
90028330:	4dd4      	ldr	r5, [pc, #848]	; (90028684 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90028332:	ea4f 2e21 	mov.w	lr, r1, asr #8
90028336:	fa5f f883 	uxtb.w	r8, r3
9002833a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9002833e:	10c8      	asrs	r0, r1, #3
90028340:	00cb      	lsls	r3, r1, #3
90028342:	fb0e fe08 	mul.w	lr, lr, r8
90028346:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002834a:	b2db      	uxtb	r3, r3
9002834c:	f10e 0101 	add.w	r1, lr, #1
90028350:	fb00 f008 	mul.w	r0, r0, r8
90028354:	fb03 f308 	mul.w	r3, r3, r8
90028358:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
9002835c:	ea4f 411c 	mov.w	r1, ip, lsr #16
90028360:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90028364:	f100 0e01 	add.w	lr, r0, #1
90028368:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
9002836c:	b2c9      	uxtb	r1, r1
9002836e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90028372:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90028376:	00d2      	lsls	r2, r2, #3
90028378:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002837c:	430a      	orrs	r2, r1
9002837e:	1c59      	adds	r1, r3, #1
90028380:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90028384:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90028388:	e748      	b.n	9002821c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
9002838a:	f112 0801 	adds.w	r8, r2, #1
9002838e:	f53f af4b 	bmi.w	90028228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90028392:	4543      	cmp	r3, r8
90028394:	f6ff af48 	blt.w	90028228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90028398:	f11c 0801 	adds.w	r8, ip, #1
9002839c:	f53f af44 	bmi.w	90028228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900283a0:	45c6      	cmp	lr, r8
900283a2:	f6ff af41 	blt.w	90028228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900283a6:	b21b      	sxth	r3, r3
900283a8:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900283ac:	fa0f f28e 	sxth.w	r2, lr
900283b0:	e9cd 1003 	strd	r1, r0, [sp, #12]
900283b4:	9200      	str	r2, [sp, #0]
900283b6:	4639      	mov	r1, r7
900283b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900283ba:	9819      	ldr	r0, [sp, #100]	; 0x64
900283bc:	f7ff fc88 	bl	90027cd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
900283c0:	e732      	b.n	90028228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900283c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900283c4:	1421      	asrs	r1, r4, #16
900283c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900283c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
900283cc:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
900283d0:	1433      	asrs	r3, r6, #16
900283d2:	f3c6 3003 	ubfx	r0, r6, #12, #4
900283d6:	fb07 1303 	mla	r3, r7, r3, r1
900283da:	990f      	ldr	r1, [sp, #60]	; 0x3c
900283dc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
900283e0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900283e4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900283e8:	2a00      	cmp	r2, #0
900283ea:	f000 8108 	beq.w	900285fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
900283ee:	684d      	ldr	r5, [r1, #4]
900283f0:	950d      	str	r5, [sp, #52]	; 0x34
900283f2:	0e2d      	lsrs	r5, r5, #24
900283f4:	9514      	str	r5, [sp, #80]	; 0x50
900283f6:	b178      	cbz	r0, 90028418 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900283f8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
900283fc:	3f01      	subs	r7, #1
900283fe:	00bf      	lsls	r7, r7, #2
90028400:	3704      	adds	r7, #4
90028402:	eb01 0e07 	add.w	lr, r1, r7
90028406:	59c9      	ldr	r1, [r1, r7]
90028408:	9109      	str	r1, [sp, #36]	; 0x24
9002840a:	0e09      	lsrs	r1, r1, #24
9002840c:	9111      	str	r1, [sp, #68]	; 0x44
9002840e:	f8de 1004 	ldr.w	r1, [lr, #4]
90028412:	910e      	str	r1, [sp, #56]	; 0x38
90028414:	0e09      	lsrs	r1, r1, #24
90028416:	9115      	str	r1, [sp, #84]	; 0x54
90028418:	b292      	uxth	r2, r2
9002841a:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002841c:	b280      	uxth	r0, r0
9002841e:	fb02 f900 	mul.w	r9, r2, r0
90028422:	0112      	lsls	r2, r2, #4
90028424:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90028428:	eba2 0e09 	sub.w	lr, r2, r9
9002842c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90028430:	9a14      	ldr	r2, [sp, #80]	; 0x50
90028432:	b280      	uxth	r0, r0
90028434:	fa1f fe8e 	uxth.w	lr, lr
90028438:	1a09      	subs	r1, r1, r0
9002843a:	fb0e f202 	mul.w	r2, lr, r2
9002843e:	b289      	uxth	r1, r1
90028440:	fb01 220c 	mla	r2, r1, ip, r2
90028444:	fb00 2205 	mla	r2, r0, r5, r2
90028448:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002844a:	fb09 2205 	mla	r2, r9, r5, r2
9002844e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90028452:	2a00      	cmp	r2, #0
90028454:	f000 80ca 	beq.w	900285ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90028458:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9002845c:	d019      	beq.n	90028492 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
9002845e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90028462:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90028466:	fb0c fa0a 	mul.w	sl, ip, sl
9002846a:	fb0c fc03 	mul.w	ip, ip, r3
9002846e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90028472:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90028476:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9002847a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002847e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90028482:	4453      	add	r3, sl
90028484:	0a3f      	lsrs	r7, r7, #8
90028486:	0a1b      	lsrs	r3, r3, #8
90028488:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9002848c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90028490:	433b      	orrs	r3, r7
90028492:	9d14      	ldr	r5, [sp, #80]	; 0x50
90028494:	2dff      	cmp	r5, #255	; 0xff
90028496:	d020      	beq.n	900284da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90028498:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002849a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002849e:	9d14      	ldr	r5, [sp, #80]	; 0x50
900284a0:	436f      	muls	r7, r5
900284a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900284a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900284a8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900284ac:	9d14      	ldr	r5, [sp, #80]	; 0x50
900284ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900284b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900284b6:	fb05 fa0a 	mul.w	sl, r5, sl
900284ba:	44bc      	add	ip, r7
900284bc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900284c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900284c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900284c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900284cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900284d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900284d4:	ea4c 050a 	orr.w	r5, ip, sl
900284d8:	950d      	str	r5, [sp, #52]	; 0x34
900284da:	9d11      	ldr	r5, [sp, #68]	; 0x44
900284dc:	2dff      	cmp	r5, #255	; 0xff
900284de:	d020      	beq.n	90028522 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
900284e0:	9d09      	ldr	r5, [sp, #36]	; 0x24
900284e2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900284e6:	9d11      	ldr	r5, [sp, #68]	; 0x44
900284e8:	436f      	muls	r7, r5
900284ea:	9d09      	ldr	r5, [sp, #36]	; 0x24
900284ec:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
900284f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
900284f2:	fb05 fa0c 	mul.w	sl, r5, ip
900284f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900284fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900284fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90028502:	44bc      	add	ip, r7
90028504:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90028508:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002850c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028510:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028514:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90028518:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002851c:	ea4c 050a 	orr.w	r5, ip, sl
90028520:	9509      	str	r5, [sp, #36]	; 0x24
90028522:	9d15      	ldr	r5, [sp, #84]	; 0x54
90028524:	2dff      	cmp	r5, #255	; 0xff
90028526:	d020      	beq.n	9002856a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90028528:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002852a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002852e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90028530:	436f      	muls	r7, r5
90028532:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90028534:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028538:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002853c:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002853e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90028542:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90028546:	fb05 fa0a 	mul.w	sl, r5, sl
9002854a:	44bc      	add	ip, r7
9002854c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90028550:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028554:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028558:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002855c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028560:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90028564:	ea4c 050a 	orr.w	r5, ip, sl
90028568:	950e      	str	r5, [sp, #56]	; 0x38
9002856a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002856c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90028570:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90028574:	2aff      	cmp	r2, #255	; 0xff
90028576:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002857a:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002857c:	fb0e f707 	mul.w	r7, lr, r7
90028580:	fb01 770c 	mla	r7, r1, ip, r7
90028584:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90028588:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002858a:	fb00 770c 	mla	r7, r0, ip, r7
9002858e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90028592:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90028594:	fb09 770c 	mla	r7, r9, ip, r7
90028598:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9002859c:	fb0e fe0c 	mul.w	lr, lr, ip
900285a0:	ea4f 2717 	mov.w	r7, r7, lsr #8
900285a4:	fb01 e303 	mla	r3, r1, r3, lr
900285a8:	9909      	ldr	r1, [sp, #36]	; 0x24
900285aa:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900285ae:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900285b2:	990e      	ldr	r1, [sp, #56]	; 0x38
900285b4:	fb00 330a 	mla	r3, r0, sl, r3
900285b8:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
900285bc:	fb09 3c0c 	mla	ip, r9, ip, r3
900285c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900285c4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900285c8:	ea47 070c 	orr.w	r7, r7, ip
900285cc:	ea4f 2317 	mov.w	r3, r7, lsr #8
900285d0:	d11e      	bne.n	90028610 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
900285d2:	097a      	lsrs	r2, r7, #5
900285d4:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
900285d8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900285dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900285e0:	f023 0307 	bic.w	r3, r3, #7
900285e4:	4313      	orrs	r3, r2
900285e6:	431f      	orrs	r7, r3
900285e8:	f8a8 7000 	strh.w	r7, [r8]
900285ec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900285ee:	f108 0802 	add.w	r8, r8, #2
900285f2:	f10b 3bff 	add.w	fp, fp, #4294967295
900285f6:	441c      	add	r4, r3
900285f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900285fa:	441e      	add	r6, r3
900285fc:	e643      	b.n	90028286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900285fe:	2800      	cmp	r0, #0
90028600:	f43f af0a 	beq.w	90028418 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90028604:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90028608:	9109      	str	r1, [sp, #36]	; 0x24
9002860a:	0e09      	lsrs	r1, r1, #24
9002860c:	9111      	str	r1, [sp, #68]	; 0x44
9002860e:	e703      	b.n	90028418 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90028610:	f8b8 1000 	ldrh.w	r1, [r8]
90028614:	43d2      	mvns	r2, r2
90028616:	ea4f 2c21 	mov.w	ip, r1, asr #8
9002861a:	fa5f fe82 	uxtb.w	lr, r2
9002861e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90028622:	10c8      	asrs	r0, r1, #3
90028624:	00ca      	lsls	r2, r1, #3
90028626:	fb0c fc0e 	mul.w	ip, ip, lr
9002862a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002862e:	b2d2      	uxtb	r2, r2
90028630:	f10c 0101 	add.w	r1, ip, #1
90028634:	fb00 f00e 	mul.w	r0, r0, lr
90028638:	fb02 f20e 	mul.w	r2, r2, lr
9002863c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028640:	0c39      	lsrs	r1, r7, #16
90028642:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028646:	490f      	ldr	r1, [pc, #60]	; (90028684 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90028648:	fa5f fc8c 	uxtb.w	ip, ip
9002864c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90028650:	1c41      	adds	r1, r0, #1
90028652:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90028656:	1c51      	adds	r1, r2, #1
90028658:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002865c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90028660:	00c0      	lsls	r0, r0, #3
90028662:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90028666:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002866a:	f3c7 07c4 	ubfx	r7, r7, #3, #5
9002866e:	ea4c 0c00 	orr.w	ip, ip, r0
90028672:	ea47 0c0c 	orr.w	ip, r7, ip
90028676:	f8a8 c000 	strh.w	ip, [r8]
9002867a:	e7b7      	b.n	900285ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
9002867c:	b01b      	add	sp, #108	; 0x6c
9002867e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028682:	bf00      	nop
90028684:	fffff800 	.word	0xfffff800

90028688 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90028688:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002868c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90028690:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90028694:	2d00      	cmp	r5, #0
90028696:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
9002869a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002869e:	fb05 0e03 	mla	lr, r5, r3, r0
900286a2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
900286a6:	f2c0 808c 	blt.w	900287c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900286aa:	45a9      	cmp	r9, r5
900286ac:	f340 8089 	ble.w	900287c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900286b0:	2800      	cmp	r0, #0
900286b2:	f2c0 8084 	blt.w	900287be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900286b6:	4580      	cmp	r8, r0
900286b8:	f340 8081 	ble.w	900287be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900286bc:	ea4f 045e 	mov.w	r4, lr, lsr #1
900286c0:	f01e 0f01 	tst.w	lr, #1
900286c4:	5d16      	ldrb	r6, [r2, r4]
900286c6:	bf0c      	ite	eq
900286c8:	f006 060f 	andeq.w	r6, r6, #15
900286cc:	1136      	asrne	r6, r6, #4
900286ce:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900286d2:	b2f6      	uxtb	r6, r6
900286d4:	1c44      	adds	r4, r0, #1
900286d6:	d477      	bmi.n	900287c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900286d8:	45a0      	cmp	r8, r4
900286da:	dd75      	ble.n	900287c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900286dc:	2f00      	cmp	r7, #0
900286de:	d075      	beq.n	900287cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
900286e0:	f10e 0a01 	add.w	sl, lr, #1
900286e4:	ea4f 045a 	mov.w	r4, sl, lsr #1
900286e8:	f01a 0f01 	tst.w	sl, #1
900286ec:	5d14      	ldrb	r4, [r2, r4]
900286ee:	bf0c      	ite	eq
900286f0:	f004 040f 	andeq.w	r4, r4, #15
900286f4:	1124      	asrne	r4, r4, #4
900286f6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900286fa:	b2e4      	uxtb	r4, r4
900286fc:	3501      	adds	r5, #1
900286fe:	d469      	bmi.n	900287d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90028700:	45a9      	cmp	r9, r5
90028702:	dd67      	ble.n	900287d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90028704:	f1bc 0f00 	cmp.w	ip, #0
90028708:	d067      	beq.n	900287da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
9002870a:	2800      	cmp	r0, #0
9002870c:	db60      	blt.n	900287d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002870e:	4580      	cmp	r8, r0
90028710:	dd5e      	ble.n	900287d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90028712:	eb03 090e 	add.w	r9, r3, lr
90028716:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002871a:	f019 0f01 	tst.w	r9, #1
9002871e:	5d55      	ldrb	r5, [r2, r5]
90028720:	bf0c      	ite	eq
90028722:	f005 050f 	andeq.w	r5, r5, #15
90028726:	112d      	asrne	r5, r5, #4
90028728:	eb05 1505 	add.w	r5, r5, r5, lsl #4
9002872c:	b2ed      	uxtb	r5, r5
9002872e:	3001      	adds	r0, #1
90028730:	d456      	bmi.n	900287e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90028732:	4580      	cmp	r8, r0
90028734:	dd54      	ble.n	900287e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90028736:	2f00      	cmp	r7, #0
90028738:	d054      	beq.n	900287e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
9002873a:	3301      	adds	r3, #1
9002873c:	449e      	add	lr, r3
9002873e:	ea4f 035e 	mov.w	r3, lr, lsr #1
90028742:	f01e 0f01 	tst.w	lr, #1
90028746:	5cd0      	ldrb	r0, [r2, r3]
90028748:	bf0c      	ite	eq
9002874a:	f000 000f 	andeq.w	r0, r0, #15
9002874e:	1100      	asrne	r0, r0, #4
90028750:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028754:	b2c3      	uxtb	r3, r0
90028756:	b2ba      	uxth	r2, r7
90028758:	fa1f fc8c 	uxth.w	ip, ip
9002875c:	fb02 f00c 	mul.w	r0, r2, ip
90028760:	0112      	lsls	r2, r2, #4
90028762:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90028766:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
9002876a:	1a12      	subs	r2, r2, r0
9002876c:	fa1f fc8c 	uxth.w	ip, ip
90028770:	b292      	uxth	r2, r2
90028772:	eba7 070c 	sub.w	r7, r7, ip
90028776:	4362      	muls	r2, r4
90028778:	b2bf      	uxth	r7, r7
9002877a:	fb06 2207 	mla	r2, r6, r7, r2
9002877e:	fb0c 2505 	mla	r5, ip, r5, r2
90028782:	fb00 5303 	mla	r3, r0, r3, r5
90028786:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002878a:	b1b3      	cbz	r3, 900287ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
9002878c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
90028790:	435a      	muls	r2, r3
90028792:	1c53      	adds	r3, r2, #1
90028794:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028798:	4a2d      	ldr	r2, [pc, #180]	; (90028850 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
9002879a:	121b      	asrs	r3, r3, #8
9002879c:	6812      	ldr	r2, [r2, #0]
9002879e:	2bff      	cmp	r3, #255	; 0xff
900287a0:	ea4f 2612 	mov.w	r6, r2, lsr #8
900287a4:	d120      	bne.n	900287e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
900287a6:	0950      	lsrs	r0, r2, #5
900287a8:	4b2a      	ldr	r3, [pc, #168]	; (90028854 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
900287aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900287ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900287b2:	4033      	ands	r3, r6
900287b4:	4318      	orrs	r0, r3
900287b6:	4302      	orrs	r2, r0
900287b8:	800a      	strh	r2, [r1, #0]
900287ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900287be:	2600      	movs	r6, #0
900287c0:	e788      	b.n	900286d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
900287c2:	2400      	movs	r4, #0
900287c4:	4626      	mov	r6, r4
900287c6:	e799      	b.n	900286fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900287c8:	2400      	movs	r4, #0
900287ca:	e797      	b.n	900286fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900287cc:	463c      	mov	r4, r7
900287ce:	e795      	b.n	900286fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900287d0:	2500      	movs	r5, #0
900287d2:	e7ac      	b.n	9002872e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
900287d4:	2300      	movs	r3, #0
900287d6:	461d      	mov	r5, r3
900287d8:	e7bd      	b.n	90028756 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900287da:	4663      	mov	r3, ip
900287dc:	4665      	mov	r5, ip
900287de:	e7ba      	b.n	90028756 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900287e0:	2300      	movs	r3, #0
900287e2:	e7b8      	b.n	90028756 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900287e4:	463b      	mov	r3, r7
900287e6:	e7b6      	b.n	90028756 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900287e8:	880d      	ldrh	r5, [r1, #0]
900287ea:	b29f      	uxth	r7, r3
900287ec:	f3c2 4007 	ubfx	r0, r2, #16, #8
900287f0:	43db      	mvns	r3, r3
900287f2:	122c      	asrs	r4, r5, #8
900287f4:	fb10 f007 	smulbb	r0, r0, r7
900287f8:	b2db      	uxtb	r3, r3
900287fa:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900287fe:	b2f6      	uxtb	r6, r6
90028800:	b2d2      	uxtb	r2, r2
90028802:	fb04 0403 	mla	r4, r4, r3, r0
90028806:	10e8      	asrs	r0, r5, #3
90028808:	fb12 f207 	smulbb	r2, r2, r7
9002880c:	00ed      	lsls	r5, r5, #3
9002880e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90028812:	b2a4      	uxth	r4, r4
90028814:	fb16 f607 	smulbb	r6, r6, r7
90028818:	b2ed      	uxtb	r5, r5
9002881a:	fb00 6603 	mla	r6, r0, r3, r6
9002881e:	fb05 2303 	mla	r3, r5, r3, r2
90028822:	b2b0      	uxth	r0, r6
90028824:	b29a      	uxth	r2, r3
90028826:	1c63      	adds	r3, r4, #1
90028828:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9002882c:	1c53      	adds	r3, r2, #1
9002882e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028832:	1c42      	adds	r2, r0, #1
90028834:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90028838:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002883c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90028840:	0940      	lsrs	r0, r0, #5
90028842:	4323      	orrs	r3, r4
90028844:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90028848:	4303      	orrs	r3, r0
9002884a:	800b      	strh	r3, [r1, #0]
9002884c:	e7b5      	b.n	900287ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
9002884e:	bf00      	nop
90028850:	24028e3c 	.word	0x24028e3c
90028854:	00fff800 	.word	0x00fff800

90028858 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002885c:	b097      	sub	sp, #92	; 0x5c
9002885e:	9214      	str	r2, [sp, #80]	; 0x50
90028860:	9309      	str	r3, [sp, #36]	; 0x24
90028862:	9a25      	ldr	r2, [sp, #148]	; 0x94
90028864:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90028868:	9015      	str	r0, [sp, #84]	; 0x54
9002886a:	910d      	str	r1, [sp, #52]	; 0x34
9002886c:	6850      	ldr	r0, [r2, #4]
9002886e:	930f      	str	r3, [sp, #60]	; 0x3c
90028870:	6812      	ldr	r2, [r2, #0]
90028872:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90028876:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
9002887a:	fb00 1303 	mla	r3, r0, r3, r1
9002887e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90028882:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90028884:	689b      	ldr	r3, [r3, #8]
90028886:	3301      	adds	r3, #1
90028888:	f023 0301 	bic.w	r3, r3, #1
9002888c:	930a      	str	r3, [sp, #40]	; 0x28
9002888e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90028890:	681f      	ldr	r7, [r3, #0]
90028892:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90028894:	2b00      	cmp	r3, #0
90028896:	dc03      	bgt.n	900288a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90028898:	9b14      	ldr	r3, [sp, #80]	; 0x50
9002889a:	2b00      	cmp	r3, #0
9002889c:	f340 8289 	ble.w	90028db2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900288a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900288a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900288a6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900288aa:	1e48      	subs	r0, r1, #1
900288ac:	f102 3cff 	add.w	ip, r2, #4294967295
900288b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900288b2:	2b00      	cmp	r3, #0
900288b4:	f340 80c5 	ble.w	90028a42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
900288b8:	ea5f 4e24 	movs.w	lr, r4, asr #16
900288bc:	ea4f 4326 	mov.w	r3, r6, asr #16
900288c0:	d406      	bmi.n	900288d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900288c2:	4586      	cmp	lr, r0
900288c4:	da04      	bge.n	900288d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900288c6:	2b00      	cmp	r3, #0
900288c8:	db02      	blt.n	900288d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900288ca:	4563      	cmp	r3, ip
900288cc:	f2c0 80ba 	blt.w	90028a44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900288d0:	f11e 0e01 	adds.w	lr, lr, #1
900288d4:	f100 80ab 	bmi.w	90028a2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900288d8:	4571      	cmp	r1, lr
900288da:	f2c0 80a8 	blt.w	90028a2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900288de:	3301      	adds	r3, #1
900288e0:	f100 80a5 	bmi.w	90028a2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900288e4:	429a      	cmp	r2, r3
900288e6:	f2c0 80a2 	blt.w	90028a2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900288ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
900288ec:	46c8      	mov	r8, r9
900288ee:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
900288f2:	930e      	str	r3, [sp, #56]	; 0x38
900288f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900288f6:	2b00      	cmp	r3, #0
900288f8:	f340 80c4 	ble.w	90028a84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
900288fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900288fe:	1430      	asrs	r0, r6, #16
90028900:	f3c4 3203 	ubfx	r2, r4, #12, #4
90028904:	f3c6 3103 	ubfx	r1, r6, #12, #4
90028908:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
9002890c:	1423      	asrs	r3, r4, #16
9002890e:	f100 814f 	bmi.w	90028bb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90028912:	f10c 3bff 	add.w	fp, ip, #4294967295
90028916:	455b      	cmp	r3, fp
90028918:	f280 814a 	bge.w	90028bb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002891c:	2800      	cmp	r0, #0
9002891e:	f2c0 8147 	blt.w	90028bb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90028922:	f10e 3bff 	add.w	fp, lr, #4294967295
90028926:	4558      	cmp	r0, fp
90028928:	f280 8142 	bge.w	90028bb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002892c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9002892e:	fb00 3305 	mla	r3, r0, r5, r3
90028932:	0858      	lsrs	r0, r3, #1
90028934:	07dd      	lsls	r5, r3, #31
90028936:	f817 c000 	ldrb.w	ip, [r7, r0]
9002893a:	bf54      	ite	pl
9002893c:	f00c 0c0f 	andpl.w	ip, ip, #15
90028940:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028944:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028948:	fa5f fc8c 	uxtb.w	ip, ip
9002894c:	2a00      	cmp	r2, #0
9002894e:	f000 80dd 	beq.w	90028b0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90028952:	1c58      	adds	r0, r3, #1
90028954:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90028958:	07c0      	lsls	r0, r0, #31
9002895a:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002895e:	bf54      	ite	pl
90028960:	f00e 0e0f 	andpl.w	lr, lr, #15
90028964:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90028968:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9002896c:	fa5f f08e 	uxtb.w	r0, lr
90028970:	9010      	str	r0, [sp, #64]	; 0x40
90028972:	b1d9      	cbz	r1, 900289ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90028974:	4453      	add	r3, sl
90028976:	0858      	lsrs	r0, r3, #1
90028978:	07dd      	lsls	r5, r3, #31
9002897a:	f103 0301 	add.w	r3, r3, #1
9002897e:	5c38      	ldrb	r0, [r7, r0]
90028980:	bf54      	ite	pl
90028982:	f000 000f 	andpl.w	r0, r0, #15
90028986:	1100      	asrmi	r0, r0, #4
90028988:	07dd      	lsls	r5, r3, #31
9002898a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002898e:	b2c0      	uxtb	r0, r0
90028990:	900b      	str	r0, [sp, #44]	; 0x2c
90028992:	ea4f 0053 	mov.w	r0, r3, lsr #1
90028996:	f817 e000 	ldrb.w	lr, [r7, r0]
9002899a:	bf54      	ite	pl
9002899c:	f00e 030f 	andpl.w	r3, lr, #15
900289a0:	ea4f 132e 	movmi.w	r3, lr, asr #4
900289a4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900289a8:	b2db      	uxtb	r3, r3
900289aa:	9311      	str	r3, [sp, #68]	; 0x44
900289ac:	b292      	uxth	r2, r2
900289ae:	9d10      	ldr	r5, [sp, #64]	; 0x40
900289b0:	b289      	uxth	r1, r1
900289b2:	fb02 f301 	mul.w	r3, r2, r1
900289b6:	0112      	lsls	r2, r2, #4
900289b8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900289bc:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
900289c0:	1ad2      	subs	r2, r2, r3
900289c2:	b289      	uxth	r1, r1
900289c4:	b292      	uxth	r2, r2
900289c6:	1a40      	subs	r0, r0, r1
900289c8:	436a      	muls	r2, r5
900289ca:	b280      	uxth	r0, r0
900289cc:	fb0c 2c00 	mla	ip, ip, r0, r2
900289d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900289d2:	fb01 c102 	mla	r1, r1, r2, ip
900289d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
900289d8:	fb03 1302 	mla	r3, r3, r2, r1
900289dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
900289e0:	b1db      	cbz	r3, 90028a1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900289e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900289e4:	4353      	muls	r3, r2
900289e6:	1c5a      	adds	r2, r3, #1
900289e8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900289ec:	4ac6      	ldr	r2, [pc, #792]	; (90028d08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900289ee:	121b      	asrs	r3, r3, #8
900289f0:	6812      	ldr	r2, [r2, #0]
900289f2:	2bff      	cmp	r3, #255	; 0xff
900289f4:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900289f8:	f040 8099 	bne.w	90028b2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
900289fc:	0953      	lsrs	r3, r2, #5
900289fe:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90028a02:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028a06:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90028a0a:	f02c 0c07 	bic.w	ip, ip, #7
90028a0e:	ea43 0c0c 	orr.w	ip, r3, ip
90028a12:	ea4c 0202 	orr.w	r2, ip, r2
90028a16:	f8a8 2000 	strh.w	r2, [r8]
90028a1a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90028a1c:	f108 0802 	add.w	r8, r8, #2
90028a20:	441c      	add	r4, r3
90028a22:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028a24:	441e      	add	r6, r3
90028a26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90028a28:	3b01      	subs	r3, #1
90028a2a:	930e      	str	r3, [sp, #56]	; 0x38
90028a2c:	e762      	b.n	900288f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90028a2e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90028a30:	f109 0902 	add.w	r9, r9, #2
90028a34:	441c      	add	r4, r3
90028a36:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028a38:	441e      	add	r6, r3
90028a3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028a3c:	3b01      	subs	r3, #1
90028a3e:	9309      	str	r3, [sp, #36]	; 0x24
90028a40:	e736      	b.n	900288b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90028a42:	d024      	beq.n	90028a8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90028a44:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028a46:	9823      	ldr	r0, [sp, #140]	; 0x8c
90028a48:	3b01      	subs	r3, #1
90028a4a:	fb00 4003 	mla	r0, r0, r3, r4
90028a4e:	1400      	asrs	r0, r0, #16
90028a50:	f53f af4b 	bmi.w	900288ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028a54:	3901      	subs	r1, #1
90028a56:	4288      	cmp	r0, r1
90028a58:	f6bf af47 	bge.w	900288ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028a5c:	9924      	ldr	r1, [sp, #144]	; 0x90
90028a5e:	fb01 6303 	mla	r3, r1, r3, r6
90028a62:	141b      	asrs	r3, r3, #16
90028a64:	f53f af41 	bmi.w	900288ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028a68:	3a01      	subs	r2, #1
90028a6a:	4293      	cmp	r3, r2
90028a6c:	f6bf af3d 	bge.w	900288ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028a70:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
90028a74:	46c8      	mov	r8, r9
90028a76:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90028a7a:	930e      	str	r3, [sp, #56]	; 0x38
90028a7c:	f1bb 0f00 	cmp.w	fp, #0
90028a80:	f300 80b7 	bgt.w	90028bf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90028a84:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028a86:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90028a8a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90028a8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90028a90:	2b00      	cmp	r3, #0
90028a92:	f340 818e 	ble.w	90028db2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90028a96:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90028a9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90028a9c:	ee30 0a04 	vadd.f32	s0, s0, s8
90028aa0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028aa4:	eef0 6a62 	vmov.f32	s13, s5
90028aa8:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028aac:	ee31 1a05 	vadd.f32	s2, s2, s10
90028ab0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028ab4:	ee16 4a90 	vmov	r4, s13
90028ab8:	eef0 6a43 	vmov.f32	s13, s6
90028abc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028ac0:	ee16 6a90 	vmov	r6, s13
90028ac4:	ee20 7aa7 	vmul.f32	s14, s1, s15
90028ac8:	ee61 7a27 	vmul.f32	s15, s2, s15
90028acc:	ee77 2a62 	vsub.f32	s5, s14, s5
90028ad0:	ee37 3ac3 	vsub.f32	s6, s15, s6
90028ad4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90028ad8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90028adc:	ee12 2a90 	vmov	r2, s5
90028ae0:	eef0 2a47 	vmov.f32	s5, s14
90028ae4:	fb92 f3f3 	sdiv	r3, r2, r3
90028ae8:	ee13 2a10 	vmov	r2, s6
90028aec:	9323      	str	r3, [sp, #140]	; 0x8c
90028aee:	9b20      	ldr	r3, [sp, #128]	; 0x80
90028af0:	eeb0 3a67 	vmov.f32	s6, s15
90028af4:	fb92 f3f3 	sdiv	r3, r2, r3
90028af8:	9324      	str	r3, [sp, #144]	; 0x90
90028afa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90028afc:	9a14      	ldr	r2, [sp, #80]	; 0x50
90028afe:	3b01      	subs	r3, #1
90028b00:	930d      	str	r3, [sp, #52]	; 0x34
90028b02:	9b20      	ldr	r3, [sp, #128]	; 0x80
90028b04:	bf08      	it	eq
90028b06:	4613      	moveq	r3, r2
90028b08:	9309      	str	r3, [sp, #36]	; 0x24
90028b0a:	e6c2      	b.n	90028892 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90028b0c:	2900      	cmp	r1, #0
90028b0e:	f43f af4d 	beq.w	900289ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90028b12:	eb0a 0003 	add.w	r0, sl, r3
90028b16:	0843      	lsrs	r3, r0, #1
90028b18:	07c0      	lsls	r0, r0, #31
90028b1a:	5cfb      	ldrb	r3, [r7, r3]
90028b1c:	bf54      	ite	pl
90028b1e:	f003 030f 	andpl.w	r3, r3, #15
90028b22:	111b      	asrmi	r3, r3, #4
90028b24:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028b28:	b2db      	uxtb	r3, r3
90028b2a:	930b      	str	r3, [sp, #44]	; 0x2c
90028b2c:	e73e      	b.n	900289ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90028b2e:	f8b8 e000 	ldrh.w	lr, [r8]
90028b32:	fa1f fb83 	uxth.w	fp, r3
90028b36:	f3c2 4107 	ubfx	r1, r2, #16, #8
90028b3a:	43db      	mvns	r3, r3
90028b3c:	ea4f 202e 	mov.w	r0, lr, asr #8
90028b40:	fb11 f10b 	smulbb	r1, r1, fp
90028b44:	b2db      	uxtb	r3, r3
90028b46:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90028b4a:	fa5f fc8c 	uxtb.w	ip, ip
90028b4e:	b2d2      	uxtb	r2, r2
90028b50:	fb00 1003 	mla	r0, r0, r3, r1
90028b54:	ea4f 01ee 	mov.w	r1, lr, asr #3
90028b58:	fb1c fc0b 	smulbb	ip, ip, fp
90028b5c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90028b60:	b280      	uxth	r0, r0
90028b62:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90028b66:	fb12 fb0b 	smulbb	fp, r2, fp
90028b6a:	fa5f fe8e 	uxtb.w	lr, lr
90028b6e:	fb01 cc03 	mla	ip, r1, r3, ip
90028b72:	fb0e bb03 	mla	fp, lr, r3, fp
90028b76:	1c43      	adds	r3, r0, #1
90028b78:	fa1f fc8c 	uxth.w	ip, ip
90028b7c:	fa1f fb8b 	uxth.w	fp, fp
90028b80:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90028b84:	f10c 0101 	add.w	r1, ip, #1
90028b88:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
90028b8c:	f10b 0001 	add.w	r0, fp, #1
90028b90:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028b94:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90028b98:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90028b9c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028ba0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90028ba4:	4318      	orrs	r0, r3
90028ba6:	ea40 000c 	orr.w	r0, r0, ip
90028baa:	f8a8 0000 	strh.w	r0, [r8]
90028bae:	e734      	b.n	90028a1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028bb0:	f113 0b01 	adds.w	fp, r3, #1
90028bb4:	f53f af31 	bmi.w	90028a1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028bb8:	45dc      	cmp	ip, fp
90028bba:	f6ff af2e 	blt.w	90028a1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028bbe:	f110 0b01 	adds.w	fp, r0, #1
90028bc2:	f53f af2a 	bmi.w	90028a1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028bc6:	45de      	cmp	lr, fp
90028bc8:	f6ff af27 	blt.w	90028a1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028bcc:	9302      	str	r3, [sp, #8]
90028bce:	fa0f f38e 	sxth.w	r3, lr
90028bd2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90028bd4:	9301      	str	r3, [sp, #4]
90028bd6:	fa0f f38c 	sxth.w	r3, ip
90028bda:	e9cd 0203 	strd	r0, r2, [sp, #12]
90028bde:	e9cd 1505 	strd	r1, r5, [sp, #20]
90028be2:	9300      	str	r3, [sp, #0]
90028be4:	463a      	mov	r2, r7
90028be6:	4653      	mov	r3, sl
90028be8:	4641      	mov	r1, r8
90028bea:	9815      	ldr	r0, [sp, #84]	; 0x54
90028bec:	f7ff fd4c 	bl	90028688 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90028bf0:	e713      	b.n	90028a1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028bf2:	1422      	asrs	r2, r4, #16
90028bf4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90028bf6:	1433      	asrs	r3, r6, #16
90028bf8:	f3c4 3103 	ubfx	r1, r4, #12, #4
90028bfc:	f3c6 3003 	ubfx	r0, r6, #12, #4
90028c00:	fb05 2303 	mla	r3, r5, r3, r2
90028c04:	085a      	lsrs	r2, r3, #1
90028c06:	07dd      	lsls	r5, r3, #31
90028c08:	5cba      	ldrb	r2, [r7, r2]
90028c0a:	bf54      	ite	pl
90028c0c:	f002 020f 	andpl.w	r2, r2, #15
90028c10:	1112      	asrmi	r2, r2, #4
90028c12:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90028c16:	b2d2      	uxtb	r2, r2
90028c18:	2900      	cmp	r1, #0
90028c1a:	d077      	beq.n	90028d0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90028c1c:	f103 0e01 	add.w	lr, r3, #1
90028c20:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90028c24:	f01e 0f01 	tst.w	lr, #1
90028c28:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028c2c:	bf0c      	ite	eq
90028c2e:	f00c 0c0f 	andeq.w	ip, ip, #15
90028c32:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90028c36:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028c3a:	fa5f f58c 	uxtb.w	r5, ip
90028c3e:	9512      	str	r5, [sp, #72]	; 0x48
90028c40:	b308      	cbz	r0, 90028c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90028c42:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90028c44:	442b      	add	r3, r5
90028c46:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90028c4a:	07dd      	lsls	r5, r3, #31
90028c4c:	f103 0301 	add.w	r3, r3, #1
90028c50:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028c54:	bf54      	ite	pl
90028c56:	f00c 0c0f 	andpl.w	ip, ip, #15
90028c5a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028c5e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028c62:	fa5f f58c 	uxtb.w	r5, ip
90028c66:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90028c6a:	950c      	str	r5, [sp, #48]	; 0x30
90028c6c:	07dd      	lsls	r5, r3, #31
90028c6e:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028c72:	bf54      	ite	pl
90028c74:	f00c 0c0f 	andpl.w	ip, ip, #15
90028c78:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028c7c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028c80:	fa5f f38c 	uxtb.w	r3, ip
90028c84:	9313      	str	r3, [sp, #76]	; 0x4c
90028c86:	b289      	uxth	r1, r1
90028c88:	9d12      	ldr	r5, [sp, #72]	; 0x48
90028c8a:	b280      	uxth	r0, r0
90028c8c:	fb01 f300 	mul.w	r3, r1, r0
90028c90:	0109      	lsls	r1, r1, #4
90028c92:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90028c96:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90028c9a:	1ac9      	subs	r1, r1, r3
90028c9c:	b280      	uxth	r0, r0
90028c9e:	b289      	uxth	r1, r1
90028ca0:	ebac 0c00 	sub.w	ip, ip, r0
90028ca4:	4369      	muls	r1, r5
90028ca6:	fa1f fc8c 	uxth.w	ip, ip
90028caa:	fb02 120c 	mla	r2, r2, ip, r1
90028cae:	990c      	ldr	r1, [sp, #48]	; 0x30
90028cb0:	fb00 2001 	mla	r0, r0, r1, r2
90028cb4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90028cb6:	fb03 0302 	mla	r3, r3, r2, r0
90028cba:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028cbe:	b1d3      	cbz	r3, 90028cf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90028cc0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90028cc2:	4353      	muls	r3, r2
90028cc4:	1c5a      	adds	r2, r3, #1
90028cc6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90028cca:	4a0f      	ldr	r2, [pc, #60]	; (90028d08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90028ccc:	121b      	asrs	r3, r3, #8
90028cce:	6812      	ldr	r2, [r2, #0]
90028cd0:	2bff      	cmp	r3, #255	; 0xff
90028cd2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90028cd6:	d12d      	bne.n	90028d34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90028cd8:	0953      	lsrs	r3, r2, #5
90028cda:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90028cde:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028ce2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90028ce6:	f02c 0c07 	bic.w	ip, ip, #7
90028cea:	ea43 0c0c 	orr.w	ip, r3, ip
90028cee:	ea4c 0202 	orr.w	r2, ip, r2
90028cf2:	f8a8 2000 	strh.w	r2, [r8]
90028cf6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90028cf8:	f108 0802 	add.w	r8, r8, #2
90028cfc:	f10b 3bff 	add.w	fp, fp, #4294967295
90028d00:	441c      	add	r4, r3
90028d02:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028d04:	441e      	add	r6, r3
90028d06:	e6b9      	b.n	90028a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90028d08:	24028e3c 	.word	0x24028e3c
90028d0c:	2800      	cmp	r0, #0
90028d0e:	d0ba      	beq.n	90028c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90028d10:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90028d12:	442b      	add	r3, r5
90028d14:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90028d18:	07db      	lsls	r3, r3, #31
90028d1a:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028d1e:	bf54      	ite	pl
90028d20:	f00c 0c0f 	andpl.w	ip, ip, #15
90028d24:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028d28:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028d2c:	fa5f f38c 	uxtb.w	r3, ip
90028d30:	930c      	str	r3, [sp, #48]	; 0x30
90028d32:	e7a8      	b.n	90028c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90028d34:	f8b8 e000 	ldrh.w	lr, [r8]
90028d38:	fa1f fa83 	uxth.w	sl, r3
90028d3c:	f3c2 4107 	ubfx	r1, r2, #16, #8
90028d40:	43db      	mvns	r3, r3
90028d42:	ea4f 202e 	mov.w	r0, lr, asr #8
90028d46:	fb11 f10a 	smulbb	r1, r1, sl
90028d4a:	b2db      	uxtb	r3, r3
90028d4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90028d50:	b2d2      	uxtb	r2, r2
90028d52:	fa5f fc8c 	uxtb.w	ip, ip
90028d56:	fb00 1003 	mla	r0, r0, r3, r1
90028d5a:	ea4f 01ee 	mov.w	r1, lr, asr #3
90028d5e:	fb12 f20a 	smulbb	r2, r2, sl
90028d62:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90028d66:	b280      	uxth	r0, r0
90028d68:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90028d6c:	fb1c fc0a 	smulbb	ip, ip, sl
90028d70:	fa5f fe8e 	uxtb.w	lr, lr
90028d74:	fb0e 2203 	mla	r2, lr, r3, r2
90028d78:	fb01 cc03 	mla	ip, r1, r3, ip
90028d7c:	1c43      	adds	r3, r0, #1
90028d7e:	b292      	uxth	r2, r2
90028d80:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90028d84:	1c51      	adds	r1, r2, #1
90028d86:	fa1f fc8c 	uxth.w	ip, ip
90028d8a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90028d8e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90028d92:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90028d96:	4308      	orrs	r0, r1
90028d98:	f10c 0101 	add.w	r1, ip, #1
90028d9c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028da0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90028da4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90028da8:	ea40 000c 	orr.w	r0, r0, ip
90028dac:	f8a8 0000 	strh.w	r0, [r8]
90028db0:	e7a1      	b.n	90028cf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90028db2:	b017      	add	sp, #92	; 0x5c
90028db4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90028db8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90028db8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028dbc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90028dc0:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90028dc4:	2d00      	cmp	r5, #0
90028dc6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90028dca:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90028dce:	fb05 0e03 	mla	lr, r5, r3, r0
90028dd2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90028dd6:	f2c0 80b0 	blt.w	90028f3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90028dda:	45a9      	cmp	r9, r5
90028ddc:	f340 80ad 	ble.w	90028f3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90028de0:	2800      	cmp	r0, #0
90028de2:	f2c0 80a8 	blt.w	90028f36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90028de6:	4580      	cmp	r8, r0
90028de8:	f340 80a5 	ble.w	90028f36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90028dec:	ea4f 045e 	mov.w	r4, lr, lsr #1
90028df0:	f01e 0f01 	tst.w	lr, #1
90028df4:	5d16      	ldrb	r6, [r2, r4]
90028df6:	bf0c      	ite	eq
90028df8:	f006 060f 	andeq.w	r6, r6, #15
90028dfc:	1136      	asrne	r6, r6, #4
90028dfe:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90028e02:	b2f6      	uxtb	r6, r6
90028e04:	1c44      	adds	r4, r0, #1
90028e06:	f100 809b 	bmi.w	90028f40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90028e0a:	45a0      	cmp	r8, r4
90028e0c:	f340 8098 	ble.w	90028f40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90028e10:	2f00      	cmp	r7, #0
90028e12:	f000 8097 	beq.w	90028f44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90028e16:	f10e 0a01 	add.w	sl, lr, #1
90028e1a:	ea4f 045a 	mov.w	r4, sl, lsr #1
90028e1e:	f01a 0f01 	tst.w	sl, #1
90028e22:	5d14      	ldrb	r4, [r2, r4]
90028e24:	bf0c      	ite	eq
90028e26:	f004 040f 	andeq.w	r4, r4, #15
90028e2a:	1124      	asrne	r4, r4, #4
90028e2c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90028e30:	b2e4      	uxtb	r4, r4
90028e32:	3501      	adds	r5, #1
90028e34:	f100 808a 	bmi.w	90028f4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90028e38:	45a9      	cmp	r9, r5
90028e3a:	f340 8087 	ble.w	90028f4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90028e3e:	f1bc 0f00 	cmp.w	ip, #0
90028e42:	f000 8086 	beq.w	90028f52 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90028e46:	2800      	cmp	r0, #0
90028e48:	db7e      	blt.n	90028f48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90028e4a:	4580      	cmp	r8, r0
90028e4c:	dd7c      	ble.n	90028f48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90028e4e:	eb03 090e 	add.w	r9, r3, lr
90028e52:	ea4f 0559 	mov.w	r5, r9, lsr #1
90028e56:	f019 0f01 	tst.w	r9, #1
90028e5a:	5d55      	ldrb	r5, [r2, r5]
90028e5c:	bf0c      	ite	eq
90028e5e:	f005 050f 	andeq.w	r5, r5, #15
90028e62:	112d      	asrne	r5, r5, #4
90028e64:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90028e68:	b2ed      	uxtb	r5, r5
90028e6a:	3001      	adds	r0, #1
90028e6c:	d474      	bmi.n	90028f58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90028e6e:	4580      	cmp	r8, r0
90028e70:	dd72      	ble.n	90028f58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90028e72:	2f00      	cmp	r7, #0
90028e74:	d072      	beq.n	90028f5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90028e76:	3301      	adds	r3, #1
90028e78:	449e      	add	lr, r3
90028e7a:	ea4f 035e 	mov.w	r3, lr, lsr #1
90028e7e:	f01e 0f01 	tst.w	lr, #1
90028e82:	5cd0      	ldrb	r0, [r2, r3]
90028e84:	bf0c      	ite	eq
90028e86:	f000 000f 	andeq.w	r0, r0, #15
90028e8a:	1100      	asrne	r0, r0, #4
90028e8c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028e90:	b2c3      	uxtb	r3, r0
90028e92:	b2ba      	uxth	r2, r7
90028e94:	fa1f fc8c 	uxth.w	ip, ip
90028e98:	fb02 f00c 	mul.w	r0, r2, ip
90028e9c:	0112      	lsls	r2, r2, #4
90028e9e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90028ea2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90028ea6:	1a12      	subs	r2, r2, r0
90028ea8:	fa1f fc8c 	uxth.w	ip, ip
90028eac:	b292      	uxth	r2, r2
90028eae:	eba7 070c 	sub.w	r7, r7, ip
90028eb2:	4362      	muls	r2, r4
90028eb4:	b2bf      	uxth	r7, r7
90028eb6:	fb06 2207 	mla	r2, r6, r7, r2
90028eba:	fb0c 2505 	mla	r5, ip, r5, r2
90028ebe:	fb00 5303 	mla	r3, r0, r3, r5
90028ec2:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028ec6:	b3a3      	cbz	r3, 90028f32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90028ec8:	4a25      	ldr	r2, [pc, #148]	; (90028f60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90028eca:	880e      	ldrh	r6, [r1, #0]
90028ecc:	6815      	ldr	r5, [r2, #0]
90028ece:	b29a      	uxth	r2, r3
90028ed0:	1234      	asrs	r4, r6, #8
90028ed2:	43db      	mvns	r3, r3
90028ed4:	f3c5 4007 	ubfx	r0, r5, #16, #8
90028ed8:	f3c5 2707 	ubfx	r7, r5, #8, #8
90028edc:	b2db      	uxtb	r3, r3
90028ede:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90028ee2:	fb10 f002 	smulbb	r0, r0, r2
90028ee6:	b2ed      	uxtb	r5, r5
90028ee8:	fb17 f702 	smulbb	r7, r7, r2
90028eec:	fb04 0403 	mla	r4, r4, r3, r0
90028ef0:	10f0      	asrs	r0, r6, #3
90028ef2:	fb15 f202 	smulbb	r2, r5, r2
90028ef6:	00f6      	lsls	r6, r6, #3
90028ef8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90028efc:	b2a4      	uxth	r4, r4
90028efe:	b2f6      	uxtb	r6, r6
90028f00:	fb00 7003 	mla	r0, r0, r3, r7
90028f04:	fb06 2303 	mla	r3, r6, r3, r2
90028f08:	b280      	uxth	r0, r0
90028f0a:	b29a      	uxth	r2, r3
90028f0c:	1c63      	adds	r3, r4, #1
90028f0e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90028f12:	1c53      	adds	r3, r2, #1
90028f14:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028f18:	1c42      	adds	r2, r0, #1
90028f1a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90028f1e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028f22:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90028f26:	0940      	lsrs	r0, r0, #5
90028f28:	4323      	orrs	r3, r4
90028f2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90028f2e:	4303      	orrs	r3, r0
90028f30:	800b      	strh	r3, [r1, #0]
90028f32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90028f36:	2600      	movs	r6, #0
90028f38:	e764      	b.n	90028e04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90028f3a:	2400      	movs	r4, #0
90028f3c:	4626      	mov	r6, r4
90028f3e:	e778      	b.n	90028e32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028f40:	2400      	movs	r4, #0
90028f42:	e776      	b.n	90028e32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028f44:	463c      	mov	r4, r7
90028f46:	e774      	b.n	90028e32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028f48:	2500      	movs	r5, #0
90028f4a:	e78e      	b.n	90028e6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90028f4c:	2300      	movs	r3, #0
90028f4e:	461d      	mov	r5, r3
90028f50:	e79f      	b.n	90028e92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028f52:	4663      	mov	r3, ip
90028f54:	4665      	mov	r5, ip
90028f56:	e79c      	b.n	90028e92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028f58:	2300      	movs	r3, #0
90028f5a:	e79a      	b.n	90028e92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028f5c:	463b      	mov	r3, r7
90028f5e:	e798      	b.n	90028e92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028f60:	24028e3c 	.word	0x24028e3c

90028f64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028f68:	b093      	sub	sp, #76	; 0x4c
90028f6a:	461d      	mov	r5, r3
90028f6c:	920c      	str	r2, [sp, #48]	; 0x30
90028f6e:	9a21      	ldr	r2, [sp, #132]	; 0x84
90028f70:	9011      	str	r0, [sp, #68]	; 0x44
90028f72:	9107      	str	r1, [sp, #28]
90028f74:	6850      	ldr	r0, [r2, #4]
90028f76:	6812      	ldr	r2, [r2, #0]
90028f78:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90028f7c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90028f80:	fb00 1303 	mla	r3, r0, r3, r1
90028f84:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90028f88:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028f8a:	689b      	ldr	r3, [r3, #8]
90028f8c:	3301      	adds	r3, #1
90028f8e:	f023 0301 	bic.w	r3, r3, #1
90028f92:	9306      	str	r3, [sp, #24]
90028f94:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028f96:	681f      	ldr	r7, [r3, #0]
90028f98:	9b07      	ldr	r3, [sp, #28]
90028f9a:	2b00      	cmp	r3, #0
90028f9c:	dc03      	bgt.n	90028fa6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90028f9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90028fa0:	2b00      	cmp	r3, #0
90028fa2:	f340 8267 	ble.w	90029474 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90028fa6:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028fa8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028fac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90028fb0:	1e48      	subs	r0, r1, #1
90028fb2:	f102 3cff 	add.w	ip, r2, #4294967295
90028fb6:	2d00      	cmp	r5, #0
90028fb8:	f340 80b7 	ble.w	9002912a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90028fbc:	ea5f 4e24 	movs.w	lr, r4, asr #16
90028fc0:	ea4f 4326 	mov.w	r3, r6, asr #16
90028fc4:	d406      	bmi.n	90028fd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90028fc6:	4586      	cmp	lr, r0
90028fc8:	da04      	bge.n	90028fd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90028fca:	2b00      	cmp	r3, #0
90028fcc:	db02      	blt.n	90028fd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90028fce:	4563      	cmp	r3, ip
90028fd0:	f2c0 80ac 	blt.w	9002912c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90028fd4:	f11e 0e01 	adds.w	lr, lr, #1
90028fd8:	f100 809f 	bmi.w	9002911a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90028fdc:	4571      	cmp	r1, lr
90028fde:	f2c0 809c 	blt.w	9002911a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90028fe2:	3301      	adds	r3, #1
90028fe4:	f100 8099 	bmi.w	9002911a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90028fe8:	429a      	cmp	r2, r3
90028fea:	f2c0 8096 	blt.w	9002911a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90028fee:	46c8      	mov	r8, r9
90028ff0:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90028ff4:	9509      	str	r5, [sp, #36]	; 0x24
90028ff6:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028ff8:	2b00      	cmp	r3, #0
90028ffa:	f340 80b5 	ble.w	90029168 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90028ffe:	f3c4 3303 	ubfx	r3, r4, #12, #4
90029002:	1430      	asrs	r0, r6, #16
90029004:	f3c6 3103 	ubfx	r1, r6, #12, #4
90029008:	9308      	str	r3, [sp, #32]
9002900a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002900c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90029010:	1423      	asrs	r3, r4, #16
90029012:	f100 813f 	bmi.w	90029294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029016:	f10c 3bff 	add.w	fp, ip, #4294967295
9002901a:	455b      	cmp	r3, fp
9002901c:	f280 813a 	bge.w	90029294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029020:	2800      	cmp	r0, #0
90029022:	f2c0 8137 	blt.w	90029294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029026:	f10e 3bff 	add.w	fp, lr, #4294967295
9002902a:	4558      	cmp	r0, fp
9002902c:	f280 8132 	bge.w	90029294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029030:	9a06      	ldr	r2, [sp, #24]
90029032:	fb00 3302 	mla	r3, r0, r2, r3
90029036:	0858      	lsrs	r0, r3, #1
90029038:	07da      	lsls	r2, r3, #31
9002903a:	9a08      	ldr	r2, [sp, #32]
9002903c:	f817 c000 	ldrb.w	ip, [r7, r0]
90029040:	bf54      	ite	pl
90029042:	f00c 0c0f 	andpl.w	ip, ip, #15
90029046:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002904a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002904e:	fa5f fc8c 	uxtb.w	ip, ip
90029052:	2a00      	cmp	r2, #0
90029054:	f000 80cc 	beq.w	900291f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90029058:	1c58      	adds	r0, r3, #1
9002905a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9002905e:	07c0      	lsls	r0, r0, #31
90029060:	f817 e00e 	ldrb.w	lr, [r7, lr]
90029064:	bf54      	ite	pl
90029066:	f00e 0e0f 	andpl.w	lr, lr, #15
9002906a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9002906e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90029072:	fa5f fe8e 	uxtb.w	lr, lr
90029076:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
9002907a:	b1b9      	cbz	r1, 900290ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002907c:	4453      	add	r3, sl
9002907e:	0858      	lsrs	r0, r3, #1
90029080:	07da      	lsls	r2, r3, #31
90029082:	5c38      	ldrb	r0, [r7, r0]
90029084:	bf54      	ite	pl
90029086:	f000 000f 	andpl.w	r0, r0, #15
9002908a:	1100      	asrmi	r0, r0, #4
9002908c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029090:	b2c0      	uxtb	r0, r0
90029092:	900a      	str	r0, [sp, #40]	; 0x28
90029094:	1c58      	adds	r0, r3, #1
90029096:	0843      	lsrs	r3, r0, #1
90029098:	07c2      	lsls	r2, r0, #31
9002909a:	5cfb      	ldrb	r3, [r7, r3]
9002909c:	bf54      	ite	pl
9002909e:	f003 030f 	andpl.w	r3, r3, #15
900290a2:	111b      	asrmi	r3, r3, #4
900290a4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900290a8:	b2db      	uxtb	r3, r3
900290aa:	930e      	str	r3, [sp, #56]	; 0x38
900290ac:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900290b0:	b289      	uxth	r1, r1
900290b2:	fb02 f301 	mul.w	r3, r2, r1
900290b6:	0112      	lsls	r2, r2, #4
900290b8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900290bc:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
900290c0:	1ad2      	subs	r2, r2, r3
900290c2:	b289      	uxth	r1, r1
900290c4:	b292      	uxth	r2, r2
900290c6:	1a40      	subs	r0, r0, r1
900290c8:	fa1f fe80 	uxth.w	lr, r0
900290cc:	980d      	ldr	r0, [sp, #52]	; 0x34
900290ce:	4342      	muls	r2, r0
900290d0:	fb0c 2c0e 	mla	ip, ip, lr, r2
900290d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900290d6:	fb01 c102 	mla	r1, r1, r2, ip
900290da:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900290dc:	fb03 1302 	mla	r3, r3, r2, r1
900290e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900290e4:	2bff      	cmp	r3, #255	; 0xff
900290e6:	f040 8094 	bne.w	90029212 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
900290ea:	4bbf      	ldr	r3, [pc, #764]	; (900293e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900290ec:	681a      	ldr	r2, [r3, #0]
900290ee:	4bbf      	ldr	r3, [pc, #764]	; (900293ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900290f0:	0951      	lsrs	r1, r2, #5
900290f2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900290f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900290fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900290fe:	430b      	orrs	r3, r1
90029100:	4313      	orrs	r3, r2
90029102:	f8a8 3000 	strh.w	r3, [r8]
90029106:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90029108:	f108 0802 	add.w	r8, r8, #2
9002910c:	441c      	add	r4, r3
9002910e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90029110:	441e      	add	r6, r3
90029112:	9b09      	ldr	r3, [sp, #36]	; 0x24
90029114:	3b01      	subs	r3, #1
90029116:	9309      	str	r3, [sp, #36]	; 0x24
90029118:	e76d      	b.n	90028ff6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002911a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002911c:	3d01      	subs	r5, #1
9002911e:	f109 0902 	add.w	r9, r9, #2
90029122:	441c      	add	r4, r3
90029124:	9b20      	ldr	r3, [sp, #128]	; 0x80
90029126:	441e      	add	r6, r3
90029128:	e745      	b.n	90028fb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002912a:	d021      	beq.n	90029170 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9002912c:	1e6b      	subs	r3, r5, #1
9002912e:	981f      	ldr	r0, [sp, #124]	; 0x7c
90029130:	fb00 4003 	mla	r0, r0, r3, r4
90029134:	1400      	asrs	r0, r0, #16
90029136:	f53f af5a 	bmi.w	90028fee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002913a:	3901      	subs	r1, #1
9002913c:	4288      	cmp	r0, r1
9002913e:	f6bf af56 	bge.w	90028fee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90029142:	9920      	ldr	r1, [sp, #128]	; 0x80
90029144:	fb01 6303 	mla	r3, r1, r3, r6
90029148:	141b      	asrs	r3, r3, #16
9002914a:	f53f af50 	bmi.w	90028fee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002914e:	3a01      	subs	r2, #1
90029150:	4293      	cmp	r3, r2
90029152:	f6bf af4c 	bge.w	90028fee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90029156:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9002915a:	46a8      	mov	r8, r5
9002915c:	46ce      	mov	lr, r9
9002915e:	9308      	str	r3, [sp, #32]
90029160:	f1b8 0f00 	cmp.w	r8, #0
90029164:	f300 80b6 	bgt.w	900292d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90029168:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002916c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90029170:	9b07      	ldr	r3, [sp, #28]
90029172:	2b00      	cmp	r3, #0
90029174:	f340 817e 	ble.w	90029474 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90029178:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002917c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002917e:	ee30 0a04 	vadd.f32	s0, s0, s8
90029182:	ee70 0aa4 	vadd.f32	s1, s1, s9
90029186:	eef0 6a62 	vmov.f32	s13, s5
9002918a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002918e:	ee31 1a05 	vadd.f32	s2, s2, s10
90029192:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029196:	ee16 4a90 	vmov	r4, s13
9002919a:	eef0 6a43 	vmov.f32	s13, s6
9002919e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900291a2:	ee16 6a90 	vmov	r6, s13
900291a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900291aa:	ee61 7a27 	vmul.f32	s15, s2, s15
900291ae:	ee77 2a62 	vsub.f32	s5, s14, s5
900291b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900291b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900291ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900291be:	ee12 2a90 	vmov	r2, s5
900291c2:	eef0 2a47 	vmov.f32	s5, s14
900291c6:	fb92 f3f3 	sdiv	r3, r2, r3
900291ca:	ee13 2a10 	vmov	r2, s6
900291ce:	931f      	str	r3, [sp, #124]	; 0x7c
900291d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900291d2:	eeb0 3a67 	vmov.f32	s6, s15
900291d6:	fb92 f3f3 	sdiv	r3, r2, r3
900291da:	9320      	str	r3, [sp, #128]	; 0x80
900291dc:	9b07      	ldr	r3, [sp, #28]
900291de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
900291e0:	3b01      	subs	r3, #1
900291e2:	9307      	str	r3, [sp, #28]
900291e4:	bf08      	it	eq
900291e6:	4615      	moveq	r5, r2
900291e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900291ea:	bf18      	it	ne
900291ec:	461d      	movne	r5, r3
900291ee:	e6d3      	b.n	90028f98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900291f0:	2900      	cmp	r1, #0
900291f2:	f43f af5b 	beq.w	900290ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900291f6:	eb0a 0003 	add.w	r0, sl, r3
900291fa:	0843      	lsrs	r3, r0, #1
900291fc:	07c0      	lsls	r0, r0, #31
900291fe:	5cfb      	ldrb	r3, [r7, r3]
90029200:	bf54      	ite	pl
90029202:	f003 030f 	andpl.w	r3, r3, #15
90029206:	111b      	asrmi	r3, r3, #4
90029208:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002920c:	b2db      	uxtb	r3, r3
9002920e:	930a      	str	r3, [sp, #40]	; 0x28
90029210:	e74c      	b.n	900290ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90029212:	2b00      	cmp	r3, #0
90029214:	f43f af77 	beq.w	90029106 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90029218:	4a73      	ldr	r2, [pc, #460]	; (900293e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002921a:	fa1f fe83 	uxth.w	lr, r3
9002921e:	f8b8 c000 	ldrh.w	ip, [r8]
90029222:	43db      	mvns	r3, r3
90029224:	6810      	ldr	r0, [r2, #0]
90029226:	ea4f 212c 	mov.w	r1, ip, asr #8
9002922a:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002922e:	b2db      	uxtb	r3, r3
90029230:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90029234:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90029238:	fb12 f20e 	smulbb	r2, r2, lr
9002923c:	b2c0      	uxtb	r0, r0
9002923e:	fb1b fb0e 	smulbb	fp, fp, lr
90029242:	fb01 2103 	mla	r1, r1, r3, r2
90029246:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002924a:	fb10 fe0e 	smulbb	lr, r0, lr
9002924e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90029252:	b289      	uxth	r1, r1
90029254:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90029258:	fa5f fc8c 	uxtb.w	ip, ip
9002925c:	fb02 b203 	mla	r2, r2, r3, fp
90029260:	1c48      	adds	r0, r1, #1
90029262:	fb0c e303 	mla	r3, ip, r3, lr
90029266:	b292      	uxth	r2, r2
90029268:	b29b      	uxth	r3, r3
9002926a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
9002926e:	f102 0b01 	add.w	fp, r2, #1
90029272:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
90029276:	1c59      	adds	r1, r3, #1
90029278:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002927c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90029280:	0952      	lsrs	r2, r2, #5
90029282:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90029286:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002928a:	4301      	orrs	r1, r0
9002928c:	4311      	orrs	r1, r2
9002928e:	f8a8 1000 	strh.w	r1, [r8]
90029292:	e738      	b.n	90029106 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90029294:	f113 0b01 	adds.w	fp, r3, #1
90029298:	f53f af35 	bmi.w	90029106 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002929c:	45dc      	cmp	ip, fp
9002929e:	f6ff af32 	blt.w	90029106 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900292a2:	f110 0b01 	adds.w	fp, r0, #1
900292a6:	f53f af2e 	bmi.w	90029106 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900292aa:	45de      	cmp	lr, fp
900292ac:	f6ff af2b 	blt.w	90029106 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900292b0:	9302      	str	r3, [sp, #8]
900292b2:	fa0f f38e 	sxth.w	r3, lr
900292b6:	9a08      	ldr	r2, [sp, #32]
900292b8:	9301      	str	r3, [sp, #4]
900292ba:	fa0f f38c 	sxth.w	r3, ip
900292be:	9105      	str	r1, [sp, #20]
900292c0:	4641      	mov	r1, r8
900292c2:	9300      	str	r3, [sp, #0]
900292c4:	4653      	mov	r3, sl
900292c6:	e9cd 0203 	strd	r0, r2, [sp, #12]
900292ca:	463a      	mov	r2, r7
900292cc:	9811      	ldr	r0, [sp, #68]	; 0x44
900292ce:	f7ff fd73 	bl	90028db8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
900292d2:	e718      	b.n	90029106 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900292d4:	1422      	asrs	r2, r4, #16
900292d6:	9906      	ldr	r1, [sp, #24]
900292d8:	1433      	asrs	r3, r6, #16
900292da:	f3c4 3003 	ubfx	r0, r4, #12, #4
900292de:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900292e2:	fb01 2303 	mla	r3, r1, r3, r2
900292e6:	085a      	lsrs	r2, r3, #1
900292e8:	07d9      	lsls	r1, r3, #31
900292ea:	5cba      	ldrb	r2, [r7, r2]
900292ec:	bf54      	ite	pl
900292ee:	f002 020f 	andpl.w	r2, r2, #15
900292f2:	1112      	asrmi	r2, r2, #4
900292f4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900292f8:	b2d2      	uxtb	r2, r2
900292fa:	2800      	cmp	r0, #0
900292fc:	d063      	beq.n	900293c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
900292fe:	f103 0a01 	add.w	sl, r3, #1
90029302:	ea4f 015a 	mov.w	r1, sl, lsr #1
90029306:	f01a 0f01 	tst.w	sl, #1
9002930a:	5c79      	ldrb	r1, [r7, r1]
9002930c:	bf0c      	ite	eq
9002930e:	f001 010f 	andeq.w	r1, r1, #15
90029312:	1109      	asrne	r1, r1, #4
90029314:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90029318:	b2c9      	uxtb	r1, r1
9002931a:	910f      	str	r1, [sp, #60]	; 0x3c
9002931c:	f1bc 0f00 	cmp.w	ip, #0
90029320:	d01a      	beq.n	90029358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90029322:	9908      	ldr	r1, [sp, #32]
90029324:	440b      	add	r3, r1
90029326:	0859      	lsrs	r1, r3, #1
90029328:	f013 0f01 	tst.w	r3, #1
9002932c:	f103 0301 	add.w	r3, r3, #1
90029330:	5c79      	ldrb	r1, [r7, r1]
90029332:	bf0c      	ite	eq
90029334:	f001 010f 	andeq.w	r1, r1, #15
90029338:	1109      	asrne	r1, r1, #4
9002933a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002933e:	b2c9      	uxtb	r1, r1
90029340:	910b      	str	r1, [sp, #44]	; 0x2c
90029342:	0859      	lsrs	r1, r3, #1
90029344:	07db      	lsls	r3, r3, #31
90029346:	5c79      	ldrb	r1, [r7, r1]
90029348:	bf54      	ite	pl
9002934a:	f001 010f 	andpl.w	r1, r1, #15
9002934e:	1109      	asrmi	r1, r1, #4
90029350:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90029354:	b2c9      	uxtb	r1, r1
90029356:	9110      	str	r1, [sp, #64]	; 0x40
90029358:	b280      	uxth	r0, r0
9002935a:	fa1f fc8c 	uxth.w	ip, ip
9002935e:	fb00 f30c 	mul.w	r3, r0, ip
90029362:	0100      	lsls	r0, r0, #4
90029364:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90029368:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
9002936c:	1ac0      	subs	r0, r0, r3
9002936e:	fa1f fc8c 	uxth.w	ip, ip
90029372:	b280      	uxth	r0, r0
90029374:	eba1 010c 	sub.w	r1, r1, ip
90029378:	fa1f fa81 	uxth.w	sl, r1
9002937c:	990f      	ldr	r1, [sp, #60]	; 0x3c
9002937e:	4348      	muls	r0, r1
90029380:	990b      	ldr	r1, [sp, #44]	; 0x2c
90029382:	fb02 020a 	mla	r2, r2, sl, r0
90029386:	fb0c 2c01 	mla	ip, ip, r1, r2
9002938a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9002938c:	fb03 c302 	mla	r3, r3, r2, ip
90029390:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029394:	2bff      	cmp	r3, #255	; 0xff
90029396:	d12b      	bne.n	900293f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90029398:	4b13      	ldr	r3, [pc, #76]	; (900293e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002939a:	681a      	ldr	r2, [r3, #0]
9002939c:	4b13      	ldr	r3, [pc, #76]	; (900293ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002939e:	0951      	lsrs	r1, r2, #5
900293a0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900293a4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900293a8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900293ac:	430b      	orrs	r3, r1
900293ae:	4313      	orrs	r3, r2
900293b0:	f8ae 3000 	strh.w	r3, [lr]
900293b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900293b6:	f10e 0e02 	add.w	lr, lr, #2
900293ba:	f108 38ff 	add.w	r8, r8, #4294967295
900293be:	441c      	add	r4, r3
900293c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900293c2:	441e      	add	r6, r3
900293c4:	e6cc      	b.n	90029160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
900293c6:	f1bc 0f00 	cmp.w	ip, #0
900293ca:	d0c5      	beq.n	90029358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900293cc:	9908      	ldr	r1, [sp, #32]
900293ce:	440b      	add	r3, r1
900293d0:	0859      	lsrs	r1, r3, #1
900293d2:	07db      	lsls	r3, r3, #31
900293d4:	5c79      	ldrb	r1, [r7, r1]
900293d6:	bf54      	ite	pl
900293d8:	f001 010f 	andpl.w	r1, r1, #15
900293dc:	1109      	asrmi	r1, r1, #4
900293de:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900293e2:	b2c9      	uxtb	r1, r1
900293e4:	910b      	str	r1, [sp, #44]	; 0x2c
900293e6:	e7b7      	b.n	90029358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900293e8:	24028e3c 	.word	0x24028e3c
900293ec:	fffff800 	.word	0xfffff800
900293f0:	2b00      	cmp	r3, #0
900293f2:	d0df      	beq.n	900293b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900293f4:	4a21      	ldr	r2, [pc, #132]	; (9002947c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
900293f6:	fa1f fa83 	uxth.w	sl, r3
900293fa:	f8be c000 	ldrh.w	ip, [lr]
900293fe:	43db      	mvns	r3, r3
90029400:	6810      	ldr	r0, [r2, #0]
90029402:	ea4f 212c 	mov.w	r1, ip, asr #8
90029406:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002940a:	b2db      	uxtb	r3, r3
9002940c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90029410:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90029414:	fb12 f20a 	smulbb	r2, r2, sl
90029418:	b2c0      	uxtb	r0, r0
9002941a:	fb1b fb0a 	smulbb	fp, fp, sl
9002941e:	fb01 2103 	mla	r1, r1, r3, r2
90029422:	ea4f 02ec 	mov.w	r2, ip, asr #3
90029426:	fb10 f00a 	smulbb	r0, r0, sl
9002942a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002942e:	b289      	uxth	r1, r1
90029430:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90029434:	fa5f fc8c 	uxtb.w	ip, ip
90029438:	fb02 b203 	mla	r2, r2, r3, fp
9002943c:	fb0c 0003 	mla	r0, ip, r3, r0
90029440:	1c4b      	adds	r3, r1, #1
90029442:	b292      	uxth	r2, r2
90029444:	b280      	uxth	r0, r0
90029446:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002944a:	f100 0b01 	add.w	fp, r0, #1
9002944e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90029452:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90029456:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
9002945a:	ea4b 0101 	orr.w	r1, fp, r1
9002945e:	f102 0b01 	add.w	fp, r2, #1
90029462:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90029466:	0952      	lsrs	r2, r2, #5
90029468:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002946c:	4311      	orrs	r1, r2
9002946e:	f8ae 1000 	strh.w	r1, [lr]
90029472:	e79f      	b.n	900293b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90029474:	b013      	add	sp, #76	; 0x4c
90029476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002947a:	bf00      	nop
9002947c:	24028e3c 	.word	0x24028e3c

90029480 <CRC_Lock>:
90029480:	4a20      	ldr	r2, [pc, #128]	; (90029504 <CRC_Lock+0x84>)
90029482:	b530      	push	{r4, r5, lr}
90029484:	6813      	ldr	r3, [r2, #0]
90029486:	f64f 74f0 	movw	r4, #65520	; 0xfff0
9002948a:	f24c 2540 	movw	r5, #49728	; 0xc240
9002948e:	f023 0301 	bic.w	r3, r3, #1
90029492:	6013      	str	r3, [r2, #0]
90029494:	4b1c      	ldr	r3, [pc, #112]	; (90029508 <CRC_Lock+0x88>)
90029496:	681a      	ldr	r2, [r3, #0]
90029498:	4022      	ands	r2, r4
9002949a:	42aa      	cmp	r2, r5
9002949c:	d005      	beq.n	900294aa <CRC_Lock+0x2a>
9002949e:	681b      	ldr	r3, [r3, #0]
900294a0:	f24c 2270 	movw	r2, #49776	; 0xc270
900294a4:	4023      	ands	r3, r4
900294a6:	4293      	cmp	r3, r2
900294a8:	d124      	bne.n	900294f4 <CRC_Lock+0x74>
900294aa:	4b18      	ldr	r3, [pc, #96]	; (9002950c <CRC_Lock+0x8c>)
900294ac:	681b      	ldr	r3, [r3, #0]
900294ae:	bb0b      	cbnz	r3, 900294f4 <CRC_Lock+0x74>
900294b0:	4b17      	ldr	r3, [pc, #92]	; (90029510 <CRC_Lock+0x90>)
900294b2:	681a      	ldr	r2, [r3, #0]
900294b4:	f3c2 020b 	ubfx	r2, r2, #0, #12
900294b8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
900294bc:	d00d      	beq.n	900294da <CRC_Lock+0x5a>
900294be:	681a      	ldr	r2, [r3, #0]
900294c0:	f240 4483 	movw	r4, #1155	; 0x483
900294c4:	f3c2 020b 	ubfx	r2, r2, #0, #12
900294c8:	42a2      	cmp	r2, r4
900294ca:	d006      	beq.n	900294da <CRC_Lock+0x5a>
900294cc:	681b      	ldr	r3, [r3, #0]
900294ce:	f240 4285 	movw	r2, #1157	; 0x485
900294d2:	f3c3 030b 	ubfx	r3, r3, #0, #12
900294d6:	4293      	cmp	r3, r2
900294d8:	d10c      	bne.n	900294f4 <CRC_Lock+0x74>
900294da:	4b0e      	ldr	r3, [pc, #56]	; (90029514 <CRC_Lock+0x94>)
900294dc:	2201      	movs	r2, #1
900294de:	601a      	str	r2, [r3, #0]
900294e0:	681a      	ldr	r2, [r3, #0]
900294e2:	2a00      	cmp	r2, #0
900294e4:	d1fc      	bne.n	900294e0 <CRC_Lock+0x60>
900294e6:	4b0c      	ldr	r3, [pc, #48]	; (90029518 <CRC_Lock+0x98>)
900294e8:	6018      	str	r0, [r3, #0]
900294ea:	6818      	ldr	r0, [r3, #0]
900294ec:	1a43      	subs	r3, r0, r1
900294ee:	4258      	negs	r0, r3
900294f0:	4158      	adcs	r0, r3
900294f2:	bd30      	pop	{r4, r5, pc}
900294f4:	4b09      	ldr	r3, [pc, #36]	; (9002951c <CRC_Lock+0x9c>)
900294f6:	2201      	movs	r2, #1
900294f8:	601a      	str	r2, [r3, #0]
900294fa:	681a      	ldr	r2, [r3, #0]
900294fc:	2a00      	cmp	r2, #0
900294fe:	d1fc      	bne.n	900294fa <CRC_Lock+0x7a>
90029500:	4b07      	ldr	r3, [pc, #28]	; (90029520 <CRC_Lock+0xa0>)
90029502:	e7f1      	b.n	900294e8 <CRC_Lock+0x68>
90029504:	e0002000 	.word	0xe0002000
90029508:	e000ed00 	.word	0xe000ed00
9002950c:	e0042000 	.word	0xe0042000
90029510:	5c001000 	.word	0x5c001000
90029514:	58024c08 	.word	0x58024c08
90029518:	58024c00 	.word	0x58024c00
9002951c:	40023008 	.word	0x40023008
90029520:	40023000 	.word	0x40023000

90029524 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90029524:	6101      	str	r1, [r0, #16]
90029526:	4770      	bx	lr

90029528 <_ZN8touchgfx8Gestures4tickEv>:
90029528:	7b83      	ldrb	r3, [r0, #14]
9002952a:	b14b      	cbz	r3, 90029540 <_ZN8touchgfx8Gestures4tickEv+0x18>
9002952c:	8903      	ldrh	r3, [r0, #8]
9002952e:	3301      	adds	r3, #1
90029530:	b29b      	uxth	r3, r3
90029532:	2b07      	cmp	r3, #7
90029534:	8103      	strh	r3, [r0, #8]
90029536:	bf81      	itttt	hi
90029538:	2300      	movhi	r3, #0
9002953a:	8143      	strhhi	r3, [r0, #10]
9002953c:	8183      	strhhi	r3, [r0, #12]
9002953e:	7383      	strbhi	r3, [r0, #14]
90029540:	4770      	bx	lr
	...

90029544 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90029544:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90029548:	4698      	mov	r8, r3
9002954a:	8883      	ldrh	r3, [r0, #4]
9002954c:	4604      	mov	r4, r0
9002954e:	4617      	mov	r7, r2
90029550:	f8ad 3006 	strh.w	r3, [sp, #6]
90029554:	eba8 0303 	sub.w	r3, r8, r3
90029558:	4a19      	ldr	r2, [pc, #100]	; (900295c0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002955a:	460e      	mov	r6, r1
9002955c:	b21b      	sxth	r3, r3
9002955e:	88c1      	ldrh	r1, [r0, #6]
90029560:	9200      	str	r2, [sp, #0]
90029562:	2000      	movs	r0, #0
90029564:	2b00      	cmp	r3, #0
90029566:	8aa2      	ldrh	r2, [r4, #20]
90029568:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
9002956c:	bfb8      	it	lt
9002956e:	425b      	neglt	r3, r3
90029570:	f88d 0004 	strb.w	r0, [sp, #4]
90029574:	f8ad 1008 	strh.w	r1, [sp, #8]
90029578:	b21b      	sxth	r3, r3
9002957a:	f8ad 800a 	strh.w	r8, [sp, #10]
9002957e:	f8ad 500c 	strh.w	r5, [sp, #12]
90029582:	4293      	cmp	r3, r2
90029584:	dc07      	bgt.n	90029596 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90029586:	1a69      	subs	r1, r5, r1
90029588:	b209      	sxth	r1, r1
9002958a:	2900      	cmp	r1, #0
9002958c:	bfb8      	it	lt
9002958e:	4249      	neglt	r1, r1
90029590:	b209      	sxth	r1, r1
90029592:	428a      	cmp	r2, r1
90029594:	da10      	bge.n	900295b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90029596:	6920      	ldr	r0, [r4, #16]
90029598:	4669      	mov	r1, sp
9002959a:	eba8 0606 	sub.w	r6, r8, r6
9002959e:	1bef      	subs	r7, r5, r7
900295a0:	6803      	ldr	r3, [r0, #0]
900295a2:	685b      	ldr	r3, [r3, #4]
900295a4:	4798      	blx	r3
900295a6:	2300      	movs	r3, #0
900295a8:	2001      	movs	r0, #1
900295aa:	8166      	strh	r6, [r4, #10]
900295ac:	8123      	strh	r3, [r4, #8]
900295ae:	81a7      	strh	r7, [r4, #12]
900295b0:	f8a4 8004 	strh.w	r8, [r4, #4]
900295b4:	80e5      	strh	r5, [r4, #6]
900295b6:	73a0      	strb	r0, [r4, #14]
900295b8:	b004      	add	sp, #16
900295ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900295be:	bf00      	nop
900295c0:	90030c20 	.word	0x90030c20

900295c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900295c4:	b5f0      	push	{r4, r5, r6, r7, lr}
900295c6:	461e      	mov	r6, r3
900295c8:	1e4b      	subs	r3, r1, #1
900295ca:	b085      	sub	sp, #20
900295cc:	4604      	mov	r4, r0
900295ce:	2b01      	cmp	r3, #1
900295d0:	460d      	mov	r5, r1
900295d2:	4617      	mov	r7, r2
900295d4:	d84b      	bhi.n	9002966e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900295d6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900295da:	1cd3      	adds	r3, r2, #3
900295dc:	b29b      	uxth	r3, r3
900295de:	2b06      	cmp	r3, #6
900295e0:	d916      	bls.n	90029610 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900295e2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90029684 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900295e6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900295ea:	f8cd c004 	str.w	ip, [sp, #4]
900295ee:	f04f 0c00 	mov.w	ip, #0
900295f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900295f6:	6900      	ldr	r0, [r0, #16]
900295f8:	f8ad 100c 	strh.w	r1, [sp, #12]
900295fc:	a901      	add	r1, sp, #4
900295fe:	f88d c008 	strb.w	ip, [sp, #8]
90029602:	f8ad 200a 	strh.w	r2, [sp, #10]
90029606:	f8ad 300e 	strh.w	r3, [sp, #14]
9002960a:	6803      	ldr	r3, [r0, #0]
9002960c:	689b      	ldr	r3, [r3, #8]
9002960e:	4798      	blx	r3
90029610:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029614:	1cd3      	adds	r3, r2, #3
90029616:	b29b      	uxth	r3, r3
90029618:	2b06      	cmp	r3, #6
9002961a:	d916      	bls.n	9002964a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002961c:	f8df c064 	ldr.w	ip, [pc, #100]	; 90029684 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90029620:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90029624:	f8cd c004 	str.w	ip, [sp, #4]
90029628:	f04f 0c01 	mov.w	ip, #1
9002962c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90029630:	6920      	ldr	r0, [r4, #16]
90029632:	f8ad 100c 	strh.w	r1, [sp, #12]
90029636:	a901      	add	r1, sp, #4
90029638:	f88d c008 	strb.w	ip, [sp, #8]
9002963c:	f8ad 200a 	strh.w	r2, [sp, #10]
90029640:	f8ad 300e 	strh.w	r3, [sp, #14]
90029644:	6803      	ldr	r3, [r0, #0]
90029646:	689b      	ldr	r3, [r3, #8]
90029648:	4798      	blx	r3
9002964a:	4b0d      	ldr	r3, [pc, #52]	; (90029680 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
9002964c:	a901      	add	r1, sp, #4
9002964e:	6920      	ldr	r0, [r4, #16]
90029650:	9301      	str	r3, [sp, #4]
90029652:	2300      	movs	r3, #0
90029654:	f88d 5008 	strb.w	r5, [sp, #8]
90029658:	f8ad 700a 	strh.w	r7, [sp, #10]
9002965c:	f8ad 600c 	strh.w	r6, [sp, #12]
90029660:	f8ad 300e 	strh.w	r3, [sp, #14]
90029664:	6803      	ldr	r3, [r0, #0]
90029666:	681b      	ldr	r3, [r3, #0]
90029668:	4798      	blx	r3
9002966a:	b005      	add	sp, #20
9002966c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002966e:	2900      	cmp	r1, #0
90029670:	d1eb      	bne.n	9002964a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90029672:	80a2      	strh	r2, [r4, #4]
90029674:	80c6      	strh	r6, [r0, #6]
90029676:	60a1      	str	r1, [r4, #8]
90029678:	81a1      	strh	r1, [r4, #12]
9002967a:	73a1      	strb	r1, [r4, #14]
9002967c:	e7e5      	b.n	9002964a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002967e:	bf00      	nop
90029680:	90030c0c 	.word	0x90030c0c
90029684:	90030c34 	.word	0x90030c34

90029688 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
90029688:	10c9      	asrs	r1, r1, #3
9002968a:	2900      	cmp	r1, #0
9002968c:	bfb8      	it	lt
9002968e:	4249      	neglt	r1, r1
90029690:	2801      	cmp	r0, #1
90029692:	d108      	bne.n	900296a6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90029694:	f3c1 0008 	ubfx	r0, r1, #0, #9
90029698:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9002969c:	4601      	mov	r1, r0
9002969e:	dd02      	ble.n	900296a6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
900296a0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
900296a4:	4770      	bx	lr
900296a6:	29ff      	cmp	r1, #255	; 0xff
900296a8:	bfa8      	it	ge
900296aa:	21ff      	movge	r1, #255	; 0xff
900296ac:	4608      	mov	r0, r1
900296ae:	4770      	bx	lr

900296b0 <_ZN8touchgfx10Rasterizer6lineToEii>:
900296b0:	b410      	push	{r4}
900296b2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900296b6:	429c      	cmp	r4, r3
900296b8:	d803      	bhi.n	900296c2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
900296ba:	f85d 4b04 	ldr.w	r4, [sp], #4
900296be:	f7ef bcf5 	b.w	900190ac <_ZN8touchgfx7Outline6lineToEii>
900296c2:	f85d 4b04 	ldr.w	r4, [sp], #4
900296c6:	4770      	bx	lr

900296c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900296c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900296cc:	b08b      	sub	sp, #44	; 0x2c
900296ce:	4606      	mov	r6, r0
900296d0:	468a      	mov	sl, r1
900296d2:	e9cd 2306 	strd	r2, r3, [sp, #24]
900296d6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900296da:	9308      	str	r3, [sp, #32]
900296dc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900296e0:	9309      	str	r3, [sp, #36]	; 0x24
900296e2:	f7ef fe4e 	bl	90019382 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
900296e6:	68b5      	ldr	r5, [r6, #8]
900296e8:	4604      	mov	r4, r0
900296ea:	2d00      	cmp	r5, #0
900296ec:	d044      	beq.n	90029778 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900296ee:	6873      	ldr	r3, [r6, #4]
900296f0:	42ab      	cmp	r3, r5
900296f2:	d33d      	bcc.n	90029770 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
900296f4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900296f8:	f04f 0800 	mov.w	r8, #0
900296fc:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90029700:	eb02 0b03 	add.w	fp, r2, r3
90029704:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90029708:	fb02 1203 	mla	r2, r2, r3, r1
9002970c:	9205      	str	r2, [sp, #20]
9002970e:	1e6a      	subs	r2, r5, #1
90029710:	9204      	str	r2, [sp, #16]
90029712:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90029716:	f9b4 7000 	ldrsh.w	r7, [r4]
9002971a:	454b      	cmp	r3, r9
9002971c:	463a      	mov	r2, r7
9002971e:	d008      	beq.n	90029732 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90029720:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90029724:	eb03 0b09 	add.w	fp, r3, r9
90029728:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
9002972c:	fb03 1309 	mla	r3, r3, r9, r1
90029730:	9305      	str	r3, [sp, #20]
90029732:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90029736:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002973a:	4498      	add	r8, r3
9002973c:	9b04      	ldr	r3, [sp, #16]
9002973e:	3b01      	subs	r3, #1
90029740:	9304      	str	r3, [sp, #16]
90029742:	9b04      	ldr	r3, [sp, #16]
90029744:	3301      	adds	r3, #1
90029746:	d015      	beq.n	90029774 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90029748:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
9002974c:	42bb      	cmp	r3, r7
9002974e:	d117      	bne.n	90029780 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90029750:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90029754:	9b04      	ldr	r3, [sp, #16]
90029756:	4548      	cmp	r0, r9
90029758:	f103 33ff 	add.w	r3, r3, #4294967295
9002975c:	d17d      	bne.n	9002985a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002975e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90029762:	4401      	add	r1, r0
90029764:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90029768:	4480      	add	r8, r0
9002976a:	e7e9      	b.n	90029740 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
9002976c:	461f      	mov	r7, r3
9002976e:	e042      	b.n	900297f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90029770:	2000      	movs	r0, #0
90029772:	e002      	b.n	9002977a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90029774:	2900      	cmp	r1, #0
90029776:	d16d      	bne.n	90029854 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90029778:	2001      	movs	r0, #1
9002977a:	b00b      	add	sp, #44	; 0x2c
9002977c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029780:	b379      	cbz	r1, 900297e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90029782:	2f00      	cmp	r7, #0
90029784:	db29      	blt.n	900297da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90029786:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
9002978a:	42bb      	cmp	r3, r7
9002978c:	dd25      	ble.n	900297da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002978e:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90029792:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90029796:	f7ff ff77 	bl	90029688 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
9002979a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002979c:	fb10 f003 	smulbb	r0, r0, r3
900297a0:	b280      	uxth	r0, r0
900297a2:	1c41      	adds	r1, r0, #1
900297a4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900297a8:	1209      	asrs	r1, r1, #8
900297aa:	f011 0fff 	tst.w	r1, #255	; 0xff
900297ae:	d014      	beq.n	900297da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900297b0:	b2c9      	uxtb	r1, r1
900297b2:	9808      	ldr	r0, [sp, #32]
900297b4:	b2ba      	uxth	r2, r7
900297b6:	8e73      	ldrh	r3, [r6, #50]	; 0x32
900297b8:	9102      	str	r1, [sp, #8]
900297ba:	2101      	movs	r1, #1
900297bc:	4413      	add	r3, r2
900297be:	4402      	add	r2, r0
900297c0:	9101      	str	r1, [sp, #4]
900297c2:	fa0f f18b 	sxth.w	r1, fp
900297c6:	f8da 0000 	ldr.w	r0, [sl]
900297ca:	b21b      	sxth	r3, r3
900297cc:	9100      	str	r1, [sp, #0]
900297ce:	b212      	sxth	r2, r2
900297d0:	6941      	ldr	r1, [r0, #20]
900297d2:	4650      	mov	r0, sl
900297d4:	460d      	mov	r5, r1
900297d6:	9905      	ldr	r1, [sp, #20]
900297d8:	47a8      	blx	r5
900297da:	9b04      	ldr	r3, [sp, #16]
900297dc:	1c7a      	adds	r2, r7, #1
900297de:	3301      	adds	r3, #1
900297e0:	d0ca      	beq.n	90029778 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900297e2:	f9b4 7000 	ldrsh.w	r7, [r4]
900297e6:	1abb      	subs	r3, r7, r2
900297e8:	2b00      	cmp	r3, #0
900297ea:	dd31      	ble.n	90029850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900297ec:	2a00      	cmp	r2, #0
900297ee:	dabd      	bge.n	9002976c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
900297f0:	2f00      	cmp	r7, #0
900297f2:	dd2d      	ble.n	90029850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900297f4:	2200      	movs	r2, #0
900297f6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
900297fa:	19d1      	adds	r1, r2, r7
900297fc:	4299      	cmp	r1, r3
900297fe:	db02      	blt.n	90029806 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90029800:	1a9f      	subs	r7, r3, r2
90029802:	2f00      	cmp	r7, #0
90029804:	dd24      	ble.n	90029850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029806:	ea4f 1188 	mov.w	r1, r8, lsl #6
9002980a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
9002980e:	f7ff ff3b 	bl	90029688 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
90029812:	9b09      	ldr	r3, [sp, #36]	; 0x24
90029814:	fb10 f003 	smulbb	r0, r0, r3
90029818:	b280      	uxth	r0, r0
9002981a:	1c41      	adds	r1, r0, #1
9002981c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90029820:	1209      	asrs	r1, r1, #8
90029822:	f011 0fff 	tst.w	r1, #255	; 0xff
90029826:	d013      	beq.n	90029850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029828:	b292      	uxth	r2, r2
9002982a:	9808      	ldr	r0, [sp, #32]
9002982c:	b2c9      	uxtb	r1, r1
9002982e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90029830:	b23f      	sxth	r7, r7
90029832:	4413      	add	r3, r2
90029834:	9102      	str	r1, [sp, #8]
90029836:	4402      	add	r2, r0
90029838:	fa0f f18b 	sxth.w	r1, fp
9002983c:	f8da 0000 	ldr.w	r0, [sl]
90029840:	b21b      	sxth	r3, r3
90029842:	9100      	str	r1, [sp, #0]
90029844:	b212      	sxth	r2, r2
90029846:	9701      	str	r7, [sp, #4]
90029848:	9905      	ldr	r1, [sp, #20]
9002984a:	6947      	ldr	r7, [r0, #20]
9002984c:	4650      	mov	r0, sl
9002984e:	47b8      	blx	r7
90029850:	464b      	mov	r3, r9
90029852:	e75e      	b.n	90029712 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90029854:	2f00      	cmp	r7, #0
90029856:	da96      	bge.n	90029786 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90029858:	e78e      	b.n	90029778 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002985a:	2900      	cmp	r1, #0
9002985c:	d0f8      	beq.n	90029850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002985e:	e790      	b.n	90029782 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90029860 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
90029860:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90029864:	4b4a      	ldr	r3, [pc, #296]	; (90029990 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
90029866:	2500      	movs	r5, #0
90029868:	f100 0620 	add.w	r6, r0, #32
9002986c:	4604      	mov	r4, r0
9002986e:	4690      	mov	r8, r2
90029870:	f100 0718 	add.w	r7, r0, #24
90029874:	e9c0 3100 	strd	r3, r1, [r0]
90029878:	e9c0 5502 	strd	r5, r5, [r0, #8]
9002987c:	e9c0 5504 	strd	r5, r5, [r0, #16]
90029880:	e9c0 5506 	strd	r5, r5, [r0, #24]
90029884:	4630      	mov	r0, r6
90029886:	f7ee ff57 	bl	90018738 <_ZN8touchgfx7OutlineC1Ev>
9002988a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
9002988e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
90029892:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
90029896:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
9002989a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
9002989e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
900298a2:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
900298a6:	f8d4 c004 	ldr.w	ip, [r4, #4]
900298aa:	9500      	str	r5, [sp, #0]
900298ac:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
900298b0:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
900298b4:	f9b8 2000 	ldrsh.w	r2, [r8]
900298b8:	f8b8 0004 	ldrh.w	r0, [r8, #4]
900298bc:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
900298c0:	4410      	add	r0, r2
900298c2:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
900298c6:	b280      	uxth	r0, r0
900298c8:	fa0f fa80 	sxth.w	sl, r0
900298cc:	45aa      	cmp	sl, r5
900298ce:	dd5c      	ble.n	9002998a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900298d0:	4591      	cmp	r9, r2
900298d2:	dd5a      	ble.n	9002998a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900298d4:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
900298d8:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900298dc:	440b      	add	r3, r1
900298de:	b29b      	uxth	r3, r3
900298e0:	b21d      	sxth	r5, r3
900298e2:	2d00      	cmp	r5, #0
900298e4:	dd51      	ble.n	9002998a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900298e6:	458e      	cmp	lr, r1
900298e8:	dd4f      	ble.n	9002998a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900298ea:	45d1      	cmp	r9, sl
900298ec:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
900298f0:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
900298f4:	bfb8      	it	lt
900298f6:	fa1f f089 	uxthlt.w	r0, r9
900298fa:	45ae      	cmp	lr, r5
900298fc:	f8ad 2000 	strh.w	r2, [sp]
90029900:	bfb8      	it	lt
90029902:	fa1f f38e 	uxthlt.w	r3, lr
90029906:	1a80      	subs	r0, r0, r2
90029908:	f8ad 1002 	strh.w	r1, [sp, #2]
9002990c:	1a5b      	subs	r3, r3, r1
9002990e:	f8ad 0004 	strh.w	r0, [sp, #4]
90029912:	f8ad 3006 	strh.w	r3, [sp, #6]
90029916:	466d      	mov	r5, sp
90029918:	e895 0003 	ldmia.w	r5, {r0, r1}
9002991c:	e887 0003 	stmia.w	r7, {r0, r1}
90029920:	f8dc 3000 	ldr.w	r3, [ip]
90029924:	4660      	mov	r0, ip
90029926:	4639      	mov	r1, r7
90029928:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002992a:	4798      	blx	r3
9002992c:	6861      	ldr	r1, [r4, #4]
9002992e:	4628      	mov	r0, r5
90029930:	3104      	adds	r1, #4
90029932:	f7f1 f8ed 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90029936:	4638      	mov	r0, r7
90029938:	f7f1 f8a6 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002993c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029940:	f8bd 2000 	ldrh.w	r2, [sp]
90029944:	4630      	mov	r0, r6
90029946:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
9002994a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
9002994e:	f7ee fed7 	bl	90018700 <_ZN8touchgfx7Outline5resetEv>
90029952:	f9bd 3000 	ldrsh.w	r3, [sp]
90029956:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
9002995a:	4620      	mov	r0, r4
9002995c:	015b      	lsls	r3, r3, #5
9002995e:	60a3      	str	r3, [r4, #8]
90029960:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029964:	015b      	lsls	r3, r3, #5
90029966:	60e3      	str	r3, [r4, #12]
90029968:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002996c:	015b      	lsls	r3, r3, #5
9002996e:	6123      	str	r3, [r4, #16]
90029970:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90029974:	015b      	lsls	r3, r3, #5
90029976:	6163      	str	r3, [r4, #20]
90029978:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
9002997c:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
90029980:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
90029984:	b002      	add	sp, #8
90029986:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002998a:	2300      	movs	r3, #0
9002998c:	9301      	str	r3, [sp, #4]
9002998e:	e7c2      	b.n	90029916 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
90029990:	90030f04 	.word	0x90030f04

90029994 <_ZN8touchgfx6Canvas5closeEv>:
90029994:	b538      	push	{r3, r4, r5, lr}
90029996:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
9002999a:	4604      	mov	r4, r0
9002999c:	b193      	cbz	r3, 900299c4 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002999e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
900299a2:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
900299a6:	4213      	tst	r3, r2
900299a8:	d10c      	bne.n	900299c4 <_ZN8touchgfx6Canvas5closeEv+0x30>
900299aa:	f100 0520 	add.w	r5, r0, #32
900299ae:	b123      	cbz	r3, 900299ba <_ZN8touchgfx6Canvas5closeEv+0x26>
900299b0:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
900299b4:	4628      	mov	r0, r5
900299b6:	f7ff fe7b 	bl	900296b0 <_ZN8touchgfx10Rasterizer6lineToEii>
900299ba:	4628      	mov	r0, r5
900299bc:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
900299c0:	f7ff fe76 	bl	900296b0 <_ZN8touchgfx10Rasterizer6lineToEii>
900299c4:	2300      	movs	r3, #0
900299c6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
900299ca:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
900299ce:	4298      	cmp	r0, r3
900299d0:	bf34      	ite	cc
900299d2:	2000      	movcc	r0, #0
900299d4:	2001      	movcs	r0, #1
900299d6:	bd38      	pop	{r3, r4, r5, pc}

900299d8 <_ZN8touchgfx6Canvas6renderEh>:
900299d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900299dc:	4604      	mov	r4, r0
900299de:	6840      	ldr	r0, [r0, #4]
900299e0:	460d      	mov	r5, r1
900299e2:	6803      	ldr	r3, [r0, #0]
900299e4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
900299e6:	4798      	blx	r3
900299e8:	fb10 f105 	smulbb	r1, r0, r5
900299ec:	b289      	uxth	r1, r1
900299ee:	1c4d      	adds	r5, r1, #1
900299f0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900299f4:	122d      	asrs	r5, r5, #8
900299f6:	f000 8097 	beq.w	90029b28 <_ZN8touchgfx6Canvas6renderEh+0x150>
900299fa:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
900299fe:	2b00      	cmp	r3, #0
90029a00:	f000 8092 	beq.w	90029b28 <_ZN8touchgfx6Canvas6renderEh+0x150>
90029a04:	4620      	mov	r0, r4
90029a06:	f7ff ffc5 	bl	90029994 <_ZN8touchgfx6Canvas5closeEv>
90029a0a:	4607      	mov	r7, r0
90029a0c:	2800      	cmp	r0, #0
90029a0e:	d043      	beq.n	90029a98 <_ZN8touchgfx6Canvas6renderEh+0xc0>
90029a10:	6863      	ldr	r3, [r4, #4]
90029a12:	4e46      	ldr	r6, [pc, #280]	; (90029b2c <_ZN8touchgfx6Canvas6renderEh+0x154>)
90029a14:	6a98      	ldr	r0, [r3, #40]	; 0x28
90029a16:	6837      	ldr	r7, [r6, #0]
90029a18:	6803      	ldr	r3, [r0, #0]
90029a1a:	689b      	ldr	r3, [r3, #8]
90029a1c:	4798      	blx	r3
90029a1e:	4601      	mov	r1, r0
90029a20:	4638      	mov	r0, r7
90029a22:	f7ec ff3f 	bl	900168a4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90029a26:	4607      	mov	r7, r0
90029a28:	f7ec fb00 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
90029a2c:	6803      	ldr	r3, [r0, #0]
90029a2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90029a30:	4798      	blx	r3
90029a32:	4680      	mov	r8, r0
90029a34:	f7ec fafa 	bl	9001602c <_ZN8touchgfx3HAL3lcdEv>
90029a38:	6803      	ldr	r3, [r0, #0]
90029a3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90029a3c:	4798      	blx	r3
90029a3e:	280b      	cmp	r0, #11
90029a40:	d857      	bhi.n	90029af2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
90029a42:	e8df f000 	tbb	[pc, r0]
90029a46:	584d      	.short	0x584d
90029a48:	2d560668 	.word	0x2d560668
90029a4c:	6161613d 	.word	0x6161613d
90029a50:	6161      	.short	0x6161
90029a52:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90029a56:	2208      	movs	r2, #8
90029a58:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029a5c:	fb91 f2f2 	sdiv	r2, r1, r2
90029a60:	fb08 2303 	mla	r3, r8, r3, r2
90029a64:	441f      	add	r7, r3
90029a66:	424b      	negs	r3, r1
90029a68:	f001 0107 	and.w	r1, r1, #7
90029a6c:	f003 0307 	and.w	r3, r3, #7
90029a70:	bf58      	it	pl
90029a72:	4259      	negpl	r1, r3
90029a74:	b2c9      	uxtb	r1, r1
90029a76:	6860      	ldr	r0, [r4, #4]
90029a78:	b2ed      	uxtb	r5, r5
90029a7a:	fa0f f388 	sxth.w	r3, r8
90029a7e:	463a      	mov	r2, r7
90029a80:	e9cd 1500 	strd	r1, r5, [sp]
90029a84:	6a81      	ldr	r1, [r0, #40]	; 0x28
90029a86:	f104 0020 	add.w	r0, r4, #32
90029a8a:	f7ff fe1d 	bl	900296c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90029a8e:	4607      	mov	r7, r0
90029a90:	6830      	ldr	r0, [r6, #0]
90029a92:	6803      	ldr	r3, [r0, #0]
90029a94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90029a96:	4798      	blx	r3
90029a98:	4638      	mov	r0, r7
90029a9a:	b002      	add	sp, #8
90029a9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029aa0:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90029aa4:	2204      	movs	r2, #4
90029aa6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029aaa:	fb91 f2f2 	sdiv	r2, r1, r2
90029aae:	fb08 2303 	mla	r3, r8, r3, r2
90029ab2:	441f      	add	r7, r3
90029ab4:	424b      	negs	r3, r1
90029ab6:	f001 0103 	and.w	r1, r1, #3
90029aba:	f003 0303 	and.w	r3, r3, #3
90029abe:	e7d7      	b.n	90029a70 <_ZN8touchgfx6Canvas6renderEh+0x98>
90029ac0:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90029ac4:	2202      	movs	r2, #2
90029ac6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029aca:	2900      	cmp	r1, #0
90029acc:	fb91 f2f2 	sdiv	r2, r1, r2
90029ad0:	f001 0101 	and.w	r1, r1, #1
90029ad4:	fb08 2303 	mla	r3, r8, r3, r2
90029ad8:	bfb8      	it	lt
90029ada:	4249      	neglt	r1, r1
90029adc:	441f      	add	r7, r3
90029ade:	e7c9      	b.n	90029a74 <_ZN8touchgfx6Canvas6renderEh+0x9c>
90029ae0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029ae4:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90029ae8:	fb08 f303 	mul.w	r3, r8, r3
90029aec:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90029af0:	441f      	add	r7, r3
90029af2:	2100      	movs	r1, #0
90029af4:	e7bf      	b.n	90029a76 <_ZN8touchgfx6Canvas6renderEh+0x9e>
90029af6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029afa:	2103      	movs	r1, #3
90029afc:	fb08 f203 	mul.w	r2, r8, r3
90029b00:	8b23      	ldrh	r3, [r4, #24]
90029b02:	fb13 2301 	smlabb	r3, r3, r1, r2
90029b06:	e7f3      	b.n	90029af0 <_ZN8touchgfx6Canvas6renderEh+0x118>
90029b08:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029b0c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90029b10:	fb08 2303 	mla	r3, r8, r3, r2
90029b14:	e7ec      	b.n	90029af0 <_ZN8touchgfx6Canvas6renderEh+0x118>
90029b16:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029b1a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90029b1e:	fb08 f303 	mul.w	r3, r8, r3
90029b22:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90029b26:	e7e3      	b.n	90029af0 <_ZN8touchgfx6Canvas6renderEh+0x118>
90029b28:	2701      	movs	r7, #1
90029b2a:	e7b5      	b.n	90029a98 <_ZN8touchgfx6Canvas6renderEh+0xc0>
90029b2c:	24028e2c 	.word	0x24028e2c

90029b30 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90029b30:	4b07      	ldr	r3, [pc, #28]	; (90029b50 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
90029b32:	b510      	push	{r4, lr}
90029b34:	781b      	ldrb	r3, [r3, #0]
90029b36:	2b01      	cmp	r3, #1
90029b38:	d108      	bne.n	90029b4c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
90029b3a:	6843      	ldr	r3, [r0, #4]
90029b3c:	6814      	ldr	r4, [r2, #0]
90029b3e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90029b42:	680b      	ldr	r3, [r1, #0]
90029b44:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90029b48:	6013      	str	r3, [r2, #0]
90029b4a:	600c      	str	r4, [r1, #0]
90029b4c:	bd10      	pop	{r4, pc}
90029b4e:	bf00      	nop
90029b50:	24028e24 	.word	0x24028e24

90029b54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90029b54:	b513      	push	{r0, r1, r4, lr}
90029b56:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
90029b5a:	4604      	mov	r4, r0
90029b5c:	e9cd 2100 	strd	r2, r1, [sp]
90029b60:	b9a3      	cbnz	r3, 90029b8c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90029b62:	466a      	mov	r2, sp
90029b64:	a901      	add	r1, sp, #4
90029b66:	4620      	mov	r0, r4
90029b68:	f7ff ffe2 	bl	90029b30 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90029b6c:	68a3      	ldr	r3, [r4, #8]
90029b6e:	9901      	ldr	r1, [sp, #4]
90029b70:	9a00      	ldr	r2, [sp, #0]
90029b72:	1ac9      	subs	r1, r1, r3
90029b74:	68e3      	ldr	r3, [r4, #12]
90029b76:	1ad2      	subs	r2, r2, r3
90029b78:	9101      	str	r1, [sp, #4]
90029b7a:	2a00      	cmp	r2, #0
90029b7c:	9200      	str	r2, [sp, #0]
90029b7e:	da0b      	bge.n	90029b98 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90029b80:	2301      	movs	r3, #1
90029b82:	2900      	cmp	r1, #0
90029b84:	da0e      	bge.n	90029ba4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90029b86:	f043 0304 	orr.w	r3, r3, #4
90029b8a:	e013      	b.n	90029bb4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90029b8c:	f7ff ff02 	bl	90029994 <_ZN8touchgfx6Canvas5closeEv>
90029b90:	2800      	cmp	r0, #0
90029b92:	d1e6      	bne.n	90029b62 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90029b94:	b002      	add	sp, #8
90029b96:	bd10      	pop	{r4, pc}
90029b98:	6963      	ldr	r3, [r4, #20]
90029b9a:	429a      	cmp	r2, r3
90029b9c:	bfac      	ite	ge
90029b9e:	2302      	movge	r3, #2
90029ba0:	2300      	movlt	r3, #0
90029ba2:	e7ee      	b.n	90029b82 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90029ba4:	6920      	ldr	r0, [r4, #16]
90029ba6:	4281      	cmp	r1, r0
90029ba8:	bfac      	ite	ge
90029baa:	2008      	movge	r0, #8
90029bac:	2000      	movlt	r0, #0
90029bae:	4318      	orrs	r0, r3
90029bb0:	b2c3      	uxtb	r3, r0
90029bb2:	b158      	cbz	r0, 90029bcc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90029bb4:	2200      	movs	r2, #0
90029bb6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
90029bba:	9901      	ldr	r1, [sp, #4]
90029bbc:	9a00      	ldr	r2, [sp, #0]
90029bbe:	66a1      	str	r1, [r4, #104]	; 0x68
90029bc0:	66e2      	str	r2, [r4, #108]	; 0x6c
90029bc2:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
90029bc6:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
90029bca:	e7e3      	b.n	90029b94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90029bcc:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
90029bd0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90029bd4:	4298      	cmp	r0, r3
90029bd6:	d803      	bhi.n	90029be0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90029bd8:	f104 0020 	add.w	r0, r4, #32
90029bdc:	f7ef fa80 	bl	900190e0 <_ZN8touchgfx7Outline6moveToEii>
90029be0:	2301      	movs	r3, #1
90029be2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90029be6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90029bea:	2300      	movs	r3, #0
90029bec:	e7e5      	b.n	90029bba <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90029bee:	b573      	push	{r0, r1, r4, r5, r6, lr}
90029bf0:	ab02      	add	r3, sp, #8
90029bf2:	4604      	mov	r4, r0
90029bf4:	9101      	str	r1, [sp, #4]
90029bf6:	a901      	add	r1, sp, #4
90029bf8:	f843 2d08 	str.w	r2, [r3, #-8]!
90029bfc:	461a      	mov	r2, r3
90029bfe:	f7ff ff97 	bl	90029b30 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90029c02:	68a3      	ldr	r3, [r4, #8]
90029c04:	9901      	ldr	r1, [sp, #4]
90029c06:	9a00      	ldr	r2, [sp, #0]
90029c08:	1ac9      	subs	r1, r1, r3
90029c0a:	68e3      	ldr	r3, [r4, #12]
90029c0c:	1ad2      	subs	r2, r2, r3
90029c0e:	9101      	str	r1, [sp, #4]
90029c10:	2a00      	cmp	r2, #0
90029c12:	9200      	str	r2, [sp, #0]
90029c14:	db1c      	blt.n	90029c50 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90029c16:	6963      	ldr	r3, [r4, #20]
90029c18:	429a      	cmp	r2, r3
90029c1a:	bfac      	ite	ge
90029c1c:	2002      	movge	r0, #2
90029c1e:	2000      	movlt	r0, #0
90029c20:	2900      	cmp	r1, #0
90029c22:	db17      	blt.n	90029c54 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90029c24:	6923      	ldr	r3, [r4, #16]
90029c26:	4299      	cmp	r1, r3
90029c28:	bfac      	ite	ge
90029c2a:	2308      	movge	r3, #8
90029c2c:	2300      	movlt	r3, #0
90029c2e:	4303      	orrs	r3, r0
90029c30:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
90029c34:	b2dd      	uxtb	r5, r3
90029c36:	b978      	cbnz	r0, 90029c58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90029c38:	f104 0020 	add.w	r0, r4, #32
90029c3c:	f7ff fd38 	bl	900296b0 <_ZN8touchgfx10Rasterizer6lineToEii>
90029c40:	9b01      	ldr	r3, [sp, #4]
90029c42:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
90029c46:	65e3      	str	r3, [r4, #92]	; 0x5c
90029c48:	9b00      	ldr	r3, [sp, #0]
90029c4a:	6623      	str	r3, [r4, #96]	; 0x60
90029c4c:	b002      	add	sp, #8
90029c4e:	bd70      	pop	{r4, r5, r6, pc}
90029c50:	2001      	movs	r0, #1
90029c52:	e7e5      	b.n	90029c20 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90029c54:	2304      	movs	r3, #4
90029c56:	e7ea      	b.n	90029c2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90029c58:	b113      	cbz	r3, 90029c60 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90029c5a:	ea10 0305 	ands.w	r3, r0, r5
90029c5e:	d11c      	bne.n	90029c9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90029c60:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
90029c64:	f104 0620 	add.w	r6, r4, #32
90029c68:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
90029c6c:	b98b      	cbnz	r3, 90029c92 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90029c6e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
90029c72:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90029c76:	4298      	cmp	r0, r3
90029c78:	d802      	bhi.n	90029c80 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90029c7a:	4630      	mov	r0, r6
90029c7c:	f7ef fa30 	bl	900190e0 <_ZN8touchgfx7Outline6moveToEii>
90029c80:	2301      	movs	r3, #1
90029c82:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90029c86:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90029c8a:	4630      	mov	r0, r6
90029c8c:	e9dd 2100 	ldrd	r2, r1, [sp]
90029c90:	e7d4      	b.n	90029c3c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90029c92:	4630      	mov	r0, r6
90029c94:	f7ff fd0c 	bl	900296b0 <_ZN8touchgfx10Rasterizer6lineToEii>
90029c98:	e7f7      	b.n	90029c8a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90029c9a:	461d      	mov	r5, r3
90029c9c:	e7d0      	b.n	90029c40 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90029ca0 <_ZN8touchgfx6CanvasD1Ev>:
90029ca0:	4b04      	ldr	r3, [pc, #16]	; (90029cb4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
90029ca2:	b510      	push	{r4, lr}
90029ca4:	4604      	mov	r4, r0
90029ca6:	f840 3b20 	str.w	r3, [r0], #32
90029caa:	f7ee fd21 	bl	900186f0 <_ZN8touchgfx7OutlineD1Ev>
90029cae:	4620      	mov	r0, r4
90029cb0:	bd10      	pop	{r4, pc}
90029cb2:	bf00      	nop
90029cb4:	90030f04 	.word	0x90030f04

90029cb8 <_ZN8touchgfx6CanvasD0Ev>:
90029cb8:	b510      	push	{r4, lr}
90029cba:	4604      	mov	r4, r0
90029cbc:	f7ff fff0 	bl	90029ca0 <_ZN8touchgfx6CanvasD1Ev>
90029cc0:	2170      	movs	r1, #112	; 0x70
90029cc2:	4620      	mov	r0, r4
90029cc4:	f001 fba7 	bl	9002b416 <_ZdlPvj>
90029cc8:	4620      	mov	r0, r4
90029cca:	bd10      	pop	{r4, pc}

90029ccc <_ZN8touchgfx6CircleD1Ev>:
90029ccc:	4770      	bx	lr

90029cce <_ZN8touchgfx6CircleD0Ev>:
90029cce:	b510      	push	{r4, lr}
90029cd0:	4604      	mov	r4, r0
90029cd2:	2148      	movs	r1, #72	; 0x48
90029cd4:	f001 fb9f 	bl	9002b416 <_ZdlPvj>
90029cd8:	4620      	mov	r0, r4
90029cda:	bd10      	pop	{r4, pc}

90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
90029cdc:	b508      	push	{r3, lr}
90029cde:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
90029ce2:	f7ed fa2f 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90029ce6:	bd08      	pop	{r3, pc}

90029ce8 <_ZN8touchgfx6CircleC1Ev>:
90029ce8:	b510      	push	{r4, lr}
90029cea:	4604      	mov	r4, r0
90029cec:	f7ed f8c6 	bl	90016e7c <_ZN8touchgfx12CanvasWidgetC1Ev>
90029cf0:	4b08      	ldr	r3, [pc, #32]	; (90029d14 <_ZN8touchgfx6CircleC1Ev+0x2c>)
90029cf2:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
90029cf6:	4620      	mov	r0, r4
90029cf8:	6023      	str	r3, [r4, #0]
90029cfa:	2300      	movs	r3, #0
90029cfc:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
90029d00:	f24b 4205 	movw	r2, #46085	; 0xb405
90029d04:	60a3      	str	r3, [r4, #8]
90029d06:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
90029d0a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
90029d0e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
90029d12:	bd10      	pop	{r4, pc}
90029d14:	90030f18 	.word	0x90030f18

90029d18 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
90029d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029d1c:	428a      	cmp	r2, r1
90029d1e:	4680      	mov	r8, r0
90029d20:	4610      	mov	r0, r2
90029d22:	4699      	mov	r9, r3
90029d24:	bfaa      	itet	ge
90029d26:	460a      	movge	r2, r1
90029d28:	460b      	movlt	r3, r1
90029d2a:	4603      	movge	r3, r0
90029d2c:	b085      	sub	sp, #20
90029d2e:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
90029d32:	f108 0a34 	add.w	sl, r8, #52	; 0x34
90029d36:	1a99      	subs	r1, r3, r2
90029d38:	9d10      	ldr	r5, [sp, #64]	; 0x40
90029d3a:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
90029d3e:	bfa4      	itt	ge
90029d40:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
90029d44:	2200      	movge	r2, #0
90029d46:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
90029d4a:	9300      	str	r3, [sp, #0]
90029d4c:	f102 0b01 	add.w	fp, r2, #1
90029d50:	2c00      	cmp	r4, #0
90029d52:	f040 80ae 	bne.w	90029eb2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
90029d56:	4610      	mov	r0, r2
90029d58:	9201      	str	r2, [sp, #4]
90029d5a:	f7ed f9f3 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90029d5e:	a903      	add	r1, sp, #12
90029d60:	9003      	str	r0, [sp, #12]
90029d62:	4650      	mov	r0, sl
90029d64:	f7ed f8b6 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029d68:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
90029d6c:	9a01      	ldr	r2, [sp, #4]
90029d6e:	4408      	add	r0, r1
90029d70:	f8d9 1000 	ldr.w	r1, [r9]
90029d74:	4281      	cmp	r1, r0
90029d76:	bfc8      	it	gt
90029d78:	f8c9 0000 	strgt.w	r0, [r9]
90029d7c:	6839      	ldr	r1, [r7, #0]
90029d7e:	4288      	cmp	r0, r1
90029d80:	bfc8      	it	gt
90029d82:	6038      	strgt	r0, [r7, #0]
90029d84:	4610      	mov	r0, r2
90029d86:	f7ff ffa9 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90029d8a:	a903      	add	r1, sp, #12
90029d8c:	9003      	str	r0, [sp, #12]
90029d8e:	4650      	mov	r0, sl
90029d90:	f7ed f8a0 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029d94:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
90029d98:	f44f 6134 	mov.w	r1, #2880	; 0xb40
90029d9c:	1a10      	subs	r0, r2, r0
90029d9e:	6832      	ldr	r2, [r6, #0]
90029da0:	4282      	cmp	r2, r0
90029da2:	bfc8      	it	gt
90029da4:	6030      	strgt	r0, [r6, #0]
90029da6:	682a      	ldr	r2, [r5, #0]
90029da8:	4290      	cmp	r0, r2
90029daa:	fb9b f2f1 	sdiv	r2, fp, r1
90029dae:	fb01 b212 	mls	r2, r1, r2, fp
90029db2:	bfc8      	it	gt
90029db4:	6028      	strgt	r0, [r5, #0]
90029db6:	1a8a      	subs	r2, r1, r2
90029db8:	fb92 f0f1 	sdiv	r0, r2, r1
90029dbc:	fb01 2210 	mls	r2, r1, r0, r2
90029dc0:	4493      	add	fp, r2
90029dc2:	9b00      	ldr	r3, [sp, #0]
90029dc4:	455b      	cmp	r3, fp
90029dc6:	db2a      	blt.n	90029e1e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
90029dc8:	4658      	mov	r0, fp
90029dca:	f7ed f9bb 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90029dce:	a903      	add	r1, sp, #12
90029dd0:	9003      	str	r0, [sp, #12]
90029dd2:	4650      	mov	r0, sl
90029dd4:	f7ed f87e 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029dd8:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
90029ddc:	4410      	add	r0, r2
90029dde:	f8d9 2000 	ldr.w	r2, [r9]
90029de2:	4282      	cmp	r2, r0
90029de4:	bfc8      	it	gt
90029de6:	f8c9 0000 	strgt.w	r0, [r9]
90029dea:	683a      	ldr	r2, [r7, #0]
90029dec:	4290      	cmp	r0, r2
90029dee:	bfc8      	it	gt
90029df0:	6038      	strgt	r0, [r7, #0]
90029df2:	4658      	mov	r0, fp
90029df4:	f7ff ff72 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90029df8:	a903      	add	r1, sp, #12
90029dfa:	9003      	str	r0, [sp, #12]
90029dfc:	4650      	mov	r0, sl
90029dfe:	f7ed f869 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029e02:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
90029e06:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
90029e0a:	1a10      	subs	r0, r2, r0
90029e0c:	6832      	ldr	r2, [r6, #0]
90029e0e:	4282      	cmp	r2, r0
90029e10:	bfc8      	it	gt
90029e12:	6030      	strgt	r0, [r6, #0]
90029e14:	682a      	ldr	r2, [r5, #0]
90029e16:	4290      	cmp	r0, r2
90029e18:	bfc8      	it	gt
90029e1a:	6028      	strgt	r0, [r5, #0]
90029e1c:	e7d1      	b.n	90029dc2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
90029e1e:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
90029e22:	9b00      	ldr	r3, [sp, #0]
90029e24:	455b      	cmp	r3, fp
90029e26:	dd27      	ble.n	90029e78 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
90029e28:	4618      	mov	r0, r3
90029e2a:	f7ed f98b 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90029e2e:	a903      	add	r1, sp, #12
90029e30:	9003      	str	r0, [sp, #12]
90029e32:	4650      	mov	r0, sl
90029e34:	f7ed f84e 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029e38:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
90029e3c:	4410      	add	r0, r2
90029e3e:	f8d9 2000 	ldr.w	r2, [r9]
90029e42:	4282      	cmp	r2, r0
90029e44:	bfc8      	it	gt
90029e46:	f8c9 0000 	strgt.w	r0, [r9]
90029e4a:	683a      	ldr	r2, [r7, #0]
90029e4c:	4290      	cmp	r0, r2
90029e4e:	bfc8      	it	gt
90029e50:	6038      	strgt	r0, [r7, #0]
90029e52:	9800      	ldr	r0, [sp, #0]
90029e54:	f7ff ff42 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90029e58:	a903      	add	r1, sp, #12
90029e5a:	9003      	str	r0, [sp, #12]
90029e5c:	4650      	mov	r0, sl
90029e5e:	f7ed f839 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029e62:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
90029e66:	1a10      	subs	r0, r2, r0
90029e68:	6832      	ldr	r2, [r6, #0]
90029e6a:	4282      	cmp	r2, r0
90029e6c:	bfc8      	it	gt
90029e6e:	6030      	strgt	r0, [r6, #0]
90029e70:	682a      	ldr	r2, [r5, #0]
90029e72:	4290      	cmp	r0, r2
90029e74:	bfc8      	it	gt
90029e76:	6028      	strgt	r0, [r5, #0]
90029e78:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
90029e7c:	f8d9 1000 	ldr.w	r1, [r9]
90029e80:	4291      	cmp	r1, r2
90029e82:	bfc8      	it	gt
90029e84:	f8c9 2000 	strgt.w	r2, [r9]
90029e88:	683a      	ldr	r2, [r7, #0]
90029e8a:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
90029e8e:	429a      	cmp	r2, r3
90029e90:	bfb8      	it	lt
90029e92:	603b      	strlt	r3, [r7, #0]
90029e94:	6832      	ldr	r2, [r6, #0]
90029e96:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
90029e9a:	429a      	cmp	r2, r3
90029e9c:	bfc8      	it	gt
90029e9e:	6033      	strgt	r3, [r6, #0]
90029ea0:	682a      	ldr	r2, [r5, #0]
90029ea2:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
90029ea6:	429a      	cmp	r2, r3
90029ea8:	da00      	bge.n	90029eac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90029eaa:	602b      	str	r3, [r5, #0]
90029eac:	b005      	add	sp, #20
90029eae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029eb2:	2002      	movs	r0, #2
90029eb4:	3401      	adds	r4, #1
90029eb6:	9201      	str	r2, [sp, #4]
90029eb8:	fb94 f4f0 	sdiv	r4, r4, r0
90029ebc:	4610      	mov	r0, r2
90029ebe:	f7ed f941 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90029ec2:	a903      	add	r1, sp, #12
90029ec4:	9003      	str	r0, [sp, #12]
90029ec6:	4650      	mov	r0, sl
90029ec8:	f7ed f804 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029ecc:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
90029ed0:	9a01      	ldr	r2, [sp, #4]
90029ed2:	4408      	add	r0, r1
90029ed4:	f8d9 1000 	ldr.w	r1, [r9]
90029ed8:	1b03      	subs	r3, r0, r4
90029eda:	4420      	add	r0, r4
90029edc:	4299      	cmp	r1, r3
90029ede:	bfc8      	it	gt
90029ee0:	f8c9 3000 	strgt.w	r3, [r9]
90029ee4:	6839      	ldr	r1, [r7, #0]
90029ee6:	428b      	cmp	r3, r1
90029ee8:	bfc8      	it	gt
90029eea:	603b      	strgt	r3, [r7, #0]
90029eec:	f8d9 1000 	ldr.w	r1, [r9]
90029ef0:	4281      	cmp	r1, r0
90029ef2:	bfc8      	it	gt
90029ef4:	f8c9 0000 	strgt.w	r0, [r9]
90029ef8:	6839      	ldr	r1, [r7, #0]
90029efa:	4288      	cmp	r0, r1
90029efc:	bfc8      	it	gt
90029efe:	6038      	strgt	r0, [r7, #0]
90029f00:	4610      	mov	r0, r2
90029f02:	f7ff feeb 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90029f06:	a903      	add	r1, sp, #12
90029f08:	9003      	str	r0, [sp, #12]
90029f0a:	4650      	mov	r0, sl
90029f0c:	f7ec ffe2 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029f10:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
90029f14:	1a10      	subs	r0, r2, r0
90029f16:	6832      	ldr	r2, [r6, #0]
90029f18:	1b01      	subs	r1, r0, r4
90029f1a:	4420      	add	r0, r4
90029f1c:	428a      	cmp	r2, r1
90029f1e:	bfc8      	it	gt
90029f20:	6031      	strgt	r1, [r6, #0]
90029f22:	682a      	ldr	r2, [r5, #0]
90029f24:	4291      	cmp	r1, r2
90029f26:	bfc8      	it	gt
90029f28:	6029      	strgt	r1, [r5, #0]
90029f2a:	f44f 6134 	mov.w	r1, #2880	; 0xb40
90029f2e:	6832      	ldr	r2, [r6, #0]
90029f30:	4282      	cmp	r2, r0
90029f32:	bfc8      	it	gt
90029f34:	6030      	strgt	r0, [r6, #0]
90029f36:	682a      	ldr	r2, [r5, #0]
90029f38:	4290      	cmp	r0, r2
90029f3a:	fb9b f2f1 	sdiv	r2, fp, r1
90029f3e:	fb01 b212 	mls	r2, r1, r2, fp
90029f42:	bfc8      	it	gt
90029f44:	6028      	strgt	r0, [r5, #0]
90029f46:	1a8a      	subs	r2, r1, r2
90029f48:	fb92 f0f1 	sdiv	r0, r2, r1
90029f4c:	fb01 2210 	mls	r2, r1, r0, r2
90029f50:	4493      	add	fp, r2
90029f52:	9b00      	ldr	r3, [sp, #0]
90029f54:	455b      	cmp	r3, fp
90029f56:	db40      	blt.n	90029fda <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
90029f58:	4658      	mov	r0, fp
90029f5a:	f7ed f8f3 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90029f5e:	a903      	add	r1, sp, #12
90029f60:	9003      	str	r0, [sp, #12]
90029f62:	4650      	mov	r0, sl
90029f64:	f7ec ffb6 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029f68:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
90029f6c:	4410      	add	r0, r2
90029f6e:	f8d9 2000 	ldr.w	r2, [r9]
90029f72:	1b01      	subs	r1, r0, r4
90029f74:	4420      	add	r0, r4
90029f76:	428a      	cmp	r2, r1
90029f78:	bfc8      	it	gt
90029f7a:	f8c9 1000 	strgt.w	r1, [r9]
90029f7e:	683a      	ldr	r2, [r7, #0]
90029f80:	4291      	cmp	r1, r2
90029f82:	bfc8      	it	gt
90029f84:	6039      	strgt	r1, [r7, #0]
90029f86:	f8d9 2000 	ldr.w	r2, [r9]
90029f8a:	4282      	cmp	r2, r0
90029f8c:	bfc8      	it	gt
90029f8e:	f8c9 0000 	strgt.w	r0, [r9]
90029f92:	683a      	ldr	r2, [r7, #0]
90029f94:	4290      	cmp	r0, r2
90029f96:	bfc8      	it	gt
90029f98:	6038      	strgt	r0, [r7, #0]
90029f9a:	4658      	mov	r0, fp
90029f9c:	f7ff fe9e 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90029fa0:	a903      	add	r1, sp, #12
90029fa2:	9003      	str	r0, [sp, #12]
90029fa4:	4650      	mov	r0, sl
90029fa6:	f7ec ff95 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029faa:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
90029fae:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
90029fb2:	1a10      	subs	r0, r2, r0
90029fb4:	6832      	ldr	r2, [r6, #0]
90029fb6:	1b01      	subs	r1, r0, r4
90029fb8:	4420      	add	r0, r4
90029fba:	428a      	cmp	r2, r1
90029fbc:	bfc8      	it	gt
90029fbe:	6031      	strgt	r1, [r6, #0]
90029fc0:	682a      	ldr	r2, [r5, #0]
90029fc2:	4291      	cmp	r1, r2
90029fc4:	bfc8      	it	gt
90029fc6:	6029      	strgt	r1, [r5, #0]
90029fc8:	6832      	ldr	r2, [r6, #0]
90029fca:	4282      	cmp	r2, r0
90029fcc:	bfc8      	it	gt
90029fce:	6030      	strgt	r0, [r6, #0]
90029fd0:	682a      	ldr	r2, [r5, #0]
90029fd2:	4290      	cmp	r0, r2
90029fd4:	bfc8      	it	gt
90029fd6:	6028      	strgt	r0, [r5, #0]
90029fd8:	e7bb      	b.n	90029f52 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
90029fda:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
90029fde:	9b00      	ldr	r3, [sp, #0]
90029fe0:	455b      	cmp	r3, fp
90029fe2:	f77f af63 	ble.w	90029eac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90029fe6:	4618      	mov	r0, r3
90029fe8:	f7ed f8ac 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90029fec:	a903      	add	r1, sp, #12
90029fee:	9003      	str	r0, [sp, #12]
90029ff0:	4650      	mov	r0, sl
90029ff2:	f7ec ff6f 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90029ff6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
90029ffa:	4410      	add	r0, r2
90029ffc:	f8d9 2000 	ldr.w	r2, [r9]
9002a000:	1b01      	subs	r1, r0, r4
9002a002:	4420      	add	r0, r4
9002a004:	428a      	cmp	r2, r1
9002a006:	bfc8      	it	gt
9002a008:	f8c9 1000 	strgt.w	r1, [r9]
9002a00c:	683a      	ldr	r2, [r7, #0]
9002a00e:	4291      	cmp	r1, r2
9002a010:	bfc8      	it	gt
9002a012:	6039      	strgt	r1, [r7, #0]
9002a014:	f8d9 2000 	ldr.w	r2, [r9]
9002a018:	4282      	cmp	r2, r0
9002a01a:	bfc8      	it	gt
9002a01c:	f8c9 0000 	strgt.w	r0, [r9]
9002a020:	683b      	ldr	r3, [r7, #0]
9002a022:	4298      	cmp	r0, r3
9002a024:	bfc8      	it	gt
9002a026:	6038      	strgt	r0, [r7, #0]
9002a028:	9800      	ldr	r0, [sp, #0]
9002a02a:	f7ff fe57 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a02e:	a903      	add	r1, sp, #12
9002a030:	9003      	str	r0, [sp, #12]
9002a032:	4650      	mov	r0, sl
9002a034:	f7ec ff4e 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a038:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
9002a03c:	6832      	ldr	r2, [r6, #0]
9002a03e:	1a18      	subs	r0, r3, r0
9002a040:	1b03      	subs	r3, r0, r4
9002a042:	4404      	add	r4, r0
9002a044:	429a      	cmp	r2, r3
9002a046:	bfc8      	it	gt
9002a048:	6033      	strgt	r3, [r6, #0]
9002a04a:	682a      	ldr	r2, [r5, #0]
9002a04c:	4293      	cmp	r3, r2
9002a04e:	bfc8      	it	gt
9002a050:	602b      	strgt	r3, [r5, #0]
9002a052:	6833      	ldr	r3, [r6, #0]
9002a054:	42a3      	cmp	r3, r4
9002a056:	bfc8      	it	gt
9002a058:	6034      	strgt	r4, [r6, #0]
9002a05a:	682b      	ldr	r3, [r5, #0]
9002a05c:	429c      	cmp	r4, r3
9002a05e:	bfc8      	it	gt
9002a060:	602c      	strgt	r4, [r5, #0]
9002a062:	e723      	b.n	90029eac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

9002a064 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
9002a064:	b530      	push	{r4, r5, lr}
9002a066:	4604      	mov	r4, r0
9002a068:	4608      	mov	r0, r1
9002a06a:	4611      	mov	r1, r2
9002a06c:	461a      	mov	r2, r3
9002a06e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9002a072:	b089      	sub	sp, #36	; 0x24
9002a074:	2500      	movs	r5, #0
9002a076:	015b      	lsls	r3, r3, #5
9002a078:	9505      	str	r5, [sp, #20]
9002a07a:	9304      	str	r3, [sp, #16]
9002a07c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9002a080:	015b      	lsls	r3, r3, #5
9002a082:	e9cd 3506 	strd	r3, r5, [sp, #24]
9002a086:	ab07      	add	r3, sp, #28
9002a088:	2520      	movs	r5, #32
9002a08a:	9302      	str	r3, [sp, #8]
9002a08c:	ab06      	add	r3, sp, #24
9002a08e:	9301      	str	r3, [sp, #4]
9002a090:	ab05      	add	r3, sp, #20
9002a092:	9300      	str	r3, [sp, #0]
9002a094:	ab04      	add	r3, sp, #16
9002a096:	f7ff fe3f 	bl	90029d18 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
9002a09a:	9a04      	ldr	r2, [sp, #16]
9002a09c:	9805      	ldr	r0, [sp, #20]
9002a09e:	9b06      	ldr	r3, [sp, #24]
9002a0a0:	9907      	ldr	r1, [sp, #28]
9002a0a2:	fb92 f2f5 	sdiv	r2, r2, r5
9002a0a6:	fb90 f0f5 	sdiv	r0, r0, r5
9002a0aa:	fb93 f3f5 	sdiv	r3, r3, r5
9002a0ae:	fb91 f1f5 	sdiv	r1, r1, r5
9002a0b2:	b292      	uxth	r2, r2
9002a0b4:	3002      	adds	r0, #2
9002a0b6:	b29b      	uxth	r3, r3
9002a0b8:	3102      	adds	r1, #2
9002a0ba:	1a80      	subs	r0, r0, r2
9002a0bc:	3a01      	subs	r2, #1
9002a0be:	1ac9      	subs	r1, r1, r3
9002a0c0:	3b01      	subs	r3, #1
9002a0c2:	80a0      	strh	r0, [r4, #4]
9002a0c4:	4620      	mov	r0, r4
9002a0c6:	8022      	strh	r2, [r4, #0]
9002a0c8:	8063      	strh	r3, [r4, #2]
9002a0ca:	80e1      	strh	r1, [r4, #6]
9002a0cc:	b009      	add	sp, #36	; 0x24
9002a0ce:	bd30      	pop	{r4, r5, pc}

9002a0d0 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
9002a0d0:	b510      	push	{r4, lr}
9002a0d2:	4604      	mov	r4, r0
9002a0d4:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
9002a0d8:	f7ff ffc4 	bl	9002a064 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
9002a0dc:	4620      	mov	r0, r4
9002a0de:	bd10      	pop	{r4, pc}

9002a0e0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
9002a0e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a0e2:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
9002a0e6:	4606      	mov	r6, r0
9002a0e8:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
9002a0ec:	42a5      	cmp	r5, r4
9002a0ee:	6813      	ldr	r3, [r2, #0]
9002a0f0:	ea4f 1040 	mov.w	r0, r0, lsl #5
9002a0f4:	da2b      	bge.n	9002a14e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
9002a0f6:	42a3      	cmp	r3, r4
9002a0f8:	dd14      	ble.n	9002a124 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
9002a0fa:	b168      	cbz	r0, 9002a118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
9002a0fc:	4267      	negs	r7, r4
9002a0fe:	fb97 f2f0 	sdiv	r2, r7, r0
9002a102:	fb00 7212 	mls	r2, r0, r2, r7
9002a106:	1a82      	subs	r2, r0, r2
9002a108:	fb92 f7f0 	sdiv	r7, r2, r0
9002a10c:	fb00 2017 	mls	r0, r0, r7, r2
9002a110:	1a24      	subs	r4, r4, r0
9002a112:	42ac      	cmp	r4, r5
9002a114:	bfb8      	it	lt
9002a116:	462c      	movlt	r4, r5
9002a118:	4630      	mov	r0, r6
9002a11a:	4622      	mov	r2, r4
9002a11c:	f7ff ffa2 	bl	9002a064 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
9002a120:	4630      	mov	r0, r6
9002a122:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002a124:	42ab      	cmp	r3, r5
9002a126:	dd0e      	ble.n	9002a146 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
9002a128:	b168      	cbz	r0, 9002a146 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
9002a12a:	425f      	negs	r7, r3
9002a12c:	fb97 f2f0 	sdiv	r2, r7, r0
9002a130:	fb00 7212 	mls	r2, r0, r2, r7
9002a134:	1a82      	subs	r2, r0, r2
9002a136:	fb92 f7f0 	sdiv	r7, r2, r0
9002a13a:	fb00 2017 	mls	r0, r0, r7, r2
9002a13e:	1a1b      	subs	r3, r3, r0
9002a140:	42ab      	cmp	r3, r5
9002a142:	bfb8      	it	lt
9002a144:	462b      	movlt	r3, r5
9002a146:	4622      	mov	r2, r4
9002a148:	461c      	mov	r4, r3
9002a14a:	4613      	mov	r3, r2
9002a14c:	e7e4      	b.n	9002a118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
9002a14e:	42a3      	cmp	r3, r4
9002a150:	da10      	bge.n	9002a174 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
9002a152:	b148      	cbz	r0, 9002a168 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
9002a154:	fb94 f2f0 	sdiv	r2, r4, r0
9002a158:	fb00 4212 	mls	r2, r0, r2, r4
9002a15c:	1a82      	subs	r2, r0, r2
9002a15e:	fb92 f7f0 	sdiv	r7, r2, r0
9002a162:	fb00 2017 	mls	r0, r0, r7, r2
9002a166:	4404      	add	r4, r0
9002a168:	42a5      	cmp	r5, r4
9002a16a:	bfa8      	it	ge
9002a16c:	4625      	movge	r5, r4
9002a16e:	461c      	mov	r4, r3
9002a170:	462b      	mov	r3, r5
9002a172:	e7d1      	b.n	9002a118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
9002a174:	42ab      	cmp	r3, r5
9002a176:	dacf      	bge.n	9002a118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
9002a178:	2800      	cmp	r0, #0
9002a17a:	d0cd      	beq.n	9002a118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
9002a17c:	fb93 f2f0 	sdiv	r2, r3, r0
9002a180:	fb00 3212 	mls	r2, r0, r2, r3
9002a184:	1a82      	subs	r2, r0, r2
9002a186:	fb92 f7f0 	sdiv	r7, r2, r0
9002a18a:	fb00 2017 	mls	r0, r0, r7, r2
9002a18e:	4403      	add	r3, r0
9002a190:	42ab      	cmp	r3, r5
9002a192:	bfa8      	it	ge
9002a194:	462b      	movge	r3, r5
9002a196:	e7bf      	b.n	9002a118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

9002a198 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
9002a198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a19c:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
9002a1a0:	2220      	movs	r2, #32
9002a1a2:	468b      	mov	fp, r1
9002a1a4:	42ae      	cmp	r6, r5
9002a1a6:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
9002a1aa:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
9002a1ae:	b0ab      	sub	sp, #172	; 0xac
9002a1b0:	bfa4      	itt	ge
9002a1b2:	4633      	movge	r3, r6
9002a1b4:	462e      	movge	r6, r5
9002a1b6:	6c01      	ldr	r1, [r0, #64]	; 0x40
9002a1b8:	4604      	mov	r4, r0
9002a1ba:	bfa8      	it	ge
9002a1bc:	461d      	movge	r5, r3
9002a1be:	1bab      	subs	r3, r5, r6
9002a1c0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
9002a1c4:	6b43      	ldr	r3, [r0, #52]	; 0x34
9002a1c6:	bfa4      	itt	ge
9002a1c8:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
9002a1cc:	2600      	movge	r6, #0
9002a1ce:	fb99 f9f2 	sdiv	r9, r9, r2
9002a1d2:	fb9a faf2 	sdiv	sl, sl, r2
9002a1d6:	2900      	cmp	r1, #0
9002a1d8:	f000 80f1 	beq.w	9002a3be <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x226>
9002a1dc:	f9bb 0000 	ldrsh.w	r0, [fp]
9002a1e0:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
9002a1e4:	eba9 0700 	sub.w	r7, r9, r0
9002a1e8:	ebaa 0802 	sub.w	r8, sl, r2
9002a1ec:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
9002a1f0:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
9002a1f4:	f8bb 7004 	ldrh.w	r7, [fp, #4]
9002a1f8:	4407      	add	r7, r0
9002a1fa:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
9002a1fe:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
9002a202:	f8bb 8006 	ldrh.w	r8, [fp, #6]
9002a206:	b23f      	sxth	r7, r7
9002a208:	4490      	add	r8, r2
9002a20a:	2202      	movs	r2, #2
9002a20c:	eba9 0707 	sub.w	r7, r9, r7
9002a210:	fa0f f888 	sxth.w	r8, r8
9002a214:	9201      	str	r2, [sp, #4]
9002a216:	2f00      	cmp	r7, #0
9002a218:	ebaa 0808 	sub.w	r8, sl, r8
9002a21c:	bfb8      	it	lt
9002a21e:	427f      	neglt	r7, r7
9002a220:	f1b8 0f00 	cmp.w	r8, #0
9002a224:	bfb8      	it	lt
9002a226:	f1c8 0800 	rsblt	r8, r8, #0
9002a22a:	45bc      	cmp	ip, r7
9002a22c:	bfcc      	ite	gt
9002a22e:	f10c 0701 	addgt.w	r7, ip, #1
9002a232:	3701      	addle	r7, #1
9002a234:	4540      	cmp	r0, r8
9002a236:	bfc8      	it	gt
9002a238:	f100 0801 	addgt.w	r8, r0, #1
9002a23c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
9002a240:	bfd8      	it	le
9002a242:	f108 0801 	addle.w	r8, r8, #1
9002a246:	3001      	adds	r0, #1
9002a248:	fb08 f808 	mul.w	r8, r8, r8
9002a24c:	1040      	asrs	r0, r0, #1
9002a24e:	fb07 8707 	mla	r7, r7, r7, r8
9002a252:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
9002a256:	fb91 f1f2 	sdiv	r1, r1, r2
9002a25a:	1a5b      	subs	r3, r3, r1
9002a25c:	930d      	str	r3, [sp, #52]	; 0x34
9002a25e:	f7ec ff51 	bl	90017104 <_ZN8touchgfx7CWRUtil4sineEi>
9002a262:	a92a      	add	r1, sp, #168	; 0xa8
9002a264:	f841 0d70 	str.w	r0, [r1, #-112]!
9002a268:	a80d      	add	r0, sp, #52	; 0x34
9002a26a:	f7ec fe33 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a26e:	f04f 0c20 	mov.w	ip, #32
9002a272:	9a01      	ldr	r2, [sp, #4]
9002a274:	fb90 f0fc 	sdiv	r0, r0, ip
9002a278:	4340      	muls	r0, r0
9002a27a:	4287      	cmp	r7, r0
9002a27c:	da04      	bge.n	9002a288 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
9002a27e:	2401      	movs	r4, #1
9002a280:	4620      	mov	r0, r4
9002a282:	b02b      	add	sp, #172	; 0xac
9002a284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a288:	6c21      	ldr	r1, [r4, #64]	; 0x40
9002a28a:	6b60      	ldr	r0, [r4, #52]	; 0x34
9002a28c:	fb91 f3f2 	sdiv	r3, r1, r2
9002a290:	4403      	add	r3, r0
9002a292:	fb93 f3fc 	sdiv	r3, r3, ip
9002a296:	f9bb 1000 	ldrsh.w	r1, [fp]
9002a29a:	3301      	adds	r3, #1
9002a29c:	f8bb 2004 	ldrh.w	r2, [fp, #4]
9002a2a0:	435b      	muls	r3, r3
9002a2a2:	440a      	add	r2, r1
9002a2a4:	b212      	sxth	r2, r2
9002a2a6:	454a      	cmp	r2, r9
9002a2a8:	bfa8      	it	ge
9002a2aa:	464a      	movge	r2, r9
9002a2ac:	428a      	cmp	r2, r1
9002a2ae:	bfac      	ite	ge
9002a2b0:	eba9 0902 	subge.w	r9, r9, r2
9002a2b4:	eba9 0901 	sublt.w	r9, r9, r1
9002a2b8:	f8bb 2006 	ldrh.w	r2, [fp, #6]
9002a2bc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
9002a2c0:	440a      	add	r2, r1
9002a2c2:	b212      	sxth	r2, r2
9002a2c4:	4552      	cmp	r2, sl
9002a2c6:	bfa8      	it	ge
9002a2c8:	4652      	movge	r2, sl
9002a2ca:	428a      	cmp	r2, r1
9002a2cc:	bfac      	ite	ge
9002a2ce:	ebaa 0a02 	subge.w	sl, sl, r2
9002a2d2:	ebaa 0a01 	sublt.w	sl, sl, r1
9002a2d6:	fb0a fa0a 	mul.w	sl, sl, sl
9002a2da:	fb09 a909 	mla	r9, r9, r9, sl
9002a2de:	4599      	cmp	r9, r3
9002a2e0:	dccd      	bgt.n	9002a27e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe6>
9002a2e2:	465a      	mov	r2, fp
9002a2e4:	4621      	mov	r1, r4
9002a2e6:	a80e      	add	r0, sp, #56	; 0x38
9002a2e8:	f7ff faba 	bl	90029860 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
9002a2ec:	6b62      	ldr	r2, [r4, #52]	; 0x34
9002a2ee:	6c23      	ldr	r3, [r4, #64]	; 0x40
9002a2f0:	9209      	str	r2, [sp, #36]	; 0x24
9002a2f2:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
9002a2f6:	930a      	str	r3, [sp, #40]	; 0x28
9002a2f8:	dd07      	ble.n	9002a30a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x172>
9002a2fa:	2102      	movs	r1, #2
9002a2fc:	fb93 f3f1 	sdiv	r3, r3, r1
9002a300:	4413      	add	r3, r2
9002a302:	930a      	str	r3, [sp, #40]	; 0x28
9002a304:	fb93 f3f1 	sdiv	r3, r3, r1
9002a308:	9309      	str	r3, [sp, #36]	; 0x24
9002a30a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
9002a30e:	f04f 0a02 	mov.w	sl, #2
9002a312:	4630      	mov	r0, r6
9002a314:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
9002a318:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
9002a31c:	017f      	lsls	r7, r7, #5
9002a31e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
9002a322:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9002a326:	930b      	str	r3, [sp, #44]	; 0x2c
9002a328:	f7ec ff0c 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9002a32c:	f849 0d74 	str.w	r0, [r9, #-116]!
9002a330:	a80b      	add	r0, sp, #44	; 0x2c
9002a332:	4649      	mov	r1, r9
9002a334:	f7ec fdce 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a338:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a33a:	fb90 f0fa 	sdiv	r0, r0, sl
9002a33e:	eb00 0b03 	add.w	fp, r0, r3
9002a342:	4630      	mov	r0, r6
9002a344:	f7ff fcca 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a348:	f848 0d78 	str.w	r0, [r8, #-120]!
9002a34c:	a80b      	add	r0, sp, #44	; 0x2c
9002a34e:	4641      	mov	r1, r8
9002a350:	f7ec fdc0 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a354:	6b22      	ldr	r2, [r4, #48]	; 0x30
9002a356:	4659      	mov	r1, fp
9002a358:	fb90 f0fa 	sdiv	r0, r0, sl
9002a35c:	1a12      	subs	r2, r2, r0
9002a35e:	a80e      	add	r0, sp, #56	; 0x38
9002a360:	f7ff fbf8 	bl	90029b54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9002a364:	f106 0a20 	add.w	sl, r6, #32
9002a368:	bb67      	cbnz	r7, 9002a3c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22c>
9002a36a:	46b3      	mov	fp, r6
9002a36c:	45aa      	cmp	sl, r5
9002a36e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002a370:	dc33      	bgt.n	9002a3da <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
9002a372:	9909      	ldr	r1, [sp, #36]	; 0x24
9002a374:	4650      	mov	r0, sl
9002a376:	eb02 0241 	add.w	r2, r2, r1, lsl #1
9002a37a:	920b      	str	r2, [sp, #44]	; 0x2c
9002a37c:	f7ec fee2 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9002a380:	4641      	mov	r1, r8
9002a382:	900c      	str	r0, [sp, #48]	; 0x30
9002a384:	a80b      	add	r0, sp, #44	; 0x2c
9002a386:	f7ec fda5 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a38a:	2302      	movs	r3, #2
9002a38c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9002a38e:	fb90 f0f3 	sdiv	r0, r0, r3
9002a392:	eb00 0b02 	add.w	fp, r0, r2
9002a396:	4650      	mov	r0, sl
9002a398:	f7ff fca0 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a39c:	4649      	mov	r1, r9
9002a39e:	900d      	str	r0, [sp, #52]	; 0x34
9002a3a0:	a80b      	add	r0, sp, #44	; 0x2c
9002a3a2:	f7ec fd97 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a3a6:	2302      	movs	r3, #2
9002a3a8:	6b22      	ldr	r2, [r4, #48]	; 0x30
9002a3aa:	4659      	mov	r1, fp
9002a3ac:	46d3      	mov	fp, sl
9002a3ae:	44ba      	add	sl, r7
9002a3b0:	fb90 f0f3 	sdiv	r0, r0, r3
9002a3b4:	1a12      	subs	r2, r2, r0
9002a3b6:	a80e      	add	r0, sp, #56	; 0x38
9002a3b8:	f7ff fc19 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9002a3bc:	e7d6      	b.n	9002a36c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1d4>
9002a3be:	fb93 f3f2 	sdiv	r3, r3, r2
9002a3c2:	e768      	b.n	9002a296 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xfe>
9002a3c4:	fb9a f2f7 	sdiv	r2, sl, r7
9002a3c8:	fb07 a212 	mls	r2, r7, r2, sl
9002a3cc:	1aba      	subs	r2, r7, r2
9002a3ce:	fb92 f1f7 	sdiv	r1, r2, r7
9002a3d2:	fb07 2211 	mls	r2, r7, r1, r2
9002a3d6:	4492      	add	sl, r2
9002a3d8:	e7c7      	b.n	9002a36a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1d2>
9002a3da:	45ab      	cmp	fp, r5
9002a3dc:	da23      	bge.n	9002a426 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x28e>
9002a3de:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002a3e0:	f04f 0a02 	mov.w	sl, #2
9002a3e4:	4628      	mov	r0, r5
9002a3e6:	eb02 0243 	add.w	r2, r2, r3, lsl #1
9002a3ea:	920b      	str	r2, [sp, #44]	; 0x2c
9002a3ec:	f7ec feaa 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9002a3f0:	4641      	mov	r1, r8
9002a3f2:	900c      	str	r0, [sp, #48]	; 0x30
9002a3f4:	a80b      	add	r0, sp, #44	; 0x2c
9002a3f6:	f7ec fd6d 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a3fa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a3fc:	fb90 f0fa 	sdiv	r0, r0, sl
9002a400:	4403      	add	r3, r0
9002a402:	4628      	mov	r0, r5
9002a404:	9301      	str	r3, [sp, #4]
9002a406:	f7ff fc69 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a40a:	4649      	mov	r1, r9
9002a40c:	900d      	str	r0, [sp, #52]	; 0x34
9002a40e:	a80b      	add	r0, sp, #44	; 0x2c
9002a410:	f7ec fd60 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a414:	6b22      	ldr	r2, [r4, #48]	; 0x30
9002a416:	9b01      	ldr	r3, [sp, #4]
9002a418:	fb90 f0fa 	sdiv	r0, r0, sl
9002a41c:	4619      	mov	r1, r3
9002a41e:	1a12      	subs	r2, r2, r0
9002a420:	a80e      	add	r0, sp, #56	; 0x38
9002a422:	f7ff fbe4 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9002a426:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002a428:	b99b      	cbnz	r3, 9002a452 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
9002a42a:	1bad      	subs	r5, r5, r6
9002a42c:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
9002a430:	da04      	bge.n	9002a43c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
9002a432:	a80e      	add	r0, sp, #56	; 0x38
9002a434:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
9002a438:	f7ff fbd9 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9002a43c:	21ff      	movs	r1, #255	; 0xff
9002a43e:	a80e      	add	r0, sp, #56	; 0x38
9002a440:	f7ff faca 	bl	900299d8 <_ZN8touchgfx6Canvas6renderEh>
9002a444:	4604      	mov	r4, r0
9002a446:	4b8a      	ldr	r3, [pc, #552]	; (9002a670 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4d8>)
9002a448:	a816      	add	r0, sp, #88	; 0x58
9002a44a:	930e      	str	r3, [sp, #56]	; 0x38
9002a44c:	f7ee f950 	bl	900186f0 <_ZN8touchgfx7OutlineD1Ev>
9002a450:	e716      	b.n	9002a280 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
9002a452:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
9002a456:	429a      	cmp	r2, r3
9002a458:	f0c0 8107 	bcc.w	9002a66a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4d2>
9002a45c:	1bab      	subs	r3, r5, r6
9002a45e:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
9002a462:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
9002a466:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
9002a46a:	9301      	str	r3, [sp, #4]
9002a46c:	da43      	bge.n	9002a4f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x35e>
9002a46e:	4628      	mov	r0, r5
9002a470:	f7ec fe68 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9002a474:	4649      	mov	r1, r9
9002a476:	900d      	str	r0, [sp, #52]	; 0x34
9002a478:	a809      	add	r0, sp, #36	; 0x24
9002a47a:	f7ec fd2b 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a47e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a480:	18c3      	adds	r3, r0, r3
9002a482:	4628      	mov	r0, r5
9002a484:	9303      	str	r3, [sp, #12]
9002a486:	f7ff fc29 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a48a:	4649      	mov	r1, r9
9002a48c:	900d      	str	r0, [sp, #52]	; 0x34
9002a48e:	a809      	add	r0, sp, #36	; 0x24
9002a490:	f7ec fd20 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a494:	6b23      	ldr	r3, [r4, #48]	; 0x30
9002a496:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
9002a49a:	1a1b      	subs	r3, r3, r0
9002a49c:	9204      	str	r2, [sp, #16]
9002a49e:	9302      	str	r3, [sp, #8]
9002a4a0:	eb0a 0305 	add.w	r3, sl, r5
9002a4a4:	9a04      	ldr	r2, [sp, #16]
9002a4a6:	4293      	cmp	r3, r2
9002a4a8:	da25      	bge.n	9002a4f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x35e>
9002a4aa:	4618      	mov	r0, r3
9002a4ac:	9306      	str	r3, [sp, #24]
9002a4ae:	f7ec fe49 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9002a4b2:	4649      	mov	r1, r9
9002a4b4:	900d      	str	r0, [sp, #52]	; 0x34
9002a4b6:	a80a      	add	r0, sp, #40	; 0x28
9002a4b8:	f7ec fd0c 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a4bc:	2202      	movs	r2, #2
9002a4be:	9b03      	ldr	r3, [sp, #12]
9002a4c0:	9207      	str	r2, [sp, #28]
9002a4c2:	fb90 f0f2 	sdiv	r0, r0, r2
9002a4c6:	18c3      	adds	r3, r0, r3
9002a4c8:	9305      	str	r3, [sp, #20]
9002a4ca:	9b06      	ldr	r3, [sp, #24]
9002a4cc:	4618      	mov	r0, r3
9002a4ce:	f7ff fc05 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a4d2:	a92a      	add	r1, sp, #168	; 0xa8
9002a4d4:	f841 0d78 	str.w	r0, [r1, #-120]!
9002a4d8:	a80a      	add	r0, sp, #40	; 0x28
9002a4da:	f7ec fcfb 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a4de:	9a07      	ldr	r2, [sp, #28]
9002a4e0:	9b02      	ldr	r3, [sp, #8]
9002a4e2:	9905      	ldr	r1, [sp, #20]
9002a4e4:	fb90 f2f2 	sdiv	r2, r0, r2
9002a4e8:	a80e      	add	r0, sp, #56	; 0x38
9002a4ea:	1a9a      	subs	r2, r3, r2
9002a4ec:	f7ff fb7f 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9002a4f0:	9b06      	ldr	r3, [sp, #24]
9002a4f2:	4453      	add	r3, sl
9002a4f4:	e7d6      	b.n	9002a4a4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x30c>
9002a4f6:	45ab      	cmp	fp, r5
9002a4f8:	da25      	bge.n	9002a546 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ae>
9002a4fa:	4628      	mov	r0, r5
9002a4fc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
9002a500:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
9002a504:	930b      	str	r3, [sp, #44]	; 0x2c
9002a506:	f7ec fe1d 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9002a50a:	4641      	mov	r1, r8
9002a50c:	900c      	str	r0, [sp, #48]	; 0x30
9002a50e:	a80b      	add	r0, sp, #44	; 0x2c
9002a510:	f7ec fce0 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a514:	2202      	movs	r2, #2
9002a516:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a518:	9202      	str	r2, [sp, #8]
9002a51a:	fb90 f0f2 	sdiv	r0, r0, r2
9002a51e:	eb00 0903 	add.w	r9, r0, r3
9002a522:	4628      	mov	r0, r5
9002a524:	f7ff fbda 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a528:	a92a      	add	r1, sp, #168	; 0xa8
9002a52a:	f841 0d74 	str.w	r0, [r1, #-116]!
9002a52e:	a80b      	add	r0, sp, #44	; 0x2c
9002a530:	f7ec fcd0 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a534:	9a02      	ldr	r2, [sp, #8]
9002a536:	6b23      	ldr	r3, [r4, #48]	; 0x30
9002a538:	4649      	mov	r1, r9
9002a53a:	fb90 f2f2 	sdiv	r2, r0, r2
9002a53e:	a80e      	add	r0, sp, #56	; 0x38
9002a540:	1a9a      	subs	r2, r3, r2
9002a542:	f7ff fb54 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9002a546:	46d9      	mov	r9, fp
9002a548:	2502      	movs	r5, #2
9002a54a:	45b1      	cmp	r9, r6
9002a54c:	db25      	blt.n	9002a59a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x402>
9002a54e:	4648      	mov	r0, r9
9002a550:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
9002a554:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
9002a558:	930b      	str	r3, [sp, #44]	; 0x2c
9002a55a:	f7ec fdf3 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9002a55e:	4641      	mov	r1, r8
9002a560:	900c      	str	r0, [sp, #48]	; 0x30
9002a562:	a80b      	add	r0, sp, #44	; 0x2c
9002a564:	f7ec fcb6 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a568:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a56a:	fb90 f0f5 	sdiv	r0, r0, r5
9002a56e:	eb00 0b03 	add.w	fp, r0, r3
9002a572:	4648      	mov	r0, r9
9002a574:	f7ff fbb2 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a578:	a90d      	add	r1, sp, #52	; 0x34
9002a57a:	900d      	str	r0, [sp, #52]	; 0x34
9002a57c:	a80b      	add	r0, sp, #44	; 0x2c
9002a57e:	f7ec fca9 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a582:	6b22      	ldr	r2, [r4, #48]	; 0x30
9002a584:	4659      	mov	r1, fp
9002a586:	46cb      	mov	fp, r9
9002a588:	eba9 0907 	sub.w	r9, r9, r7
9002a58c:	fb90 f0f5 	sdiv	r0, r0, r5
9002a590:	1a12      	subs	r2, r2, r0
9002a592:	a80e      	add	r0, sp, #56	; 0x38
9002a594:	f7ff fb2b 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9002a598:	e7d7      	b.n	9002a54a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b2>
9002a59a:	455e      	cmp	r6, fp
9002a59c:	da22      	bge.n	9002a5e4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x44c>
9002a59e:	2502      	movs	r5, #2
9002a5a0:	4630      	mov	r0, r6
9002a5a2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
9002a5a6:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
9002a5aa:	930b      	str	r3, [sp, #44]	; 0x2c
9002a5ac:	f7ec fdca 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9002a5b0:	4641      	mov	r1, r8
9002a5b2:	900c      	str	r0, [sp, #48]	; 0x30
9002a5b4:	a80b      	add	r0, sp, #44	; 0x2c
9002a5b6:	f7ec fc8d 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a5ba:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
9002a5bc:	fb90 f0f5 	sdiv	r0, r0, r5
9002a5c0:	4407      	add	r7, r0
9002a5c2:	4630      	mov	r0, r6
9002a5c4:	f7ff fb8a 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a5c8:	a92a      	add	r1, sp, #168	; 0xa8
9002a5ca:	f841 0d74 	str.w	r0, [r1, #-116]!
9002a5ce:	a80b      	add	r0, sp, #44	; 0x2c
9002a5d0:	f7ec fc80 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a5d4:	6b22      	ldr	r2, [r4, #48]	; 0x30
9002a5d6:	4639      	mov	r1, r7
9002a5d8:	fb90 f0f5 	sdiv	r0, r0, r5
9002a5dc:	1a12      	subs	r2, r2, r0
9002a5de:	a80e      	add	r0, sp, #56	; 0x38
9002a5e0:	f7ff fb05 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9002a5e4:	9b01      	ldr	r3, [sp, #4]
9002a5e6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
9002a5ea:	f6bf af27 	bge.w	9002a43c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
9002a5ee:	ad2a      	add	r5, sp, #168	; 0xa8
9002a5f0:	4630      	mov	r0, r6
9002a5f2:	f7ec fda7 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9002a5f6:	f04f 0b02 	mov.w	fp, #2
9002a5fa:	f845 0d74 	str.w	r0, [r5, #-116]!
9002a5fe:	a809      	add	r0, sp, #36	; 0x24
9002a600:	4629      	mov	r1, r5
9002a602:	f7ec fc67 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a606:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a608:	eb00 0903 	add.w	r9, r0, r3
9002a60c:	4630      	mov	r0, r6
9002a60e:	f7ff fb65 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a612:	4629      	mov	r1, r5
9002a614:	900d      	str	r0, [sp, #52]	; 0x34
9002a616:	a809      	add	r0, sp, #36	; 0x24
9002a618:	f7ec fc5c 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a61c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9002a61e:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
9002a622:	eba3 0800 	sub.w	r8, r3, r0
9002a626:	4454      	add	r4, sl
9002a628:	42a6      	cmp	r6, r4
9002a62a:	f77f af07 	ble.w	9002a43c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
9002a62e:	4620      	mov	r0, r4
9002a630:	f7ec fd88 	bl	90017144 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9002a634:	4629      	mov	r1, r5
9002a636:	900d      	str	r0, [sp, #52]	; 0x34
9002a638:	a80a      	add	r0, sp, #40	; 0x28
9002a63a:	f7ec fc4b 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a63e:	fb90 f0fb 	sdiv	r0, r0, fp
9002a642:	eb00 0709 	add.w	r7, r0, r9
9002a646:	4620      	mov	r0, r4
9002a648:	f7ff fb48 	bl	90029cdc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9002a64c:	a90c      	add	r1, sp, #48	; 0x30
9002a64e:	900c      	str	r0, [sp, #48]	; 0x30
9002a650:	a80a      	add	r0, sp, #40	; 0x28
9002a652:	f7ec fc3f 	bl	90016ed4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9002a656:	4639      	mov	r1, r7
9002a658:	4454      	add	r4, sl
9002a65a:	fb90 f2fb 	sdiv	r2, r0, fp
9002a65e:	a80e      	add	r0, sp, #56	; 0x38
9002a660:	eba8 0202 	sub.w	r2, r8, r2
9002a664:	f7ff fac3 	bl	90029bee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9002a668:	e7de      	b.n	9002a628 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x490>
9002a66a:	2400      	movs	r4, #0
9002a66c:	e6eb      	b.n	9002a446 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ae>
9002a66e:	bf00      	nop
9002a670:	90030f04 	.word	0x90030f04

9002a674 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
9002a674:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
9002a678:	4770      	bx	lr

9002a67a <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
9002a67a:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
9002a67e:	4770      	bx	lr

9002a680 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
9002a680:	6802      	ldr	r2, [r0, #0]
9002a682:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
9002a686:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
9002a688:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
9002a68c:	4710      	bx	r2

9002a68e <_ZN8touchgfx13TextureMapper9setYAngleEf>:
9002a68e:	6802      	ldr	r2, [r0, #0]
9002a690:	eef0 0a40 	vmov.f32	s1, s0
9002a694:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
9002a698:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
9002a69a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
9002a69e:	4710      	bx	r2

9002a6a0 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
9002a6a0:	6802      	ldr	r2, [r0, #0]
9002a6a2:	eeb0 1a40 	vmov.f32	s2, s0
9002a6a6:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
9002a6aa:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
9002a6ac:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
9002a6b0:	4710      	bx	r2

9002a6b2 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
9002a6b2:	6802      	ldr	r2, [r0, #0]
9002a6b4:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
9002a6b8:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
9002a6ba:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
9002a6be:	4710      	bx	r2

9002a6c0 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
9002a6c0:	6802      	ldr	r2, [r0, #0]
9002a6c2:	eef0 0a40 	vmov.f32	s1, s0
9002a6c6:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
9002a6ca:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
9002a6cc:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
9002a6d0:	4710      	bx	r2

9002a6d2 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
9002a6d2:	6802      	ldr	r2, [r0, #0]
9002a6d4:	eeb0 1a40 	vmov.f32	s2, s0
9002a6d8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
9002a6dc:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
9002a6de:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
9002a6e2:	4710      	bx	r2

9002a6e4 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
9002a6e4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
9002a6e8:	4770      	bx	lr

9002a6ea <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
9002a6ea:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
9002a6ee:	4770      	bx	lr

9002a6f0 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
9002a6f0:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
9002a6f4:	4770      	bx	lr

9002a6f6 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
9002a6f6:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
9002a6fa:	4770      	bx	lr

9002a6fc <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
9002a6fc:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
9002a700:	4770      	bx	lr

9002a702 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
9002a702:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
9002a706:	4770      	bx	lr

9002a708 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
9002a708:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
9002a70c:	4770      	bx	lr

9002a70e <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
9002a70e:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
9002a712:	4770      	bx	lr

9002a714 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
9002a714:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
9002a718:	4770      	bx	lr

9002a71a <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
9002a71a:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
9002a71e:	4770      	bx	lr

9002a720 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
9002a720:	ee07 2a90 	vmov	s15, r2
9002a724:	6803      	ldr	r3, [r0, #0]
9002a726:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9002a72a:	ee07 1a90 	vmov	s15, r1
9002a72e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
9002a732:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
9002a736:	4718      	bx	r3

9002a738 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
9002a738:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
9002a73c:	4770      	bx	lr

9002a73e <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
9002a73e:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
9002a742:	4770      	bx	lr

9002a744 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
9002a744:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
9002a748:	4770      	bx	lr

9002a74a <_ZNK8touchgfx13TextureMapper5getX1Ev>:
9002a74a:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
9002a74e:	4770      	bx	lr

9002a750 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
9002a750:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
9002a754:	4770      	bx	lr

9002a756 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
9002a756:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
9002a75a:	4770      	bx	lr

9002a75c <_ZNK8touchgfx13TextureMapper5getY0Ev>:
9002a75c:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
9002a760:	4770      	bx	lr

9002a762 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
9002a762:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
9002a766:	4770      	bx	lr

9002a768 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
9002a768:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
9002a76c:	4770      	bx	lr

9002a76e <_ZNK8touchgfx13TextureMapper5getY3Ev>:
9002a76e:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
9002a772:	4770      	bx	lr

9002a774 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
9002a774:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
9002a778:	4770      	bx	lr

9002a77a <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
9002a77a:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
9002a77e:	4770      	bx	lr

9002a780 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
9002a780:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
9002a784:	4770      	bx	lr

9002a786 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
9002a786:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
9002a78a:	4770      	bx	lr

9002a78c <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
9002a78c:	b510      	push	{r4, lr}
9002a78e:	ed2d 8b04 	vpush	{d8-d9}
9002a792:	6803      	ldr	r3, [r0, #0]
9002a794:	4604      	mov	r4, r0
9002a796:	eeb0 8a40 	vmov.f32	s16, s0
9002a79a:	eef0 8a60 	vmov.f32	s17, s1
9002a79e:	699b      	ldr	r3, [r3, #24]
9002a7a0:	eeb0 9a41 	vmov.f32	s18, s2
9002a7a4:	4798      	blx	r3
9002a7a6:	6823      	ldr	r3, [r4, #0]
9002a7a8:	4620      	mov	r0, r4
9002a7aa:	eef0 0a68 	vmov.f32	s1, s17
9002a7ae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
9002a7b0:	eeb0 1a49 	vmov.f32	s2, s18
9002a7b4:	eeb0 0a48 	vmov.f32	s0, s16
9002a7b8:	4798      	blx	r3
9002a7ba:	6823      	ldr	r3, [r4, #0]
9002a7bc:	4620      	mov	r0, r4
9002a7be:	699b      	ldr	r3, [r3, #24]
9002a7c0:	ecbd 8b04 	vpop	{d8-d9}
9002a7c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a7c8:	4718      	bx	r3

9002a7ca <_ZN8touchgfx13TextureMapper11updateScaleEf>:
9002a7ca:	b510      	push	{r4, lr}
9002a7cc:	ed2d 8b02 	vpush	{d8}
9002a7d0:	6803      	ldr	r3, [r0, #0]
9002a7d2:	4604      	mov	r4, r0
9002a7d4:	eeb0 8a40 	vmov.f32	s16, s0
9002a7d8:	699b      	ldr	r3, [r3, #24]
9002a7da:	4798      	blx	r3
9002a7dc:	6823      	ldr	r3, [r4, #0]
9002a7de:	4620      	mov	r0, r4
9002a7e0:	eeb0 0a48 	vmov.f32	s0, s16
9002a7e4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
9002a7e8:	4798      	blx	r3
9002a7ea:	6823      	ldr	r3, [r4, #0]
9002a7ec:	4620      	mov	r0, r4
9002a7ee:	699b      	ldr	r3, [r3, #24]
9002a7f0:	ecbd 8b02 	vpop	{d8}
9002a7f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a7f8:	4718      	bx	r3

9002a7fa <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
9002a7fa:	2200      	movs	r2, #0
9002a7fc:	8002      	strh	r2, [r0, #0]
9002a7fe:	8042      	strh	r2, [r0, #2]
9002a800:	8082      	strh	r2, [r0, #4]
9002a802:	80c2      	strh	r2, [r0, #6]
9002a804:	4770      	bx	lr

9002a806 <_ZN8touchgfx13TextureMapperD1Ev>:
9002a806:	4770      	bx	lr

9002a808 <_ZN8touchgfx13TextureMapperD0Ev>:
9002a808:	b510      	push	{r4, lr}
9002a80a:	4604      	mov	r4, r0
9002a80c:	2190      	movs	r1, #144	; 0x90
9002a80e:	f000 fe02 	bl	9002b416 <_ZdlPvj>
9002a812:	4620      	mov	r0, r4
9002a814:	bd10      	pop	{r4, pc}
	...

9002a818 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
9002a818:	b538      	push	{r3, r4, r5, lr}
9002a81a:	2301      	movs	r3, #1
9002a81c:	2500      	movs	r5, #0
9002a81e:	4604      	mov	r4, r0
9002a820:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
9002a824:	4b1f      	ldr	r3, [pc, #124]	; (9002a8a4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
9002a826:	8085      	strh	r5, [r0, #4]
9002a828:	80c5      	strh	r5, [r0, #6]
9002a82a:	8105      	strh	r5, [r0, #8]
9002a82c:	8145      	strh	r5, [r0, #10]
9002a82e:	8185      	strh	r5, [r0, #12]
9002a830:	81c5      	strh	r5, [r0, #14]
9002a832:	8205      	strh	r5, [r0, #16]
9002a834:	8245      	strh	r5, [r0, #18]
9002a836:	61c5      	str	r5, [r0, #28]
9002a838:	8405      	strh	r5, [r0, #32]
9002a83a:	8445      	strh	r5, [r0, #34]	; 0x22
9002a83c:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
9002a840:	6003      	str	r3, [r0, #0]
9002a842:	e9c0 5505 	strd	r5, r5, [r0, #20]
9002a846:	880b      	ldrh	r3, [r1, #0]
9002a848:	84c3      	strh	r3, [r0, #38]	; 0x26
9002a84a:	23ff      	movs	r3, #255	; 0xff
9002a84c:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
9002a850:	f7ed fedb 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9002a854:	4b14      	ldr	r3, [pc, #80]	; (9002a8a8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
9002a856:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
9002a85a:	4914      	ldr	r1, [pc, #80]	; (9002a8ac <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
9002a85c:	6023      	str	r3, [r4, #0]
9002a85e:	2300      	movs	r3, #0
9002a860:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
9002a864:	4620      	mov	r0, r4
9002a866:	62e3      	str	r3, [r4, #44]	; 0x2c
9002a868:	6323      	str	r3, [r4, #48]	; 0x30
9002a86a:	6363      	str	r3, [r4, #52]	; 0x34
9002a86c:	63a3      	str	r3, [r4, #56]	; 0x38
9002a86e:	63e3      	str	r3, [r4, #60]	; 0x3c
9002a870:	6463      	str	r3, [r4, #68]	; 0x44
9002a872:	64a3      	str	r3, [r4, #72]	; 0x48
9002a874:	6523      	str	r3, [r4, #80]	; 0x50
9002a876:	6563      	str	r3, [r4, #84]	; 0x54
9002a878:	65e3      	str	r3, [r4, #92]	; 0x5c
9002a87a:	6623      	str	r3, [r4, #96]	; 0x60
9002a87c:	66a3      	str	r3, [r4, #104]	; 0x68
9002a87e:	66e3      	str	r3, [r4, #108]	; 0x6c
9002a880:	6763      	str	r3, [r4, #116]	; 0x74
9002a882:	67a3      	str	r3, [r4, #120]	; 0x78
9002a884:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
9002a888:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
9002a88c:	230c      	movs	r3, #12
9002a88e:	6422      	str	r2, [r4, #64]	; 0x40
9002a890:	64e1      	str	r1, [r4, #76]	; 0x4c
9002a892:	65a1      	str	r1, [r4, #88]	; 0x58
9002a894:	6662      	str	r2, [r4, #100]	; 0x64
9002a896:	6722      	str	r2, [r4, #112]	; 0x70
9002a898:	67e2      	str	r2, [r4, #124]	; 0x7c
9002a89a:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
9002a89e:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
9002a8a2:	bd38      	pop	{r3, r4, r5, pc}
9002a8a4:	90030a7c 	.word	0x90030a7c
9002a8a8:	90030f90 	.word	0x90030f90
9002a8ac:	447a0000 	.word	0x447a0000

9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
9002a8b0:	b570      	push	{r4, r5, r6, lr}
9002a8b2:	ed2d 8b04 	vpush	{d8-d9}
9002a8b6:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
9002a8ba:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
9002a8bc:	4604      	mov	r4, r0
9002a8be:	add0      	add	r5, sp, #832	; 0x340
9002a8c0:	f825 3d40 	strh.w	r3, [r5, #-64]!
9002a8c4:	4628      	mov	r0, r5
9002a8c6:	f7f3 f903 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002a8ca:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
9002a8cc:	4606      	mov	r6, r0
9002a8ce:	4628      	mov	r0, r5
9002a8d0:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
9002a8d4:	f7f3 f930 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
9002a8d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002a8dc:	1c72      	adds	r2, r6, #1
9002a8de:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
9002a8e2:	3001      	adds	r0, #1
9002a8e4:	ee07 2a90 	vmov	s15, r2
9002a8e8:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
9002a8ec:	ee76 5ac7 	vsub.f32	s11, s13, s14
9002a8f0:	ee06 0a90 	vmov	s13, r0
9002a8f4:	ee36 6a47 	vsub.f32	s12, s12, s14
9002a8f8:	6da3      	ldr	r3, [r4, #88]	; 0x58
9002a8fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9002a8fe:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
9002a902:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9002a906:	9312      	str	r3, [sp, #72]	; 0x48
9002a908:	9316      	str	r3, [sp, #88]	; 0x58
9002a90a:	a830      	add	r0, sp, #192	; 0xc0
9002a90c:	ee77 7a86 	vadd.f32	s15, s15, s12
9002a910:	931a      	str	r3, [sp, #104]	; 0x68
9002a912:	ee76 6aa5 	vadd.f32	s13, s13, s11
9002a916:	931e      	str	r3, [sp, #120]	; 0x78
9002a918:	2300      	movs	r3, #0
9002a91a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9002a91e:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
9002a922:	ae70      	add	r6, sp, #448	; 0x1c0
9002a924:	9320      	str	r3, [sp, #128]	; 0x80
9002a926:	9321      	str	r3, [sp, #132]	; 0x84
9002a928:	9322      	str	r3, [sp, #136]	; 0x88
9002a92a:	9324      	str	r3, [sp, #144]	; 0x90
9002a92c:	9325      	str	r3, [sp, #148]	; 0x94
9002a92e:	9326      	str	r3, [sp, #152]	; 0x98
9002a930:	9328      	str	r3, [sp, #160]	; 0xa0
9002a932:	9329      	str	r3, [sp, #164]	; 0xa4
9002a934:	932a      	str	r3, [sp, #168]	; 0xa8
9002a936:	932c      	str	r3, [sp, #176]	; 0xb0
9002a938:	932d      	str	r3, [sp, #180]	; 0xb4
9002a93a:	932e      	str	r3, [sp, #184]	; 0xb8
9002a93c:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
9002a940:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
9002a944:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
9002a948:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
9002a94c:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
9002a950:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
9002a954:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
9002a958:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
9002a95c:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
9002a960:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
9002a964:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
9002a968:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
9002a96c:	f000 fc2c 	bl	9002b1c8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a970:	eeb1 0a49 	vneg.f32	s0, s18
9002a974:	a830      	add	r0, sp, #192	; 0xc0
9002a976:	f000 fcf7 	bl	9002b368 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
9002a97a:	eeb1 0a68 	vneg.f32	s0, s17
9002a97e:	f000 fd01 	bl	9002b384 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
9002a982:	eeb1 0a48 	vneg.f32	s0, s16
9002a986:	f000 fd0c 	bl	9002b3a2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
9002a98a:	a840      	add	r0, sp, #256	; 0x100
9002a98c:	f000 fc1c 	bl	9002b1c8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a990:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
9002a994:	a840      	add	r0, sp, #256	; 0x100
9002a996:	f000 fc6b 	bl	9002b270 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
9002a99a:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
9002a99e:	f000 fc91 	bl	9002b2c4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
9002a9a2:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
9002a9a6:	f000 fcb6 	bl	9002b316 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
9002a9aa:	a850      	add	r0, sp, #320	; 0x140
9002a9ac:	f000 fc0c 	bl	9002b1c8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a9b0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
9002a9b4:	a850      	add	r0, sp, #320	; 0x140
9002a9b6:	f000 fd03 	bl	9002b3c0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
9002a9ba:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
9002a9be:	f000 fd0b 	bl	9002b3d8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
9002a9c2:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
9002a9c6:	f000 fd14 	bl	9002b3f2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
9002a9ca:	a860      	add	r0, sp, #384	; 0x180
9002a9cc:	f000 fbfc 	bl	9002b1c8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a9d0:	eeb0 0a49 	vmov.f32	s0, s18
9002a9d4:	a860      	add	r0, sp, #384	; 0x180
9002a9d6:	f000 fcc7 	bl	9002b368 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
9002a9da:	eeb0 0a68 	vmov.f32	s0, s17
9002a9de:	f000 fcd1 	bl	9002b384 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
9002a9e2:	eeb0 0a48 	vmov.f32	s0, s16
9002a9e6:	f000 fcdc 	bl	9002b3a2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
9002a9ea:	aa50      	add	r2, sp, #320	; 0x140
9002a9ec:	a960      	add	r1, sp, #384	; 0x180
9002a9ee:	a8b0      	add	r0, sp, #704	; 0x2c0
9002a9f0:	f000 fc02 	bl	9002b1f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002a9f4:	4628      	mov	r0, r5
9002a9f6:	aa40      	add	r2, sp, #256	; 0x100
9002a9f8:	a9b0      	add	r1, sp, #704	; 0x2c0
9002a9fa:	f000 fbfd 	bl	9002b1f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002a9fe:	4629      	mov	r1, r5
9002aa00:	aa30      	add	r2, sp, #192	; 0xc0
9002aa02:	a870      	add	r0, sp, #448	; 0x1c0
9002aa04:	f000 fbf8 	bl	9002b1f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002aa08:	a880      	add	r0, sp, #512	; 0x200
9002aa0a:	f000 fbdd 	bl	9002b1c8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002aa0e:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
9002aa12:	a880      	add	r0, sp, #512	; 0x200
9002aa14:	eeb1 0a40 	vneg.f32	s0, s0
9002aa18:	f000 fca6 	bl	9002b368 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
9002aa1c:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
9002aa20:	a880      	add	r0, sp, #512	; 0x200
9002aa22:	eeb1 0a40 	vneg.f32	s0, s0
9002aa26:	f000 fcad 	bl	9002b384 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
9002aa2a:	a890      	add	r0, sp, #576	; 0x240
9002aa2c:	f000 fbcc 	bl	9002b1c8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002aa30:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
9002aa34:	a890      	add	r0, sp, #576	; 0x240
9002aa36:	f000 fc0b 	bl	9002b250 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
9002aa3a:	a8a0      	add	r0, sp, #640	; 0x280
9002aa3c:	f000 fbc4 	bl	9002b1c8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002aa40:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
9002aa44:	a8a0      	add	r0, sp, #640	; 0x280
9002aa46:	f000 fc8f 	bl	9002b368 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
9002aa4a:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
9002aa4e:	f000 fc99 	bl	9002b384 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
9002aa52:	aa90      	add	r2, sp, #576	; 0x240
9002aa54:	a9a0      	add	r1, sp, #640	; 0x280
9002aa56:	a8b0      	add	r0, sp, #704	; 0x2c0
9002aa58:	f000 fbce 	bl	9002b1f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002aa5c:	4628      	mov	r0, r5
9002aa5e:	aa80      	add	r2, sp, #512	; 0x200
9002aa60:	a9b0      	add	r1, sp, #704	; 0x2c0
9002aa62:	f000 fbc9 	bl	9002b1f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002aa66:	4629      	mov	r1, r5
9002aa68:	466d      	mov	r5, sp
9002aa6a:	aa70      	add	r2, sp, #448	; 0x1c0
9002aa6c:	4668      	mov	r0, sp
9002aa6e:	f000 fbc3 	bl	9002b1f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002aa72:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9002aa74:	c60f      	stmia	r6!, {r0, r1, r2, r3}
9002aa76:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9002aa78:	c60f      	stmia	r6!, {r0, r1, r2, r3}
9002aa7a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9002aa7c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
9002aa7e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
9002aa82:	2500      	movs	r5, #0
9002aa84:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
9002aa88:	0129      	lsls	r1, r5, #4
9002aa8a:	ab20      	add	r3, sp, #128	; 0x80
9002aa8c:	3501      	adds	r5, #1
9002aa8e:	a870      	add	r0, sp, #448	; 0x1c0
9002aa90:	185e      	adds	r6, r3, r1
9002aa92:	ab10      	add	r3, sp, #64	; 0x40
9002aa94:	4419      	add	r1, r3
9002aa96:	f000 fb67 	bl	9002b168 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
9002aa9a:	2d04      	cmp	r5, #4
9002aa9c:	ed86 0a00 	vstr	s0, [r6]
9002aaa0:	edc6 0a01 	vstr	s1, [r6, #4]
9002aaa4:	ed86 1a02 	vstr	s2, [r6, #8]
9002aaa8:	edc6 1a03 	vstr	s3, [r6, #12]
9002aaac:	d1ec      	bne.n	9002aa88 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
9002aaae:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
9002aab2:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
9002aab6:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
9002aaba:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aabe:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
9002aac2:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aac6:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
9002aaca:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aace:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
9002aad2:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aad6:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
9002aada:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
9002aade:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
9002aae2:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aae6:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
9002aaea:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aaee:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
9002aaf2:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aaf6:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
9002aafa:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aafe:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
9002ab02:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
9002ab06:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
9002ab0a:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002ab0e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
9002ab12:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002ab16:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
9002ab1a:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002ab1e:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
9002ab22:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002ab26:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
9002ab2a:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
9002ab2e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
9002ab32:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002ab36:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
9002ab3a:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002ab3e:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
9002ab42:	ee67 7aa6 	vmul.f32	s15, s15, s13
9002ab46:	eec7 6a87 	vdiv.f32	s13, s15, s14
9002ab4a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
9002ab4e:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
9002ab52:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
9002ab56:	ecbd 8b04 	vpop	{d8-d9}
9002ab5a:	bd70      	pop	{r4, r5, r6, pc}

9002ab5c <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
9002ab5c:	b510      	push	{r4, lr}
9002ab5e:	4604      	mov	r4, r0
9002ab60:	f7ed fd53 	bl	9001860a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9002ab64:	4620      	mov	r0, r4
9002ab66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002ab6a:	f7ff bea1 	b.w	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab6e <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
9002ab6e:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
9002ab72:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
9002ab76:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
9002ab7a:	f7ff be99 	b.w	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab7e <_ZN8touchgfx13TextureMapper8setScaleEf>:
9002ab7e:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
9002ab82:	f7ff be95 	b.w	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab86 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
9002ab86:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
9002ab8a:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
9002ab8e:	f7ff be8f 	b.w	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab92 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
9002ab92:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9002ab96:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002ab9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ab9e:	fe30 0a27 	vselgt.f32	s0, s0, s15
9002aba2:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
9002aba6:	f7ff be83 	b.w	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002abaa <_ZN8touchgfx13TextureMapper9setCameraEff>:
9002abaa:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
9002abae:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
9002abb2:	f7ff be7d 	b.w	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002abb6 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
9002abb6:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
9002abba:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
9002abbe:	f7ff be77 	b.w	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002abc2 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
9002abc2:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
9002abc6:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
9002abca:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
9002abce:	f7ff be6f 	b.w	9002a8b0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002abd2 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
9002abd2:	b510      	push	{r4, lr}
9002abd4:	edd1 5a1a 	vldr	s11, [r1, #104]	; 0x68
9002abd8:	edd1 7a17 	vldr	s15, [r1, #92]	; 0x5c
9002abdc:	ed91 6a1d 	vldr	s12, [r1, #116]	; 0x74
9002abe0:	eef4 7ae5 	vcmpe.f32	s15, s11
9002abe4:	edd1 6a20 	vldr	s13, [r1, #128]	; 0x80
9002abe8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
9002abec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002abf0:	bf54      	ite	pl
9002abf2:	eeb0 7a65 	vmovpl.f32	s14, s11
9002abf6:	eeb0 7a67 	vmovmi.f32	s14, s15
9002abfa:	eeb4 6ac7 	vcmpe.f32	s12, s14
9002abfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac02:	fe37 7a06 	vselgt.f32	s14, s14, s12
9002ac06:	eef4 6ac7 	vcmpe.f32	s13, s14
9002ac0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac0e:	fe37 7a26 	vselgt.f32	s14, s14, s13
9002ac12:	febb 7a47 	vrintm.f32	s14, s14
9002ac16:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9002ac1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac1e:	eef4 7ae5 	vcmpe.f32	s15, s11
9002ac22:	bf56      	itet	pl
9002ac24:	eebd 7ac7 	vcvtpl.s32.f32	s14, s14
9002ac28:	2200      	movmi	r2, #0
9002ac2a:	ee17 3a10 	vmovpl	r3, s14
9002ac2e:	ee07 4a10 	vmov	s14, r4
9002ac32:	bf58      	it	pl
9002ac34:	b21a      	sxthpl	r2, r3
9002ac36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac3a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9002ac3e:	8002      	strh	r2, [r0, #0]
9002ac40:	fe77 7aa5 	vselgt.f32	s15, s15, s11
9002ac44:	eeb4 6ae7 	vcmpe.f32	s12, s15
9002ac48:	edd1 5a1b 	vldr	s11, [r1, #108]	; 0x6c
9002ac4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac50:	bf58      	it	pl
9002ac52:	eef0 7a46 	vmovpl.f32	s15, s12
9002ac56:	ed91 6a1e 	vldr	s12, [r1, #120]	; 0x78
9002ac5a:	eef4 6ae7 	vcmpe.f32	s13, s15
9002ac5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac62:	bf58      	it	pl
9002ac64:	eef0 7a66 	vmovpl.f32	s15, s13
9002ac68:	edd1 6a21 	vldr	s13, [r1, #132]	; 0x84
9002ac6c:	fefa 7a67 	vrintp.f32	s15, s15
9002ac70:	eef4 7ac7 	vcmpe.f32	s15, s14
9002ac74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac78:	bfdc      	itt	le
9002ac7a:	eefd 7ae7 	vcvtle.s32.f32	s15, s15
9002ac7e:	ee17 3a90 	vmovle	r3, s15
9002ac82:	edd1 7a18 	vldr	s15, [r1, #96]	; 0x60
9002ac86:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
9002ac8a:	eef4 7ae5 	vcmpe.f32	s15, s11
9002ac8e:	bfd8      	it	le
9002ac90:	b21c      	sxthle	r4, r3
9002ac92:	1aa2      	subs	r2, r4, r2
9002ac94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac98:	8082      	strh	r2, [r0, #4]
9002ac9a:	bf54      	ite	pl
9002ac9c:	eeb0 7a65 	vmovpl.f32	s14, s11
9002aca0:	eeb0 7a67 	vmovmi.f32	s14, s15
9002aca4:	eeb4 6ac7 	vcmpe.f32	s12, s14
9002aca8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002acac:	fe37 7a06 	vselgt.f32	s14, s14, s12
9002acb0:	eef4 6ac7 	vcmpe.f32	s13, s14
9002acb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002acb8:	fe37 7a26 	vselgt.f32	s14, s14, s13
9002acbc:	febb 7a47 	vrintm.f32	s14, s14
9002acc0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9002acc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002acc8:	eef4 7ae5 	vcmpe.f32	s15, s11
9002accc:	bf56      	itet	pl
9002acce:	eebd 7ac7 	vcvtpl.s32.f32	s14, s14
9002acd2:	2300      	movmi	r3, #0
9002acd4:	ee17 3a10 	vmovpl	r3, s14
9002acd8:	ee07 1a10 	vmov	s14, r1
9002acdc:	bf58      	it	pl
9002acde:	b21b      	sxthpl	r3, r3
9002ace0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ace4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9002ace8:	8043      	strh	r3, [r0, #2]
9002acea:	fe77 7aa5 	vselgt.f32	s15, s15, s11
9002acee:	eeb4 6ae7 	vcmpe.f32	s12, s15
9002acf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002acf6:	bf58      	it	pl
9002acf8:	eef0 7a46 	vmovpl.f32	s15, s12
9002acfc:	eef4 6ae7 	vcmpe.f32	s13, s15
9002ad00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ad04:	bf58      	it	pl
9002ad06:	eef0 7a66 	vmovpl.f32	s15, s13
9002ad0a:	fefa 7a67 	vrintp.f32	s15, s15
9002ad0e:	eef4 7ac7 	vcmpe.f32	s15, s14
9002ad12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ad16:	bfde      	ittt	le
9002ad18:	eefd 7ae7 	vcvtle.s32.f32	s15, s15
9002ad1c:	ee17 1a90 	vmovle	r1, s15
9002ad20:	b209      	sxthle	r1, r1
9002ad22:	1acb      	subs	r3, r1, r3
9002ad24:	80c3      	strh	r3, [r0, #6]
9002ad26:	bd10      	pop	{r4, pc}

9002ad28 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
9002ad28:	b513      	push	{r0, r1, r4, lr}
9002ad2a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9002ad2e:	4604      	mov	r4, r0
9002ad30:	b143      	cbz	r3, 9002ad44 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
9002ad32:	4601      	mov	r1, r0
9002ad34:	4668      	mov	r0, sp
9002ad36:	f7ff ff4c 	bl	9002abd2 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
9002ad3a:	6823      	ldr	r3, [r4, #0]
9002ad3c:	4669      	mov	r1, sp
9002ad3e:	4620      	mov	r0, r4
9002ad40:	691b      	ldr	r3, [r3, #16]
9002ad42:	4798      	blx	r3
9002ad44:	b002      	add	sp, #8
9002ad46:	bd10      	pop	{r4, pc}

9002ad48 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
9002ad48:	4603      	mov	r3, r0
9002ad4a:	3026      	adds	r0, #38	; 0x26
9002ad4c:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
9002ad50:	b90b      	cbnz	r3, 9002ad56 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
9002ad52:	f7f1 ba05 	b.w	9001c160 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
9002ad56:	f7f1 ba13 	b.w	9001c180 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

9002ad5c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
9002ad5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002ad60:	4604      	mov	r4, r0
9002ad62:	469b      	mov	fp, r3
9002ad64:	ed2d 8b04 	vpush	{d8-d9}
9002ad68:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
9002ad6c:	b0b3      	sub	sp, #204	; 0xcc
9002ad6e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9002ad72:	f9b1 6000 	ldrsh.w	r6, [r1]
9002ad76:	8888      	ldrh	r0, [r1, #4]
9002ad78:	9206      	str	r2, [sp, #24]
9002ad7a:	2200      	movs	r2, #0
9002ad7c:	4430      	add	r0, r6
9002ad7e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
9002ad82:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
9002ad86:	b280      	uxth	r0, r0
9002ad88:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
9002ad8c:	9f43      	ldr	r7, [sp, #268]	; 0x10c
9002ad8e:	fa0f fe80 	sxth.w	lr, r0
9002ad92:	9211      	str	r2, [sp, #68]	; 0x44
9002ad94:	4596      	cmp	lr, r2
9002ad96:	f340 8129 	ble.w	9002afec <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
9002ad9a:	45b4      	cmp	ip, r6
9002ad9c:	f340 8126 	ble.w	9002afec <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
9002ada0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9002ada4:	88ca      	ldrh	r2, [r1, #6]
9002ada6:	442a      	add	r2, r5
9002ada8:	b292      	uxth	r2, r2
9002adaa:	b211      	sxth	r1, r2
9002adac:	2900      	cmp	r1, #0
9002adae:	f340 811d 	ble.w	9002afec <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
9002adb2:	42ab      	cmp	r3, r5
9002adb4:	f340 811a 	ble.w	9002afec <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
9002adb8:	45f4      	cmp	ip, lr
9002adba:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
9002adbe:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002adc2:	bfb8      	it	lt
9002adc4:	fa1f f08c 	uxthlt.w	r0, ip
9002adc8:	428b      	cmp	r3, r1
9002adca:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
9002adce:	bfb8      	it	lt
9002add0:	b29a      	uxthlt	r2, r3
9002add2:	1b80      	subs	r0, r0, r6
9002add4:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
9002add8:	1b52      	subs	r2, r2, r5
9002adda:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
9002adde:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
9002ade2:	ab11      	add	r3, sp, #68	; 0x44
9002ade4:	ad13      	add	r5, sp, #76	; 0x4c
9002ade6:	6822      	ldr	r2, [r4, #0]
9002ade8:	1d26      	adds	r6, r4, #4
9002adea:	9307      	str	r3, [sp, #28]
9002adec:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9002adee:	e893 0003 	ldmia.w	r3, {r0, r1}
9002adf2:	e885 0003 	stmia.w	r5, {r0, r1}
9002adf6:	4629      	mov	r1, r5
9002adf8:	4620      	mov	r0, r4
9002adfa:	4790      	blx	r2
9002adfc:	4621      	mov	r1, r4
9002adfe:	a815      	add	r0, sp, #84	; 0x54
9002ae00:	f7f1 f90a 	bl	9001c018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9002ae04:	a815      	add	r0, sp, #84	; 0x54
9002ae06:	f7ef fe3f 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002ae0a:	9b07      	ldr	r3, [sp, #28]
9002ae0c:	4631      	mov	r1, r6
9002ae0e:	4618      	mov	r0, r3
9002ae10:	f7ef fe7e 	bl	9001ab10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002ae14:	4628      	mov	r0, r5
9002ae16:	f104 0526 	add.w	r5, r4, #38	; 0x26
9002ae1a:	f7ef fe35 	bl	9001aa88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002ae1e:	4628      	mov	r0, r5
9002ae20:	f7f2 ff42 	bl	9001dca8 <_ZNK8touchgfx6Bitmap7getDataEv>
9002ae24:	9007      	str	r0, [sp, #28]
9002ae26:	2800      	cmp	r0, #0
9002ae28:	f000 80db 	beq.w	9002afe2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
9002ae2c:	f8db 2000 	ldr.w	r2, [fp]
9002ae30:	a90d      	add	r1, sp, #52	; 0x34
9002ae32:	a809      	add	r0, sp, #36	; 0x24
9002ae34:	9209      	str	r2, [sp, #36]	; 0x24
9002ae36:	f8db 2004 	ldr.w	r2, [fp, #4]
9002ae3a:	920a      	str	r2, [sp, #40]	; 0x28
9002ae3c:	f8db 2008 	ldr.w	r2, [fp, #8]
9002ae40:	920b      	str	r2, [sp, #44]	; 0x2c
9002ae42:	f8db 200c 	ldr.w	r2, [fp, #12]
9002ae46:	920c      	str	r2, [sp, #48]	; 0x30
9002ae48:	f8da 2000 	ldr.w	r2, [sl]
9002ae4c:	920d      	str	r2, [sp, #52]	; 0x34
9002ae4e:	f8da 2004 	ldr.w	r2, [sl, #4]
9002ae52:	920e      	str	r2, [sp, #56]	; 0x38
9002ae54:	f8da 2008 	ldr.w	r2, [sl, #8]
9002ae58:	920f      	str	r2, [sp, #60]	; 0x3c
9002ae5a:	f8da 200c 	ldr.w	r2, [sl, #12]
9002ae5e:	9210      	str	r2, [sp, #64]	; 0x40
9002ae60:	4632      	mov	r2, r6
9002ae62:	f7ef fe39 	bl	9001aad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9002ae66:	4632      	mov	r2, r6
9002ae68:	a90e      	add	r1, sp, #56	; 0x38
9002ae6a:	a80a      	add	r0, sp, #40	; 0x28
9002ae6c:	f7ef fe34 	bl	9001aad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9002ae70:	4632      	mov	r2, r6
9002ae72:	a90f      	add	r1, sp, #60	; 0x3c
9002ae74:	a80b      	add	r0, sp, #44	; 0x2c
9002ae76:	f7ef fe2f 	bl	9001aad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9002ae7a:	4632      	mov	r2, r6
9002ae7c:	a910      	add	r1, sp, #64	; 0x40
9002ae7e:	a80c      	add	r0, sp, #48	; 0x30
9002ae80:	f7ef fe2a 	bl	9001aad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9002ae84:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
9002ae88:	edd7 4a00 	vldr	s9, [r7]
9002ae8c:	eef0 6a67 	vmov.f32	s13, s15
9002ae90:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
9002ae94:	edd7 5a01 	vldr	s11, [r7, #4]
9002ae98:	eeb0 7a67 	vmov.f32	s14, s15
9002ae9c:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
9002aea0:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
9002aea4:	ed98 4a00 	vldr	s8, [r8]
9002aea8:	eeb0 6a67 	vmov.f32	s12, s15
9002aeac:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
9002aeb0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
9002aeb4:	ed98 5a01 	vldr	s10, [r8, #4]
9002aeb8:	ed99 9a00 	vldr	s18, [r9]
9002aebc:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9002aec0:	ed99 8a01 	vldr	s16, [r9, #4]
9002aec4:	edd9 8a02 	vldr	s17, [r9, #8]
9002aec8:	f8d9 e00c 	ldr.w	lr, [r9, #12]
9002aecc:	ee16 6a10 	vmov	r6, s12
9002aed0:	eeb0 6a67 	vmov.f32	s12, s15
9002aed4:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
9002aed8:	f8d8 c00c 	ldr.w	ip, [r8, #12]
9002aedc:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9002aee0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
9002aee4:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
9002aee8:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
9002aeec:	ee16 0a10 	vmov	r0, s12
9002aef0:	eeb0 6a67 	vmov.f32	s12, s15
9002aef4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9002aef8:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
9002aefc:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9002af00:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
9002af04:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
9002af08:	f8d7 a008 	ldr.w	sl, [r7, #8]
9002af0c:	ee16 1a10 	vmov	r1, s12
9002af10:	eeb0 6a67 	vmov.f32	s12, s15
9002af14:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
9002af18:	f8d8 b008 	ldr.w	fp, [r8, #8]
9002af1c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9002af20:	68ff      	ldr	r7, [r7, #12]
9002af22:	9624      	str	r6, [sp, #144]	; 0x90
9002af24:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9002af28:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
9002af2c:	ee16 2a10 	vmov	r2, s12
9002af30:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
9002af34:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
9002af38:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9002af3c:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
9002af40:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
9002af44:	4628      	mov	r0, r5
9002af46:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
9002af4a:	9b06      	ldr	r3, [sp, #24]
9002af4c:	922d      	str	r2, [sp, #180]	; 0xb4
9002af4e:	4a29      	ldr	r2, [pc, #164]	; (9002aff4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
9002af50:	9317      	str	r3, [sp, #92]	; 0x5c
9002af52:	8812      	ldrh	r2, [r2, #0]
9002af54:	9b07      	ldr	r3, [sp, #28]
9002af56:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
9002af5a:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
9002af5e:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
9002af62:	9218      	str	r2, [sp, #96]	; 0x60
9002af64:	9319      	str	r3, [sp, #100]	; 0x64
9002af66:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
9002af6a:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
9002af6e:	9731      	str	r7, [sp, #196]	; 0xc4
9002af70:	f7f2 feca 	bl	9001dd08 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9002af74:	901a      	str	r0, [sp, #104]	; 0x68
9002af76:	4628      	mov	r0, r5
9002af78:	f7f2 fdaa 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002af7c:	901b      	str	r0, [sp, #108]	; 0x6c
9002af7e:	4628      	mov	r0, r5
9002af80:	f7f2 fdda 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
9002af84:	901c      	str	r0, [sp, #112]	; 0x70
9002af86:	4628      	mov	r0, r5
9002af88:	f7f2 fda2 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002af8c:	eeb4 9a48 	vcmp.f32	s18, s16
9002af90:	901d      	str	r0, [sp, #116]	; 0x74
9002af92:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
9002af96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002af9a:	d107      	bne.n	9002afac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
9002af9c:	eeb4 8a68 	vcmp.f32	s16, s17
9002afa0:	f64f 73ff 	movw	r3, #65535	; 0xffff
9002afa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002afa8:	bf08      	it	eq
9002afaa:	461e      	moveq	r6, r3
9002afac:	4b12      	ldr	r3, [pc, #72]	; (9002aff8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
9002afae:	681b      	ldr	r3, [r3, #0]
9002afb0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
9002afb4:	b10a      	cbz	r2, 9002afba <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
9002afb6:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
9002afb8:	b905      	cbnz	r5, 9002afbc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
9002afba:	689d      	ldr	r5, [r3, #8]
9002afbc:	682b      	ldr	r3, [r5, #0]
9002afbe:	4620      	mov	r0, r4
9002afc0:	6c1f      	ldr	r7, [r3, #64]	; 0x40
9002afc2:	f7ff fec1 	bl	9002ad48 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
9002afc6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9002afca:	aa1e      	add	r2, sp, #120	; 0x78
9002afcc:	9604      	str	r6, [sp, #16]
9002afce:	a917      	add	r1, sp, #92	; 0x5c
9002afd0:	e9cd 0302 	strd	r0, r3, [sp, #8]
9002afd4:	ab13      	add	r3, sp, #76	; 0x4c
9002afd6:	4628      	mov	r0, r5
9002afd8:	9301      	str	r3, [sp, #4]
9002afda:	ab15      	add	r3, sp, #84	; 0x54
9002afdc:	9300      	str	r3, [sp, #0]
9002afde:	ab19      	add	r3, sp, #100	; 0x64
9002afe0:	47b8      	blx	r7
9002afe2:	b033      	add	sp, #204	; 0xcc
9002afe4:	ecbd 8b04 	vpop	{d8-d9}
9002afe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002afec:	2300      	movs	r3, #0
9002afee:	9312      	str	r3, [sp, #72]	; 0x48
9002aff0:	e6f7      	b.n	9002ade2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
9002aff2:	bf00      	nop
9002aff4:	24028e26 	.word	0x24028e26
9002aff8:	24028e2c 	.word	0x24028e2c

9002affc <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
9002affc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b000:	ed2d 8b02 	vpush	{d8}
9002b004:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9002b008:	b098      	sub	sp, #96	; 0x60
9002b00a:	4604      	mov	r4, r0
9002b00c:	4688      	mov	r8, r1
9002b00e:	2b00      	cmp	r3, #0
9002b010:	d077      	beq.n	9002b102 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
9002b012:	f100 0526 	add.w	r5, r0, #38	; 0x26
9002b016:	4628      	mov	r0, r5
9002b018:	f7f2 fd5a 	bl	9001dad0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002b01c:	ee07 0a90 	vmov	s15, r0
9002b020:	4628      	mov	r0, r5
9002b022:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
9002b026:	f7f2 fd87 	bl	9001db38 <_ZNK8touchgfx6Bitmap9getHeightEv>
9002b02a:	4b4e      	ldr	r3, [pc, #312]	; (9002b164 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
9002b02c:	ee07 0a90 	vmov	s15, r0
9002b030:	781b      	ldrb	r3, [r3, #0]
9002b032:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9002b036:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
9002b03a:	2b01      	cmp	r3, #1
9002b03c:	d066      	beq.n	9002b10c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
9002b03e:	eeb0 6a47 	vmov.f32	s12, s14
9002b042:	ee17 3a10 	vmov	r3, s14
9002b046:	eeb0 4a48 	vmov.f32	s8, s16
9002b04a:	eeb0 7a48 	vmov.f32	s14, s16
9002b04e:	eef0 4a67 	vmov.f32	s9, s15
9002b052:	eeb0 8a67 	vmov.f32	s16, s15
9002b056:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
9002b05a:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
9002b05e:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
9002b062:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
9002b066:	ee73 1a65 	vsub.f32	s3, s6, s11
9002b06a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
9002b06e:	ee72 6ac5 	vsub.f32	s13, s5, s10
9002b072:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
9002b076:	ee32 1a45 	vsub.f32	s2, s4, s10
9002b07a:	6f25      	ldr	r5, [r4, #112]	; 0x70
9002b07c:	6e66      	ldr	r6, [r4, #100]	; 0x64
9002b07e:	ee66 6ae1 	vnmul.f32	s13, s13, s3
9002b082:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
9002b084:	ee73 1ae5 	vsub.f32	s3, s7, s11
9002b088:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
9002b08c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
9002b090:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9002b094:	eee1 6a21 	vfma.f32	s13, s2, s3
9002b098:	eef5 6ac0 	vcmpe.f32	s13, #0.0
9002b09c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b0a0:	dd3d      	ble.n	9002b11e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
9002b0a2:	ed8d 5a04 	vstr	s10, [sp, #16]
9002b0a6:	ed8d 2a05 	vstr	s4, [sp, #20]
9002b0aa:	edcd 2a06 	vstr	s5, [sp, #24]
9002b0ae:	f8cd c01c 	str.w	ip, [sp, #28]
9002b0b2:	edcd 5a08 	vstr	s11, [sp, #32]
9002b0b6:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
9002b0ba:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
9002b0be:	970b      	str	r7, [sp, #44]	; 0x2c
9002b0c0:	960c      	str	r6, [sp, #48]	; 0x30
9002b0c2:	950d      	str	r5, [sp, #52]	; 0x34
9002b0c4:	920e      	str	r2, [sp, #56]	; 0x38
9002b0c6:	900f      	str	r0, [sp, #60]	; 0x3c
9002b0c8:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
9002b0cc:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
9002b0d0:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
9002b0d4:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
9002b0d8:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
9002b0dc:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
9002b0e0:	9316      	str	r3, [sp, #88]	; 0x58
9002b0e2:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
9002b0e6:	ab14      	add	r3, sp, #80	; 0x50
9002b0e8:	2200      	movs	r2, #0
9002b0ea:	4641      	mov	r1, r8
9002b0ec:	4620      	mov	r0, r4
9002b0ee:	9303      	str	r3, [sp, #12]
9002b0f0:	ab10      	add	r3, sp, #64	; 0x40
9002b0f2:	9302      	str	r3, [sp, #8]
9002b0f4:	ab0c      	add	r3, sp, #48	; 0x30
9002b0f6:	9301      	str	r3, [sp, #4]
9002b0f8:	ab08      	add	r3, sp, #32
9002b0fa:	9300      	str	r3, [sp, #0]
9002b0fc:	ab04      	add	r3, sp, #16
9002b0fe:	f7ff fe2d 	bl	9002ad5c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
9002b102:	b018      	add	sp, #96	; 0x60
9002b104:	ecbd 8b02 	vpop	{d8}
9002b108:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b10c:	eeb0 6a48 	vmov.f32	s12, s16
9002b110:	ee17 3a90 	vmov	r3, s15
9002b114:	eef0 4a47 	vmov.f32	s9, s14
9002b118:	eeb0 4a67 	vmov.f32	s8, s15
9002b11c:	e79b      	b.n	9002b056 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
9002b11e:	ed8d 5a05 	vstr	s10, [sp, #20]
9002b122:	ed8d 2a04 	vstr	s4, [sp, #16]
9002b126:	f8cd c018 	str.w	ip, [sp, #24]
9002b12a:	edcd 2a07 	vstr	s5, [sp, #28]
9002b12e:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
9002b132:	ed8d 3a08 	vstr	s6, [sp, #32]
9002b136:	970a      	str	r7, [sp, #40]	; 0x28
9002b138:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
9002b13c:	960d      	str	r6, [sp, #52]	; 0x34
9002b13e:	950c      	str	r5, [sp, #48]	; 0x30
9002b140:	900e      	str	r0, [sp, #56]	; 0x38
9002b142:	920f      	str	r2, [sp, #60]	; 0x3c
9002b144:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
9002b148:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
9002b14c:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
9002b150:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
9002b154:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
9002b158:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
9002b15c:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
9002b160:	9317      	str	r3, [sp, #92]	; 0x5c
9002b162:	e7c0      	b.n	9002b0e6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
9002b164:	24028e24 	.word	0x24028e24

9002b168 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
9002b168:	b5f0      	push	{r4, r5, r6, r7, lr}
9002b16a:	2300      	movs	r3, #0
9002b16c:	b08d      	sub	sp, #52	; 0x34
9002b16e:	f100 0640 	add.w	r6, r0, #64	; 0x40
9002b172:	f101 0710 	add.w	r7, r1, #16
9002b176:	9304      	str	r3, [sp, #16]
9002b178:	aa04      	add	r2, sp, #16
9002b17a:	9305      	str	r3, [sp, #20]
9002b17c:	9306      	str	r3, [sp, #24]
9002b17e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
9002b182:	9307      	str	r3, [sp, #28]
9002b184:	4613      	mov	r3, r2
9002b186:	460c      	mov	r4, r1
9002b188:	4605      	mov	r5, r0
9002b18a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 9002b1c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
9002b18e:	ecb4 7a01 	vldmia	r4!, {s14}
9002b192:	ecf5 6a01 	vldmia	r5!, {s13}
9002b196:	42bc      	cmp	r4, r7
9002b198:	eee6 7a87 	vfma.f32	s15, s13, s14
9002b19c:	d1f7      	bne.n	9002b18e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
9002b19e:	3010      	adds	r0, #16
9002b1a0:	ece2 7a01 	vstmia	r2!, {s15}
9002b1a4:	42b0      	cmp	r0, r6
9002b1a6:	d1ee      	bne.n	9002b186 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
9002b1a8:	ac0c      	add	r4, sp, #48	; 0x30
9002b1aa:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9002b1ac:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
9002b1b0:	ed9d 0a08 	vldr	s0, [sp, #32]
9002b1b4:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
9002b1b8:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
9002b1bc:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
9002b1c0:	b00d      	add	sp, #52	; 0x34
9002b1c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002b1c4:	00000000 	.word	0x00000000

9002b1c8 <_ZN8touchgfx9Matrix4x4C1Ev>:
9002b1c8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9002b1cc:	2300      	movs	r3, #0
9002b1ce:	ed9f 7a09 	vldr	s14, [pc, #36]	; 9002b1f4 <_ZN8touchgfx9Matrix4x4C1Ev+0x2c>
9002b1d2:	eb00 1103 	add.w	r1, r0, r3, lsl #4
9002b1d6:	2200      	movs	r2, #0
9002b1d8:	4293      	cmp	r3, r2
9002b1da:	f102 0201 	add.w	r2, r2, #1
9002b1de:	fe47 6a87 	vseleq.f32	s13, s15, s14
9002b1e2:	2a04      	cmp	r2, #4
9002b1e4:	ece1 6a01 	vstmia	r1!, {s13}
9002b1e8:	d1f6      	bne.n	9002b1d8 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
9002b1ea:	3301      	adds	r3, #1
9002b1ec:	2b04      	cmp	r3, #4
9002b1ee:	d1f0      	bne.n	9002b1d2 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
9002b1f0:	4770      	bx	lr
9002b1f2:	bf00      	nop
9002b1f4:	00000000 	.word	0x00000000

9002b1f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
9002b1f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b1fc:	460c      	mov	r4, r1
9002b1fe:	4605      	mov	r5, r0
9002b200:	4690      	mov	r8, r2
9002b202:	f7ff ffe1 	bl	9002b1c8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002b206:	4628      	mov	r0, r5
9002b208:	4621      	mov	r1, r4
9002b20a:	f104 0c40 	add.w	ip, r4, #64	; 0x40
9002b20e:	2300      	movs	r3, #0
9002b210:	eb08 0603 	add.w	r6, r8, r3
9002b214:	460f      	mov	r7, r1
9002b216:	2400      	movs	r4, #0
9002b218:	eddf 7a0c 	vldr	s15, [pc, #48]	; 9002b24c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x54>
9002b21c:	4632      	mov	r2, r6
9002b21e:	3401      	adds	r4, #1
9002b220:	ecf7 6a01 	vldmia	r7!, {s13}
9002b224:	3610      	adds	r6, #16
9002b226:	ed92 7a00 	vldr	s14, [r2]
9002b22a:	2c04      	cmp	r4, #4
9002b22c:	eee6 7a87 	vfma.f32	s15, s13, s14
9002b230:	d1f4      	bne.n	9002b21c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
9002b232:	18c2      	adds	r2, r0, r3
9002b234:	3304      	adds	r3, #4
9002b236:	2b10      	cmp	r3, #16
9002b238:	edc2 7a00 	vstr	s15, [r2]
9002b23c:	d1e8      	bne.n	9002b210 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
9002b23e:	3110      	adds	r1, #16
9002b240:	3010      	adds	r0, #16
9002b242:	4561      	cmp	r1, ip
9002b244:	d1e3      	bne.n	9002b20e <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
9002b246:	4628      	mov	r0, r5
9002b248:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b24c:	00000000 	.word	0x00000000

9002b250 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
9002b250:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9002b254:	f100 0320 	add.w	r3, r0, #32
9002b258:	3030      	adds	r0, #48	; 0x30
9002b25a:	ee87 0a80 	vdiv.f32	s0, s15, s0
9002b25e:	ecf3 7a01 	vldmia	r3!, {s15}
9002b262:	4283      	cmp	r3, r0
9002b264:	ee60 7a27 	vmul.f32	s15, s0, s15
9002b268:	edc3 7a03 	vstr	s15, [r3, #12]
9002b26c:	d1f7      	bne.n	9002b25e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
9002b26e:	4770      	bx	lr

9002b270 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
9002b270:	b510      	push	{r4, lr}
9002b272:	ed2d 8b02 	vpush	{d8}
9002b276:	eef0 8a40 	vmov.f32	s17, s0
9002b27a:	4604      	mov	r4, r0
9002b27c:	f000 fa08 	bl	9002b690 <sinf>
9002b280:	eeb0 8a40 	vmov.f32	s16, s0
9002b284:	eeb0 0a68 	vmov.f32	s0, s17
9002b288:	f000 f91a 	bl	9002b4c0 <cosf>
9002b28c:	eeb1 6a48 	vneg.f32	s12, s16
9002b290:	f104 0310 	add.w	r3, r4, #16
9002b294:	f104 0220 	add.w	r2, r4, #32
9002b298:	edd3 7a04 	vldr	s15, [r3, #16]
9002b29c:	edd3 6a00 	vldr	s13, [r3]
9002b2a0:	ee26 7a27 	vmul.f32	s14, s12, s15
9002b2a4:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b2a8:	eea6 7a80 	vfma.f32	s14, s13, s0
9002b2ac:	eee6 7a88 	vfma.f32	s15, s13, s16
9002b2b0:	eca3 7a01 	vstmia	r3!, {s14}
9002b2b4:	429a      	cmp	r2, r3
9002b2b6:	edc3 7a03 	vstr	s15, [r3, #12]
9002b2ba:	d1ed      	bne.n	9002b298 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
9002b2bc:	4620      	mov	r0, r4
9002b2be:	ecbd 8b02 	vpop	{d8}
9002b2c2:	bd10      	pop	{r4, pc}

9002b2c4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
9002b2c4:	b510      	push	{r4, lr}
9002b2c6:	ed2d 8b02 	vpush	{d8}
9002b2ca:	eef0 8a40 	vmov.f32	s17, s0
9002b2ce:	4604      	mov	r4, r0
9002b2d0:	f000 f9de 	bl	9002b690 <sinf>
9002b2d4:	eeb0 8a40 	vmov.f32	s16, s0
9002b2d8:	eeb0 0a68 	vmov.f32	s0, s17
9002b2dc:	f000 f8f0 	bl	9002b4c0 <cosf>
9002b2e0:	eeb1 6a48 	vneg.f32	s12, s16
9002b2e4:	4623      	mov	r3, r4
9002b2e6:	f104 0210 	add.w	r2, r4, #16
9002b2ea:	edd3 7a08 	vldr	s15, [r3, #32]
9002b2ee:	edd3 6a00 	vldr	s13, [r3]
9002b2f2:	ee27 7a88 	vmul.f32	s14, s15, s16
9002b2f6:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b2fa:	eea6 7a80 	vfma.f32	s14, s13, s0
9002b2fe:	eee6 7a26 	vfma.f32	s15, s12, s13
9002b302:	eca3 7a01 	vstmia	r3!, {s14}
9002b306:	429a      	cmp	r2, r3
9002b308:	edc3 7a07 	vstr	s15, [r3, #28]
9002b30c:	d1ed      	bne.n	9002b2ea <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
9002b30e:	4620      	mov	r0, r4
9002b310:	ecbd 8b02 	vpop	{d8}
9002b314:	bd10      	pop	{r4, pc}

9002b316 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
9002b316:	b510      	push	{r4, lr}
9002b318:	ed2d 8b02 	vpush	{d8}
9002b31c:	eef0 8a40 	vmov.f32	s17, s0
9002b320:	4604      	mov	r4, r0
9002b322:	f000 f9b5 	bl	9002b690 <sinf>
9002b326:	eeb0 8a40 	vmov.f32	s16, s0
9002b32a:	eeb0 0a68 	vmov.f32	s0, s17
9002b32e:	f000 f8c7 	bl	9002b4c0 <cosf>
9002b332:	eeb1 6a48 	vneg.f32	s12, s16
9002b336:	4623      	mov	r3, r4
9002b338:	f104 0210 	add.w	r2, r4, #16
9002b33c:	edd3 7a04 	vldr	s15, [r3, #16]
9002b340:	edd3 6a00 	vldr	s13, [r3]
9002b344:	ee26 7a27 	vmul.f32	s14, s12, s15
9002b348:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b34c:	eea6 7a80 	vfma.f32	s14, s13, s0
9002b350:	eee6 7a88 	vfma.f32	s15, s13, s16
9002b354:	eca3 7a01 	vstmia	r3!, {s14}
9002b358:	429a      	cmp	r2, r3
9002b35a:	edc3 7a03 	vstr	s15, [r3, #12]
9002b35e:	d1ed      	bne.n	9002b33c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
9002b360:	4620      	mov	r0, r4
9002b362:	ecbd 8b02 	vpop	{d8}
9002b366:	bd10      	pop	{r4, pc}

9002b368 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
9002b368:	4603      	mov	r3, r0
9002b36a:	f100 0210 	add.w	r2, r0, #16
9002b36e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
9002b372:	edd3 7a00 	vldr	s15, [r3]
9002b376:	eee7 7a00 	vfma.f32	s15, s14, s0
9002b37a:	ece3 7a01 	vstmia	r3!, {s15}
9002b37e:	4293      	cmp	r3, r2
9002b380:	d1f5      	bne.n	9002b36e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
9002b382:	4770      	bx	lr

9002b384 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
9002b384:	f100 0310 	add.w	r3, r0, #16
9002b388:	f100 0220 	add.w	r2, r0, #32
9002b38c:	ed93 7a08 	vldr	s14, [r3, #32]
9002b390:	edd3 7a00 	vldr	s15, [r3]
9002b394:	eee7 7a00 	vfma.f32	s15, s14, s0
9002b398:	ece3 7a01 	vstmia	r3!, {s15}
9002b39c:	4293      	cmp	r3, r2
9002b39e:	d1f5      	bne.n	9002b38c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
9002b3a0:	4770      	bx	lr

9002b3a2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
9002b3a2:	f100 0320 	add.w	r3, r0, #32
9002b3a6:	f100 0230 	add.w	r2, r0, #48	; 0x30
9002b3aa:	ed93 7a04 	vldr	s14, [r3, #16]
9002b3ae:	edd3 7a00 	vldr	s15, [r3]
9002b3b2:	eee7 7a00 	vfma.f32	s15, s14, s0
9002b3b6:	ece3 7a01 	vstmia	r3!, {s15}
9002b3ba:	4293      	cmp	r3, r2
9002b3bc:	d1f5      	bne.n	9002b3aa <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
9002b3be:	4770      	bx	lr

9002b3c0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
9002b3c0:	4603      	mov	r3, r0
9002b3c2:	f100 0210 	add.w	r2, r0, #16
9002b3c6:	edd3 7a00 	vldr	s15, [r3]
9002b3ca:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b3ce:	ece3 7a01 	vstmia	r3!, {s15}
9002b3d2:	4293      	cmp	r3, r2
9002b3d4:	d1f7      	bne.n	9002b3c6 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
9002b3d6:	4770      	bx	lr

9002b3d8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
9002b3d8:	f100 0310 	add.w	r3, r0, #16
9002b3dc:	f100 0220 	add.w	r2, r0, #32
9002b3e0:	edd3 7a00 	vldr	s15, [r3]
9002b3e4:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b3e8:	ece3 7a01 	vstmia	r3!, {s15}
9002b3ec:	4293      	cmp	r3, r2
9002b3ee:	d1f7      	bne.n	9002b3e0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
9002b3f0:	4770      	bx	lr

9002b3f2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
9002b3f2:	f100 0320 	add.w	r3, r0, #32
9002b3f6:	f100 0230 	add.w	r2, r0, #48	; 0x30
9002b3fa:	edd3 7a00 	vldr	s15, [r3]
9002b3fe:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b402:	ece3 7a01 	vstmia	r3!, {s15}
9002b406:	4293      	cmp	r3, r2
9002b408:	d1f7      	bne.n	9002b3fa <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
9002b40a:	4770      	bx	lr

9002b40c <__aeabi_atexit>:
9002b40c:	460b      	mov	r3, r1
9002b40e:	4601      	mov	r1, r0
9002b410:	4618      	mov	r0, r3
9002b412:	f000 ba01 	b.w	9002b818 <__cxa_atexit>

9002b416 <_ZdlPvj>:
9002b416:	f000 b812 	b.w	9002b43e <_ZdlPv>

9002b41a <__cxa_guard_acquire>:
9002b41a:	6803      	ldr	r3, [r0, #0]
9002b41c:	07db      	lsls	r3, r3, #31
9002b41e:	d406      	bmi.n	9002b42e <__cxa_guard_acquire+0x14>
9002b420:	7843      	ldrb	r3, [r0, #1]
9002b422:	b103      	cbz	r3, 9002b426 <__cxa_guard_acquire+0xc>
9002b424:	deff      	udf	#255	; 0xff
9002b426:	2301      	movs	r3, #1
9002b428:	7043      	strb	r3, [r0, #1]
9002b42a:	4618      	mov	r0, r3
9002b42c:	4770      	bx	lr
9002b42e:	2000      	movs	r0, #0
9002b430:	4770      	bx	lr

9002b432 <__cxa_guard_release>:
9002b432:	2301      	movs	r3, #1
9002b434:	6003      	str	r3, [r0, #0]
9002b436:	4770      	bx	lr

9002b438 <__cxa_pure_virtual>:
9002b438:	b508      	push	{r3, lr}
9002b43a:	f000 f80f 	bl	9002b45c <_ZSt9terminatev>

9002b43e <_ZdlPv>:
9002b43e:	f000 bb37 	b.w	9002bab0 <free>

9002b442 <_ZN10__cxxabiv111__terminateEPFvvE>:
9002b442:	b508      	push	{r3, lr}
9002b444:	4780      	blx	r0
9002b446:	f000 f9bb 	bl	9002b7c0 <abort>
	...

9002b44c <_ZSt13get_terminatev>:
9002b44c:	4b02      	ldr	r3, [pc, #8]	; (9002b458 <_ZSt13get_terminatev+0xc>)
9002b44e:	6818      	ldr	r0, [r3, #0]
9002b450:	f3bf 8f5b 	dmb	ish
9002b454:	4770      	bx	lr
9002b456:	bf00      	nop
9002b458:	240000dc 	.word	0x240000dc

9002b45c <_ZSt9terminatev>:
9002b45c:	b508      	push	{r3, lr}
9002b45e:	f7ff fff5 	bl	9002b44c <_ZSt13get_terminatev>
9002b462:	f7ff ffee 	bl	9002b442 <_ZN10__cxxabiv111__terminateEPFvvE>

9002b466 <sinf_poly>:
9002b466:	07cb      	lsls	r3, r1, #31
9002b468:	d412      	bmi.n	9002b490 <sinf_poly+0x2a>
9002b46a:	ee21 5b00 	vmul.f64	d5, d1, d0
9002b46e:	ed90 6b1a 	vldr	d6, [r0, #104]	; 0x68
9002b472:	ed90 7b18 	vldr	d7, [r0, #96]	; 0x60
9002b476:	eea6 7b01 	vfma.f64	d7, d6, d1
9002b47a:	ed90 6b16 	vldr	d6, [r0, #88]	; 0x58
9002b47e:	ee21 1b05 	vmul.f64	d1, d1, d5
9002b482:	eea6 0b05 	vfma.f64	d0, d6, d5
9002b486:	eea7 0b01 	vfma.f64	d0, d7, d1
9002b48a:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002b48e:	4770      	bx	lr
9002b490:	ed90 6b14 	vldr	d6, [r0, #80]	; 0x50
9002b494:	ee21 5b01 	vmul.f64	d5, d1, d1
9002b498:	ed90 7b12 	vldr	d7, [r0, #72]	; 0x48
9002b49c:	ed90 0b0c 	vldr	d0, [r0, #48]	; 0x30
9002b4a0:	eea1 7b06 	vfma.f64	d7, d1, d6
9002b4a4:	ed90 6b0e 	vldr	d6, [r0, #56]	; 0x38
9002b4a8:	eea1 0b06 	vfma.f64	d0, d1, d6
9002b4ac:	ed90 6b10 	vldr	d6, [r0, #64]	; 0x40
9002b4b0:	ee21 1b05 	vmul.f64	d1, d1, d5
9002b4b4:	eea5 0b06 	vfma.f64	d0, d5, d6
9002b4b8:	e7e5      	b.n	9002b486 <sinf_poly+0x20>
9002b4ba:	0000      	movs	r0, r0
9002b4bc:	0000      	movs	r0, r0
	...

9002b4c0 <cosf>:
9002b4c0:	b538      	push	{r3, r4, r5, lr}
9002b4c2:	ee10 4a10 	vmov	r4, s0
9002b4c6:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002b4ca:	f5b3 7f7d 	cmp.w	r3, #1012	; 0x3f4
9002b4ce:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
9002b4d2:	d21f      	bcs.n	9002b514 <cosf+0x54>
9002b4d4:	ee27 0b07 	vmul.f64	d0, d7, d7
9002b4d8:	f5b3 7f66 	cmp.w	r3, #920	; 0x398
9002b4dc:	f0c0 8088 	bcc.w	9002b5f0 <cosf+0x130>
9002b4e0:	ee20 4b00 	vmul.f64	d4, d0, d0
9002b4e4:	4b46      	ldr	r3, [pc, #280]	; (9002b600 <cosf+0x140>)
9002b4e6:	ed93 5b14 	vldr	d5, [r3, #80]	; 0x50
9002b4ea:	ed93 6b12 	vldr	d6, [r3, #72]	; 0x48
9002b4ee:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
9002b4f2:	eea0 6b05 	vfma.f64	d6, d0, d5
9002b4f6:	ed93 5b0e 	vldr	d5, [r3, #56]	; 0x38
9002b4fa:	eea0 7b05 	vfma.f64	d7, d0, d5
9002b4fe:	ed93 5b10 	vldr	d5, [r3, #64]	; 0x40
9002b502:	ee20 0b04 	vmul.f64	d0, d0, d4
9002b506:	eea4 7b05 	vfma.f64	d7, d4, d5
9002b50a:	eea6 7b00 	vfma.f64	d7, d6, d0
9002b50e:	eeb7 0bc7 	vcvt.f32.f64	s0, d7
9002b512:	bd38      	pop	{r3, r4, r5, pc}
9002b514:	f240 422e 	movw	r2, #1070	; 0x42e
9002b518:	4293      	cmp	r3, r2
9002b51a:	d82b      	bhi.n	9002b574 <cosf+0xb4>
9002b51c:	4b38      	ldr	r3, [pc, #224]	; (9002b600 <cosf+0x140>)
9002b51e:	ed93 6b08 	vldr	d6, [r3, #32]
9002b522:	ee27 6b06 	vmul.f64	d6, d7, d6
9002b526:	eefd 6bc6 	vcvt.s32.f64	s13, d6
9002b52a:	f103 0070 	add.w	r0, r3, #112	; 0x70
9002b52e:	ee16 1a90 	vmov	r1, s13
9002b532:	f501 0100 	add.w	r1, r1, #8388608	; 0x800000
9002b536:	1609      	asrs	r1, r1, #24
9002b538:	ee06 1a90 	vmov	s13, r1
9002b53c:	eeb8 5be6 	vcvt.f64.s32	d5, s13
9002b540:	ed93 6b0a 	vldr	d6, [r3, #40]	; 0x28
9002b544:	f001 0203 	and.w	r2, r1, #3
9002b548:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b54c:	eea5 7b46 	vfms.f64	d7, d5, d6
9002b550:	eeb0 0b47 	vmov.f64	d0, d7
9002b554:	ed92 7b00 	vldr	d7, [r2]
9002b558:	ee20 1b00 	vmul.f64	d1, d0, d0
9002b55c:	f011 0f02 	tst.w	r1, #2
9002b560:	bf08      	it	eq
9002b562:	4618      	moveq	r0, r3
9002b564:	f081 0101 	eor.w	r1, r1, #1
9002b568:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002b56c:	ee20 0b07 	vmul.f64	d0, d0, d7
9002b570:	f7ff bf79 	b.w	9002b466 <sinf_poly>
9002b574:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
9002b578:	d236      	bcs.n	9002b5e8 <cosf+0x128>
9002b57a:	4a22      	ldr	r2, [pc, #136]	; (9002b604 <cosf+0x144>)
9002b57c:	f3c4 6183 	ubfx	r1, r4, #26, #4
9002b580:	eb02 0581 	add.w	r5, r2, r1, lsl #2
9002b584:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002b588:	f3c4 50c2 	ubfx	r0, r4, #23, #3
9002b58c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
9002b590:	4083      	lsls	r3, r0
9002b592:	6a28      	ldr	r0, [r5, #32]
9002b594:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
9002b598:	fba3 1000 	umull	r1, r0, r3, r0
9002b59c:	6929      	ldr	r1, [r5, #16]
9002b59e:	435a      	muls	r2, r3
9002b5a0:	fbe3 0201 	umlal	r0, r2, r3, r1
9002b5a4:	f102 5100 	add.w	r1, r2, #536870912	; 0x20000000
9002b5a8:	0f8d      	lsrs	r5, r1, #30
9002b5aa:	f001 4140 	and.w	r1, r1, #3221225472	; 0xc0000000
9002b5ae:	1a51      	subs	r1, r2, r1
9002b5b0:	f7d5 f874 	bl	9000069c <__aeabi_l2d>
9002b5b4:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002b5b8:	4b11      	ldr	r3, [pc, #68]	; (9002b600 <cosf+0x140>)
9002b5ba:	ed9f 7b0f 	vldr	d7, [pc, #60]	; 9002b5f8 <cosf+0x138>
9002b5be:	ec41 0b16 	vmov	d6, r0, r1
9002b5c2:	f004 0203 	and.w	r2, r4, #3
9002b5c6:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b5ca:	f014 0f02 	tst.w	r4, #2
9002b5ce:	f103 0070 	add.w	r0, r3, #112	; 0x70
9002b5d2:	ee26 7b07 	vmul.f64	d7, d6, d7
9002b5d6:	ed92 0b00 	vldr	d0, [r2]
9002b5da:	ee27 1b07 	vmul.f64	d1, d7, d7
9002b5de:	f085 0101 	eor.w	r1, r5, #1
9002b5e2:	bf08      	it	eq
9002b5e4:	4618      	moveq	r0, r3
9002b5e6:	e7bf      	b.n	9002b568 <cosf+0xa8>
9002b5e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002b5ec:	f000 b817 	b.w	9002b61e <__math_invalidf>
9002b5f0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
9002b5f4:	e78d      	b.n	9002b512 <cosf+0x52>
9002b5f6:	bf00      	nop
9002b5f8:	54442d18 	.word	0x54442d18
9002b5fc:	3c1921fb 	.word	0x3c1921fb
9002b600:	90031100 	.word	0x90031100
9002b604:	9003109c 	.word	0x9003109c

9002b608 <with_errnof>:
9002b608:	b513      	push	{r0, r1, r4, lr}
9002b60a:	4604      	mov	r4, r0
9002b60c:	ed8d 0a01 	vstr	s0, [sp, #4]
9002b610:	f000 f910 	bl	9002b834 <__errno>
9002b614:	ed9d 0a01 	vldr	s0, [sp, #4]
9002b618:	6004      	str	r4, [r0, #0]
9002b61a:	b002      	add	sp, #8
9002b61c:	bd10      	pop	{r4, pc}

9002b61e <__math_invalidf>:
9002b61e:	eef0 7a40 	vmov.f32	s15, s0
9002b622:	ee30 7a40 	vsub.f32	s14, s0, s0
9002b626:	eef4 7a67 	vcmp.f32	s15, s15
9002b62a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b62e:	ee87 0a07 	vdiv.f32	s0, s14, s14
9002b632:	d602      	bvs.n	9002b63a <__math_invalidf+0x1c>
9002b634:	2021      	movs	r0, #33	; 0x21
9002b636:	f7ff bfe7 	b.w	9002b608 <with_errnof>
9002b63a:	4770      	bx	lr

9002b63c <sinf_poly>:
9002b63c:	07cb      	lsls	r3, r1, #31
9002b63e:	d412      	bmi.n	9002b666 <sinf_poly+0x2a>
9002b640:	ee21 5b00 	vmul.f64	d5, d1, d0
9002b644:	ed90 6b1a 	vldr	d6, [r0, #104]	; 0x68
9002b648:	ed90 7b18 	vldr	d7, [r0, #96]	; 0x60
9002b64c:	eea6 7b01 	vfma.f64	d7, d6, d1
9002b650:	ed90 6b16 	vldr	d6, [r0, #88]	; 0x58
9002b654:	ee21 1b05 	vmul.f64	d1, d1, d5
9002b658:	eea6 0b05 	vfma.f64	d0, d6, d5
9002b65c:	eea7 0b01 	vfma.f64	d0, d7, d1
9002b660:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002b664:	4770      	bx	lr
9002b666:	ed90 6b14 	vldr	d6, [r0, #80]	; 0x50
9002b66a:	ee21 5b01 	vmul.f64	d5, d1, d1
9002b66e:	ed90 7b12 	vldr	d7, [r0, #72]	; 0x48
9002b672:	ed90 0b0c 	vldr	d0, [r0, #48]	; 0x30
9002b676:	eea1 7b06 	vfma.f64	d7, d1, d6
9002b67a:	ed90 6b0e 	vldr	d6, [r0, #56]	; 0x38
9002b67e:	eea1 0b06 	vfma.f64	d0, d1, d6
9002b682:	ed90 6b10 	vldr	d6, [r0, #64]	; 0x40
9002b686:	ee21 1b05 	vmul.f64	d1, d1, d5
9002b68a:	eea5 0b06 	vfma.f64	d0, d5, d6
9002b68e:	e7e5      	b.n	9002b65c <sinf_poly+0x20>

9002b690 <sinf>:
9002b690:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002b692:	ee10 4a10 	vmov	r4, s0
9002b696:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002b69a:	f5b3 7f7d 	cmp.w	r3, #1012	; 0x3f4
9002b69e:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002b6a2:	eef0 7a40 	vmov.f32	s15, s0
9002b6a6:	ea4f 5214 	mov.w	r2, r4, lsr #20
9002b6aa:	d218      	bcs.n	9002b6de <sinf+0x4e>
9002b6ac:	ee26 1b06 	vmul.f64	d1, d6, d6
9002b6b0:	f5b3 7f66 	cmp.w	r3, #920	; 0x398
9002b6b4:	d20a      	bcs.n	9002b6cc <sinf+0x3c>
9002b6b6:	f412 6fff 	tst.w	r2, #2040	; 0x7f8
9002b6ba:	d103      	bne.n	9002b6c4 <sinf+0x34>
9002b6bc:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
9002b6c0:	ed8d 1a01 	vstr	s2, [sp, #4]
9002b6c4:	eeb0 0a67 	vmov.f32	s0, s15
9002b6c8:	b003      	add	sp, #12
9002b6ca:	bd30      	pop	{r4, r5, pc}
9002b6cc:	483a      	ldr	r0, [pc, #232]	; (9002b7b8 <sinf+0x128>)
9002b6ce:	eeb0 0b46 	vmov.f64	d0, d6
9002b6d2:	2100      	movs	r1, #0
9002b6d4:	b003      	add	sp, #12
9002b6d6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002b6da:	f7ff bfaf 	b.w	9002b63c <sinf_poly>
9002b6de:	f240 422e 	movw	r2, #1070	; 0x42e
9002b6e2:	4293      	cmp	r3, r2
9002b6e4:	d824      	bhi.n	9002b730 <sinf+0xa0>
9002b6e6:	4b34      	ldr	r3, [pc, #208]	; (9002b7b8 <sinf+0x128>)
9002b6e8:	ed93 7b08 	vldr	d7, [r3, #32]
9002b6ec:	ee26 7b07 	vmul.f64	d7, d6, d7
9002b6f0:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002b6f4:	f103 0070 	add.w	r0, r3, #112	; 0x70
9002b6f8:	ee17 1a90 	vmov	r1, s15
9002b6fc:	f501 0100 	add.w	r1, r1, #8388608	; 0x800000
9002b700:	1609      	asrs	r1, r1, #24
9002b702:	ee07 1a90 	vmov	s15, r1
9002b706:	f001 0203 	and.w	r2, r1, #3
9002b70a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b70e:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002b712:	ed92 0b00 	vldr	d0, [r2]
9002b716:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
9002b71a:	f011 0f02 	tst.w	r1, #2
9002b71e:	eea5 6b47 	vfms.f64	d6, d5, d7
9002b722:	bf08      	it	eq
9002b724:	4618      	moveq	r0, r3
9002b726:	ee26 1b06 	vmul.f64	d1, d6, d6
9002b72a:	ee20 0b06 	vmul.f64	d0, d0, d6
9002b72e:	e7d1      	b.n	9002b6d4 <sinf+0x44>
9002b730:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
9002b734:	d237      	bcs.n	9002b7a6 <sinf+0x116>
9002b736:	4a21      	ldr	r2, [pc, #132]	; (9002b7bc <sinf+0x12c>)
9002b738:	f3c4 6183 	ubfx	r1, r4, #26, #4
9002b73c:	eb02 0581 	add.w	r5, r2, r1, lsl #2
9002b740:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002b744:	f3c4 50c2 	ubfx	r0, r4, #23, #3
9002b748:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
9002b74c:	4083      	lsls	r3, r0
9002b74e:	6a28      	ldr	r0, [r5, #32]
9002b750:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
9002b754:	fba3 1000 	umull	r1, r0, r3, r0
9002b758:	6929      	ldr	r1, [r5, #16]
9002b75a:	435a      	muls	r2, r3
9002b75c:	fbe3 0201 	umlal	r0, r2, r3, r1
9002b760:	f102 5100 	add.w	r1, r2, #536870912	; 0x20000000
9002b764:	0f8d      	lsrs	r5, r1, #30
9002b766:	f001 4140 	and.w	r1, r1, #3221225472	; 0xc0000000
9002b76a:	1a51      	subs	r1, r2, r1
9002b76c:	f7d4 ff96 	bl	9000069c <__aeabi_l2d>
9002b770:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002b774:	4b10      	ldr	r3, [pc, #64]	; (9002b7b8 <sinf+0x128>)
9002b776:	f004 0203 	and.w	r2, r4, #3
9002b77a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b77e:	ed9f 7b0c 	vldr	d7, [pc, #48]	; 9002b7b0 <sinf+0x120>
9002b782:	ed92 0b00 	vldr	d0, [r2]
9002b786:	ec41 0b16 	vmov	d6, r0, r1
9002b78a:	f014 0f02 	tst.w	r4, #2
9002b78e:	ee26 7b07 	vmul.f64	d7, d6, d7
9002b792:	f103 0070 	add.w	r0, r3, #112	; 0x70
9002b796:	4629      	mov	r1, r5
9002b798:	bf08      	it	eq
9002b79a:	4618      	moveq	r0, r3
9002b79c:	ee27 1b07 	vmul.f64	d1, d7, d7
9002b7a0:	ee20 0b07 	vmul.f64	d0, d0, d7
9002b7a4:	e796      	b.n	9002b6d4 <sinf+0x44>
9002b7a6:	b003      	add	sp, #12
9002b7a8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002b7ac:	f7ff bf37 	b.w	9002b61e <__math_invalidf>
9002b7b0:	54442d18 	.word	0x54442d18
9002b7b4:	3c1921fb 	.word	0x3c1921fb
9002b7b8:	90031100 	.word	0x90031100
9002b7bc:	9003109c 	.word	0x9003109c

9002b7c0 <abort>:
9002b7c0:	b508      	push	{r3, lr}
9002b7c2:	2006      	movs	r0, #6
9002b7c4:	f000 fe90 	bl	9002c4e8 <raise>
9002b7c8:	2001      	movs	r0, #1
9002b7ca:	f7d9 fe83 	bl	900054d4 <_exit>
	...

9002b7d0 <__assert_func>:
9002b7d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002b7d2:	4614      	mov	r4, r2
9002b7d4:	461a      	mov	r2, r3
9002b7d6:	4b09      	ldr	r3, [pc, #36]	; (9002b7fc <__assert_func+0x2c>)
9002b7d8:	681b      	ldr	r3, [r3, #0]
9002b7da:	4605      	mov	r5, r0
9002b7dc:	68d8      	ldr	r0, [r3, #12]
9002b7de:	b14c      	cbz	r4, 9002b7f4 <__assert_func+0x24>
9002b7e0:	4b07      	ldr	r3, [pc, #28]	; (9002b800 <__assert_func+0x30>)
9002b7e2:	9100      	str	r1, [sp, #0]
9002b7e4:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002b7e8:	4906      	ldr	r1, [pc, #24]	; (9002b804 <__assert_func+0x34>)
9002b7ea:	462b      	mov	r3, r5
9002b7ec:	f000 f8fe 	bl	9002b9ec <fiprintf>
9002b7f0:	f7ff ffe6 	bl	9002b7c0 <abort>
9002b7f4:	4b04      	ldr	r3, [pc, #16]	; (9002b808 <__assert_func+0x38>)
9002b7f6:	461c      	mov	r4, r3
9002b7f8:	e7f3      	b.n	9002b7e2 <__assert_func+0x12>
9002b7fa:	bf00      	nop
9002b7fc:	240000e0 	.word	0x240000e0
9002b800:	900311e0 	.word	0x900311e0
9002b804:	900311ed 	.word	0x900311ed
9002b808:	9003121b 	.word	0x9003121b

9002b80c <atexit>:
9002b80c:	2300      	movs	r3, #0
9002b80e:	4601      	mov	r1, r0
9002b810:	461a      	mov	r2, r3
9002b812:	4618      	mov	r0, r3
9002b814:	f000 bfae 	b.w	9002c774 <__register_exitproc>

9002b818 <__cxa_atexit>:
9002b818:	b510      	push	{r4, lr}
9002b81a:	4c05      	ldr	r4, [pc, #20]	; (9002b830 <__cxa_atexit+0x18>)
9002b81c:	4613      	mov	r3, r2
9002b81e:	b12c      	cbz	r4, 9002b82c <__cxa_atexit+0x14>
9002b820:	460a      	mov	r2, r1
9002b822:	4601      	mov	r1, r0
9002b824:	2002      	movs	r0, #2
9002b826:	f000 ffa5 	bl	9002c774 <__register_exitproc>
9002b82a:	bd10      	pop	{r4, pc}
9002b82c:	4620      	mov	r0, r4
9002b82e:	e7fc      	b.n	9002b82a <__cxa_atexit+0x12>
9002b830:	9002c775 	.word	0x9002c775

9002b834 <__errno>:
9002b834:	4b01      	ldr	r3, [pc, #4]	; (9002b83c <__errno+0x8>)
9002b836:	6818      	ldr	r0, [r3, #0]
9002b838:	4770      	bx	lr
9002b83a:	bf00      	nop
9002b83c:	240000e0 	.word	0x240000e0

9002b840 <std>:
9002b840:	2300      	movs	r3, #0
9002b842:	b510      	push	{r4, lr}
9002b844:	4604      	mov	r4, r0
9002b846:	e9c0 3300 	strd	r3, r3, [r0]
9002b84a:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002b84e:	6083      	str	r3, [r0, #8]
9002b850:	8181      	strh	r1, [r0, #12]
9002b852:	6643      	str	r3, [r0, #100]	; 0x64
9002b854:	81c2      	strh	r2, [r0, #14]
9002b856:	6183      	str	r3, [r0, #24]
9002b858:	4619      	mov	r1, r3
9002b85a:	2208      	movs	r2, #8
9002b85c:	305c      	adds	r0, #92	; 0x5c
9002b85e:	f000 f93d 	bl	9002badc <memset>
9002b862:	4b05      	ldr	r3, [pc, #20]	; (9002b878 <std+0x38>)
9002b864:	6263      	str	r3, [r4, #36]	; 0x24
9002b866:	4b05      	ldr	r3, [pc, #20]	; (9002b87c <std+0x3c>)
9002b868:	62a3      	str	r3, [r4, #40]	; 0x28
9002b86a:	4b05      	ldr	r3, [pc, #20]	; (9002b880 <std+0x40>)
9002b86c:	62e3      	str	r3, [r4, #44]	; 0x2c
9002b86e:	4b05      	ldr	r3, [pc, #20]	; (9002b884 <std+0x44>)
9002b870:	6224      	str	r4, [r4, #32]
9002b872:	6323      	str	r3, [r4, #48]	; 0x30
9002b874:	bd10      	pop	{r4, pc}
9002b876:	bf00      	nop
9002b878:	9002c521 	.word	0x9002c521
9002b87c:	9002c543 	.word	0x9002c543
9002b880:	9002c57b 	.word	0x9002c57b
9002b884:	9002c59f 	.word	0x9002c59f

9002b888 <_cleanup_r>:
9002b888:	4901      	ldr	r1, [pc, #4]	; (9002b890 <_cleanup_r+0x8>)
9002b88a:	f000 b8c1 	b.w	9002ba10 <_fwalk_reent>
9002b88e:	bf00      	nop
9002b890:	9002c965 	.word	0x9002c965

9002b894 <__sfmoreglue>:
9002b894:	b570      	push	{r4, r5, r6, lr}
9002b896:	2268      	movs	r2, #104	; 0x68
9002b898:	1e4d      	subs	r5, r1, #1
9002b89a:	4355      	muls	r5, r2
9002b89c:	460e      	mov	r6, r1
9002b89e:	f105 0174 	add.w	r1, r5, #116	; 0x74
9002b8a2:	f000 f98f 	bl	9002bbc4 <_malloc_r>
9002b8a6:	4604      	mov	r4, r0
9002b8a8:	b140      	cbz	r0, 9002b8bc <__sfmoreglue+0x28>
9002b8aa:	2100      	movs	r1, #0
9002b8ac:	e9c0 1600 	strd	r1, r6, [r0]
9002b8b0:	300c      	adds	r0, #12
9002b8b2:	60a0      	str	r0, [r4, #8]
9002b8b4:	f105 0268 	add.w	r2, r5, #104	; 0x68
9002b8b8:	f000 f910 	bl	9002badc <memset>
9002b8bc:	4620      	mov	r0, r4
9002b8be:	bd70      	pop	{r4, r5, r6, pc}

9002b8c0 <__sfp_lock_acquire>:
9002b8c0:	4801      	ldr	r0, [pc, #4]	; (9002b8c8 <__sfp_lock_acquire+0x8>)
9002b8c2:	f000 b8ea 	b.w	9002ba9a <__retarget_lock_acquire_recursive>
9002b8c6:	bf00      	nop
9002b8c8:	24028f32 	.word	0x24028f32

9002b8cc <__sfp_lock_release>:
9002b8cc:	4801      	ldr	r0, [pc, #4]	; (9002b8d4 <__sfp_lock_release+0x8>)
9002b8ce:	f000 b8e6 	b.w	9002ba9e <__retarget_lock_release_recursive>
9002b8d2:	bf00      	nop
9002b8d4:	24028f32 	.word	0x24028f32

9002b8d8 <__sinit_lock_acquire>:
9002b8d8:	4801      	ldr	r0, [pc, #4]	; (9002b8e0 <__sinit_lock_acquire+0x8>)
9002b8da:	f000 b8de 	b.w	9002ba9a <__retarget_lock_acquire_recursive>
9002b8de:	bf00      	nop
9002b8e0:	24028f33 	.word	0x24028f33

9002b8e4 <__sinit_lock_release>:
9002b8e4:	4801      	ldr	r0, [pc, #4]	; (9002b8ec <__sinit_lock_release+0x8>)
9002b8e6:	f000 b8da 	b.w	9002ba9e <__retarget_lock_release_recursive>
9002b8ea:	bf00      	nop
9002b8ec:	24028f33 	.word	0x24028f33

9002b8f0 <__sinit>:
9002b8f0:	b510      	push	{r4, lr}
9002b8f2:	4604      	mov	r4, r0
9002b8f4:	f7ff fff0 	bl	9002b8d8 <__sinit_lock_acquire>
9002b8f8:	69a3      	ldr	r3, [r4, #24]
9002b8fa:	b11b      	cbz	r3, 9002b904 <__sinit+0x14>
9002b8fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002b900:	f7ff bff0 	b.w	9002b8e4 <__sinit_lock_release>
9002b904:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
9002b908:	6523      	str	r3, [r4, #80]	; 0x50
9002b90a:	4b13      	ldr	r3, [pc, #76]	; (9002b958 <__sinit+0x68>)
9002b90c:	4a13      	ldr	r2, [pc, #76]	; (9002b95c <__sinit+0x6c>)
9002b90e:	681b      	ldr	r3, [r3, #0]
9002b910:	62a2      	str	r2, [r4, #40]	; 0x28
9002b912:	42a3      	cmp	r3, r4
9002b914:	bf04      	itt	eq
9002b916:	2301      	moveq	r3, #1
9002b918:	61a3      	streq	r3, [r4, #24]
9002b91a:	4620      	mov	r0, r4
9002b91c:	f000 f820 	bl	9002b960 <__sfp>
9002b920:	6060      	str	r0, [r4, #4]
9002b922:	4620      	mov	r0, r4
9002b924:	f000 f81c 	bl	9002b960 <__sfp>
9002b928:	60a0      	str	r0, [r4, #8]
9002b92a:	4620      	mov	r0, r4
9002b92c:	f000 f818 	bl	9002b960 <__sfp>
9002b930:	2200      	movs	r2, #0
9002b932:	60e0      	str	r0, [r4, #12]
9002b934:	2104      	movs	r1, #4
9002b936:	6860      	ldr	r0, [r4, #4]
9002b938:	f7ff ff82 	bl	9002b840 <std>
9002b93c:	68a0      	ldr	r0, [r4, #8]
9002b93e:	2201      	movs	r2, #1
9002b940:	2109      	movs	r1, #9
9002b942:	f7ff ff7d 	bl	9002b840 <std>
9002b946:	68e0      	ldr	r0, [r4, #12]
9002b948:	2202      	movs	r2, #2
9002b94a:	2112      	movs	r1, #18
9002b94c:	f7ff ff78 	bl	9002b840 <std>
9002b950:	2301      	movs	r3, #1
9002b952:	61a3      	str	r3, [r4, #24]
9002b954:	e7d2      	b.n	9002b8fc <__sinit+0xc>
9002b956:	bf00      	nop
9002b958:	9003127c 	.word	0x9003127c
9002b95c:	9002b889 	.word	0x9002b889

9002b960 <__sfp>:
9002b960:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b962:	4607      	mov	r7, r0
9002b964:	f7ff ffac 	bl	9002b8c0 <__sfp_lock_acquire>
9002b968:	4b1e      	ldr	r3, [pc, #120]	; (9002b9e4 <__sfp+0x84>)
9002b96a:	681e      	ldr	r6, [r3, #0]
9002b96c:	69b3      	ldr	r3, [r6, #24]
9002b96e:	b913      	cbnz	r3, 9002b976 <__sfp+0x16>
9002b970:	4630      	mov	r0, r6
9002b972:	f7ff ffbd 	bl	9002b8f0 <__sinit>
9002b976:	3648      	adds	r6, #72	; 0x48
9002b978:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
9002b97c:	3b01      	subs	r3, #1
9002b97e:	d503      	bpl.n	9002b988 <__sfp+0x28>
9002b980:	6833      	ldr	r3, [r6, #0]
9002b982:	b30b      	cbz	r3, 9002b9c8 <__sfp+0x68>
9002b984:	6836      	ldr	r6, [r6, #0]
9002b986:	e7f7      	b.n	9002b978 <__sfp+0x18>
9002b988:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
9002b98c:	b9d5      	cbnz	r5, 9002b9c4 <__sfp+0x64>
9002b98e:	4b16      	ldr	r3, [pc, #88]	; (9002b9e8 <__sfp+0x88>)
9002b990:	60e3      	str	r3, [r4, #12]
9002b992:	f104 0058 	add.w	r0, r4, #88	; 0x58
9002b996:	6665      	str	r5, [r4, #100]	; 0x64
9002b998:	f000 f87e 	bl	9002ba98 <__retarget_lock_init_recursive>
9002b99c:	f7ff ff96 	bl	9002b8cc <__sfp_lock_release>
9002b9a0:	e9c4 5501 	strd	r5, r5, [r4, #4]
9002b9a4:	e9c4 5504 	strd	r5, r5, [r4, #16]
9002b9a8:	6025      	str	r5, [r4, #0]
9002b9aa:	61a5      	str	r5, [r4, #24]
9002b9ac:	2208      	movs	r2, #8
9002b9ae:	4629      	mov	r1, r5
9002b9b0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
9002b9b4:	f000 f892 	bl	9002badc <memset>
9002b9b8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
9002b9bc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
9002b9c0:	4620      	mov	r0, r4
9002b9c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002b9c4:	3468      	adds	r4, #104	; 0x68
9002b9c6:	e7d9      	b.n	9002b97c <__sfp+0x1c>
9002b9c8:	2104      	movs	r1, #4
9002b9ca:	4638      	mov	r0, r7
9002b9cc:	f7ff ff62 	bl	9002b894 <__sfmoreglue>
9002b9d0:	4604      	mov	r4, r0
9002b9d2:	6030      	str	r0, [r6, #0]
9002b9d4:	2800      	cmp	r0, #0
9002b9d6:	d1d5      	bne.n	9002b984 <__sfp+0x24>
9002b9d8:	f7ff ff78 	bl	9002b8cc <__sfp_lock_release>
9002b9dc:	230c      	movs	r3, #12
9002b9de:	603b      	str	r3, [r7, #0]
9002b9e0:	e7ee      	b.n	9002b9c0 <__sfp+0x60>
9002b9e2:	bf00      	nop
9002b9e4:	9003127c 	.word	0x9003127c
9002b9e8:	ffff0001 	.word	0xffff0001

9002b9ec <fiprintf>:
9002b9ec:	b40e      	push	{r1, r2, r3}
9002b9ee:	b503      	push	{r0, r1, lr}
9002b9f0:	4601      	mov	r1, r0
9002b9f2:	ab03      	add	r3, sp, #12
9002b9f4:	4805      	ldr	r0, [pc, #20]	; (9002ba0c <fiprintf+0x20>)
9002b9f6:	f853 2b04 	ldr.w	r2, [r3], #4
9002b9fa:	6800      	ldr	r0, [r0, #0]
9002b9fc:	9301      	str	r3, [sp, #4]
9002b9fe:	f000 f97f 	bl	9002bd00 <_vfiprintf_r>
9002ba02:	b002      	add	sp, #8
9002ba04:	f85d eb04 	ldr.w	lr, [sp], #4
9002ba08:	b003      	add	sp, #12
9002ba0a:	4770      	bx	lr
9002ba0c:	240000e0 	.word	0x240000e0

9002ba10 <_fwalk_reent>:
9002ba10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002ba14:	4606      	mov	r6, r0
9002ba16:	4688      	mov	r8, r1
9002ba18:	f100 0448 	add.w	r4, r0, #72	; 0x48
9002ba1c:	2700      	movs	r7, #0
9002ba1e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002ba22:	f1b9 0901 	subs.w	r9, r9, #1
9002ba26:	d505      	bpl.n	9002ba34 <_fwalk_reent+0x24>
9002ba28:	6824      	ldr	r4, [r4, #0]
9002ba2a:	2c00      	cmp	r4, #0
9002ba2c:	d1f7      	bne.n	9002ba1e <_fwalk_reent+0xe>
9002ba2e:	4638      	mov	r0, r7
9002ba30:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002ba34:	89ab      	ldrh	r3, [r5, #12]
9002ba36:	2b01      	cmp	r3, #1
9002ba38:	d907      	bls.n	9002ba4a <_fwalk_reent+0x3a>
9002ba3a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002ba3e:	3301      	adds	r3, #1
9002ba40:	d003      	beq.n	9002ba4a <_fwalk_reent+0x3a>
9002ba42:	4629      	mov	r1, r5
9002ba44:	4630      	mov	r0, r6
9002ba46:	47c0      	blx	r8
9002ba48:	4307      	orrs	r7, r0
9002ba4a:	3568      	adds	r5, #104	; 0x68
9002ba4c:	e7e9      	b.n	9002ba22 <_fwalk_reent+0x12>
	...

9002ba50 <__libc_init_array>:
9002ba50:	b570      	push	{r4, r5, r6, lr}
9002ba52:	4d0d      	ldr	r5, [pc, #52]	; (9002ba88 <__libc_init_array+0x38>)
9002ba54:	4c0d      	ldr	r4, [pc, #52]	; (9002ba8c <__libc_init_array+0x3c>)
9002ba56:	1b64      	subs	r4, r4, r5
9002ba58:	10a4      	asrs	r4, r4, #2
9002ba5a:	2600      	movs	r6, #0
9002ba5c:	42a6      	cmp	r6, r4
9002ba5e:	d109      	bne.n	9002ba74 <__libc_init_array+0x24>
9002ba60:	4d0b      	ldr	r5, [pc, #44]	; (9002ba90 <__libc_init_array+0x40>)
9002ba62:	4c0c      	ldr	r4, [pc, #48]	; (9002ba94 <__libc_init_array+0x44>)
9002ba64:	f001 f872 	bl	9002cb4c <_init>
9002ba68:	1b64      	subs	r4, r4, r5
9002ba6a:	10a4      	asrs	r4, r4, #2
9002ba6c:	2600      	movs	r6, #0
9002ba6e:	42a6      	cmp	r6, r4
9002ba70:	d105      	bne.n	9002ba7e <__libc_init_array+0x2e>
9002ba72:	bd70      	pop	{r4, r5, r6, pc}
9002ba74:	f855 3b04 	ldr.w	r3, [r5], #4
9002ba78:	4798      	blx	r3
9002ba7a:	3601      	adds	r6, #1
9002ba7c:	e7ee      	b.n	9002ba5c <__libc_init_array+0xc>
9002ba7e:	f855 3b04 	ldr.w	r3, [r5], #4
9002ba82:	4798      	blx	r3
9002ba84:	3601      	adds	r6, #1
9002ba86:	e7f2      	b.n	9002ba6e <__libc_init_array+0x1e>
9002ba88:	900312f0 	.word	0x900312f0
9002ba8c:	900312f0 	.word	0x900312f0
9002ba90:	900312f0 	.word	0x900312f0
9002ba94:	9003130c 	.word	0x9003130c

9002ba98 <__retarget_lock_init_recursive>:
9002ba98:	4770      	bx	lr

9002ba9a <__retarget_lock_acquire_recursive>:
9002ba9a:	4770      	bx	lr

9002ba9c <__retarget_lock_release>:
9002ba9c:	4770      	bx	lr

9002ba9e <__retarget_lock_release_recursive>:
9002ba9e:	4770      	bx	lr

9002baa0 <malloc>:
9002baa0:	4b02      	ldr	r3, [pc, #8]	; (9002baac <malloc+0xc>)
9002baa2:	4601      	mov	r1, r0
9002baa4:	6818      	ldr	r0, [r3, #0]
9002baa6:	f000 b88d 	b.w	9002bbc4 <_malloc_r>
9002baaa:	bf00      	nop
9002baac:	240000e0 	.word	0x240000e0

9002bab0 <free>:
9002bab0:	4b02      	ldr	r3, [pc, #8]	; (9002babc <free+0xc>)
9002bab2:	4601      	mov	r1, r0
9002bab4:	6818      	ldr	r0, [r3, #0]
9002bab6:	f000 b819 	b.w	9002baec <_free_r>
9002baba:	bf00      	nop
9002babc:	240000e0 	.word	0x240000e0

9002bac0 <memcpy>:
9002bac0:	440a      	add	r2, r1
9002bac2:	4291      	cmp	r1, r2
9002bac4:	f100 33ff 	add.w	r3, r0, #4294967295
9002bac8:	d100      	bne.n	9002bacc <memcpy+0xc>
9002baca:	4770      	bx	lr
9002bacc:	b510      	push	{r4, lr}
9002bace:	f811 4b01 	ldrb.w	r4, [r1], #1
9002bad2:	f803 4f01 	strb.w	r4, [r3, #1]!
9002bad6:	4291      	cmp	r1, r2
9002bad8:	d1f9      	bne.n	9002bace <memcpy+0xe>
9002bada:	bd10      	pop	{r4, pc}

9002badc <memset>:
9002badc:	4402      	add	r2, r0
9002bade:	4603      	mov	r3, r0
9002bae0:	4293      	cmp	r3, r2
9002bae2:	d100      	bne.n	9002bae6 <memset+0xa>
9002bae4:	4770      	bx	lr
9002bae6:	f803 1b01 	strb.w	r1, [r3], #1
9002baea:	e7f9      	b.n	9002bae0 <memset+0x4>

9002baec <_free_r>:
9002baec:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002baee:	2900      	cmp	r1, #0
9002baf0:	d044      	beq.n	9002bb7c <_free_r+0x90>
9002baf2:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002baf6:	9001      	str	r0, [sp, #4]
9002baf8:	2b00      	cmp	r3, #0
9002bafa:	f1a1 0404 	sub.w	r4, r1, #4
9002bafe:	bfb8      	it	lt
9002bb00:	18e4      	addlt	r4, r4, r3
9002bb02:	f000 ffe3 	bl	9002cacc <__malloc_lock>
9002bb06:	4a1e      	ldr	r2, [pc, #120]	; (9002bb80 <_free_r+0x94>)
9002bb08:	9801      	ldr	r0, [sp, #4]
9002bb0a:	6813      	ldr	r3, [r2, #0]
9002bb0c:	b933      	cbnz	r3, 9002bb1c <_free_r+0x30>
9002bb0e:	6063      	str	r3, [r4, #4]
9002bb10:	6014      	str	r4, [r2, #0]
9002bb12:	b003      	add	sp, #12
9002bb14:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002bb18:	f000 bfde 	b.w	9002cad8 <__malloc_unlock>
9002bb1c:	42a3      	cmp	r3, r4
9002bb1e:	d908      	bls.n	9002bb32 <_free_r+0x46>
9002bb20:	6825      	ldr	r5, [r4, #0]
9002bb22:	1961      	adds	r1, r4, r5
9002bb24:	428b      	cmp	r3, r1
9002bb26:	bf01      	itttt	eq
9002bb28:	6819      	ldreq	r1, [r3, #0]
9002bb2a:	685b      	ldreq	r3, [r3, #4]
9002bb2c:	1949      	addeq	r1, r1, r5
9002bb2e:	6021      	streq	r1, [r4, #0]
9002bb30:	e7ed      	b.n	9002bb0e <_free_r+0x22>
9002bb32:	461a      	mov	r2, r3
9002bb34:	685b      	ldr	r3, [r3, #4]
9002bb36:	b10b      	cbz	r3, 9002bb3c <_free_r+0x50>
9002bb38:	42a3      	cmp	r3, r4
9002bb3a:	d9fa      	bls.n	9002bb32 <_free_r+0x46>
9002bb3c:	6811      	ldr	r1, [r2, #0]
9002bb3e:	1855      	adds	r5, r2, r1
9002bb40:	42a5      	cmp	r5, r4
9002bb42:	d10b      	bne.n	9002bb5c <_free_r+0x70>
9002bb44:	6824      	ldr	r4, [r4, #0]
9002bb46:	4421      	add	r1, r4
9002bb48:	1854      	adds	r4, r2, r1
9002bb4a:	42a3      	cmp	r3, r4
9002bb4c:	6011      	str	r1, [r2, #0]
9002bb4e:	d1e0      	bne.n	9002bb12 <_free_r+0x26>
9002bb50:	681c      	ldr	r4, [r3, #0]
9002bb52:	685b      	ldr	r3, [r3, #4]
9002bb54:	6053      	str	r3, [r2, #4]
9002bb56:	4421      	add	r1, r4
9002bb58:	6011      	str	r1, [r2, #0]
9002bb5a:	e7da      	b.n	9002bb12 <_free_r+0x26>
9002bb5c:	d902      	bls.n	9002bb64 <_free_r+0x78>
9002bb5e:	230c      	movs	r3, #12
9002bb60:	6003      	str	r3, [r0, #0]
9002bb62:	e7d6      	b.n	9002bb12 <_free_r+0x26>
9002bb64:	6825      	ldr	r5, [r4, #0]
9002bb66:	1961      	adds	r1, r4, r5
9002bb68:	428b      	cmp	r3, r1
9002bb6a:	bf04      	itt	eq
9002bb6c:	6819      	ldreq	r1, [r3, #0]
9002bb6e:	685b      	ldreq	r3, [r3, #4]
9002bb70:	6063      	str	r3, [r4, #4]
9002bb72:	bf04      	itt	eq
9002bb74:	1949      	addeq	r1, r1, r5
9002bb76:	6021      	streq	r1, [r4, #0]
9002bb78:	6054      	str	r4, [r2, #4]
9002bb7a:	e7ca      	b.n	9002bb12 <_free_r+0x26>
9002bb7c:	b003      	add	sp, #12
9002bb7e:	bd30      	pop	{r4, r5, pc}
9002bb80:	24028f34 	.word	0x24028f34

9002bb84 <sbrk_aligned>:
9002bb84:	b570      	push	{r4, r5, r6, lr}
9002bb86:	4e0e      	ldr	r6, [pc, #56]	; (9002bbc0 <sbrk_aligned+0x3c>)
9002bb88:	460c      	mov	r4, r1
9002bb8a:	6831      	ldr	r1, [r6, #0]
9002bb8c:	4605      	mov	r5, r0
9002bb8e:	b911      	cbnz	r1, 9002bb96 <sbrk_aligned+0x12>
9002bb90:	f000 fc72 	bl	9002c478 <_sbrk_r>
9002bb94:	6030      	str	r0, [r6, #0]
9002bb96:	4621      	mov	r1, r4
9002bb98:	4628      	mov	r0, r5
9002bb9a:	f000 fc6d 	bl	9002c478 <_sbrk_r>
9002bb9e:	1c43      	adds	r3, r0, #1
9002bba0:	d00a      	beq.n	9002bbb8 <sbrk_aligned+0x34>
9002bba2:	1cc4      	adds	r4, r0, #3
9002bba4:	f024 0403 	bic.w	r4, r4, #3
9002bba8:	42a0      	cmp	r0, r4
9002bbaa:	d007      	beq.n	9002bbbc <sbrk_aligned+0x38>
9002bbac:	1a21      	subs	r1, r4, r0
9002bbae:	4628      	mov	r0, r5
9002bbb0:	f000 fc62 	bl	9002c478 <_sbrk_r>
9002bbb4:	3001      	adds	r0, #1
9002bbb6:	d101      	bne.n	9002bbbc <sbrk_aligned+0x38>
9002bbb8:	f04f 34ff 	mov.w	r4, #4294967295
9002bbbc:	4620      	mov	r0, r4
9002bbbe:	bd70      	pop	{r4, r5, r6, pc}
9002bbc0:	24028f38 	.word	0x24028f38

9002bbc4 <_malloc_r>:
9002bbc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002bbc8:	1ccd      	adds	r5, r1, #3
9002bbca:	f025 0503 	bic.w	r5, r5, #3
9002bbce:	3508      	adds	r5, #8
9002bbd0:	2d0c      	cmp	r5, #12
9002bbd2:	bf38      	it	cc
9002bbd4:	250c      	movcc	r5, #12
9002bbd6:	2d00      	cmp	r5, #0
9002bbd8:	4607      	mov	r7, r0
9002bbda:	db01      	blt.n	9002bbe0 <_malloc_r+0x1c>
9002bbdc:	42a9      	cmp	r1, r5
9002bbde:	d905      	bls.n	9002bbec <_malloc_r+0x28>
9002bbe0:	230c      	movs	r3, #12
9002bbe2:	603b      	str	r3, [r7, #0]
9002bbe4:	2600      	movs	r6, #0
9002bbe6:	4630      	mov	r0, r6
9002bbe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002bbec:	4e2e      	ldr	r6, [pc, #184]	; (9002bca8 <_malloc_r+0xe4>)
9002bbee:	f000 ff6d 	bl	9002cacc <__malloc_lock>
9002bbf2:	6833      	ldr	r3, [r6, #0]
9002bbf4:	461c      	mov	r4, r3
9002bbf6:	bb34      	cbnz	r4, 9002bc46 <_malloc_r+0x82>
9002bbf8:	4629      	mov	r1, r5
9002bbfa:	4638      	mov	r0, r7
9002bbfc:	f7ff ffc2 	bl	9002bb84 <sbrk_aligned>
9002bc00:	1c43      	adds	r3, r0, #1
9002bc02:	4604      	mov	r4, r0
9002bc04:	d14d      	bne.n	9002bca2 <_malloc_r+0xde>
9002bc06:	6834      	ldr	r4, [r6, #0]
9002bc08:	4626      	mov	r6, r4
9002bc0a:	2e00      	cmp	r6, #0
9002bc0c:	d140      	bne.n	9002bc90 <_malloc_r+0xcc>
9002bc0e:	6823      	ldr	r3, [r4, #0]
9002bc10:	4631      	mov	r1, r6
9002bc12:	4638      	mov	r0, r7
9002bc14:	eb04 0803 	add.w	r8, r4, r3
9002bc18:	f000 fc2e 	bl	9002c478 <_sbrk_r>
9002bc1c:	4580      	cmp	r8, r0
9002bc1e:	d13a      	bne.n	9002bc96 <_malloc_r+0xd2>
9002bc20:	6821      	ldr	r1, [r4, #0]
9002bc22:	3503      	adds	r5, #3
9002bc24:	1a6d      	subs	r5, r5, r1
9002bc26:	f025 0503 	bic.w	r5, r5, #3
9002bc2a:	3508      	adds	r5, #8
9002bc2c:	2d0c      	cmp	r5, #12
9002bc2e:	bf38      	it	cc
9002bc30:	250c      	movcc	r5, #12
9002bc32:	4629      	mov	r1, r5
9002bc34:	4638      	mov	r0, r7
9002bc36:	f7ff ffa5 	bl	9002bb84 <sbrk_aligned>
9002bc3a:	3001      	adds	r0, #1
9002bc3c:	d02b      	beq.n	9002bc96 <_malloc_r+0xd2>
9002bc3e:	6823      	ldr	r3, [r4, #0]
9002bc40:	442b      	add	r3, r5
9002bc42:	6023      	str	r3, [r4, #0]
9002bc44:	e00e      	b.n	9002bc64 <_malloc_r+0xa0>
9002bc46:	6822      	ldr	r2, [r4, #0]
9002bc48:	1b52      	subs	r2, r2, r5
9002bc4a:	d41e      	bmi.n	9002bc8a <_malloc_r+0xc6>
9002bc4c:	2a0b      	cmp	r2, #11
9002bc4e:	d916      	bls.n	9002bc7e <_malloc_r+0xba>
9002bc50:	1961      	adds	r1, r4, r5
9002bc52:	42a3      	cmp	r3, r4
9002bc54:	6025      	str	r5, [r4, #0]
9002bc56:	bf18      	it	ne
9002bc58:	6059      	strne	r1, [r3, #4]
9002bc5a:	6863      	ldr	r3, [r4, #4]
9002bc5c:	bf08      	it	eq
9002bc5e:	6031      	streq	r1, [r6, #0]
9002bc60:	5162      	str	r2, [r4, r5]
9002bc62:	604b      	str	r3, [r1, #4]
9002bc64:	4638      	mov	r0, r7
9002bc66:	f104 060b 	add.w	r6, r4, #11
9002bc6a:	f000 ff35 	bl	9002cad8 <__malloc_unlock>
9002bc6e:	f026 0607 	bic.w	r6, r6, #7
9002bc72:	1d23      	adds	r3, r4, #4
9002bc74:	1af2      	subs	r2, r6, r3
9002bc76:	d0b6      	beq.n	9002bbe6 <_malloc_r+0x22>
9002bc78:	1b9b      	subs	r3, r3, r6
9002bc7a:	50a3      	str	r3, [r4, r2]
9002bc7c:	e7b3      	b.n	9002bbe6 <_malloc_r+0x22>
9002bc7e:	6862      	ldr	r2, [r4, #4]
9002bc80:	42a3      	cmp	r3, r4
9002bc82:	bf0c      	ite	eq
9002bc84:	6032      	streq	r2, [r6, #0]
9002bc86:	605a      	strne	r2, [r3, #4]
9002bc88:	e7ec      	b.n	9002bc64 <_malloc_r+0xa0>
9002bc8a:	4623      	mov	r3, r4
9002bc8c:	6864      	ldr	r4, [r4, #4]
9002bc8e:	e7b2      	b.n	9002bbf6 <_malloc_r+0x32>
9002bc90:	4634      	mov	r4, r6
9002bc92:	6876      	ldr	r6, [r6, #4]
9002bc94:	e7b9      	b.n	9002bc0a <_malloc_r+0x46>
9002bc96:	230c      	movs	r3, #12
9002bc98:	603b      	str	r3, [r7, #0]
9002bc9a:	4638      	mov	r0, r7
9002bc9c:	f000 ff1c 	bl	9002cad8 <__malloc_unlock>
9002bca0:	e7a1      	b.n	9002bbe6 <_malloc_r+0x22>
9002bca2:	6025      	str	r5, [r4, #0]
9002bca4:	e7de      	b.n	9002bc64 <_malloc_r+0xa0>
9002bca6:	bf00      	nop
9002bca8:	24028f34 	.word	0x24028f34

9002bcac <__sfputc_r>:
9002bcac:	6893      	ldr	r3, [r2, #8]
9002bcae:	3b01      	subs	r3, #1
9002bcb0:	2b00      	cmp	r3, #0
9002bcb2:	b410      	push	{r4}
9002bcb4:	6093      	str	r3, [r2, #8]
9002bcb6:	da08      	bge.n	9002bcca <__sfputc_r+0x1e>
9002bcb8:	6994      	ldr	r4, [r2, #24]
9002bcba:	42a3      	cmp	r3, r4
9002bcbc:	db01      	blt.n	9002bcc2 <__sfputc_r+0x16>
9002bcbe:	290a      	cmp	r1, #10
9002bcc0:	d103      	bne.n	9002bcca <__sfputc_r+0x1e>
9002bcc2:	f85d 4b04 	ldr.w	r4, [sp], #4
9002bcc6:	f000 bc83 	b.w	9002c5d0 <__swbuf_r>
9002bcca:	6813      	ldr	r3, [r2, #0]
9002bccc:	1c58      	adds	r0, r3, #1
9002bcce:	6010      	str	r0, [r2, #0]
9002bcd0:	7019      	strb	r1, [r3, #0]
9002bcd2:	4608      	mov	r0, r1
9002bcd4:	f85d 4b04 	ldr.w	r4, [sp], #4
9002bcd8:	4770      	bx	lr

9002bcda <__sfputs_r>:
9002bcda:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002bcdc:	4606      	mov	r6, r0
9002bcde:	460f      	mov	r7, r1
9002bce0:	4614      	mov	r4, r2
9002bce2:	18d5      	adds	r5, r2, r3
9002bce4:	42ac      	cmp	r4, r5
9002bce6:	d101      	bne.n	9002bcec <__sfputs_r+0x12>
9002bce8:	2000      	movs	r0, #0
9002bcea:	e007      	b.n	9002bcfc <__sfputs_r+0x22>
9002bcec:	f814 1b01 	ldrb.w	r1, [r4], #1
9002bcf0:	463a      	mov	r2, r7
9002bcf2:	4630      	mov	r0, r6
9002bcf4:	f7ff ffda 	bl	9002bcac <__sfputc_r>
9002bcf8:	1c43      	adds	r3, r0, #1
9002bcfa:	d1f3      	bne.n	9002bce4 <__sfputs_r+0xa>
9002bcfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002bd00 <_vfiprintf_r>:
9002bd00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002bd04:	460d      	mov	r5, r1
9002bd06:	b09d      	sub	sp, #116	; 0x74
9002bd08:	4614      	mov	r4, r2
9002bd0a:	4698      	mov	r8, r3
9002bd0c:	4606      	mov	r6, r0
9002bd0e:	b118      	cbz	r0, 9002bd18 <_vfiprintf_r+0x18>
9002bd10:	6983      	ldr	r3, [r0, #24]
9002bd12:	b90b      	cbnz	r3, 9002bd18 <_vfiprintf_r+0x18>
9002bd14:	f7ff fdec 	bl	9002b8f0 <__sinit>
9002bd18:	4b89      	ldr	r3, [pc, #548]	; (9002bf40 <_vfiprintf_r+0x240>)
9002bd1a:	429d      	cmp	r5, r3
9002bd1c:	d11b      	bne.n	9002bd56 <_vfiprintf_r+0x56>
9002bd1e:	6875      	ldr	r5, [r6, #4]
9002bd20:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002bd22:	07d9      	lsls	r1, r3, #31
9002bd24:	d405      	bmi.n	9002bd32 <_vfiprintf_r+0x32>
9002bd26:	89ab      	ldrh	r3, [r5, #12]
9002bd28:	059a      	lsls	r2, r3, #22
9002bd2a:	d402      	bmi.n	9002bd32 <_vfiprintf_r+0x32>
9002bd2c:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002bd2e:	f7ff feb4 	bl	9002ba9a <__retarget_lock_acquire_recursive>
9002bd32:	89ab      	ldrh	r3, [r5, #12]
9002bd34:	071b      	lsls	r3, r3, #28
9002bd36:	d501      	bpl.n	9002bd3c <_vfiprintf_r+0x3c>
9002bd38:	692b      	ldr	r3, [r5, #16]
9002bd3a:	b9eb      	cbnz	r3, 9002bd78 <_vfiprintf_r+0x78>
9002bd3c:	4629      	mov	r1, r5
9002bd3e:	4630      	mov	r0, r6
9002bd40:	f000 fcaa 	bl	9002c698 <__swsetup_r>
9002bd44:	b1c0      	cbz	r0, 9002bd78 <_vfiprintf_r+0x78>
9002bd46:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002bd48:	07dc      	lsls	r4, r3, #31
9002bd4a:	d50e      	bpl.n	9002bd6a <_vfiprintf_r+0x6a>
9002bd4c:	f04f 30ff 	mov.w	r0, #4294967295
9002bd50:	b01d      	add	sp, #116	; 0x74
9002bd52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002bd56:	4b7b      	ldr	r3, [pc, #492]	; (9002bf44 <_vfiprintf_r+0x244>)
9002bd58:	429d      	cmp	r5, r3
9002bd5a:	d101      	bne.n	9002bd60 <_vfiprintf_r+0x60>
9002bd5c:	68b5      	ldr	r5, [r6, #8]
9002bd5e:	e7df      	b.n	9002bd20 <_vfiprintf_r+0x20>
9002bd60:	4b79      	ldr	r3, [pc, #484]	; (9002bf48 <_vfiprintf_r+0x248>)
9002bd62:	429d      	cmp	r5, r3
9002bd64:	bf08      	it	eq
9002bd66:	68f5      	ldreq	r5, [r6, #12]
9002bd68:	e7da      	b.n	9002bd20 <_vfiprintf_r+0x20>
9002bd6a:	89ab      	ldrh	r3, [r5, #12]
9002bd6c:	0598      	lsls	r0, r3, #22
9002bd6e:	d4ed      	bmi.n	9002bd4c <_vfiprintf_r+0x4c>
9002bd70:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002bd72:	f7ff fe94 	bl	9002ba9e <__retarget_lock_release_recursive>
9002bd76:	e7e9      	b.n	9002bd4c <_vfiprintf_r+0x4c>
9002bd78:	2300      	movs	r3, #0
9002bd7a:	9309      	str	r3, [sp, #36]	; 0x24
9002bd7c:	2320      	movs	r3, #32
9002bd7e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
9002bd82:	f8cd 800c 	str.w	r8, [sp, #12]
9002bd86:	2330      	movs	r3, #48	; 0x30
9002bd88:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 9002bf4c <_vfiprintf_r+0x24c>
9002bd8c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
9002bd90:	f04f 0901 	mov.w	r9, #1
9002bd94:	4623      	mov	r3, r4
9002bd96:	469a      	mov	sl, r3
9002bd98:	f813 2b01 	ldrb.w	r2, [r3], #1
9002bd9c:	b10a      	cbz	r2, 9002bda2 <_vfiprintf_r+0xa2>
9002bd9e:	2a25      	cmp	r2, #37	; 0x25
9002bda0:	d1f9      	bne.n	9002bd96 <_vfiprintf_r+0x96>
9002bda2:	ebba 0b04 	subs.w	fp, sl, r4
9002bda6:	d00b      	beq.n	9002bdc0 <_vfiprintf_r+0xc0>
9002bda8:	465b      	mov	r3, fp
9002bdaa:	4622      	mov	r2, r4
9002bdac:	4629      	mov	r1, r5
9002bdae:	4630      	mov	r0, r6
9002bdb0:	f7ff ff93 	bl	9002bcda <__sfputs_r>
9002bdb4:	3001      	adds	r0, #1
9002bdb6:	f000 80aa 	beq.w	9002bf0e <_vfiprintf_r+0x20e>
9002bdba:	9a09      	ldr	r2, [sp, #36]	; 0x24
9002bdbc:	445a      	add	r2, fp
9002bdbe:	9209      	str	r2, [sp, #36]	; 0x24
9002bdc0:	f89a 3000 	ldrb.w	r3, [sl]
9002bdc4:	2b00      	cmp	r3, #0
9002bdc6:	f000 80a2 	beq.w	9002bf0e <_vfiprintf_r+0x20e>
9002bdca:	2300      	movs	r3, #0
9002bdcc:	f04f 32ff 	mov.w	r2, #4294967295
9002bdd0:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002bdd4:	f10a 0a01 	add.w	sl, sl, #1
9002bdd8:	9304      	str	r3, [sp, #16]
9002bdda:	9307      	str	r3, [sp, #28]
9002bddc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
9002bde0:	931a      	str	r3, [sp, #104]	; 0x68
9002bde2:	4654      	mov	r4, sl
9002bde4:	2205      	movs	r2, #5
9002bde6:	f814 1b01 	ldrb.w	r1, [r4], #1
9002bdea:	4858      	ldr	r0, [pc, #352]	; (9002bf4c <_vfiprintf_r+0x24c>)
9002bdec:	f7d4 fa78 	bl	900002e0 <memchr>
9002bdf0:	9a04      	ldr	r2, [sp, #16]
9002bdf2:	b9d8      	cbnz	r0, 9002be2c <_vfiprintf_r+0x12c>
9002bdf4:	06d1      	lsls	r1, r2, #27
9002bdf6:	bf44      	itt	mi
9002bdf8:	2320      	movmi	r3, #32
9002bdfa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9002bdfe:	0713      	lsls	r3, r2, #28
9002be00:	bf44      	itt	mi
9002be02:	232b      	movmi	r3, #43	; 0x2b
9002be04:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9002be08:	f89a 3000 	ldrb.w	r3, [sl]
9002be0c:	2b2a      	cmp	r3, #42	; 0x2a
9002be0e:	d015      	beq.n	9002be3c <_vfiprintf_r+0x13c>
9002be10:	9a07      	ldr	r2, [sp, #28]
9002be12:	4654      	mov	r4, sl
9002be14:	2000      	movs	r0, #0
9002be16:	f04f 0c0a 	mov.w	ip, #10
9002be1a:	4621      	mov	r1, r4
9002be1c:	f811 3b01 	ldrb.w	r3, [r1], #1
9002be20:	3b30      	subs	r3, #48	; 0x30
9002be22:	2b09      	cmp	r3, #9
9002be24:	d94e      	bls.n	9002bec4 <_vfiprintf_r+0x1c4>
9002be26:	b1b0      	cbz	r0, 9002be56 <_vfiprintf_r+0x156>
9002be28:	9207      	str	r2, [sp, #28]
9002be2a:	e014      	b.n	9002be56 <_vfiprintf_r+0x156>
9002be2c:	eba0 0308 	sub.w	r3, r0, r8
9002be30:	fa09 f303 	lsl.w	r3, r9, r3
9002be34:	4313      	orrs	r3, r2
9002be36:	9304      	str	r3, [sp, #16]
9002be38:	46a2      	mov	sl, r4
9002be3a:	e7d2      	b.n	9002bde2 <_vfiprintf_r+0xe2>
9002be3c:	9b03      	ldr	r3, [sp, #12]
9002be3e:	1d19      	adds	r1, r3, #4
9002be40:	681b      	ldr	r3, [r3, #0]
9002be42:	9103      	str	r1, [sp, #12]
9002be44:	2b00      	cmp	r3, #0
9002be46:	bfbb      	ittet	lt
9002be48:	425b      	neglt	r3, r3
9002be4a:	f042 0202 	orrlt.w	r2, r2, #2
9002be4e:	9307      	strge	r3, [sp, #28]
9002be50:	9307      	strlt	r3, [sp, #28]
9002be52:	bfb8      	it	lt
9002be54:	9204      	strlt	r2, [sp, #16]
9002be56:	7823      	ldrb	r3, [r4, #0]
9002be58:	2b2e      	cmp	r3, #46	; 0x2e
9002be5a:	d10c      	bne.n	9002be76 <_vfiprintf_r+0x176>
9002be5c:	7863      	ldrb	r3, [r4, #1]
9002be5e:	2b2a      	cmp	r3, #42	; 0x2a
9002be60:	d135      	bne.n	9002bece <_vfiprintf_r+0x1ce>
9002be62:	9b03      	ldr	r3, [sp, #12]
9002be64:	1d1a      	adds	r2, r3, #4
9002be66:	681b      	ldr	r3, [r3, #0]
9002be68:	9203      	str	r2, [sp, #12]
9002be6a:	2b00      	cmp	r3, #0
9002be6c:	bfb8      	it	lt
9002be6e:	f04f 33ff 	movlt.w	r3, #4294967295
9002be72:	3402      	adds	r4, #2
9002be74:	9305      	str	r3, [sp, #20]
9002be76:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 9002bf5c <_vfiprintf_r+0x25c>
9002be7a:	7821      	ldrb	r1, [r4, #0]
9002be7c:	2203      	movs	r2, #3
9002be7e:	4650      	mov	r0, sl
9002be80:	f7d4 fa2e 	bl	900002e0 <memchr>
9002be84:	b140      	cbz	r0, 9002be98 <_vfiprintf_r+0x198>
9002be86:	2340      	movs	r3, #64	; 0x40
9002be88:	eba0 000a 	sub.w	r0, r0, sl
9002be8c:	fa03 f000 	lsl.w	r0, r3, r0
9002be90:	9b04      	ldr	r3, [sp, #16]
9002be92:	4303      	orrs	r3, r0
9002be94:	3401      	adds	r4, #1
9002be96:	9304      	str	r3, [sp, #16]
9002be98:	f814 1b01 	ldrb.w	r1, [r4], #1
9002be9c:	482c      	ldr	r0, [pc, #176]	; (9002bf50 <_vfiprintf_r+0x250>)
9002be9e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
9002bea2:	2206      	movs	r2, #6
9002bea4:	f7d4 fa1c 	bl	900002e0 <memchr>
9002bea8:	2800      	cmp	r0, #0
9002beaa:	d03f      	beq.n	9002bf2c <_vfiprintf_r+0x22c>
9002beac:	4b29      	ldr	r3, [pc, #164]	; (9002bf54 <_vfiprintf_r+0x254>)
9002beae:	bb1b      	cbnz	r3, 9002bef8 <_vfiprintf_r+0x1f8>
9002beb0:	9b03      	ldr	r3, [sp, #12]
9002beb2:	3307      	adds	r3, #7
9002beb4:	f023 0307 	bic.w	r3, r3, #7
9002beb8:	3308      	adds	r3, #8
9002beba:	9303      	str	r3, [sp, #12]
9002bebc:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002bebe:	443b      	add	r3, r7
9002bec0:	9309      	str	r3, [sp, #36]	; 0x24
9002bec2:	e767      	b.n	9002bd94 <_vfiprintf_r+0x94>
9002bec4:	fb0c 3202 	mla	r2, ip, r2, r3
9002bec8:	460c      	mov	r4, r1
9002beca:	2001      	movs	r0, #1
9002becc:	e7a5      	b.n	9002be1a <_vfiprintf_r+0x11a>
9002bece:	2300      	movs	r3, #0
9002bed0:	3401      	adds	r4, #1
9002bed2:	9305      	str	r3, [sp, #20]
9002bed4:	4619      	mov	r1, r3
9002bed6:	f04f 0c0a 	mov.w	ip, #10
9002beda:	4620      	mov	r0, r4
9002bedc:	f810 2b01 	ldrb.w	r2, [r0], #1
9002bee0:	3a30      	subs	r2, #48	; 0x30
9002bee2:	2a09      	cmp	r2, #9
9002bee4:	d903      	bls.n	9002beee <_vfiprintf_r+0x1ee>
9002bee6:	2b00      	cmp	r3, #0
9002bee8:	d0c5      	beq.n	9002be76 <_vfiprintf_r+0x176>
9002beea:	9105      	str	r1, [sp, #20]
9002beec:	e7c3      	b.n	9002be76 <_vfiprintf_r+0x176>
9002beee:	fb0c 2101 	mla	r1, ip, r1, r2
9002bef2:	4604      	mov	r4, r0
9002bef4:	2301      	movs	r3, #1
9002bef6:	e7f0      	b.n	9002beda <_vfiprintf_r+0x1da>
9002bef8:	ab03      	add	r3, sp, #12
9002befa:	9300      	str	r3, [sp, #0]
9002befc:	462a      	mov	r2, r5
9002befe:	4b16      	ldr	r3, [pc, #88]	; (9002bf58 <_vfiprintf_r+0x258>)
9002bf00:	a904      	add	r1, sp, #16
9002bf02:	4630      	mov	r0, r6
9002bf04:	f3af 8000 	nop.w
9002bf08:	4607      	mov	r7, r0
9002bf0a:	1c78      	adds	r0, r7, #1
9002bf0c:	d1d6      	bne.n	9002bebc <_vfiprintf_r+0x1bc>
9002bf0e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002bf10:	07d9      	lsls	r1, r3, #31
9002bf12:	d405      	bmi.n	9002bf20 <_vfiprintf_r+0x220>
9002bf14:	89ab      	ldrh	r3, [r5, #12]
9002bf16:	059a      	lsls	r2, r3, #22
9002bf18:	d402      	bmi.n	9002bf20 <_vfiprintf_r+0x220>
9002bf1a:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002bf1c:	f7ff fdbf 	bl	9002ba9e <__retarget_lock_release_recursive>
9002bf20:	89ab      	ldrh	r3, [r5, #12]
9002bf22:	065b      	lsls	r3, r3, #25
9002bf24:	f53f af12 	bmi.w	9002bd4c <_vfiprintf_r+0x4c>
9002bf28:	9809      	ldr	r0, [sp, #36]	; 0x24
9002bf2a:	e711      	b.n	9002bd50 <_vfiprintf_r+0x50>
9002bf2c:	ab03      	add	r3, sp, #12
9002bf2e:	9300      	str	r3, [sp, #0]
9002bf30:	462a      	mov	r2, r5
9002bf32:	4b09      	ldr	r3, [pc, #36]	; (9002bf58 <_vfiprintf_r+0x258>)
9002bf34:	a904      	add	r1, sp, #16
9002bf36:	4630      	mov	r0, r6
9002bf38:	f000 f880 	bl	9002c03c <_printf_i>
9002bf3c:	e7e4      	b.n	9002bf08 <_vfiprintf_r+0x208>
9002bf3e:	bf00      	nop
9002bf40:	9003123c 	.word	0x9003123c
9002bf44:	9003125c 	.word	0x9003125c
9002bf48:	9003121c 	.word	0x9003121c
9002bf4c:	90031280 	.word	0x90031280
9002bf50:	9003128a 	.word	0x9003128a
9002bf54:	00000000 	.word	0x00000000
9002bf58:	9002bcdb 	.word	0x9002bcdb
9002bf5c:	90031286 	.word	0x90031286

9002bf60 <_printf_common>:
9002bf60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002bf64:	4616      	mov	r6, r2
9002bf66:	4699      	mov	r9, r3
9002bf68:	688a      	ldr	r2, [r1, #8]
9002bf6a:	690b      	ldr	r3, [r1, #16]
9002bf6c:	f8dd 8020 	ldr.w	r8, [sp, #32]
9002bf70:	4293      	cmp	r3, r2
9002bf72:	bfb8      	it	lt
9002bf74:	4613      	movlt	r3, r2
9002bf76:	6033      	str	r3, [r6, #0]
9002bf78:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
9002bf7c:	4607      	mov	r7, r0
9002bf7e:	460c      	mov	r4, r1
9002bf80:	b10a      	cbz	r2, 9002bf86 <_printf_common+0x26>
9002bf82:	3301      	adds	r3, #1
9002bf84:	6033      	str	r3, [r6, #0]
9002bf86:	6823      	ldr	r3, [r4, #0]
9002bf88:	0699      	lsls	r1, r3, #26
9002bf8a:	bf42      	ittt	mi
9002bf8c:	6833      	ldrmi	r3, [r6, #0]
9002bf8e:	3302      	addmi	r3, #2
9002bf90:	6033      	strmi	r3, [r6, #0]
9002bf92:	6825      	ldr	r5, [r4, #0]
9002bf94:	f015 0506 	ands.w	r5, r5, #6
9002bf98:	d106      	bne.n	9002bfa8 <_printf_common+0x48>
9002bf9a:	f104 0a19 	add.w	sl, r4, #25
9002bf9e:	68e3      	ldr	r3, [r4, #12]
9002bfa0:	6832      	ldr	r2, [r6, #0]
9002bfa2:	1a9b      	subs	r3, r3, r2
9002bfa4:	42ab      	cmp	r3, r5
9002bfa6:	dc26      	bgt.n	9002bff6 <_printf_common+0x96>
9002bfa8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
9002bfac:	1e13      	subs	r3, r2, #0
9002bfae:	6822      	ldr	r2, [r4, #0]
9002bfb0:	bf18      	it	ne
9002bfb2:	2301      	movne	r3, #1
9002bfb4:	0692      	lsls	r2, r2, #26
9002bfb6:	d42b      	bmi.n	9002c010 <_printf_common+0xb0>
9002bfb8:	f104 0243 	add.w	r2, r4, #67	; 0x43
9002bfbc:	4649      	mov	r1, r9
9002bfbe:	4638      	mov	r0, r7
9002bfc0:	47c0      	blx	r8
9002bfc2:	3001      	adds	r0, #1
9002bfc4:	d01e      	beq.n	9002c004 <_printf_common+0xa4>
9002bfc6:	6823      	ldr	r3, [r4, #0]
9002bfc8:	68e5      	ldr	r5, [r4, #12]
9002bfca:	6832      	ldr	r2, [r6, #0]
9002bfcc:	f003 0306 	and.w	r3, r3, #6
9002bfd0:	2b04      	cmp	r3, #4
9002bfd2:	bf08      	it	eq
9002bfd4:	1aad      	subeq	r5, r5, r2
9002bfd6:	68a3      	ldr	r3, [r4, #8]
9002bfd8:	6922      	ldr	r2, [r4, #16]
9002bfda:	bf0c      	ite	eq
9002bfdc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002bfe0:	2500      	movne	r5, #0
9002bfe2:	4293      	cmp	r3, r2
9002bfe4:	bfc4      	itt	gt
9002bfe6:	1a9b      	subgt	r3, r3, r2
9002bfe8:	18ed      	addgt	r5, r5, r3
9002bfea:	2600      	movs	r6, #0
9002bfec:	341a      	adds	r4, #26
9002bfee:	42b5      	cmp	r5, r6
9002bff0:	d11a      	bne.n	9002c028 <_printf_common+0xc8>
9002bff2:	2000      	movs	r0, #0
9002bff4:	e008      	b.n	9002c008 <_printf_common+0xa8>
9002bff6:	2301      	movs	r3, #1
9002bff8:	4652      	mov	r2, sl
9002bffa:	4649      	mov	r1, r9
9002bffc:	4638      	mov	r0, r7
9002bffe:	47c0      	blx	r8
9002c000:	3001      	adds	r0, #1
9002c002:	d103      	bne.n	9002c00c <_printf_common+0xac>
9002c004:	f04f 30ff 	mov.w	r0, #4294967295
9002c008:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002c00c:	3501      	adds	r5, #1
9002c00e:	e7c6      	b.n	9002bf9e <_printf_common+0x3e>
9002c010:	18e1      	adds	r1, r4, r3
9002c012:	1c5a      	adds	r2, r3, #1
9002c014:	2030      	movs	r0, #48	; 0x30
9002c016:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
9002c01a:	4422      	add	r2, r4
9002c01c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
9002c020:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
9002c024:	3302      	adds	r3, #2
9002c026:	e7c7      	b.n	9002bfb8 <_printf_common+0x58>
9002c028:	2301      	movs	r3, #1
9002c02a:	4622      	mov	r2, r4
9002c02c:	4649      	mov	r1, r9
9002c02e:	4638      	mov	r0, r7
9002c030:	47c0      	blx	r8
9002c032:	3001      	adds	r0, #1
9002c034:	d0e6      	beq.n	9002c004 <_printf_common+0xa4>
9002c036:	3601      	adds	r6, #1
9002c038:	e7d9      	b.n	9002bfee <_printf_common+0x8e>
	...

9002c03c <_printf_i>:
9002c03c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002c040:	7e0f      	ldrb	r7, [r1, #24]
9002c042:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002c044:	2f78      	cmp	r7, #120	; 0x78
9002c046:	4691      	mov	r9, r2
9002c048:	4680      	mov	r8, r0
9002c04a:	460c      	mov	r4, r1
9002c04c:	469a      	mov	sl, r3
9002c04e:	f101 0243 	add.w	r2, r1, #67	; 0x43
9002c052:	d807      	bhi.n	9002c064 <_printf_i+0x28>
9002c054:	2f62      	cmp	r7, #98	; 0x62
9002c056:	d80a      	bhi.n	9002c06e <_printf_i+0x32>
9002c058:	2f00      	cmp	r7, #0
9002c05a:	f000 80d8 	beq.w	9002c20e <_printf_i+0x1d2>
9002c05e:	2f58      	cmp	r7, #88	; 0x58
9002c060:	f000 80a3 	beq.w	9002c1aa <_printf_i+0x16e>
9002c064:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002c068:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
9002c06c:	e03a      	b.n	9002c0e4 <_printf_i+0xa8>
9002c06e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
9002c072:	2b15      	cmp	r3, #21
9002c074:	d8f6      	bhi.n	9002c064 <_printf_i+0x28>
9002c076:	a101      	add	r1, pc, #4	; (adr r1, 9002c07c <_printf_i+0x40>)
9002c078:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002c07c:	9002c0d5 	.word	0x9002c0d5
9002c080:	9002c0e9 	.word	0x9002c0e9
9002c084:	9002c065 	.word	0x9002c065
9002c088:	9002c065 	.word	0x9002c065
9002c08c:	9002c065 	.word	0x9002c065
9002c090:	9002c065 	.word	0x9002c065
9002c094:	9002c0e9 	.word	0x9002c0e9
9002c098:	9002c065 	.word	0x9002c065
9002c09c:	9002c065 	.word	0x9002c065
9002c0a0:	9002c065 	.word	0x9002c065
9002c0a4:	9002c065 	.word	0x9002c065
9002c0a8:	9002c1f5 	.word	0x9002c1f5
9002c0ac:	9002c119 	.word	0x9002c119
9002c0b0:	9002c1d7 	.word	0x9002c1d7
9002c0b4:	9002c065 	.word	0x9002c065
9002c0b8:	9002c065 	.word	0x9002c065
9002c0bc:	9002c217 	.word	0x9002c217
9002c0c0:	9002c065 	.word	0x9002c065
9002c0c4:	9002c119 	.word	0x9002c119
9002c0c8:	9002c065 	.word	0x9002c065
9002c0cc:	9002c065 	.word	0x9002c065
9002c0d0:	9002c1df 	.word	0x9002c1df
9002c0d4:	682b      	ldr	r3, [r5, #0]
9002c0d6:	1d1a      	adds	r2, r3, #4
9002c0d8:	681b      	ldr	r3, [r3, #0]
9002c0da:	602a      	str	r2, [r5, #0]
9002c0dc:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002c0e0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9002c0e4:	2301      	movs	r3, #1
9002c0e6:	e0a3      	b.n	9002c230 <_printf_i+0x1f4>
9002c0e8:	6820      	ldr	r0, [r4, #0]
9002c0ea:	6829      	ldr	r1, [r5, #0]
9002c0ec:	0606      	lsls	r6, r0, #24
9002c0ee:	f101 0304 	add.w	r3, r1, #4
9002c0f2:	d50a      	bpl.n	9002c10a <_printf_i+0xce>
9002c0f4:	680e      	ldr	r6, [r1, #0]
9002c0f6:	602b      	str	r3, [r5, #0]
9002c0f8:	2e00      	cmp	r6, #0
9002c0fa:	da03      	bge.n	9002c104 <_printf_i+0xc8>
9002c0fc:	232d      	movs	r3, #45	; 0x2d
9002c0fe:	4276      	negs	r6, r6
9002c100:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002c104:	485e      	ldr	r0, [pc, #376]	; (9002c280 <_printf_i+0x244>)
9002c106:	230a      	movs	r3, #10
9002c108:	e019      	b.n	9002c13e <_printf_i+0x102>
9002c10a:	680e      	ldr	r6, [r1, #0]
9002c10c:	602b      	str	r3, [r5, #0]
9002c10e:	f010 0f40 	tst.w	r0, #64	; 0x40
9002c112:	bf18      	it	ne
9002c114:	b236      	sxthne	r6, r6
9002c116:	e7ef      	b.n	9002c0f8 <_printf_i+0xbc>
9002c118:	682b      	ldr	r3, [r5, #0]
9002c11a:	6820      	ldr	r0, [r4, #0]
9002c11c:	1d19      	adds	r1, r3, #4
9002c11e:	6029      	str	r1, [r5, #0]
9002c120:	0601      	lsls	r1, r0, #24
9002c122:	d501      	bpl.n	9002c128 <_printf_i+0xec>
9002c124:	681e      	ldr	r6, [r3, #0]
9002c126:	e002      	b.n	9002c12e <_printf_i+0xf2>
9002c128:	0646      	lsls	r6, r0, #25
9002c12a:	d5fb      	bpl.n	9002c124 <_printf_i+0xe8>
9002c12c:	881e      	ldrh	r6, [r3, #0]
9002c12e:	4854      	ldr	r0, [pc, #336]	; (9002c280 <_printf_i+0x244>)
9002c130:	2f6f      	cmp	r7, #111	; 0x6f
9002c132:	bf0c      	ite	eq
9002c134:	2308      	moveq	r3, #8
9002c136:	230a      	movne	r3, #10
9002c138:	2100      	movs	r1, #0
9002c13a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
9002c13e:	6865      	ldr	r5, [r4, #4]
9002c140:	60a5      	str	r5, [r4, #8]
9002c142:	2d00      	cmp	r5, #0
9002c144:	bfa2      	ittt	ge
9002c146:	6821      	ldrge	r1, [r4, #0]
9002c148:	f021 0104 	bicge.w	r1, r1, #4
9002c14c:	6021      	strge	r1, [r4, #0]
9002c14e:	b90e      	cbnz	r6, 9002c154 <_printf_i+0x118>
9002c150:	2d00      	cmp	r5, #0
9002c152:	d04d      	beq.n	9002c1f0 <_printf_i+0x1b4>
9002c154:	4615      	mov	r5, r2
9002c156:	fbb6 f1f3 	udiv	r1, r6, r3
9002c15a:	fb03 6711 	mls	r7, r3, r1, r6
9002c15e:	5dc7      	ldrb	r7, [r0, r7]
9002c160:	f805 7d01 	strb.w	r7, [r5, #-1]!
9002c164:	4637      	mov	r7, r6
9002c166:	42bb      	cmp	r3, r7
9002c168:	460e      	mov	r6, r1
9002c16a:	d9f4      	bls.n	9002c156 <_printf_i+0x11a>
9002c16c:	2b08      	cmp	r3, #8
9002c16e:	d10b      	bne.n	9002c188 <_printf_i+0x14c>
9002c170:	6823      	ldr	r3, [r4, #0]
9002c172:	07de      	lsls	r6, r3, #31
9002c174:	d508      	bpl.n	9002c188 <_printf_i+0x14c>
9002c176:	6923      	ldr	r3, [r4, #16]
9002c178:	6861      	ldr	r1, [r4, #4]
9002c17a:	4299      	cmp	r1, r3
9002c17c:	bfde      	ittt	le
9002c17e:	2330      	movle	r3, #48	; 0x30
9002c180:	f805 3c01 	strble.w	r3, [r5, #-1]
9002c184:	f105 35ff 	addle.w	r5, r5, #4294967295
9002c188:	1b52      	subs	r2, r2, r5
9002c18a:	6122      	str	r2, [r4, #16]
9002c18c:	f8cd a000 	str.w	sl, [sp]
9002c190:	464b      	mov	r3, r9
9002c192:	aa03      	add	r2, sp, #12
9002c194:	4621      	mov	r1, r4
9002c196:	4640      	mov	r0, r8
9002c198:	f7ff fee2 	bl	9002bf60 <_printf_common>
9002c19c:	3001      	adds	r0, #1
9002c19e:	d14c      	bne.n	9002c23a <_printf_i+0x1fe>
9002c1a0:	f04f 30ff 	mov.w	r0, #4294967295
9002c1a4:	b004      	add	sp, #16
9002c1a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002c1aa:	4835      	ldr	r0, [pc, #212]	; (9002c280 <_printf_i+0x244>)
9002c1ac:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
9002c1b0:	6829      	ldr	r1, [r5, #0]
9002c1b2:	6823      	ldr	r3, [r4, #0]
9002c1b4:	f851 6b04 	ldr.w	r6, [r1], #4
9002c1b8:	6029      	str	r1, [r5, #0]
9002c1ba:	061d      	lsls	r5, r3, #24
9002c1bc:	d514      	bpl.n	9002c1e8 <_printf_i+0x1ac>
9002c1be:	07df      	lsls	r7, r3, #31
9002c1c0:	bf44      	itt	mi
9002c1c2:	f043 0320 	orrmi.w	r3, r3, #32
9002c1c6:	6023      	strmi	r3, [r4, #0]
9002c1c8:	b91e      	cbnz	r6, 9002c1d2 <_printf_i+0x196>
9002c1ca:	6823      	ldr	r3, [r4, #0]
9002c1cc:	f023 0320 	bic.w	r3, r3, #32
9002c1d0:	6023      	str	r3, [r4, #0]
9002c1d2:	2310      	movs	r3, #16
9002c1d4:	e7b0      	b.n	9002c138 <_printf_i+0xfc>
9002c1d6:	6823      	ldr	r3, [r4, #0]
9002c1d8:	f043 0320 	orr.w	r3, r3, #32
9002c1dc:	6023      	str	r3, [r4, #0]
9002c1de:	2378      	movs	r3, #120	; 0x78
9002c1e0:	4828      	ldr	r0, [pc, #160]	; (9002c284 <_printf_i+0x248>)
9002c1e2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9002c1e6:	e7e3      	b.n	9002c1b0 <_printf_i+0x174>
9002c1e8:	0659      	lsls	r1, r3, #25
9002c1ea:	bf48      	it	mi
9002c1ec:	b2b6      	uxthmi	r6, r6
9002c1ee:	e7e6      	b.n	9002c1be <_printf_i+0x182>
9002c1f0:	4615      	mov	r5, r2
9002c1f2:	e7bb      	b.n	9002c16c <_printf_i+0x130>
9002c1f4:	682b      	ldr	r3, [r5, #0]
9002c1f6:	6826      	ldr	r6, [r4, #0]
9002c1f8:	6961      	ldr	r1, [r4, #20]
9002c1fa:	1d18      	adds	r0, r3, #4
9002c1fc:	6028      	str	r0, [r5, #0]
9002c1fe:	0635      	lsls	r5, r6, #24
9002c200:	681b      	ldr	r3, [r3, #0]
9002c202:	d501      	bpl.n	9002c208 <_printf_i+0x1cc>
9002c204:	6019      	str	r1, [r3, #0]
9002c206:	e002      	b.n	9002c20e <_printf_i+0x1d2>
9002c208:	0670      	lsls	r0, r6, #25
9002c20a:	d5fb      	bpl.n	9002c204 <_printf_i+0x1c8>
9002c20c:	8019      	strh	r1, [r3, #0]
9002c20e:	2300      	movs	r3, #0
9002c210:	6123      	str	r3, [r4, #16]
9002c212:	4615      	mov	r5, r2
9002c214:	e7ba      	b.n	9002c18c <_printf_i+0x150>
9002c216:	682b      	ldr	r3, [r5, #0]
9002c218:	1d1a      	adds	r2, r3, #4
9002c21a:	602a      	str	r2, [r5, #0]
9002c21c:	681d      	ldr	r5, [r3, #0]
9002c21e:	6862      	ldr	r2, [r4, #4]
9002c220:	2100      	movs	r1, #0
9002c222:	4628      	mov	r0, r5
9002c224:	f7d4 f85c 	bl	900002e0 <memchr>
9002c228:	b108      	cbz	r0, 9002c22e <_printf_i+0x1f2>
9002c22a:	1b40      	subs	r0, r0, r5
9002c22c:	6060      	str	r0, [r4, #4]
9002c22e:	6863      	ldr	r3, [r4, #4]
9002c230:	6123      	str	r3, [r4, #16]
9002c232:	2300      	movs	r3, #0
9002c234:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002c238:	e7a8      	b.n	9002c18c <_printf_i+0x150>
9002c23a:	6923      	ldr	r3, [r4, #16]
9002c23c:	462a      	mov	r2, r5
9002c23e:	4649      	mov	r1, r9
9002c240:	4640      	mov	r0, r8
9002c242:	47d0      	blx	sl
9002c244:	3001      	adds	r0, #1
9002c246:	d0ab      	beq.n	9002c1a0 <_printf_i+0x164>
9002c248:	6823      	ldr	r3, [r4, #0]
9002c24a:	079b      	lsls	r3, r3, #30
9002c24c:	d413      	bmi.n	9002c276 <_printf_i+0x23a>
9002c24e:	68e0      	ldr	r0, [r4, #12]
9002c250:	9b03      	ldr	r3, [sp, #12]
9002c252:	4298      	cmp	r0, r3
9002c254:	bfb8      	it	lt
9002c256:	4618      	movlt	r0, r3
9002c258:	e7a4      	b.n	9002c1a4 <_printf_i+0x168>
9002c25a:	2301      	movs	r3, #1
9002c25c:	4632      	mov	r2, r6
9002c25e:	4649      	mov	r1, r9
9002c260:	4640      	mov	r0, r8
9002c262:	47d0      	blx	sl
9002c264:	3001      	adds	r0, #1
9002c266:	d09b      	beq.n	9002c1a0 <_printf_i+0x164>
9002c268:	3501      	adds	r5, #1
9002c26a:	68e3      	ldr	r3, [r4, #12]
9002c26c:	9903      	ldr	r1, [sp, #12]
9002c26e:	1a5b      	subs	r3, r3, r1
9002c270:	42ab      	cmp	r3, r5
9002c272:	dcf2      	bgt.n	9002c25a <_printf_i+0x21e>
9002c274:	e7eb      	b.n	9002c24e <_printf_i+0x212>
9002c276:	2500      	movs	r5, #0
9002c278:	f104 0619 	add.w	r6, r4, #25
9002c27c:	e7f5      	b.n	9002c26a <_printf_i+0x22e>
9002c27e:	bf00      	nop
9002c280:	90031291 	.word	0x90031291
9002c284:	900312a2 	.word	0x900312a2

9002c288 <iprintf>:
9002c288:	b40f      	push	{r0, r1, r2, r3}
9002c28a:	4b0a      	ldr	r3, [pc, #40]	; (9002c2b4 <iprintf+0x2c>)
9002c28c:	b513      	push	{r0, r1, r4, lr}
9002c28e:	681c      	ldr	r4, [r3, #0]
9002c290:	b124      	cbz	r4, 9002c29c <iprintf+0x14>
9002c292:	69a3      	ldr	r3, [r4, #24]
9002c294:	b913      	cbnz	r3, 9002c29c <iprintf+0x14>
9002c296:	4620      	mov	r0, r4
9002c298:	f7ff fb2a 	bl	9002b8f0 <__sinit>
9002c29c:	ab05      	add	r3, sp, #20
9002c29e:	9a04      	ldr	r2, [sp, #16]
9002c2a0:	68a1      	ldr	r1, [r4, #8]
9002c2a2:	9301      	str	r3, [sp, #4]
9002c2a4:	4620      	mov	r0, r4
9002c2a6:	f7ff fd2b 	bl	9002bd00 <_vfiprintf_r>
9002c2aa:	b002      	add	sp, #8
9002c2ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002c2b0:	b004      	add	sp, #16
9002c2b2:	4770      	bx	lr
9002c2b4:	240000e0 	.word	0x240000e0

9002c2b8 <_puts_r>:
9002c2b8:	b570      	push	{r4, r5, r6, lr}
9002c2ba:	460e      	mov	r6, r1
9002c2bc:	4605      	mov	r5, r0
9002c2be:	b118      	cbz	r0, 9002c2c8 <_puts_r+0x10>
9002c2c0:	6983      	ldr	r3, [r0, #24]
9002c2c2:	b90b      	cbnz	r3, 9002c2c8 <_puts_r+0x10>
9002c2c4:	f7ff fb14 	bl	9002b8f0 <__sinit>
9002c2c8:	69ab      	ldr	r3, [r5, #24]
9002c2ca:	68ac      	ldr	r4, [r5, #8]
9002c2cc:	b913      	cbnz	r3, 9002c2d4 <_puts_r+0x1c>
9002c2ce:	4628      	mov	r0, r5
9002c2d0:	f7ff fb0e 	bl	9002b8f0 <__sinit>
9002c2d4:	4b2c      	ldr	r3, [pc, #176]	; (9002c388 <_puts_r+0xd0>)
9002c2d6:	429c      	cmp	r4, r3
9002c2d8:	d120      	bne.n	9002c31c <_puts_r+0x64>
9002c2da:	686c      	ldr	r4, [r5, #4]
9002c2dc:	6e63      	ldr	r3, [r4, #100]	; 0x64
9002c2de:	07db      	lsls	r3, r3, #31
9002c2e0:	d405      	bmi.n	9002c2ee <_puts_r+0x36>
9002c2e2:	89a3      	ldrh	r3, [r4, #12]
9002c2e4:	0598      	lsls	r0, r3, #22
9002c2e6:	d402      	bmi.n	9002c2ee <_puts_r+0x36>
9002c2e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002c2ea:	f7ff fbd6 	bl	9002ba9a <__retarget_lock_acquire_recursive>
9002c2ee:	89a3      	ldrh	r3, [r4, #12]
9002c2f0:	0719      	lsls	r1, r3, #28
9002c2f2:	d51d      	bpl.n	9002c330 <_puts_r+0x78>
9002c2f4:	6923      	ldr	r3, [r4, #16]
9002c2f6:	b1db      	cbz	r3, 9002c330 <_puts_r+0x78>
9002c2f8:	3e01      	subs	r6, #1
9002c2fa:	68a3      	ldr	r3, [r4, #8]
9002c2fc:	f816 1f01 	ldrb.w	r1, [r6, #1]!
9002c300:	3b01      	subs	r3, #1
9002c302:	60a3      	str	r3, [r4, #8]
9002c304:	bb39      	cbnz	r1, 9002c356 <_puts_r+0x9e>
9002c306:	2b00      	cmp	r3, #0
9002c308:	da38      	bge.n	9002c37c <_puts_r+0xc4>
9002c30a:	4622      	mov	r2, r4
9002c30c:	210a      	movs	r1, #10
9002c30e:	4628      	mov	r0, r5
9002c310:	f000 f95e 	bl	9002c5d0 <__swbuf_r>
9002c314:	3001      	adds	r0, #1
9002c316:	d011      	beq.n	9002c33c <_puts_r+0x84>
9002c318:	250a      	movs	r5, #10
9002c31a:	e011      	b.n	9002c340 <_puts_r+0x88>
9002c31c:	4b1b      	ldr	r3, [pc, #108]	; (9002c38c <_puts_r+0xd4>)
9002c31e:	429c      	cmp	r4, r3
9002c320:	d101      	bne.n	9002c326 <_puts_r+0x6e>
9002c322:	68ac      	ldr	r4, [r5, #8]
9002c324:	e7da      	b.n	9002c2dc <_puts_r+0x24>
9002c326:	4b1a      	ldr	r3, [pc, #104]	; (9002c390 <_puts_r+0xd8>)
9002c328:	429c      	cmp	r4, r3
9002c32a:	bf08      	it	eq
9002c32c:	68ec      	ldreq	r4, [r5, #12]
9002c32e:	e7d5      	b.n	9002c2dc <_puts_r+0x24>
9002c330:	4621      	mov	r1, r4
9002c332:	4628      	mov	r0, r5
9002c334:	f000 f9b0 	bl	9002c698 <__swsetup_r>
9002c338:	2800      	cmp	r0, #0
9002c33a:	d0dd      	beq.n	9002c2f8 <_puts_r+0x40>
9002c33c:	f04f 35ff 	mov.w	r5, #4294967295
9002c340:	6e63      	ldr	r3, [r4, #100]	; 0x64
9002c342:	07da      	lsls	r2, r3, #31
9002c344:	d405      	bmi.n	9002c352 <_puts_r+0x9a>
9002c346:	89a3      	ldrh	r3, [r4, #12]
9002c348:	059b      	lsls	r3, r3, #22
9002c34a:	d402      	bmi.n	9002c352 <_puts_r+0x9a>
9002c34c:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002c34e:	f7ff fba6 	bl	9002ba9e <__retarget_lock_release_recursive>
9002c352:	4628      	mov	r0, r5
9002c354:	bd70      	pop	{r4, r5, r6, pc}
9002c356:	2b00      	cmp	r3, #0
9002c358:	da04      	bge.n	9002c364 <_puts_r+0xac>
9002c35a:	69a2      	ldr	r2, [r4, #24]
9002c35c:	429a      	cmp	r2, r3
9002c35e:	dc06      	bgt.n	9002c36e <_puts_r+0xb6>
9002c360:	290a      	cmp	r1, #10
9002c362:	d004      	beq.n	9002c36e <_puts_r+0xb6>
9002c364:	6823      	ldr	r3, [r4, #0]
9002c366:	1c5a      	adds	r2, r3, #1
9002c368:	6022      	str	r2, [r4, #0]
9002c36a:	7019      	strb	r1, [r3, #0]
9002c36c:	e7c5      	b.n	9002c2fa <_puts_r+0x42>
9002c36e:	4622      	mov	r2, r4
9002c370:	4628      	mov	r0, r5
9002c372:	f000 f92d 	bl	9002c5d0 <__swbuf_r>
9002c376:	3001      	adds	r0, #1
9002c378:	d1bf      	bne.n	9002c2fa <_puts_r+0x42>
9002c37a:	e7df      	b.n	9002c33c <_puts_r+0x84>
9002c37c:	6823      	ldr	r3, [r4, #0]
9002c37e:	250a      	movs	r5, #10
9002c380:	1c5a      	adds	r2, r3, #1
9002c382:	6022      	str	r2, [r4, #0]
9002c384:	701d      	strb	r5, [r3, #0]
9002c386:	e7db      	b.n	9002c340 <_puts_r+0x88>
9002c388:	9003123c 	.word	0x9003123c
9002c38c:	9003125c 	.word	0x9003125c
9002c390:	9003121c 	.word	0x9003121c

9002c394 <puts>:
9002c394:	4b02      	ldr	r3, [pc, #8]	; (9002c3a0 <puts+0xc>)
9002c396:	4601      	mov	r1, r0
9002c398:	6818      	ldr	r0, [r3, #0]
9002c39a:	f7ff bf8d 	b.w	9002c2b8 <_puts_r>
9002c39e:	bf00      	nop
9002c3a0:	240000e0 	.word	0x240000e0

9002c3a4 <cleanup_glue>:
9002c3a4:	b538      	push	{r3, r4, r5, lr}
9002c3a6:	460c      	mov	r4, r1
9002c3a8:	6809      	ldr	r1, [r1, #0]
9002c3aa:	4605      	mov	r5, r0
9002c3ac:	b109      	cbz	r1, 9002c3b2 <cleanup_glue+0xe>
9002c3ae:	f7ff fff9 	bl	9002c3a4 <cleanup_glue>
9002c3b2:	4621      	mov	r1, r4
9002c3b4:	4628      	mov	r0, r5
9002c3b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002c3ba:	f7ff bb97 	b.w	9002baec <_free_r>
	...

9002c3c0 <_reclaim_reent>:
9002c3c0:	4b2c      	ldr	r3, [pc, #176]	; (9002c474 <_reclaim_reent+0xb4>)
9002c3c2:	681b      	ldr	r3, [r3, #0]
9002c3c4:	4283      	cmp	r3, r0
9002c3c6:	b570      	push	{r4, r5, r6, lr}
9002c3c8:	4604      	mov	r4, r0
9002c3ca:	d051      	beq.n	9002c470 <_reclaim_reent+0xb0>
9002c3cc:	6a43      	ldr	r3, [r0, #36]	; 0x24
9002c3ce:	b143      	cbz	r3, 9002c3e2 <_reclaim_reent+0x22>
9002c3d0:	68db      	ldr	r3, [r3, #12]
9002c3d2:	2b00      	cmp	r3, #0
9002c3d4:	d14a      	bne.n	9002c46c <_reclaim_reent+0xac>
9002c3d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
9002c3d8:	6819      	ldr	r1, [r3, #0]
9002c3da:	b111      	cbz	r1, 9002c3e2 <_reclaim_reent+0x22>
9002c3dc:	4620      	mov	r0, r4
9002c3de:	f7ff fb85 	bl	9002baec <_free_r>
9002c3e2:	6961      	ldr	r1, [r4, #20]
9002c3e4:	b111      	cbz	r1, 9002c3ec <_reclaim_reent+0x2c>
9002c3e6:	4620      	mov	r0, r4
9002c3e8:	f7ff fb80 	bl	9002baec <_free_r>
9002c3ec:	6a61      	ldr	r1, [r4, #36]	; 0x24
9002c3ee:	b111      	cbz	r1, 9002c3f6 <_reclaim_reent+0x36>
9002c3f0:	4620      	mov	r0, r4
9002c3f2:	f7ff fb7b 	bl	9002baec <_free_r>
9002c3f6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
9002c3f8:	b111      	cbz	r1, 9002c400 <_reclaim_reent+0x40>
9002c3fa:	4620      	mov	r0, r4
9002c3fc:	f7ff fb76 	bl	9002baec <_free_r>
9002c400:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9002c402:	b111      	cbz	r1, 9002c40a <_reclaim_reent+0x4a>
9002c404:	4620      	mov	r0, r4
9002c406:	f7ff fb71 	bl	9002baec <_free_r>
9002c40a:	6c21      	ldr	r1, [r4, #64]	; 0x40
9002c40c:	b111      	cbz	r1, 9002c414 <_reclaim_reent+0x54>
9002c40e:	4620      	mov	r0, r4
9002c410:	f7ff fb6c 	bl	9002baec <_free_r>
9002c414:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9002c416:	b111      	cbz	r1, 9002c41e <_reclaim_reent+0x5e>
9002c418:	4620      	mov	r0, r4
9002c41a:	f7ff fb67 	bl	9002baec <_free_r>
9002c41e:	6da1      	ldr	r1, [r4, #88]	; 0x58
9002c420:	b111      	cbz	r1, 9002c428 <_reclaim_reent+0x68>
9002c422:	4620      	mov	r0, r4
9002c424:	f7ff fb62 	bl	9002baec <_free_r>
9002c428:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002c42a:	b111      	cbz	r1, 9002c432 <_reclaim_reent+0x72>
9002c42c:	4620      	mov	r0, r4
9002c42e:	f7ff fb5d 	bl	9002baec <_free_r>
9002c432:	69a3      	ldr	r3, [r4, #24]
9002c434:	b1e3      	cbz	r3, 9002c470 <_reclaim_reent+0xb0>
9002c436:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9002c438:	4620      	mov	r0, r4
9002c43a:	4798      	blx	r3
9002c43c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9002c43e:	b1b9      	cbz	r1, 9002c470 <_reclaim_reent+0xb0>
9002c440:	4620      	mov	r0, r4
9002c442:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002c446:	f7ff bfad 	b.w	9002c3a4 <cleanup_glue>
9002c44a:	5949      	ldr	r1, [r1, r5]
9002c44c:	b941      	cbnz	r1, 9002c460 <_reclaim_reent+0xa0>
9002c44e:	3504      	adds	r5, #4
9002c450:	6a63      	ldr	r3, [r4, #36]	; 0x24
9002c452:	2d80      	cmp	r5, #128	; 0x80
9002c454:	68d9      	ldr	r1, [r3, #12]
9002c456:	d1f8      	bne.n	9002c44a <_reclaim_reent+0x8a>
9002c458:	4620      	mov	r0, r4
9002c45a:	f7ff fb47 	bl	9002baec <_free_r>
9002c45e:	e7ba      	b.n	9002c3d6 <_reclaim_reent+0x16>
9002c460:	680e      	ldr	r6, [r1, #0]
9002c462:	4620      	mov	r0, r4
9002c464:	f7ff fb42 	bl	9002baec <_free_r>
9002c468:	4631      	mov	r1, r6
9002c46a:	e7ef      	b.n	9002c44c <_reclaim_reent+0x8c>
9002c46c:	2500      	movs	r5, #0
9002c46e:	e7ef      	b.n	9002c450 <_reclaim_reent+0x90>
9002c470:	bd70      	pop	{r4, r5, r6, pc}
9002c472:	bf00      	nop
9002c474:	240000e0 	.word	0x240000e0

9002c478 <_sbrk_r>:
9002c478:	b538      	push	{r3, r4, r5, lr}
9002c47a:	4d06      	ldr	r5, [pc, #24]	; (9002c494 <_sbrk_r+0x1c>)
9002c47c:	2300      	movs	r3, #0
9002c47e:	4604      	mov	r4, r0
9002c480:	4608      	mov	r0, r1
9002c482:	602b      	str	r3, [r5, #0]
9002c484:	f7d9 f856 	bl	90005534 <_sbrk>
9002c488:	1c43      	adds	r3, r0, #1
9002c48a:	d102      	bne.n	9002c492 <_sbrk_r+0x1a>
9002c48c:	682b      	ldr	r3, [r5, #0]
9002c48e:	b103      	cbz	r3, 9002c492 <_sbrk_r+0x1a>
9002c490:	6023      	str	r3, [r4, #0]
9002c492:	bd38      	pop	{r3, r4, r5, pc}
9002c494:	24029044 	.word	0x24029044

9002c498 <_raise_r>:
9002c498:	291f      	cmp	r1, #31
9002c49a:	b538      	push	{r3, r4, r5, lr}
9002c49c:	4604      	mov	r4, r0
9002c49e:	460d      	mov	r5, r1
9002c4a0:	d904      	bls.n	9002c4ac <_raise_r+0x14>
9002c4a2:	2316      	movs	r3, #22
9002c4a4:	6003      	str	r3, [r0, #0]
9002c4a6:	f04f 30ff 	mov.w	r0, #4294967295
9002c4aa:	bd38      	pop	{r3, r4, r5, pc}
9002c4ac:	6c42      	ldr	r2, [r0, #68]	; 0x44
9002c4ae:	b112      	cbz	r2, 9002c4b6 <_raise_r+0x1e>
9002c4b0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002c4b4:	b94b      	cbnz	r3, 9002c4ca <_raise_r+0x32>
9002c4b6:	4620      	mov	r0, r4
9002c4b8:	f000 f830 	bl	9002c51c <_getpid_r>
9002c4bc:	462a      	mov	r2, r5
9002c4be:	4601      	mov	r1, r0
9002c4c0:	4620      	mov	r0, r4
9002c4c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002c4c6:	f000 b817 	b.w	9002c4f8 <_kill_r>
9002c4ca:	2b01      	cmp	r3, #1
9002c4cc:	d00a      	beq.n	9002c4e4 <_raise_r+0x4c>
9002c4ce:	1c59      	adds	r1, r3, #1
9002c4d0:	d103      	bne.n	9002c4da <_raise_r+0x42>
9002c4d2:	2316      	movs	r3, #22
9002c4d4:	6003      	str	r3, [r0, #0]
9002c4d6:	2001      	movs	r0, #1
9002c4d8:	e7e7      	b.n	9002c4aa <_raise_r+0x12>
9002c4da:	2400      	movs	r4, #0
9002c4dc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
9002c4e0:	4628      	mov	r0, r5
9002c4e2:	4798      	blx	r3
9002c4e4:	2000      	movs	r0, #0
9002c4e6:	e7e0      	b.n	9002c4aa <_raise_r+0x12>

9002c4e8 <raise>:
9002c4e8:	4b02      	ldr	r3, [pc, #8]	; (9002c4f4 <raise+0xc>)
9002c4ea:	4601      	mov	r1, r0
9002c4ec:	6818      	ldr	r0, [r3, #0]
9002c4ee:	f7ff bfd3 	b.w	9002c498 <_raise_r>
9002c4f2:	bf00      	nop
9002c4f4:	240000e0 	.word	0x240000e0

9002c4f8 <_kill_r>:
9002c4f8:	b538      	push	{r3, r4, r5, lr}
9002c4fa:	4d07      	ldr	r5, [pc, #28]	; (9002c518 <_kill_r+0x20>)
9002c4fc:	2300      	movs	r3, #0
9002c4fe:	4604      	mov	r4, r0
9002c500:	4608      	mov	r0, r1
9002c502:	4611      	mov	r1, r2
9002c504:	602b      	str	r3, [r5, #0]
9002c506:	f7d8 ffdb 	bl	900054c0 <_kill>
9002c50a:	1c43      	adds	r3, r0, #1
9002c50c:	d102      	bne.n	9002c514 <_kill_r+0x1c>
9002c50e:	682b      	ldr	r3, [r5, #0]
9002c510:	b103      	cbz	r3, 9002c514 <_kill_r+0x1c>
9002c512:	6023      	str	r3, [r4, #0]
9002c514:	bd38      	pop	{r3, r4, r5, pc}
9002c516:	bf00      	nop
9002c518:	24029044 	.word	0x24029044

9002c51c <_getpid_r>:
9002c51c:	f7d8 bfce 	b.w	900054bc <_getpid>

9002c520 <__sread>:
9002c520:	b510      	push	{r4, lr}
9002c522:	460c      	mov	r4, r1
9002c524:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c528:	f000 fadc 	bl	9002cae4 <_read_r>
9002c52c:	2800      	cmp	r0, #0
9002c52e:	bfab      	itete	ge
9002c530:	6d63      	ldrge	r3, [r4, #84]	; 0x54
9002c532:	89a3      	ldrhlt	r3, [r4, #12]
9002c534:	181b      	addge	r3, r3, r0
9002c536:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
9002c53a:	bfac      	ite	ge
9002c53c:	6563      	strge	r3, [r4, #84]	; 0x54
9002c53e:	81a3      	strhlt	r3, [r4, #12]
9002c540:	bd10      	pop	{r4, pc}

9002c542 <__swrite>:
9002c542:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002c546:	461f      	mov	r7, r3
9002c548:	898b      	ldrh	r3, [r1, #12]
9002c54a:	05db      	lsls	r3, r3, #23
9002c54c:	4605      	mov	r5, r0
9002c54e:	460c      	mov	r4, r1
9002c550:	4616      	mov	r6, r2
9002c552:	d505      	bpl.n	9002c560 <__swrite+0x1e>
9002c554:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c558:	2302      	movs	r3, #2
9002c55a:	2200      	movs	r2, #0
9002c55c:	f000 fa3e 	bl	9002c9dc <_lseek_r>
9002c560:	89a3      	ldrh	r3, [r4, #12]
9002c562:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002c566:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9002c56a:	81a3      	strh	r3, [r4, #12]
9002c56c:	4632      	mov	r2, r6
9002c56e:	463b      	mov	r3, r7
9002c570:	4628      	mov	r0, r5
9002c572:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002c576:	f000 b87d 	b.w	9002c674 <_write_r>

9002c57a <__sseek>:
9002c57a:	b510      	push	{r4, lr}
9002c57c:	460c      	mov	r4, r1
9002c57e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c582:	f000 fa2b 	bl	9002c9dc <_lseek_r>
9002c586:	1c43      	adds	r3, r0, #1
9002c588:	89a3      	ldrh	r3, [r4, #12]
9002c58a:	bf15      	itete	ne
9002c58c:	6560      	strne	r0, [r4, #84]	; 0x54
9002c58e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
9002c592:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
9002c596:	81a3      	strheq	r3, [r4, #12]
9002c598:	bf18      	it	ne
9002c59a:	81a3      	strhne	r3, [r4, #12]
9002c59c:	bd10      	pop	{r4, pc}

9002c59e <__sclose>:
9002c59e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c5a2:	f000 b949 	b.w	9002c838 <_close_r>

9002c5a6 <strncmp>:
9002c5a6:	b510      	push	{r4, lr}
9002c5a8:	b17a      	cbz	r2, 9002c5ca <strncmp+0x24>
9002c5aa:	4603      	mov	r3, r0
9002c5ac:	3901      	subs	r1, #1
9002c5ae:	1884      	adds	r4, r0, r2
9002c5b0:	f813 0b01 	ldrb.w	r0, [r3], #1
9002c5b4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
9002c5b8:	4290      	cmp	r0, r2
9002c5ba:	d101      	bne.n	9002c5c0 <strncmp+0x1a>
9002c5bc:	42a3      	cmp	r3, r4
9002c5be:	d101      	bne.n	9002c5c4 <strncmp+0x1e>
9002c5c0:	1a80      	subs	r0, r0, r2
9002c5c2:	bd10      	pop	{r4, pc}
9002c5c4:	2800      	cmp	r0, #0
9002c5c6:	d1f3      	bne.n	9002c5b0 <strncmp+0xa>
9002c5c8:	e7fa      	b.n	9002c5c0 <strncmp+0x1a>
9002c5ca:	4610      	mov	r0, r2
9002c5cc:	e7f9      	b.n	9002c5c2 <strncmp+0x1c>
	...

9002c5d0 <__swbuf_r>:
9002c5d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002c5d2:	460e      	mov	r6, r1
9002c5d4:	4614      	mov	r4, r2
9002c5d6:	4605      	mov	r5, r0
9002c5d8:	b118      	cbz	r0, 9002c5e2 <__swbuf_r+0x12>
9002c5da:	6983      	ldr	r3, [r0, #24]
9002c5dc:	b90b      	cbnz	r3, 9002c5e2 <__swbuf_r+0x12>
9002c5de:	f7ff f987 	bl	9002b8f0 <__sinit>
9002c5e2:	4b21      	ldr	r3, [pc, #132]	; (9002c668 <__swbuf_r+0x98>)
9002c5e4:	429c      	cmp	r4, r3
9002c5e6:	d12b      	bne.n	9002c640 <__swbuf_r+0x70>
9002c5e8:	686c      	ldr	r4, [r5, #4]
9002c5ea:	69a3      	ldr	r3, [r4, #24]
9002c5ec:	60a3      	str	r3, [r4, #8]
9002c5ee:	89a3      	ldrh	r3, [r4, #12]
9002c5f0:	071a      	lsls	r2, r3, #28
9002c5f2:	d52f      	bpl.n	9002c654 <__swbuf_r+0x84>
9002c5f4:	6923      	ldr	r3, [r4, #16]
9002c5f6:	b36b      	cbz	r3, 9002c654 <__swbuf_r+0x84>
9002c5f8:	6923      	ldr	r3, [r4, #16]
9002c5fa:	6820      	ldr	r0, [r4, #0]
9002c5fc:	1ac0      	subs	r0, r0, r3
9002c5fe:	6963      	ldr	r3, [r4, #20]
9002c600:	b2f6      	uxtb	r6, r6
9002c602:	4283      	cmp	r3, r0
9002c604:	4637      	mov	r7, r6
9002c606:	dc04      	bgt.n	9002c612 <__swbuf_r+0x42>
9002c608:	4621      	mov	r1, r4
9002c60a:	4628      	mov	r0, r5
9002c60c:	f000 f9aa 	bl	9002c964 <_fflush_r>
9002c610:	bb30      	cbnz	r0, 9002c660 <__swbuf_r+0x90>
9002c612:	68a3      	ldr	r3, [r4, #8]
9002c614:	3b01      	subs	r3, #1
9002c616:	60a3      	str	r3, [r4, #8]
9002c618:	6823      	ldr	r3, [r4, #0]
9002c61a:	1c5a      	adds	r2, r3, #1
9002c61c:	6022      	str	r2, [r4, #0]
9002c61e:	701e      	strb	r6, [r3, #0]
9002c620:	6963      	ldr	r3, [r4, #20]
9002c622:	3001      	adds	r0, #1
9002c624:	4283      	cmp	r3, r0
9002c626:	d004      	beq.n	9002c632 <__swbuf_r+0x62>
9002c628:	89a3      	ldrh	r3, [r4, #12]
9002c62a:	07db      	lsls	r3, r3, #31
9002c62c:	d506      	bpl.n	9002c63c <__swbuf_r+0x6c>
9002c62e:	2e0a      	cmp	r6, #10
9002c630:	d104      	bne.n	9002c63c <__swbuf_r+0x6c>
9002c632:	4621      	mov	r1, r4
9002c634:	4628      	mov	r0, r5
9002c636:	f000 f995 	bl	9002c964 <_fflush_r>
9002c63a:	b988      	cbnz	r0, 9002c660 <__swbuf_r+0x90>
9002c63c:	4638      	mov	r0, r7
9002c63e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002c640:	4b0a      	ldr	r3, [pc, #40]	; (9002c66c <__swbuf_r+0x9c>)
9002c642:	429c      	cmp	r4, r3
9002c644:	d101      	bne.n	9002c64a <__swbuf_r+0x7a>
9002c646:	68ac      	ldr	r4, [r5, #8]
9002c648:	e7cf      	b.n	9002c5ea <__swbuf_r+0x1a>
9002c64a:	4b09      	ldr	r3, [pc, #36]	; (9002c670 <__swbuf_r+0xa0>)
9002c64c:	429c      	cmp	r4, r3
9002c64e:	bf08      	it	eq
9002c650:	68ec      	ldreq	r4, [r5, #12]
9002c652:	e7ca      	b.n	9002c5ea <__swbuf_r+0x1a>
9002c654:	4621      	mov	r1, r4
9002c656:	4628      	mov	r0, r5
9002c658:	f000 f81e 	bl	9002c698 <__swsetup_r>
9002c65c:	2800      	cmp	r0, #0
9002c65e:	d0cb      	beq.n	9002c5f8 <__swbuf_r+0x28>
9002c660:	f04f 37ff 	mov.w	r7, #4294967295
9002c664:	e7ea      	b.n	9002c63c <__swbuf_r+0x6c>
9002c666:	bf00      	nop
9002c668:	9003123c 	.word	0x9003123c
9002c66c:	9003125c 	.word	0x9003125c
9002c670:	9003121c 	.word	0x9003121c

9002c674 <_write_r>:
9002c674:	b538      	push	{r3, r4, r5, lr}
9002c676:	4d07      	ldr	r5, [pc, #28]	; (9002c694 <_write_r+0x20>)
9002c678:	4604      	mov	r4, r0
9002c67a:	4608      	mov	r0, r1
9002c67c:	4611      	mov	r1, r2
9002c67e:	2200      	movs	r2, #0
9002c680:	602a      	str	r2, [r5, #0]
9002c682:	461a      	mov	r2, r3
9002c684:	f7d8 ff3a 	bl	900054fc <_write>
9002c688:	1c43      	adds	r3, r0, #1
9002c68a:	d102      	bne.n	9002c692 <_write_r+0x1e>
9002c68c:	682b      	ldr	r3, [r5, #0]
9002c68e:	b103      	cbz	r3, 9002c692 <_write_r+0x1e>
9002c690:	6023      	str	r3, [r4, #0]
9002c692:	bd38      	pop	{r3, r4, r5, pc}
9002c694:	24029044 	.word	0x24029044

9002c698 <__swsetup_r>:
9002c698:	4b32      	ldr	r3, [pc, #200]	; (9002c764 <__swsetup_r+0xcc>)
9002c69a:	b570      	push	{r4, r5, r6, lr}
9002c69c:	681d      	ldr	r5, [r3, #0]
9002c69e:	4606      	mov	r6, r0
9002c6a0:	460c      	mov	r4, r1
9002c6a2:	b125      	cbz	r5, 9002c6ae <__swsetup_r+0x16>
9002c6a4:	69ab      	ldr	r3, [r5, #24]
9002c6a6:	b913      	cbnz	r3, 9002c6ae <__swsetup_r+0x16>
9002c6a8:	4628      	mov	r0, r5
9002c6aa:	f7ff f921 	bl	9002b8f0 <__sinit>
9002c6ae:	4b2e      	ldr	r3, [pc, #184]	; (9002c768 <__swsetup_r+0xd0>)
9002c6b0:	429c      	cmp	r4, r3
9002c6b2:	d10f      	bne.n	9002c6d4 <__swsetup_r+0x3c>
9002c6b4:	686c      	ldr	r4, [r5, #4]
9002c6b6:	89a3      	ldrh	r3, [r4, #12]
9002c6b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002c6bc:	0719      	lsls	r1, r3, #28
9002c6be:	d42c      	bmi.n	9002c71a <__swsetup_r+0x82>
9002c6c0:	06dd      	lsls	r5, r3, #27
9002c6c2:	d411      	bmi.n	9002c6e8 <__swsetup_r+0x50>
9002c6c4:	2309      	movs	r3, #9
9002c6c6:	6033      	str	r3, [r6, #0]
9002c6c8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
9002c6cc:	81a3      	strh	r3, [r4, #12]
9002c6ce:	f04f 30ff 	mov.w	r0, #4294967295
9002c6d2:	e03e      	b.n	9002c752 <__swsetup_r+0xba>
9002c6d4:	4b25      	ldr	r3, [pc, #148]	; (9002c76c <__swsetup_r+0xd4>)
9002c6d6:	429c      	cmp	r4, r3
9002c6d8:	d101      	bne.n	9002c6de <__swsetup_r+0x46>
9002c6da:	68ac      	ldr	r4, [r5, #8]
9002c6dc:	e7eb      	b.n	9002c6b6 <__swsetup_r+0x1e>
9002c6de:	4b24      	ldr	r3, [pc, #144]	; (9002c770 <__swsetup_r+0xd8>)
9002c6e0:	429c      	cmp	r4, r3
9002c6e2:	bf08      	it	eq
9002c6e4:	68ec      	ldreq	r4, [r5, #12]
9002c6e6:	e7e6      	b.n	9002c6b6 <__swsetup_r+0x1e>
9002c6e8:	0758      	lsls	r0, r3, #29
9002c6ea:	d512      	bpl.n	9002c712 <__swsetup_r+0x7a>
9002c6ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002c6ee:	b141      	cbz	r1, 9002c702 <__swsetup_r+0x6a>
9002c6f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002c6f4:	4299      	cmp	r1, r3
9002c6f6:	d002      	beq.n	9002c6fe <__swsetup_r+0x66>
9002c6f8:	4630      	mov	r0, r6
9002c6fa:	f7ff f9f7 	bl	9002baec <_free_r>
9002c6fe:	2300      	movs	r3, #0
9002c700:	6363      	str	r3, [r4, #52]	; 0x34
9002c702:	89a3      	ldrh	r3, [r4, #12]
9002c704:	f023 0324 	bic.w	r3, r3, #36	; 0x24
9002c708:	81a3      	strh	r3, [r4, #12]
9002c70a:	2300      	movs	r3, #0
9002c70c:	6063      	str	r3, [r4, #4]
9002c70e:	6923      	ldr	r3, [r4, #16]
9002c710:	6023      	str	r3, [r4, #0]
9002c712:	89a3      	ldrh	r3, [r4, #12]
9002c714:	f043 0308 	orr.w	r3, r3, #8
9002c718:	81a3      	strh	r3, [r4, #12]
9002c71a:	6923      	ldr	r3, [r4, #16]
9002c71c:	b94b      	cbnz	r3, 9002c732 <__swsetup_r+0x9a>
9002c71e:	89a3      	ldrh	r3, [r4, #12]
9002c720:	f403 7320 	and.w	r3, r3, #640	; 0x280
9002c724:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
9002c728:	d003      	beq.n	9002c732 <__swsetup_r+0x9a>
9002c72a:	4621      	mov	r1, r4
9002c72c:	4630      	mov	r0, r6
9002c72e:	f000 f98d 	bl	9002ca4c <__smakebuf_r>
9002c732:	89a0      	ldrh	r0, [r4, #12]
9002c734:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002c738:	f010 0301 	ands.w	r3, r0, #1
9002c73c:	d00a      	beq.n	9002c754 <__swsetup_r+0xbc>
9002c73e:	2300      	movs	r3, #0
9002c740:	60a3      	str	r3, [r4, #8]
9002c742:	6963      	ldr	r3, [r4, #20]
9002c744:	425b      	negs	r3, r3
9002c746:	61a3      	str	r3, [r4, #24]
9002c748:	6923      	ldr	r3, [r4, #16]
9002c74a:	b943      	cbnz	r3, 9002c75e <__swsetup_r+0xc6>
9002c74c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
9002c750:	d1ba      	bne.n	9002c6c8 <__swsetup_r+0x30>
9002c752:	bd70      	pop	{r4, r5, r6, pc}
9002c754:	0781      	lsls	r1, r0, #30
9002c756:	bf58      	it	pl
9002c758:	6963      	ldrpl	r3, [r4, #20]
9002c75a:	60a3      	str	r3, [r4, #8]
9002c75c:	e7f4      	b.n	9002c748 <__swsetup_r+0xb0>
9002c75e:	2000      	movs	r0, #0
9002c760:	e7f7      	b.n	9002c752 <__swsetup_r+0xba>
9002c762:	bf00      	nop
9002c764:	240000e0 	.word	0x240000e0
9002c768:	9003123c 	.word	0x9003123c
9002c76c:	9003125c 	.word	0x9003125c
9002c770:	9003121c 	.word	0x9003121c

9002c774 <__register_exitproc>:
9002c774:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002c778:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 9002c834 <__register_exitproc+0xc0>
9002c77c:	4606      	mov	r6, r0
9002c77e:	f8d8 0000 	ldr.w	r0, [r8]
9002c782:	461f      	mov	r7, r3
9002c784:	460d      	mov	r5, r1
9002c786:	4691      	mov	r9, r2
9002c788:	f7ff f987 	bl	9002ba9a <__retarget_lock_acquire_recursive>
9002c78c:	4b25      	ldr	r3, [pc, #148]	; (9002c824 <__register_exitproc+0xb0>)
9002c78e:	681c      	ldr	r4, [r3, #0]
9002c790:	b934      	cbnz	r4, 9002c7a0 <__register_exitproc+0x2c>
9002c792:	4c25      	ldr	r4, [pc, #148]	; (9002c828 <__register_exitproc+0xb4>)
9002c794:	601c      	str	r4, [r3, #0]
9002c796:	4b25      	ldr	r3, [pc, #148]	; (9002c82c <__register_exitproc+0xb8>)
9002c798:	b113      	cbz	r3, 9002c7a0 <__register_exitproc+0x2c>
9002c79a:	681b      	ldr	r3, [r3, #0]
9002c79c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
9002c7a0:	6863      	ldr	r3, [r4, #4]
9002c7a2:	2b1f      	cmp	r3, #31
9002c7a4:	dd07      	ble.n	9002c7b6 <__register_exitproc+0x42>
9002c7a6:	f8d8 0000 	ldr.w	r0, [r8]
9002c7aa:	f7ff f978 	bl	9002ba9e <__retarget_lock_release_recursive>
9002c7ae:	f04f 30ff 	mov.w	r0, #4294967295
9002c7b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002c7b6:	b34e      	cbz	r6, 9002c80c <__register_exitproc+0x98>
9002c7b8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9002c7bc:	b988      	cbnz	r0, 9002c7e2 <__register_exitproc+0x6e>
9002c7be:	4b1c      	ldr	r3, [pc, #112]	; (9002c830 <__register_exitproc+0xbc>)
9002c7c0:	b923      	cbnz	r3, 9002c7cc <__register_exitproc+0x58>
9002c7c2:	f8d8 0000 	ldr.w	r0, [r8]
9002c7c6:	f7ff f969 	bl	9002ba9c <__retarget_lock_release>
9002c7ca:	e7f0      	b.n	9002c7ae <__register_exitproc+0x3a>
9002c7cc:	f44f 7084 	mov.w	r0, #264	; 0x108
9002c7d0:	f7ff f966 	bl	9002baa0 <malloc>
9002c7d4:	2800      	cmp	r0, #0
9002c7d6:	d0f4      	beq.n	9002c7c2 <__register_exitproc+0x4e>
9002c7d8:	2300      	movs	r3, #0
9002c7da:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
9002c7de:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
9002c7e2:	6863      	ldr	r3, [r4, #4]
9002c7e4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002c7e8:	2201      	movs	r2, #1
9002c7ea:	409a      	lsls	r2, r3
9002c7ec:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002c7f0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
9002c7f4:	4313      	orrs	r3, r2
9002c7f6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
9002c7fa:	2e02      	cmp	r6, #2
9002c7fc:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
9002c800:	bf02      	ittt	eq
9002c802:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
9002c806:	4313      	orreq	r3, r2
9002c808:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
9002c80c:	6863      	ldr	r3, [r4, #4]
9002c80e:	f8d8 0000 	ldr.w	r0, [r8]
9002c812:	1c5a      	adds	r2, r3, #1
9002c814:	3302      	adds	r3, #2
9002c816:	6062      	str	r2, [r4, #4]
9002c818:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
9002c81c:	f7ff f93f 	bl	9002ba9e <__retarget_lock_release_recursive>
9002c820:	2000      	movs	r0, #0
9002c822:	e7c6      	b.n	9002c7b2 <__register_exitproc+0x3e>
9002c824:	240290d4 	.word	0x240290d4
9002c828:	24029048 	.word	0x24029048
9002c82c:	900312b4 	.word	0x900312b4
9002c830:	9002baa1 	.word	0x9002baa1
9002c834:	24000144 	.word	0x24000144

9002c838 <_close_r>:
9002c838:	b538      	push	{r3, r4, r5, lr}
9002c83a:	4d06      	ldr	r5, [pc, #24]	; (9002c854 <_close_r+0x1c>)
9002c83c:	2300      	movs	r3, #0
9002c83e:	4604      	mov	r4, r0
9002c840:	4608      	mov	r0, r1
9002c842:	602b      	str	r3, [r5, #0]
9002c844:	f7d8 fe68 	bl	90005518 <_close>
9002c848:	1c43      	adds	r3, r0, #1
9002c84a:	d102      	bne.n	9002c852 <_close_r+0x1a>
9002c84c:	682b      	ldr	r3, [r5, #0]
9002c84e:	b103      	cbz	r3, 9002c852 <_close_r+0x1a>
9002c850:	6023      	str	r3, [r4, #0]
9002c852:	bd38      	pop	{r3, r4, r5, pc}
9002c854:	24029044 	.word	0x24029044

9002c858 <__sflush_r>:
9002c858:	898a      	ldrh	r2, [r1, #12]
9002c85a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002c85e:	4605      	mov	r5, r0
9002c860:	0710      	lsls	r0, r2, #28
9002c862:	460c      	mov	r4, r1
9002c864:	d458      	bmi.n	9002c918 <__sflush_r+0xc0>
9002c866:	684b      	ldr	r3, [r1, #4]
9002c868:	2b00      	cmp	r3, #0
9002c86a:	dc05      	bgt.n	9002c878 <__sflush_r+0x20>
9002c86c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9002c86e:	2b00      	cmp	r3, #0
9002c870:	dc02      	bgt.n	9002c878 <__sflush_r+0x20>
9002c872:	2000      	movs	r0, #0
9002c874:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002c878:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002c87a:	2e00      	cmp	r6, #0
9002c87c:	d0f9      	beq.n	9002c872 <__sflush_r+0x1a>
9002c87e:	2300      	movs	r3, #0
9002c880:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
9002c884:	682f      	ldr	r7, [r5, #0]
9002c886:	602b      	str	r3, [r5, #0]
9002c888:	d032      	beq.n	9002c8f0 <__sflush_r+0x98>
9002c88a:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002c88c:	89a3      	ldrh	r3, [r4, #12]
9002c88e:	075a      	lsls	r2, r3, #29
9002c890:	d505      	bpl.n	9002c89e <__sflush_r+0x46>
9002c892:	6863      	ldr	r3, [r4, #4]
9002c894:	1ac0      	subs	r0, r0, r3
9002c896:	6b63      	ldr	r3, [r4, #52]	; 0x34
9002c898:	b10b      	cbz	r3, 9002c89e <__sflush_r+0x46>
9002c89a:	6c23      	ldr	r3, [r4, #64]	; 0x40
9002c89c:	1ac0      	subs	r0, r0, r3
9002c89e:	2300      	movs	r3, #0
9002c8a0:	4602      	mov	r2, r0
9002c8a2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002c8a4:	6a21      	ldr	r1, [r4, #32]
9002c8a6:	4628      	mov	r0, r5
9002c8a8:	47b0      	blx	r6
9002c8aa:	1c43      	adds	r3, r0, #1
9002c8ac:	89a3      	ldrh	r3, [r4, #12]
9002c8ae:	d106      	bne.n	9002c8be <__sflush_r+0x66>
9002c8b0:	6829      	ldr	r1, [r5, #0]
9002c8b2:	291d      	cmp	r1, #29
9002c8b4:	d82c      	bhi.n	9002c910 <__sflush_r+0xb8>
9002c8b6:	4a2a      	ldr	r2, [pc, #168]	; (9002c960 <__sflush_r+0x108>)
9002c8b8:	40ca      	lsrs	r2, r1
9002c8ba:	07d6      	lsls	r6, r2, #31
9002c8bc:	d528      	bpl.n	9002c910 <__sflush_r+0xb8>
9002c8be:	2200      	movs	r2, #0
9002c8c0:	6062      	str	r2, [r4, #4]
9002c8c2:	04d9      	lsls	r1, r3, #19
9002c8c4:	6922      	ldr	r2, [r4, #16]
9002c8c6:	6022      	str	r2, [r4, #0]
9002c8c8:	d504      	bpl.n	9002c8d4 <__sflush_r+0x7c>
9002c8ca:	1c42      	adds	r2, r0, #1
9002c8cc:	d101      	bne.n	9002c8d2 <__sflush_r+0x7a>
9002c8ce:	682b      	ldr	r3, [r5, #0]
9002c8d0:	b903      	cbnz	r3, 9002c8d4 <__sflush_r+0x7c>
9002c8d2:	6560      	str	r0, [r4, #84]	; 0x54
9002c8d4:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002c8d6:	602f      	str	r7, [r5, #0]
9002c8d8:	2900      	cmp	r1, #0
9002c8da:	d0ca      	beq.n	9002c872 <__sflush_r+0x1a>
9002c8dc:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002c8e0:	4299      	cmp	r1, r3
9002c8e2:	d002      	beq.n	9002c8ea <__sflush_r+0x92>
9002c8e4:	4628      	mov	r0, r5
9002c8e6:	f7ff f901 	bl	9002baec <_free_r>
9002c8ea:	2000      	movs	r0, #0
9002c8ec:	6360      	str	r0, [r4, #52]	; 0x34
9002c8ee:	e7c1      	b.n	9002c874 <__sflush_r+0x1c>
9002c8f0:	6a21      	ldr	r1, [r4, #32]
9002c8f2:	2301      	movs	r3, #1
9002c8f4:	4628      	mov	r0, r5
9002c8f6:	47b0      	blx	r6
9002c8f8:	1c41      	adds	r1, r0, #1
9002c8fa:	d1c7      	bne.n	9002c88c <__sflush_r+0x34>
9002c8fc:	682b      	ldr	r3, [r5, #0]
9002c8fe:	2b00      	cmp	r3, #0
9002c900:	d0c4      	beq.n	9002c88c <__sflush_r+0x34>
9002c902:	2b1d      	cmp	r3, #29
9002c904:	d001      	beq.n	9002c90a <__sflush_r+0xb2>
9002c906:	2b16      	cmp	r3, #22
9002c908:	d101      	bne.n	9002c90e <__sflush_r+0xb6>
9002c90a:	602f      	str	r7, [r5, #0]
9002c90c:	e7b1      	b.n	9002c872 <__sflush_r+0x1a>
9002c90e:	89a3      	ldrh	r3, [r4, #12]
9002c910:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002c914:	81a3      	strh	r3, [r4, #12]
9002c916:	e7ad      	b.n	9002c874 <__sflush_r+0x1c>
9002c918:	690f      	ldr	r7, [r1, #16]
9002c91a:	2f00      	cmp	r7, #0
9002c91c:	d0a9      	beq.n	9002c872 <__sflush_r+0x1a>
9002c91e:	0793      	lsls	r3, r2, #30
9002c920:	680e      	ldr	r6, [r1, #0]
9002c922:	bf08      	it	eq
9002c924:	694b      	ldreq	r3, [r1, #20]
9002c926:	600f      	str	r7, [r1, #0]
9002c928:	bf18      	it	ne
9002c92a:	2300      	movne	r3, #0
9002c92c:	eba6 0807 	sub.w	r8, r6, r7
9002c930:	608b      	str	r3, [r1, #8]
9002c932:	f1b8 0f00 	cmp.w	r8, #0
9002c936:	dd9c      	ble.n	9002c872 <__sflush_r+0x1a>
9002c938:	6a21      	ldr	r1, [r4, #32]
9002c93a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
9002c93c:	4643      	mov	r3, r8
9002c93e:	463a      	mov	r2, r7
9002c940:	4628      	mov	r0, r5
9002c942:	47b0      	blx	r6
9002c944:	2800      	cmp	r0, #0
9002c946:	dc06      	bgt.n	9002c956 <__sflush_r+0xfe>
9002c948:	89a3      	ldrh	r3, [r4, #12]
9002c94a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002c94e:	81a3      	strh	r3, [r4, #12]
9002c950:	f04f 30ff 	mov.w	r0, #4294967295
9002c954:	e78e      	b.n	9002c874 <__sflush_r+0x1c>
9002c956:	4407      	add	r7, r0
9002c958:	eba8 0800 	sub.w	r8, r8, r0
9002c95c:	e7e9      	b.n	9002c932 <__sflush_r+0xda>
9002c95e:	bf00      	nop
9002c960:	20400001 	.word	0x20400001

9002c964 <_fflush_r>:
9002c964:	b538      	push	{r3, r4, r5, lr}
9002c966:	690b      	ldr	r3, [r1, #16]
9002c968:	4605      	mov	r5, r0
9002c96a:	460c      	mov	r4, r1
9002c96c:	b913      	cbnz	r3, 9002c974 <_fflush_r+0x10>
9002c96e:	2500      	movs	r5, #0
9002c970:	4628      	mov	r0, r5
9002c972:	bd38      	pop	{r3, r4, r5, pc}
9002c974:	b118      	cbz	r0, 9002c97e <_fflush_r+0x1a>
9002c976:	6983      	ldr	r3, [r0, #24]
9002c978:	b90b      	cbnz	r3, 9002c97e <_fflush_r+0x1a>
9002c97a:	f7fe ffb9 	bl	9002b8f0 <__sinit>
9002c97e:	4b14      	ldr	r3, [pc, #80]	; (9002c9d0 <_fflush_r+0x6c>)
9002c980:	429c      	cmp	r4, r3
9002c982:	d11b      	bne.n	9002c9bc <_fflush_r+0x58>
9002c984:	686c      	ldr	r4, [r5, #4]
9002c986:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c98a:	2b00      	cmp	r3, #0
9002c98c:	d0ef      	beq.n	9002c96e <_fflush_r+0xa>
9002c98e:	6e62      	ldr	r2, [r4, #100]	; 0x64
9002c990:	07d0      	lsls	r0, r2, #31
9002c992:	d404      	bmi.n	9002c99e <_fflush_r+0x3a>
9002c994:	0599      	lsls	r1, r3, #22
9002c996:	d402      	bmi.n	9002c99e <_fflush_r+0x3a>
9002c998:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002c99a:	f7ff f87e 	bl	9002ba9a <__retarget_lock_acquire_recursive>
9002c99e:	4628      	mov	r0, r5
9002c9a0:	4621      	mov	r1, r4
9002c9a2:	f7ff ff59 	bl	9002c858 <__sflush_r>
9002c9a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
9002c9a8:	07da      	lsls	r2, r3, #31
9002c9aa:	4605      	mov	r5, r0
9002c9ac:	d4e0      	bmi.n	9002c970 <_fflush_r+0xc>
9002c9ae:	89a3      	ldrh	r3, [r4, #12]
9002c9b0:	059b      	lsls	r3, r3, #22
9002c9b2:	d4dd      	bmi.n	9002c970 <_fflush_r+0xc>
9002c9b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002c9b6:	f7ff f872 	bl	9002ba9e <__retarget_lock_release_recursive>
9002c9ba:	e7d9      	b.n	9002c970 <_fflush_r+0xc>
9002c9bc:	4b05      	ldr	r3, [pc, #20]	; (9002c9d4 <_fflush_r+0x70>)
9002c9be:	429c      	cmp	r4, r3
9002c9c0:	d101      	bne.n	9002c9c6 <_fflush_r+0x62>
9002c9c2:	68ac      	ldr	r4, [r5, #8]
9002c9c4:	e7df      	b.n	9002c986 <_fflush_r+0x22>
9002c9c6:	4b04      	ldr	r3, [pc, #16]	; (9002c9d8 <_fflush_r+0x74>)
9002c9c8:	429c      	cmp	r4, r3
9002c9ca:	bf08      	it	eq
9002c9cc:	68ec      	ldreq	r4, [r5, #12]
9002c9ce:	e7da      	b.n	9002c986 <_fflush_r+0x22>
9002c9d0:	9003123c 	.word	0x9003123c
9002c9d4:	9003125c 	.word	0x9003125c
9002c9d8:	9003121c 	.word	0x9003121c

9002c9dc <_lseek_r>:
9002c9dc:	b538      	push	{r3, r4, r5, lr}
9002c9de:	4d07      	ldr	r5, [pc, #28]	; (9002c9fc <_lseek_r+0x20>)
9002c9e0:	4604      	mov	r4, r0
9002c9e2:	4608      	mov	r0, r1
9002c9e4:	4611      	mov	r1, r2
9002c9e6:	2200      	movs	r2, #0
9002c9e8:	602a      	str	r2, [r5, #0]
9002c9ea:	461a      	mov	r2, r3
9002c9ec:	f7d8 fda0 	bl	90005530 <_lseek>
9002c9f0:	1c43      	adds	r3, r0, #1
9002c9f2:	d102      	bne.n	9002c9fa <_lseek_r+0x1e>
9002c9f4:	682b      	ldr	r3, [r5, #0]
9002c9f6:	b103      	cbz	r3, 9002c9fa <_lseek_r+0x1e>
9002c9f8:	6023      	str	r3, [r4, #0]
9002c9fa:	bd38      	pop	{r3, r4, r5, pc}
9002c9fc:	24029044 	.word	0x24029044

9002ca00 <__swhatbuf_r>:
9002ca00:	b570      	push	{r4, r5, r6, lr}
9002ca02:	460e      	mov	r6, r1
9002ca04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002ca08:	2900      	cmp	r1, #0
9002ca0a:	b096      	sub	sp, #88	; 0x58
9002ca0c:	4614      	mov	r4, r2
9002ca0e:	461d      	mov	r5, r3
9002ca10:	da08      	bge.n	9002ca24 <__swhatbuf_r+0x24>
9002ca12:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
9002ca16:	2200      	movs	r2, #0
9002ca18:	602a      	str	r2, [r5, #0]
9002ca1a:	061a      	lsls	r2, r3, #24
9002ca1c:	d410      	bmi.n	9002ca40 <__swhatbuf_r+0x40>
9002ca1e:	f44f 6380 	mov.w	r3, #1024	; 0x400
9002ca22:	e00e      	b.n	9002ca42 <__swhatbuf_r+0x42>
9002ca24:	466a      	mov	r2, sp
9002ca26:	f000 f86f 	bl	9002cb08 <_fstat_r>
9002ca2a:	2800      	cmp	r0, #0
9002ca2c:	dbf1      	blt.n	9002ca12 <__swhatbuf_r+0x12>
9002ca2e:	9a01      	ldr	r2, [sp, #4]
9002ca30:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
9002ca34:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
9002ca38:	425a      	negs	r2, r3
9002ca3a:	415a      	adcs	r2, r3
9002ca3c:	602a      	str	r2, [r5, #0]
9002ca3e:	e7ee      	b.n	9002ca1e <__swhatbuf_r+0x1e>
9002ca40:	2340      	movs	r3, #64	; 0x40
9002ca42:	2000      	movs	r0, #0
9002ca44:	6023      	str	r3, [r4, #0]
9002ca46:	b016      	add	sp, #88	; 0x58
9002ca48:	bd70      	pop	{r4, r5, r6, pc}
	...

9002ca4c <__smakebuf_r>:
9002ca4c:	898b      	ldrh	r3, [r1, #12]
9002ca4e:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002ca50:	079d      	lsls	r5, r3, #30
9002ca52:	4606      	mov	r6, r0
9002ca54:	460c      	mov	r4, r1
9002ca56:	d507      	bpl.n	9002ca68 <__smakebuf_r+0x1c>
9002ca58:	f104 0347 	add.w	r3, r4, #71	; 0x47
9002ca5c:	6023      	str	r3, [r4, #0]
9002ca5e:	6123      	str	r3, [r4, #16]
9002ca60:	2301      	movs	r3, #1
9002ca62:	6163      	str	r3, [r4, #20]
9002ca64:	b002      	add	sp, #8
9002ca66:	bd70      	pop	{r4, r5, r6, pc}
9002ca68:	ab01      	add	r3, sp, #4
9002ca6a:	466a      	mov	r2, sp
9002ca6c:	f7ff ffc8 	bl	9002ca00 <__swhatbuf_r>
9002ca70:	9900      	ldr	r1, [sp, #0]
9002ca72:	4605      	mov	r5, r0
9002ca74:	4630      	mov	r0, r6
9002ca76:	f7ff f8a5 	bl	9002bbc4 <_malloc_r>
9002ca7a:	b948      	cbnz	r0, 9002ca90 <__smakebuf_r+0x44>
9002ca7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002ca80:	059a      	lsls	r2, r3, #22
9002ca82:	d4ef      	bmi.n	9002ca64 <__smakebuf_r+0x18>
9002ca84:	f023 0303 	bic.w	r3, r3, #3
9002ca88:	f043 0302 	orr.w	r3, r3, #2
9002ca8c:	81a3      	strh	r3, [r4, #12]
9002ca8e:	e7e3      	b.n	9002ca58 <__smakebuf_r+0xc>
9002ca90:	4b0d      	ldr	r3, [pc, #52]	; (9002cac8 <__smakebuf_r+0x7c>)
9002ca92:	62b3      	str	r3, [r6, #40]	; 0x28
9002ca94:	89a3      	ldrh	r3, [r4, #12]
9002ca96:	6020      	str	r0, [r4, #0]
9002ca98:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9002ca9c:	81a3      	strh	r3, [r4, #12]
9002ca9e:	9b00      	ldr	r3, [sp, #0]
9002caa0:	6163      	str	r3, [r4, #20]
9002caa2:	9b01      	ldr	r3, [sp, #4]
9002caa4:	6120      	str	r0, [r4, #16]
9002caa6:	b15b      	cbz	r3, 9002cac0 <__smakebuf_r+0x74>
9002caa8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002caac:	4630      	mov	r0, r6
9002caae:	f000 f83d 	bl	9002cb2c <_isatty_r>
9002cab2:	b128      	cbz	r0, 9002cac0 <__smakebuf_r+0x74>
9002cab4:	89a3      	ldrh	r3, [r4, #12]
9002cab6:	f023 0303 	bic.w	r3, r3, #3
9002caba:	f043 0301 	orr.w	r3, r3, #1
9002cabe:	81a3      	strh	r3, [r4, #12]
9002cac0:	89a0      	ldrh	r0, [r4, #12]
9002cac2:	4305      	orrs	r5, r0
9002cac4:	81a5      	strh	r5, [r4, #12]
9002cac6:	e7cd      	b.n	9002ca64 <__smakebuf_r+0x18>
9002cac8:	9002b889 	.word	0x9002b889

9002cacc <__malloc_lock>:
9002cacc:	4801      	ldr	r0, [pc, #4]	; (9002cad4 <__malloc_lock+0x8>)
9002cace:	f7fe bfe4 	b.w	9002ba9a <__retarget_lock_acquire_recursive>
9002cad2:	bf00      	nop
9002cad4:	24028f31 	.word	0x24028f31

9002cad8 <__malloc_unlock>:
9002cad8:	4801      	ldr	r0, [pc, #4]	; (9002cae0 <__malloc_unlock+0x8>)
9002cada:	f7fe bfe0 	b.w	9002ba9e <__retarget_lock_release_recursive>
9002cade:	bf00      	nop
9002cae0:	24028f31 	.word	0x24028f31

9002cae4 <_read_r>:
9002cae4:	b538      	push	{r3, r4, r5, lr}
9002cae6:	4d07      	ldr	r5, [pc, #28]	; (9002cb04 <_read_r+0x20>)
9002cae8:	4604      	mov	r4, r0
9002caea:	4608      	mov	r0, r1
9002caec:	4611      	mov	r1, r2
9002caee:	2200      	movs	r2, #0
9002caf0:	602a      	str	r2, [r5, #0]
9002caf2:	461a      	mov	r2, r3
9002caf4:	f7d8 fcf4 	bl	900054e0 <_read>
9002caf8:	1c43      	adds	r3, r0, #1
9002cafa:	d102      	bne.n	9002cb02 <_read_r+0x1e>
9002cafc:	682b      	ldr	r3, [r5, #0]
9002cafe:	b103      	cbz	r3, 9002cb02 <_read_r+0x1e>
9002cb00:	6023      	str	r3, [r4, #0]
9002cb02:	bd38      	pop	{r3, r4, r5, pc}
9002cb04:	24029044 	.word	0x24029044

9002cb08 <_fstat_r>:
9002cb08:	b538      	push	{r3, r4, r5, lr}
9002cb0a:	4d07      	ldr	r5, [pc, #28]	; (9002cb28 <_fstat_r+0x20>)
9002cb0c:	2300      	movs	r3, #0
9002cb0e:	4604      	mov	r4, r0
9002cb10:	4608      	mov	r0, r1
9002cb12:	4611      	mov	r1, r2
9002cb14:	602b      	str	r3, [r5, #0]
9002cb16:	f7d8 fd03 	bl	90005520 <_fstat>
9002cb1a:	1c43      	adds	r3, r0, #1
9002cb1c:	d102      	bne.n	9002cb24 <_fstat_r+0x1c>
9002cb1e:	682b      	ldr	r3, [r5, #0]
9002cb20:	b103      	cbz	r3, 9002cb24 <_fstat_r+0x1c>
9002cb22:	6023      	str	r3, [r4, #0]
9002cb24:	bd38      	pop	{r3, r4, r5, pc}
9002cb26:	bf00      	nop
9002cb28:	24029044 	.word	0x24029044

9002cb2c <_isatty_r>:
9002cb2c:	b538      	push	{r3, r4, r5, lr}
9002cb2e:	4d06      	ldr	r5, [pc, #24]	; (9002cb48 <_isatty_r+0x1c>)
9002cb30:	2300      	movs	r3, #0
9002cb32:	4604      	mov	r4, r0
9002cb34:	4608      	mov	r0, r1
9002cb36:	602b      	str	r3, [r5, #0]
9002cb38:	f7d8 fcf8 	bl	9000552c <_isatty>
9002cb3c:	1c43      	adds	r3, r0, #1
9002cb3e:	d102      	bne.n	9002cb46 <_isatty_r+0x1a>
9002cb40:	682b      	ldr	r3, [r5, #0]
9002cb42:	b103      	cbz	r3, 9002cb46 <_isatty_r+0x1a>
9002cb44:	6023      	str	r3, [r4, #0]
9002cb46:	bd38      	pop	{r3, r4, r5, pc}
9002cb48:	24029044 	.word	0x24029044

9002cb4c <_init>:
9002cb4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002cb4e:	bf00      	nop
9002cb50:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002cb52:	bc08      	pop	{r3}
9002cb54:	469e      	mov	lr, r3
9002cb56:	4770      	bx	lr

9002cb58 <_fini>:
9002cb58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002cb5a:	bf00      	nop
9002cb5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002cb5e:	bc08      	pop	{r3}
9002cb60:	469e      	mov	lr, r3
9002cb62:	4770      	bx	lr
